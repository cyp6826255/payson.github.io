{
  "collections": {
    
      "posts": [{"id":"/2024/01/08/ios","tags":[],"relative_path":"_posts/2024-01-08-ios.md","collection":"posts","content":"<h1 id=\"1背景\">1.背景</h1>\n\n<p>​\t组件化过程中，有一些重复/高频的问题需要解决，倘若手动解决会带来重复劳动的时间损失，以及没有沉淀的效率损失，为了避免上述损失，沉淀一些工具分享。</p>\n\n<h1 id=\"2组件化工具介绍\">2.组件化工具介绍</h1>\n\n<h2 id=\"21-xcode编译错误解决工具\">2.1 Xcode编译错误解决工具</h2>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#!/bin/bash</span>\n\n<span class=\"c\"># [背景]</span>\n<span class=\"c\"># 组件化过程中，经常出现以下编译错误：</span>\n<span class=\"c\"># Build service could not create build operation: unknown error while handling message: MsgHandlingError(message: \"unable to initiate PIF transfer session (operation in progress?)\")</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># author: PaysonChen</span>\n<span class=\"c\"># [目的]</span>\n<span class=\"c\"># 为解决上述错误，需要清理构建索引目录并重启xcode，由于操作重复，考虑抽出shell脚本</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [目录]</span>\n<span class=\"c\">#   - auto_clean.sh</span>\n<span class=\"c\"># [说明]</span>\n<span class=\"c\"># 1、CD[指定xcode构建索引目录]目录</span>\n<span class=\"c\"># 2、递归删除当前文件下所有文件</span>\n<span class=\"c\"># 3、重启xcode</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [参数]</span>\n<span class=\"c\"># 1、参数1，指定xcode构建索引目录</span>\n<span class=\"c\"># 1、参数2，指定要打开的Xcode项目目</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [调用说明]</span>\n<span class=\"c\"># 1、未指定目录，则取当前目录：sh auto_clean.sh</span>\n<span class=\"c\"># 2、指定目录：sh auto_clean.sh /xcode构建索引目录/ /要打开的Xcode项目目录/</span>\n\n<span class=\"c\">#获取当前用户名</span>\n<span class=\"nv\">user_name</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">whoami</span><span class=\"si\">)</span>\n\n<span class=\"nb\">export </span><span class=\"nv\">XcodeDerivedDataPath</span><span class=\"o\">=</span>/Users/<span class=\"nv\">$user_name</span>/Library/Developer/Xcode/DerivedData\n<span class=\"nb\">export </span><span class=\"nv\">XcodeWorkspacePath</span><span class=\"o\">=</span>/Applications/Xcode.app\n\n<span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$1</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n    </span><span class=\"nb\">echo</span> <span class=\"s1\">'///入参1为空，使用默认xcode构建索引目录:'</span><span class=\"k\">${</span><span class=\"nv\">XcodeDerivedDataPath</span><span class=\"k\">}</span>\n<span class=\"k\">else\n    </span><span class=\"nv\">XcodeDerivedDataPath</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'///入参1不为空，xcode构建索引目录:'</span><span class=\"k\">${</span><span class=\"nv\">XcodeDerivedDataPath</span><span class=\"k\">}</span>\n<span class=\"k\">fi\n\nif</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$2</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n    </span><span class=\"nb\">echo</span> <span class=\"s1\">'///入参2为空，使用默认xcode项目目录:'</span><span class=\"k\">${</span><span class=\"nv\">XcodeWorkspacePath</span><span class=\"k\">}</span>\n<span class=\"k\">else\n    </span><span class=\"nv\">XcodeWorkspacePath</span><span class=\"o\">=</span><span class=\"nv\">$2</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'///入参2不为空，xcode项目目录:'</span><span class=\"k\">${</span><span class=\"nv\">XcodeWorkspacePath</span><span class=\"k\">}</span>\n<span class=\"k\">fi</span>\n\n<span class=\"c\">#cd到xcode构建索引目录</span>\n<span class=\"nb\">cd</span>  <span class=\"nv\">$XcodeDerivedDataPath</span>\n\n<span class=\"nv\">exit_status</span><span class=\"o\">=</span><span class=\"nv\">$?</span>\n\n<span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nv\">$exit_status</span> <span class=\"nt\">-ne</span> 0 <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n    </span><span class=\"nb\">echo</span> <span class=\"s1\">'///切换目录失败:'</span><span class=\"k\">${</span><span class=\"nv\">XcodeDerivedDataPath</span><span class=\"k\">}</span>\n    <span class=\"nb\">exit</span> <span class=\"nt\">-1</span>\n<span class=\"k\">else\n    </span><span class=\"nb\">echo</span> <span class=\"s1\">'///切换目录成功:'</span><span class=\"k\">${</span><span class=\"nv\">XcodeDerivedDataPath</span><span class=\"k\">}</span>\n<span class=\"k\">fi</span>\n\n<span class=\"c\">#删除当前目录所有构件索引</span>\n<span class=\"nb\">rm</span> <span class=\"nt\">-rf</span> <span class=\"k\">*</span>\n\n<span class=\"c\">#重启xcode</span>\nkillall Xcode\n\n<span class=\"c\">#休眠一下，不然可能导致重启失败</span>\n<span class=\"nb\">sleep </span>0.1\n\n<span class=\"c\">#重启项目工程</span>\nopen <span class=\"nv\">$XcodeWorkspacePath</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h2 id=\"22-私有组件批量更新工具\">2.2 私有组件批量更新工具</h2>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#!/bin/bash</span>\n\n<span class=\"c\"># 遍历更新当前目录下，子目录git仓库的脚本</span>\n<span class=\"c\"># author: PaysonChen</span>\n<span class=\"c\"># [目的]</span>\n<span class=\"c\"># 组件化建设过程及后续的协同开发中，经常碰到团队人员更新组件库代码及主工程，主工程容易更新，但是随着pod库的增多，每次更新组件库仓库的重复劳动需要被改进</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [目录]</span>\n<span class=\"c\">#   - auto_update_git.sh.sh 遍历更新当前目录下，子目录git仓库的脚本</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [说明]</span>\n<span class=\"c\"># 1、遍历指定目录（若未传参数则为当前目录）下的子目录</span>\n<span class=\"c\"># 2、cd 到子目录</span>\n<span class=\"c\"># 3、检查当前分支</span>\n<span class=\"c\"># 4、拉取远端当前分支</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [参数]</span>\n<span class=\"c\"># 1、参数1，指定目录</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [调用说明]</span>\n<span class=\"c\"># 1、未指定目录，则取当前目录：sh auto_update_git.sh</span>\n<span class=\"c\"># 2、指定目录：sh auto_update_git.sh /User/xxx/xx</span>\n\n\n<span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$1</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n    </span><span class=\"nb\">export </span><span class=\"nv\">dist_path</span><span class=\"o\">=</span><span class=\"k\">*</span>/\n    <span class=\"nb\">echo</span> <span class=\"s1\">'///指定目录 为空:'</span><span class=\"k\">${</span><span class=\"nv\">dist_path</span><span class=\"k\">}</span>\n<span class=\"k\">else\n    </span><span class=\"nb\">export </span><span class=\"nv\">dist_path</span><span class=\"o\">=</span><span class=\"nv\">$1</span>/<span class=\"k\">*</span>/\n    <span class=\"nb\">echo</span> <span class=\"s1\">'///指定目录 不为空:'</span><span class=\"k\">${</span><span class=\"nv\">dist_path</span><span class=\"k\">}</span>\n<span class=\"k\">fi</span>\n    \n<span class=\"c\"># 遍历指定目录的子目录</span>\n<span class=\"k\">for </span><span class=\"nb\">dir </span><span class=\"k\">in</span> <span class=\"k\">${</span><span class=\"nv\">dist_path</span><span class=\"k\">}</span><span class=\"p\">;</span> <span class=\"k\">do\n  </span><span class=\"nb\">cd</span> <span class=\"s2\">\"</span><span class=\"nv\">$dir</span><span class=\"s2\">\"</span>  <span class=\"c\"># 进入子目录</span>\n  <span class=\"nb\">echo</span> <span class=\"s1\">'///进入子目录:'</span><span class=\"k\">${</span><span class=\"nv\">dir</span><span class=\"k\">}</span>\n\n  <span class=\"c\"># 检查是否是git仓库</span>\n  <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-d</span> .git <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n    </span><span class=\"nb\">echo</span> <span class=\"s2\">\"Updating git repository in </span><span class=\"nv\">$dir</span><span class=\"s2\">\"</span>\n    <span class=\"nv\">current_branch</span><span class=\"o\">=</span><span class=\"sb\">`</span>git branch <span class=\"nt\">--show-current</span><span class=\"sb\">`</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"current_branch is </span><span class=\"nv\">$current_branch</span><span class=\"s2\">\"</span>\n\n    git config pull.rebase <span class=\"nb\">false</span> <span class=\"c\"># 合并（缺省策略）</span>\n    git pull origin <span class=\"nv\">$current_branch</span>  <span class=\"c\"># 使用git pull命令更新git仓库</span>\n  <span class=\"k\">else\n    </span><span class=\"nb\">echo</span> <span class=\"s2\">\"Skipping non-git repository in </span><span class=\"nv\">$dir</span><span class=\"s2\">\"</span>\n  <span class=\"k\">fi\n\n  </span><span class=\"nb\">cd</span> ..  <span class=\"c\"># 返回上一级目录</span>\n<span class=\"k\">done</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h2 id=\"23-私有组件批量提交工具\">2.3 私有组件批量提交工具</h2>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#!/bin/bash</span>\n\n<span class=\"c\"># 遍历更新当前目录下，子目录git仓库的脚本</span>\n<span class=\"c\"># author: PaysonChen</span>\n<span class=\"c\"># [目的]</span>\n<span class=\"c\"># 组件化建设过程及后续的协同开发中，经常碰到团队人员更新组件库代码及主工程，主工程容易更新，但是随着pod库的增多，每次更新组件库仓库的重复劳动需要被改进</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [目录]</span>\n<span class=\"c\">#   - auto_commit_git.sh 遍历更新当前目录下，子目录git仓库的脚本</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [说明]</span>\n<span class=\"c\"># 1、遍历指定目录（若未传参数则为当前目录）下的子目录</span>\n<span class=\"c\"># 2、cd 到子目录</span>\n<span class=\"c\"># 3、检查当前分支</span>\n<span class=\"c\"># 4、提交修改</span>\n<span class=\"c\"># 5、commit 、push</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [参数]</span>\n<span class=\"c\"># 1、参数1，指定目录</span>\n<span class=\"c\"># 2、参数2，提交信息</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [调用说明]</span>\n<span class=\"c\"># 1、未指定目录，则取当前目录：sh auto_commit_git.sh</span>\n<span class=\"c\"># 2、指定目录：sh auto_commit_git.sh /User/xxx/xx \"提交信息\"</span>\n\n\n<span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$1</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n    </span><span class=\"nb\">export </span><span class=\"nv\">dist_path</span><span class=\"o\">=</span><span class=\"k\">*</span>/\n    <span class=\"nb\">echo</span> <span class=\"s1\">'///指定目录 为空:'</span><span class=\"k\">${</span><span class=\"nv\">dist_path</span><span class=\"k\">}</span>\n<span class=\"k\">else\n    </span><span class=\"nb\">export </span><span class=\"nv\">dist_path</span><span class=\"o\">=</span><span class=\"nv\">$1</span>/<span class=\"k\">*</span>/\n    <span class=\"nb\">echo</span> <span class=\"s1\">'///指定目录 不为空:'</span><span class=\"k\">${</span><span class=\"nv\">dist_path</span><span class=\"k\">}</span>\n<span class=\"k\">fi\n\n</span><span class=\"nb\">echo</span> <span class=\"s1\">'///指定:'</span><span class=\"nv\">$1</span>\n<span class=\"nb\">echo</span> <span class=\"s1\">'///指定:'</span><span class=\"nv\">$2</span>\n\n<span class=\"c\"># 遍历指定目录的子目录</span>\n<span class=\"k\">for </span><span class=\"nb\">dir </span><span class=\"k\">in</span> <span class=\"k\">${</span><span class=\"nv\">dist_path</span><span class=\"k\">}</span><span class=\"p\">;</span> <span class=\"k\">do\n  </span><span class=\"nb\">cd</span> <span class=\"s2\">\"</span><span class=\"nv\">$dir</span><span class=\"s2\">\"</span>  <span class=\"c\"># 进入子目录</span>\n  <span class=\"nb\">echo</span> <span class=\"s1\">'///进入子目录:'</span><span class=\"k\">${</span><span class=\"nv\">dir</span><span class=\"k\">}</span>\n\n  <span class=\"c\"># 检查是否是git仓库</span>\n  <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-d</span> .git <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n    </span><span class=\"nb\">echo</span> <span class=\"s2\">\"commiting git repository in </span><span class=\"nv\">$dir</span><span class=\"s2\">\"</span>\n    <span class=\"nv\">current_branch</span><span class=\"o\">=</span><span class=\"sb\">`</span>git branch <span class=\"nt\">--show-current</span><span class=\"sb\">`</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"current_branch is </span><span class=\"nv\">$current_branch</span><span class=\"s2\">\"</span>\n    \n    git add <span class=\"nb\">.</span>\n    <span class=\"nv\">msg</span><span class=\"o\">=</span><span class=\"s2\">\"\"</span>\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$2</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nv\">msg</span><span class=\"o\">=</span><span class=\"s2\">\"--update:更新代码\"</span>\n        <span class=\"nb\">echo</span> <span class=\"s1\">'///提交记录 为空:'</span><span class=\"nv\">$msg</span>\n    <span class=\"k\">else\n        </span><span class=\"nv\">msg</span><span class=\"o\">=</span><span class=\"nv\">$2</span>\n        <span class=\"nb\">echo</span> <span class=\"s1\">'///提交记录 不为空:'</span><span class=\"nv\">$msg</span>\n    <span class=\"k\">fi\n\n    </span>git commit <span class=\"nt\">-m</span> <span class=\"s2\">\"</span><span class=\"nv\">$msg</span><span class=\"s2\">\"</span>\n    git push <span class=\"nt\">-f</span> origin master\n  <span class=\"k\">else\n    </span><span class=\"nb\">echo</span> <span class=\"s2\">\"Skipping non-git repository in </span><span class=\"nv\">$dir</span><span class=\"s2\">\"</span>\n  <span class=\"k\">fi\n\n  </span><span class=\"nb\">cd</span> ..  <span class=\"c\"># 返回上一级目录</span>\n<span class=\"k\">done</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h2 id=\"24-私有组件批量发版工具\">2.4 私有组件批量发版工具</h2>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#!/bin/bash</span>\n\n<span class=\"c\"># 遍历当前目录下，私有库自动自增发版</span>\n<span class=\"c\"># author: PaysonChen</span>\n<span class=\"c\"># [目的]</span>\n<span class=\"c\"># 组件化建设过程及后续的协同开发中，有些全局修改需要统一发版</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [目录]</span>\n<span class=\"c\">#   - auto_publish_git.sh  遍历当前目录下，私有库自动自增发版</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [说明]</span>\n<span class=\"c\"># 1、遍历指定目录（若未传参数则为当前目录）下的子目录</span>\n<span class=\"c\"># 2、cd 到子目录</span>\n<span class=\"c\"># 3、检查当前分支</span>\n<span class=\"c\"># 4、自动发版</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [参数]</span>\n<span class=\"c\"># 1、参数1，指定目录</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [调用说明]</span>\n<span class=\"c\"># 1、未指定目录，则取当前目录：sh auto_publish_git.sh</span>\n<span class=\"c\"># 2、指定目录：sh auto_publish_git.sh /User/xxx/xx</span>\n\n\n<span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$1</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n    </span><span class=\"nb\">export </span><span class=\"nv\">dist_path</span><span class=\"o\">=</span><span class=\"k\">*</span>/\n    <span class=\"nb\">echo</span> <span class=\"s1\">'///指定目录 为空:'</span><span class=\"k\">${</span><span class=\"nv\">dist_path</span><span class=\"k\">}</span>\n<span class=\"k\">else\n    </span><span class=\"nb\">export </span><span class=\"nv\">dist_path</span><span class=\"o\">=</span><span class=\"nv\">$1</span>/<span class=\"k\">*</span>/\n    <span class=\"nb\">echo</span> <span class=\"s1\">'///指定目录 不为空:'</span><span class=\"k\">${</span><span class=\"nv\">dist_path</span><span class=\"k\">}</span>\n<span class=\"k\">fi</span>\n    \n<span class=\"c\"># 遍历指定目录的子目录</span>\n<span class=\"k\">for </span><span class=\"nb\">dir </span><span class=\"k\">in</span> <span class=\"k\">${</span><span class=\"nv\">dist_path</span><span class=\"k\">}</span><span class=\"p\">;</span> <span class=\"k\">do\n  </span><span class=\"nb\">cd</span> <span class=\"s2\">\"</span><span class=\"nv\">$dir</span><span class=\"s2\">\"</span>  <span class=\"c\"># 进入子目录</span>\n  <span class=\"nb\">echo</span> <span class=\"s1\">'///进入子目录:'</span><span class=\"k\">${</span><span class=\"nv\">dir</span><span class=\"k\">}</span>\n\n  <span class=\"c\"># 检查是否是git仓库</span>\n  <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-d</span> .git <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n    </span><span class=\"nb\">echo</span> <span class=\"s2\">\"Updating git repository in </span><span class=\"nv\">$dir</span><span class=\"s2\">\"</span>\n    <span class=\"nv\">current_branch</span><span class=\"o\">=</span><span class=\"sb\">`</span>git branch <span class=\"nt\">--show-current</span><span class=\"sb\">`</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"current_branch is </span><span class=\"nv\">$current_branch</span><span class=\"s2\">\"</span>\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$2</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">echo</span> <span class=\"s2\">\"tag 为空，采用自增tag\"</span>\n        pod push\n    <span class=\"k\">else\n        </span><span class=\"nb\">echo</span> <span class=\"s2\">\"tag 不为空，tag=\"</span><span class=\"nv\">$2</span>\n        pod push <span class=\"nv\">$2</span>\n    <span class=\"k\">fi\n  else\n    </span><span class=\"nb\">echo</span> <span class=\"s2\">\"Skipping non-git repository in </span><span class=\"nv\">$dir</span><span class=\"s2\">\"</span>\n  <span class=\"k\">fi\n\n  </span><span class=\"nb\">cd</span> ..  <span class=\"c\"># 返回上一级目录</span>\n<span class=\"k\">done</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>其中 pod push 依赖于cocapods插件（计划在后续文章中讲解）</p>\n\n<h2 id=\"25-私有组件批量发版工具-优化\">2.5 私有组件批量发版工具-优化</h2>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#!/bin/bash</span>\n\n<span class=\"c\"># 遍历当前目录下，当最新提交不是Tag记录时（即有需要发版）才进行的私有库自动自增发版</span>\n<span class=\"c\"># author: PaysonChen</span>\n<span class=\"c\"># [目的]</span>\n<span class=\"c\"># 组件化建设过程及后续的协同开发中，有些全局修改需要统一发版</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [目录]</span>\n<span class=\"c\">#   - auto_tag_if_need_git.sh  遍历当前目录下，私有库根据是否需要发版的逻辑进行自动自增发版</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [说明]</span>\n<span class=\"c\"># 1、遍历指定目录（若未传参数则为当前目录）下的子目录</span>\n<span class=\"c\"># 2、cd 到子目录</span>\n<span class=\"c\"># 3、检查当前分支</span>\n<span class=\"c\"># 4、自动发版</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [参数]</span>\n<span class=\"c\"># 1、参数1，指定目录</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [调用说明]</span>\n<span class=\"c\"># 1、未指定目录，则取当前目录：sh auto_tag_if_need_git.sh</span>\n<span class=\"c\"># 2、指定目录：sh auto_tag_if_need_git.sh /User/xxx/xx</span>\n\n\n<span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$1</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n    </span><span class=\"nb\">export </span><span class=\"nv\">dist_path</span><span class=\"o\">=</span><span class=\"k\">*</span>/\n    <span class=\"nb\">echo</span> <span class=\"s1\">'///指定目录 为空:'</span><span class=\"k\">${</span><span class=\"nv\">dist_path</span><span class=\"k\">}</span>\n<span class=\"k\">else\n    </span><span class=\"nb\">export </span><span class=\"nv\">dist_path</span><span class=\"o\">=</span><span class=\"nv\">$1</span>/<span class=\"k\">*</span>/\n    <span class=\"nb\">echo</span> <span class=\"s1\">'///指定目录 不为空:'</span><span class=\"k\">${</span><span class=\"nv\">dist_path</span><span class=\"k\">}</span>\n<span class=\"k\">fi\n\n\nfunction </span>get_tag<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"nv\">latest_tag</span><span class=\"o\">=</span><span class=\"si\">$(</span>git describe <span class=\"nt\">--exact-match</span> <span class=\"nt\">--tags</span> <span class=\"si\">$(</span>git log <span class=\"nt\">-n1</span> <span class=\"nt\">--pretty</span><span class=\"o\">=</span><span class=\"s1\">'%h'</span><span class=\"si\">)</span> 2&gt;/dev/null<span class=\"si\">)</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">latest_tag</span><span class=\"k\">}</span><span class=\"s2\">\"</span>\n<span class=\"o\">}</span>\n\n<span class=\"k\">function </span>push_if_need<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"k\">if </span>git describe <span class=\"nt\">--exact-match</span> <span class=\"nt\">--tags</span> <span class=\"si\">$(</span>git log <span class=\"nt\">-n1</span> <span class=\"nt\">--pretty</span><span class=\"o\">=</span><span class=\"s1\">'%h'</span><span class=\"si\">)</span> <span class=\"o\">&gt;</span>/dev/null 2&gt;&amp;1<span class=\"p\">;</span> <span class=\"k\">then\n        \n        </span><span class=\"nv\">latest_tag</span><span class=\"o\">=</span><span class=\"si\">$(</span>get_tag<span class=\"si\">)</span>\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"[push_if_need]:最新提交是一个标签（</span><span class=\"k\">${</span><span class=\"nv\">latest_tag</span><span class=\"k\">}</span><span class=\"s2\">）</span><span class=\"nv\">$1</span><span class=\"s2\">。\"</span>\n        <span class=\"k\">return </span>0\n    <span class=\"k\">else\n        </span><span class=\"nv\">latest_tag</span><span class=\"o\">=</span><span class=\"si\">$(</span>get_tag<span class=\"si\">)</span>\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"[push_if_need]:最新提交不是标签（</span><span class=\"k\">${</span><span class=\"nv\">latest_tag</span><span class=\"k\">}</span><span class=\"s2\">）</span><span class=\"nv\">$1</span><span class=\"s2\">。\"</span>\n        pod push\n        <span class=\"nv\">latest_tag</span><span class=\"o\">=</span><span class=\"si\">$(</span>get_tag<span class=\"si\">)</span>\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"[push_if_need]:打包后的标签（</span><span class=\"k\">${</span><span class=\"nv\">latest_tag</span><span class=\"k\">}</span><span class=\"s2\">）</span><span class=\"nv\">$1</span><span class=\"s2\">。\"</span>\n        <span class=\"k\">return </span>1\n    <span class=\"k\">fi</span>\n<span class=\"o\">}</span>\n    \n<span class=\"c\"># 遍历指定目录的子目录</span>\n<span class=\"nv\">allTaged</span><span class=\"o\">=</span><span class=\"s2\">\"\"</span>\n\n<span class=\"k\">for </span><span class=\"nb\">dir </span><span class=\"k\">in</span> <span class=\"k\">${</span><span class=\"nv\">dist_path</span><span class=\"k\">}</span><span class=\"p\">;</span> <span class=\"k\">do\n  </span><span class=\"nb\">cd</span> <span class=\"s2\">\"</span><span class=\"nv\">$dir</span><span class=\"s2\">\"</span>  <span class=\"c\"># 进入子目录</span>\n  <span class=\"nb\">echo</span> <span class=\"s1\">'///进入子目录:'</span><span class=\"k\">${</span><span class=\"nv\">dir</span><span class=\"k\">}</span>\n\n  <span class=\"c\"># 检查是否是git仓库</span>\n  <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-d</span> .git <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n    </span><span class=\"nv\">result</span><span class=\"o\">=</span><span class=\"nb\">false\n    echo</span> <span class=\"s2\">\"Updating git repository in </span><span class=\"nv\">$dir</span><span class=\"s2\">\"</span>\n    <span class=\"nv\">current_branch</span><span class=\"o\">=</span><span class=\"sb\">`</span>git branch <span class=\"nt\">--show-current</span><span class=\"sb\">`</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"current_branch is </span><span class=\"nv\">$current_branch</span><span class=\"s2\">\"</span>\n    \n    git config pull.rebase <span class=\"nb\">false</span> <span class=\"c\"># 合并（缺省策略）</span>\n    git pull origin <span class=\"nv\">$current_branch</span>  <span class=\"c\"># 使用git pull命令更新git仓库</span>\n\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$2</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">echo</span> <span class=\"s2\">\"tag 为空，采用自增tag\"</span>\n<span class=\"c\">#        pod push</span>\n        push_if_need <span class=\"nv\">$dir</span>\n        <span class=\"nv\">result</span><span class=\"o\">=</span><span class=\"nv\">$?</span>\n    \n    <span class=\"k\">else\n        </span><span class=\"nb\">echo</span> <span class=\"s2\">\"tag 不为空，全量发版tag=\"</span><span class=\"nv\">$2</span>\n        pod push <span class=\"nv\">$2</span>\n    <span class=\"k\">fi\n\n\n    if</span> <span class=\"o\">[</span> <span class=\"nv\">$result</span> <span class=\"nt\">-eq</span> 1 <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then</span>\n<span class=\"c\">#        tmp=$allTaged</span>\n        <span class=\"nv\">latest_tag</span><span class=\"o\">=</span><span class=\"si\">$(</span>get_tag<span class=\"si\">)</span>\n\n        <span class=\"nv\">allTaged</span><span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"nv\">$allTaged</span><span class=\"s2\"> </span><span class=\"nv\">$dir$latest_tag</span><span class=\"s2\">\"</span>\n<span class=\"c\">#        echo \"变量是 true。\"$dir</span>\n<span class=\"c\">#        echo \"变量是 true。\"$tmp</span>\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"变量是 true。\"</span><span class=\"nv\">$allTaged</span>\n\n    <span class=\"k\">else\n        </span><span class=\"nb\">echo</span> <span class=\"s2\">\"变量是 false。\"</span>\n    <span class=\"k\">fi\n\n\n  else\n    </span><span class=\"nb\">echo</span> <span class=\"s2\">\"Skipping non-git repository in </span><span class=\"nv\">$dir</span><span class=\"s2\">\"</span>\n  <span class=\"k\">fi\n\n  </span><span class=\"nb\">cd</span> ..  <span class=\"c\"># 返回上一级目录</span>\n<span class=\"k\">done\n\n</span><span class=\"nb\">echo</span> <span class=\"s2\">\"------------------------\"</span>\n<span class=\"nb\">echo</span> <span class=\"s2\">\"allTaged（进行发版的所有组件）： = \"</span><span class=\"nv\">$allTaged</span>\n<span class=\"nb\">echo</span> <span class=\"s2\">\"------------------------\"</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h1 id=\"3其他工具介绍\">3.其他工具介绍</h1>\n\n<h2 id=\"31-删除注释掉的import工具\">3.1 删除注释掉的#import工具</h2>\n\n<pre><code class=\"language-objective-c\">//#import \"xxx.h\"\n</code></pre>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#!/bin/bash</span>\n\n<span class=\"c\"># 遍历指定目录下的类删除注释掉的import代码行的脚本</span>\n<span class=\"c\"># author: PaysonChen</span>\n<span class=\"c\"># [目的]</span>\n<span class=\"c\"># 工程阶段性整理无用import（注释掉）</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [目录]</span>\n<span class=\"c\">#   - delete_unused_import_annotation.sh</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [说明]</span>\n<span class=\"c\"># 1、遍历指定目录</span>\n<span class=\"c\"># 2、检索代码行</span>\n<span class=\"c\"># 3、符合给定条件：//import</span>\n<span class=\"c\"># 4、删除代码行</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [参数]</span>\n<span class=\"c\"># 1、参数1，指定目录</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [调用说明]</span>\n<span class=\"c\"># 1 调用示例：sh delete_unused_import_annotation.sh your_path</span>\n\n\nfind <span class=\"nv\">$1</span> <span class=\"nt\">-type</span> f <span class=\"se\">\\(</span> <span class=\"nt\">-name</span> <span class=\"s2\">\"*.h\"</span> <span class=\"nt\">-o</span> <span class=\"nt\">-name</span> <span class=\"s2\">\"*.m\"</span> <span class=\"se\">\\)</span> <span class=\"nt\">-exec</span> <span class=\"nb\">sed</span> <span class=\"nt\">-i</span> <span class=\"s1\">''</span> <span class=\"s1\">'/\\/\\/#import/d'</span> <span class=\"o\">{}</span> <span class=\"se\">\\;</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h2 id=\"32-未被引用的类文件清理工具\">3.2 未被引用的类文件清理工具</h2>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#!/bin/bash</span>\n\n<span class=\"c\"># [背景]</span>\n<span class=\"c\"># 基础组件拆分到一定程度时，主工程剩下的就多数与视图界面(vc、view等)相关的类文件。此时可以考虑对业务组件进行设计和规划，但是在此时，工程还存在如下问题：</span>\n<span class=\"c\"># 冗余文件：</span>\n<span class=\"c\">#   未被引用到Project，但存在在工程目录中的冗余的类文件</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># author: PaysonChen</span>\n<span class=\"c\"># [目的]</span>\n<span class=\"c\"># 为了减轻业务组件的工作量和复杂度，在此之前最好能净化/清理一下工程</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [目录]</span>\n<span class=\"c\">#   - find_all_file_no_project.sh</span>\n<span class=\"c\"># [说明]</span>\n<span class=\"c\"># 1、通过递归遍历工程目录，将遍历后的类名逐一与XXX.xcodeproj/project.pbxproj 文件内容进行匹配</span>\n<span class=\"c\"># 2、匹配不成功则输出文件列表</span>\n<span class=\"c\"># 3、【人工】对文件列表一一检查，确认是冗余文件则从工程中删除</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [参数]</span>\n<span class=\"c\"># 1、参数1，指定xcode工程自身的主工程类所在目录，而非project所在的目录</span>\n<span class=\"c\">#   例如 XXX/ProjectName/ProjectName.xcodeproj/project.pbxproj</span>\n<span class=\"c\">#       XXX/ProjectName/ProjectName/AppDelegate.h</span>\n<span class=\"c\">#   需要传入的是下面这地址：</span>\n<span class=\"c\">#       XXX/ProjectName/ProjectName</span>\n<span class=\"c\"># [调用说明]</span>\n<span class=\"c\"># 1、未指定目录，则取当前目录：sh find_all_file_no_project.sh</span>\n<span class=\"c\"># 2、指定目录：sh find_all_file_no_project.sh /Users/xxxxx/Project-IOS/ProjectName/ProjectName</span>\n\n\n<span class=\"c\">#!/bin/bash</span>\n\n<span class=\"k\">function </span>main<span class=\"o\">()</span> <span class=\"o\">{</span>\n    \n    <span class=\"c\"># 设置项目目录</span>\n    <span class=\"nv\">project_directory</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$1</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then</span>\n        <span class=\"c\">#未传参为当前目录</span>\n        <span class=\"nv\">project_directory</span><span class=\"o\">=</span><span class=\"nb\">.</span>\n    <span class=\"k\">fi</span>\n\n    <span class=\"c\"># 设置其他目录</span>\n    <span class=\"nv\">parent_path</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">dirname</span> <span class=\"s2\">\"</span><span class=\"nv\">$project_directory</span><span class=\"s2\">\"</span><span class=\"si\">)</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"project 路径：\"</span><span class=\"nv\">$parent_path</span>\n    \n    <span class=\"nv\">current_dir</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">basename</span> <span class=\"s2\">\"</span><span class=\"nv\">$project_directory</span><span class=\"s2\">\"</span><span class=\"si\">)</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"当前路径 文件夹名称：\"</span><span class=\"nv\">$current_dir</span>\n\n    \n    <span class=\"nv\">project_path</span><span class=\"o\">=</span><span class=\"si\">$(</span>find <span class=\"s2\">\"</span><span class=\"nv\">$parent_path</span><span class=\"s2\">\"</span>/<span class=\"nv\">$current_dir</span>.xcodeproj <span class=\"nt\">-type</span> f <span class=\"se\">\\(</span> <span class=\"nt\">-name</span> <span class=\"s2\">\"*.pbxproj\"</span> <span class=\"se\">\\)</span><span class=\"si\">)</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"project 路径：\"</span><span class=\"nv\">$project_path</span>\n\n    <span class=\"nv\">all_file_path</span><span class=\"o\">=</span><span class=\"si\">$(</span>find <span class=\"s2\">\"</span><span class=\"nv\">$project_directory</span><span class=\"s2\">\"</span> <span class=\"nt\">-type</span> f <span class=\"se\">\\(</span> <span class=\"nt\">-name</span> <span class=\"s2\">\"*.h\"</span> <span class=\"se\">\\)</span><span class=\"si\">)</span>\n    <span class=\"nv\">all_file_path_cnt</span><span class=\"o\">=</span><span class=\"si\">$(</span>find <span class=\"s2\">\"</span><span class=\"nv\">$project_directory</span><span class=\"s2\">\"</span> <span class=\"nt\">-type</span> f <span class=\"se\">\\(</span> <span class=\"nt\">-name</span> <span class=\"s2\">\"*.h\"</span> <span class=\"se\">\\)</span> | <span class=\"nb\">wc</span> <span class=\"nt\">-l</span><span class=\"si\">)</span>\n\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"主工程 头文件数量：\"</span><span class=\"nv\">$all_file_path_cnt</span>\n\n    <span class=\"k\">for </span>src_file <span class=\"k\">in</span> <span class=\"nv\">$all_file_path</span><span class=\"p\">;</span> <span class=\"k\">do</span>\n    <span class=\"c\">#    echo $src_file</span>\n        <span class=\"nv\">filename</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">basename</span> <span class=\"s2\">\"</span><span class=\"nv\">$src_file</span><span class=\"s2\">\"</span> .h<span class=\"si\">)</span>\n        <span class=\"k\">if</span>  <span class=\"o\">!</span> <span class=\"nb\">grep</span> <span class=\"nt\">-q</span> <span class=\"s2\">\"</span><span class=\"se\">\\b</span><span class=\"nv\">$filename</span><span class=\"se\">\\b</span><span class=\"s2\">\"</span> <span class=\"s2\">\"</span><span class=\"nv\">$project_path</span><span class=\"s2\">\"</span><span class=\"p\">;</span>  <span class=\"k\">then\n            </span><span class=\"nb\">echo</span> <span class=\"s2\">\"project不包含：\"</span><span class=\"nv\">$src_file</span>\n        <span class=\"k\">fi\n    done</span>\n<span class=\"o\">}</span>\n\n\nmain <span class=\"nv\">$1</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h2 id=\"33-未被使用的类文件清理工具\">3.3 未被使用的类文件清理工具</h2>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#!/bin/bash</span>\n\n<span class=\"c\"># [背景]</span>\n<span class=\"c\"># 基础组件拆分到一定程度时，主工程剩下的就多数与视图界面(vc、view等)相关的类文件。此时可以考虑对业务组件进行设计和规划，但是在此时，工程还存在如下问题：</span>\n<span class=\"c\">#    冗余文件：</span>\n<span class=\"c\">#    非冗余但未被使用的文件</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># author: PaysonChen</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [目的]</span>\n<span class=\"c\"># 此脚本解决 \"非冗余但未被使用的文件\" 的清理</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [目录]</span>\n<span class=\"c\">#   - find_unused_class.sh</span>\n<span class=\"c\"># [说明]</span>\n<span class=\"c\"># 1 遍历工程目录的所有实现类：.m文件（不包含category）</span>\n<span class=\"c\"># 2 将类名与工程内除自身以外所有文件进行进逐行匹配（包含category）</span>\n<span class=\"c\"># 3 当匹配到不包含// 与 #import 开头的行，则算为有引用，否则为未引用</span>\n<span class=\"c\"># 4 将未匹配到的文件路径进行输出</span>\n<span class=\"c\"># 5 将上述匹配出来的文件先进行移除，再执行一遍（由于第一层被移除，可能会暴露出更多没被引用的类）</span>\n<span class=\"c\"># 6 直到没有匹配到未被调用的类为止</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [参数]</span>\n<span class=\"c\"># 1、参数1，指定xcode工程目录 （未指定则为当前目录）</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [调用说明]</span>\n<span class=\"c\"># 1、未指定目录，则取当前目录：sh find_unused_class.sh</span>\n<span class=\"c\"># 2、指定目录 ：sh find_unused_class.sh /Users/xxxxx/ProjectName-IOS/ProjectName/ProjectName</span>\n\n\n<span class=\"c\">#!/bin/bash</span>\n\n<span class=\"c\">#是否重复执行到没有找到不可用文件</span>\n<span class=\"nb\">export </span><span class=\"nv\">cycle_deal</span><span class=\"o\">=</span>1\n<span class=\"nb\">export </span><span class=\"nv\">cycle_idx</span><span class=\"o\">=</span>1\n<span class=\"nv\">total_unused_file_name</span><span class=\"o\">=</span><span class=\"s1\">''</span>\n<span class=\"k\">function </span>main<span class=\"o\">()</span> <span class=\"o\">{</span>\n    \n    <span class=\"c\"># 设置项目目录</span>\n    <span class=\"nv\">project_directory</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$1</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then</span>\n        <span class=\"c\">#未传参为当前目录</span>\n        <span class=\"nv\">project_directory</span><span class=\"o\">=</span><span class=\"nb\">.</span>\n    <span class=\"k\">fi</span>\n\n    <span class=\"c\">#初始化参数：</span>\n    <span class=\"nv\">unused_files</span><span class=\"o\">=</span><span class=\"s1\">''</span>\n\n    <span class=\"c\"># 查找所有以ViewController.m结尾的文件并输出列表</span>\n    <span class=\"nv\">all_class_path</span><span class=\"o\">=</span><span class=\"si\">$(</span>find <span class=\"s2\">\"</span><span class=\"nv\">$project_directory</span><span class=\"s2\">\"</span> <span class=\"nt\">-type</span> f <span class=\"se\">\\(</span> <span class=\"nt\">-name</span> <span class=\"s2\">\"*.m\"</span> <span class=\"se\">\\)</span> | <span class=\"nb\">grep</span> <span class=\"nt\">-v</span> <span class=\"s1\">'+'</span><span class=\"si\">)</span>\n\n    <span class=\"nv\">all_file_path</span><span class=\"o\">=</span><span class=\"si\">$(</span>find <span class=\"s2\">\"</span><span class=\"nv\">$project_directory</span><span class=\"s2\">\"</span> <span class=\"nt\">-type</span> f <span class=\"se\">\\(</span> <span class=\"nt\">-name</span> <span class=\"s2\">\"*.m\"</span> <span class=\"nt\">-o</span> <span class=\"nt\">-name</span> <span class=\"s2\">\"*.h\"</span> <span class=\"se\">\\)</span> <span class=\"si\">)</span>\n\n    <span class=\"nv\">file_cnt</span><span class=\"o\">=</span>0\n    <span class=\"k\">for </span>file <span class=\"k\">in</span> <span class=\"nv\">$all_class_path</span><span class=\"p\">;</span> <span class=\"k\">do\n        </span><span class=\"nv\">file_cnt</span><span class=\"o\">=</span><span class=\"k\">$((</span>file_cnt+1<span class=\"k\">))</span>\n    <span class=\"k\">done\n    </span><span class=\"nb\">echo</span> <span class=\"s2\">\"*******file_cnt：\"</span><span class=\"nv\">$file_cnt</span>\n\n\n    <span class=\"k\">for </span>file <span class=\"k\">in</span> <span class=\"nv\">$all_class_path</span><span class=\"p\">;</span> <span class=\"k\">do\n        </span><span class=\"nv\">filename</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">basename</span> <span class=\"s2\">\"</span><span class=\"nv\">$file</span><span class=\"s2\">\"</span> .m<span class=\"si\">)</span>\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"***********开始遍历文件名：\"</span><span class=\"nv\">$filename</span>\n        <span class=\"nv\">is_referenced</span><span class=\"o\">=</span><span class=\"nb\">false\n        </span><span class=\"k\">for </span>other_file <span class=\"k\">in</span> <span class=\"nv\">$all_file_path</span><span class=\"p\">;</span> <span class=\"k\">do\n            </span><span class=\"nv\">other_file_name</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">basename</span> <span class=\"s2\">\"</span><span class=\"nv\">$other_file</span><span class=\"s2\">\"</span><span class=\"si\">)</span>\n            <span class=\"c\">#获取除自身以外的类名：不包含拓展的名称，为了避免在自身的.h .m进行引用判断</span>\n            <span class=\"nv\">other_file_name_without_extension</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">echo</span> <span class=\"s2\">\"</span><span class=\"nv\">$other_file_name</span><span class=\"s2\">\"</span> | <span class=\"nb\">cut</span> <span class=\"nt\">-d</span><span class=\"nb\">.</span> <span class=\"nt\">-f1</span><span class=\"si\">)</span>\n            <span class=\"c\">#获取category的主类名称</span>\n            <span class=\"nv\">other_file_name_without_extension_before_plus</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">echo</span> <span class=\"s2\">\"</span><span class=\"nv\">$other_file_name_without_extension</span><span class=\"s2\">\"</span> | <span class=\"nb\">awk</span> <span class=\"nt\">-F</span><span class=\"s1\">'+'</span> <span class=\"s1\">'{print $1}'</span><span class=\"si\">)</span>\n            <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"s2\">\"</span><span class=\"nv\">$other_file_name_without_extension_before_plus</span><span class=\"s2\">\"</span> <span class=\"o\">!=</span> <span class=\"s2\">\"</span><span class=\"nv\">$filename</span><span class=\"s2\">\"</span> <span class=\"o\">]</span> <span class=\"p\">;</span> <span class=\"k\">then</span>\n            <span class=\"c\"># if [ \"$other_file\" != \"$file\" ] &amp;&amp; ([ \"${other_file##*.}\" = \"m\" ] ); then</span>\n                <span class=\"k\">if </span><span class=\"nb\">grep</span> <span class=\"nt\">-q</span> <span class=\"s2\">\"</span><span class=\"se\">\\b</span><span class=\"nv\">$filename</span><span class=\"se\">\\b</span><span class=\"s2\">\"</span> <span class=\"s2\">\"</span><span class=\"nv\">$other_file</span><span class=\"s2\">\"</span><span class=\"p\">;</span>  <span class=\"k\">then</span>\n                    <span class=\"c\"># 检查文件中是否有注释行</span>\n                    <span class=\"nv\">has_comment</span><span class=\"o\">=</span><span class=\"nb\">false\n                    </span><span class=\"k\">while </span><span class=\"nv\">IFS</span><span class=\"o\">=</span> <span class=\"nb\">read</span> <span class=\"nt\">-r</span> line<span class=\"p\">;</span> <span class=\"k\">do\n                        </span><span class=\"nb\">echo</span> <span class=\"s2\">\"逐行匹配：\"</span><span class=\"nv\">$line</span>\n                        <span class=\"k\">if</span> <span class=\"o\">!</span> <span class=\"nb\">grep</span> <span class=\"nt\">-qE</span> <span class=\"s2\">\"^[[:space:]]*//\"</span> <span class=\"o\">&lt;&lt;&lt;</span> <span class=\"s2\">\"</span><span class=\"nv\">$line</span><span class=\"s2\">\"</span><span class=\"p\">;</span> <span class=\"k\">then\n                            if</span> <span class=\"o\">[[</span> <span class=\"o\">!</span> <span class=\"nv\">$line</span> <span class=\"o\">=</span>~ ^[[:space:]]<span class=\"k\">*</span><span class=\"c\">#import ]]; then</span>\n                                <span class=\"nv\">has_comment</span><span class=\"o\">=</span><span class=\"nb\">true\n                                echo</span> <span class=\"s2\">\"在文件:\"</span><span class=\"nv\">$other_file</span><span class=\"s2\">\"匹配\"</span><span class=\"nv\">$filename</span><span class=\"s2\">\"存在 并且不是 注释代码 或者 import 的 break（\"</span><span class=\"nv\">$line</span>\n                                <span class=\"nb\">break\n                            </span><span class=\"k\">fi\n\n                        fi\n                    done</span> <span class=\"o\">&lt;&lt;&lt;</span> <span class=\"s2\">\"</span><span class=\"si\">$(</span><span class=\"nb\">grep</span> <span class=\"s2\">\"</span><span class=\"se\">\\b</span><span class=\"nv\">$filename</span><span class=\"se\">\\b</span><span class=\"s2\">\"</span> <span class=\"s2\">\"</span><span class=\"nv\">$other_file</span><span class=\"s2\">\"</span><span class=\"si\">)</span><span class=\"s2\">\"</span>\n                    \n                    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"s2\">\"</span><span class=\"nv\">$has_comment</span><span class=\"s2\">\"</span> <span class=\"o\">=</span> <span class=\"nb\">true</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n                        </span><span class=\"nv\">is_referenced</span><span class=\"o\">=</span><span class=\"nb\">true\n                        break\n                    </span><span class=\"k\">fi\n                fi\n            fi\n        done\n\n        if</span> <span class=\"o\">[</span> <span class=\"s2\">\"</span><span class=\"nv\">$is_referenced</span><span class=\"s2\">\"</span> <span class=\"o\">=</span> <span class=\"nb\">false</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n            </span><span class=\"nb\">echo</span> <span class=\"s2\">\"没有被引用到的文件:\"</span><span class=\"nv\">$file</span>\n            <span class=\"nv\">unused_files</span><span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"nv\">$unused_files$file</span><span class=\"se\">\\n</span><span class=\"s2\">\"</span>\n        <span class=\"k\">fi\n        </span><span class=\"nb\">echo</span> <span class=\"s2\">\"***********\"</span>\n    <span class=\"k\">done</span>\n\n    <span class=\"c\"># 输出未被引用的文件列表</span>\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-n</span> <span class=\"s2\">\"</span><span class=\"nv\">$unused_files</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">echo</span> <span class=\"nt\">-e</span> <span class=\"s2\">\"Unused class files:</span><span class=\"se\">\\n</span><span class=\"nv\">$unused_files</span><span class=\"s2\">\"</span>\n        <span class=\"nv\">total_unused_file_name</span><span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"nv\">$total_unused_file_name$unused_files</span><span class=\"se\">\\n</span><span class=\"s2\">\"</span>\n\n        <span class=\"c\">#将检索出来的文件 mv 出来</span>\n        <span class=\"nb\">mkdir</span> <span class=\"nt\">-p</span> ./unused_files/<span class=\"nv\">$cycle_idx</span>/\n        <span class=\"nv\">array</span><span class=\"o\">=(</span><span class=\"sb\">`</span><span class=\"nb\">echo</span> <span class=\"nv\">$unused_files</span> | <span class=\"nb\">tr</span> <span class=\"s1\">'\\n'</span> <span class=\"s1\">' '</span><span class=\"sb\">`</span><span class=\"o\">)</span>\n        <span class=\"k\">for </span>element <span class=\"k\">in</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">array</span><span class=\"p\">[@]</span><span class=\"k\">}</span><span class=\"s2\">\"</span><span class=\"p\">;</span> <span class=\"k\">do\n            </span><span class=\"nv\">element</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">echo</span> <span class=\"s2\">\"</span><span class=\"nv\">$element</span><span class=\"s2\">\"</span> | <span class=\"nb\">tr</span> <span class=\"nt\">-d</span> <span class=\"s1\">'\\n'</span><span class=\"si\">)</span>\n            <span class=\"nb\">echo</span> <span class=\"s2\">\"Unused class = \"</span><span class=\"nv\">$element</span>\n            <span class=\"nv\">element_filename</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">basename</span> <span class=\"s2\">\"</span><span class=\"nv\">$element</span><span class=\"s2\">\"</span> .m<span class=\"si\">)</span>\n            <span class=\"nv\">element_dirname</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">dirname</span> <span class=\"s2\">\"</span><span class=\"nv\">$element</span><span class=\"s2\">\"</span><span class=\"si\">)</span>\n            \n            <span class=\"nv\">destFoldName</span><span class=\"o\">=</span><span class=\"s2\">\"./unused_files/</span><span class=\"nv\">$cycle_idx</span><span class=\"s2\">/</span><span class=\"k\">${</span><span class=\"nv\">element_dirname</span><span class=\"k\">}</span><span class=\"s2\">/</span><span class=\"k\">${</span><span class=\"nv\">element_filename</span><span class=\"k\">}</span><span class=\"s2\">\"</span>\n            <span class=\"nb\">mkdir</span> <span class=\"nt\">-p</span> <span class=\"nv\">$destFoldName</span>\n            \n            <span class=\"nb\">cp</span> <span class=\"nt\">-f</span> <span class=\"k\">${</span><span class=\"nv\">element_dirname</span><span class=\"k\">}</span>/<span class=\"k\">${</span><span class=\"nv\">element_filename</span><span class=\"k\">}</span>.h <span class=\"nv\">$destFoldName</span>/<span class=\"nv\">$element_filename</span>.h\n            <span class=\"nb\">cp</span> <span class=\"nt\">-f</span> <span class=\"k\">${</span><span class=\"nv\">element_dirname</span><span class=\"k\">}</span>/<span class=\"k\">${</span><span class=\"nv\">element_filename</span><span class=\"k\">}</span>.m <span class=\"nv\">$destFoldName</span>/<span class=\"nv\">$element_filename</span>.m\n        <span class=\"k\">done</span>\n        \n        <span class=\"c\">#cycle_deal参数为空则不循环执行</span>\n        <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$cycle_deal</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n            </span><span class=\"nb\">echo</span> <span class=\"s2\">\"cycle_deal参数为空则不循环执行\"</span>\n\n            <span class=\"nb\">exit </span>0\n        <span class=\"k\">else</span>\n            <span class=\"c\">#cycle_deal 不为空 循环执行，直到不再有新文件检出</span>\n            <span class=\"nb\">echo</span> <span class=\"nt\">-e</span> <span class=\"s2\">\"循环执行\"</span>\n            <span class=\"nv\">cycle_idx</span><span class=\"o\">=</span><span class=\"k\">$((</span>cycle_idx+1<span class=\"k\">))</span>\n            main <span class=\"nv\">$1</span>\n        <span class=\"k\">fi\n\n    else\n        </span><span class=\"nb\">echo</span> <span class=\"s2\">\"No unused ViewController files found.\"</span><span class=\"nv\">$all_file_path</span>\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"**************************\"</span>\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"total_unused_file_name class files:</span><span class=\"se\">\\n</span><span class=\"nv\">$total_unused_file_name</span><span class=\"s2\">\"</span>\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"**************************\"</span>\n\n        <span class=\"nb\">exit </span>0\n    <span class=\"k\">fi</span>\n<span class=\"o\">}</span>\n\n\nmain <span class=\"nv\">$1</span>\n\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h2 id=\"34-冲突解决工具\">3.4 冲突解决工具</h2>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#!/bin/bash</span>\n\n<span class=\"c\"># [背景]</span>\n<span class=\"c\">#    组件化过程中不可避免的会遇到这样一个问题：</span>\n<span class=\"c\">#    组件化的过程一般周期比较长，此过程中不免会有业务需求的输入，这样就会导致一个情况：</span>\n<span class=\"c\">#    组件化分支已经将主工程里的类迁移到pod仓库,而在此期间的业务需求代码对这些被迁移的类有修改，</span>\n<span class=\"c\">#    合并主干（其他分支）代码时,主干（其他分支）有对移动之前的类做修改的情况下,会导致合并冲突,</span>\n<span class=\"c\">#    这种冲突是整个类都是新增符号(+),没有冲突符号，此时无法简单的通过工具，或者冲突的符号对其进行解冲突。</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># author: PaysonChen</span>\n<span class=\"c\"># [目的]</span>\n<span class=\"c\"># 为了减轻组件化分支合并主干分支的工作量和复杂度</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [目录]</span>\n<span class=\"c\">#   - merge.sh</span>\n<span class=\"c\"># [说明]</span>\n<span class=\"c\"># 1、整理project 冲突文件的路径列表</span>\n<span class=\"c\"># 2、整理冲突列表在各个pod库中的路径列表</span>\n<span class=\"c\"># 3、在未预合并分支上先mv一份整理后的pod库中的路径列表到主工程</span>\n<span class=\"c\"># 4、再进行分支合并</span>\n<span class=\"c\"># 5、解决冲突后，执行将主工程的上述列表，mv到各个pod库</span>\n<span class=\"c\"># 6、提交各个Pod库代码</span>\n<span class=\"c\"># 7、整理Project文件及工程类</span>\n<span class=\"c\"># 8、提交Project代码</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [参数]</span>\n<span class=\"c\"># 1、参数1：源路径：从参数1下的文件路径了列表，移动到参数2（索引）对应的路径</span>\n<span class=\"c\">#   例如 merge_pods_files.txt</span>\n<span class=\"c\"># 2、参数2，目标移动路径列表</span>\n<span class=\"c\">#   例如 merge_project_files.txt</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [调用说明]</span>\n<span class=\"c\"># 1、需要指定目录</span>\n<span class=\"c\">#  从Pod移动到主工程：sh merge.sh merge_pods_files.txt merge_project_files.txt</span>\n<span class=\"c\">#  从主工程移动到Pod：sh merge.sh merge_project_files.txt merge_pods_files.txt</span>\n\n\n<span class=\"c\"># 从外部文件中读取源文件路径和目标文件夹路径</span>\n<span class=\"c\">#\"source_paths.txt\"</span>\n<span class=\"nv\">source_file</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n<span class=\"c\">#\"destination_paths.txt\"</span>\n<span class=\"nv\">destination_file</span><span class=\"o\">=</span><span class=\"nv\">$2</span>\n\n<span class=\"c\"># 检查源文件是否存在</span>\n<span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"o\">!</span> <span class=\"nt\">-f</span> <span class=\"s2\">\"</span><span class=\"nv\">$source_file</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n    </span><span class=\"nb\">echo</span> <span class=\"s2\">\"源文件 '</span><span class=\"nv\">$source_file</span><span class=\"s2\">' 不存在。\"</span>\n    <span class=\"nb\">exit </span>1\n<span class=\"k\">fi</span>\n\n<span class=\"c\"># 检查目标文件夹文件是否存在</span>\n<span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"o\">!</span> <span class=\"nt\">-f</span> <span class=\"s2\">\"</span><span class=\"nv\">$destination_file</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n    </span><span class=\"nb\">echo</span> <span class=\"s2\">\"源文件 '</span><span class=\"nv\">$source_file</span><span class=\"s2\">' 不存在。\"</span>\n    <span class=\"nb\">exit </span>1\n<span class=\"k\">fi</span>\n\n<span class=\"c\">#保证每条记录都有一个回车（最后一行如果没有回车，会被忽略）</span>\n<span class=\"k\">while </span><span class=\"nv\">IFS</span><span class=\"o\">=</span> <span class=\"nb\">read</span> <span class=\"nt\">-r</span> source_path <span class=\"o\">&amp;&amp;</span> <span class=\"nv\">IFS</span><span class=\"o\">=</span> <span class=\"nb\">read</span> <span class=\"nt\">-r</span> destination_folder &lt;&amp;3<span class=\"p\">;</span> <span class=\"k\">do\n    </span>source_paths+<span class=\"o\">=(</span><span class=\"s2\">\"</span><span class=\"nv\">$source_path</span><span class=\"s2\">\"</span><span class=\"o\">)</span>\n    destination_paths+<span class=\"o\">=(</span><span class=\"s2\">\"</span><span class=\"nv\">$destination_folder</span><span class=\"s2\">\"</span><span class=\"o\">)</span>\n<span class=\"k\">done</span> &lt; <span class=\"nv\">$source_file</span> 3&lt; <span class=\"nv\">$destination_file</span>\n\n<span class=\"c\"># 输出数组长度</span>\n<span class=\"nb\">echo</span> <span class=\"s2\">\"源文件路径数组长度：</span><span class=\"k\">${#</span><span class=\"nv\">source_paths</span><span class=\"p\">[@]</span><span class=\"k\">}</span><span class=\"s2\">\"</span>\n<span class=\"nb\">echo</span> <span class=\"s2\">\"目标文件夹路径数组长度：</span><span class=\"k\">${#</span><span class=\"nv\">destination_paths</span><span class=\"p\">[@]</span><span class=\"k\">}</span><span class=\"s2\">\"</span>\n\n<span class=\"c\">#exit 0</span>\n<span class=\"c\"># 遍历索引</span>\n<span class=\"k\">for </span>index <span class=\"k\">in</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"p\">!source_paths[@]</span><span class=\"k\">}</span><span class=\"s2\">\"</span><span class=\"p\">;</span> <span class=\"k\">do\n    </span><span class=\"nb\">echo</span> <span class=\"s2\">\"遍历目标文件夹路径数组,index=\"</span><span class=\"nv\">$index</span>\n    <span class=\"nv\">source_path</span><span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">source_paths</span><span class=\"p\">[</span><span class=\"nv\">$index</span><span class=\"p\">]</span><span class=\"k\">}</span><span class=\"s2\">\"</span>\n    <span class=\"nv\">destination_path</span><span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">destination_paths</span><span class=\"p\">[</span><span class=\"nv\">$index</span><span class=\"p\">]</span><span class=\"k\">}</span><span class=\"s2\">\"</span>\n\n    <span class=\"c\"># 构建目标文件的完整路径</span>\n<span class=\"c\">#    destination_path=\"${destination_folder}${source_path}\"</span>\n\n    <span class=\"c\"># 检查目标文件是否存在，如果存在则删除</span>\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-e</span> <span class=\"s2\">\"</span><span class=\"nv\">$destination_path</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">rm</span> <span class=\"s2\">\"</span><span class=\"nv\">$destination_path</span><span class=\"s2\">\"</span>\n    <span class=\"k\">fi</span>\n\n    <span class=\"c\"># 确保目标文件夹存在</span>\n    <span class=\"nb\">mkdir</span> <span class=\"nt\">-p</span> <span class=\"s2\">\"</span><span class=\"si\">$(</span><span class=\"nb\">dirname</span> <span class=\"s2\">\"</span><span class=\"nv\">$destination_path</span><span class=\"s2\">\"</span><span class=\"si\">)</span><span class=\"s2\">\"</span>\n\n    <span class=\"c\"># 复制源文件到目标路径</span>\n    <span class=\"nb\">mv</span> <span class=\"s2\">\"</span><span class=\"nv\">$source_path</span><span class=\"s2\">\"</span> <span class=\"s2\">\"</span><span class=\"nv\">$destination_path</span><span class=\"s2\">\"</span>\n<span class=\"k\">done\n\n</span><span class=\"nb\">echo</span> <span class=\"s2\">\"文件复制完成。\"</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h2 id=\"35-版权信息批量同步工具\">3.5 版权信息批量同步工具</h2>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#!/bin/bash</span>\n\n<span class=\"c\"># 遍历更新当前目录下(含子目录）所有iOS工程类文件：.h .m .swift 并对其注释头进行模板替换</span>\n<span class=\"c\"># author: PaysonChen</span>\n<span class=\"c\"># [目的]</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># 组件化规整之后，可能存在的情况是前后的文件命名不一致导致的影响代码易读性、易维护等问题</span>\n<span class=\"c\"># 除此之外，由于代码经由不同人迭代的，甚至不同组织迭代（从外包接手的项目）还存在一些文件注释的注释模板差异的情况</span>\n<span class=\"c\"># 此脚本目的为了解决存量类文件头注释统一性问题</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [目录]</span>\n<span class=\"c\">#   - replace_class_header_anotation.sh 遍历更新当前目录下，子目录git仓库的脚本</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [说明]</span>\n<span class=\"c\"># 1、遍历指定目录（若未传参数则为当前目录）下的子目录</span>\n<span class=\"c\"># 2、匹配所有iOS工程类文件：.h .m .swift</span>\n<span class=\"c\"># 3、对其注释头进行模板替换</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [参数]</span>\n<span class=\"c\"># 1、参数1，指定目录</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [调用说明]</span>\n<span class=\"c\"># 1、未指定目录，则取当前目录：sh replace_class_header_anotation.sh</span>\n<span class=\"c\"># 2、指定目录：sh replace_class_header_anotation.sh /User/xxx/xx</span>\n<span class=\"c\"># 本脚本适用于将：下述注释替换成 统一注释模板：</span>\n<span class=\"c\">#   其一：</span>\n<span class=\"c\">#//</span>\n<span class=\"c\">#//  FileName.h</span>\n<span class=\"c\">#//  ProjectName</span>\n<span class=\"c\">#//</span>\n<span class=\"c\">#//  Created by Author on Date.</span>\n<span class=\"c\">#// (没版权信息)</span>\n<span class=\"c\">#//</span>\n<span class=\"c\">#</span>\n<span class=\"c\">#   其二：</span>\n<span class=\"c\">#   /****************************************************************************************************</span>\n<span class=\"c\">#   * 版权所有： Copyright (c) 2012-2021 xxxx. All rights reserved.</span>\n<span class=\"c\">#   * 作 者： Author （2021/3/12）</span>\n<span class=\"c\">#   * 界面描述：  界面描述</span>\n<span class=\"c\">#   ****************************************************************************************************/</span>\n<span class=\"c\">#</span>\n<span class=\"c\">#   其三：</span>\n<span class=\"c\">#   没有任何注释的</span>\n<span class=\"c\">#</span>\n<span class=\"c\">#</span>\n<span class=\"c\">#   替换成统一注释模板：</span>\n<span class=\"c\">#</span>\n<span class=\"c\">#//</span>\n<span class=\"c\">#//  \"$filename\"</span>\n<span class=\"c\">#//  \"$project_name\"</span>\n<span class=\"c\">#//</span>\n<span class=\"c\">#//  Created by \"$auth\" on \"$date\".</span>\n<span class=\"c\">#//  \"$copyright_str\"</span>\n<span class=\"c\">#//</span>\n<span class=\"c\">#</span>\n<span class=\"c\">#定义版权信息</span>\n<span class=\"nb\">export </span><span class=\"nv\">copyright_str</span><span class=\"o\">=</span><span class=\"s2\">\"Copyright (C) </span><span class=\"si\">$(</span><span class=\"nb\">date</span> +%Y<span class=\"si\">)</span><span class=\"s2\">  Your CompanyName Limited. All rights reserved.\"</span>\n\n<span class=\"c\">#定义默认用户信息：PaysonChen</span>\n<span class=\"nb\">export </span><span class=\"nv\">def_author_str</span><span class=\"o\">=</span><span class=\"s2\">\"PaysonChen\"</span>\n\n<span class=\"c\">#定义默认日期：当前日期</span>\n<span class=\"nb\">export </span><span class=\"nv\">def_time_str</span><span class=\"o\">=</span><span class=\"sb\">`</span><span class=\"nb\">date</span> +%Y/%m/%d<span class=\"sb\">`</span>\n\n<span class=\"k\">function </span>get_creator_name_with_template_2<span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"nv\">file</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n    <span class=\"nv\">creator_name</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">sed</span> <span class=\"nt\">-n</span> <span class=\"s1\">'s/.*作    者： \\(.*\\).*/\\1/p'</span> <span class=\"nv\">$file</span><span class=\"si\">)</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"creator_name=\"</span><span class=\"nv\">$creator_name</span><span class=\"s2\">\" in file=\"</span><span class=\"nv\">$file</span>\n    \n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$creator_name</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">echo</span> <span class=\"s1\">'///获取创建者 第二种模板获取 为空 使用默认值'</span>\n        <span class=\"nv\">creator_name</span><span class=\"o\">=</span><span class=\"nv\">$def_author_str</span>\n    <span class=\"k\">fi</span>\n<span class=\"o\">}</span>\n\n<span class=\"k\">function </span>get_creator_name<span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"nv\">file</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n    <span class=\"nv\">creator_name</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">sed</span> <span class=\"nt\">-n</span> <span class=\"s1\">'s/.*Created by \\(.*\\) on.*/\\1/p'</span> <span class=\"nv\">$file</span><span class=\"si\">)</span>\n    \n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$creator_name</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span>get_creator_name_with_template_2 <span class=\"nv\">$file</span>\n    <span class=\"k\">fi\n    \n    </span><span class=\"nb\">echo</span> <span class=\"s2\">\"--------creator_name=【\"</span><span class=\"nv\">$creator_name</span><span class=\"s2\">\"】 in file=\"</span><span class=\"nv\">$file</span>\n<span class=\"o\">}</span>\n\n\n\n<span class=\"k\">function </span>get_creator_time_with_template_2<span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"nv\">file</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n    <span class=\"nv\">creator_time</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">sed</span> <span class=\"nt\">-n</span> <span class=\"s1\">'s/.*创建日期： \\(.*\\).*/\\1/p'</span> <span class=\"nv\">$file</span><span class=\"si\">)</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"-------创建日期=【\"</span><span class=\"nv\">$creator_time</span><span class=\"s2\">\"】 in file=\"</span><span class=\"nv\">$file</span>\n\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$creator_time</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then</span>\n<span class=\"c\">#        echo '///获取创建时间 第二种模板获取 为空 使用默认值'</span>\n        <span class=\"nv\">creator_time</span><span class=\"o\">=</span><span class=\"nv\">$def_time_str</span>\n    <span class=\"k\">fi</span>\n<span class=\"o\">}</span>\n\n\n<span class=\"k\">function </span>format_creator_time<span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"nv\">creator_time</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n    \n    <span class=\"nv\">length</span><span class=\"o\">=</span><span class=\"k\">${#</span><span class=\"nv\">creator_time</span><span class=\"k\">}</span>\n\n    <span class=\"c\"># 截取除最后一个字符外的部分</span>\n    <span class=\"nv\">creator_time</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">creator_time</span>:0:length-1<span class=\"k\">}</span>\n    <span class=\"c\">#echo \"截去掉最后一个字符后的字符串: $creator_time\"</span>\n<span class=\"o\">}</span>\n\n\n<span class=\"k\">function </span>get_creator_time<span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"nv\">file</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n    \n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$2</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nv\">line</span><span class=\"o\">=</span>5\n    <span class=\"k\">else\n        </span><span class=\"nv\">line</span><span class=\"o\">=</span><span class=\"nv\">$2</span>\n    <span class=\"k\">fi</span>\n    <span class=\"c\">#creator_time=$(sed -n '5s/.*\\(.\\{10\\}\\)$/\\1/p' $file)</span>\n    <span class=\"nv\">creator_time</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">awk</span> <span class=\"s1\">'NR=='</span><span class=\"nv\">$line</span><span class=\"s1\">' {print $NF}'</span> <span class=\"nv\">$file</span><span class=\"si\">)</span>\n\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"-------creator_time=【\"</span><span class=\"nv\">$creator_time</span><span class=\"s2\">\"】 line = \"</span><span class=\"nv\">$line</span><span class=\"s2\">\" in file=\"</span><span class=\"nv\">$file</span>\n<span class=\"c\">#    date_regex='^(19|20)[0-9]{2}/(0?[1-9]|1[0-2])/(0?[1-9]|[1-2][0-9]|3[0-1]).$'</span>\n    <span class=\"c\">#date_regex='^(19[0-9]{2}|20[0-9]{2}|[0-9]{2})/(0?[1-9]|1[0-2])/(0?[1-9]|[1-2][0-9]|3[0-1]).$'</span>\n    <span class=\"nv\">date_regex</span><span class=\"o\">=</span><span class=\"s1\">'^(19[0-9]{2}|20[0-9]{2}|[0-9]{2})([-/])(0?[1-9]|1[0-2])([-/])(0?[1-9]|[1-2][0-9]|3[0-1]).$'</span>\n\n    <span class=\"c\"># 进行正则匹配</span>\n    <span class=\"k\">if</span> <span class=\"o\">[[</span> <span class=\"nv\">$creator_time</span> <span class=\"o\">=</span>~ <span class=\"nv\">$date_regex</span> <span class=\"o\">]]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">echo</span> <span class=\"s2\">\"日期格式正确，截断最后一个小数 .\"</span>\n        format_creator_time <span class=\"nv\">$creator_time</span>\n    <span class=\"k\">else\n        if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$2</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n            </span><span class=\"nv\">discount</span><span class=\"o\">=</span>1\n            <span class=\"nv\">new_line</span><span class=\"o\">=</span><span class=\"k\">$((</span>line-discount<span class=\"k\">))</span>\n            <span class=\"nb\">echo</span> <span class=\"s2\">\"常规调用如果匹配不到的花，那么多一次，向上查找\"</span><span class=\"nv\">$discount</span><span class=\"s2\">\"行，进行递归:\"</span><span class=\"nv\">$new_line</span>\n            get_creator_time <span class=\"nv\">$file</span> <span class=\"nv\">$new_line</span>\n        <span class=\"k\">else\n            </span><span class=\"nb\">echo</span> <span class=\"s2\">\"日期格式错误，执行第二种匹配\"</span>\n            get_creator_time_with_template_2 <span class=\"nv\">$file</span>\n        <span class=\"k\">fi\n    fi\n    </span><span class=\"nb\">echo</span> <span class=\"s2\">\"********creator_time=【\"</span><span class=\"nv\">$creator_time</span><span class=\"s2\">\"】 in file=\"</span><span class=\"nv\">$file</span>\n<span class=\"o\">}</span>\n\n\n\n<span class=\"k\">function </span>replace_header_anoation<span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"nv\">file</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n    \n    <span class=\"c\">#定义要替换的字符串</span>\n    <span class=\"c\">#文件名</span>\n    <span class=\"nv\">filename</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">echo</span> <span class=\"s2\">\"</span><span class=\"nv\">$file</span><span class=\"s2\">\"</span> | <span class=\"nb\">sed</span> <span class=\"s1\">'s#.*/##'</span><span class=\"si\">)</span>\n    <span class=\"c\">#项目名</span>\n    <span class=\"nv\">project_name</span><span class=\"o\">=</span><span class=\"s2\">\"YourProjectName\"</span>\n    \n    <span class=\"c\">#还有从当前类中获取作者信息，获取不到取默认值</span>\n    <span class=\"nv\">auth</span><span class=\"o\">=</span><span class=\"nv\">$creator_name</span>\n    \n    <span class=\"c\">#还有从当前类中获取作者信息，获取不到取默认值</span>\n    <span class=\"nb\">date</span><span class=\"o\">=</span><span class=\"nv\">$creator_time</span>\n\n    <span class=\"c\">#以下是替换的模板</span>\n    <span class=\"nv\">new_content</span><span class=\"o\">=</span><span class=\"s2\">\"//\n//  \"</span><span class=\"nv\">$filename</span><span class=\"s2\">\"\n//  \"</span><span class=\"nv\">$project_name</span><span class=\"s2\">\"\n//\n//  Created by \"</span><span class=\"nv\">$auth</span><span class=\"s2\">\" on \"</span><span class=\"nv\">$date</span><span class=\"s2\">\".\n//  \"</span><span class=\"nv\">$copyright_str</span><span class=\"s2\">\"\n//\"</span>\n\n    <span class=\"nv\">new_content_escaped</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">echo</span> <span class=\"s2\">\"</span><span class=\"nv\">$new_content</span><span class=\"s2\">\"</span> | <span class=\"nb\">sed</span> <span class=\"s1\">'s/$/\\\\/'</span><span class=\"si\">)</span> <span class=\"c\"># 转义换行符</span>\n    <span class=\"nb\">sed</span> <span class=\"nt\">-i</span> <span class=\"s1\">''</span> <span class=\"nt\">-e</span> <span class=\"s2\">\"1,7c</span><span class=\"se\">\\\\</span><span class=\"s2\">\n</span><span class=\"nv\">$new_content_escaped</span><span class=\"s2\">\"</span> <span class=\"s2\">\"</span><span class=\"nv\">$file</span><span class=\"s2\">\"</span>\n\n    <span class=\"c\">#还有几个问题待优化</span>\n    <span class=\"c\">#1、如果开头没有注释，则会直接覆盖，或者注释不足7行的</span>\n    <span class=\"c\">#2、日期正则如果不是以 YYYY/MM/DD or YY/MM/DD 其中/和-都适用</span>\n        <span class=\"c\">#2.1但是兼容2023/8/1这样的个位数日期)，</span>\n        <span class=\"c\">#2.2如果日期是8/1/23 这样会导致识别错误 会被替换成今天的日期</span>\n\n<span class=\"o\">}</span>\n\n<span class=\"c\"># 统一类头注释</span>\n<span class=\"k\">function </span>unify_header_anoation<span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"nv\">file</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n\n    <span class=\"c\">#还有从当前类中获取作者信息，获取不到取默认值</span>\n    get_creator_name <span class=\"nv\">$file</span>\n    \n    <span class=\"c\">#还有从当前类中获取作者信息，获取不到取默认值</span>\n    get_creator_time <span class=\"nv\">$file</span>\n    \n    <span class=\"c\">#不传第二个参数 则执行替换，传就不执行</span>\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$2</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span>replace_header_anoation <span class=\"nv\">$file</span>\n    <span class=\"k\">fi</span>\n<span class=\"o\">}</span>\n\n\n<span class=\"k\">function </span>main<span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"nv\">file_path</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$file_path</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">echo</span> <span class=\"s1\">'///未指定路径,file_path为. 当前路径'</span>\n        <span class=\"nv\">file_path</span><span class=\"o\">=</span><span class=\"nb\">.</span>\n    <span class=\"k\">fi</span>\n\n\n    <span class=\"c\">#遍历当前路径下所有oc类</span>\n    find <span class=\"nv\">$file_path</span> <span class=\"nt\">-type</span> f <span class=\"nt\">-name</span> <span class=\"s2\">\"*.swift\"</span> <span class=\"nt\">-o</span> <span class=\"nt\">-name</span> <span class=\"s2\">\"*.h\"</span> <span class=\"nt\">-o</span> <span class=\"nt\">-name</span> <span class=\"s2\">\"*.m\"</span> | <span class=\"k\">while </span><span class=\"nb\">read </span>file<span class=\"p\">;</span> <span class=\"k\">do\n        </span>unify_header_anoation <span class=\"nv\">$file</span> <span class=\"nv\">$2</span>\n    <span class=\"k\">done</span>\n<span class=\"o\">}</span>\n\n\nmain <span class=\"nv\">$1</span> <span class=\"nv\">$2</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n","name":"2024-01-08-ios.md","previous":{"id":"/2023/11/08/构建流水线实践","tags":[],"relative_path":"_posts/2023-11-08-构建流水线实践.md","collection":"posts","content":"<h2 id=\"1-背景\">1 背景</h2>\n\n<p>​\t为了适应不通项目的自动化的需求，而且构建的方式和能力也在不断的迭代与演进，同时维护多个构建脚本存在成本与遗漏，因此将打包脚本的通用能力抽离，通过配置参数进行不同项目的构建。</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n</pre></td><td class=\"rouge-code\"><pre># [目的]\n# 为了使流水线建设趋于可维护，易维护，可迁移，易迁移，对构建逻辑进行模块化、将构建主流程划分为：构建前、构建、构建后，三大模块\n#\n#   构建前：参数配置、版本号设置\n#   构建中：Pod install、xcbuild\n#   构建后：归档、分发、通知\n#\n# 当前的构建后方案的选择：\n#   归档：简单云（ipa+dSYM）、bugly（dSYM）\n#   分发：蒲公英、阿里云OSS、AppStore\n#   通知：钉钉机器人\n# 在未来的持续集成过程中，可以对归档方案进行替换、对分发方案进行替换、对通知方案进行替换、不需要阅读和改动构建中流程\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h2 id=\"2-开始\">2 开始</h2>\n\n<p>构建脚本由构建入口、构建主流程、额外流程三个模块构成，</p>\n\n<script src=\"js/mermaid.ts\"></script>\n<div class=\"mermaid\">\n\ngraph TB\nSTART--&gt;入参配置\n入参配置--&gt;构建前-第三方APIKEY配置\n构建前-第三方APIKEY配置--&gt;构建前-设置构建版本号自增\n构建前-设置构建版本号自增--&gt;构建前-获取工程配置  \n构建前-获取工程配置--&gt;构建中-环境变量设置\n构建中-环境变量设置--&gt;构建中-执行Pod依赖安装\n构建中-执行Pod依赖安装--&gt;构建中-执行构建\n构建中-执行构建--&gt;构建中-执行归档\n构建中-执行归档--&gt;构建中-执行分发\n构建中-执行分发--&gt;构建中-执行通知\n构建中-执行通知--&gt;END\n\n</div>\n\n<h3 id=\"21-构建入口\">2.1 构建入口</h3>\n\n<p>构建入口由UniversalBuild.sh 执行，负责可变参数声明及脚本入参处理</p>\n\n<p>参数说明：</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n</pre></td><td class=\"rouge-code\"><pre># [参数]\n#   -cfg                #打包方式：configuration(0:DailyBuild|1:TestFlight|2:Release|3:TFInner)\n#   -target_name        #项目配置：要打包的TargetName\n#   -channel_name       #渠道号：pgy下载 url后缀\n#   -notify             #是否启用通知 有传值1则启用群通知，2启用内部群通知\n#   -publish            #分发方式：1 启用oss| 2 启用pgy+oss | else pgy\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>以下以【Demo】为例：</p>\n\n<p>​\tTarget为PSCDemoiOS</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n</pre></td><td class=\"rouge-code\"><pre># [调用说明]\n#   使用了gitsubmodule 构建组件，兼容git 检出不兼容，需要先执行 git submodule update --init --recursive\n#   git submodule update --init --recursive\n#   拉取自模块更新\n#   git submodule update --remote\n#\n#   打包方式：configuration(0:DailyBuild|1:TestFlight|2:Release|3:TFInner)\n#   configuration=0\n#\n#   项目配置（TargetName与源码所在目录需同名）：\n#   targetName=PSCDemoiOS\n#\n#   渠道号：pgy下载 url后缀\n#   pgyChannel=129\n#\n#   是否启用通知 有传值1则启用群通知，2启用内部群通知\n#   notify=1\n#\n#   1 启用oss 2 启用pgy+oss else pgy\n#   publish=0\n#\n#   sh PSC_iOS_Build_SH/UniversalBuild.sh -cfg $configuration -target_name $targetName -channel_name $pgyChannel -notify $notify -publish $publish\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h3 id=\"22-构建主流程\">2.2 构建主流程</h3>\n\n<p>构建主流吃由build_sh.sh 执行，负责iOS构建工作，此部分与打包业务强相关，相对比较稳定，不太需要频繁修改，因此抽离出来</p>\n\n<p>主流程简单说明：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n</pre></td><td class=\"rouge-code\"><pre><span class=\"k\">function </span>build<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"c\">#新增耗时统计</span>\n    <span class=\"nb\">export </span><span class=\"nv\">build_start_time</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">date</span> +%s.%N<span class=\"si\">)</span>\n\n    <span class=\"c\">#初始化环境</span>\n    bInitEnv\n    print_time_cost <span class=\"s2\">\"构建前配置\"</span>\n\n    <span class=\"c\">#执行pod</span>\n    bPodInstall\n    print_time_cost <span class=\"s2\">\"执行pod\"</span>\n\n    <span class=\"c\">#执行构建</span>\n    bBuildProject\n    print_time_cost <span class=\"s2\">\"执行构建\"</span>\n\n    <span class=\"c\">#执行构建后的归档流程：ipa &amp; dsym</span>\n    bCollection\n    print_time_cost <span class=\"s2\">\"执行构建归档操作\"</span>\n\n    <span class=\"c\">#执行构建后的分发流程：上传（发布）安装包，供下载安装</span>\n    bDistribution\n    print_time_cost <span class=\"s2\">\"执行分发操作\"</span>\n\n    <span class=\"c\">#执行构建后的通知流程</span>\n    bNotification\n    print_time_cost <span class=\"s2\">\"执行通知操作\"</span>\n<span class=\"o\">}</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>详细步骤，详见代码相关模块</p>\n\n<h3 id=\"23-额外流程\">2.3 额外流程</h3>\n\n<p>额外流程抽离是考虑到上传、通知、归档等属于打包的后续操作，不需要与打包流程耦合，且这部分的流程抽离，可实现模块的热插拔替换。</p>\n\n<h4 id=\"231-分发\">2.3.1 分发</h4>\n\n<p>​\t目前支持以下三种分法方式：</p>\n\n<ul>\n  <li>蒲公英</li>\n  <li>阿里云OSS</li>\n  <li>AppStore</li>\n</ul>\n\n<p>​\t安装包的分发逻辑调用</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>sh build_ext/build_publish.sh\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>​\t在 build_publish.sh 中执行分发逻辑，</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n</pre></td><td class=\"rouge-code\"><pre><span class=\"k\">function </span>upload_ipa <span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"nb\">export </span><span class=\"nv\">upload_start_time</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">date</span> +%s.%N<span class=\"si\">)</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'///upload_ipa configurationName = '</span><span class=\"k\">${</span><span class=\"nv\">configurationName</span><span class=\"k\">}</span>\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">packedToAppStore</span><span class=\"k\">}</span><span class=\"s2\">\"</span> <span class=\"o\">==</span> <span class=\"s2\">\"1\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">echo</span> <span class=\"s1\">'TFInner 、TestFlight &amp; appstore 上传到appstore 统计耗时'</span>\n        upload_ipa_to_AppStore\n        print_upload_time_cost <span class=\"s2\">\"上传AppStore\"</span>\n\n    <span class=\"k\">else</span>\n        <span class=\"c\">#其他</span>\n        <span class=\"c\">#启用pgy时构建包上传到pgy</span>\n        <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">use_pgy_publish</span><span class=\"k\">}</span><span class=\"s2\">\"</span> <span class=\"o\">=</span> <span class=\"s2\">\"1\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n            </span><span class=\"nb\">echo</span> <span class=\"s1\">'///启用pgy上传，统计耗时'</span>\n            upload_ipa_to_pgyer\n            print_upload_time_cost <span class=\"s2\">\"上传PGY\"</span>\n        <span class=\"k\">fi</span>\n\n        <span class=\"c\">#启用oss</span>\n        <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">use_oss_publish</span><span class=\"k\">}</span><span class=\"s2\">\"</span> <span class=\"o\">=</span> <span class=\"s2\">\"1\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n            </span><span class=\"nb\">echo</span> <span class=\"s1\">'///启用oss上传，统计耗时'</span>\n            upload_ipa_to_aliyunOSS\n            print_upload_time_cost <span class=\"s2\">\"上传oss\"</span>\n        <span class=\"k\">fi\n    fi</span>\n<span class=\"o\">}</span>\n\n\n<span class=\"k\">function </span>upload<span class=\"o\">()</span>\n<span class=\"o\">{</span>   \n    <span class=\"c\">#发布ipa</span>\n    upload_ipa\n<span class=\"o\">}</span>\n\n<span class=\"c\">#归档</span>\nupload\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>​\t上传测试包可以从现在的蒲公英换到Fir或者简单云等，则不需要关心打包流程，只需要将上传模块的方法切换即可。</p>\n\n<ul>\n  <li><strong>dailybuild</strong></li>\n</ul>\n\n<p>​\t蒲公英：</p>\n\n<p>​\t用于测试包构建，安装包目前上传到蒲公英（服务端环境可切换）</p>\n\n<p>​\t上传蒲公英的逻辑：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#发布到第三方分发平台：蒲公英</span>\n<span class=\"k\">function </span>upload_ipa_to_pgyer <span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'/// 上传 PGY 开始 IPA_PATH='</span><span class=\"k\">${</span><span class=\"nv\">IPA_PATH</span><span class=\"k\">}</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'/// 上传 PGY 开始 渠道='</span><span class=\"k\">${</span><span class=\"nv\">channel_name</span><span class=\"k\">}</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'/// 上传 PGY 开始 提交 git_log='</span><span class=\"k\">${</span><span class=\"nv\">git_log</span><span class=\"k\">}</span>\n        \n    <span class=\"nv\">compileEnvironment</span><span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">buildName</span><span class=\"k\">}</span><span class=\"s2\">:</span><span class=\"k\">${</span><span class=\"nv\">git_log</span><span class=\"k\">}</span><span class=\"s2\">\"</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'/// 上传 PGY 开始 内容='</span><span class=\"k\">${</span><span class=\"nv\">compileEnvironment</span><span class=\"k\">}</span>\n\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$channel_name</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then</span>\n        <span class=\"c\"># 渠道空，则走默认 不指定渠道号的上传</span>\n        <span class=\"c\"># 改成2.0api</span>\n        <span class=\"nb\">echo</span> <span class=\"s1\">'/// 上传 PGY 开始 渠道 为空'</span>\n        bash <span class=\"nv\">$build_ext_path</span>/publish_res/pgyer_upload.sh <span class=\"nt\">-k</span> <span class=\"k\">${</span><span class=\"nv\">pgyAPIKey</span><span class=\"k\">}</span> <span class=\"nt\">-d</span> <span class=\"k\">${</span><span class=\"nv\">compileEnvironment</span><span class=\"k\">}</span> <span class=\"k\">${</span><span class=\"nv\">IPA_PATH</span><span class=\"k\">}</span>\n    <span class=\"k\">else</span>\n        <span class=\"c\"># 渠道非空，走下载地址关联 渠道</span>\n        <span class=\"c\"># 改成2.0api</span>\n        <span class=\"nb\">echo</span> <span class=\"s1\">'/// 上传 PGY 开始 渠道='</span><span class=\"k\">${</span><span class=\"nv\">channel_name</span><span class=\"k\">}</span>\n        bash <span class=\"nv\">$build_ext_path</span>/publish_res/pgyer_upload.sh <span class=\"nt\">-k</span> <span class=\"k\">${</span><span class=\"nv\">pgyAPIKey</span><span class=\"k\">}</span> <span class=\"nt\">-d</span> <span class=\"k\">${</span><span class=\"nv\">compileEnvironment</span><span class=\"k\">}</span> <span class=\"nt\">-c</span> <span class=\"k\">${</span><span class=\"nv\">pgyDownloadUrlSubfix</span><span class=\"k\">}</span> <span class=\"k\">${</span><span class=\"nv\">IPA_PATH</span><span class=\"k\">}</span>\n    <span class=\"k\">fi\n            \n    </span><span class=\"nb\">echo</span> <span class=\"s1\">'/// 上传 PGY 结束'</span>\n<span class=\"o\">}</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>​\t阿里云OSS：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#在下载二维码增加git日志</span>\n<span class=\"k\">function </span>add_log_commit_title_msg_to_qrcode <span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"c\">#二维码打上版本信息</span>\n    <span class=\"c\">#TODO: 这里需要安装下工具 ImageMgick [brew install ImageMgick]</span>\n    <span class=\"c\">#check_command_and_install \"convert\" \"ImageMgick\"</span>\n    bash <span class=\"nv\">$build_ext_path</span>/build_tools/build_tools.sh <span class=\"s2\">\"convert\"</span> <span class=\"s2\">\"ImageMagick\"</span>\n    \n    <span class=\"nv\">title</span><span class=\"o\">=</span><span class=\"nv\">$xcodeVersion3number</span>.<span class=\"k\">${</span><span class=\"nv\">channel_name</span><span class=\"k\">}</span>.<span class=\"nv\">$configurationName</span>.<span class=\"k\">${</span><span class=\"nv\">BuildNo</span><span class=\"k\">}</span>\n\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nv\">$1</span> <span class=\"o\">=</span> <span class=\"s2\">\"1\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nv\">dst_line_cnt</span><span class=\"o\">=</span>0\n        <span class=\"c\">#FIXME: 这样取会为空???? ${source_log_arr}</span>\n        <span class=\"nb\">export </span><span class=\"nv\">oss_source_log_arr</span><span class=\"o\">=(</span><span class=\"sb\">`</span><span class=\"nb\">echo</span> <span class=\"nv\">$source_log_str</span> | <span class=\"nb\">tr</span> <span class=\"s1\">'}{'</span> <span class=\"s1\">' '</span><span class=\"sb\">`</span><span class=\"o\">)</span>\n        <span class=\"nb\">export </span><span class=\"nv\">oss_log_line_count</span><span class=\"o\">=</span><span class=\"k\">${#</span><span class=\"nv\">oss_source_log_arr</span><span class=\"p\">[@]</span><span class=\"k\">}</span>\n        <span class=\"nb\">echo</span> <span class=\"s1\">'/// oss 分发： 添加 二维码msg log_line_count='</span><span class=\"nv\">$oss_log_line_count</span>\n        <span class=\"nb\">echo</span> <span class=\"s1\">'/// oss 分发： 添加 二维码msg source_log_arr count='</span><span class=\"k\">${#</span><span class=\"nv\">source_log_arr</span><span class=\"p\">[@]</span><span class=\"k\">}</span>\n\n        <span class=\"k\">for</span><span class=\"o\">((</span> <span class=\"nv\">i</span><span class=\"o\">=</span>0<span class=\"p\">;</span>i&lt;<span class=\"k\">${</span><span class=\"nv\">oss_log_line_count</span><span class=\"k\">}</span><span class=\"p\">;</span>i++<span class=\"o\">))</span>\n        <span class=\"k\">do\n            </span><span class=\"nv\">single_len</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">echo</span> <span class=\"nt\">-n</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">oss_source_log_arr</span><span class=\"p\">[i]</span><span class=\"k\">}</span><span class=\"s2\">\"</span> | <span class=\"nb\">wc</span> <span class=\"nt\">-m</span><span class=\"si\">)</span>\n            <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">oss_source_log_arr</span><span class=\"p\">[i]</span><span class=\"k\">}</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n                </span><span class=\"nv\">oss_singleStr</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">oss_source_log_arr</span><span class=\"p\">[i]</span><span class=\"k\">}</span><span class=\"p\">;</span>\n                <span class=\"nb\">echo</span> <span class=\"s1\">'///--遍历'</span><span class=\"k\">${</span><span class=\"nv\">oss_source_log_arr</span><span class=\"p\">[i]</span><span class=\"k\">}</span><span class=\"s1\">'为空文字长度：'</span><span class=\"nv\">$single_len</span>\n                <span class=\"nv\">dst_line_cnt</span><span class=\"o\">=</span><span class=\"k\">$((</span>dst_line_cnt+1<span class=\"k\">))</span>\n            <span class=\"k\">else\n                </span><span class=\"nv\">line_max_len</span><span class=\"o\">=</span>30\n                <span class=\"nv\">ingle_cnt</span><span class=\"o\">=</span><span class=\"k\">$((</span>single_len <span class=\"o\">/</span> line_max_len<span class=\"k\">))</span>\n\n\n                <span class=\"k\">if</span> <span class=\"o\">((</span>ingle_cnt <span class=\"o\">&gt;</span> 0<span class=\"o\">))</span><span class=\"p\">;</span> <span class=\"k\">then\n                    for</span><span class=\"o\">((</span> <span class=\"nv\">j</span><span class=\"o\">=</span>0<span class=\"p\">;</span>j&lt;<span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">ingle_cnt</span><span class=\"k\">}</span><span class=\"p\">;</span>j++<span class=\"o\">))</span>\n                    <span class=\"k\">do\n                        </span><span class=\"nv\">string</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">oss_source_log_arr</span><span class=\"p\">[i]</span><span class=\"k\">}</span>\n                        <span class=\"nv\">single_line1</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">string</span>:<span class=\"p\">(line_max_len * j)</span>:line_max_len<span class=\"k\">}</span>\n                        <span class=\"nb\">echo</span> <span class=\"s1\">'///--遍历'</span> <span class=\"k\">${</span><span class=\"nv\">oss_source_log_arr</span><span class=\"p\">[i]</span><span class=\"k\">}</span><span class=\"s1\">'文字长度：'</span><span class=\"nv\">$single_len</span><span class=\"s1\">'超阈值阶段：第'</span><span class=\"nv\">$j</span><span class=\"s1\">'行:'</span><span class=\"nv\">$single_line1</span>\n                        oss_singleStr+<span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"se\">\\n</span><span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">single_line1</span><span class=\"k\">}</span><span class=\"p\">;</span>\n                        <span class=\"nv\">dst_line_cnt</span><span class=\"o\">=</span><span class=\"k\">$((</span>dst_line_cnt+1<span class=\"k\">))</span>\n                    <span class=\"k\">done</span><span class=\"p\">;</span>\n                <span class=\"k\">else\n                    </span><span class=\"nb\">echo</span> <span class=\"s1\">'///--遍历'</span> <span class=\"k\">${</span><span class=\"nv\">oss_source_log_arr</span><span class=\"p\">[i]</span><span class=\"k\">}</span><span class=\"s1\">' 文字长度：'</span><span class=\"nv\">$single_len</span>\n                    <span class=\"nv\">dst_line_cnt</span><span class=\"o\">=</span><span class=\"k\">$((</span>dst_line_cnt+1<span class=\"k\">))</span>\n                    oss_singleStr+<span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"se\">\\n</span><span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">oss_source_log_arr</span><span class=\"p\">[i]</span><span class=\"k\">}</span><span class=\"p\">;</span>\n                <span class=\"k\">fi\n            fi\n        done</span><span class=\"p\">;</span>\n        <span class=\"nv\">msg</span><span class=\"o\">=</span><span class=\"nv\">$oss_singleStr</span>\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"/// oss render msg=\"</span><span class=\"nv\">$msg</span>\n        \n        <span class=\"nv\">contentsize_width</span><span class=\"o\">=</span>600\n        <span class=\"nv\">contentsize_height</span><span class=\"o\">=</span><span class=\"k\">$((</span>contentsize_width <span class=\"o\">+</span> <span class=\"nv\">$dst_line_cnt</span> <span class=\"o\">*</span> <span class=\"m\">25</span> <span class=\"o\">+</span> <span class=\"m\">40</span> <span class=\"o\">+</span> <span class=\"m\">40</span><span class=\"k\">))</span> <span class=\"c\">#第一个40是title的高度 第二个40是距离底部空间</span>\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"contentsize_height=\"</span><span class=\"nv\">$contentsize_height</span>\n        <span class=\"c\">#改变原图大小</span>\n        convert <span class=\"nv\">$qrcode_path</span> <span class=\"nt\">-resize</span> <span class=\"k\">${</span><span class=\"nv\">contentsize_width</span><span class=\"k\">}</span>x<span class=\"k\">${</span><span class=\"nv\">contentsize_width</span><span class=\"k\">}</span>^ <span class=\"nt\">-gravity</span> center <span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span>_1.png\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"1 convert：\"</span><span class=\"k\">${</span><span class=\"nv\">contentsize_width</span><span class=\"k\">}</span>x<span class=\"k\">${</span><span class=\"nv\">contentsize_width</span><span class=\"k\">}</span>\n\n        <span class=\"c\">#变高，兼容msg</span>\n        convert <span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span>_1.png <span class=\"nt\">-gravity</span> north <span class=\"nt\">-extent</span> <span class=\"k\">${</span><span class=\"nv\">contentsize_width</span><span class=\"k\">}</span>x<span class=\"k\">${</span><span class=\"nv\">contentsize_height</span><span class=\"k\">}</span> <span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span>_2.png\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"2 convert：\"</span><span class=\"k\">${</span><span class=\"nv\">contentsize_width</span><span class=\"k\">}</span>x<span class=\"k\">${</span><span class=\"nv\">contentsize_height</span><span class=\"k\">}</span>\n\n        <span class=\"c\">#汉字字体</span>\n        <span class=\"nv\">chn_tff_path</span><span class=\"o\">=</span><span class=\"nv\">$build_ext_path</span>/publish_res/chn.ttf\n        \n        <span class=\"c\">#渲染title</span>\n        convert <span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span>_2.png <span class=\"nt\">-gravity</span> north <span class=\"nt\">-pointsize</span> 30 <span class=\"nt\">-font</span> <span class=\"nv\">$chn_tff_path</span> <span class=\"nt\">-fill</span> black <span class=\"nt\">-annotate</span> +0+<span class=\"k\">${</span><span class=\"nv\">contentsize_width</span><span class=\"k\">}</span> <span class=\"nv\">$title</span> <span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span>_3.png\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"3 convert：title：\"</span><span class=\"k\">${</span><span class=\"nv\">title</span><span class=\"k\">}</span>\n\n        <span class=\"c\">#渲染msg</span>\n        <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$msg</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n            </span><span class=\"nb\">echo</span> <span class=\"s2\">\"4 convert：msg：为空\"</span>\n        <span class=\"k\">fi\n        \n        </span>convert <span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span>_3.png <span class=\"nt\">-gravity</span> north <span class=\"nt\">-pointsize</span> 20 <span class=\"nt\">-font</span> <span class=\"nv\">$chn_tff_path</span> <span class=\"nt\">-fill</span> black <span class=\"nt\">-annotate</span> +0+<span class=\"k\">$((${</span><span class=\"nv\">contentsize_width</span><span class=\"k\">}</span><span class=\"o\">+</span><span class=\"m\">40</span><span class=\"k\">))</span> <span class=\"nv\">$msg</span> <span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span>_4.png\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"4 convert：msg：\"</span><span class=\"k\">${</span><span class=\"nv\">msg</span><span class=\"k\">}</span>\n        \n        <span class=\"k\">if </span><span class=\"nb\">test</span> <span class=\"nt\">-e</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span><span class=\"s2\">_4.png\"</span><span class=\"p\">;</span> <span class=\"k\">then\n            </span><span class=\"nb\">echo</span> <span class=\"s2\">\"4 convert：msg 存在\"</span>\n            <span class=\"nv\">qrcode_path_with_msg</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span>_4.png\n        <span class=\"k\">else\n            </span><span class=\"nb\">echo</span> <span class=\"s2\">\"4 convert：msg 不存在 使用3\"</span>\n            <span class=\"nv\">qrcode_path_with_msg</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span>_3.png\n        <span class=\"k\">fi\n\n    else</span>\n        <span class=\"c\">#没有传 1 不需要msg，只给title</span>\n        convert <span class=\"nv\">$qrcode_path</span> <span class=\"nt\">-gravity</span> south <span class=\"nt\">-pointsize</span> 10 <span class=\"nt\">-fill</span> gray <span class=\"nt\">-annotate</span> +0+0 <span class=\"nv\">$qrcode_print_msg</span>  <span class=\"nv\">$qrcode_path_with_msg</span>\n        <span class=\"nb\">echo</span> <span class=\"s1\">'/// oss 分发： 添加 二维码title='</span><span class=\"k\">${</span><span class=\"nv\">title</span><span class=\"k\">}</span>\n    <span class=\"k\">fi</span>\n\n<span class=\"o\">}</span>\n\n<span class=\"c\">#发布到阿里云OSS</span>\n<span class=\"k\">function </span>upload_ipa_to_aliyunOSS <span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"c\">#更新plist的键值对：</span>\n    <span class=\"c\">#    /usr/libexec/PlistBuddy -c \"Set :CFBundleShortVersionString ${version3number}\" ${WeSingNotificationServiceExtension_plist}</span>\n    <span class=\"nv\">manifest_path</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">exportPath</span><span class=\"k\">}</span>/manifest.plist\n    <span class=\"nb\">echo</span> <span class=\"s1\">'/// oss 分发： manifest_path='</span><span class=\"k\">${</span><span class=\"nv\">manifest_path</span><span class=\"k\">}</span>\n    \n    <span class=\"nv\">oss_bucket</span><span class=\"o\">=</span><span class=\"s2\">\"oss_bucket_name\"</span>\n    <span class=\"nv\">oss_platform</span><span class=\"o\">=</span><span class=\"s2\">\"iOS\"</span>\n    <span class=\"nv\">oss_bucket_path</span><span class=\"o\">=</span><span class=\"nv\">$oss_platform</span>/<span class=\"k\">${</span><span class=\"nv\">TARGET_NAME</span><span class=\"k\">}</span>/<span class=\"nv\">$configurationName</span>/<span class=\"k\">${</span><span class=\"nv\">channel_name</span><span class=\"k\">}</span>/<span class=\"k\">${</span><span class=\"nv\">BuildNo</span><span class=\"k\">}</span>/<span class=\"k\">${</span><span class=\"nv\">TARGET_NAME</span><span class=\"k\">}</span>_<span class=\"k\">${</span><span class=\"nv\">channel_name</span><span class=\"k\">}</span>_<span class=\"nv\">$configurationName_</span><span class=\"k\">${</span><span class=\"nv\">BuildNo</span><span class=\"k\">}</span>\n    <span class=\"nv\">oss_path</span><span class=\"o\">=</span><span class=\"s2\">\"oss://</span><span class=\"nv\">$oss_bucket</span><span class=\"s2\">/</span><span class=\"nv\">$oss_bucket_path</span><span class=\"s2\">\"</span>\n    <span class=\"nv\">oss_url</span><span class=\"o\">=</span><span class=\"s2\">\"https://</span><span class=\"nv\">$oss_bucket</span><span class=\"s2\">.oss-cn-beijing.aliyuncs.com/</span><span class=\"nv\">$oss_bucket_path</span><span class=\"s2\">\"</span>\n\n    <span class=\"nv\">oss_ipa_upload_url</span><span class=\"o\">=</span><span class=\"nv\">$oss_path</span><span class=\"s2\">\".ipa\"</span>\n    <span class=\"nv\">oss_ipa_url</span><span class=\"o\">=</span><span class=\"nv\">$oss_url</span><span class=\"s2\">\".ipa\"</span>\n\n    <span class=\"c\">#icon下载地址配置</span>\n    <span class=\"nv\">oss_icon_url</span><span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">aliyunOSSBuicket</span><span class=\"k\">}</span><span class=\"s2\">/icon/icon.png\"</span>\n    <span class=\"nv\">oss_icon_fs_url</span><span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">aliyunOSSBuicket</span><span class=\"k\">}</span><span class=\"s2\">/icon/icon_fs.png\"</span>\n\n    \n    <span class=\"c\">#修改ipa下载地址</span>\n    /usr/libexec/PlistBuddy <span class=\"nt\">-c</span> <span class=\"s2\">\"Set :items:0:assets:0:url </span><span class=\"nv\">$oss_ipa_url</span><span class=\"s2\">\"</span> <span class=\"nv\">$manifest_path</span>\n\n    <span class=\"c\">#修改icon地址</span>\n    /usr/libexec/PlistBuddy <span class=\"nt\">-c</span> <span class=\"s2\">\"Set :items:0:assets:1:url </span><span class=\"nv\">$oss_icon_url</span><span class=\"s2\">\"</span> <span class=\"nv\">$manifest_path</span>\n\n    <span class=\"c\">#修改icon full size地址</span>\n    /usr/libexec/PlistBuddy <span class=\"nt\">-c</span> <span class=\"s2\">\"Set :items:0:assets:2:url </span><span class=\"nv\">$oss_icon_fs_url</span><span class=\"s2\">\"</span> <span class=\"nv\">$manifest_path</span>\n\n\n    <span class=\"c\">#传ipa</span>\n    ossutil <span class=\"nb\">cp</span> <span class=\"k\">${</span><span class=\"nv\">IPA_PATH</span><span class=\"k\">}</span> <span class=\"nv\">$oss_ipa_upload_url</span> <span class=\"nt\">-f</span>\n    \n    <span class=\"c\">#传manifest</span>\n    <span class=\"nv\">oss_manifest_extension</span><span class=\"o\">=</span><span class=\"s2\">\"plist\"</span>\n    <span class=\"nv\">oss_manifest_upload_url</span><span class=\"o\">=</span><span class=\"nv\">$oss_path</span><span class=\"s2\">\".\"</span><span class=\"nv\">$oss_manifest_extension</span>\n    <span class=\"nv\">oss_manifest_url</span><span class=\"o\">=</span><span class=\"nv\">$oss_url</span><span class=\"s2\">\".\"</span><span class=\"nv\">$oss_manifest_extension</span>\n    ossutil <span class=\"nb\">cp</span> <span class=\"k\">${</span><span class=\"nv\">manifest_path</span><span class=\"k\">}</span> <span class=\"nv\">$oss_manifest_upload_url</span> <span class=\"nt\">-f</span>\n    \n    <span class=\"c\">#上述做归档后，生成下载二维码</span>\n    <span class=\"nv\">download_url</span><span class=\"o\">=</span><span class=\"s2\">\"itms-services://?action=download-manifest&amp;url=\"</span><span class=\"nv\">$oss_manifest_url</span>\n    <span class=\"nv\">qrcode_path</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">exportPath</span><span class=\"k\">}</span>/<span class=\"k\">${</span><span class=\"nv\">TARGET_NAME</span><span class=\"k\">}</span>_<span class=\"k\">${</span><span class=\"nv\">BuildNo</span><span class=\"k\">}</span>.png\n    \n    <span class=\"c\">#TODO: 这里需要安装下工具 qrencode [brew install qrencode]</span>\n    bash <span class=\"nv\">$build_ext_path</span>/build_tools/build_tools.sh <span class=\"s2\">\"qrencode\"</span>\n\n    qrencode <span class=\"nt\">-o</span> <span class=\"nv\">$qrcode_path</span> <span class=\"nv\">$download_url</span>\n    \n    <span class=\"c\">#将二维码上传到oss</span>\n    <span class=\"nv\">oss_qrencode_extension</span><span class=\"o\">=</span><span class=\"s2\">\"png\"</span>\n    <span class=\"nv\">oss_qrencode_upload_url</span><span class=\"o\">=</span><span class=\"nv\">$oss_path</span><span class=\"s2\">\".\"</span><span class=\"nv\">$oss_qrencode_extension</span>\n    <span class=\"nv\">qrcode_path_with_msg</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span>_with_msg\n        \n    <span class=\"c\">#如果需要二维码打上log信息则调用</span>\n    <span class=\"nv\">need_msg</span><span class=\"o\">=</span>1\n    add_log_commit_title_msg_to_qrcode <span class=\"nv\">$need_msg</span>\n        \n    <span class=\"c\">#上传到阿里云oss</span>\n    ossutil <span class=\"nb\">cp</span> <span class=\"k\">${</span><span class=\"nv\">qrcode_path_with_msg</span><span class=\"k\">}</span> <span class=\"nv\">$oss_qrencode_upload_url</span> <span class=\"nt\">-f</span>\n    \n    <span class=\"c\">#二维码的url 通知出来</span>\n    <span class=\"nb\">export </span><span class=\"nv\">oss_app_download_qrcode_url</span><span class=\"o\">=</span><span class=\"nv\">$oss_url</span><span class=\"s2\">\".\"</span><span class=\"nv\">$oss_qrencode_extension</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'/// oss 分发： 二维码的oss_app_download_qrcode_url='</span><span class=\"k\">${</span><span class=\"nv\">oss_app_download_qrcode_url</span><span class=\"k\">}</span>\n<span class=\"o\">}</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<ul>\n  <li><strong>TestFlight</strong></li>\n</ul>\n\n<p>​\t打灰度包将执行ipa上传到AppStore后台的操作（服务端环境是正式环境，未来有外网的灰度需求可改成灰度环境）</p>\n\n<ul>\n  <li><strong>Release</strong></li>\n</ul>\n\n<p>​\t打正式包将执行ipa上传到AppStore后台的操作（服务端环境是正式环境）</p>\n\n<ul>\n  <li><strong>TFinner</strong></li>\n</ul>\n\n<p>​\t打灰度包给没有添加测试设备的同事下载，解决100设备不够用（带Debug模式、可切换环境、上传到AppStore）</p>\n\n<p>AppStore分发：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#发布到AppStore</span>\n<span class=\"k\">function </span>upload_ipa_to_AppStore <span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'/// 上传App Store 开始'</span>\n    xcrun altool <span class=\"nt\">--validate-app</span> <span class=\"nt\">-f</span>  <span class=\"nv\">$IPA_PATH</span> <span class=\"nt\">--type</span>  ios  <span class=\"nt\">--apiKey</span> <span class=\"nv\">$appStore_apikey</span> <span class=\"nt\">--apiIssuer</span> <span class=\"nv\">$appStore_apiIssuer</span>\n    xcrun altool <span class=\"nt\">--upload-app</span> <span class=\"nt\">-f</span>  <span class=\"nv\">$IPA_PATH</span> <span class=\"nt\">--type</span>  ios  <span class=\"nt\">--apiKey</span> <span class=\"nv\">$appStore_apikey</span> <span class=\"nt\">--apiIssuer</span> <span class=\"nv\">$appStore_apiIssuer</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'/// 上传App Store 结束'</span>\n<span class=\"o\">}</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h4 id=\"232-通知\">2.3.2 通知</h4>\n\n<p>​\t通知模块目前通过钉钉通知，未来也可改成邮件甚至其他方式，考量亦是如此。通知实现内容可定制，当参数notify不为空，才需要通知测试团队进行更新：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n</pre></td><td class=\"rouge-code\"><pre> <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$notify</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then</span>\n        <span class=\"c\"># 空，不发通知</span>\n        <span class=\"nb\">echo</span> <span class=\"s1\">'/// 本次打包静默，不发通知 '</span>\n <span class=\"k\">else</span>\n    ....\n <span class=\"k\">fi</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>​\t通知通过 build_notification.sh 实现如下逻辑：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#构建通知</span>\n<span class=\"k\">function </span>notification<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"nv\">param</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$param</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">echo</span> <span class=\"s1\">'///构建通知（参数为空）'</span>\n        notify\n    <span class=\"k\">else\n        </span><span class=\"nb\">echo</span> <span class=\"s1\">'///构建通知（参数不为空）：'</span><span class=\"nv\">$param</span>\n        <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">param</span><span class=\"k\">}</span><span class=\"s2\">\"</span> <span class=\"o\">=</span> <span class=\"s2\">\"AppStore\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n            </span><span class=\"nb\">echo</span> <span class=\"s1\">'///构建通知AppStore'</span>\n            notify_AppStore\n        <span class=\"k\">else\n            </span><span class=\"nb\">echo</span> <span class=\"s1\">'///构建异常（参数:）'</span><span class=\"nv\">$param</span>\n            notify_fail <span class=\"nv\">$param</span>\n        <span class=\"k\">fi\n    fi</span>\n\n<span class=\"o\">}</span>\n\n<span class=\"nb\">echo</span> <span class=\"s1\">'///构建通知（'</span><span class=\"nv\">$1</span><span class=\"s1\">')'</span>\n\n<span class=\"c\">#通知</span>\nnotification <span class=\"nv\">$1</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>通知兼容蒲公英下载地址 + oss下载地址：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#执行通知逻辑</span>\n<span class=\"k\">function </span>notify<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"nv\">modify_msg</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">git_log</span><span class=\"k\">}</span>\n    <span class=\"nv\">ProductName</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">xcodeProductName</span><span class=\"k\">}</span>\n    <span class=\"nv\">downloadPrefix</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">PrefixID</span><span class=\"k\">}</span>\n    <span class=\"nv\">channel</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">channel_name</span><span class=\"k\">}</span>\n    <span class=\"nv\">title</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">buildName</span><span class=\"k\">}</span>\n    \n    <span class=\"nv\">app_donwnload_url</span><span class=\"o\">=</span><span class=\"s2\">\"\"</span>\n    <span class=\"nv\">pgy_app_donwnload_url</span><span class=\"o\">=</span><span class=\"s2\">\"\"</span>\n    <span class=\"c\">#启用传pgy</span>\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">use_pgy_publish</span><span class=\"k\">}</span><span class=\"s2\">\"</span> <span class=\"o\">=</span> <span class=\"s2\">\"1\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then</span>\n        <span class=\"c\">#采用直接 拼 channel后缀</span>\n        <span class=\"nv\">shortUrl</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">downloadPrefix</span><span class=\"k\">}${</span><span class=\"nv\">ProductName</span><span class=\"k\">}${</span><span class=\"nv\">channel</span><span class=\"k\">}</span>\n\n\n        <span class=\"nv\">pgy_app_donwnload_url</span><span class=\"o\">=</span><span class=\"s2\">\"https://www.xcxwo.com/</span><span class=\"k\">${</span><span class=\"nv\">shortUrl</span><span class=\"k\">}</span><span class=\"s2\">\"</span>\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"short_download_url = \"</span><span class=\"nv\">$short_download_url</span>\n        <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$short_download_url</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n            </span><span class=\"nv\">app_donwnload_url</span><span class=\"o\">=</span><span class=\"nv\">$pgy_app_donwnload_url</span>\n        <span class=\"k\">else\n            </span><span class=\"nv\">app_donwnload_url</span><span class=\"o\">=</span><span class=\"nv\">$short_download_url</span>\n        <span class=\"k\">fi</span>\n        <span class=\"c\">#蒲公英下载地址</span>\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"通知：蒲公英分发，下载地址：'</span><span class=\"k\">${</span><span class=\"nv\">app_donwnload_url</span><span class=\"k\">}</span><span class=\"s2\">'\"</span>\n    <span class=\"k\">fi</span>\n    \n    \n    <span class=\"c\">#启用传oss</span>\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">use_oss_publish</span><span class=\"k\">}</span><span class=\"s2\">\"</span> <span class=\"o\">=</span> <span class=\"s2\">\"1\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$oss_app_download_qrcode_url</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then</span>\n            <span class=\"c\">#oss下载地址为空</span>\n            <span class=\"nb\">echo</span> <span class=\"s2\">\"通知：oss_app_download_qrcode_url 为空则 下载地址：'</span><span class=\"k\">${</span><span class=\"nv\">app_donwnload_url</span><span class=\"k\">}</span><span class=\"s2\">'\"</span>\n        <span class=\"k\">else\n            </span><span class=\"nb\">echo</span> <span class=\"s2\">\"通知：oss_app_download_qrcode_url 不为空 下载地址：'</span><span class=\"k\">${</span><span class=\"nv\">app_donwnload_url</span><span class=\"k\">}</span><span class=\"s2\">' and '</span><span class=\"nv\">$oss_app_download_qrcode_url</span><span class=\"s2\">'\"</span>\n            <span class=\"nv\">app_donwnload_url</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">pgy_app_donwnload_url</span><span class=\"k\">}</span><span class=\"s1\">'\\n\\n'</span>oss下载地址:<span class=\"nv\">$oss_app_download_qrcode_url</span>\n\n        <span class=\"k\">fi\n    fi\n    \n    </span><span class=\"nb\">echo</span> <span class=\"s2\">\"通知 COME下载地址：'</span><span class=\"k\">${</span><span class=\"nv\">app_donwnload_url</span><span class=\"k\">}</span><span class=\"s2\">'\"</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"通知 内容：'\"\"'</span><span class=\"k\">${</span><span class=\"nv\">ProductName</span><span class=\"k\">}</span><span class=\"s2\">' App更新：'</span><span class=\"k\">${</span><span class=\"nv\">title</span><span class=\"k\">}</span><span class=\"s2\">'</span><span class=\"se\">\\n</span><span class=\"s2\">'</span><span class=\"k\">${</span><span class=\"nv\">modify_msg</span><span class=\"k\">}</span><span class=\"s2\">'</span><span class=\"se\">\\n</span><span class=\"s2\">下载地址：'</span><span class=\"k\">${</span><span class=\"nv\">app_donwnload_url</span><span class=\"k\">}</span><span class=\"s2\">'\"</span>\n    \n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">notify</span><span class=\"k\">}</span><span class=\"s2\">\"</span> <span class=\"o\">=</span> <span class=\"s2\">\"1\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">echo</span> <span class=\"s1\">'/// 本次打发通知到群里 '</span>\n    <span class=\"k\">elif</span> <span class=\"o\">[</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">notify</span><span class=\"k\">}</span><span class=\"s2\">\"</span> <span class=\"o\">=</span> <span class=\"s2\">\"2\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">echo</span> <span class=\"s1\">'/// 本次打发通知到内部群里 '</span>\n        <span class=\"nv\">access_token</span><span class=\"o\">=</span><span class=\"nv\">$internal_access_token</span>\n    <span class=\"k\">else\n        </span><span class=\"nb\">echo</span> <span class=\"s1\">'/// 本次打发通知参数'</span><span class=\"k\">${</span><span class=\"nv\">notify</span><span class=\"k\">}</span>\n    <span class=\"k\">fi\n    \n    if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$notify</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then</span>\n        <span class=\"c\"># 空，不发通知</span>\n        <span class=\"nb\">echo</span> <span class=\"s1\">'/// 本次打包静默，不发通知 '</span>\n\n    <span class=\"k\">else\n        </span><span class=\"nb\">echo</span> <span class=\"s1\">'/// 本次打包发通知 '</span>\n        <span class=\"c\">#发送发版通知</span>\n        curl <span class=\"s1\">'https://oapi.dingtalk.com/robot/send?access_token='</span><span class=\"k\">${</span><span class=\"nv\">access_token</span><span class=\"k\">}</span> <span class=\"se\">\\</span>\n            <span class=\"nt\">-H</span> <span class=\"s1\">'Content-Type: application/json'</span> <span class=\"se\">\\</span>\n            <span class=\"nt\">-d</span> <span class=\"s1\">'{\"msgtype\": \"text\",\n                \"at\": {\n                \"atMobiles\":[\n                    \"xx1\"\n                    \"xx2\"\n                    \"xx3\"\n                    \"xx4\"\n                    \"xx5\"\n                    \"xx6\"\n                    \"xx7\"\n                ],\n                \"isAtAll\": false\n                },\n                 \"text\": {\n                      \"content\": \"'</span><span class=\"k\">${</span><span class=\"nv\">ProductName</span><span class=\"k\">}</span><span class=\"s1\">' App更新：'</span><span class=\"k\">${</span><span class=\"nv\">title</span><span class=\"k\">}</span><span class=\"s1\">'\\n'</span><span class=\"k\">${</span><span class=\"nv\">modify_msg</span><span class=\"k\">}</span><span class=\"s1\">'\\n下载地址：'</span><span class=\"k\">${</span><span class=\"nv\">app_donwnload_url</span><span class=\"k\">}</span><span class=\"s1\">'\"            }\n               }'</span>\n               \n               \n        <span class=\"nb\">echo</span> <span class=\"s1\">'///-------------------------------------------------------'</span>\n        <span class=\"nb\">echo</span> <span class=\"s1\">'/// 通知Come3 '</span>\n        <span class=\"nb\">echo</span> <span class=\"s1\">'///-------------------------------------------------------'</span>\n    <span class=\"k\">fi</span>\n\n<span class=\"o\">}</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>​\t构建失败通知：</p>\n\n<div class=\"language-sh highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#打包出错时通知</span>\n<span class=\"k\">function </span>notify_fail<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"c\">#发布到移动端内部群</span>\n    <span class=\"nv\">access_token</span><span class=\"o\">=</span><span class=\"nv\">$internal_access_token</span>\n    <span class=\"c\">#产物</span>\n    <span class=\"nv\">ProductName</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">xcodeProductName</span><span class=\"k\">}</span>\n    <span class=\"c\">#渠道名</span>\n    <span class=\"nv\">channel</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">channel_name</span><span class=\"k\">}</span>\n    <span class=\"c\">#流水线名称</span>\n    <span class=\"nv\">title</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">buildName</span><span class=\"k\">}</span>\n    \n    <span class=\"c\">#失败原因</span>\n    <span class=\"nv\">reson</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n    \n    <span class=\"nb\">echo</span> <span class=\"s1\">'/// 本次打包异常：发通知到内部群 '</span>\n    <span class=\"c\">#发送发版通知</span>\n    curl <span class=\"s1\">'https://oapi.dingtalk.com/robot/send?access_token='</span><span class=\"k\">${</span><span class=\"nv\">access_token</span><span class=\"k\">}</span> <span class=\"se\">\\</span>\n        <span class=\"nt\">-H</span> <span class=\"s1\">'Content-Type: application/json'</span> <span class=\"se\">\\</span>\n        <span class=\"nt\">-d</span> <span class=\"s1\">'{\"msgtype\": \"text\",\n            \"at\": {\n            \"atMobiles\":[\n                \"DD1\",\n                \"DD2\"\n            ],\n            \"isAtAll\": false\n            },\n             \"text\": {\n                  \"content\": \"❌构建失败:\\nApp:'</span><span class=\"k\">${</span><span class=\"nv\">ProductName</span><span class=\"k\">}</span><span class=\"s1\">'\\n原  因：'</span><span class=\"k\">${</span><span class=\"nv\">reson</span><span class=\"k\">}</span><span class=\"s1\">'\\n流水线：'</span><span class=\"k\">${</span><span class=\"nv\">title</span><span class=\"k\">}</span><span class=\"s1\">'\\n渠  道：'</span><span class=\"k\">${</span><span class=\"nv\">buildName</span><span class=\"k\">}</span><span class=\"s1\">'\"}\n           }'</span>\n           \n           \n    <span class=\"nb\">echo</span> <span class=\"s1\">'///-------------------------------------------------------'</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'/// 构建通知'</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'///-------------------------------------------------------'</span>\n<span class=\"o\">}</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>构建到AppStore时需要测试团队对上线进行验证：也发送下通知</p>\n\n<div class=\"language-sh highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#打包AppStore通知，通知到群给出TestFlight下载链接二维码</span>\n<span class=\"k\">function </span>notify_AppStore<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"c\">#发布到移动端内部群</span>\n    <span class=\"nv\">access_token</span><span class=\"o\">=</span><span class=\"nv\">$internal_access_token</span>\n    <span class=\"c\">#产物</span>\n    <span class=\"nv\">ProductName</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">xcodeProductName</span><span class=\"k\">}</span>\n    <span class=\"c\">#渠道名</span>\n    <span class=\"nv\">channel</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">channel_name</span><span class=\"k\">}</span>\n    <span class=\"c\">#流水线名称</span>\n    <span class=\"nv\">title</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">buildName</span><span class=\"k\">}</span>\n    \n    <span class=\"c\">#testFlight 二维码in OSS</span>\n    <span class=\"nv\">downloadTF</span><span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">aliyunOSSBuicket</span><span class=\"k\">}</span><span class=\"s2\">/AppStoreValid/testflight.png\"</span>\n    \n    <span class=\"nb\">echo</span> <span class=\"s1\">'/// 本次打包构建到AppStore：发通知到内部群 '</span>\n    <span class=\"c\">#发送发版通知</span>\n    curl <span class=\"s1\">'https://oapi.dingtalk.com/robot/send?access_token='</span><span class=\"k\">${</span><span class=\"nv\">access_token</span><span class=\"k\">}</span> <span class=\"se\">\\</span>\n        <span class=\"nt\">-H</span> <span class=\"s1\">'Content-Type: application/json'</span> <span class=\"se\">\\</span>\n        <span class=\"nt\">-d</span> <span class=\"s1\">'{\"msgtype\": \"text\",\n            \"at\": {\n            \"atMobiles\":[\n                \"DD1\",\n                \"DD2\"\n            ],\n            \"isAtAll\": false\n            },\n             \"text\": {\n                  \"content\": \"✅AppSore构建成功:\\nApp:'</span><span class=\"k\">${</span><span class=\"nv\">ProductName</span><span class=\"k\">}</span><span class=\"s1\">'\\n构建名：'</span><span class=\"k\">${</span><span class=\"nv\">configurationName</span><span class=\"k\">}</span><span class=\"s1\">'\\n流水线：'</span><span class=\"k\">${</span><span class=\"nv\">title</span><span class=\"k\">}</span><span class=\"s1\">'\\n版本号：'</span><span class=\"k\">${</span><span class=\"nv\">xcodeVersion3number</span><span class=\"k\">}</span><span class=\"s1\">'\\n构建号：'</span><span class=\"k\">${</span><span class=\"nv\">BuildNo</span><span class=\"k\">}</span><span class=\"s1\">'\\nTestFlight:'</span><span class=\"k\">${</span><span class=\"nv\">downloadTF</span><span class=\"k\">}</span><span class=\"s1\">'\"}\n           }'</span>\n           \n           \n    <span class=\"nb\">echo</span> <span class=\"s1\">'///-------------------------------------------------------'</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'/// 构建通知'</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'///-------------------------------------------------------'</span>\n<span class=\"o\">}</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h4 id=\"233-归档\">2.3.3 归档</h4>\n\n<p>​\t目前在Release、TestFlight 打包时将ipa与dysm打包上传到简单云制品库</p>\n\n<p>​\t构建归档，将ipa与dysm打程zip包</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n</pre></td><td class=\"rouge-code\"><pre><span class=\"k\">function </span>ProductCollection<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">configurationName</span><span class=\"k\">}</span><span class=\"s2\">\"</span> <span class=\"o\">=</span> <span class=\"s2\">\"Release\"</span> <span class=\"o\">]</span> <span class=\"o\">||</span> <span class=\"o\">[</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">configurationName</span><span class=\"k\">}</span><span class=\"s2\">\"</span> <span class=\"o\">=</span> <span class=\"s2\">\"TestFlight\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n\n        </span>dSYMCollection\n    \n        IPACollection\n        \n        <span class=\"nb\">export </span><span class=\"nv\">ProductCollectionPath</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">dSYM_dict_PATH</span><span class=\"k\">}</span>/ProductCollection.zip\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"ProductCollectionPath=\"</span><span class=\"nv\">$ProductCollectionPath</span>\n        zip <span class=\"nv\">$ProductCollectionPath</span> <span class=\"k\">${</span><span class=\"nv\">dSYMZip_PATH</span><span class=\"k\">}</span> <span class=\"k\">${</span><span class=\"nv\">IPAZip_PATH</span><span class=\"k\">}</span>\n        <span class=\"c\">#执行归档,(ipa+dSYM)并找个地方存起来</span>\n        bash <span class=\"nv\">$build_ext_path</span>/<span class=\"nv\">$collection_sh</span>\n    <span class=\"k\">fi</span>\n\n<span class=\"o\">}</span>\n\n<span class=\"k\">function </span>dSYMCollection<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"c\"># zip and copy dSYM</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"dSYMCollection\"</span>\n\n    <span class=\"nb\">cd</span> <span class=\"k\">${</span><span class=\"nv\">build_path</span><span class=\"k\">}</span>/Build/Products/<span class=\"k\">${</span><span class=\"nv\">configurationName</span><span class=\"k\">}</span><span class=\"nt\">-iphoneos</span>\n    find <span class=\"nb\">.</span> <span class=\"nt\">-name</span> <span class=\"s1\">'*.dSYM'</span> | zip <span class=\"nt\">-r</span> <span class=\"k\">${</span><span class=\"nv\">dSYMZip_PATH</span><span class=\"k\">}</span> -@\n    find <span class=\"nb\">.</span> <span class=\"nt\">-name</span> <span class=\"s1\">'*.dSYM'</span> <span class=\"nt\">-exec</span> <span class=\"nb\">cp</span> <span class=\"nt\">-R</span> <span class=\"o\">{}</span> <span class=\"k\">${</span><span class=\"nv\">dSYM_dict_PATH</span><span class=\"k\">}</span> <span class=\"se\">\\;</span>\n    <span class=\"nb\">cd</span> -\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"Copy dSYM.zip file success save path:\"</span> <span class=\"k\">${</span><span class=\"nv\">dSYMZip_PATH</span><span class=\"k\">}</span>\n<span class=\"o\">}</span>\n\n<span class=\"k\">function </span>IPACollection<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"c\"># zip and copy dSYM</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"IPACollection\"</span>\n    <span class=\"nb\">cd</span> <span class=\"k\">${</span><span class=\"nv\">build_path</span><span class=\"k\">}</span>/Build/Products/<span class=\"k\">${</span><span class=\"nv\">configurationName</span><span class=\"k\">}</span><span class=\"nt\">-iphoneos</span>\n    find <span class=\"nb\">.</span> <span class=\"nt\">-name</span> <span class=\"s1\">'*.ipa'</span> | zip <span class=\"nt\">-r</span> <span class=\"k\">${</span><span class=\"nv\">IPAZip_PATH</span><span class=\"k\">}</span> -@\n    find <span class=\"nb\">.</span> <span class=\"nt\">-name</span> <span class=\"s1\">'*.ipa'</span> <span class=\"nt\">-exec</span> <span class=\"nb\">cp</span> <span class=\"nt\">-R</span> <span class=\"o\">{}</span> <span class=\"k\">${</span><span class=\"nv\">dSYM_dict_PATH</span><span class=\"k\">}</span> <span class=\"se\">\\;</span>\n    <span class=\"nb\">cd</span> -\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"Copy IPAZip_PATH.zip file success save path:\"</span> <span class=\"k\">${</span><span class=\"nv\">IPAZip_PATH</span><span class=\"k\">}</span>\n<span class=\"o\">}</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>​\t将zip包归档到简单云</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n</pre></td><td class=\"rouge-code\"><pre><span class=\"k\">function </span>upload_to_store<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"nb\">export </span><span class=\"nv\">p</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'/// 上传 dsym ipa 到制品库 '</span><span class=\"k\">${</span><span class=\"nv\">v</span><span class=\"k\">}</span><span class=\"s1\">'pkgName='</span><span class=\"k\">${</span><span class=\"nv\">pkgName</span><span class=\"k\">}</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"dSYMZip_PATH = \"</span><span class=\"k\">${</span><span class=\"nv\">dSYMZip_PATH</span><span class=\"k\">}</span><span class=\"s2\">\"https://PSC-devops.com/pkg/PSC/raw/OperationsAppAnddSYM/release?version=\"</span><span class=\"k\">${</span><span class=\"nv\">v</span><span class=\"k\">}</span><span class=\"s2\">\"&amp;pkgName=\"</span><span class=\"k\">${</span><span class=\"nv\">pkgName</span><span class=\"k\">}</span>\n    <span class=\"c\">#上传简单云制品库</span>\n    curl <span class=\"nt\">-F</span> <span class=\"s2\">\"file=@\"</span><span class=\"k\">${</span><span class=\"nv\">p</span><span class=\"k\">}</span> <span class=\"nt\">-u</span> 简单云账号:简单云密码 <span class=\"s2\">\"https://PSC-devops.com/pkg/PSC/raw/OperationsAppAnddSYM/release?version=\"</span><span class=\"k\">${</span><span class=\"nv\">v</span><span class=\"k\">}</span><span class=\"s2\">\"&amp;pkgName=\"</span><span class=\"k\">${</span><span class=\"nv\">pkgName</span><span class=\"k\">}</span> <span class=\"nt\">-k</span>\n<span class=\"o\">}</span>\n        \n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>​\t将dSYM上传到bugly，用于定位线上crash：</p>\n\n<div class=\"language-sh highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n</pre></td><td class=\"rouge-code\"><pre><span class=\"k\">function </span>upload_dSYM_to_bugly<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"nb\">export </span><span class=\"nv\">p</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">dSYM_dict_PATH</span><span class=\"k\">}</span>\n    \n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">TARGET_NAME</span><span class=\"k\">}</span><span class=\"s2\">\"</span> <span class=\"o\">=</span> <span class=\"s2\">\"PSCDemoiOS\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nv\">bugly_appid</span><span class=\"o\">=</span><span class=\"nv\">$Demo_bugly_appid</span>\n        <span class=\"nv\">bugly_appkey</span><span class=\"o\">=</span><span class=\"nv\">$Demo_bugly_appkey</span>\n    <span class=\"k\">fi\n    \n    if</span> <span class=\"o\">[</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">TARGET_NAME</span><span class=\"k\">}</span><span class=\"s2\">\"</span> <span class=\"o\">=</span> <span class=\"s2\">\"Operations\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nv\">bugly_appid</span><span class=\"o\">=</span><span class=\"nv\">$operations_bugly_appid</span>\n        <span class=\"nv\">bugly_appkey</span><span class=\"o\">=</span><span class=\"nv\">$operations_bugly_appkey</span>\n    <span class=\"k\">fi\n    \n    </span><span class=\"nb\">echo</span> <span class=\"s2\">\"/// 上传 dsym path </span><span class=\"k\">${</span><span class=\"nv\">p</span><span class=\"k\">}</span><span class=\"s2\">\"</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"/// 上传 dsym target </span><span class=\"k\">${</span><span class=\"nv\">TARGET_NAME</span><span class=\"k\">}</span><span class=\"s2\">\"</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"/// 上传 dsym bugly_appid </span><span class=\"k\">${</span><span class=\"nv\">bugly_appid</span><span class=\"k\">}</span><span class=\"s2\">\"</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"/// 上传 dsym bugly_appkey </span><span class=\"k\">${</span><span class=\"nv\">bugly_appkey</span><span class=\"k\">}</span><span class=\"s2\">\"</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'/// 上传 dsym bugly '</span><span class=\"k\">${</span><span class=\"nv\">versionName</span><span class=\"k\">}</span><span class=\"s1\">'pkgName='</span><span class=\"k\">${</span><span class=\"nv\">pkgName</span><span class=\"k\">}</span>\n    \n    <span class=\"c\">#切换java 版本在流水线实现，这边实现不了</span>\n    java <span class=\"nt\">-version</span>\n<span class=\"c\">#    jdk8</span>\n<span class=\"c\">#    java -version</span>\n    \n    <span class=\"nv\">bugly_jar_path</span><span class=\"o\">=</span><span class=\"nv\">$build_ext_path</span>/collection_res/buglyqq-upload-symbol/buglyqq-upload-symbol.jar\n    \n    java <span class=\"nt\">-jar</span> <span class=\"k\">${</span><span class=\"nv\">bugly_jar_path</span><span class=\"k\">}</span> <span class=\"nt\">-appid</span> <span class=\"k\">${</span><span class=\"nv\">bugly_appid</span><span class=\"k\">}</span> <span class=\"nt\">-appkey</span> <span class=\"k\">${</span><span class=\"nv\">bugly_appkey</span><span class=\"k\">}</span> <span class=\"nt\">-bundleid</span> <span class=\"k\">${</span><span class=\"nv\">pkgName</span><span class=\"k\">}</span> <span class=\"nt\">-version</span> <span class=\"k\">${</span><span class=\"nv\">versionName</span><span class=\"k\">}</span> <span class=\"nt\">-platform</span> IOS <span class=\"nt\">-inputSymbol</span> <span class=\"k\">${</span><span class=\"nv\">p</span><span class=\"k\">}</span>\n<span class=\"o\">}</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h2 id=\"3补充说明\">3.补充说明</h2>\n\n<p>​\t打包脚本抽离成git submodule，以供各个工程项目的集成，减少维护成本，如果没有跟主工程一起更新，则每次构建时需要同步下最新的脚本</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#使用了gitsubmodule 构建组件，兼容git 检出不兼容，需要先执行 git submodule update --init --recursive</span>\ngit submodule update <span class=\"nt\">--init</span> <span class=\"nt\">--recursive</span>\n<span class=\"c\">#拉取自模块更新</span>\ngit submodule update <span class=\"nt\">--remote</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h2 id=\"4author\">4.Author</h2>\n\n<p>​\t有任何问题，欢迎联系：wangshu2015@gmail.com</p>\n\n","name":"2023-11-08-构建流水线实践.md","previous":{"id":"/2023/10/07/抓包实践","tags":[],"relative_path":"_posts/2023-10-09-抓包实践.md","collection":"posts","name":"2023-10-09-抓包实践.md","url":"/2023/10/07/%E6%8A%93%E5%8C%85%E5%AE%9E%E8%B7%B5/","title":"Charles HTTPS实践","date":"2023-10-07 00:00:00 +0800","categories":[],"path":"_posts/2023-10-09-抓包实践.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/home-bg-geek.jpg","slug":"抓包实践","ext":".md"},"output":"<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"google-site-verification\" content=\"xBT4GhYoi5qRD5tr338pgPM5OWHHIDR6mNg1a3euekI\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, viewport-fit=cover\">\n    <meta name=\"description\" content=\"与你一起发现更大的世界。\">\n    <meta name=\"keywords\"  content=\"PaysonChen,iOS,流媒体\">\n    <meta name=\"theme-color\" content=\"#000000\">\n    \n    <!-- Open Graph -->\n    <meta property=\"og:title\" content=\"构建流水线实践 - PaysonChen的博客 | PaysonChen Blog\">\n    \n    <meta property=\"og:type\" content=\"article\">\n    <meta property=\"og:description\" content=\"1 背景\n\">\n    \n    <script type=\"text/javascript\"\n  src=\"https://unpkg.com/mermaid@8.0.0-rc.8/dist/mermaid.min.js\">\n</script>\n<script>\n$(document).ready(function() {\n    mermaid.initialize({\n        theme: 'forest'\n    });\n});\n</script>\n    \n    \n    <meta property=\"article:published_time\" content=\"2023-11-08T00:00:00Z\">\n    \n    \n    <meta property=\"article:author\" content=\"PaysonChen\">\n    \n    \n    \n    <meta property=\"og:image\" content=\"http://localhost:4000\">\n    <meta property=\"og:url\" content=\"http://localhost:4000/2023/11/08/%E6%9E%84%E5%BB%BA%E6%B5%81%E6%B0%B4%E7%BA%BF%E5%AE%9E%E8%B7%B5/\">\n    <meta property=\"og:site_name\" content=\"PaysonChen的博客 | PaysonChen Blog\">\n    \n    <title>构建流水线实践 - PaysonChen的博客 | PaysonChen Blog</title>\n\n    <!-- Web App Manifest -->\n    <link rel=\"manifest\" href=\"/pwa/manifest.json\">\n\n    <!-- Favicon -->\n    <link rel=\"shortcut icon\" href=\"/img/favicon.ico\">\n    \n    <!-- Canonical URL -->\n    <link rel=\"canonical\" href=\"http://localhost:4000/2023/11/08/%E6%9E%84%E5%BB%BA%E6%B5%81%E6%B0%B4%E7%BA%BF%E5%AE%9E%E8%B7%B5/\">\n\n    <!-- Bootstrap Core CSS -->\n    <link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\">\n\n    <!-- Custom CSS -->\n    <link rel=\"stylesheet\" href=\"/css/hux-blog.min.css\">\n\n    <!-- Custom Fonts -->\n    <!-- <link href=\"http://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\"> -->\n    <!-- Hux change font-awesome CDN to qiniu -->\n    <link href=\"//cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\">\n\n\n    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->\n    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->\n    <!--[if lt IE 9]>\n        <script src=\"https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js\"></script>\n        <script src=\"https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js\"></script>\n    <![endif]-->\n\n    <!-- ga & ba script hoook -->\n    <script></script>\n</head>\n\n\n<!-- hack iOS CSS :active style -->\n<body ontouchstart=\"\">\n\n    <!-- Navigation -->\n\n    <nav class=\"navbar navbar-default navbar-custom navbar-fixed-top\">\n        \n        <div class=\"container-fluid\">\n            <!-- Brand and toggle get grouped for better mobile display -->\n            <div class=\"navbar-header page-scroll\">\n                <button type=\"button\" class=\"navbar-toggle\">\n                    <span class=\"sr-only\">Toggle navigation</span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                </button>\n                <a class=\"navbar-brand\" href=\"/\">PaysonChen Blog</a>\n            </div>\n\n            <!-- Collect the nav links, forms, and other content for toggling -->\n            <div id=\"huxblog_navbar\">\n                <div class=\"navbar-collapse\">\n                    <ul class=\"nav navbar-nav navbar-right\">\n                        <li>\n                            <a href=\"/\">Home</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        <li>\n                            <a href=\"/about/\">About</a>\n                        </li>\n                        \n                        \n                        \n                        <li>\n                            <a href=\"/archive/\">Archive</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        <li class=\"search-icon\">\n                            <a href=\"javascript:void(0)\">\n                                <i class=\"fa fa-search\"></i>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n            <!-- /.navbar-collapse -->\n        </div>\n        <!-- /.container -->\n    </nav>\n\n    <script>\n        // Drop Bootstarp low-performance Navbar\n        // Use customize navbar with high-quality material design animation\n        // in high-perf jank-free CSS3 implementation\n        var $body = document.body;\n        var $toggle = document.querySelector('.navbar-toggle');\n        var $navbar = document.querySelector('#huxblog_navbar');\n        var $collapse = document.querySelector('.navbar-collapse');\n\n        var __HuxNav__ = {\n            close: function () {\n                $navbar.className = \" \";\n                // wait until animation end.\n                setTimeout(function () {\n                    // prevent frequently toggle\n                    if ($navbar.className.indexOf('in') < 0) {\n                        $collapse.style.height = \"0px\"\n                    }\n                }, 400)\n            },\n            open: function () {\n                $collapse.style.height = \"auto\"\n                $navbar.className += \" in\";\n            }\n        }\n\n        // Bind Event\n        $toggle.addEventListener('click', function (e) {\n            if ($navbar.className.indexOf('in') > 0) {\n                __HuxNav__.close()\n            } else {\n                __HuxNav__.open()\n            }\n        })\n\n        /**\n         * Since Fastclick is used to delegate 'touchstart' globally\n         * to hack 300ms delay in iOS by performing a fake 'click',\n         * Using 'e.stopPropagation' to stop 'touchstart' event from \n         * $toggle/$collapse will break global delegation.\n         * \n         * Instead, we use a 'e.target' filter to prevent handler\n         * added to document close HuxNav.  \n         *\n         * Also, we use 'click' instead of 'touchstart' as compromise\n         */\n        document.addEventListener('click', function (e) {\n            if (e.target == $toggle) return;\n            if (e.target.className == 'icon-bar') return;\n            __HuxNav__.close();\n        })\n    </script>\n    <!-- Search -->\n<div class=\"search-page\">\n  <div class=\"search-icon-close-container\">\n    <span class=\"search-icon-close\">\n      <i class=\"fa fa-chevron-down\"></i>\n    </span>\n  </div>\n  <div class=\"search-main container\">\n    <div class=\"row\">\n      <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n        <form></form>\n        <input type=\"text\" id=\"search-input\" placeholder=\"$ grep...\">\n        </form>\n        <div id=\"search-results\" class=\"mini-post-list\"></div>\n      </div>\n    </div>\n  </div>\n</div>\n\n    <!-- Image to hack wechat -->\n<!-- <img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\"> -->\n<!-- <img src=\"/img/home-bg-geek.jpg\" width=\"0\" height=\"0\"> -->\n\n<!-- Post Header -->\n\n\n\n<style type=\"text/css\">\n    header.intro-header{\n        position: relative;\n        background-image: url('/img/home-bg-geek.jpg');\n        background: ;\n    }\n\n    \n</style>\n\n<header class=\"intro-header\" >\n\n    <div class=\"header-mask\"></div>\n    \n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <div class=\"post-heading\">\n                    <div class=\"tags\">\n                        \n                    </div>\n                    <h1>构建流水线实践</h1>\n                    \n                    <h2 class=\"subheading\"></h2>\n                    <span class=\"meta\">Posted by PaysonChen on November 8, 2023</span>\n                </div>\n            </div>\n        </div>\n    </div>\n</header>\n\n\n\n\n\n\n<!-- Post Content -->\n<article>\n    <div class=\"container\">\n        <div class=\"row\">\n\n    <!-- Post Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                post-container\">\n\n                <!-- Multi-Lingual -->\n                \n\n\t\t\t\t<h2 id=\"1-背景\">1 背景</h2>\n\n<p>​\t为了适应不通项目的自动化的需求，而且构建的方式和能力也在不断的迭代与演进，同时维护多个构建脚本存在成本与遗漏，因此将打包脚本的通用能力抽离，通过配置参数进行不同项目的构建。</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n</pre></td><td class=\"rouge-code\"><pre># [目的]\n# 为了使流水线建设趋于可维护，易维护，可迁移，易迁移，对构建逻辑进行模块化、将构建主流程划分为：构建前、构建、构建后，三大模块\n#\n#   构建前：参数配置、版本号设置\n#   构建中：Pod install、xcbuild\n#   构建后：归档、分发、通知\n#\n# 当前的构建后方案的选择：\n#   归档：简单云（ipa+dSYM）、bugly（dSYM）\n#   分发：蒲公英、阿里云OSS、AppStore\n#   通知：钉钉机器人\n# 在未来的持续集成过程中，可以对归档方案进行替换、对分发方案进行替换、对通知方案进行替换、不需要阅读和改动构建中流程\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h2 id=\"2-开始\">2 开始</h2>\n\n<p>构建脚本由构建入口、构建主流程、额外流程三个模块构成，</p>\n\n<script src=\"js/mermaid.ts\"></script>\n<div class=\"mermaid\">\n\ngraph TB\nSTART--&gt;入参配置\n入参配置--&gt;构建前-第三方APIKEY配置\n构建前-第三方APIKEY配置--&gt;构建前-设置构建版本号自增\n构建前-设置构建版本号自增--&gt;构建前-获取工程配置  \n构建前-获取工程配置--&gt;构建中-环境变量设置\n构建中-环境变量设置--&gt;构建中-执行Pod依赖安装\n构建中-执行Pod依赖安装--&gt;构建中-执行构建\n构建中-执行构建--&gt;构建中-执行归档\n构建中-执行归档--&gt;构建中-执行分发\n构建中-执行分发--&gt;构建中-执行通知\n构建中-执行通知--&gt;END\n\n</div>\n\n<h3 id=\"21-构建入口\">2.1 构建入口</h3>\n\n<p>构建入口由UniversalBuild.sh 执行，负责可变参数声明及脚本入参处理</p>\n\n<p>参数说明：</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n</pre></td><td class=\"rouge-code\"><pre># [参数]\n#   -cfg                #打包方式：configuration(0:DailyBuild|1:TestFlight|2:Release|3:TFInner)\n#   -target_name        #项目配置：要打包的TargetName\n#   -channel_name       #渠道号：pgy下载 url后缀\n#   -notify             #是否启用通知 有传值1则启用群通知，2启用内部群通知\n#   -publish            #分发方式：1 启用oss| 2 启用pgy+oss | else pgy\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>以下以【Demo】为例：</p>\n\n<p>​\tTarget为PSCDemoiOS</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n</pre></td><td class=\"rouge-code\"><pre># [调用说明]\n#   使用了gitsubmodule 构建组件，兼容git 检出不兼容，需要先执行 git submodule update --init --recursive\n#   git submodule update --init --recursive\n#   拉取自模块更新\n#   git submodule update --remote\n#\n#   打包方式：configuration(0:DailyBuild|1:TestFlight|2:Release|3:TFInner)\n#   configuration=0\n#\n#   项目配置（TargetName与源码所在目录需同名）：\n#   targetName=PSCDemoiOS\n#\n#   渠道号：pgy下载 url后缀\n#   pgyChannel=129\n#\n#   是否启用通知 有传值1则启用群通知，2启用内部群通知\n#   notify=1\n#\n#   1 启用oss 2 启用pgy+oss else pgy\n#   publish=0\n#\n#   sh PSC_iOS_Build_SH/UniversalBuild.sh -cfg $configuration -target_name $targetName -channel_name $pgyChannel -notify $notify -publish $publish\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h3 id=\"22-构建主流程\">2.2 构建主流程</h3>\n\n<p>构建主流吃由build_sh.sh 执行，负责iOS构建工作，此部分与打包业务强相关，相对比较稳定，不太需要频繁修改，因此抽离出来</p>\n\n<p>主流程简单说明：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n</pre></td><td class=\"rouge-code\"><pre><span class=\"k\">function </span>build<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"c\">#新增耗时统计</span>\n    <span class=\"nb\">export </span><span class=\"nv\">build_start_time</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">date</span> +%s.%N<span class=\"si\">)</span>\n\n    <span class=\"c\">#初始化环境</span>\n    bInitEnv\n    print_time_cost <span class=\"s2\">\"构建前配置\"</span>\n\n    <span class=\"c\">#执行pod</span>\n    bPodInstall\n    print_time_cost <span class=\"s2\">\"执行pod\"</span>\n\n    <span class=\"c\">#执行构建</span>\n    bBuildProject\n    print_time_cost <span class=\"s2\">\"执行构建\"</span>\n\n    <span class=\"c\">#执行构建后的归档流程：ipa &amp; dsym</span>\n    bCollection\n    print_time_cost <span class=\"s2\">\"执行构建归档操作\"</span>\n\n    <span class=\"c\">#执行构建后的分发流程：上传（发布）安装包，供下载安装</span>\n    bDistribution\n    print_time_cost <span class=\"s2\">\"执行分发操作\"</span>\n\n    <span class=\"c\">#执行构建后的通知流程</span>\n    bNotification\n    print_time_cost <span class=\"s2\">\"执行通知操作\"</span>\n<span class=\"o\">}</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>详细步骤，详见代码相关模块</p>\n\n<h3 id=\"23-额外流程\">2.3 额外流程</h3>\n\n<p>额外流程抽离是考虑到上传、通知、归档等属于打包的后续操作，不需要与打包流程耦合，且这部分的流程抽离，可实现模块的热插拔替换。</p>\n\n<h4 id=\"231-分发\">2.3.1 分发</h4>\n\n<p>​\t目前支持以下三种分法方式：</p>\n\n<ul>\n  <li>蒲公英</li>\n  <li>阿里云OSS</li>\n  <li>AppStore</li>\n</ul>\n\n<p>​\t安装包的分发逻辑调用</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>sh build_ext/build_publish.sh\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>​\t在 build_publish.sh 中执行分发逻辑，</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n</pre></td><td class=\"rouge-code\"><pre><span class=\"k\">function </span>upload_ipa <span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"nb\">export </span><span class=\"nv\">upload_start_time</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">date</span> +%s.%N<span class=\"si\">)</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'///upload_ipa configurationName = '</span><span class=\"k\">${</span><span class=\"nv\">configurationName</span><span class=\"k\">}</span>\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">packedToAppStore</span><span class=\"k\">}</span><span class=\"s2\">\"</span> <span class=\"o\">==</span> <span class=\"s2\">\"1\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">echo</span> <span class=\"s1\">'TFInner 、TestFlight &amp; appstore 上传到appstore 统计耗时'</span>\n        upload_ipa_to_AppStore\n        print_upload_time_cost <span class=\"s2\">\"上传AppStore\"</span>\n\n    <span class=\"k\">else</span>\n        <span class=\"c\">#其他</span>\n        <span class=\"c\">#启用pgy时构建包上传到pgy</span>\n        <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">use_pgy_publish</span><span class=\"k\">}</span><span class=\"s2\">\"</span> <span class=\"o\">=</span> <span class=\"s2\">\"1\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n            </span><span class=\"nb\">echo</span> <span class=\"s1\">'///启用pgy上传，统计耗时'</span>\n            upload_ipa_to_pgyer\n            print_upload_time_cost <span class=\"s2\">\"上传PGY\"</span>\n        <span class=\"k\">fi</span>\n\n        <span class=\"c\">#启用oss</span>\n        <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">use_oss_publish</span><span class=\"k\">}</span><span class=\"s2\">\"</span> <span class=\"o\">=</span> <span class=\"s2\">\"1\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n            </span><span class=\"nb\">echo</span> <span class=\"s1\">'///启用oss上传，统计耗时'</span>\n            upload_ipa_to_aliyunOSS\n            print_upload_time_cost <span class=\"s2\">\"上传oss\"</span>\n        <span class=\"k\">fi\n    fi</span>\n<span class=\"o\">}</span>\n\n\n<span class=\"k\">function </span>upload<span class=\"o\">()</span>\n<span class=\"o\">{</span>   \n    <span class=\"c\">#发布ipa</span>\n    upload_ipa\n<span class=\"o\">}</span>\n\n<span class=\"c\">#归档</span>\nupload\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>​\t上传测试包可以从现在的蒲公英换到Fir或者简单云等，则不需要关心打包流程，只需要将上传模块的方法切换即可。</p>\n\n<ul>\n  <li><strong>dailybuild</strong></li>\n</ul>\n\n<p>​\t蒲公英：</p>\n\n<p>​\t用于测试包构建，安装包目前上传到蒲公英（服务端环境可切换）</p>\n\n<p>​\t上传蒲公英的逻辑：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#发布到第三方分发平台：蒲公英</span>\n<span class=\"k\">function </span>upload_ipa_to_pgyer <span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'/// 上传 PGY 开始 IPA_PATH='</span><span class=\"k\">${</span><span class=\"nv\">IPA_PATH</span><span class=\"k\">}</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'/// 上传 PGY 开始 渠道='</span><span class=\"k\">${</span><span class=\"nv\">channel_name</span><span class=\"k\">}</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'/// 上传 PGY 开始 提交 git_log='</span><span class=\"k\">${</span><span class=\"nv\">git_log</span><span class=\"k\">}</span>\n        \n    <span class=\"nv\">compileEnvironment</span><span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">buildName</span><span class=\"k\">}</span><span class=\"s2\">:</span><span class=\"k\">${</span><span class=\"nv\">git_log</span><span class=\"k\">}</span><span class=\"s2\">\"</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'/// 上传 PGY 开始 内容='</span><span class=\"k\">${</span><span class=\"nv\">compileEnvironment</span><span class=\"k\">}</span>\n\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$channel_name</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then</span>\n        <span class=\"c\"># 渠道空，则走默认 不指定渠道号的上传</span>\n        <span class=\"c\"># 改成2.0api</span>\n        <span class=\"nb\">echo</span> <span class=\"s1\">'/// 上传 PGY 开始 渠道 为空'</span>\n        bash <span class=\"nv\">$build_ext_path</span>/publish_res/pgyer_upload.sh <span class=\"nt\">-k</span> <span class=\"k\">${</span><span class=\"nv\">pgyAPIKey</span><span class=\"k\">}</span> <span class=\"nt\">-d</span> <span class=\"k\">${</span><span class=\"nv\">compileEnvironment</span><span class=\"k\">}</span> <span class=\"k\">${</span><span class=\"nv\">IPA_PATH</span><span class=\"k\">}</span>\n    <span class=\"k\">else</span>\n        <span class=\"c\"># 渠道非空，走下载地址关联 渠道</span>\n        <span class=\"c\"># 改成2.0api</span>\n        <span class=\"nb\">echo</span> <span class=\"s1\">'/// 上传 PGY 开始 渠道='</span><span class=\"k\">${</span><span class=\"nv\">channel_name</span><span class=\"k\">}</span>\n        bash <span class=\"nv\">$build_ext_path</span>/publish_res/pgyer_upload.sh <span class=\"nt\">-k</span> <span class=\"k\">${</span><span class=\"nv\">pgyAPIKey</span><span class=\"k\">}</span> <span class=\"nt\">-d</span> <span class=\"k\">${</span><span class=\"nv\">compileEnvironment</span><span class=\"k\">}</span> <span class=\"nt\">-c</span> <span class=\"k\">${</span><span class=\"nv\">pgyDownloadUrlSubfix</span><span class=\"k\">}</span> <span class=\"k\">${</span><span class=\"nv\">IPA_PATH</span><span class=\"k\">}</span>\n    <span class=\"k\">fi\n            \n    </span><span class=\"nb\">echo</span> <span class=\"s1\">'/// 上传 PGY 结束'</span>\n<span class=\"o\">}</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>​\t阿里云OSS：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#在下载二维码增加git日志</span>\n<span class=\"k\">function </span>add_log_commit_title_msg_to_qrcode <span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"c\">#二维码打上版本信息</span>\n    <span class=\"c\">#TODO: 这里需要安装下工具 ImageMgick [brew install ImageMgick]</span>\n    <span class=\"c\">#check_command_and_install \"convert\" \"ImageMgick\"</span>\n    bash <span class=\"nv\">$build_ext_path</span>/build_tools/build_tools.sh <span class=\"s2\">\"convert\"</span> <span class=\"s2\">\"ImageMagick\"</span>\n    \n    <span class=\"nv\">title</span><span class=\"o\">=</span><span class=\"nv\">$xcodeVersion3number</span>.<span class=\"k\">${</span><span class=\"nv\">channel_name</span><span class=\"k\">}</span>.<span class=\"nv\">$configurationName</span>.<span class=\"k\">${</span><span class=\"nv\">BuildNo</span><span class=\"k\">}</span>\n\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nv\">$1</span> <span class=\"o\">=</span> <span class=\"s2\">\"1\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nv\">dst_line_cnt</span><span class=\"o\">=</span>0\n        <span class=\"c\">#FIXME: 这样取会为空???? ${source_log_arr}</span>\n        <span class=\"nb\">export </span><span class=\"nv\">oss_source_log_arr</span><span class=\"o\">=(</span><span class=\"sb\">`</span><span class=\"nb\">echo</span> <span class=\"nv\">$source_log_str</span> | <span class=\"nb\">tr</span> <span class=\"s1\">'}{'</span> <span class=\"s1\">' '</span><span class=\"sb\">`</span><span class=\"o\">)</span>\n        <span class=\"nb\">export </span><span class=\"nv\">oss_log_line_count</span><span class=\"o\">=</span><span class=\"k\">${#</span><span class=\"nv\">oss_source_log_arr</span><span class=\"p\">[@]</span><span class=\"k\">}</span>\n        <span class=\"nb\">echo</span> <span class=\"s1\">'/// oss 分发： 添加 二维码msg log_line_count='</span><span class=\"nv\">$oss_log_line_count</span>\n        <span class=\"nb\">echo</span> <span class=\"s1\">'/// oss 分发： 添加 二维码msg source_log_arr count='</span><span class=\"k\">${#</span><span class=\"nv\">source_log_arr</span><span class=\"p\">[@]</span><span class=\"k\">}</span>\n\n        <span class=\"k\">for</span><span class=\"o\">((</span> <span class=\"nv\">i</span><span class=\"o\">=</span>0<span class=\"p\">;</span>i&lt;<span class=\"k\">${</span><span class=\"nv\">oss_log_line_count</span><span class=\"k\">}</span><span class=\"p\">;</span>i++<span class=\"o\">))</span>\n        <span class=\"k\">do\n            </span><span class=\"nv\">single_len</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">echo</span> <span class=\"nt\">-n</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">oss_source_log_arr</span><span class=\"p\">[i]</span><span class=\"k\">}</span><span class=\"s2\">\"</span> | <span class=\"nb\">wc</span> <span class=\"nt\">-m</span><span class=\"si\">)</span>\n            <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">oss_source_log_arr</span><span class=\"p\">[i]</span><span class=\"k\">}</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n                </span><span class=\"nv\">oss_singleStr</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">oss_source_log_arr</span><span class=\"p\">[i]</span><span class=\"k\">}</span><span class=\"p\">;</span>\n                <span class=\"nb\">echo</span> <span class=\"s1\">'///--遍历'</span><span class=\"k\">${</span><span class=\"nv\">oss_source_log_arr</span><span class=\"p\">[i]</span><span class=\"k\">}</span><span class=\"s1\">'为空文字长度：'</span><span class=\"nv\">$single_len</span>\n                <span class=\"nv\">dst_line_cnt</span><span class=\"o\">=</span><span class=\"k\">$((</span>dst_line_cnt+1<span class=\"k\">))</span>\n            <span class=\"k\">else\n                </span><span class=\"nv\">line_max_len</span><span class=\"o\">=</span>30\n                <span class=\"nv\">ingle_cnt</span><span class=\"o\">=</span><span class=\"k\">$((</span>single_len <span class=\"o\">/</span> line_max_len<span class=\"k\">))</span>\n\n\n                <span class=\"k\">if</span> <span class=\"o\">((</span>ingle_cnt <span class=\"o\">&gt;</span> 0<span class=\"o\">))</span><span class=\"p\">;</span> <span class=\"k\">then\n                    for</span><span class=\"o\">((</span> <span class=\"nv\">j</span><span class=\"o\">=</span>0<span class=\"p\">;</span>j&lt;<span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">ingle_cnt</span><span class=\"k\">}</span><span class=\"p\">;</span>j++<span class=\"o\">))</span>\n                    <span class=\"k\">do\n                        </span><span class=\"nv\">string</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">oss_source_log_arr</span><span class=\"p\">[i]</span><span class=\"k\">}</span>\n                        <span class=\"nv\">single_line1</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">string</span>:<span class=\"p\">(line_max_len * j)</span>:line_max_len<span class=\"k\">}</span>\n                        <span class=\"nb\">echo</span> <span class=\"s1\">'///--遍历'</span> <span class=\"k\">${</span><span class=\"nv\">oss_source_log_arr</span><span class=\"p\">[i]</span><span class=\"k\">}</span><span class=\"s1\">'文字长度：'</span><span class=\"nv\">$single_len</span><span class=\"s1\">'超阈值阶段：第'</span><span class=\"nv\">$j</span><span class=\"s1\">'行:'</span><span class=\"nv\">$single_line1</span>\n                        oss_singleStr+<span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"se\">\\n</span><span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">single_line1</span><span class=\"k\">}</span><span class=\"p\">;</span>\n                        <span class=\"nv\">dst_line_cnt</span><span class=\"o\">=</span><span class=\"k\">$((</span>dst_line_cnt+1<span class=\"k\">))</span>\n                    <span class=\"k\">done</span><span class=\"p\">;</span>\n                <span class=\"k\">else\n                    </span><span class=\"nb\">echo</span> <span class=\"s1\">'///--遍历'</span> <span class=\"k\">${</span><span class=\"nv\">oss_source_log_arr</span><span class=\"p\">[i]</span><span class=\"k\">}</span><span class=\"s1\">' 文字长度：'</span><span class=\"nv\">$single_len</span>\n                    <span class=\"nv\">dst_line_cnt</span><span class=\"o\">=</span><span class=\"k\">$((</span>dst_line_cnt+1<span class=\"k\">))</span>\n                    oss_singleStr+<span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"se\">\\n</span><span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">oss_source_log_arr</span><span class=\"p\">[i]</span><span class=\"k\">}</span><span class=\"p\">;</span>\n                <span class=\"k\">fi\n            fi\n        done</span><span class=\"p\">;</span>\n        <span class=\"nv\">msg</span><span class=\"o\">=</span><span class=\"nv\">$oss_singleStr</span>\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"/// oss render msg=\"</span><span class=\"nv\">$msg</span>\n        \n        <span class=\"nv\">contentsize_width</span><span class=\"o\">=</span>600\n        <span class=\"nv\">contentsize_height</span><span class=\"o\">=</span><span class=\"k\">$((</span>contentsize_width <span class=\"o\">+</span> <span class=\"nv\">$dst_line_cnt</span> <span class=\"o\">*</span> <span class=\"m\">25</span> <span class=\"o\">+</span> <span class=\"m\">40</span> <span class=\"o\">+</span> <span class=\"m\">40</span><span class=\"k\">))</span> <span class=\"c\">#第一个40是title的高度 第二个40是距离底部空间</span>\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"contentsize_height=\"</span><span class=\"nv\">$contentsize_height</span>\n        <span class=\"c\">#改变原图大小</span>\n        convert <span class=\"nv\">$qrcode_path</span> <span class=\"nt\">-resize</span> <span class=\"k\">${</span><span class=\"nv\">contentsize_width</span><span class=\"k\">}</span>x<span class=\"k\">${</span><span class=\"nv\">contentsize_width</span><span class=\"k\">}</span>^ <span class=\"nt\">-gravity</span> center <span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span>_1.png\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"1 convert：\"</span><span class=\"k\">${</span><span class=\"nv\">contentsize_width</span><span class=\"k\">}</span>x<span class=\"k\">${</span><span class=\"nv\">contentsize_width</span><span class=\"k\">}</span>\n\n        <span class=\"c\">#变高，兼容msg</span>\n        convert <span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span>_1.png <span class=\"nt\">-gravity</span> north <span class=\"nt\">-extent</span> <span class=\"k\">${</span><span class=\"nv\">contentsize_width</span><span class=\"k\">}</span>x<span class=\"k\">${</span><span class=\"nv\">contentsize_height</span><span class=\"k\">}</span> <span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span>_2.png\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"2 convert：\"</span><span class=\"k\">${</span><span class=\"nv\">contentsize_width</span><span class=\"k\">}</span>x<span class=\"k\">${</span><span class=\"nv\">contentsize_height</span><span class=\"k\">}</span>\n\n        <span class=\"c\">#汉字字体</span>\n        <span class=\"nv\">chn_tff_path</span><span class=\"o\">=</span><span class=\"nv\">$build_ext_path</span>/publish_res/chn.ttf\n        \n        <span class=\"c\">#渲染title</span>\n        convert <span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span>_2.png <span class=\"nt\">-gravity</span> north <span class=\"nt\">-pointsize</span> 30 <span class=\"nt\">-font</span> <span class=\"nv\">$chn_tff_path</span> <span class=\"nt\">-fill</span> black <span class=\"nt\">-annotate</span> +0+<span class=\"k\">${</span><span class=\"nv\">contentsize_width</span><span class=\"k\">}</span> <span class=\"nv\">$title</span> <span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span>_3.png\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"3 convert：title：\"</span><span class=\"k\">${</span><span class=\"nv\">title</span><span class=\"k\">}</span>\n\n        <span class=\"c\">#渲染msg</span>\n        <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$msg</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n            </span><span class=\"nb\">echo</span> <span class=\"s2\">\"4 convert：msg：为空\"</span>\n        <span class=\"k\">fi\n        \n        </span>convert <span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span>_3.png <span class=\"nt\">-gravity</span> north <span class=\"nt\">-pointsize</span> 20 <span class=\"nt\">-font</span> <span class=\"nv\">$chn_tff_path</span> <span class=\"nt\">-fill</span> black <span class=\"nt\">-annotate</span> +0+<span class=\"k\">$((${</span><span class=\"nv\">contentsize_width</span><span class=\"k\">}</span><span class=\"o\">+</span><span class=\"m\">40</span><span class=\"k\">))</span> <span class=\"nv\">$msg</span> <span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span>_4.png\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"4 convert：msg：\"</span><span class=\"k\">${</span><span class=\"nv\">msg</span><span class=\"k\">}</span>\n        \n        <span class=\"k\">if </span><span class=\"nb\">test</span> <span class=\"nt\">-e</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span><span class=\"s2\">_4.png\"</span><span class=\"p\">;</span> <span class=\"k\">then\n            </span><span class=\"nb\">echo</span> <span class=\"s2\">\"4 convert：msg 存在\"</span>\n            <span class=\"nv\">qrcode_path_with_msg</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span>_4.png\n        <span class=\"k\">else\n            </span><span class=\"nb\">echo</span> <span class=\"s2\">\"4 convert：msg 不存在 使用3\"</span>\n            <span class=\"nv\">qrcode_path_with_msg</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span>_3.png\n        <span class=\"k\">fi\n\n    else</span>\n        <span class=\"c\">#没有传 1 不需要msg，只给title</span>\n        convert <span class=\"nv\">$qrcode_path</span> <span class=\"nt\">-gravity</span> south <span class=\"nt\">-pointsize</span> 10 <span class=\"nt\">-fill</span> gray <span class=\"nt\">-annotate</span> +0+0 <span class=\"nv\">$qrcode_print_msg</span>  <span class=\"nv\">$qrcode_path_with_msg</span>\n        <span class=\"nb\">echo</span> <span class=\"s1\">'/// oss 分发： 添加 二维码title='</span><span class=\"k\">${</span><span class=\"nv\">title</span><span class=\"k\">}</span>\n    <span class=\"k\">fi</span>\n\n<span class=\"o\">}</span>\n\n<span class=\"c\">#发布到阿里云OSS</span>\n<span class=\"k\">function </span>upload_ipa_to_aliyunOSS <span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"c\">#更新plist的键值对：</span>\n    <span class=\"c\">#    /usr/libexec/PlistBuddy -c \"Set :CFBundleShortVersionString ${version3number}\" ${WeSingNotificationServiceExtension_plist}</span>\n    <span class=\"nv\">manifest_path</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">exportPath</span><span class=\"k\">}</span>/manifest.plist\n    <span class=\"nb\">echo</span> <span class=\"s1\">'/// oss 分发： manifest_path='</span><span class=\"k\">${</span><span class=\"nv\">manifest_path</span><span class=\"k\">}</span>\n    \n    <span class=\"nv\">oss_bucket</span><span class=\"o\">=</span><span class=\"s2\">\"oss_bucket_name\"</span>\n    <span class=\"nv\">oss_platform</span><span class=\"o\">=</span><span class=\"s2\">\"iOS\"</span>\n    <span class=\"nv\">oss_bucket_path</span><span class=\"o\">=</span><span class=\"nv\">$oss_platform</span>/<span class=\"k\">${</span><span class=\"nv\">TARGET_NAME</span><span class=\"k\">}</span>/<span class=\"nv\">$configurationName</span>/<span class=\"k\">${</span><span class=\"nv\">channel_name</span><span class=\"k\">}</span>/<span class=\"k\">${</span><span class=\"nv\">BuildNo</span><span class=\"k\">}</span>/<span class=\"k\">${</span><span class=\"nv\">TARGET_NAME</span><span class=\"k\">}</span>_<span class=\"k\">${</span><span class=\"nv\">channel_name</span><span class=\"k\">}</span>_<span class=\"nv\">$configurationName_</span><span class=\"k\">${</span><span class=\"nv\">BuildNo</span><span class=\"k\">}</span>\n    <span class=\"nv\">oss_path</span><span class=\"o\">=</span><span class=\"s2\">\"oss://</span><span class=\"nv\">$oss_bucket</span><span class=\"s2\">/</span><span class=\"nv\">$oss_bucket_path</span><span class=\"s2\">\"</span>\n    <span class=\"nv\">oss_url</span><span class=\"o\">=</span><span class=\"s2\">\"https://</span><span class=\"nv\">$oss_bucket</span><span class=\"s2\">.oss-cn-beijing.aliyuncs.com/</span><span class=\"nv\">$oss_bucket_path</span><span class=\"s2\">\"</span>\n\n    <span class=\"nv\">oss_ipa_upload_url</span><span class=\"o\">=</span><span class=\"nv\">$oss_path</span><span class=\"s2\">\".ipa\"</span>\n    <span class=\"nv\">oss_ipa_url</span><span class=\"o\">=</span><span class=\"nv\">$oss_url</span><span class=\"s2\">\".ipa\"</span>\n\n    <span class=\"c\">#icon下载地址配置</span>\n    <span class=\"nv\">oss_icon_url</span><span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">aliyunOSSBuicket</span><span class=\"k\">}</span><span class=\"s2\">/icon/icon.png\"</span>\n    <span class=\"nv\">oss_icon_fs_url</span><span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">aliyunOSSBuicket</span><span class=\"k\">}</span><span class=\"s2\">/icon/icon_fs.png\"</span>\n\n    \n    <span class=\"c\">#修改ipa下载地址</span>\n    /usr/libexec/PlistBuddy <span class=\"nt\">-c</span> <span class=\"s2\">\"Set :items:0:assets:0:url </span><span class=\"nv\">$oss_ipa_url</span><span class=\"s2\">\"</span> <span class=\"nv\">$manifest_path</span>\n\n    <span class=\"c\">#修改icon地址</span>\n    /usr/libexec/PlistBuddy <span class=\"nt\">-c</span> <span class=\"s2\">\"Set :items:0:assets:1:url </span><span class=\"nv\">$oss_icon_url</span><span class=\"s2\">\"</span> <span class=\"nv\">$manifest_path</span>\n\n    <span class=\"c\">#修改icon full size地址</span>\n    /usr/libexec/PlistBuddy <span class=\"nt\">-c</span> <span class=\"s2\">\"Set :items:0:assets:2:url </span><span class=\"nv\">$oss_icon_fs_url</span><span class=\"s2\">\"</span> <span class=\"nv\">$manifest_path</span>\n\n\n    <span class=\"c\">#传ipa</span>\n    ossutil <span class=\"nb\">cp</span> <span class=\"k\">${</span><span class=\"nv\">IPA_PATH</span><span class=\"k\">}</span> <span class=\"nv\">$oss_ipa_upload_url</span> <span class=\"nt\">-f</span>\n    \n    <span class=\"c\">#传manifest</span>\n    <span class=\"nv\">oss_manifest_extension</span><span class=\"o\">=</span><span class=\"s2\">\"plist\"</span>\n    <span class=\"nv\">oss_manifest_upload_url</span><span class=\"o\">=</span><span class=\"nv\">$oss_path</span><span class=\"s2\">\".\"</span><span class=\"nv\">$oss_manifest_extension</span>\n    <span class=\"nv\">oss_manifest_url</span><span class=\"o\">=</span><span class=\"nv\">$oss_url</span><span class=\"s2\">\".\"</span><span class=\"nv\">$oss_manifest_extension</span>\n    ossutil <span class=\"nb\">cp</span> <span class=\"k\">${</span><span class=\"nv\">manifest_path</span><span class=\"k\">}</span> <span class=\"nv\">$oss_manifest_upload_url</span> <span class=\"nt\">-f</span>\n    \n    <span class=\"c\">#上述做归档后，生成下载二维码</span>\n    <span class=\"nv\">download_url</span><span class=\"o\">=</span><span class=\"s2\">\"itms-services://?action=download-manifest&amp;url=\"</span><span class=\"nv\">$oss_manifest_url</span>\n    <span class=\"nv\">qrcode_path</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">exportPath</span><span class=\"k\">}</span>/<span class=\"k\">${</span><span class=\"nv\">TARGET_NAME</span><span class=\"k\">}</span>_<span class=\"k\">${</span><span class=\"nv\">BuildNo</span><span class=\"k\">}</span>.png\n    \n    <span class=\"c\">#TODO: 这里需要安装下工具 qrencode [brew install qrencode]</span>\n    bash <span class=\"nv\">$build_ext_path</span>/build_tools/build_tools.sh <span class=\"s2\">\"qrencode\"</span>\n\n    qrencode <span class=\"nt\">-o</span> <span class=\"nv\">$qrcode_path</span> <span class=\"nv\">$download_url</span>\n    \n    <span class=\"c\">#将二维码上传到oss</span>\n    <span class=\"nv\">oss_qrencode_extension</span><span class=\"o\">=</span><span class=\"s2\">\"png\"</span>\n    <span class=\"nv\">oss_qrencode_upload_url</span><span class=\"o\">=</span><span class=\"nv\">$oss_path</span><span class=\"s2\">\".\"</span><span class=\"nv\">$oss_qrencode_extension</span>\n    <span class=\"nv\">qrcode_path_with_msg</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span>_with_msg\n        \n    <span class=\"c\">#如果需要二维码打上log信息则调用</span>\n    <span class=\"nv\">need_msg</span><span class=\"o\">=</span>1\n    add_log_commit_title_msg_to_qrcode <span class=\"nv\">$need_msg</span>\n        \n    <span class=\"c\">#上传到阿里云oss</span>\n    ossutil <span class=\"nb\">cp</span> <span class=\"k\">${</span><span class=\"nv\">qrcode_path_with_msg</span><span class=\"k\">}</span> <span class=\"nv\">$oss_qrencode_upload_url</span> <span class=\"nt\">-f</span>\n    \n    <span class=\"c\">#二维码的url 通知出来</span>\n    <span class=\"nb\">export </span><span class=\"nv\">oss_app_download_qrcode_url</span><span class=\"o\">=</span><span class=\"nv\">$oss_url</span><span class=\"s2\">\".\"</span><span class=\"nv\">$oss_qrencode_extension</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'/// oss 分发： 二维码的oss_app_download_qrcode_url='</span><span class=\"k\">${</span><span class=\"nv\">oss_app_download_qrcode_url</span><span class=\"k\">}</span>\n<span class=\"o\">}</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<ul>\n  <li><strong>TestFlight</strong></li>\n</ul>\n\n<p>​\t打灰度包将执行ipa上传到AppStore后台的操作（服务端环境是正式环境，未来有外网的灰度需求可改成灰度环境）</p>\n\n<ul>\n  <li><strong>Release</strong></li>\n</ul>\n\n<p>​\t打正式包将执行ipa上传到AppStore后台的操作（服务端环境是正式环境）</p>\n\n<ul>\n  <li><strong>TFinner</strong></li>\n</ul>\n\n<p>​\t打灰度包给没有添加测试设备的同事下载，解决100设备不够用（带Debug模式、可切换环境、上传到AppStore）</p>\n\n<p>AppStore分发：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#发布到AppStore</span>\n<span class=\"k\">function </span>upload_ipa_to_AppStore <span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'/// 上传App Store 开始'</span>\n    xcrun altool <span class=\"nt\">--validate-app</span> <span class=\"nt\">-f</span>  <span class=\"nv\">$IPA_PATH</span> <span class=\"nt\">--type</span>  ios  <span class=\"nt\">--apiKey</span> <span class=\"nv\">$appStore_apikey</span> <span class=\"nt\">--apiIssuer</span> <span class=\"nv\">$appStore_apiIssuer</span>\n    xcrun altool <span class=\"nt\">--upload-app</span> <span class=\"nt\">-f</span>  <span class=\"nv\">$IPA_PATH</span> <span class=\"nt\">--type</span>  ios  <span class=\"nt\">--apiKey</span> <span class=\"nv\">$appStore_apikey</span> <span class=\"nt\">--apiIssuer</span> <span class=\"nv\">$appStore_apiIssuer</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'/// 上传App Store 结束'</span>\n<span class=\"o\">}</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h4 id=\"232-通知\">2.3.2 通知</h4>\n\n<p>​\t通知模块目前通过钉钉通知，未来也可改成邮件甚至其他方式，考量亦是如此。通知实现内容可定制，当参数notify不为空，才需要通知测试团队进行更新：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n</pre></td><td class=\"rouge-code\"><pre> <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$notify</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then</span>\n        <span class=\"c\"># 空，不发通知</span>\n        <span class=\"nb\">echo</span> <span class=\"s1\">'/// 本次打包静默，不发通知 '</span>\n <span class=\"k\">else</span>\n    ....\n <span class=\"k\">fi</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>​\t通知通过 build_notification.sh 实现如下逻辑：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#构建通知</span>\n<span class=\"k\">function </span>notification<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"nv\">param</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$param</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">echo</span> <span class=\"s1\">'///构建通知（参数为空）'</span>\n        notify\n    <span class=\"k\">else\n        </span><span class=\"nb\">echo</span> <span class=\"s1\">'///构建通知（参数不为空）：'</span><span class=\"nv\">$param</span>\n        <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">param</span><span class=\"k\">}</span><span class=\"s2\">\"</span> <span class=\"o\">=</span> <span class=\"s2\">\"AppStore\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n            </span><span class=\"nb\">echo</span> <span class=\"s1\">'///构建通知AppStore'</span>\n            notify_AppStore\n        <span class=\"k\">else\n            </span><span class=\"nb\">echo</span> <span class=\"s1\">'///构建异常（参数:）'</span><span class=\"nv\">$param</span>\n            notify_fail <span class=\"nv\">$param</span>\n        <span class=\"k\">fi\n    fi</span>\n\n<span class=\"o\">}</span>\n\n<span class=\"nb\">echo</span> <span class=\"s1\">'///构建通知（'</span><span class=\"nv\">$1</span><span class=\"s1\">')'</span>\n\n<span class=\"c\">#通知</span>\nnotification <span class=\"nv\">$1</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>通知兼容蒲公英下载地址 + oss下载地址：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#执行通知逻辑</span>\n<span class=\"k\">function </span>notify<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"nv\">modify_msg</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">git_log</span><span class=\"k\">}</span>\n    <span class=\"nv\">ProductName</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">xcodeProductName</span><span class=\"k\">}</span>\n    <span class=\"nv\">downloadPrefix</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">PrefixID</span><span class=\"k\">}</span>\n    <span class=\"nv\">channel</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">channel_name</span><span class=\"k\">}</span>\n    <span class=\"nv\">title</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">buildName</span><span class=\"k\">}</span>\n    \n    <span class=\"nv\">app_donwnload_url</span><span class=\"o\">=</span><span class=\"s2\">\"\"</span>\n    <span class=\"nv\">pgy_app_donwnload_url</span><span class=\"o\">=</span><span class=\"s2\">\"\"</span>\n    <span class=\"c\">#启用传pgy</span>\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">use_pgy_publish</span><span class=\"k\">}</span><span class=\"s2\">\"</span> <span class=\"o\">=</span> <span class=\"s2\">\"1\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then</span>\n        <span class=\"c\">#采用直接 拼 channel后缀</span>\n        <span class=\"nv\">shortUrl</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">downloadPrefix</span><span class=\"k\">}${</span><span class=\"nv\">ProductName</span><span class=\"k\">}${</span><span class=\"nv\">channel</span><span class=\"k\">}</span>\n\n\n        <span class=\"nv\">pgy_app_donwnload_url</span><span class=\"o\">=</span><span class=\"s2\">\"https://www.xcxwo.com/</span><span class=\"k\">${</span><span class=\"nv\">shortUrl</span><span class=\"k\">}</span><span class=\"s2\">\"</span>\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"short_download_url = \"</span><span class=\"nv\">$short_download_url</span>\n        <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$short_download_url</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n            </span><span class=\"nv\">app_donwnload_url</span><span class=\"o\">=</span><span class=\"nv\">$pgy_app_donwnload_url</span>\n        <span class=\"k\">else\n            </span><span class=\"nv\">app_donwnload_url</span><span class=\"o\">=</span><span class=\"nv\">$short_download_url</span>\n        <span class=\"k\">fi</span>\n        <span class=\"c\">#蒲公英下载地址</span>\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"通知：蒲公英分发，下载地址：'</span><span class=\"k\">${</span><span class=\"nv\">app_donwnload_url</span><span class=\"k\">}</span><span class=\"s2\">'\"</span>\n    <span class=\"k\">fi</span>\n    \n    \n    <span class=\"c\">#启用传oss</span>\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">use_oss_publish</span><span class=\"k\">}</span><span class=\"s2\">\"</span> <span class=\"o\">=</span> <span class=\"s2\">\"1\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$oss_app_download_qrcode_url</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then</span>\n            <span class=\"c\">#oss下载地址为空</span>\n            <span class=\"nb\">echo</span> <span class=\"s2\">\"通知：oss_app_download_qrcode_url 为空则 下载地址：'</span><span class=\"k\">${</span><span class=\"nv\">app_donwnload_url</span><span class=\"k\">}</span><span class=\"s2\">'\"</span>\n        <span class=\"k\">else\n            </span><span class=\"nb\">echo</span> <span class=\"s2\">\"通知：oss_app_download_qrcode_url 不为空 下载地址：'</span><span class=\"k\">${</span><span class=\"nv\">app_donwnload_url</span><span class=\"k\">}</span><span class=\"s2\">' and '</span><span class=\"nv\">$oss_app_download_qrcode_url</span><span class=\"s2\">'\"</span>\n            <span class=\"nv\">app_donwnload_url</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">pgy_app_donwnload_url</span><span class=\"k\">}</span><span class=\"s1\">'\\n\\n'</span>oss下载地址:<span class=\"nv\">$oss_app_download_qrcode_url</span>\n\n        <span class=\"k\">fi\n    fi\n    \n    </span><span class=\"nb\">echo</span> <span class=\"s2\">\"通知 COME下载地址：'</span><span class=\"k\">${</span><span class=\"nv\">app_donwnload_url</span><span class=\"k\">}</span><span class=\"s2\">'\"</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"通知 内容：'\"\"'</span><span class=\"k\">${</span><span class=\"nv\">ProductName</span><span class=\"k\">}</span><span class=\"s2\">' App更新：'</span><span class=\"k\">${</span><span class=\"nv\">title</span><span class=\"k\">}</span><span class=\"s2\">'</span><span class=\"se\">\\n</span><span class=\"s2\">'</span><span class=\"k\">${</span><span class=\"nv\">modify_msg</span><span class=\"k\">}</span><span class=\"s2\">'</span><span class=\"se\">\\n</span><span class=\"s2\">下载地址：'</span><span class=\"k\">${</span><span class=\"nv\">app_donwnload_url</span><span class=\"k\">}</span><span class=\"s2\">'\"</span>\n    \n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">notify</span><span class=\"k\">}</span><span class=\"s2\">\"</span> <span class=\"o\">=</span> <span class=\"s2\">\"1\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">echo</span> <span class=\"s1\">'/// 本次打发通知到群里 '</span>\n    <span class=\"k\">elif</span> <span class=\"o\">[</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">notify</span><span class=\"k\">}</span><span class=\"s2\">\"</span> <span class=\"o\">=</span> <span class=\"s2\">\"2\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">echo</span> <span class=\"s1\">'/// 本次打发通知到内部群里 '</span>\n        <span class=\"nv\">access_token</span><span class=\"o\">=</span><span class=\"nv\">$internal_access_token</span>\n    <span class=\"k\">else\n        </span><span class=\"nb\">echo</span> <span class=\"s1\">'/// 本次打发通知参数'</span><span class=\"k\">${</span><span class=\"nv\">notify</span><span class=\"k\">}</span>\n    <span class=\"k\">fi\n    \n    if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$notify</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then</span>\n        <span class=\"c\"># 空，不发通知</span>\n        <span class=\"nb\">echo</span> <span class=\"s1\">'/// 本次打包静默，不发通知 '</span>\n\n    <span class=\"k\">else\n        </span><span class=\"nb\">echo</span> <span class=\"s1\">'/// 本次打包发通知 '</span>\n        <span class=\"c\">#发送发版通知</span>\n        curl <span class=\"s1\">'https://oapi.dingtalk.com/robot/send?access_token='</span><span class=\"k\">${</span><span class=\"nv\">access_token</span><span class=\"k\">}</span> <span class=\"se\">\\</span>\n            <span class=\"nt\">-H</span> <span class=\"s1\">'Content-Type: application/json'</span> <span class=\"se\">\\</span>\n            <span class=\"nt\">-d</span> <span class=\"s1\">'{\"msgtype\": \"text\",\n                \"at\": {\n                \"atMobiles\":[\n                    \"xx1\"\n                    \"xx2\"\n                    \"xx3\"\n                    \"xx4\"\n                    \"xx5\"\n                    \"xx6\"\n                    \"xx7\"\n                ],\n                \"isAtAll\": false\n                },\n                 \"text\": {\n                      \"content\": \"'</span><span class=\"k\">${</span><span class=\"nv\">ProductName</span><span class=\"k\">}</span><span class=\"s1\">' App更新：'</span><span class=\"k\">${</span><span class=\"nv\">title</span><span class=\"k\">}</span><span class=\"s1\">'\\n'</span><span class=\"k\">${</span><span class=\"nv\">modify_msg</span><span class=\"k\">}</span><span class=\"s1\">'\\n下载地址：'</span><span class=\"k\">${</span><span class=\"nv\">app_donwnload_url</span><span class=\"k\">}</span><span class=\"s1\">'\"            }\n               }'</span>\n               \n               \n        <span class=\"nb\">echo</span> <span class=\"s1\">'///-------------------------------------------------------'</span>\n        <span class=\"nb\">echo</span> <span class=\"s1\">'/// 通知Come3 '</span>\n        <span class=\"nb\">echo</span> <span class=\"s1\">'///-------------------------------------------------------'</span>\n    <span class=\"k\">fi</span>\n\n<span class=\"o\">}</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>​\t构建失败通知：</p>\n\n<div class=\"language-sh highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#打包出错时通知</span>\n<span class=\"k\">function </span>notify_fail<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"c\">#发布到移动端内部群</span>\n    <span class=\"nv\">access_token</span><span class=\"o\">=</span><span class=\"nv\">$internal_access_token</span>\n    <span class=\"c\">#产物</span>\n    <span class=\"nv\">ProductName</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">xcodeProductName</span><span class=\"k\">}</span>\n    <span class=\"c\">#渠道名</span>\n    <span class=\"nv\">channel</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">channel_name</span><span class=\"k\">}</span>\n    <span class=\"c\">#流水线名称</span>\n    <span class=\"nv\">title</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">buildName</span><span class=\"k\">}</span>\n    \n    <span class=\"c\">#失败原因</span>\n    <span class=\"nv\">reson</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n    \n    <span class=\"nb\">echo</span> <span class=\"s1\">'/// 本次打包异常：发通知到内部群 '</span>\n    <span class=\"c\">#发送发版通知</span>\n    curl <span class=\"s1\">'https://oapi.dingtalk.com/robot/send?access_token='</span><span class=\"k\">${</span><span class=\"nv\">access_token</span><span class=\"k\">}</span> <span class=\"se\">\\</span>\n        <span class=\"nt\">-H</span> <span class=\"s1\">'Content-Type: application/json'</span> <span class=\"se\">\\</span>\n        <span class=\"nt\">-d</span> <span class=\"s1\">'{\"msgtype\": \"text\",\n            \"at\": {\n            \"atMobiles\":[\n                \"DD1\",\n                \"DD2\"\n            ],\n            \"isAtAll\": false\n            },\n             \"text\": {\n                  \"content\": \"❌构建失败:\\nApp:'</span><span class=\"k\">${</span><span class=\"nv\">ProductName</span><span class=\"k\">}</span><span class=\"s1\">'\\n原  因：'</span><span class=\"k\">${</span><span class=\"nv\">reson</span><span class=\"k\">}</span><span class=\"s1\">'\\n流水线：'</span><span class=\"k\">${</span><span class=\"nv\">title</span><span class=\"k\">}</span><span class=\"s1\">'\\n渠  道：'</span><span class=\"k\">${</span><span class=\"nv\">buildName</span><span class=\"k\">}</span><span class=\"s1\">'\"}\n           }'</span>\n           \n           \n    <span class=\"nb\">echo</span> <span class=\"s1\">'///-------------------------------------------------------'</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'/// 构建通知'</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'///-------------------------------------------------------'</span>\n<span class=\"o\">}</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>构建到AppStore时需要测试团队对上线进行验证：也发送下通知</p>\n\n<div class=\"language-sh highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#打包AppStore通知，通知到群给出TestFlight下载链接二维码</span>\n<span class=\"k\">function </span>notify_AppStore<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"c\">#发布到移动端内部群</span>\n    <span class=\"nv\">access_token</span><span class=\"o\">=</span><span class=\"nv\">$internal_access_token</span>\n    <span class=\"c\">#产物</span>\n    <span class=\"nv\">ProductName</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">xcodeProductName</span><span class=\"k\">}</span>\n    <span class=\"c\">#渠道名</span>\n    <span class=\"nv\">channel</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">channel_name</span><span class=\"k\">}</span>\n    <span class=\"c\">#流水线名称</span>\n    <span class=\"nv\">title</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">buildName</span><span class=\"k\">}</span>\n    \n    <span class=\"c\">#testFlight 二维码in OSS</span>\n    <span class=\"nv\">downloadTF</span><span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">aliyunOSSBuicket</span><span class=\"k\">}</span><span class=\"s2\">/AppStoreValid/testflight.png\"</span>\n    \n    <span class=\"nb\">echo</span> <span class=\"s1\">'/// 本次打包构建到AppStore：发通知到内部群 '</span>\n    <span class=\"c\">#发送发版通知</span>\n    curl <span class=\"s1\">'https://oapi.dingtalk.com/robot/send?access_token='</span><span class=\"k\">${</span><span class=\"nv\">access_token</span><span class=\"k\">}</span> <span class=\"se\">\\</span>\n        <span class=\"nt\">-H</span> <span class=\"s1\">'Content-Type: application/json'</span> <span class=\"se\">\\</span>\n        <span class=\"nt\">-d</span> <span class=\"s1\">'{\"msgtype\": \"text\",\n            \"at\": {\n            \"atMobiles\":[\n                \"DD1\",\n                \"DD2\"\n            ],\n            \"isAtAll\": false\n            },\n             \"text\": {\n                  \"content\": \"✅AppSore构建成功:\\nApp:'</span><span class=\"k\">${</span><span class=\"nv\">ProductName</span><span class=\"k\">}</span><span class=\"s1\">'\\n构建名：'</span><span class=\"k\">${</span><span class=\"nv\">configurationName</span><span class=\"k\">}</span><span class=\"s1\">'\\n流水线：'</span><span class=\"k\">${</span><span class=\"nv\">title</span><span class=\"k\">}</span><span class=\"s1\">'\\n版本号：'</span><span class=\"k\">${</span><span class=\"nv\">xcodeVersion3number</span><span class=\"k\">}</span><span class=\"s1\">'\\n构建号：'</span><span class=\"k\">${</span><span class=\"nv\">BuildNo</span><span class=\"k\">}</span><span class=\"s1\">'\\nTestFlight:'</span><span class=\"k\">${</span><span class=\"nv\">downloadTF</span><span class=\"k\">}</span><span class=\"s1\">'\"}\n           }'</span>\n           \n           \n    <span class=\"nb\">echo</span> <span class=\"s1\">'///-------------------------------------------------------'</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'/// 构建通知'</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'///-------------------------------------------------------'</span>\n<span class=\"o\">}</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h4 id=\"233-归档\">2.3.3 归档</h4>\n\n<p>​\t目前在Release、TestFlight 打包时将ipa与dysm打包上传到简单云制品库</p>\n\n<p>​\t构建归档，将ipa与dysm打程zip包</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n</pre></td><td class=\"rouge-code\"><pre><span class=\"k\">function </span>ProductCollection<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">configurationName</span><span class=\"k\">}</span><span class=\"s2\">\"</span> <span class=\"o\">=</span> <span class=\"s2\">\"Release\"</span> <span class=\"o\">]</span> <span class=\"o\">||</span> <span class=\"o\">[</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">configurationName</span><span class=\"k\">}</span><span class=\"s2\">\"</span> <span class=\"o\">=</span> <span class=\"s2\">\"TestFlight\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n\n        </span>dSYMCollection\n    \n        IPACollection\n        \n        <span class=\"nb\">export </span><span class=\"nv\">ProductCollectionPath</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">dSYM_dict_PATH</span><span class=\"k\">}</span>/ProductCollection.zip\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"ProductCollectionPath=\"</span><span class=\"nv\">$ProductCollectionPath</span>\n        zip <span class=\"nv\">$ProductCollectionPath</span> <span class=\"k\">${</span><span class=\"nv\">dSYMZip_PATH</span><span class=\"k\">}</span> <span class=\"k\">${</span><span class=\"nv\">IPAZip_PATH</span><span class=\"k\">}</span>\n        <span class=\"c\">#执行归档,(ipa+dSYM)并找个地方存起来</span>\n        bash <span class=\"nv\">$build_ext_path</span>/<span class=\"nv\">$collection_sh</span>\n    <span class=\"k\">fi</span>\n\n<span class=\"o\">}</span>\n\n<span class=\"k\">function </span>dSYMCollection<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"c\"># zip and copy dSYM</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"dSYMCollection\"</span>\n\n    <span class=\"nb\">cd</span> <span class=\"k\">${</span><span class=\"nv\">build_path</span><span class=\"k\">}</span>/Build/Products/<span class=\"k\">${</span><span class=\"nv\">configurationName</span><span class=\"k\">}</span><span class=\"nt\">-iphoneos</span>\n    find <span class=\"nb\">.</span> <span class=\"nt\">-name</span> <span class=\"s1\">'*.dSYM'</span> | zip <span class=\"nt\">-r</span> <span class=\"k\">${</span><span class=\"nv\">dSYMZip_PATH</span><span class=\"k\">}</span> -@\n    find <span class=\"nb\">.</span> <span class=\"nt\">-name</span> <span class=\"s1\">'*.dSYM'</span> <span class=\"nt\">-exec</span> <span class=\"nb\">cp</span> <span class=\"nt\">-R</span> <span class=\"o\">{}</span> <span class=\"k\">${</span><span class=\"nv\">dSYM_dict_PATH</span><span class=\"k\">}</span> <span class=\"se\">\\;</span>\n    <span class=\"nb\">cd</span> -\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"Copy dSYM.zip file success save path:\"</span> <span class=\"k\">${</span><span class=\"nv\">dSYMZip_PATH</span><span class=\"k\">}</span>\n<span class=\"o\">}</span>\n\n<span class=\"k\">function </span>IPACollection<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"c\"># zip and copy dSYM</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"IPACollection\"</span>\n    <span class=\"nb\">cd</span> <span class=\"k\">${</span><span class=\"nv\">build_path</span><span class=\"k\">}</span>/Build/Products/<span class=\"k\">${</span><span class=\"nv\">configurationName</span><span class=\"k\">}</span><span class=\"nt\">-iphoneos</span>\n    find <span class=\"nb\">.</span> <span class=\"nt\">-name</span> <span class=\"s1\">'*.ipa'</span> | zip <span class=\"nt\">-r</span> <span class=\"k\">${</span><span class=\"nv\">IPAZip_PATH</span><span class=\"k\">}</span> -@\n    find <span class=\"nb\">.</span> <span class=\"nt\">-name</span> <span class=\"s1\">'*.ipa'</span> <span class=\"nt\">-exec</span> <span class=\"nb\">cp</span> <span class=\"nt\">-R</span> <span class=\"o\">{}</span> <span class=\"k\">${</span><span class=\"nv\">dSYM_dict_PATH</span><span class=\"k\">}</span> <span class=\"se\">\\;</span>\n    <span class=\"nb\">cd</span> -\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"Copy IPAZip_PATH.zip file success save path:\"</span> <span class=\"k\">${</span><span class=\"nv\">IPAZip_PATH</span><span class=\"k\">}</span>\n<span class=\"o\">}</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>​\t将zip包归档到简单云</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n</pre></td><td class=\"rouge-code\"><pre><span class=\"k\">function </span>upload_to_store<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"nb\">export </span><span class=\"nv\">p</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'/// 上传 dsym ipa 到制品库 '</span><span class=\"k\">${</span><span class=\"nv\">v</span><span class=\"k\">}</span><span class=\"s1\">'pkgName='</span><span class=\"k\">${</span><span class=\"nv\">pkgName</span><span class=\"k\">}</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"dSYMZip_PATH = \"</span><span class=\"k\">${</span><span class=\"nv\">dSYMZip_PATH</span><span class=\"k\">}</span><span class=\"s2\">\"https://PSC-devops.com/pkg/PSC/raw/OperationsAppAnddSYM/release?version=\"</span><span class=\"k\">${</span><span class=\"nv\">v</span><span class=\"k\">}</span><span class=\"s2\">\"&amp;pkgName=\"</span><span class=\"k\">${</span><span class=\"nv\">pkgName</span><span class=\"k\">}</span>\n    <span class=\"c\">#上传简单云制品库</span>\n    curl <span class=\"nt\">-F</span> <span class=\"s2\">\"file=@\"</span><span class=\"k\">${</span><span class=\"nv\">p</span><span class=\"k\">}</span> <span class=\"nt\">-u</span> 简单云账号:简单云密码 <span class=\"s2\">\"https://PSC-devops.com/pkg/PSC/raw/OperationsAppAnddSYM/release?version=\"</span><span class=\"k\">${</span><span class=\"nv\">v</span><span class=\"k\">}</span><span class=\"s2\">\"&amp;pkgName=\"</span><span class=\"k\">${</span><span class=\"nv\">pkgName</span><span class=\"k\">}</span> <span class=\"nt\">-k</span>\n<span class=\"o\">}</span>\n        \n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>​\t将dSYM上传到bugly，用于定位线上crash：</p>\n\n<div class=\"language-sh highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n</pre></td><td class=\"rouge-code\"><pre><span class=\"k\">function </span>upload_dSYM_to_bugly<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"nb\">export </span><span class=\"nv\">p</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">dSYM_dict_PATH</span><span class=\"k\">}</span>\n    \n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">TARGET_NAME</span><span class=\"k\">}</span><span class=\"s2\">\"</span> <span class=\"o\">=</span> <span class=\"s2\">\"PSCDemoiOS\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nv\">bugly_appid</span><span class=\"o\">=</span><span class=\"nv\">$Demo_bugly_appid</span>\n        <span class=\"nv\">bugly_appkey</span><span class=\"o\">=</span><span class=\"nv\">$Demo_bugly_appkey</span>\n    <span class=\"k\">fi\n    \n    if</span> <span class=\"o\">[</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">TARGET_NAME</span><span class=\"k\">}</span><span class=\"s2\">\"</span> <span class=\"o\">=</span> <span class=\"s2\">\"Operations\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nv\">bugly_appid</span><span class=\"o\">=</span><span class=\"nv\">$operations_bugly_appid</span>\n        <span class=\"nv\">bugly_appkey</span><span class=\"o\">=</span><span class=\"nv\">$operations_bugly_appkey</span>\n    <span class=\"k\">fi\n    \n    </span><span class=\"nb\">echo</span> <span class=\"s2\">\"/// 上传 dsym path </span><span class=\"k\">${</span><span class=\"nv\">p</span><span class=\"k\">}</span><span class=\"s2\">\"</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"/// 上传 dsym target </span><span class=\"k\">${</span><span class=\"nv\">TARGET_NAME</span><span class=\"k\">}</span><span class=\"s2\">\"</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"/// 上传 dsym bugly_appid </span><span class=\"k\">${</span><span class=\"nv\">bugly_appid</span><span class=\"k\">}</span><span class=\"s2\">\"</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"/// 上传 dsym bugly_appkey </span><span class=\"k\">${</span><span class=\"nv\">bugly_appkey</span><span class=\"k\">}</span><span class=\"s2\">\"</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'/// 上传 dsym bugly '</span><span class=\"k\">${</span><span class=\"nv\">versionName</span><span class=\"k\">}</span><span class=\"s1\">'pkgName='</span><span class=\"k\">${</span><span class=\"nv\">pkgName</span><span class=\"k\">}</span>\n    \n    <span class=\"c\">#切换java 版本在流水线实现，这边实现不了</span>\n    java <span class=\"nt\">-version</span>\n<span class=\"c\">#    jdk8</span>\n<span class=\"c\">#    java -version</span>\n    \n    <span class=\"nv\">bugly_jar_path</span><span class=\"o\">=</span><span class=\"nv\">$build_ext_path</span>/collection_res/buglyqq-upload-symbol/buglyqq-upload-symbol.jar\n    \n    java <span class=\"nt\">-jar</span> <span class=\"k\">${</span><span class=\"nv\">bugly_jar_path</span><span class=\"k\">}</span> <span class=\"nt\">-appid</span> <span class=\"k\">${</span><span class=\"nv\">bugly_appid</span><span class=\"k\">}</span> <span class=\"nt\">-appkey</span> <span class=\"k\">${</span><span class=\"nv\">bugly_appkey</span><span class=\"k\">}</span> <span class=\"nt\">-bundleid</span> <span class=\"k\">${</span><span class=\"nv\">pkgName</span><span class=\"k\">}</span> <span class=\"nt\">-version</span> <span class=\"k\">${</span><span class=\"nv\">versionName</span><span class=\"k\">}</span> <span class=\"nt\">-platform</span> IOS <span class=\"nt\">-inputSymbol</span> <span class=\"k\">${</span><span class=\"nv\">p</span><span class=\"k\">}</span>\n<span class=\"o\">}</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h2 id=\"3补充说明\">3.补充说明</h2>\n\n<p>​\t打包脚本抽离成git submodule，以供各个工程项目的集成，减少维护成本，如果没有跟主工程一起更新，则每次构建时需要同步下最新的脚本</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#使用了gitsubmodule 构建组件，兼容git 检出不兼容，需要先执行 git submodule update --init --recursive</span>\ngit submodule update <span class=\"nt\">--init</span> <span class=\"nt\">--recursive</span>\n<span class=\"c\">#拉取自模块更新</span>\ngit submodule update <span class=\"nt\">--remote</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h2 id=\"4author\">4.Author</h2>\n\n<p>​\t有任何问题，欢迎联系：wangshu2015@gmail.com</p>\n\n\n\n                <hr style=\"visibility: hidden;\">\n                <ul class=\"pager\">\n                    \n                    <li class=\"previous\">\n                        <a href=\"/2023/10/07/%E6%8A%93%E5%8C%85%E5%AE%9E%E8%B7%B5/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Charles HTTPS实践\">\n                        Previous<br>\n                        <span>Charles HTTPS实践</span>\n                        </a>\n                    </li>\n                    \n                    \n                    <li class=\"next\">\n                        <a href=\"/2024/01/08/ios/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"iOS组件化实现之：实用工具沉淀及介绍\">\n                        Next<br>\n                        <span>iOS组件化实现之：实用工具沉淀及介绍</span>\n                        </a>\n                    </li>\n                    \n                </ul>\n                <hr style=\"visibility: hidden;\">\n\n                \n                <!-- disqus 评论框 start -->\n                <div class=\"comment\">\n                    <div id=\"disqus_thread\" class=\"disqus-thread\"></div>\n                </div>\n                <!-- disqus 评论框 end -->\n                \n\n                \n            </div>  \n\n    <!-- Side Catalog Container -->\n        \n            <div class=\"\n                col-lg-2 col-lg-offset-0\n                visible-lg-block\n                sidebar-container\n                catalog-container\">\n                <div class=\"side-catalog\">\n                    <hr class=\"hidden-sm hidden-xs\">\n                    <h5>\n                        <a class=\"catalog-toggle\" href=\"#\">CATALOG</a>\n                    </h5>\n                    <ul class=\"catalog-body\"></ul>\n                </div>\n            </div>\n        \n\n    <!-- Sidebar Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                sidebar-container\">\n\n                <!-- Featured Tags -->\n                \n\n\n<section>\n    \n        <hr class=\"hidden-sm hidden-xs\">\n    \n    <h5><a href=\"/archive/\">FEATURED TAGS</a></h5>\n    <div class=\"tags\">\n        \n        \n        \n        \n        \n    </div>\n</section>\n\n\n                <!-- Friends Blog -->\n                \n            </div>\n        </div>\n    </div>\n</article>\n\n<!-- add support for mathjax by voleking-->\n\n\n\n\n\n\n<!-- disqus 公共JS代码 start (一个网页只需插入一次) -->\n<script type=\"text/javascript\">\n    /* * * CONFIGURATION VARIABLES * * */\n    var disqus_shortname = \"Cyp\";\n    var disqus_identifier = \"/2023/11/08/构建流水线实践\";\n    var disqus_url = \"http://localhost:4000/2023/11/08/%E6%9E%84%E5%BB%BA%E6%B5%81%E6%B0%B4%E7%BA%BF%E5%AE%9E%E8%B7%B5/\";\n\n    (function() {\n        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;\n        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';\n        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);\n    })();\n</script>\n<!-- disqus 公共JS代码 end -->\n\n\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n      var d = document, t = 'script',\n          o = d.createElement(t),\n          s = d.getElementsByTagName(t)[0];\n      o.src = u;\n      if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n      s.parentNode.insertBefore(o, s);\n    }\n</script>\n<!-- anchor-js, Doc:http://bryanbraun.github.io/anchorjs/ -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/anchor-js/1.1.1/anchor.min.js\",function(){\n        anchors.options = {\n          visible: 'hover',\n          placement: 'right',\n          // icon: '#'\n        };\n        anchors.add().remove('.intro-header h1').remove('.subheading').remove('.sidebar-container h5');\n    })\n</script>\n<style>\n    /* place left on bigger screen */\n    @media all and (min-width: 800px) {\n        .anchorjs-link{\n            position: absolute;\n            left: -0.75em;\n            font-size: 1.1em;\n            margin-top : -0.1em;\n        }\n    }\n</style>\n\n\n\n    <!-- Footer -->\n<footer>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <!-- SNS Link -->\n                \n\n\n<ul class=\"list-inline text-center\">\n\n\n  \n  \n  \n  \n  \n  \n  \n</ul>\n\n                <p class=\"copyright text-muted\">\n                    Copyright &copy; PaysonChen Blog 2024\n                    <br>\n                    <!-- Powered by <a href=\"http://huangxuan.me\">Hux Blog</a> | -->\n                 <!--    <iframe style=\"margin-left: 2px; margin-bottom:-5px;\" frameborder=\"0\" scrolling=\"0\" width=\"100px\"\n                        height=\"20px\"\n                        src=\"https://ghbtns.com/github-btn.html?user=huxpro&repo=huxpro.github.io&type=star&count=true\">\n                    </iframe> -->\n                </p>\n            </div>\n        </div>\n    </div>\n</footer>\n\n<!-- jQuery -->\n<script src=\"/js/jquery.min.js \"></script>\n\n<!-- Bootstrap Core JavaScript -->\n<!-- Currently, only navbar scroll-down effect at desktop still depends on this -->\n<script src=\"/js/bootstrap.min.js \"></script>\n\n<!-- Custom Theme JavaScript -->\n<script src=\"/js/hux-blog.min.js \"></script>\n\n<!-- Simple Jekyll Search -->\n<script src=\"/js/simple-jekyll-search.min.js\"></script>\n\n<!-- Service Worker -->\n\n<script src=\"/js/snackbar.js \"></script>\n<script src=\"/js/sw-registration.js \"></script>\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n        var d = document, t = 'script',\n            o = d.createElement(t),\n            s = d.getElementsByTagName(t)[0];\n        o.src = u;\n        if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n        s.parentNode.insertBefore(o, s);\n    }\n</script>\n\n<!--\n     Because of the native support for backtick-style fenced code blocks\n     right within the Markdown is landed in Github Pages,\n     From V1.6, There is no need for Highlight.js,\n     so Huxblog drops it officially.\n\n     - https://github.com/blog/2100-github-pages-now-faster-and-simpler-with-jekyll-3-0\n     - https://help.github.com/articles/creating-and-highlighting-code-blocks/\n     - https://github.com/jneen/rouge/wiki/list-of-supported-languages-and-lexers\n-->\n<!--\n    <script>\n        async(\"http://cdn.bootcss.com/highlight.js/8.6/highlight.min.js\", function(){\n            hljs.initHighlightingOnLoad();\n        })\n    </script>\n    <link href=\"http://cdn.bootcss.com/highlight.js/8.6/styles/github.min.css\" rel=\"stylesheet\">\n-->\n\n\n\n\n\n\n\n<!--fastClick.js -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/fastclick/1.0.6/fastclick.min.js\", function () {\n        var $nav = document.querySelector(\"nav\");\n        if ($nav) FastClick.attach($nav);\n    })\n</script>\n\n\n<!-- Google Analytics -->\n\n\n\n<!-- Baidu Tongji -->\n\n\n\n<!-- Side Catalog -->\n\n<script type=\"text/javascript\">\n    function generateCatalog(selector) {\n\n        // interop with multilangual \n        if ('' == 'true') {\n            _containerSelector = 'div.post-container.active'\n        } else {\n            _containerSelector = 'div.post-container'\n        }\n\n        // init\n        var P = $(_containerSelector), a, n, t, l, i, c;\n        a = P.find('h1,h2,h3,h4,h5,h6');\n\n        // clean\n        $(selector).html('')\n\n        // appending\n        a.each(function () {\n            n = $(this).prop('tagName').toLowerCase();\n            i = \"#\" + $(this).prop('id');\n            t = $(this).text();\n            c = $('<a href=\"' + i + '\" rel=\"nofollow\">' + t + '</a>');\n            l = $('<li class=\"' + n + '_nav\"></li>').append(c);\n            $(selector).append(l);\n        });\n        return true;\n    }\n\n    generateCatalog(\".catalog-body\");\n\n    // toggle side catalog\n    $(\".catalog-toggle\").click((function (e) {\n        e.preventDefault();\n        $('.side-catalog').toggleClass(\"fold\")\n    }))\n\n    /*\n     * Doc: https://github.com/davist11/jQuery-One-Page-Nav\n     * Fork by Hux to support padding\n     */\n    async(\"/js/jquery.nav.js\", function () {\n        $('.catalog-body').onePageNav({\n            currentClass: \"active\",\n            changeHash: !1,\n            easing: \"swing\",\n            filter: \"\",\n            scrollSpeed: 700,\n            scrollOffset: 0,\n            scrollThreshold: .2,\n            begin: null,\n            end: null,\n            scrollChange: null,\n            padding: 80\n        });\n    });\n</script>\n\n\n\n<!-- Multi-Lingual -->\n\n\n<!-- Simple Jekyll Search -->\n<script>\n    // https://stackoverflow.com/questions/1912501/unescape-html-entities-in-javascript\n    function htmlDecode(input) {\n        var e = document.createElement('textarea');\n        e.innerHTML = input;\n        // handle case of empty input\n        return e.childNodes.length === 0 ? \"\" : e.childNodes[0].nodeValue;\n    }\n\n    SimpleJekyllSearch({\n        searchInput: document.getElementById('search-input'),\n        resultsContainer: document.getElementById('search-results'),\n        json: '/search.json',\n        searchResultTemplate: '<div class=\"post-preview item\"><a href=\"{url}\"><h2 class=\"post-title\">{title}</h2><h3 class=\"post-subtitle\">{subtitle}</h3><hr></a></div>',\n        noResultsText: 'No results',\n        limit: 50,\n        fuzzy: false,\n        // a hack to get escaped subtitle unescaped. for some reason, \n        // post.subtitle w/o escape filter nuke entire search.\n        templateMiddleware: function (prop, value, template) {\n            if (prop === 'subtitle' || prop === 'title') {\n                if (value.indexOf(\"code\")) {\n                    return htmlDecode(value);\n                } else {\n                    return value;\n                }\n            }\n        }\n    });\n\n    $(document).ready(function () {\n        var $searchPage = $('.search-page');\n        var $searchOpen = $('.search-icon');\n        var $searchClose = $('.search-icon-close');\n        var $searchInput = $('#search-input');\n        var $body = $('body');\n\n        $searchOpen.on('click', function (e) {\n            e.preventDefault();\n            $searchPage.toggleClass('search-active');\n            var prevClasses = $body.attr('class') || '';\n            setTimeout(function () {\n                $body.addClass('no-scroll');\n            }, 400)\n\n            if ($searchPage.hasClass('search-active')) {\n                $searchClose.on('click', function (e) {\n                    e.preventDefault();\n                    $searchPage.removeClass('search-active');\n                    $body.attr('class', prevClasses);  // from closure \n                });\n                $searchInput.focus();\n            }\n        });\n    });\n</script>\n\n\n<!-- Image to hack wechat -->\n<img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\" />\n<!-- Migrate from head to bottom, no longer block render and still work -->\n\n</body>\n\n</html>\n","excerpt":"<h2 id=\"1-背景\">1 背景</h2>\n","url":"/2023/11/08/%E6%9E%84%E5%BB%BA%E6%B5%81%E6%B0%B4%E7%BA%BF%E5%AE%9E%E8%B7%B5/","next":{"id":"/2024/01/08/ios","tags":[],"relative_path":"_posts/2024-01-08-ios.md","collection":"posts","name":"2024-01-08-ios.md","url":"/2024/01/08/ios/","title":"iOS组件化实现之：实用工具沉淀及介绍","date":"2024-01-08 00:00:00 +0800","categories":[],"path":"_posts/2024-01-08-ios.md","draft":false,"layout":"post","subtitle":"组件化过程中，有一些重复/高频的问题需要解决，倘若手动解决会带来重复劳动的时间损失，以及没有沉淀的效率损失，为了避免上述损失，沉淀一些工具分享","author":"PaysonChen","header-img":"img/post-bg-2015.jpg","slug":"ios","ext":".md"},"title":"构建流水线实践","date":"2023-11-08 00:00:00 +0800","categories":[],"path":"_posts/2023-11-08-构建流水线实践.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/home-bg-geek.jpg","mermaid":true,"slug":"构建流水线实践","ext":".md"},"output":"<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"google-site-verification\" content=\"xBT4GhYoi5qRD5tr338pgPM5OWHHIDR6mNg1a3euekI\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, viewport-fit=cover\">\n    <meta name=\"description\" content=\"与你一起发现更大的世界。\">\n    <meta name=\"keywords\"  content=\"PaysonChen,iOS,流媒体\">\n    <meta name=\"theme-color\" content=\"#000000\">\n    \n    <!-- Open Graph -->\n    <meta property=\"og:title\" content=\"iOS组件化实现之：实用工具沉淀及介绍 - PaysonChen的博客 | PaysonChen Blog\">\n    \n    <meta property=\"og:type\" content=\"article\">\n    <meta property=\"og:description\" content=\"1.背景\n\">\n    \n    \n    <meta property=\"article:published_time\" content=\"2024-01-08T00:00:00Z\">\n    \n    \n    <meta property=\"article:author\" content=\"PaysonChen\">\n    \n    \n    \n    <meta property=\"og:image\" content=\"http://localhost:4000\">\n    <meta property=\"og:url\" content=\"http://localhost:4000/2024/01/08/ios/\">\n    <meta property=\"og:site_name\" content=\"PaysonChen的博客 | PaysonChen Blog\">\n    \n    <title>iOS组件化实现之：实用工具沉淀及介绍 - PaysonChen的博客 | PaysonChen Blog</title>\n\n    <!-- Web App Manifest -->\n    <link rel=\"manifest\" href=\"/pwa/manifest.json\">\n\n    <!-- Favicon -->\n    <link rel=\"shortcut icon\" href=\"/img/favicon.ico\">\n    \n    <!-- Canonical URL -->\n    <link rel=\"canonical\" href=\"http://localhost:4000/2024/01/08/ios/\">\n\n    <!-- Bootstrap Core CSS -->\n    <link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\">\n\n    <!-- Custom CSS -->\n    <link rel=\"stylesheet\" href=\"/css/hux-blog.min.css\">\n\n    <!-- Custom Fonts -->\n    <!-- <link href=\"http://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\"> -->\n    <!-- Hux change font-awesome CDN to qiniu -->\n    <link href=\"//cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\">\n\n\n    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->\n    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->\n    <!--[if lt IE 9]>\n        <script src=\"https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js\"></script>\n        <script src=\"https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js\"></script>\n    <![endif]-->\n\n    <!-- ga & ba script hoook -->\n    <script></script>\n</head>\n\n\n<!-- hack iOS CSS :active style -->\n<body ontouchstart=\"\">\n\n    <!-- Navigation -->\n\n    <nav class=\"navbar navbar-default navbar-custom navbar-fixed-top\">\n        \n        <div class=\"container-fluid\">\n            <!-- Brand and toggle get grouped for better mobile display -->\n            <div class=\"navbar-header page-scroll\">\n                <button type=\"button\" class=\"navbar-toggle\">\n                    <span class=\"sr-only\">Toggle navigation</span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                </button>\n                <a class=\"navbar-brand\" href=\"/\">PaysonChen Blog</a>\n            </div>\n\n            <!-- Collect the nav links, forms, and other content for toggling -->\n            <div id=\"huxblog_navbar\">\n                <div class=\"navbar-collapse\">\n                    <ul class=\"nav navbar-nav navbar-right\">\n                        <li>\n                            <a href=\"/\">Home</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        <li>\n                            <a href=\"/about/\">About</a>\n                        </li>\n                        \n                        \n                        \n                        <li>\n                            <a href=\"/archive/\">Archive</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        <li class=\"search-icon\">\n                            <a href=\"javascript:void(0)\">\n                                <i class=\"fa fa-search\"></i>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n            <!-- /.navbar-collapse -->\n        </div>\n        <!-- /.container -->\n    </nav>\n\n    <script>\n        // Drop Bootstarp low-performance Navbar\n        // Use customize navbar with high-quality material design animation\n        // in high-perf jank-free CSS3 implementation\n        var $body = document.body;\n        var $toggle = document.querySelector('.navbar-toggle');\n        var $navbar = document.querySelector('#huxblog_navbar');\n        var $collapse = document.querySelector('.navbar-collapse');\n\n        var __HuxNav__ = {\n            close: function () {\n                $navbar.className = \" \";\n                // wait until animation end.\n                setTimeout(function () {\n                    // prevent frequently toggle\n                    if ($navbar.className.indexOf('in') < 0) {\n                        $collapse.style.height = \"0px\"\n                    }\n                }, 400)\n            },\n            open: function () {\n                $collapse.style.height = \"auto\"\n                $navbar.className += \" in\";\n            }\n        }\n\n        // Bind Event\n        $toggle.addEventListener('click', function (e) {\n            if ($navbar.className.indexOf('in') > 0) {\n                __HuxNav__.close()\n            } else {\n                __HuxNav__.open()\n            }\n        })\n\n        /**\n         * Since Fastclick is used to delegate 'touchstart' globally\n         * to hack 300ms delay in iOS by performing a fake 'click',\n         * Using 'e.stopPropagation' to stop 'touchstart' event from \n         * $toggle/$collapse will break global delegation.\n         * \n         * Instead, we use a 'e.target' filter to prevent handler\n         * added to document close HuxNav.  \n         *\n         * Also, we use 'click' instead of 'touchstart' as compromise\n         */\n        document.addEventListener('click', function (e) {\n            if (e.target == $toggle) return;\n            if (e.target.className == 'icon-bar') return;\n            __HuxNav__.close();\n        })\n    </script>\n    <!-- Search -->\n<div class=\"search-page\">\n  <div class=\"search-icon-close-container\">\n    <span class=\"search-icon-close\">\n      <i class=\"fa fa-chevron-down\"></i>\n    </span>\n  </div>\n  <div class=\"search-main container\">\n    <div class=\"row\">\n      <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n        <form></form>\n        <input type=\"text\" id=\"search-input\" placeholder=\"$ grep...\">\n        </form>\n        <div id=\"search-results\" class=\"mini-post-list\"></div>\n      </div>\n    </div>\n  </div>\n</div>\n\n    <!-- Image to hack wechat -->\n<!-- <img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\"> -->\n<!-- <img src=\"/img/post-bg-2015.jpg\" width=\"0\" height=\"0\"> -->\n\n<!-- Post Header -->\n\n\n\n<style type=\"text/css\">\n    header.intro-header{\n        position: relative;\n        background-image: url('/img/post-bg-2015.jpg');\n        background: ;\n    }\n\n    \n</style>\n\n<header class=\"intro-header\" >\n\n    <div class=\"header-mask\"></div>\n    \n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <div class=\"post-heading\">\n                    <div class=\"tags\">\n                        \n                    </div>\n                    <h1>iOS组件化实现之：实用工具沉淀及介绍</h1>\n                    \n                    <h2 class=\"subheading\">组件化过程中，有一些重复/高频的问题需要解决，倘若手动解决会带来重复劳动的时间损失，以及没有沉淀的效率损失，为了避免上述损失，沉淀一些工具分享</h2>\n                    <span class=\"meta\">Posted by PaysonChen on January 8, 2024</span>\n                </div>\n            </div>\n        </div>\n    </div>\n</header>\n\n\n\n\n\n\n<!-- Post Content -->\n<article>\n    <div class=\"container\">\n        <div class=\"row\">\n\n    <!-- Post Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                post-container\">\n\n                <!-- Multi-Lingual -->\n                \n\n\t\t\t\t<h1 id=\"1背景\">1.背景</h1>\n\n<p>​\t组件化过程中，有一些重复/高频的问题需要解决，倘若手动解决会带来重复劳动的时间损失，以及没有沉淀的效率损失，为了避免上述损失，沉淀一些工具分享。</p>\n\n<h1 id=\"2组件化工具介绍\">2.组件化工具介绍</h1>\n\n<h2 id=\"21-xcode编译错误解决工具\">2.1 Xcode编译错误解决工具</h2>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#!/bin/bash</span>\n\n<span class=\"c\"># [背景]</span>\n<span class=\"c\"># 组件化过程中，经常出现以下编译错误：</span>\n<span class=\"c\"># Build service could not create build operation: unknown error while handling message: MsgHandlingError(message: \"unable to initiate PIF transfer session (operation in progress?)\")</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># author: PaysonChen</span>\n<span class=\"c\"># [目的]</span>\n<span class=\"c\"># 为解决上述错误，需要清理构建索引目录并重启xcode，由于操作重复，考虑抽出shell脚本</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [目录]</span>\n<span class=\"c\">#   - auto_clean.sh</span>\n<span class=\"c\"># [说明]</span>\n<span class=\"c\"># 1、CD[指定xcode构建索引目录]目录</span>\n<span class=\"c\"># 2、递归删除当前文件下所有文件</span>\n<span class=\"c\"># 3、重启xcode</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [参数]</span>\n<span class=\"c\"># 1、参数1，指定xcode构建索引目录</span>\n<span class=\"c\"># 1、参数2，指定要打开的Xcode项目目</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [调用说明]</span>\n<span class=\"c\"># 1、未指定目录，则取当前目录：sh auto_clean.sh</span>\n<span class=\"c\"># 2、指定目录：sh auto_clean.sh /xcode构建索引目录/ /要打开的Xcode项目目录/</span>\n\n<span class=\"c\">#获取当前用户名</span>\n<span class=\"nv\">user_name</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">whoami</span><span class=\"si\">)</span>\n\n<span class=\"nb\">export </span><span class=\"nv\">XcodeDerivedDataPath</span><span class=\"o\">=</span>/Users/<span class=\"nv\">$user_name</span>/Library/Developer/Xcode/DerivedData\n<span class=\"nb\">export </span><span class=\"nv\">XcodeWorkspacePath</span><span class=\"o\">=</span>/Applications/Xcode.app\n\n<span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$1</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n    </span><span class=\"nb\">echo</span> <span class=\"s1\">'///入参1为空，使用默认xcode构建索引目录:'</span><span class=\"k\">${</span><span class=\"nv\">XcodeDerivedDataPath</span><span class=\"k\">}</span>\n<span class=\"k\">else\n    </span><span class=\"nv\">XcodeDerivedDataPath</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'///入参1不为空，xcode构建索引目录:'</span><span class=\"k\">${</span><span class=\"nv\">XcodeDerivedDataPath</span><span class=\"k\">}</span>\n<span class=\"k\">fi\n\nif</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$2</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n    </span><span class=\"nb\">echo</span> <span class=\"s1\">'///入参2为空，使用默认xcode项目目录:'</span><span class=\"k\">${</span><span class=\"nv\">XcodeWorkspacePath</span><span class=\"k\">}</span>\n<span class=\"k\">else\n    </span><span class=\"nv\">XcodeWorkspacePath</span><span class=\"o\">=</span><span class=\"nv\">$2</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'///入参2不为空，xcode项目目录:'</span><span class=\"k\">${</span><span class=\"nv\">XcodeWorkspacePath</span><span class=\"k\">}</span>\n<span class=\"k\">fi</span>\n\n<span class=\"c\">#cd到xcode构建索引目录</span>\n<span class=\"nb\">cd</span>  <span class=\"nv\">$XcodeDerivedDataPath</span>\n\n<span class=\"nv\">exit_status</span><span class=\"o\">=</span><span class=\"nv\">$?</span>\n\n<span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nv\">$exit_status</span> <span class=\"nt\">-ne</span> 0 <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n    </span><span class=\"nb\">echo</span> <span class=\"s1\">'///切换目录失败:'</span><span class=\"k\">${</span><span class=\"nv\">XcodeDerivedDataPath</span><span class=\"k\">}</span>\n    <span class=\"nb\">exit</span> <span class=\"nt\">-1</span>\n<span class=\"k\">else\n    </span><span class=\"nb\">echo</span> <span class=\"s1\">'///切换目录成功:'</span><span class=\"k\">${</span><span class=\"nv\">XcodeDerivedDataPath</span><span class=\"k\">}</span>\n<span class=\"k\">fi</span>\n\n<span class=\"c\">#删除当前目录所有构件索引</span>\n<span class=\"nb\">rm</span> <span class=\"nt\">-rf</span> <span class=\"k\">*</span>\n\n<span class=\"c\">#重启xcode</span>\nkillall Xcode\n\n<span class=\"c\">#休眠一下，不然可能导致重启失败</span>\n<span class=\"nb\">sleep </span>0.1\n\n<span class=\"c\">#重启项目工程</span>\nopen <span class=\"nv\">$XcodeWorkspacePath</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h2 id=\"22-私有组件批量更新工具\">2.2 私有组件批量更新工具</h2>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#!/bin/bash</span>\n\n<span class=\"c\"># 遍历更新当前目录下，子目录git仓库的脚本</span>\n<span class=\"c\"># author: PaysonChen</span>\n<span class=\"c\"># [目的]</span>\n<span class=\"c\"># 组件化建设过程及后续的协同开发中，经常碰到团队人员更新组件库代码及主工程，主工程容易更新，但是随着pod库的增多，每次更新组件库仓库的重复劳动需要被改进</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [目录]</span>\n<span class=\"c\">#   - auto_update_git.sh.sh 遍历更新当前目录下，子目录git仓库的脚本</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [说明]</span>\n<span class=\"c\"># 1、遍历指定目录（若未传参数则为当前目录）下的子目录</span>\n<span class=\"c\"># 2、cd 到子目录</span>\n<span class=\"c\"># 3、检查当前分支</span>\n<span class=\"c\"># 4、拉取远端当前分支</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [参数]</span>\n<span class=\"c\"># 1、参数1，指定目录</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [调用说明]</span>\n<span class=\"c\"># 1、未指定目录，则取当前目录：sh auto_update_git.sh</span>\n<span class=\"c\"># 2、指定目录：sh auto_update_git.sh /User/xxx/xx</span>\n\n\n<span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$1</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n    </span><span class=\"nb\">export </span><span class=\"nv\">dist_path</span><span class=\"o\">=</span><span class=\"k\">*</span>/\n    <span class=\"nb\">echo</span> <span class=\"s1\">'///指定目录 为空:'</span><span class=\"k\">${</span><span class=\"nv\">dist_path</span><span class=\"k\">}</span>\n<span class=\"k\">else\n    </span><span class=\"nb\">export </span><span class=\"nv\">dist_path</span><span class=\"o\">=</span><span class=\"nv\">$1</span>/<span class=\"k\">*</span>/\n    <span class=\"nb\">echo</span> <span class=\"s1\">'///指定目录 不为空:'</span><span class=\"k\">${</span><span class=\"nv\">dist_path</span><span class=\"k\">}</span>\n<span class=\"k\">fi</span>\n    \n<span class=\"c\"># 遍历指定目录的子目录</span>\n<span class=\"k\">for </span><span class=\"nb\">dir </span><span class=\"k\">in</span> <span class=\"k\">${</span><span class=\"nv\">dist_path</span><span class=\"k\">}</span><span class=\"p\">;</span> <span class=\"k\">do\n  </span><span class=\"nb\">cd</span> <span class=\"s2\">\"</span><span class=\"nv\">$dir</span><span class=\"s2\">\"</span>  <span class=\"c\"># 进入子目录</span>\n  <span class=\"nb\">echo</span> <span class=\"s1\">'///进入子目录:'</span><span class=\"k\">${</span><span class=\"nv\">dir</span><span class=\"k\">}</span>\n\n  <span class=\"c\"># 检查是否是git仓库</span>\n  <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-d</span> .git <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n    </span><span class=\"nb\">echo</span> <span class=\"s2\">\"Updating git repository in </span><span class=\"nv\">$dir</span><span class=\"s2\">\"</span>\n    <span class=\"nv\">current_branch</span><span class=\"o\">=</span><span class=\"sb\">`</span>git branch <span class=\"nt\">--show-current</span><span class=\"sb\">`</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"current_branch is </span><span class=\"nv\">$current_branch</span><span class=\"s2\">\"</span>\n\n    git config pull.rebase <span class=\"nb\">false</span> <span class=\"c\"># 合并（缺省策略）</span>\n    git pull origin <span class=\"nv\">$current_branch</span>  <span class=\"c\"># 使用git pull命令更新git仓库</span>\n  <span class=\"k\">else\n    </span><span class=\"nb\">echo</span> <span class=\"s2\">\"Skipping non-git repository in </span><span class=\"nv\">$dir</span><span class=\"s2\">\"</span>\n  <span class=\"k\">fi\n\n  </span><span class=\"nb\">cd</span> ..  <span class=\"c\"># 返回上一级目录</span>\n<span class=\"k\">done</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h2 id=\"23-私有组件批量提交工具\">2.3 私有组件批量提交工具</h2>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#!/bin/bash</span>\n\n<span class=\"c\"># 遍历更新当前目录下，子目录git仓库的脚本</span>\n<span class=\"c\"># author: PaysonChen</span>\n<span class=\"c\"># [目的]</span>\n<span class=\"c\"># 组件化建设过程及后续的协同开发中，经常碰到团队人员更新组件库代码及主工程，主工程容易更新，但是随着pod库的增多，每次更新组件库仓库的重复劳动需要被改进</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [目录]</span>\n<span class=\"c\">#   - auto_commit_git.sh 遍历更新当前目录下，子目录git仓库的脚本</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [说明]</span>\n<span class=\"c\"># 1、遍历指定目录（若未传参数则为当前目录）下的子目录</span>\n<span class=\"c\"># 2、cd 到子目录</span>\n<span class=\"c\"># 3、检查当前分支</span>\n<span class=\"c\"># 4、提交修改</span>\n<span class=\"c\"># 5、commit 、push</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [参数]</span>\n<span class=\"c\"># 1、参数1，指定目录</span>\n<span class=\"c\"># 2、参数2，提交信息</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [调用说明]</span>\n<span class=\"c\"># 1、未指定目录，则取当前目录：sh auto_commit_git.sh</span>\n<span class=\"c\"># 2、指定目录：sh auto_commit_git.sh /User/xxx/xx \"提交信息\"</span>\n\n\n<span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$1</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n    </span><span class=\"nb\">export </span><span class=\"nv\">dist_path</span><span class=\"o\">=</span><span class=\"k\">*</span>/\n    <span class=\"nb\">echo</span> <span class=\"s1\">'///指定目录 为空:'</span><span class=\"k\">${</span><span class=\"nv\">dist_path</span><span class=\"k\">}</span>\n<span class=\"k\">else\n    </span><span class=\"nb\">export </span><span class=\"nv\">dist_path</span><span class=\"o\">=</span><span class=\"nv\">$1</span>/<span class=\"k\">*</span>/\n    <span class=\"nb\">echo</span> <span class=\"s1\">'///指定目录 不为空:'</span><span class=\"k\">${</span><span class=\"nv\">dist_path</span><span class=\"k\">}</span>\n<span class=\"k\">fi\n\n</span><span class=\"nb\">echo</span> <span class=\"s1\">'///指定:'</span><span class=\"nv\">$1</span>\n<span class=\"nb\">echo</span> <span class=\"s1\">'///指定:'</span><span class=\"nv\">$2</span>\n\n<span class=\"c\"># 遍历指定目录的子目录</span>\n<span class=\"k\">for </span><span class=\"nb\">dir </span><span class=\"k\">in</span> <span class=\"k\">${</span><span class=\"nv\">dist_path</span><span class=\"k\">}</span><span class=\"p\">;</span> <span class=\"k\">do\n  </span><span class=\"nb\">cd</span> <span class=\"s2\">\"</span><span class=\"nv\">$dir</span><span class=\"s2\">\"</span>  <span class=\"c\"># 进入子目录</span>\n  <span class=\"nb\">echo</span> <span class=\"s1\">'///进入子目录:'</span><span class=\"k\">${</span><span class=\"nv\">dir</span><span class=\"k\">}</span>\n\n  <span class=\"c\"># 检查是否是git仓库</span>\n  <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-d</span> .git <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n    </span><span class=\"nb\">echo</span> <span class=\"s2\">\"commiting git repository in </span><span class=\"nv\">$dir</span><span class=\"s2\">\"</span>\n    <span class=\"nv\">current_branch</span><span class=\"o\">=</span><span class=\"sb\">`</span>git branch <span class=\"nt\">--show-current</span><span class=\"sb\">`</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"current_branch is </span><span class=\"nv\">$current_branch</span><span class=\"s2\">\"</span>\n    \n    git add <span class=\"nb\">.</span>\n    <span class=\"nv\">msg</span><span class=\"o\">=</span><span class=\"s2\">\"\"</span>\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$2</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nv\">msg</span><span class=\"o\">=</span><span class=\"s2\">\"--update:更新代码\"</span>\n        <span class=\"nb\">echo</span> <span class=\"s1\">'///提交记录 为空:'</span><span class=\"nv\">$msg</span>\n    <span class=\"k\">else\n        </span><span class=\"nv\">msg</span><span class=\"o\">=</span><span class=\"nv\">$2</span>\n        <span class=\"nb\">echo</span> <span class=\"s1\">'///提交记录 不为空:'</span><span class=\"nv\">$msg</span>\n    <span class=\"k\">fi\n\n    </span>git commit <span class=\"nt\">-m</span> <span class=\"s2\">\"</span><span class=\"nv\">$msg</span><span class=\"s2\">\"</span>\n    git push <span class=\"nt\">-f</span> origin master\n  <span class=\"k\">else\n    </span><span class=\"nb\">echo</span> <span class=\"s2\">\"Skipping non-git repository in </span><span class=\"nv\">$dir</span><span class=\"s2\">\"</span>\n  <span class=\"k\">fi\n\n  </span><span class=\"nb\">cd</span> ..  <span class=\"c\"># 返回上一级目录</span>\n<span class=\"k\">done</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h2 id=\"24-私有组件批量发版工具\">2.4 私有组件批量发版工具</h2>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#!/bin/bash</span>\n\n<span class=\"c\"># 遍历当前目录下，私有库自动自增发版</span>\n<span class=\"c\"># author: PaysonChen</span>\n<span class=\"c\"># [目的]</span>\n<span class=\"c\"># 组件化建设过程及后续的协同开发中，有些全局修改需要统一发版</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [目录]</span>\n<span class=\"c\">#   - auto_publish_git.sh  遍历当前目录下，私有库自动自增发版</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [说明]</span>\n<span class=\"c\"># 1、遍历指定目录（若未传参数则为当前目录）下的子目录</span>\n<span class=\"c\"># 2、cd 到子目录</span>\n<span class=\"c\"># 3、检查当前分支</span>\n<span class=\"c\"># 4、自动发版</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [参数]</span>\n<span class=\"c\"># 1、参数1，指定目录</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [调用说明]</span>\n<span class=\"c\"># 1、未指定目录，则取当前目录：sh auto_publish_git.sh</span>\n<span class=\"c\"># 2、指定目录：sh auto_publish_git.sh /User/xxx/xx</span>\n\n\n<span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$1</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n    </span><span class=\"nb\">export </span><span class=\"nv\">dist_path</span><span class=\"o\">=</span><span class=\"k\">*</span>/\n    <span class=\"nb\">echo</span> <span class=\"s1\">'///指定目录 为空:'</span><span class=\"k\">${</span><span class=\"nv\">dist_path</span><span class=\"k\">}</span>\n<span class=\"k\">else\n    </span><span class=\"nb\">export </span><span class=\"nv\">dist_path</span><span class=\"o\">=</span><span class=\"nv\">$1</span>/<span class=\"k\">*</span>/\n    <span class=\"nb\">echo</span> <span class=\"s1\">'///指定目录 不为空:'</span><span class=\"k\">${</span><span class=\"nv\">dist_path</span><span class=\"k\">}</span>\n<span class=\"k\">fi</span>\n    \n<span class=\"c\"># 遍历指定目录的子目录</span>\n<span class=\"k\">for </span><span class=\"nb\">dir </span><span class=\"k\">in</span> <span class=\"k\">${</span><span class=\"nv\">dist_path</span><span class=\"k\">}</span><span class=\"p\">;</span> <span class=\"k\">do\n  </span><span class=\"nb\">cd</span> <span class=\"s2\">\"</span><span class=\"nv\">$dir</span><span class=\"s2\">\"</span>  <span class=\"c\"># 进入子目录</span>\n  <span class=\"nb\">echo</span> <span class=\"s1\">'///进入子目录:'</span><span class=\"k\">${</span><span class=\"nv\">dir</span><span class=\"k\">}</span>\n\n  <span class=\"c\"># 检查是否是git仓库</span>\n  <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-d</span> .git <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n    </span><span class=\"nb\">echo</span> <span class=\"s2\">\"Updating git repository in </span><span class=\"nv\">$dir</span><span class=\"s2\">\"</span>\n    <span class=\"nv\">current_branch</span><span class=\"o\">=</span><span class=\"sb\">`</span>git branch <span class=\"nt\">--show-current</span><span class=\"sb\">`</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"current_branch is </span><span class=\"nv\">$current_branch</span><span class=\"s2\">\"</span>\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$2</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">echo</span> <span class=\"s2\">\"tag 为空，采用自增tag\"</span>\n        pod push\n    <span class=\"k\">else\n        </span><span class=\"nb\">echo</span> <span class=\"s2\">\"tag 不为空，tag=\"</span><span class=\"nv\">$2</span>\n        pod push <span class=\"nv\">$2</span>\n    <span class=\"k\">fi\n  else\n    </span><span class=\"nb\">echo</span> <span class=\"s2\">\"Skipping non-git repository in </span><span class=\"nv\">$dir</span><span class=\"s2\">\"</span>\n  <span class=\"k\">fi\n\n  </span><span class=\"nb\">cd</span> ..  <span class=\"c\"># 返回上一级目录</span>\n<span class=\"k\">done</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>其中 pod push 依赖于cocapods插件（计划在后续文章中讲解）</p>\n\n<h2 id=\"25-私有组件批量发版工具-优化\">2.5 私有组件批量发版工具-优化</h2>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#!/bin/bash</span>\n\n<span class=\"c\"># 遍历当前目录下，当最新提交不是Tag记录时（即有需要发版）才进行的私有库自动自增发版</span>\n<span class=\"c\"># author: PaysonChen</span>\n<span class=\"c\"># [目的]</span>\n<span class=\"c\"># 组件化建设过程及后续的协同开发中，有些全局修改需要统一发版</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [目录]</span>\n<span class=\"c\">#   - auto_tag_if_need_git.sh  遍历当前目录下，私有库根据是否需要发版的逻辑进行自动自增发版</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [说明]</span>\n<span class=\"c\"># 1、遍历指定目录（若未传参数则为当前目录）下的子目录</span>\n<span class=\"c\"># 2、cd 到子目录</span>\n<span class=\"c\"># 3、检查当前分支</span>\n<span class=\"c\"># 4、自动发版</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [参数]</span>\n<span class=\"c\"># 1、参数1，指定目录</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [调用说明]</span>\n<span class=\"c\"># 1、未指定目录，则取当前目录：sh auto_tag_if_need_git.sh</span>\n<span class=\"c\"># 2、指定目录：sh auto_tag_if_need_git.sh /User/xxx/xx</span>\n\n\n<span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$1</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n    </span><span class=\"nb\">export </span><span class=\"nv\">dist_path</span><span class=\"o\">=</span><span class=\"k\">*</span>/\n    <span class=\"nb\">echo</span> <span class=\"s1\">'///指定目录 为空:'</span><span class=\"k\">${</span><span class=\"nv\">dist_path</span><span class=\"k\">}</span>\n<span class=\"k\">else\n    </span><span class=\"nb\">export </span><span class=\"nv\">dist_path</span><span class=\"o\">=</span><span class=\"nv\">$1</span>/<span class=\"k\">*</span>/\n    <span class=\"nb\">echo</span> <span class=\"s1\">'///指定目录 不为空:'</span><span class=\"k\">${</span><span class=\"nv\">dist_path</span><span class=\"k\">}</span>\n<span class=\"k\">fi\n\n\nfunction </span>get_tag<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"nv\">latest_tag</span><span class=\"o\">=</span><span class=\"si\">$(</span>git describe <span class=\"nt\">--exact-match</span> <span class=\"nt\">--tags</span> <span class=\"si\">$(</span>git log <span class=\"nt\">-n1</span> <span class=\"nt\">--pretty</span><span class=\"o\">=</span><span class=\"s1\">'%h'</span><span class=\"si\">)</span> 2&gt;/dev/null<span class=\"si\">)</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">latest_tag</span><span class=\"k\">}</span><span class=\"s2\">\"</span>\n<span class=\"o\">}</span>\n\n<span class=\"k\">function </span>push_if_need<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"k\">if </span>git describe <span class=\"nt\">--exact-match</span> <span class=\"nt\">--tags</span> <span class=\"si\">$(</span>git log <span class=\"nt\">-n1</span> <span class=\"nt\">--pretty</span><span class=\"o\">=</span><span class=\"s1\">'%h'</span><span class=\"si\">)</span> <span class=\"o\">&gt;</span>/dev/null 2&gt;&amp;1<span class=\"p\">;</span> <span class=\"k\">then\n        \n        </span><span class=\"nv\">latest_tag</span><span class=\"o\">=</span><span class=\"si\">$(</span>get_tag<span class=\"si\">)</span>\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"[push_if_need]:最新提交是一个标签（</span><span class=\"k\">${</span><span class=\"nv\">latest_tag</span><span class=\"k\">}</span><span class=\"s2\">）</span><span class=\"nv\">$1</span><span class=\"s2\">。\"</span>\n        <span class=\"k\">return </span>0\n    <span class=\"k\">else\n        </span><span class=\"nv\">latest_tag</span><span class=\"o\">=</span><span class=\"si\">$(</span>get_tag<span class=\"si\">)</span>\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"[push_if_need]:最新提交不是标签（</span><span class=\"k\">${</span><span class=\"nv\">latest_tag</span><span class=\"k\">}</span><span class=\"s2\">）</span><span class=\"nv\">$1</span><span class=\"s2\">。\"</span>\n        pod push\n        <span class=\"nv\">latest_tag</span><span class=\"o\">=</span><span class=\"si\">$(</span>get_tag<span class=\"si\">)</span>\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"[push_if_need]:打包后的标签（</span><span class=\"k\">${</span><span class=\"nv\">latest_tag</span><span class=\"k\">}</span><span class=\"s2\">）</span><span class=\"nv\">$1</span><span class=\"s2\">。\"</span>\n        <span class=\"k\">return </span>1\n    <span class=\"k\">fi</span>\n<span class=\"o\">}</span>\n    \n<span class=\"c\"># 遍历指定目录的子目录</span>\n<span class=\"nv\">allTaged</span><span class=\"o\">=</span><span class=\"s2\">\"\"</span>\n\n<span class=\"k\">for </span><span class=\"nb\">dir </span><span class=\"k\">in</span> <span class=\"k\">${</span><span class=\"nv\">dist_path</span><span class=\"k\">}</span><span class=\"p\">;</span> <span class=\"k\">do\n  </span><span class=\"nb\">cd</span> <span class=\"s2\">\"</span><span class=\"nv\">$dir</span><span class=\"s2\">\"</span>  <span class=\"c\"># 进入子目录</span>\n  <span class=\"nb\">echo</span> <span class=\"s1\">'///进入子目录:'</span><span class=\"k\">${</span><span class=\"nv\">dir</span><span class=\"k\">}</span>\n\n  <span class=\"c\"># 检查是否是git仓库</span>\n  <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-d</span> .git <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n    </span><span class=\"nv\">result</span><span class=\"o\">=</span><span class=\"nb\">false\n    echo</span> <span class=\"s2\">\"Updating git repository in </span><span class=\"nv\">$dir</span><span class=\"s2\">\"</span>\n    <span class=\"nv\">current_branch</span><span class=\"o\">=</span><span class=\"sb\">`</span>git branch <span class=\"nt\">--show-current</span><span class=\"sb\">`</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"current_branch is </span><span class=\"nv\">$current_branch</span><span class=\"s2\">\"</span>\n    \n    git config pull.rebase <span class=\"nb\">false</span> <span class=\"c\"># 合并（缺省策略）</span>\n    git pull origin <span class=\"nv\">$current_branch</span>  <span class=\"c\"># 使用git pull命令更新git仓库</span>\n\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$2</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">echo</span> <span class=\"s2\">\"tag 为空，采用自增tag\"</span>\n<span class=\"c\">#        pod push</span>\n        push_if_need <span class=\"nv\">$dir</span>\n        <span class=\"nv\">result</span><span class=\"o\">=</span><span class=\"nv\">$?</span>\n    \n    <span class=\"k\">else\n        </span><span class=\"nb\">echo</span> <span class=\"s2\">\"tag 不为空，全量发版tag=\"</span><span class=\"nv\">$2</span>\n        pod push <span class=\"nv\">$2</span>\n    <span class=\"k\">fi\n\n\n    if</span> <span class=\"o\">[</span> <span class=\"nv\">$result</span> <span class=\"nt\">-eq</span> 1 <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then</span>\n<span class=\"c\">#        tmp=$allTaged</span>\n        <span class=\"nv\">latest_tag</span><span class=\"o\">=</span><span class=\"si\">$(</span>get_tag<span class=\"si\">)</span>\n\n        <span class=\"nv\">allTaged</span><span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"nv\">$allTaged</span><span class=\"s2\"> </span><span class=\"nv\">$dir$latest_tag</span><span class=\"s2\">\"</span>\n<span class=\"c\">#        echo \"变量是 true。\"$dir</span>\n<span class=\"c\">#        echo \"变量是 true。\"$tmp</span>\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"变量是 true。\"</span><span class=\"nv\">$allTaged</span>\n\n    <span class=\"k\">else\n        </span><span class=\"nb\">echo</span> <span class=\"s2\">\"变量是 false。\"</span>\n    <span class=\"k\">fi\n\n\n  else\n    </span><span class=\"nb\">echo</span> <span class=\"s2\">\"Skipping non-git repository in </span><span class=\"nv\">$dir</span><span class=\"s2\">\"</span>\n  <span class=\"k\">fi\n\n  </span><span class=\"nb\">cd</span> ..  <span class=\"c\"># 返回上一级目录</span>\n<span class=\"k\">done\n\n</span><span class=\"nb\">echo</span> <span class=\"s2\">\"------------------------\"</span>\n<span class=\"nb\">echo</span> <span class=\"s2\">\"allTaged（进行发版的所有组件）： = \"</span><span class=\"nv\">$allTaged</span>\n<span class=\"nb\">echo</span> <span class=\"s2\">\"------------------------\"</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h1 id=\"3其他工具介绍\">3.其他工具介绍</h1>\n\n<h2 id=\"31-删除注释掉的import工具\">3.1 删除注释掉的#import工具</h2>\n\n<pre><code class=\"language-objective-c\">//#import \"xxx.h\"\n</code></pre>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#!/bin/bash</span>\n\n<span class=\"c\"># 遍历指定目录下的类删除注释掉的import代码行的脚本</span>\n<span class=\"c\"># author: PaysonChen</span>\n<span class=\"c\"># [目的]</span>\n<span class=\"c\"># 工程阶段性整理无用import（注释掉）</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [目录]</span>\n<span class=\"c\">#   - delete_unused_import_annotation.sh</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [说明]</span>\n<span class=\"c\"># 1、遍历指定目录</span>\n<span class=\"c\"># 2、检索代码行</span>\n<span class=\"c\"># 3、符合给定条件：//import</span>\n<span class=\"c\"># 4、删除代码行</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [参数]</span>\n<span class=\"c\"># 1、参数1，指定目录</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [调用说明]</span>\n<span class=\"c\"># 1 调用示例：sh delete_unused_import_annotation.sh your_path</span>\n\n\nfind <span class=\"nv\">$1</span> <span class=\"nt\">-type</span> f <span class=\"se\">\\(</span> <span class=\"nt\">-name</span> <span class=\"s2\">\"*.h\"</span> <span class=\"nt\">-o</span> <span class=\"nt\">-name</span> <span class=\"s2\">\"*.m\"</span> <span class=\"se\">\\)</span> <span class=\"nt\">-exec</span> <span class=\"nb\">sed</span> <span class=\"nt\">-i</span> <span class=\"s1\">''</span> <span class=\"s1\">'/\\/\\/#import/d'</span> <span class=\"o\">{}</span> <span class=\"se\">\\;</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h2 id=\"32-未被引用的类文件清理工具\">3.2 未被引用的类文件清理工具</h2>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#!/bin/bash</span>\n\n<span class=\"c\"># [背景]</span>\n<span class=\"c\"># 基础组件拆分到一定程度时，主工程剩下的就多数与视图界面(vc、view等)相关的类文件。此时可以考虑对业务组件进行设计和规划，但是在此时，工程还存在如下问题：</span>\n<span class=\"c\"># 冗余文件：</span>\n<span class=\"c\">#   未被引用到Project，但存在在工程目录中的冗余的类文件</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># author: PaysonChen</span>\n<span class=\"c\"># [目的]</span>\n<span class=\"c\"># 为了减轻业务组件的工作量和复杂度，在此之前最好能净化/清理一下工程</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [目录]</span>\n<span class=\"c\">#   - find_all_file_no_project.sh</span>\n<span class=\"c\"># [说明]</span>\n<span class=\"c\"># 1、通过递归遍历工程目录，将遍历后的类名逐一与XXX.xcodeproj/project.pbxproj 文件内容进行匹配</span>\n<span class=\"c\"># 2、匹配不成功则输出文件列表</span>\n<span class=\"c\"># 3、【人工】对文件列表一一检查，确认是冗余文件则从工程中删除</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [参数]</span>\n<span class=\"c\"># 1、参数1，指定xcode工程自身的主工程类所在目录，而非project所在的目录</span>\n<span class=\"c\">#   例如 XXX/ProjectName/ProjectName.xcodeproj/project.pbxproj</span>\n<span class=\"c\">#       XXX/ProjectName/ProjectName/AppDelegate.h</span>\n<span class=\"c\">#   需要传入的是下面这地址：</span>\n<span class=\"c\">#       XXX/ProjectName/ProjectName</span>\n<span class=\"c\"># [调用说明]</span>\n<span class=\"c\"># 1、未指定目录，则取当前目录：sh find_all_file_no_project.sh</span>\n<span class=\"c\"># 2、指定目录：sh find_all_file_no_project.sh /Users/xxxxx/Project-IOS/ProjectName/ProjectName</span>\n\n\n<span class=\"c\">#!/bin/bash</span>\n\n<span class=\"k\">function </span>main<span class=\"o\">()</span> <span class=\"o\">{</span>\n    \n    <span class=\"c\"># 设置项目目录</span>\n    <span class=\"nv\">project_directory</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$1</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then</span>\n        <span class=\"c\">#未传参为当前目录</span>\n        <span class=\"nv\">project_directory</span><span class=\"o\">=</span><span class=\"nb\">.</span>\n    <span class=\"k\">fi</span>\n\n    <span class=\"c\"># 设置其他目录</span>\n    <span class=\"nv\">parent_path</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">dirname</span> <span class=\"s2\">\"</span><span class=\"nv\">$project_directory</span><span class=\"s2\">\"</span><span class=\"si\">)</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"project 路径：\"</span><span class=\"nv\">$parent_path</span>\n    \n    <span class=\"nv\">current_dir</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">basename</span> <span class=\"s2\">\"</span><span class=\"nv\">$project_directory</span><span class=\"s2\">\"</span><span class=\"si\">)</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"当前路径 文件夹名称：\"</span><span class=\"nv\">$current_dir</span>\n\n    \n    <span class=\"nv\">project_path</span><span class=\"o\">=</span><span class=\"si\">$(</span>find <span class=\"s2\">\"</span><span class=\"nv\">$parent_path</span><span class=\"s2\">\"</span>/<span class=\"nv\">$current_dir</span>.xcodeproj <span class=\"nt\">-type</span> f <span class=\"se\">\\(</span> <span class=\"nt\">-name</span> <span class=\"s2\">\"*.pbxproj\"</span> <span class=\"se\">\\)</span><span class=\"si\">)</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"project 路径：\"</span><span class=\"nv\">$project_path</span>\n\n    <span class=\"nv\">all_file_path</span><span class=\"o\">=</span><span class=\"si\">$(</span>find <span class=\"s2\">\"</span><span class=\"nv\">$project_directory</span><span class=\"s2\">\"</span> <span class=\"nt\">-type</span> f <span class=\"se\">\\(</span> <span class=\"nt\">-name</span> <span class=\"s2\">\"*.h\"</span> <span class=\"se\">\\)</span><span class=\"si\">)</span>\n    <span class=\"nv\">all_file_path_cnt</span><span class=\"o\">=</span><span class=\"si\">$(</span>find <span class=\"s2\">\"</span><span class=\"nv\">$project_directory</span><span class=\"s2\">\"</span> <span class=\"nt\">-type</span> f <span class=\"se\">\\(</span> <span class=\"nt\">-name</span> <span class=\"s2\">\"*.h\"</span> <span class=\"se\">\\)</span> | <span class=\"nb\">wc</span> <span class=\"nt\">-l</span><span class=\"si\">)</span>\n\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"主工程 头文件数量：\"</span><span class=\"nv\">$all_file_path_cnt</span>\n\n    <span class=\"k\">for </span>src_file <span class=\"k\">in</span> <span class=\"nv\">$all_file_path</span><span class=\"p\">;</span> <span class=\"k\">do</span>\n    <span class=\"c\">#    echo $src_file</span>\n        <span class=\"nv\">filename</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">basename</span> <span class=\"s2\">\"</span><span class=\"nv\">$src_file</span><span class=\"s2\">\"</span> .h<span class=\"si\">)</span>\n        <span class=\"k\">if</span>  <span class=\"o\">!</span> <span class=\"nb\">grep</span> <span class=\"nt\">-q</span> <span class=\"s2\">\"</span><span class=\"se\">\\b</span><span class=\"nv\">$filename</span><span class=\"se\">\\b</span><span class=\"s2\">\"</span> <span class=\"s2\">\"</span><span class=\"nv\">$project_path</span><span class=\"s2\">\"</span><span class=\"p\">;</span>  <span class=\"k\">then\n            </span><span class=\"nb\">echo</span> <span class=\"s2\">\"project不包含：\"</span><span class=\"nv\">$src_file</span>\n        <span class=\"k\">fi\n    done</span>\n<span class=\"o\">}</span>\n\n\nmain <span class=\"nv\">$1</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h2 id=\"33-未被使用的类文件清理工具\">3.3 未被使用的类文件清理工具</h2>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#!/bin/bash</span>\n\n<span class=\"c\"># [背景]</span>\n<span class=\"c\"># 基础组件拆分到一定程度时，主工程剩下的就多数与视图界面(vc、view等)相关的类文件。此时可以考虑对业务组件进行设计和规划，但是在此时，工程还存在如下问题：</span>\n<span class=\"c\">#    冗余文件：</span>\n<span class=\"c\">#    非冗余但未被使用的文件</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># author: PaysonChen</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [目的]</span>\n<span class=\"c\"># 此脚本解决 \"非冗余但未被使用的文件\" 的清理</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [目录]</span>\n<span class=\"c\">#   - find_unused_class.sh</span>\n<span class=\"c\"># [说明]</span>\n<span class=\"c\"># 1 遍历工程目录的所有实现类：.m文件（不包含category）</span>\n<span class=\"c\"># 2 将类名与工程内除自身以外所有文件进行进逐行匹配（包含category）</span>\n<span class=\"c\"># 3 当匹配到不包含// 与 #import 开头的行，则算为有引用，否则为未引用</span>\n<span class=\"c\"># 4 将未匹配到的文件路径进行输出</span>\n<span class=\"c\"># 5 将上述匹配出来的文件先进行移除，再执行一遍（由于第一层被移除，可能会暴露出更多没被引用的类）</span>\n<span class=\"c\"># 6 直到没有匹配到未被调用的类为止</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [参数]</span>\n<span class=\"c\"># 1、参数1，指定xcode工程目录 （未指定则为当前目录）</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [调用说明]</span>\n<span class=\"c\"># 1、未指定目录，则取当前目录：sh find_unused_class.sh</span>\n<span class=\"c\"># 2、指定目录 ：sh find_unused_class.sh /Users/xxxxx/ProjectName-IOS/ProjectName/ProjectName</span>\n\n\n<span class=\"c\">#!/bin/bash</span>\n\n<span class=\"c\">#是否重复执行到没有找到不可用文件</span>\n<span class=\"nb\">export </span><span class=\"nv\">cycle_deal</span><span class=\"o\">=</span>1\n<span class=\"nb\">export </span><span class=\"nv\">cycle_idx</span><span class=\"o\">=</span>1\n<span class=\"nv\">total_unused_file_name</span><span class=\"o\">=</span><span class=\"s1\">''</span>\n<span class=\"k\">function </span>main<span class=\"o\">()</span> <span class=\"o\">{</span>\n    \n    <span class=\"c\"># 设置项目目录</span>\n    <span class=\"nv\">project_directory</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$1</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then</span>\n        <span class=\"c\">#未传参为当前目录</span>\n        <span class=\"nv\">project_directory</span><span class=\"o\">=</span><span class=\"nb\">.</span>\n    <span class=\"k\">fi</span>\n\n    <span class=\"c\">#初始化参数：</span>\n    <span class=\"nv\">unused_files</span><span class=\"o\">=</span><span class=\"s1\">''</span>\n\n    <span class=\"c\"># 查找所有以ViewController.m结尾的文件并输出列表</span>\n    <span class=\"nv\">all_class_path</span><span class=\"o\">=</span><span class=\"si\">$(</span>find <span class=\"s2\">\"</span><span class=\"nv\">$project_directory</span><span class=\"s2\">\"</span> <span class=\"nt\">-type</span> f <span class=\"se\">\\(</span> <span class=\"nt\">-name</span> <span class=\"s2\">\"*.m\"</span> <span class=\"se\">\\)</span> | <span class=\"nb\">grep</span> <span class=\"nt\">-v</span> <span class=\"s1\">'+'</span><span class=\"si\">)</span>\n\n    <span class=\"nv\">all_file_path</span><span class=\"o\">=</span><span class=\"si\">$(</span>find <span class=\"s2\">\"</span><span class=\"nv\">$project_directory</span><span class=\"s2\">\"</span> <span class=\"nt\">-type</span> f <span class=\"se\">\\(</span> <span class=\"nt\">-name</span> <span class=\"s2\">\"*.m\"</span> <span class=\"nt\">-o</span> <span class=\"nt\">-name</span> <span class=\"s2\">\"*.h\"</span> <span class=\"se\">\\)</span> <span class=\"si\">)</span>\n\n    <span class=\"nv\">file_cnt</span><span class=\"o\">=</span>0\n    <span class=\"k\">for </span>file <span class=\"k\">in</span> <span class=\"nv\">$all_class_path</span><span class=\"p\">;</span> <span class=\"k\">do\n        </span><span class=\"nv\">file_cnt</span><span class=\"o\">=</span><span class=\"k\">$((</span>file_cnt+1<span class=\"k\">))</span>\n    <span class=\"k\">done\n    </span><span class=\"nb\">echo</span> <span class=\"s2\">\"*******file_cnt：\"</span><span class=\"nv\">$file_cnt</span>\n\n\n    <span class=\"k\">for </span>file <span class=\"k\">in</span> <span class=\"nv\">$all_class_path</span><span class=\"p\">;</span> <span class=\"k\">do\n        </span><span class=\"nv\">filename</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">basename</span> <span class=\"s2\">\"</span><span class=\"nv\">$file</span><span class=\"s2\">\"</span> .m<span class=\"si\">)</span>\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"***********开始遍历文件名：\"</span><span class=\"nv\">$filename</span>\n        <span class=\"nv\">is_referenced</span><span class=\"o\">=</span><span class=\"nb\">false\n        </span><span class=\"k\">for </span>other_file <span class=\"k\">in</span> <span class=\"nv\">$all_file_path</span><span class=\"p\">;</span> <span class=\"k\">do\n            </span><span class=\"nv\">other_file_name</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">basename</span> <span class=\"s2\">\"</span><span class=\"nv\">$other_file</span><span class=\"s2\">\"</span><span class=\"si\">)</span>\n            <span class=\"c\">#获取除自身以外的类名：不包含拓展的名称，为了避免在自身的.h .m进行引用判断</span>\n            <span class=\"nv\">other_file_name_without_extension</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">echo</span> <span class=\"s2\">\"</span><span class=\"nv\">$other_file_name</span><span class=\"s2\">\"</span> | <span class=\"nb\">cut</span> <span class=\"nt\">-d</span><span class=\"nb\">.</span> <span class=\"nt\">-f1</span><span class=\"si\">)</span>\n            <span class=\"c\">#获取category的主类名称</span>\n            <span class=\"nv\">other_file_name_without_extension_before_plus</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">echo</span> <span class=\"s2\">\"</span><span class=\"nv\">$other_file_name_without_extension</span><span class=\"s2\">\"</span> | <span class=\"nb\">awk</span> <span class=\"nt\">-F</span><span class=\"s1\">'+'</span> <span class=\"s1\">'{print $1}'</span><span class=\"si\">)</span>\n            <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"s2\">\"</span><span class=\"nv\">$other_file_name_without_extension_before_plus</span><span class=\"s2\">\"</span> <span class=\"o\">!=</span> <span class=\"s2\">\"</span><span class=\"nv\">$filename</span><span class=\"s2\">\"</span> <span class=\"o\">]</span> <span class=\"p\">;</span> <span class=\"k\">then</span>\n            <span class=\"c\"># if [ \"$other_file\" != \"$file\" ] &amp;&amp; ([ \"${other_file##*.}\" = \"m\" ] ); then</span>\n                <span class=\"k\">if </span><span class=\"nb\">grep</span> <span class=\"nt\">-q</span> <span class=\"s2\">\"</span><span class=\"se\">\\b</span><span class=\"nv\">$filename</span><span class=\"se\">\\b</span><span class=\"s2\">\"</span> <span class=\"s2\">\"</span><span class=\"nv\">$other_file</span><span class=\"s2\">\"</span><span class=\"p\">;</span>  <span class=\"k\">then</span>\n                    <span class=\"c\"># 检查文件中是否有注释行</span>\n                    <span class=\"nv\">has_comment</span><span class=\"o\">=</span><span class=\"nb\">false\n                    </span><span class=\"k\">while </span><span class=\"nv\">IFS</span><span class=\"o\">=</span> <span class=\"nb\">read</span> <span class=\"nt\">-r</span> line<span class=\"p\">;</span> <span class=\"k\">do\n                        </span><span class=\"nb\">echo</span> <span class=\"s2\">\"逐行匹配：\"</span><span class=\"nv\">$line</span>\n                        <span class=\"k\">if</span> <span class=\"o\">!</span> <span class=\"nb\">grep</span> <span class=\"nt\">-qE</span> <span class=\"s2\">\"^[[:space:]]*//\"</span> <span class=\"o\">&lt;&lt;&lt;</span> <span class=\"s2\">\"</span><span class=\"nv\">$line</span><span class=\"s2\">\"</span><span class=\"p\">;</span> <span class=\"k\">then\n                            if</span> <span class=\"o\">[[</span> <span class=\"o\">!</span> <span class=\"nv\">$line</span> <span class=\"o\">=</span>~ ^[[:space:]]<span class=\"k\">*</span><span class=\"c\">#import ]]; then</span>\n                                <span class=\"nv\">has_comment</span><span class=\"o\">=</span><span class=\"nb\">true\n                                echo</span> <span class=\"s2\">\"在文件:\"</span><span class=\"nv\">$other_file</span><span class=\"s2\">\"匹配\"</span><span class=\"nv\">$filename</span><span class=\"s2\">\"存在 并且不是 注释代码 或者 import 的 break（\"</span><span class=\"nv\">$line</span>\n                                <span class=\"nb\">break\n                            </span><span class=\"k\">fi\n\n                        fi\n                    done</span> <span class=\"o\">&lt;&lt;&lt;</span> <span class=\"s2\">\"</span><span class=\"si\">$(</span><span class=\"nb\">grep</span> <span class=\"s2\">\"</span><span class=\"se\">\\b</span><span class=\"nv\">$filename</span><span class=\"se\">\\b</span><span class=\"s2\">\"</span> <span class=\"s2\">\"</span><span class=\"nv\">$other_file</span><span class=\"s2\">\"</span><span class=\"si\">)</span><span class=\"s2\">\"</span>\n                    \n                    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"s2\">\"</span><span class=\"nv\">$has_comment</span><span class=\"s2\">\"</span> <span class=\"o\">=</span> <span class=\"nb\">true</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n                        </span><span class=\"nv\">is_referenced</span><span class=\"o\">=</span><span class=\"nb\">true\n                        break\n                    </span><span class=\"k\">fi\n                fi\n            fi\n        done\n\n        if</span> <span class=\"o\">[</span> <span class=\"s2\">\"</span><span class=\"nv\">$is_referenced</span><span class=\"s2\">\"</span> <span class=\"o\">=</span> <span class=\"nb\">false</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n            </span><span class=\"nb\">echo</span> <span class=\"s2\">\"没有被引用到的文件:\"</span><span class=\"nv\">$file</span>\n            <span class=\"nv\">unused_files</span><span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"nv\">$unused_files$file</span><span class=\"se\">\\n</span><span class=\"s2\">\"</span>\n        <span class=\"k\">fi\n        </span><span class=\"nb\">echo</span> <span class=\"s2\">\"***********\"</span>\n    <span class=\"k\">done</span>\n\n    <span class=\"c\"># 输出未被引用的文件列表</span>\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-n</span> <span class=\"s2\">\"</span><span class=\"nv\">$unused_files</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">echo</span> <span class=\"nt\">-e</span> <span class=\"s2\">\"Unused class files:</span><span class=\"se\">\\n</span><span class=\"nv\">$unused_files</span><span class=\"s2\">\"</span>\n        <span class=\"nv\">total_unused_file_name</span><span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"nv\">$total_unused_file_name$unused_files</span><span class=\"se\">\\n</span><span class=\"s2\">\"</span>\n\n        <span class=\"c\">#将检索出来的文件 mv 出来</span>\n        <span class=\"nb\">mkdir</span> <span class=\"nt\">-p</span> ./unused_files/<span class=\"nv\">$cycle_idx</span>/\n        <span class=\"nv\">array</span><span class=\"o\">=(</span><span class=\"sb\">`</span><span class=\"nb\">echo</span> <span class=\"nv\">$unused_files</span> | <span class=\"nb\">tr</span> <span class=\"s1\">'\\n'</span> <span class=\"s1\">' '</span><span class=\"sb\">`</span><span class=\"o\">)</span>\n        <span class=\"k\">for </span>element <span class=\"k\">in</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">array</span><span class=\"p\">[@]</span><span class=\"k\">}</span><span class=\"s2\">\"</span><span class=\"p\">;</span> <span class=\"k\">do\n            </span><span class=\"nv\">element</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">echo</span> <span class=\"s2\">\"</span><span class=\"nv\">$element</span><span class=\"s2\">\"</span> | <span class=\"nb\">tr</span> <span class=\"nt\">-d</span> <span class=\"s1\">'\\n'</span><span class=\"si\">)</span>\n            <span class=\"nb\">echo</span> <span class=\"s2\">\"Unused class = \"</span><span class=\"nv\">$element</span>\n            <span class=\"nv\">element_filename</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">basename</span> <span class=\"s2\">\"</span><span class=\"nv\">$element</span><span class=\"s2\">\"</span> .m<span class=\"si\">)</span>\n            <span class=\"nv\">element_dirname</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">dirname</span> <span class=\"s2\">\"</span><span class=\"nv\">$element</span><span class=\"s2\">\"</span><span class=\"si\">)</span>\n            \n            <span class=\"nv\">destFoldName</span><span class=\"o\">=</span><span class=\"s2\">\"./unused_files/</span><span class=\"nv\">$cycle_idx</span><span class=\"s2\">/</span><span class=\"k\">${</span><span class=\"nv\">element_dirname</span><span class=\"k\">}</span><span class=\"s2\">/</span><span class=\"k\">${</span><span class=\"nv\">element_filename</span><span class=\"k\">}</span><span class=\"s2\">\"</span>\n            <span class=\"nb\">mkdir</span> <span class=\"nt\">-p</span> <span class=\"nv\">$destFoldName</span>\n            \n            <span class=\"nb\">cp</span> <span class=\"nt\">-f</span> <span class=\"k\">${</span><span class=\"nv\">element_dirname</span><span class=\"k\">}</span>/<span class=\"k\">${</span><span class=\"nv\">element_filename</span><span class=\"k\">}</span>.h <span class=\"nv\">$destFoldName</span>/<span class=\"nv\">$element_filename</span>.h\n            <span class=\"nb\">cp</span> <span class=\"nt\">-f</span> <span class=\"k\">${</span><span class=\"nv\">element_dirname</span><span class=\"k\">}</span>/<span class=\"k\">${</span><span class=\"nv\">element_filename</span><span class=\"k\">}</span>.m <span class=\"nv\">$destFoldName</span>/<span class=\"nv\">$element_filename</span>.m\n        <span class=\"k\">done</span>\n        \n        <span class=\"c\">#cycle_deal参数为空则不循环执行</span>\n        <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$cycle_deal</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n            </span><span class=\"nb\">echo</span> <span class=\"s2\">\"cycle_deal参数为空则不循环执行\"</span>\n\n            <span class=\"nb\">exit </span>0\n        <span class=\"k\">else</span>\n            <span class=\"c\">#cycle_deal 不为空 循环执行，直到不再有新文件检出</span>\n            <span class=\"nb\">echo</span> <span class=\"nt\">-e</span> <span class=\"s2\">\"循环执行\"</span>\n            <span class=\"nv\">cycle_idx</span><span class=\"o\">=</span><span class=\"k\">$((</span>cycle_idx+1<span class=\"k\">))</span>\n            main <span class=\"nv\">$1</span>\n        <span class=\"k\">fi\n\n    else\n        </span><span class=\"nb\">echo</span> <span class=\"s2\">\"No unused ViewController files found.\"</span><span class=\"nv\">$all_file_path</span>\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"**************************\"</span>\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"total_unused_file_name class files:</span><span class=\"se\">\\n</span><span class=\"nv\">$total_unused_file_name</span><span class=\"s2\">\"</span>\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"**************************\"</span>\n\n        <span class=\"nb\">exit </span>0\n    <span class=\"k\">fi</span>\n<span class=\"o\">}</span>\n\n\nmain <span class=\"nv\">$1</span>\n\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h2 id=\"34-冲突解决工具\">3.4 冲突解决工具</h2>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#!/bin/bash</span>\n\n<span class=\"c\"># [背景]</span>\n<span class=\"c\">#    组件化过程中不可避免的会遇到这样一个问题：</span>\n<span class=\"c\">#    组件化的过程一般周期比较长，此过程中不免会有业务需求的输入，这样就会导致一个情况：</span>\n<span class=\"c\">#    组件化分支已经将主工程里的类迁移到pod仓库,而在此期间的业务需求代码对这些被迁移的类有修改，</span>\n<span class=\"c\">#    合并主干（其他分支）代码时,主干（其他分支）有对移动之前的类做修改的情况下,会导致合并冲突,</span>\n<span class=\"c\">#    这种冲突是整个类都是新增符号(+),没有冲突符号，此时无法简单的通过工具，或者冲突的符号对其进行解冲突。</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># author: PaysonChen</span>\n<span class=\"c\"># [目的]</span>\n<span class=\"c\"># 为了减轻组件化分支合并主干分支的工作量和复杂度</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [目录]</span>\n<span class=\"c\">#   - merge.sh</span>\n<span class=\"c\"># [说明]</span>\n<span class=\"c\"># 1、整理project 冲突文件的路径列表</span>\n<span class=\"c\"># 2、整理冲突列表在各个pod库中的路径列表</span>\n<span class=\"c\"># 3、在未预合并分支上先mv一份整理后的pod库中的路径列表到主工程</span>\n<span class=\"c\"># 4、再进行分支合并</span>\n<span class=\"c\"># 5、解决冲突后，执行将主工程的上述列表，mv到各个pod库</span>\n<span class=\"c\"># 6、提交各个Pod库代码</span>\n<span class=\"c\"># 7、整理Project文件及工程类</span>\n<span class=\"c\"># 8、提交Project代码</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [参数]</span>\n<span class=\"c\"># 1、参数1：源路径：从参数1下的文件路径了列表，移动到参数2（索引）对应的路径</span>\n<span class=\"c\">#   例如 merge_pods_files.txt</span>\n<span class=\"c\"># 2、参数2，目标移动路径列表</span>\n<span class=\"c\">#   例如 merge_project_files.txt</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [调用说明]</span>\n<span class=\"c\"># 1、需要指定目录</span>\n<span class=\"c\">#  从Pod移动到主工程：sh merge.sh merge_pods_files.txt merge_project_files.txt</span>\n<span class=\"c\">#  从主工程移动到Pod：sh merge.sh merge_project_files.txt merge_pods_files.txt</span>\n\n\n<span class=\"c\"># 从外部文件中读取源文件路径和目标文件夹路径</span>\n<span class=\"c\">#\"source_paths.txt\"</span>\n<span class=\"nv\">source_file</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n<span class=\"c\">#\"destination_paths.txt\"</span>\n<span class=\"nv\">destination_file</span><span class=\"o\">=</span><span class=\"nv\">$2</span>\n\n<span class=\"c\"># 检查源文件是否存在</span>\n<span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"o\">!</span> <span class=\"nt\">-f</span> <span class=\"s2\">\"</span><span class=\"nv\">$source_file</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n    </span><span class=\"nb\">echo</span> <span class=\"s2\">\"源文件 '</span><span class=\"nv\">$source_file</span><span class=\"s2\">' 不存在。\"</span>\n    <span class=\"nb\">exit </span>1\n<span class=\"k\">fi</span>\n\n<span class=\"c\"># 检查目标文件夹文件是否存在</span>\n<span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"o\">!</span> <span class=\"nt\">-f</span> <span class=\"s2\">\"</span><span class=\"nv\">$destination_file</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n    </span><span class=\"nb\">echo</span> <span class=\"s2\">\"源文件 '</span><span class=\"nv\">$source_file</span><span class=\"s2\">' 不存在。\"</span>\n    <span class=\"nb\">exit </span>1\n<span class=\"k\">fi</span>\n\n<span class=\"c\">#保证每条记录都有一个回车（最后一行如果没有回车，会被忽略）</span>\n<span class=\"k\">while </span><span class=\"nv\">IFS</span><span class=\"o\">=</span> <span class=\"nb\">read</span> <span class=\"nt\">-r</span> source_path <span class=\"o\">&amp;&amp;</span> <span class=\"nv\">IFS</span><span class=\"o\">=</span> <span class=\"nb\">read</span> <span class=\"nt\">-r</span> destination_folder &lt;&amp;3<span class=\"p\">;</span> <span class=\"k\">do\n    </span>source_paths+<span class=\"o\">=(</span><span class=\"s2\">\"</span><span class=\"nv\">$source_path</span><span class=\"s2\">\"</span><span class=\"o\">)</span>\n    destination_paths+<span class=\"o\">=(</span><span class=\"s2\">\"</span><span class=\"nv\">$destination_folder</span><span class=\"s2\">\"</span><span class=\"o\">)</span>\n<span class=\"k\">done</span> &lt; <span class=\"nv\">$source_file</span> 3&lt; <span class=\"nv\">$destination_file</span>\n\n<span class=\"c\"># 输出数组长度</span>\n<span class=\"nb\">echo</span> <span class=\"s2\">\"源文件路径数组长度：</span><span class=\"k\">${#</span><span class=\"nv\">source_paths</span><span class=\"p\">[@]</span><span class=\"k\">}</span><span class=\"s2\">\"</span>\n<span class=\"nb\">echo</span> <span class=\"s2\">\"目标文件夹路径数组长度：</span><span class=\"k\">${#</span><span class=\"nv\">destination_paths</span><span class=\"p\">[@]</span><span class=\"k\">}</span><span class=\"s2\">\"</span>\n\n<span class=\"c\">#exit 0</span>\n<span class=\"c\"># 遍历索引</span>\n<span class=\"k\">for </span>index <span class=\"k\">in</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"p\">!source_paths[@]</span><span class=\"k\">}</span><span class=\"s2\">\"</span><span class=\"p\">;</span> <span class=\"k\">do\n    </span><span class=\"nb\">echo</span> <span class=\"s2\">\"遍历目标文件夹路径数组,index=\"</span><span class=\"nv\">$index</span>\n    <span class=\"nv\">source_path</span><span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">source_paths</span><span class=\"p\">[</span><span class=\"nv\">$index</span><span class=\"p\">]</span><span class=\"k\">}</span><span class=\"s2\">\"</span>\n    <span class=\"nv\">destination_path</span><span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">destination_paths</span><span class=\"p\">[</span><span class=\"nv\">$index</span><span class=\"p\">]</span><span class=\"k\">}</span><span class=\"s2\">\"</span>\n\n    <span class=\"c\"># 构建目标文件的完整路径</span>\n<span class=\"c\">#    destination_path=\"${destination_folder}${source_path}\"</span>\n\n    <span class=\"c\"># 检查目标文件是否存在，如果存在则删除</span>\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-e</span> <span class=\"s2\">\"</span><span class=\"nv\">$destination_path</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">rm</span> <span class=\"s2\">\"</span><span class=\"nv\">$destination_path</span><span class=\"s2\">\"</span>\n    <span class=\"k\">fi</span>\n\n    <span class=\"c\"># 确保目标文件夹存在</span>\n    <span class=\"nb\">mkdir</span> <span class=\"nt\">-p</span> <span class=\"s2\">\"</span><span class=\"si\">$(</span><span class=\"nb\">dirname</span> <span class=\"s2\">\"</span><span class=\"nv\">$destination_path</span><span class=\"s2\">\"</span><span class=\"si\">)</span><span class=\"s2\">\"</span>\n\n    <span class=\"c\"># 复制源文件到目标路径</span>\n    <span class=\"nb\">mv</span> <span class=\"s2\">\"</span><span class=\"nv\">$source_path</span><span class=\"s2\">\"</span> <span class=\"s2\">\"</span><span class=\"nv\">$destination_path</span><span class=\"s2\">\"</span>\n<span class=\"k\">done\n\n</span><span class=\"nb\">echo</span> <span class=\"s2\">\"文件复制完成。\"</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h2 id=\"35-版权信息批量同步工具\">3.5 版权信息批量同步工具</h2>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#!/bin/bash</span>\n\n<span class=\"c\"># 遍历更新当前目录下(含子目录）所有iOS工程类文件：.h .m .swift 并对其注释头进行模板替换</span>\n<span class=\"c\"># author: PaysonChen</span>\n<span class=\"c\"># [目的]</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># 组件化规整之后，可能存在的情况是前后的文件命名不一致导致的影响代码易读性、易维护等问题</span>\n<span class=\"c\"># 除此之外，由于代码经由不同人迭代的，甚至不同组织迭代（从外包接手的项目）还存在一些文件注释的注释模板差异的情况</span>\n<span class=\"c\"># 此脚本目的为了解决存量类文件头注释统一性问题</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [目录]</span>\n<span class=\"c\">#   - replace_class_header_anotation.sh 遍历更新当前目录下，子目录git仓库的脚本</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [说明]</span>\n<span class=\"c\"># 1、遍历指定目录（若未传参数则为当前目录）下的子目录</span>\n<span class=\"c\"># 2、匹配所有iOS工程类文件：.h .m .swift</span>\n<span class=\"c\"># 3、对其注释头进行模板替换</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [参数]</span>\n<span class=\"c\"># 1、参数1，指定目录</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [调用说明]</span>\n<span class=\"c\"># 1、未指定目录，则取当前目录：sh replace_class_header_anotation.sh</span>\n<span class=\"c\"># 2、指定目录：sh replace_class_header_anotation.sh /User/xxx/xx</span>\n<span class=\"c\"># 本脚本适用于将：下述注释替换成 统一注释模板：</span>\n<span class=\"c\">#   其一：</span>\n<span class=\"c\">#//</span>\n<span class=\"c\">#//  FileName.h</span>\n<span class=\"c\">#//  ProjectName</span>\n<span class=\"c\">#//</span>\n<span class=\"c\">#//  Created by Author on Date.</span>\n<span class=\"c\">#// (没版权信息)</span>\n<span class=\"c\">#//</span>\n<span class=\"c\">#</span>\n<span class=\"c\">#   其二：</span>\n<span class=\"c\">#   /****************************************************************************************************</span>\n<span class=\"c\">#   * 版权所有： Copyright (c) 2012-2021 xxxx. All rights reserved.</span>\n<span class=\"c\">#   * 作 者： Author （2021/3/12）</span>\n<span class=\"c\">#   * 界面描述：  界面描述</span>\n<span class=\"c\">#   ****************************************************************************************************/</span>\n<span class=\"c\">#</span>\n<span class=\"c\">#   其三：</span>\n<span class=\"c\">#   没有任何注释的</span>\n<span class=\"c\">#</span>\n<span class=\"c\">#</span>\n<span class=\"c\">#   替换成统一注释模板：</span>\n<span class=\"c\">#</span>\n<span class=\"c\">#//</span>\n<span class=\"c\">#//  \"$filename\"</span>\n<span class=\"c\">#//  \"$project_name\"</span>\n<span class=\"c\">#//</span>\n<span class=\"c\">#//  Created by \"$auth\" on \"$date\".</span>\n<span class=\"c\">#//  \"$copyright_str\"</span>\n<span class=\"c\">#//</span>\n<span class=\"c\">#</span>\n<span class=\"c\">#定义版权信息</span>\n<span class=\"nb\">export </span><span class=\"nv\">copyright_str</span><span class=\"o\">=</span><span class=\"s2\">\"Copyright (C) </span><span class=\"si\">$(</span><span class=\"nb\">date</span> +%Y<span class=\"si\">)</span><span class=\"s2\">  Your CompanyName Limited. All rights reserved.\"</span>\n\n<span class=\"c\">#定义默认用户信息：PaysonChen</span>\n<span class=\"nb\">export </span><span class=\"nv\">def_author_str</span><span class=\"o\">=</span><span class=\"s2\">\"PaysonChen\"</span>\n\n<span class=\"c\">#定义默认日期：当前日期</span>\n<span class=\"nb\">export </span><span class=\"nv\">def_time_str</span><span class=\"o\">=</span><span class=\"sb\">`</span><span class=\"nb\">date</span> +%Y/%m/%d<span class=\"sb\">`</span>\n\n<span class=\"k\">function </span>get_creator_name_with_template_2<span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"nv\">file</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n    <span class=\"nv\">creator_name</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">sed</span> <span class=\"nt\">-n</span> <span class=\"s1\">'s/.*作    者： \\(.*\\).*/\\1/p'</span> <span class=\"nv\">$file</span><span class=\"si\">)</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"creator_name=\"</span><span class=\"nv\">$creator_name</span><span class=\"s2\">\" in file=\"</span><span class=\"nv\">$file</span>\n    \n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$creator_name</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">echo</span> <span class=\"s1\">'///获取创建者 第二种模板获取 为空 使用默认值'</span>\n        <span class=\"nv\">creator_name</span><span class=\"o\">=</span><span class=\"nv\">$def_author_str</span>\n    <span class=\"k\">fi</span>\n<span class=\"o\">}</span>\n\n<span class=\"k\">function </span>get_creator_name<span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"nv\">file</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n    <span class=\"nv\">creator_name</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">sed</span> <span class=\"nt\">-n</span> <span class=\"s1\">'s/.*Created by \\(.*\\) on.*/\\1/p'</span> <span class=\"nv\">$file</span><span class=\"si\">)</span>\n    \n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$creator_name</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span>get_creator_name_with_template_2 <span class=\"nv\">$file</span>\n    <span class=\"k\">fi\n    \n    </span><span class=\"nb\">echo</span> <span class=\"s2\">\"--------creator_name=【\"</span><span class=\"nv\">$creator_name</span><span class=\"s2\">\"】 in file=\"</span><span class=\"nv\">$file</span>\n<span class=\"o\">}</span>\n\n\n\n<span class=\"k\">function </span>get_creator_time_with_template_2<span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"nv\">file</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n    <span class=\"nv\">creator_time</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">sed</span> <span class=\"nt\">-n</span> <span class=\"s1\">'s/.*创建日期： \\(.*\\).*/\\1/p'</span> <span class=\"nv\">$file</span><span class=\"si\">)</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"-------创建日期=【\"</span><span class=\"nv\">$creator_time</span><span class=\"s2\">\"】 in file=\"</span><span class=\"nv\">$file</span>\n\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$creator_time</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then</span>\n<span class=\"c\">#        echo '///获取创建时间 第二种模板获取 为空 使用默认值'</span>\n        <span class=\"nv\">creator_time</span><span class=\"o\">=</span><span class=\"nv\">$def_time_str</span>\n    <span class=\"k\">fi</span>\n<span class=\"o\">}</span>\n\n\n<span class=\"k\">function </span>format_creator_time<span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"nv\">creator_time</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n    \n    <span class=\"nv\">length</span><span class=\"o\">=</span><span class=\"k\">${#</span><span class=\"nv\">creator_time</span><span class=\"k\">}</span>\n\n    <span class=\"c\"># 截取除最后一个字符外的部分</span>\n    <span class=\"nv\">creator_time</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">creator_time</span>:0:length-1<span class=\"k\">}</span>\n    <span class=\"c\">#echo \"截去掉最后一个字符后的字符串: $creator_time\"</span>\n<span class=\"o\">}</span>\n\n\n<span class=\"k\">function </span>get_creator_time<span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"nv\">file</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n    \n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$2</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nv\">line</span><span class=\"o\">=</span>5\n    <span class=\"k\">else\n        </span><span class=\"nv\">line</span><span class=\"o\">=</span><span class=\"nv\">$2</span>\n    <span class=\"k\">fi</span>\n    <span class=\"c\">#creator_time=$(sed -n '5s/.*\\(.\\{10\\}\\)$/\\1/p' $file)</span>\n    <span class=\"nv\">creator_time</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">awk</span> <span class=\"s1\">'NR=='</span><span class=\"nv\">$line</span><span class=\"s1\">' {print $NF}'</span> <span class=\"nv\">$file</span><span class=\"si\">)</span>\n\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"-------creator_time=【\"</span><span class=\"nv\">$creator_time</span><span class=\"s2\">\"】 line = \"</span><span class=\"nv\">$line</span><span class=\"s2\">\" in file=\"</span><span class=\"nv\">$file</span>\n<span class=\"c\">#    date_regex='^(19|20)[0-9]{2}/(0?[1-9]|1[0-2])/(0?[1-9]|[1-2][0-9]|3[0-1]).$'</span>\n    <span class=\"c\">#date_regex='^(19[0-9]{2}|20[0-9]{2}|[0-9]{2})/(0?[1-9]|1[0-2])/(0?[1-9]|[1-2][0-9]|3[0-1]).$'</span>\n    <span class=\"nv\">date_regex</span><span class=\"o\">=</span><span class=\"s1\">'^(19[0-9]{2}|20[0-9]{2}|[0-9]{2})([-/])(0?[1-9]|1[0-2])([-/])(0?[1-9]|[1-2][0-9]|3[0-1]).$'</span>\n\n    <span class=\"c\"># 进行正则匹配</span>\n    <span class=\"k\">if</span> <span class=\"o\">[[</span> <span class=\"nv\">$creator_time</span> <span class=\"o\">=</span>~ <span class=\"nv\">$date_regex</span> <span class=\"o\">]]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">echo</span> <span class=\"s2\">\"日期格式正确，截断最后一个小数 .\"</span>\n        format_creator_time <span class=\"nv\">$creator_time</span>\n    <span class=\"k\">else\n        if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$2</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n            </span><span class=\"nv\">discount</span><span class=\"o\">=</span>1\n            <span class=\"nv\">new_line</span><span class=\"o\">=</span><span class=\"k\">$((</span>line-discount<span class=\"k\">))</span>\n            <span class=\"nb\">echo</span> <span class=\"s2\">\"常规调用如果匹配不到的花，那么多一次，向上查找\"</span><span class=\"nv\">$discount</span><span class=\"s2\">\"行，进行递归:\"</span><span class=\"nv\">$new_line</span>\n            get_creator_time <span class=\"nv\">$file</span> <span class=\"nv\">$new_line</span>\n        <span class=\"k\">else\n            </span><span class=\"nb\">echo</span> <span class=\"s2\">\"日期格式错误，执行第二种匹配\"</span>\n            get_creator_time_with_template_2 <span class=\"nv\">$file</span>\n        <span class=\"k\">fi\n    fi\n    </span><span class=\"nb\">echo</span> <span class=\"s2\">\"********creator_time=【\"</span><span class=\"nv\">$creator_time</span><span class=\"s2\">\"】 in file=\"</span><span class=\"nv\">$file</span>\n<span class=\"o\">}</span>\n\n\n\n<span class=\"k\">function </span>replace_header_anoation<span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"nv\">file</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n    \n    <span class=\"c\">#定义要替换的字符串</span>\n    <span class=\"c\">#文件名</span>\n    <span class=\"nv\">filename</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">echo</span> <span class=\"s2\">\"</span><span class=\"nv\">$file</span><span class=\"s2\">\"</span> | <span class=\"nb\">sed</span> <span class=\"s1\">'s#.*/##'</span><span class=\"si\">)</span>\n    <span class=\"c\">#项目名</span>\n    <span class=\"nv\">project_name</span><span class=\"o\">=</span><span class=\"s2\">\"YourProjectName\"</span>\n    \n    <span class=\"c\">#还有从当前类中获取作者信息，获取不到取默认值</span>\n    <span class=\"nv\">auth</span><span class=\"o\">=</span><span class=\"nv\">$creator_name</span>\n    \n    <span class=\"c\">#还有从当前类中获取作者信息，获取不到取默认值</span>\n    <span class=\"nb\">date</span><span class=\"o\">=</span><span class=\"nv\">$creator_time</span>\n\n    <span class=\"c\">#以下是替换的模板</span>\n    <span class=\"nv\">new_content</span><span class=\"o\">=</span><span class=\"s2\">\"//\n//  \"</span><span class=\"nv\">$filename</span><span class=\"s2\">\"\n//  \"</span><span class=\"nv\">$project_name</span><span class=\"s2\">\"\n//\n//  Created by \"</span><span class=\"nv\">$auth</span><span class=\"s2\">\" on \"</span><span class=\"nv\">$date</span><span class=\"s2\">\".\n//  \"</span><span class=\"nv\">$copyright_str</span><span class=\"s2\">\"\n//\"</span>\n\n    <span class=\"nv\">new_content_escaped</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">echo</span> <span class=\"s2\">\"</span><span class=\"nv\">$new_content</span><span class=\"s2\">\"</span> | <span class=\"nb\">sed</span> <span class=\"s1\">'s/$/\\\\/'</span><span class=\"si\">)</span> <span class=\"c\"># 转义换行符</span>\n    <span class=\"nb\">sed</span> <span class=\"nt\">-i</span> <span class=\"s1\">''</span> <span class=\"nt\">-e</span> <span class=\"s2\">\"1,7c</span><span class=\"se\">\\\\</span><span class=\"s2\">\n</span><span class=\"nv\">$new_content_escaped</span><span class=\"s2\">\"</span> <span class=\"s2\">\"</span><span class=\"nv\">$file</span><span class=\"s2\">\"</span>\n\n    <span class=\"c\">#还有几个问题待优化</span>\n    <span class=\"c\">#1、如果开头没有注释，则会直接覆盖，或者注释不足7行的</span>\n    <span class=\"c\">#2、日期正则如果不是以 YYYY/MM/DD or YY/MM/DD 其中/和-都适用</span>\n        <span class=\"c\">#2.1但是兼容2023/8/1这样的个位数日期)，</span>\n        <span class=\"c\">#2.2如果日期是8/1/23 这样会导致识别错误 会被替换成今天的日期</span>\n\n<span class=\"o\">}</span>\n\n<span class=\"c\"># 统一类头注释</span>\n<span class=\"k\">function </span>unify_header_anoation<span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"nv\">file</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n\n    <span class=\"c\">#还有从当前类中获取作者信息，获取不到取默认值</span>\n    get_creator_name <span class=\"nv\">$file</span>\n    \n    <span class=\"c\">#还有从当前类中获取作者信息，获取不到取默认值</span>\n    get_creator_time <span class=\"nv\">$file</span>\n    \n    <span class=\"c\">#不传第二个参数 则执行替换，传就不执行</span>\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$2</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span>replace_header_anoation <span class=\"nv\">$file</span>\n    <span class=\"k\">fi</span>\n<span class=\"o\">}</span>\n\n\n<span class=\"k\">function </span>main<span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"nv\">file_path</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$file_path</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">echo</span> <span class=\"s1\">'///未指定路径,file_path为. 当前路径'</span>\n        <span class=\"nv\">file_path</span><span class=\"o\">=</span><span class=\"nb\">.</span>\n    <span class=\"k\">fi</span>\n\n\n    <span class=\"c\">#遍历当前路径下所有oc类</span>\n    find <span class=\"nv\">$file_path</span> <span class=\"nt\">-type</span> f <span class=\"nt\">-name</span> <span class=\"s2\">\"*.swift\"</span> <span class=\"nt\">-o</span> <span class=\"nt\">-name</span> <span class=\"s2\">\"*.h\"</span> <span class=\"nt\">-o</span> <span class=\"nt\">-name</span> <span class=\"s2\">\"*.m\"</span> | <span class=\"k\">while </span><span class=\"nb\">read </span>file<span class=\"p\">;</span> <span class=\"k\">do\n        </span>unify_header_anoation <span class=\"nv\">$file</span> <span class=\"nv\">$2</span>\n    <span class=\"k\">done</span>\n<span class=\"o\">}</span>\n\n\nmain <span class=\"nv\">$1</span> <span class=\"nv\">$2</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n\n\n                <hr style=\"visibility: hidden;\">\n                <ul class=\"pager\">\n                    \n                    <li class=\"previous\">\n                        <a href=\"/2023/11/08/%E6%9E%84%E5%BB%BA%E6%B5%81%E6%B0%B4%E7%BA%BF%E5%AE%9E%E8%B7%B5/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"构建流水线实践\">\n                        Previous<br>\n                        <span>构建流水线实践</span>\n                        </a>\n                    </li>\n                    \n                    \n                </ul>\n                <hr style=\"visibility: hidden;\">\n\n                \n                <!-- disqus 评论框 start -->\n                <div class=\"comment\">\n                    <div id=\"disqus_thread\" class=\"disqus-thread\"></div>\n                </div>\n                <!-- disqus 评论框 end -->\n                \n\n                \n            </div>  \n\n    <!-- Side Catalog Container -->\n        \n            <div class=\"\n                col-lg-2 col-lg-offset-0\n                visible-lg-block\n                sidebar-container\n                catalog-container\">\n                <div class=\"side-catalog\">\n                    <hr class=\"hidden-sm hidden-xs\">\n                    <h5>\n                        <a class=\"catalog-toggle\" href=\"#\">CATALOG</a>\n                    </h5>\n                    <ul class=\"catalog-body\"></ul>\n                </div>\n            </div>\n        \n\n    <!-- Sidebar Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                sidebar-container\">\n\n                <!-- Featured Tags -->\n                \n\n\n<section>\n    \n        <hr class=\"hidden-sm hidden-xs\">\n    \n    <h5><a href=\"/archive/\">FEATURED TAGS</a></h5>\n    <div class=\"tags\">\n        \n        \n        \n        \n        \n    </div>\n</section>\n\n\n                <!-- Friends Blog -->\n                \n            </div>\n        </div>\n    </div>\n</article>\n\n<!-- add support for mathjax by voleking-->\n\n\n\n\n\n\n<!-- disqus 公共JS代码 start (一个网页只需插入一次) -->\n<script type=\"text/javascript\">\n    /* * * CONFIGURATION VARIABLES * * */\n    var disqus_shortname = \"Cyp\";\n    var disqus_identifier = \"/2024/01/08/ios\";\n    var disqus_url = \"http://localhost:4000/2024/01/08/ios/\";\n\n    (function() {\n        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;\n        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';\n        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);\n    })();\n</script>\n<!-- disqus 公共JS代码 end -->\n\n\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n      var d = document, t = 'script',\n          o = d.createElement(t),\n          s = d.getElementsByTagName(t)[0];\n      o.src = u;\n      if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n      s.parentNode.insertBefore(o, s);\n    }\n</script>\n<!-- anchor-js, Doc:http://bryanbraun.github.io/anchorjs/ -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/anchor-js/1.1.1/anchor.min.js\",function(){\n        anchors.options = {\n          visible: 'hover',\n          placement: 'right',\n          // icon: '#'\n        };\n        anchors.add().remove('.intro-header h1').remove('.subheading').remove('.sidebar-container h5');\n    })\n</script>\n<style>\n    /* place left on bigger screen */\n    @media all and (min-width: 800px) {\n        .anchorjs-link{\n            position: absolute;\n            left: -0.75em;\n            font-size: 1.1em;\n            margin-top : -0.1em;\n        }\n    }\n</style>\n\n\n\n    <!-- Footer -->\n<footer>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <!-- SNS Link -->\n                \n\n\n<ul class=\"list-inline text-center\">\n\n\n  \n  \n  \n  \n  \n  \n  \n</ul>\n\n                <p class=\"copyright text-muted\">\n                    Copyright &copy; PaysonChen Blog 2024\n                    <br>\n                    <!-- Powered by <a href=\"http://huangxuan.me\">Hux Blog</a> | -->\n                 <!--    <iframe style=\"margin-left: 2px; margin-bottom:-5px;\" frameborder=\"0\" scrolling=\"0\" width=\"100px\"\n                        height=\"20px\"\n                        src=\"https://ghbtns.com/github-btn.html?user=huxpro&repo=huxpro.github.io&type=star&count=true\">\n                    </iframe> -->\n                </p>\n            </div>\n        </div>\n    </div>\n</footer>\n\n<!-- jQuery -->\n<script src=\"/js/jquery.min.js \"></script>\n\n<!-- Bootstrap Core JavaScript -->\n<!-- Currently, only navbar scroll-down effect at desktop still depends on this -->\n<script src=\"/js/bootstrap.min.js \"></script>\n\n<!-- Custom Theme JavaScript -->\n<script src=\"/js/hux-blog.min.js \"></script>\n\n<!-- Simple Jekyll Search -->\n<script src=\"/js/simple-jekyll-search.min.js\"></script>\n\n<!-- Service Worker -->\n\n<script src=\"/js/snackbar.js \"></script>\n<script src=\"/js/sw-registration.js \"></script>\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n        var d = document, t = 'script',\n            o = d.createElement(t),\n            s = d.getElementsByTagName(t)[0];\n        o.src = u;\n        if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n        s.parentNode.insertBefore(o, s);\n    }\n</script>\n\n<!--\n     Because of the native support for backtick-style fenced code blocks\n     right within the Markdown is landed in Github Pages,\n     From V1.6, There is no need for Highlight.js,\n     so Huxblog drops it officially.\n\n     - https://github.com/blog/2100-github-pages-now-faster-and-simpler-with-jekyll-3-0\n     - https://help.github.com/articles/creating-and-highlighting-code-blocks/\n     - https://github.com/jneen/rouge/wiki/list-of-supported-languages-and-lexers\n-->\n<!--\n    <script>\n        async(\"http://cdn.bootcss.com/highlight.js/8.6/highlight.min.js\", function(){\n            hljs.initHighlightingOnLoad();\n        })\n    </script>\n    <link href=\"http://cdn.bootcss.com/highlight.js/8.6/styles/github.min.css\" rel=\"stylesheet\">\n-->\n\n\n\n\n\n\n\n<!--fastClick.js -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/fastclick/1.0.6/fastclick.min.js\", function () {\n        var $nav = document.querySelector(\"nav\");\n        if ($nav) FastClick.attach($nav);\n    })\n</script>\n\n\n<!-- Google Analytics -->\n\n\n\n<!-- Baidu Tongji -->\n\n\n\n<!-- Side Catalog -->\n\n<script type=\"text/javascript\">\n    function generateCatalog(selector) {\n\n        // interop with multilangual \n        if ('' == 'true') {\n            _containerSelector = 'div.post-container.active'\n        } else {\n            _containerSelector = 'div.post-container'\n        }\n\n        // init\n        var P = $(_containerSelector), a, n, t, l, i, c;\n        a = P.find('h1,h2,h3,h4,h5,h6');\n\n        // clean\n        $(selector).html('')\n\n        // appending\n        a.each(function () {\n            n = $(this).prop('tagName').toLowerCase();\n            i = \"#\" + $(this).prop('id');\n            t = $(this).text();\n            c = $('<a href=\"' + i + '\" rel=\"nofollow\">' + t + '</a>');\n            l = $('<li class=\"' + n + '_nav\"></li>').append(c);\n            $(selector).append(l);\n        });\n        return true;\n    }\n\n    generateCatalog(\".catalog-body\");\n\n    // toggle side catalog\n    $(\".catalog-toggle\").click((function (e) {\n        e.preventDefault();\n        $('.side-catalog').toggleClass(\"fold\")\n    }))\n\n    /*\n     * Doc: https://github.com/davist11/jQuery-One-Page-Nav\n     * Fork by Hux to support padding\n     */\n    async(\"/js/jquery.nav.js\", function () {\n        $('.catalog-body').onePageNav({\n            currentClass: \"active\",\n            changeHash: !1,\n            easing: \"swing\",\n            filter: \"\",\n            scrollSpeed: 700,\n            scrollOffset: 0,\n            scrollThreshold: .2,\n            begin: null,\n            end: null,\n            scrollChange: null,\n            padding: 80\n        });\n    });\n</script>\n\n\n\n<!-- Multi-Lingual -->\n\n\n<!-- Simple Jekyll Search -->\n<script>\n    // https://stackoverflow.com/questions/1912501/unescape-html-entities-in-javascript\n    function htmlDecode(input) {\n        var e = document.createElement('textarea');\n        e.innerHTML = input;\n        // handle case of empty input\n        return e.childNodes.length === 0 ? \"\" : e.childNodes[0].nodeValue;\n    }\n\n    SimpleJekyllSearch({\n        searchInput: document.getElementById('search-input'),\n        resultsContainer: document.getElementById('search-results'),\n        json: '/search.json',\n        searchResultTemplate: '<div class=\"post-preview item\"><a href=\"{url}\"><h2 class=\"post-title\">{title}</h2><h3 class=\"post-subtitle\">{subtitle}</h3><hr></a></div>',\n        noResultsText: 'No results',\n        limit: 50,\n        fuzzy: false,\n        // a hack to get escaped subtitle unescaped. for some reason, \n        // post.subtitle w/o escape filter nuke entire search.\n        templateMiddleware: function (prop, value, template) {\n            if (prop === 'subtitle' || prop === 'title') {\n                if (value.indexOf(\"code\")) {\n                    return htmlDecode(value);\n                } else {\n                    return value;\n                }\n            }\n        }\n    });\n\n    $(document).ready(function () {\n        var $searchPage = $('.search-page');\n        var $searchOpen = $('.search-icon');\n        var $searchClose = $('.search-icon-close');\n        var $searchInput = $('#search-input');\n        var $body = $('body');\n\n        $searchOpen.on('click', function (e) {\n            e.preventDefault();\n            $searchPage.toggleClass('search-active');\n            var prevClasses = $body.attr('class') || '';\n            setTimeout(function () {\n                $body.addClass('no-scroll');\n            }, 400)\n\n            if ($searchPage.hasClass('search-active')) {\n                $searchClose.on('click', function (e) {\n                    e.preventDefault();\n                    $searchPage.removeClass('search-active');\n                    $body.attr('class', prevClasses);  // from closure \n                });\n                $searchInput.focus();\n            }\n        });\n    });\n</script>\n\n\n<!-- Image to hack wechat -->\n<img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\" />\n<!-- Migrate from head to bottom, no longer block render and still work -->\n\n</body>\n\n</html>\n","excerpt":"<h1 id=\"1背景\">1.背景</h1>\n","url":"/2024/01/08/ios/","next":null,"title":"iOS组件化实现之：实用工具沉淀及介绍","date":"2024-01-08 00:00:00 +0800","categories":[],"path":"_posts/2024-01-08-ios.md","draft":false,"layout":"post","subtitle":"组件化过程中，有一些重复/高频的问题需要解决，倘若手动解决会带来重复劳动的时间损失，以及没有沉淀的效率损失，为了避免上述损失，沉淀一些工具分享","author":"PaysonChen","header-img":"img/post-bg-2015.jpg","slug":"ios","ext":".md"},{"id":"/2023/11/08/构建流水线实践","tags":[],"relative_path":"_posts/2023-11-08-构建流水线实践.md","collection":"posts","content":"<h2 id=\"1-背景\">1 背景</h2>\n\n<p>​\t为了适应不通项目的自动化的需求，而且构建的方式和能力也在不断的迭代与演进，同时维护多个构建脚本存在成本与遗漏，因此将打包脚本的通用能力抽离，通过配置参数进行不同项目的构建。</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n</pre></td><td class=\"rouge-code\"><pre># [目的]\n# 为了使流水线建设趋于可维护，易维护，可迁移，易迁移，对构建逻辑进行模块化、将构建主流程划分为：构建前、构建、构建后，三大模块\n#\n#   构建前：参数配置、版本号设置\n#   构建中：Pod install、xcbuild\n#   构建后：归档、分发、通知\n#\n# 当前的构建后方案的选择：\n#   归档：简单云（ipa+dSYM）、bugly（dSYM）\n#   分发：蒲公英、阿里云OSS、AppStore\n#   通知：钉钉机器人\n# 在未来的持续集成过程中，可以对归档方案进行替换、对分发方案进行替换、对通知方案进行替换、不需要阅读和改动构建中流程\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h2 id=\"2-开始\">2 开始</h2>\n\n<p>构建脚本由构建入口、构建主流程、额外流程三个模块构成，</p>\n\n<script src=\"js/mermaid.ts\"></script>\n<div class=\"mermaid\">\n\ngraph TB\nSTART--&gt;入参配置\n入参配置--&gt;构建前-第三方APIKEY配置\n构建前-第三方APIKEY配置--&gt;构建前-设置构建版本号自增\n构建前-设置构建版本号自增--&gt;构建前-获取工程配置  \n构建前-获取工程配置--&gt;构建中-环境变量设置\n构建中-环境变量设置--&gt;构建中-执行Pod依赖安装\n构建中-执行Pod依赖安装--&gt;构建中-执行构建\n构建中-执行构建--&gt;构建中-执行归档\n构建中-执行归档--&gt;构建中-执行分发\n构建中-执行分发--&gt;构建中-执行通知\n构建中-执行通知--&gt;END\n\n</div>\n\n<h3 id=\"21-构建入口\">2.1 构建入口</h3>\n\n<p>构建入口由UniversalBuild.sh 执行，负责可变参数声明及脚本入参处理</p>\n\n<p>参数说明：</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n</pre></td><td class=\"rouge-code\"><pre># [参数]\n#   -cfg                #打包方式：configuration(0:DailyBuild|1:TestFlight|2:Release|3:TFInner)\n#   -target_name        #项目配置：要打包的TargetName\n#   -channel_name       #渠道号：pgy下载 url后缀\n#   -notify             #是否启用通知 有传值1则启用群通知，2启用内部群通知\n#   -publish            #分发方式：1 启用oss| 2 启用pgy+oss | else pgy\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>以下以【Demo】为例：</p>\n\n<p>​\tTarget为PSCDemoiOS</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n</pre></td><td class=\"rouge-code\"><pre># [调用说明]\n#   使用了gitsubmodule 构建组件，兼容git 检出不兼容，需要先执行 git submodule update --init --recursive\n#   git submodule update --init --recursive\n#   拉取自模块更新\n#   git submodule update --remote\n#\n#   打包方式：configuration(0:DailyBuild|1:TestFlight|2:Release|3:TFInner)\n#   configuration=0\n#\n#   项目配置（TargetName与源码所在目录需同名）：\n#   targetName=PSCDemoiOS\n#\n#   渠道号：pgy下载 url后缀\n#   pgyChannel=129\n#\n#   是否启用通知 有传值1则启用群通知，2启用内部群通知\n#   notify=1\n#\n#   1 启用oss 2 启用pgy+oss else pgy\n#   publish=0\n#\n#   sh PSC_iOS_Build_SH/UniversalBuild.sh -cfg $configuration -target_name $targetName -channel_name $pgyChannel -notify $notify -publish $publish\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h3 id=\"22-构建主流程\">2.2 构建主流程</h3>\n\n<p>构建主流吃由build_sh.sh 执行，负责iOS构建工作，此部分与打包业务强相关，相对比较稳定，不太需要频繁修改，因此抽离出来</p>\n\n<p>主流程简单说明：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n</pre></td><td class=\"rouge-code\"><pre><span class=\"k\">function </span>build<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"c\">#新增耗时统计</span>\n    <span class=\"nb\">export </span><span class=\"nv\">build_start_time</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">date</span> +%s.%N<span class=\"si\">)</span>\n\n    <span class=\"c\">#初始化环境</span>\n    bInitEnv\n    print_time_cost <span class=\"s2\">\"构建前配置\"</span>\n\n    <span class=\"c\">#执行pod</span>\n    bPodInstall\n    print_time_cost <span class=\"s2\">\"执行pod\"</span>\n\n    <span class=\"c\">#执行构建</span>\n    bBuildProject\n    print_time_cost <span class=\"s2\">\"执行构建\"</span>\n\n    <span class=\"c\">#执行构建后的归档流程：ipa &amp; dsym</span>\n    bCollection\n    print_time_cost <span class=\"s2\">\"执行构建归档操作\"</span>\n\n    <span class=\"c\">#执行构建后的分发流程：上传（发布）安装包，供下载安装</span>\n    bDistribution\n    print_time_cost <span class=\"s2\">\"执行分发操作\"</span>\n\n    <span class=\"c\">#执行构建后的通知流程</span>\n    bNotification\n    print_time_cost <span class=\"s2\">\"执行通知操作\"</span>\n<span class=\"o\">}</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>详细步骤，详见代码相关模块</p>\n\n<h3 id=\"23-额外流程\">2.3 额外流程</h3>\n\n<p>额外流程抽离是考虑到上传、通知、归档等属于打包的后续操作，不需要与打包流程耦合，且这部分的流程抽离，可实现模块的热插拔替换。</p>\n\n<h4 id=\"231-分发\">2.3.1 分发</h4>\n\n<p>​\t目前支持以下三种分法方式：</p>\n\n<ul>\n  <li>蒲公英</li>\n  <li>阿里云OSS</li>\n  <li>AppStore</li>\n</ul>\n\n<p>​\t安装包的分发逻辑调用</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>sh build_ext/build_publish.sh\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>​\t在 build_publish.sh 中执行分发逻辑，</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n</pre></td><td class=\"rouge-code\"><pre><span class=\"k\">function </span>upload_ipa <span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"nb\">export </span><span class=\"nv\">upload_start_time</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">date</span> +%s.%N<span class=\"si\">)</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'///upload_ipa configurationName = '</span><span class=\"k\">${</span><span class=\"nv\">configurationName</span><span class=\"k\">}</span>\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">packedToAppStore</span><span class=\"k\">}</span><span class=\"s2\">\"</span> <span class=\"o\">==</span> <span class=\"s2\">\"1\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">echo</span> <span class=\"s1\">'TFInner 、TestFlight &amp; appstore 上传到appstore 统计耗时'</span>\n        upload_ipa_to_AppStore\n        print_upload_time_cost <span class=\"s2\">\"上传AppStore\"</span>\n\n    <span class=\"k\">else</span>\n        <span class=\"c\">#其他</span>\n        <span class=\"c\">#启用pgy时构建包上传到pgy</span>\n        <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">use_pgy_publish</span><span class=\"k\">}</span><span class=\"s2\">\"</span> <span class=\"o\">=</span> <span class=\"s2\">\"1\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n            </span><span class=\"nb\">echo</span> <span class=\"s1\">'///启用pgy上传，统计耗时'</span>\n            upload_ipa_to_pgyer\n            print_upload_time_cost <span class=\"s2\">\"上传PGY\"</span>\n        <span class=\"k\">fi</span>\n\n        <span class=\"c\">#启用oss</span>\n        <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">use_oss_publish</span><span class=\"k\">}</span><span class=\"s2\">\"</span> <span class=\"o\">=</span> <span class=\"s2\">\"1\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n            </span><span class=\"nb\">echo</span> <span class=\"s1\">'///启用oss上传，统计耗时'</span>\n            upload_ipa_to_aliyunOSS\n            print_upload_time_cost <span class=\"s2\">\"上传oss\"</span>\n        <span class=\"k\">fi\n    fi</span>\n<span class=\"o\">}</span>\n\n\n<span class=\"k\">function </span>upload<span class=\"o\">()</span>\n<span class=\"o\">{</span>   \n    <span class=\"c\">#发布ipa</span>\n    upload_ipa\n<span class=\"o\">}</span>\n\n<span class=\"c\">#归档</span>\nupload\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>​\t上传测试包可以从现在的蒲公英换到Fir或者简单云等，则不需要关心打包流程，只需要将上传模块的方法切换即可。</p>\n\n<ul>\n  <li><strong>dailybuild</strong></li>\n</ul>\n\n<p>​\t蒲公英：</p>\n\n<p>​\t用于测试包构建，安装包目前上传到蒲公英（服务端环境可切换）</p>\n\n<p>​\t上传蒲公英的逻辑：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#发布到第三方分发平台：蒲公英</span>\n<span class=\"k\">function </span>upload_ipa_to_pgyer <span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'/// 上传 PGY 开始 IPA_PATH='</span><span class=\"k\">${</span><span class=\"nv\">IPA_PATH</span><span class=\"k\">}</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'/// 上传 PGY 开始 渠道='</span><span class=\"k\">${</span><span class=\"nv\">channel_name</span><span class=\"k\">}</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'/// 上传 PGY 开始 提交 git_log='</span><span class=\"k\">${</span><span class=\"nv\">git_log</span><span class=\"k\">}</span>\n        \n    <span class=\"nv\">compileEnvironment</span><span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">buildName</span><span class=\"k\">}</span><span class=\"s2\">:</span><span class=\"k\">${</span><span class=\"nv\">git_log</span><span class=\"k\">}</span><span class=\"s2\">\"</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'/// 上传 PGY 开始 内容='</span><span class=\"k\">${</span><span class=\"nv\">compileEnvironment</span><span class=\"k\">}</span>\n\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$channel_name</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then</span>\n        <span class=\"c\"># 渠道空，则走默认 不指定渠道号的上传</span>\n        <span class=\"c\"># 改成2.0api</span>\n        <span class=\"nb\">echo</span> <span class=\"s1\">'/// 上传 PGY 开始 渠道 为空'</span>\n        bash <span class=\"nv\">$build_ext_path</span>/publish_res/pgyer_upload.sh <span class=\"nt\">-k</span> <span class=\"k\">${</span><span class=\"nv\">pgyAPIKey</span><span class=\"k\">}</span> <span class=\"nt\">-d</span> <span class=\"k\">${</span><span class=\"nv\">compileEnvironment</span><span class=\"k\">}</span> <span class=\"k\">${</span><span class=\"nv\">IPA_PATH</span><span class=\"k\">}</span>\n    <span class=\"k\">else</span>\n        <span class=\"c\"># 渠道非空，走下载地址关联 渠道</span>\n        <span class=\"c\"># 改成2.0api</span>\n        <span class=\"nb\">echo</span> <span class=\"s1\">'/// 上传 PGY 开始 渠道='</span><span class=\"k\">${</span><span class=\"nv\">channel_name</span><span class=\"k\">}</span>\n        bash <span class=\"nv\">$build_ext_path</span>/publish_res/pgyer_upload.sh <span class=\"nt\">-k</span> <span class=\"k\">${</span><span class=\"nv\">pgyAPIKey</span><span class=\"k\">}</span> <span class=\"nt\">-d</span> <span class=\"k\">${</span><span class=\"nv\">compileEnvironment</span><span class=\"k\">}</span> <span class=\"nt\">-c</span> <span class=\"k\">${</span><span class=\"nv\">pgyDownloadUrlSubfix</span><span class=\"k\">}</span> <span class=\"k\">${</span><span class=\"nv\">IPA_PATH</span><span class=\"k\">}</span>\n    <span class=\"k\">fi\n            \n    </span><span class=\"nb\">echo</span> <span class=\"s1\">'/// 上传 PGY 结束'</span>\n<span class=\"o\">}</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>​\t阿里云OSS：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#在下载二维码增加git日志</span>\n<span class=\"k\">function </span>add_log_commit_title_msg_to_qrcode <span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"c\">#二维码打上版本信息</span>\n    <span class=\"c\">#TODO: 这里需要安装下工具 ImageMgick [brew install ImageMgick]</span>\n    <span class=\"c\">#check_command_and_install \"convert\" \"ImageMgick\"</span>\n    bash <span class=\"nv\">$build_ext_path</span>/build_tools/build_tools.sh <span class=\"s2\">\"convert\"</span> <span class=\"s2\">\"ImageMagick\"</span>\n    \n    <span class=\"nv\">title</span><span class=\"o\">=</span><span class=\"nv\">$xcodeVersion3number</span>.<span class=\"k\">${</span><span class=\"nv\">channel_name</span><span class=\"k\">}</span>.<span class=\"nv\">$configurationName</span>.<span class=\"k\">${</span><span class=\"nv\">BuildNo</span><span class=\"k\">}</span>\n\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nv\">$1</span> <span class=\"o\">=</span> <span class=\"s2\">\"1\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nv\">dst_line_cnt</span><span class=\"o\">=</span>0\n        <span class=\"c\">#FIXME: 这样取会为空???? ${source_log_arr}</span>\n        <span class=\"nb\">export </span><span class=\"nv\">oss_source_log_arr</span><span class=\"o\">=(</span><span class=\"sb\">`</span><span class=\"nb\">echo</span> <span class=\"nv\">$source_log_str</span> | <span class=\"nb\">tr</span> <span class=\"s1\">'}{'</span> <span class=\"s1\">' '</span><span class=\"sb\">`</span><span class=\"o\">)</span>\n        <span class=\"nb\">export </span><span class=\"nv\">oss_log_line_count</span><span class=\"o\">=</span><span class=\"k\">${#</span><span class=\"nv\">oss_source_log_arr</span><span class=\"p\">[@]</span><span class=\"k\">}</span>\n        <span class=\"nb\">echo</span> <span class=\"s1\">'/// oss 分发： 添加 二维码msg log_line_count='</span><span class=\"nv\">$oss_log_line_count</span>\n        <span class=\"nb\">echo</span> <span class=\"s1\">'/// oss 分发： 添加 二维码msg source_log_arr count='</span><span class=\"k\">${#</span><span class=\"nv\">source_log_arr</span><span class=\"p\">[@]</span><span class=\"k\">}</span>\n\n        <span class=\"k\">for</span><span class=\"o\">((</span> <span class=\"nv\">i</span><span class=\"o\">=</span>0<span class=\"p\">;</span>i&lt;<span class=\"k\">${</span><span class=\"nv\">oss_log_line_count</span><span class=\"k\">}</span><span class=\"p\">;</span>i++<span class=\"o\">))</span>\n        <span class=\"k\">do\n            </span><span class=\"nv\">single_len</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">echo</span> <span class=\"nt\">-n</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">oss_source_log_arr</span><span class=\"p\">[i]</span><span class=\"k\">}</span><span class=\"s2\">\"</span> | <span class=\"nb\">wc</span> <span class=\"nt\">-m</span><span class=\"si\">)</span>\n            <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">oss_source_log_arr</span><span class=\"p\">[i]</span><span class=\"k\">}</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n                </span><span class=\"nv\">oss_singleStr</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">oss_source_log_arr</span><span class=\"p\">[i]</span><span class=\"k\">}</span><span class=\"p\">;</span>\n                <span class=\"nb\">echo</span> <span class=\"s1\">'///--遍历'</span><span class=\"k\">${</span><span class=\"nv\">oss_source_log_arr</span><span class=\"p\">[i]</span><span class=\"k\">}</span><span class=\"s1\">'为空文字长度：'</span><span class=\"nv\">$single_len</span>\n                <span class=\"nv\">dst_line_cnt</span><span class=\"o\">=</span><span class=\"k\">$((</span>dst_line_cnt+1<span class=\"k\">))</span>\n            <span class=\"k\">else\n                </span><span class=\"nv\">line_max_len</span><span class=\"o\">=</span>30\n                <span class=\"nv\">ingle_cnt</span><span class=\"o\">=</span><span class=\"k\">$((</span>single_len <span class=\"o\">/</span> line_max_len<span class=\"k\">))</span>\n\n\n                <span class=\"k\">if</span> <span class=\"o\">((</span>ingle_cnt <span class=\"o\">&gt;</span> 0<span class=\"o\">))</span><span class=\"p\">;</span> <span class=\"k\">then\n                    for</span><span class=\"o\">((</span> <span class=\"nv\">j</span><span class=\"o\">=</span>0<span class=\"p\">;</span>j&lt;<span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">ingle_cnt</span><span class=\"k\">}</span><span class=\"p\">;</span>j++<span class=\"o\">))</span>\n                    <span class=\"k\">do\n                        </span><span class=\"nv\">string</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">oss_source_log_arr</span><span class=\"p\">[i]</span><span class=\"k\">}</span>\n                        <span class=\"nv\">single_line1</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">string</span>:<span class=\"p\">(line_max_len * j)</span>:line_max_len<span class=\"k\">}</span>\n                        <span class=\"nb\">echo</span> <span class=\"s1\">'///--遍历'</span> <span class=\"k\">${</span><span class=\"nv\">oss_source_log_arr</span><span class=\"p\">[i]</span><span class=\"k\">}</span><span class=\"s1\">'文字长度：'</span><span class=\"nv\">$single_len</span><span class=\"s1\">'超阈值阶段：第'</span><span class=\"nv\">$j</span><span class=\"s1\">'行:'</span><span class=\"nv\">$single_line1</span>\n                        oss_singleStr+<span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"se\">\\n</span><span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">single_line1</span><span class=\"k\">}</span><span class=\"p\">;</span>\n                        <span class=\"nv\">dst_line_cnt</span><span class=\"o\">=</span><span class=\"k\">$((</span>dst_line_cnt+1<span class=\"k\">))</span>\n                    <span class=\"k\">done</span><span class=\"p\">;</span>\n                <span class=\"k\">else\n                    </span><span class=\"nb\">echo</span> <span class=\"s1\">'///--遍历'</span> <span class=\"k\">${</span><span class=\"nv\">oss_source_log_arr</span><span class=\"p\">[i]</span><span class=\"k\">}</span><span class=\"s1\">' 文字长度：'</span><span class=\"nv\">$single_len</span>\n                    <span class=\"nv\">dst_line_cnt</span><span class=\"o\">=</span><span class=\"k\">$((</span>dst_line_cnt+1<span class=\"k\">))</span>\n                    oss_singleStr+<span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"se\">\\n</span><span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">oss_source_log_arr</span><span class=\"p\">[i]</span><span class=\"k\">}</span><span class=\"p\">;</span>\n                <span class=\"k\">fi\n            fi\n        done</span><span class=\"p\">;</span>\n        <span class=\"nv\">msg</span><span class=\"o\">=</span><span class=\"nv\">$oss_singleStr</span>\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"/// oss render msg=\"</span><span class=\"nv\">$msg</span>\n        \n        <span class=\"nv\">contentsize_width</span><span class=\"o\">=</span>600\n        <span class=\"nv\">contentsize_height</span><span class=\"o\">=</span><span class=\"k\">$((</span>contentsize_width <span class=\"o\">+</span> <span class=\"nv\">$dst_line_cnt</span> <span class=\"o\">*</span> <span class=\"m\">25</span> <span class=\"o\">+</span> <span class=\"m\">40</span> <span class=\"o\">+</span> <span class=\"m\">40</span><span class=\"k\">))</span> <span class=\"c\">#第一个40是title的高度 第二个40是距离底部空间</span>\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"contentsize_height=\"</span><span class=\"nv\">$contentsize_height</span>\n        <span class=\"c\">#改变原图大小</span>\n        convert <span class=\"nv\">$qrcode_path</span> <span class=\"nt\">-resize</span> <span class=\"k\">${</span><span class=\"nv\">contentsize_width</span><span class=\"k\">}</span>x<span class=\"k\">${</span><span class=\"nv\">contentsize_width</span><span class=\"k\">}</span>^ <span class=\"nt\">-gravity</span> center <span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span>_1.png\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"1 convert：\"</span><span class=\"k\">${</span><span class=\"nv\">contentsize_width</span><span class=\"k\">}</span>x<span class=\"k\">${</span><span class=\"nv\">contentsize_width</span><span class=\"k\">}</span>\n\n        <span class=\"c\">#变高，兼容msg</span>\n        convert <span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span>_1.png <span class=\"nt\">-gravity</span> north <span class=\"nt\">-extent</span> <span class=\"k\">${</span><span class=\"nv\">contentsize_width</span><span class=\"k\">}</span>x<span class=\"k\">${</span><span class=\"nv\">contentsize_height</span><span class=\"k\">}</span> <span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span>_2.png\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"2 convert：\"</span><span class=\"k\">${</span><span class=\"nv\">contentsize_width</span><span class=\"k\">}</span>x<span class=\"k\">${</span><span class=\"nv\">contentsize_height</span><span class=\"k\">}</span>\n\n        <span class=\"c\">#汉字字体</span>\n        <span class=\"nv\">chn_tff_path</span><span class=\"o\">=</span><span class=\"nv\">$build_ext_path</span>/publish_res/chn.ttf\n        \n        <span class=\"c\">#渲染title</span>\n        convert <span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span>_2.png <span class=\"nt\">-gravity</span> north <span class=\"nt\">-pointsize</span> 30 <span class=\"nt\">-font</span> <span class=\"nv\">$chn_tff_path</span> <span class=\"nt\">-fill</span> black <span class=\"nt\">-annotate</span> +0+<span class=\"k\">${</span><span class=\"nv\">contentsize_width</span><span class=\"k\">}</span> <span class=\"nv\">$title</span> <span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span>_3.png\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"3 convert：title：\"</span><span class=\"k\">${</span><span class=\"nv\">title</span><span class=\"k\">}</span>\n\n        <span class=\"c\">#渲染msg</span>\n        <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$msg</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n            </span><span class=\"nb\">echo</span> <span class=\"s2\">\"4 convert：msg：为空\"</span>\n        <span class=\"k\">fi\n        \n        </span>convert <span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span>_3.png <span class=\"nt\">-gravity</span> north <span class=\"nt\">-pointsize</span> 20 <span class=\"nt\">-font</span> <span class=\"nv\">$chn_tff_path</span> <span class=\"nt\">-fill</span> black <span class=\"nt\">-annotate</span> +0+<span class=\"k\">$((${</span><span class=\"nv\">contentsize_width</span><span class=\"k\">}</span><span class=\"o\">+</span><span class=\"m\">40</span><span class=\"k\">))</span> <span class=\"nv\">$msg</span> <span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span>_4.png\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"4 convert：msg：\"</span><span class=\"k\">${</span><span class=\"nv\">msg</span><span class=\"k\">}</span>\n        \n        <span class=\"k\">if </span><span class=\"nb\">test</span> <span class=\"nt\">-e</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span><span class=\"s2\">_4.png\"</span><span class=\"p\">;</span> <span class=\"k\">then\n            </span><span class=\"nb\">echo</span> <span class=\"s2\">\"4 convert：msg 存在\"</span>\n            <span class=\"nv\">qrcode_path_with_msg</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span>_4.png\n        <span class=\"k\">else\n            </span><span class=\"nb\">echo</span> <span class=\"s2\">\"4 convert：msg 不存在 使用3\"</span>\n            <span class=\"nv\">qrcode_path_with_msg</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span>_3.png\n        <span class=\"k\">fi\n\n    else</span>\n        <span class=\"c\">#没有传 1 不需要msg，只给title</span>\n        convert <span class=\"nv\">$qrcode_path</span> <span class=\"nt\">-gravity</span> south <span class=\"nt\">-pointsize</span> 10 <span class=\"nt\">-fill</span> gray <span class=\"nt\">-annotate</span> +0+0 <span class=\"nv\">$qrcode_print_msg</span>  <span class=\"nv\">$qrcode_path_with_msg</span>\n        <span class=\"nb\">echo</span> <span class=\"s1\">'/// oss 分发： 添加 二维码title='</span><span class=\"k\">${</span><span class=\"nv\">title</span><span class=\"k\">}</span>\n    <span class=\"k\">fi</span>\n\n<span class=\"o\">}</span>\n\n<span class=\"c\">#发布到阿里云OSS</span>\n<span class=\"k\">function </span>upload_ipa_to_aliyunOSS <span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"c\">#更新plist的键值对：</span>\n    <span class=\"c\">#    /usr/libexec/PlistBuddy -c \"Set :CFBundleShortVersionString ${version3number}\" ${WeSingNotificationServiceExtension_plist}</span>\n    <span class=\"nv\">manifest_path</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">exportPath</span><span class=\"k\">}</span>/manifest.plist\n    <span class=\"nb\">echo</span> <span class=\"s1\">'/// oss 分发： manifest_path='</span><span class=\"k\">${</span><span class=\"nv\">manifest_path</span><span class=\"k\">}</span>\n    \n    <span class=\"nv\">oss_bucket</span><span class=\"o\">=</span><span class=\"s2\">\"oss_bucket_name\"</span>\n    <span class=\"nv\">oss_platform</span><span class=\"o\">=</span><span class=\"s2\">\"iOS\"</span>\n    <span class=\"nv\">oss_bucket_path</span><span class=\"o\">=</span><span class=\"nv\">$oss_platform</span>/<span class=\"k\">${</span><span class=\"nv\">TARGET_NAME</span><span class=\"k\">}</span>/<span class=\"nv\">$configurationName</span>/<span class=\"k\">${</span><span class=\"nv\">channel_name</span><span class=\"k\">}</span>/<span class=\"k\">${</span><span class=\"nv\">BuildNo</span><span class=\"k\">}</span>/<span class=\"k\">${</span><span class=\"nv\">TARGET_NAME</span><span class=\"k\">}</span>_<span class=\"k\">${</span><span class=\"nv\">channel_name</span><span class=\"k\">}</span>_<span class=\"nv\">$configurationName_</span><span class=\"k\">${</span><span class=\"nv\">BuildNo</span><span class=\"k\">}</span>\n    <span class=\"nv\">oss_path</span><span class=\"o\">=</span><span class=\"s2\">\"oss://</span><span class=\"nv\">$oss_bucket</span><span class=\"s2\">/</span><span class=\"nv\">$oss_bucket_path</span><span class=\"s2\">\"</span>\n    <span class=\"nv\">oss_url</span><span class=\"o\">=</span><span class=\"s2\">\"https://</span><span class=\"nv\">$oss_bucket</span><span class=\"s2\">.oss-cn-beijing.aliyuncs.com/</span><span class=\"nv\">$oss_bucket_path</span><span class=\"s2\">\"</span>\n\n    <span class=\"nv\">oss_ipa_upload_url</span><span class=\"o\">=</span><span class=\"nv\">$oss_path</span><span class=\"s2\">\".ipa\"</span>\n    <span class=\"nv\">oss_ipa_url</span><span class=\"o\">=</span><span class=\"nv\">$oss_url</span><span class=\"s2\">\".ipa\"</span>\n\n    <span class=\"c\">#icon下载地址配置</span>\n    <span class=\"nv\">oss_icon_url</span><span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">aliyunOSSBuicket</span><span class=\"k\">}</span><span class=\"s2\">/icon/icon.png\"</span>\n    <span class=\"nv\">oss_icon_fs_url</span><span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">aliyunOSSBuicket</span><span class=\"k\">}</span><span class=\"s2\">/icon/icon_fs.png\"</span>\n\n    \n    <span class=\"c\">#修改ipa下载地址</span>\n    /usr/libexec/PlistBuddy <span class=\"nt\">-c</span> <span class=\"s2\">\"Set :items:0:assets:0:url </span><span class=\"nv\">$oss_ipa_url</span><span class=\"s2\">\"</span> <span class=\"nv\">$manifest_path</span>\n\n    <span class=\"c\">#修改icon地址</span>\n    /usr/libexec/PlistBuddy <span class=\"nt\">-c</span> <span class=\"s2\">\"Set :items:0:assets:1:url </span><span class=\"nv\">$oss_icon_url</span><span class=\"s2\">\"</span> <span class=\"nv\">$manifest_path</span>\n\n    <span class=\"c\">#修改icon full size地址</span>\n    /usr/libexec/PlistBuddy <span class=\"nt\">-c</span> <span class=\"s2\">\"Set :items:0:assets:2:url </span><span class=\"nv\">$oss_icon_fs_url</span><span class=\"s2\">\"</span> <span class=\"nv\">$manifest_path</span>\n\n\n    <span class=\"c\">#传ipa</span>\n    ossutil <span class=\"nb\">cp</span> <span class=\"k\">${</span><span class=\"nv\">IPA_PATH</span><span class=\"k\">}</span> <span class=\"nv\">$oss_ipa_upload_url</span> <span class=\"nt\">-f</span>\n    \n    <span class=\"c\">#传manifest</span>\n    <span class=\"nv\">oss_manifest_extension</span><span class=\"o\">=</span><span class=\"s2\">\"plist\"</span>\n    <span class=\"nv\">oss_manifest_upload_url</span><span class=\"o\">=</span><span class=\"nv\">$oss_path</span><span class=\"s2\">\".\"</span><span class=\"nv\">$oss_manifest_extension</span>\n    <span class=\"nv\">oss_manifest_url</span><span class=\"o\">=</span><span class=\"nv\">$oss_url</span><span class=\"s2\">\".\"</span><span class=\"nv\">$oss_manifest_extension</span>\n    ossutil <span class=\"nb\">cp</span> <span class=\"k\">${</span><span class=\"nv\">manifest_path</span><span class=\"k\">}</span> <span class=\"nv\">$oss_manifest_upload_url</span> <span class=\"nt\">-f</span>\n    \n    <span class=\"c\">#上述做归档后，生成下载二维码</span>\n    <span class=\"nv\">download_url</span><span class=\"o\">=</span><span class=\"s2\">\"itms-services://?action=download-manifest&amp;url=\"</span><span class=\"nv\">$oss_manifest_url</span>\n    <span class=\"nv\">qrcode_path</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">exportPath</span><span class=\"k\">}</span>/<span class=\"k\">${</span><span class=\"nv\">TARGET_NAME</span><span class=\"k\">}</span>_<span class=\"k\">${</span><span class=\"nv\">BuildNo</span><span class=\"k\">}</span>.png\n    \n    <span class=\"c\">#TODO: 这里需要安装下工具 qrencode [brew install qrencode]</span>\n    bash <span class=\"nv\">$build_ext_path</span>/build_tools/build_tools.sh <span class=\"s2\">\"qrencode\"</span>\n\n    qrencode <span class=\"nt\">-o</span> <span class=\"nv\">$qrcode_path</span> <span class=\"nv\">$download_url</span>\n    \n    <span class=\"c\">#将二维码上传到oss</span>\n    <span class=\"nv\">oss_qrencode_extension</span><span class=\"o\">=</span><span class=\"s2\">\"png\"</span>\n    <span class=\"nv\">oss_qrencode_upload_url</span><span class=\"o\">=</span><span class=\"nv\">$oss_path</span><span class=\"s2\">\".\"</span><span class=\"nv\">$oss_qrencode_extension</span>\n    <span class=\"nv\">qrcode_path_with_msg</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span>_with_msg\n        \n    <span class=\"c\">#如果需要二维码打上log信息则调用</span>\n    <span class=\"nv\">need_msg</span><span class=\"o\">=</span>1\n    add_log_commit_title_msg_to_qrcode <span class=\"nv\">$need_msg</span>\n        \n    <span class=\"c\">#上传到阿里云oss</span>\n    ossutil <span class=\"nb\">cp</span> <span class=\"k\">${</span><span class=\"nv\">qrcode_path_with_msg</span><span class=\"k\">}</span> <span class=\"nv\">$oss_qrencode_upload_url</span> <span class=\"nt\">-f</span>\n    \n    <span class=\"c\">#二维码的url 通知出来</span>\n    <span class=\"nb\">export </span><span class=\"nv\">oss_app_download_qrcode_url</span><span class=\"o\">=</span><span class=\"nv\">$oss_url</span><span class=\"s2\">\".\"</span><span class=\"nv\">$oss_qrencode_extension</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'/// oss 分发： 二维码的oss_app_download_qrcode_url='</span><span class=\"k\">${</span><span class=\"nv\">oss_app_download_qrcode_url</span><span class=\"k\">}</span>\n<span class=\"o\">}</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<ul>\n  <li><strong>TestFlight</strong></li>\n</ul>\n\n<p>​\t打灰度包将执行ipa上传到AppStore后台的操作（服务端环境是正式环境，未来有外网的灰度需求可改成灰度环境）</p>\n\n<ul>\n  <li><strong>Release</strong></li>\n</ul>\n\n<p>​\t打正式包将执行ipa上传到AppStore后台的操作（服务端环境是正式环境）</p>\n\n<ul>\n  <li><strong>TFinner</strong></li>\n</ul>\n\n<p>​\t打灰度包给没有添加测试设备的同事下载，解决100设备不够用（带Debug模式、可切换环境、上传到AppStore）</p>\n\n<p>AppStore分发：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#发布到AppStore</span>\n<span class=\"k\">function </span>upload_ipa_to_AppStore <span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'/// 上传App Store 开始'</span>\n    xcrun altool <span class=\"nt\">--validate-app</span> <span class=\"nt\">-f</span>  <span class=\"nv\">$IPA_PATH</span> <span class=\"nt\">--type</span>  ios  <span class=\"nt\">--apiKey</span> <span class=\"nv\">$appStore_apikey</span> <span class=\"nt\">--apiIssuer</span> <span class=\"nv\">$appStore_apiIssuer</span>\n    xcrun altool <span class=\"nt\">--upload-app</span> <span class=\"nt\">-f</span>  <span class=\"nv\">$IPA_PATH</span> <span class=\"nt\">--type</span>  ios  <span class=\"nt\">--apiKey</span> <span class=\"nv\">$appStore_apikey</span> <span class=\"nt\">--apiIssuer</span> <span class=\"nv\">$appStore_apiIssuer</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'/// 上传App Store 结束'</span>\n<span class=\"o\">}</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h4 id=\"232-通知\">2.3.2 通知</h4>\n\n<p>​\t通知模块目前通过钉钉通知，未来也可改成邮件甚至其他方式，考量亦是如此。通知实现内容可定制，当参数notify不为空，才需要通知测试团队进行更新：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n</pre></td><td class=\"rouge-code\"><pre> <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$notify</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then</span>\n        <span class=\"c\"># 空，不发通知</span>\n        <span class=\"nb\">echo</span> <span class=\"s1\">'/// 本次打包静默，不发通知 '</span>\n <span class=\"k\">else</span>\n    ....\n <span class=\"k\">fi</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>​\t通知通过 build_notification.sh 实现如下逻辑：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#构建通知</span>\n<span class=\"k\">function </span>notification<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"nv\">param</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$param</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">echo</span> <span class=\"s1\">'///构建通知（参数为空）'</span>\n        notify\n    <span class=\"k\">else\n        </span><span class=\"nb\">echo</span> <span class=\"s1\">'///构建通知（参数不为空）：'</span><span class=\"nv\">$param</span>\n        <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">param</span><span class=\"k\">}</span><span class=\"s2\">\"</span> <span class=\"o\">=</span> <span class=\"s2\">\"AppStore\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n            </span><span class=\"nb\">echo</span> <span class=\"s1\">'///构建通知AppStore'</span>\n            notify_AppStore\n        <span class=\"k\">else\n            </span><span class=\"nb\">echo</span> <span class=\"s1\">'///构建异常（参数:）'</span><span class=\"nv\">$param</span>\n            notify_fail <span class=\"nv\">$param</span>\n        <span class=\"k\">fi\n    fi</span>\n\n<span class=\"o\">}</span>\n\n<span class=\"nb\">echo</span> <span class=\"s1\">'///构建通知（'</span><span class=\"nv\">$1</span><span class=\"s1\">')'</span>\n\n<span class=\"c\">#通知</span>\nnotification <span class=\"nv\">$1</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>通知兼容蒲公英下载地址 + oss下载地址：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#执行通知逻辑</span>\n<span class=\"k\">function </span>notify<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"nv\">modify_msg</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">git_log</span><span class=\"k\">}</span>\n    <span class=\"nv\">ProductName</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">xcodeProductName</span><span class=\"k\">}</span>\n    <span class=\"nv\">downloadPrefix</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">PrefixID</span><span class=\"k\">}</span>\n    <span class=\"nv\">channel</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">channel_name</span><span class=\"k\">}</span>\n    <span class=\"nv\">title</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">buildName</span><span class=\"k\">}</span>\n    \n    <span class=\"nv\">app_donwnload_url</span><span class=\"o\">=</span><span class=\"s2\">\"\"</span>\n    <span class=\"nv\">pgy_app_donwnload_url</span><span class=\"o\">=</span><span class=\"s2\">\"\"</span>\n    <span class=\"c\">#启用传pgy</span>\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">use_pgy_publish</span><span class=\"k\">}</span><span class=\"s2\">\"</span> <span class=\"o\">=</span> <span class=\"s2\">\"1\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then</span>\n        <span class=\"c\">#采用直接 拼 channel后缀</span>\n        <span class=\"nv\">shortUrl</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">downloadPrefix</span><span class=\"k\">}${</span><span class=\"nv\">ProductName</span><span class=\"k\">}${</span><span class=\"nv\">channel</span><span class=\"k\">}</span>\n\n\n        <span class=\"nv\">pgy_app_donwnload_url</span><span class=\"o\">=</span><span class=\"s2\">\"https://www.xcxwo.com/</span><span class=\"k\">${</span><span class=\"nv\">shortUrl</span><span class=\"k\">}</span><span class=\"s2\">\"</span>\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"short_download_url = \"</span><span class=\"nv\">$short_download_url</span>\n        <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$short_download_url</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n            </span><span class=\"nv\">app_donwnload_url</span><span class=\"o\">=</span><span class=\"nv\">$pgy_app_donwnload_url</span>\n        <span class=\"k\">else\n            </span><span class=\"nv\">app_donwnload_url</span><span class=\"o\">=</span><span class=\"nv\">$short_download_url</span>\n        <span class=\"k\">fi</span>\n        <span class=\"c\">#蒲公英下载地址</span>\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"通知：蒲公英分发，下载地址：'</span><span class=\"k\">${</span><span class=\"nv\">app_donwnload_url</span><span class=\"k\">}</span><span class=\"s2\">'\"</span>\n    <span class=\"k\">fi</span>\n    \n    \n    <span class=\"c\">#启用传oss</span>\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">use_oss_publish</span><span class=\"k\">}</span><span class=\"s2\">\"</span> <span class=\"o\">=</span> <span class=\"s2\">\"1\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$oss_app_download_qrcode_url</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then</span>\n            <span class=\"c\">#oss下载地址为空</span>\n            <span class=\"nb\">echo</span> <span class=\"s2\">\"通知：oss_app_download_qrcode_url 为空则 下载地址：'</span><span class=\"k\">${</span><span class=\"nv\">app_donwnload_url</span><span class=\"k\">}</span><span class=\"s2\">'\"</span>\n        <span class=\"k\">else\n            </span><span class=\"nb\">echo</span> <span class=\"s2\">\"通知：oss_app_download_qrcode_url 不为空 下载地址：'</span><span class=\"k\">${</span><span class=\"nv\">app_donwnload_url</span><span class=\"k\">}</span><span class=\"s2\">' and '</span><span class=\"nv\">$oss_app_download_qrcode_url</span><span class=\"s2\">'\"</span>\n            <span class=\"nv\">app_donwnload_url</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">pgy_app_donwnload_url</span><span class=\"k\">}</span><span class=\"s1\">'\\n\\n'</span>oss下载地址:<span class=\"nv\">$oss_app_download_qrcode_url</span>\n\n        <span class=\"k\">fi\n    fi\n    \n    </span><span class=\"nb\">echo</span> <span class=\"s2\">\"通知 COME下载地址：'</span><span class=\"k\">${</span><span class=\"nv\">app_donwnload_url</span><span class=\"k\">}</span><span class=\"s2\">'\"</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"通知 内容：'\"\"'</span><span class=\"k\">${</span><span class=\"nv\">ProductName</span><span class=\"k\">}</span><span class=\"s2\">' App更新：'</span><span class=\"k\">${</span><span class=\"nv\">title</span><span class=\"k\">}</span><span class=\"s2\">'</span><span class=\"se\">\\n</span><span class=\"s2\">'</span><span class=\"k\">${</span><span class=\"nv\">modify_msg</span><span class=\"k\">}</span><span class=\"s2\">'</span><span class=\"se\">\\n</span><span class=\"s2\">下载地址：'</span><span class=\"k\">${</span><span class=\"nv\">app_donwnload_url</span><span class=\"k\">}</span><span class=\"s2\">'\"</span>\n    \n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">notify</span><span class=\"k\">}</span><span class=\"s2\">\"</span> <span class=\"o\">=</span> <span class=\"s2\">\"1\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">echo</span> <span class=\"s1\">'/// 本次打发通知到群里 '</span>\n    <span class=\"k\">elif</span> <span class=\"o\">[</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">notify</span><span class=\"k\">}</span><span class=\"s2\">\"</span> <span class=\"o\">=</span> <span class=\"s2\">\"2\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">echo</span> <span class=\"s1\">'/// 本次打发通知到内部群里 '</span>\n        <span class=\"nv\">access_token</span><span class=\"o\">=</span><span class=\"nv\">$internal_access_token</span>\n    <span class=\"k\">else\n        </span><span class=\"nb\">echo</span> <span class=\"s1\">'/// 本次打发通知参数'</span><span class=\"k\">${</span><span class=\"nv\">notify</span><span class=\"k\">}</span>\n    <span class=\"k\">fi\n    \n    if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$notify</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then</span>\n        <span class=\"c\"># 空，不发通知</span>\n        <span class=\"nb\">echo</span> <span class=\"s1\">'/// 本次打包静默，不发通知 '</span>\n\n    <span class=\"k\">else\n        </span><span class=\"nb\">echo</span> <span class=\"s1\">'/// 本次打包发通知 '</span>\n        <span class=\"c\">#发送发版通知</span>\n        curl <span class=\"s1\">'https://oapi.dingtalk.com/robot/send?access_token='</span><span class=\"k\">${</span><span class=\"nv\">access_token</span><span class=\"k\">}</span> <span class=\"se\">\\</span>\n            <span class=\"nt\">-H</span> <span class=\"s1\">'Content-Type: application/json'</span> <span class=\"se\">\\</span>\n            <span class=\"nt\">-d</span> <span class=\"s1\">'{\"msgtype\": \"text\",\n                \"at\": {\n                \"atMobiles\":[\n                    \"xx1\"\n                    \"xx2\"\n                    \"xx3\"\n                    \"xx4\"\n                    \"xx5\"\n                    \"xx6\"\n                    \"xx7\"\n                ],\n                \"isAtAll\": false\n                },\n                 \"text\": {\n                      \"content\": \"'</span><span class=\"k\">${</span><span class=\"nv\">ProductName</span><span class=\"k\">}</span><span class=\"s1\">' App更新：'</span><span class=\"k\">${</span><span class=\"nv\">title</span><span class=\"k\">}</span><span class=\"s1\">'\\n'</span><span class=\"k\">${</span><span class=\"nv\">modify_msg</span><span class=\"k\">}</span><span class=\"s1\">'\\n下载地址：'</span><span class=\"k\">${</span><span class=\"nv\">app_donwnload_url</span><span class=\"k\">}</span><span class=\"s1\">'\"            }\n               }'</span>\n               \n               \n        <span class=\"nb\">echo</span> <span class=\"s1\">'///-------------------------------------------------------'</span>\n        <span class=\"nb\">echo</span> <span class=\"s1\">'/// 通知Come3 '</span>\n        <span class=\"nb\">echo</span> <span class=\"s1\">'///-------------------------------------------------------'</span>\n    <span class=\"k\">fi</span>\n\n<span class=\"o\">}</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>​\t构建失败通知：</p>\n\n<div class=\"language-sh highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#打包出错时通知</span>\n<span class=\"k\">function </span>notify_fail<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"c\">#发布到移动端内部群</span>\n    <span class=\"nv\">access_token</span><span class=\"o\">=</span><span class=\"nv\">$internal_access_token</span>\n    <span class=\"c\">#产物</span>\n    <span class=\"nv\">ProductName</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">xcodeProductName</span><span class=\"k\">}</span>\n    <span class=\"c\">#渠道名</span>\n    <span class=\"nv\">channel</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">channel_name</span><span class=\"k\">}</span>\n    <span class=\"c\">#流水线名称</span>\n    <span class=\"nv\">title</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">buildName</span><span class=\"k\">}</span>\n    \n    <span class=\"c\">#失败原因</span>\n    <span class=\"nv\">reson</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n    \n    <span class=\"nb\">echo</span> <span class=\"s1\">'/// 本次打包异常：发通知到内部群 '</span>\n    <span class=\"c\">#发送发版通知</span>\n    curl <span class=\"s1\">'https://oapi.dingtalk.com/robot/send?access_token='</span><span class=\"k\">${</span><span class=\"nv\">access_token</span><span class=\"k\">}</span> <span class=\"se\">\\</span>\n        <span class=\"nt\">-H</span> <span class=\"s1\">'Content-Type: application/json'</span> <span class=\"se\">\\</span>\n        <span class=\"nt\">-d</span> <span class=\"s1\">'{\"msgtype\": \"text\",\n            \"at\": {\n            \"atMobiles\":[\n                \"DD1\",\n                \"DD2\"\n            ],\n            \"isAtAll\": false\n            },\n             \"text\": {\n                  \"content\": \"❌构建失败:\\nApp:'</span><span class=\"k\">${</span><span class=\"nv\">ProductName</span><span class=\"k\">}</span><span class=\"s1\">'\\n原  因：'</span><span class=\"k\">${</span><span class=\"nv\">reson</span><span class=\"k\">}</span><span class=\"s1\">'\\n流水线：'</span><span class=\"k\">${</span><span class=\"nv\">title</span><span class=\"k\">}</span><span class=\"s1\">'\\n渠  道：'</span><span class=\"k\">${</span><span class=\"nv\">buildName</span><span class=\"k\">}</span><span class=\"s1\">'\"}\n           }'</span>\n           \n           \n    <span class=\"nb\">echo</span> <span class=\"s1\">'///-------------------------------------------------------'</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'/// 构建通知'</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'///-------------------------------------------------------'</span>\n<span class=\"o\">}</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>构建到AppStore时需要测试团队对上线进行验证：也发送下通知</p>\n\n<div class=\"language-sh highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#打包AppStore通知，通知到群给出TestFlight下载链接二维码</span>\n<span class=\"k\">function </span>notify_AppStore<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"c\">#发布到移动端内部群</span>\n    <span class=\"nv\">access_token</span><span class=\"o\">=</span><span class=\"nv\">$internal_access_token</span>\n    <span class=\"c\">#产物</span>\n    <span class=\"nv\">ProductName</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">xcodeProductName</span><span class=\"k\">}</span>\n    <span class=\"c\">#渠道名</span>\n    <span class=\"nv\">channel</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">channel_name</span><span class=\"k\">}</span>\n    <span class=\"c\">#流水线名称</span>\n    <span class=\"nv\">title</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">buildName</span><span class=\"k\">}</span>\n    \n    <span class=\"c\">#testFlight 二维码in OSS</span>\n    <span class=\"nv\">downloadTF</span><span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">aliyunOSSBuicket</span><span class=\"k\">}</span><span class=\"s2\">/AppStoreValid/testflight.png\"</span>\n    \n    <span class=\"nb\">echo</span> <span class=\"s1\">'/// 本次打包构建到AppStore：发通知到内部群 '</span>\n    <span class=\"c\">#发送发版通知</span>\n    curl <span class=\"s1\">'https://oapi.dingtalk.com/robot/send?access_token='</span><span class=\"k\">${</span><span class=\"nv\">access_token</span><span class=\"k\">}</span> <span class=\"se\">\\</span>\n        <span class=\"nt\">-H</span> <span class=\"s1\">'Content-Type: application/json'</span> <span class=\"se\">\\</span>\n        <span class=\"nt\">-d</span> <span class=\"s1\">'{\"msgtype\": \"text\",\n            \"at\": {\n            \"atMobiles\":[\n                \"DD1\",\n                \"DD2\"\n            ],\n            \"isAtAll\": false\n            },\n             \"text\": {\n                  \"content\": \"✅AppSore构建成功:\\nApp:'</span><span class=\"k\">${</span><span class=\"nv\">ProductName</span><span class=\"k\">}</span><span class=\"s1\">'\\n构建名：'</span><span class=\"k\">${</span><span class=\"nv\">configurationName</span><span class=\"k\">}</span><span class=\"s1\">'\\n流水线：'</span><span class=\"k\">${</span><span class=\"nv\">title</span><span class=\"k\">}</span><span class=\"s1\">'\\n版本号：'</span><span class=\"k\">${</span><span class=\"nv\">xcodeVersion3number</span><span class=\"k\">}</span><span class=\"s1\">'\\n构建号：'</span><span class=\"k\">${</span><span class=\"nv\">BuildNo</span><span class=\"k\">}</span><span class=\"s1\">'\\nTestFlight:'</span><span class=\"k\">${</span><span class=\"nv\">downloadTF</span><span class=\"k\">}</span><span class=\"s1\">'\"}\n           }'</span>\n           \n           \n    <span class=\"nb\">echo</span> <span class=\"s1\">'///-------------------------------------------------------'</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'/// 构建通知'</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'///-------------------------------------------------------'</span>\n<span class=\"o\">}</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h4 id=\"233-归档\">2.3.3 归档</h4>\n\n<p>​\t目前在Release、TestFlight 打包时将ipa与dysm打包上传到简单云制品库</p>\n\n<p>​\t构建归档，将ipa与dysm打程zip包</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n</pre></td><td class=\"rouge-code\"><pre><span class=\"k\">function </span>ProductCollection<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">configurationName</span><span class=\"k\">}</span><span class=\"s2\">\"</span> <span class=\"o\">=</span> <span class=\"s2\">\"Release\"</span> <span class=\"o\">]</span> <span class=\"o\">||</span> <span class=\"o\">[</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">configurationName</span><span class=\"k\">}</span><span class=\"s2\">\"</span> <span class=\"o\">=</span> <span class=\"s2\">\"TestFlight\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n\n        </span>dSYMCollection\n    \n        IPACollection\n        \n        <span class=\"nb\">export </span><span class=\"nv\">ProductCollectionPath</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">dSYM_dict_PATH</span><span class=\"k\">}</span>/ProductCollection.zip\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"ProductCollectionPath=\"</span><span class=\"nv\">$ProductCollectionPath</span>\n        zip <span class=\"nv\">$ProductCollectionPath</span> <span class=\"k\">${</span><span class=\"nv\">dSYMZip_PATH</span><span class=\"k\">}</span> <span class=\"k\">${</span><span class=\"nv\">IPAZip_PATH</span><span class=\"k\">}</span>\n        <span class=\"c\">#执行归档,(ipa+dSYM)并找个地方存起来</span>\n        bash <span class=\"nv\">$build_ext_path</span>/<span class=\"nv\">$collection_sh</span>\n    <span class=\"k\">fi</span>\n\n<span class=\"o\">}</span>\n\n<span class=\"k\">function </span>dSYMCollection<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"c\"># zip and copy dSYM</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"dSYMCollection\"</span>\n\n    <span class=\"nb\">cd</span> <span class=\"k\">${</span><span class=\"nv\">build_path</span><span class=\"k\">}</span>/Build/Products/<span class=\"k\">${</span><span class=\"nv\">configurationName</span><span class=\"k\">}</span><span class=\"nt\">-iphoneos</span>\n    find <span class=\"nb\">.</span> <span class=\"nt\">-name</span> <span class=\"s1\">'*.dSYM'</span> | zip <span class=\"nt\">-r</span> <span class=\"k\">${</span><span class=\"nv\">dSYMZip_PATH</span><span class=\"k\">}</span> -@\n    find <span class=\"nb\">.</span> <span class=\"nt\">-name</span> <span class=\"s1\">'*.dSYM'</span> <span class=\"nt\">-exec</span> <span class=\"nb\">cp</span> <span class=\"nt\">-R</span> <span class=\"o\">{}</span> <span class=\"k\">${</span><span class=\"nv\">dSYM_dict_PATH</span><span class=\"k\">}</span> <span class=\"se\">\\;</span>\n    <span class=\"nb\">cd</span> -\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"Copy dSYM.zip file success save path:\"</span> <span class=\"k\">${</span><span class=\"nv\">dSYMZip_PATH</span><span class=\"k\">}</span>\n<span class=\"o\">}</span>\n\n<span class=\"k\">function </span>IPACollection<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"c\"># zip and copy dSYM</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"IPACollection\"</span>\n    <span class=\"nb\">cd</span> <span class=\"k\">${</span><span class=\"nv\">build_path</span><span class=\"k\">}</span>/Build/Products/<span class=\"k\">${</span><span class=\"nv\">configurationName</span><span class=\"k\">}</span><span class=\"nt\">-iphoneos</span>\n    find <span class=\"nb\">.</span> <span class=\"nt\">-name</span> <span class=\"s1\">'*.ipa'</span> | zip <span class=\"nt\">-r</span> <span class=\"k\">${</span><span class=\"nv\">IPAZip_PATH</span><span class=\"k\">}</span> -@\n    find <span class=\"nb\">.</span> <span class=\"nt\">-name</span> <span class=\"s1\">'*.ipa'</span> <span class=\"nt\">-exec</span> <span class=\"nb\">cp</span> <span class=\"nt\">-R</span> <span class=\"o\">{}</span> <span class=\"k\">${</span><span class=\"nv\">dSYM_dict_PATH</span><span class=\"k\">}</span> <span class=\"se\">\\;</span>\n    <span class=\"nb\">cd</span> -\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"Copy IPAZip_PATH.zip file success save path:\"</span> <span class=\"k\">${</span><span class=\"nv\">IPAZip_PATH</span><span class=\"k\">}</span>\n<span class=\"o\">}</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>​\t将zip包归档到简单云</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n</pre></td><td class=\"rouge-code\"><pre><span class=\"k\">function </span>upload_to_store<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"nb\">export </span><span class=\"nv\">p</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'/// 上传 dsym ipa 到制品库 '</span><span class=\"k\">${</span><span class=\"nv\">v</span><span class=\"k\">}</span><span class=\"s1\">'pkgName='</span><span class=\"k\">${</span><span class=\"nv\">pkgName</span><span class=\"k\">}</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"dSYMZip_PATH = \"</span><span class=\"k\">${</span><span class=\"nv\">dSYMZip_PATH</span><span class=\"k\">}</span><span class=\"s2\">\"https://PSC-devops.com/pkg/PSC/raw/OperationsAppAnddSYM/release?version=\"</span><span class=\"k\">${</span><span class=\"nv\">v</span><span class=\"k\">}</span><span class=\"s2\">\"&amp;pkgName=\"</span><span class=\"k\">${</span><span class=\"nv\">pkgName</span><span class=\"k\">}</span>\n    <span class=\"c\">#上传简单云制品库</span>\n    curl <span class=\"nt\">-F</span> <span class=\"s2\">\"file=@\"</span><span class=\"k\">${</span><span class=\"nv\">p</span><span class=\"k\">}</span> <span class=\"nt\">-u</span> 简单云账号:简单云密码 <span class=\"s2\">\"https://PSC-devops.com/pkg/PSC/raw/OperationsAppAnddSYM/release?version=\"</span><span class=\"k\">${</span><span class=\"nv\">v</span><span class=\"k\">}</span><span class=\"s2\">\"&amp;pkgName=\"</span><span class=\"k\">${</span><span class=\"nv\">pkgName</span><span class=\"k\">}</span> <span class=\"nt\">-k</span>\n<span class=\"o\">}</span>\n        \n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>​\t将dSYM上传到bugly，用于定位线上crash：</p>\n\n<div class=\"language-sh highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n</pre></td><td class=\"rouge-code\"><pre><span class=\"k\">function </span>upload_dSYM_to_bugly<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"nb\">export </span><span class=\"nv\">p</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">dSYM_dict_PATH</span><span class=\"k\">}</span>\n    \n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">TARGET_NAME</span><span class=\"k\">}</span><span class=\"s2\">\"</span> <span class=\"o\">=</span> <span class=\"s2\">\"PSCDemoiOS\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nv\">bugly_appid</span><span class=\"o\">=</span><span class=\"nv\">$Demo_bugly_appid</span>\n        <span class=\"nv\">bugly_appkey</span><span class=\"o\">=</span><span class=\"nv\">$Demo_bugly_appkey</span>\n    <span class=\"k\">fi\n    \n    if</span> <span class=\"o\">[</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">TARGET_NAME</span><span class=\"k\">}</span><span class=\"s2\">\"</span> <span class=\"o\">=</span> <span class=\"s2\">\"Operations\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nv\">bugly_appid</span><span class=\"o\">=</span><span class=\"nv\">$operations_bugly_appid</span>\n        <span class=\"nv\">bugly_appkey</span><span class=\"o\">=</span><span class=\"nv\">$operations_bugly_appkey</span>\n    <span class=\"k\">fi\n    \n    </span><span class=\"nb\">echo</span> <span class=\"s2\">\"/// 上传 dsym path </span><span class=\"k\">${</span><span class=\"nv\">p</span><span class=\"k\">}</span><span class=\"s2\">\"</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"/// 上传 dsym target </span><span class=\"k\">${</span><span class=\"nv\">TARGET_NAME</span><span class=\"k\">}</span><span class=\"s2\">\"</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"/// 上传 dsym bugly_appid </span><span class=\"k\">${</span><span class=\"nv\">bugly_appid</span><span class=\"k\">}</span><span class=\"s2\">\"</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"/// 上传 dsym bugly_appkey </span><span class=\"k\">${</span><span class=\"nv\">bugly_appkey</span><span class=\"k\">}</span><span class=\"s2\">\"</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'/// 上传 dsym bugly '</span><span class=\"k\">${</span><span class=\"nv\">versionName</span><span class=\"k\">}</span><span class=\"s1\">'pkgName='</span><span class=\"k\">${</span><span class=\"nv\">pkgName</span><span class=\"k\">}</span>\n    \n    <span class=\"c\">#切换java 版本在流水线实现，这边实现不了</span>\n    java <span class=\"nt\">-version</span>\n<span class=\"c\">#    jdk8</span>\n<span class=\"c\">#    java -version</span>\n    \n    <span class=\"nv\">bugly_jar_path</span><span class=\"o\">=</span><span class=\"nv\">$build_ext_path</span>/collection_res/buglyqq-upload-symbol/buglyqq-upload-symbol.jar\n    \n    java <span class=\"nt\">-jar</span> <span class=\"k\">${</span><span class=\"nv\">bugly_jar_path</span><span class=\"k\">}</span> <span class=\"nt\">-appid</span> <span class=\"k\">${</span><span class=\"nv\">bugly_appid</span><span class=\"k\">}</span> <span class=\"nt\">-appkey</span> <span class=\"k\">${</span><span class=\"nv\">bugly_appkey</span><span class=\"k\">}</span> <span class=\"nt\">-bundleid</span> <span class=\"k\">${</span><span class=\"nv\">pkgName</span><span class=\"k\">}</span> <span class=\"nt\">-version</span> <span class=\"k\">${</span><span class=\"nv\">versionName</span><span class=\"k\">}</span> <span class=\"nt\">-platform</span> IOS <span class=\"nt\">-inputSymbol</span> <span class=\"k\">${</span><span class=\"nv\">p</span><span class=\"k\">}</span>\n<span class=\"o\">}</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h2 id=\"3补充说明\">3.补充说明</h2>\n\n<p>​\t打包脚本抽离成git submodule，以供各个工程项目的集成，减少维护成本，如果没有跟主工程一起更新，则每次构建时需要同步下最新的脚本</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#使用了gitsubmodule 构建组件，兼容git 检出不兼容，需要先执行 git submodule update --init --recursive</span>\ngit submodule update <span class=\"nt\">--init</span> <span class=\"nt\">--recursive</span>\n<span class=\"c\">#拉取自模块更新</span>\ngit submodule update <span class=\"nt\">--remote</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h2 id=\"4author\">4.Author</h2>\n\n<p>​\t有任何问题，欢迎联系：wangshu2015@gmail.com</p>\n\n","name":"2023-11-08-构建流水线实践.md","previous":{"id":"/2023/10/07/抓包实践","tags":[],"relative_path":"_posts/2023-10-09-抓包实践.md","collection":"posts","content":"<h1 id=\"charles-https-实践\">Charles HTTPS 实践</h1>\n\n<h2 id=\"1背景\">1、背景</h2>\n\n<p>在构建充电桩能力的需求背景下，需要对竞品数据进行收集评估，以前是通过截图+ocr方案进行数据收集，效率低下无法满足数据更新的及时性，现在需要采用更加高效的方式</p>\n\n<h2 id=\"2方案选择\">2、方案选择</h2>\n\n<p>咨询之前做过类似工作的测试团队，无法给到比较可靠的方案，一开始选择逆向方案，通过移动端组内评估，以及咨询业内的安全工程师，逆向方案 ，代价较高，且暂无这方面的能力储备，风险不可控。</p>\n\n<p>于是我们认为可以尝试抓包某地图App的方式，验证可行性</p>\n\n<h2 id=\"3抓包\">3、抓包</h2>\n\n<p>wireshark上抓包无法（难度较高）解析https协议</p>\n\n<p>采用Charles 抓包：</p>\n\n<h3 id=\"31代理搭建\">3.1、代理搭建</h3>\n\n<p>打开Charles，在顶部状态栏选择：help-&gt;Local IP Address</p>\n\n<p><img src=\"/img/2023-10-09-Charles/local_IP.png\" alt=\"local_IP\" /></p>\n\n<p>获取到代理机在局域网的ip</p>\n\n<p><img src=\"/img/2023-10-09-Charles/local_IP2.png\" alt=\"local_IP2\" /></p>\n\n<p>在设备上（iPhone）手动设置代理:</p>\n\n<p><img src=\"/img/2023-10-09-Charles/device.png\" alt=\"device\" /></p>\n\n<p>代理设置为上述代理机器的ip + 端口号8888</p>\n\n<p><img src=\"/img/2023-10-09-Charles/device2.png\" alt=\"device2\" /></p>\n\n<h3 id=\"32安装证书\">3.2、安装证书</h3>\n\n<p>在顶部状态栏 help-&gt;SSL Proxying-&gt;Install Charles Root Certification on a Mobile Device or Remote Broswer：</p>\n\n<p><img src=\"/img/2023-10-09-Charles/ssl_cert.png\" alt=\"ssl_cert\" /></p>\n\n<p><img src=\"/img/2023-10-09-Charles/ssl_cert2.png\" alt=\"ssl_cert2\" /></p>\n\n<p>通过设备访问：chls.pro/ssl</p>\n\n<p>下载地址，然后在设置-&gt;通用-&gt;关于-&gt;证书信任 安装/信任证书，并打开证书的开关</p>\n\n<p><img src=\"/img/2023-10-09-Charles/device3.png\" alt=\"device3\" /></p>\n\n<h3 id=\"33报文解析\">3.3、报文解析</h3>\n\n<p>设置好上述说明后，针对所需要抓取的域名的https报文进行解析：</p>\n\n<p>顶部状态栏 Proxy-&gt; SSL Proxying Settings</p>\n\n<p><img src=\"/img/2023-10-09-Charles/ssl_proxy.png\" alt=\"ssl_proxy\" /></p>\n\n<p>添加域名和端口号（端口号为443）：</p>\n\n<p><img src=\"/img/2023-10-09-Charles/ssl_proxy2.png\" alt=\"ssl_proxy2\" /></p>\n\n<p>打开某地图app，搜索相关关键字，得到的结果再Charles查看：</p>\n\n<p><img src=\"/img/2023-10-09-Charles/data.png\" alt=\"data\" /></p>\n","name":"2023-10-09-抓包实践.md","previous":{"id":"/2023/10/07/组件化之分支合并","tags":[],"relative_path":"_posts/2023-10-07-组件化之分支合并.md","collection":"posts","name":"2023-10-07-组件化之分支合并.md","url":"/2023/10/07/%E7%BB%84%E4%BB%B6%E5%8C%96%E4%B9%8B%E5%88%86%E6%94%AF%E5%90%88%E5%B9%B6/","title":"组件化实践之：主工程抽离代码分支合并用","date":"2023-10-07 00:00:00 +0800","categories":[],"path":"_posts/2023-10-07-组件化之分支合并.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/home-bg-geek.jpg","slug":"组件化之分支合并","ext":".md"},"output":"<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"google-site-verification\" content=\"xBT4GhYoi5qRD5tr338pgPM5OWHHIDR6mNg1a3euekI\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, viewport-fit=cover\">\n    <meta name=\"description\" content=\"与你一起发现更大的世界。\">\n    <meta name=\"keywords\"  content=\"PaysonChen,iOS,流媒体\">\n    <meta name=\"theme-color\" content=\"#000000\">\n    \n    <!-- Open Graph -->\n    <meta property=\"og:title\" content=\"Charles HTTPS实践 - PaysonChen的博客 | PaysonChen Blog\">\n    \n    <meta property=\"og:type\" content=\"article\">\n    <meta property=\"og:description\" content=\"Charles HTTPS 实践\n\">\n    \n    \n    <meta property=\"article:published_time\" content=\"2023-10-07T00:00:00Z\">\n    \n    \n    <meta property=\"article:author\" content=\"PaysonChen\">\n    \n    \n    \n    <meta property=\"og:image\" content=\"http://localhost:4000\">\n    <meta property=\"og:url\" content=\"http://localhost:4000/2023/10/07/%E6%8A%93%E5%8C%85%E5%AE%9E%E8%B7%B5/\">\n    <meta property=\"og:site_name\" content=\"PaysonChen的博客 | PaysonChen Blog\">\n    \n    <title>Charles HTTPS实践 - PaysonChen的博客 | PaysonChen Blog</title>\n\n    <!-- Web App Manifest -->\n    <link rel=\"manifest\" href=\"/pwa/manifest.json\">\n\n    <!-- Favicon -->\n    <link rel=\"shortcut icon\" href=\"/img/favicon.ico\">\n    \n    <!-- Canonical URL -->\n    <link rel=\"canonical\" href=\"http://localhost:4000/2023/10/07/%E6%8A%93%E5%8C%85%E5%AE%9E%E8%B7%B5/\">\n\n    <!-- Bootstrap Core CSS -->\n    <link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\">\n\n    <!-- Custom CSS -->\n    <link rel=\"stylesheet\" href=\"/css/hux-blog.min.css\">\n\n    <!-- Custom Fonts -->\n    <!-- <link href=\"http://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\"> -->\n    <!-- Hux change font-awesome CDN to qiniu -->\n    <link href=\"//cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\">\n\n\n    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->\n    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->\n    <!--[if lt IE 9]>\n        <script src=\"https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js\"></script>\n        <script src=\"https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js\"></script>\n    <![endif]-->\n\n    <!-- ga & ba script hoook -->\n    <script></script>\n</head>\n\n\n<!-- hack iOS CSS :active style -->\n<body ontouchstart=\"\">\n\n    <!-- Navigation -->\n\n    <nav class=\"navbar navbar-default navbar-custom navbar-fixed-top\">\n        \n        <div class=\"container-fluid\">\n            <!-- Brand and toggle get grouped for better mobile display -->\n            <div class=\"navbar-header page-scroll\">\n                <button type=\"button\" class=\"navbar-toggle\">\n                    <span class=\"sr-only\">Toggle navigation</span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                </button>\n                <a class=\"navbar-brand\" href=\"/\">PaysonChen Blog</a>\n            </div>\n\n            <!-- Collect the nav links, forms, and other content for toggling -->\n            <div id=\"huxblog_navbar\">\n                <div class=\"navbar-collapse\">\n                    <ul class=\"nav navbar-nav navbar-right\">\n                        <li>\n                            <a href=\"/\">Home</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        <li>\n                            <a href=\"/about/\">About</a>\n                        </li>\n                        \n                        \n                        \n                        <li>\n                            <a href=\"/archive/\">Archive</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        <li class=\"search-icon\">\n                            <a href=\"javascript:void(0)\">\n                                <i class=\"fa fa-search\"></i>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n            <!-- /.navbar-collapse -->\n        </div>\n        <!-- /.container -->\n    </nav>\n\n    <script>\n        // Drop Bootstarp low-performance Navbar\n        // Use customize navbar with high-quality material design animation\n        // in high-perf jank-free CSS3 implementation\n        var $body = document.body;\n        var $toggle = document.querySelector('.navbar-toggle');\n        var $navbar = document.querySelector('#huxblog_navbar');\n        var $collapse = document.querySelector('.navbar-collapse');\n\n        var __HuxNav__ = {\n            close: function () {\n                $navbar.className = \" \";\n                // wait until animation end.\n                setTimeout(function () {\n                    // prevent frequently toggle\n                    if ($navbar.className.indexOf('in') < 0) {\n                        $collapse.style.height = \"0px\"\n                    }\n                }, 400)\n            },\n            open: function () {\n                $collapse.style.height = \"auto\"\n                $navbar.className += \" in\";\n            }\n        }\n\n        // Bind Event\n        $toggle.addEventListener('click', function (e) {\n            if ($navbar.className.indexOf('in') > 0) {\n                __HuxNav__.close()\n            } else {\n                __HuxNav__.open()\n            }\n        })\n\n        /**\n         * Since Fastclick is used to delegate 'touchstart' globally\n         * to hack 300ms delay in iOS by performing a fake 'click',\n         * Using 'e.stopPropagation' to stop 'touchstart' event from \n         * $toggle/$collapse will break global delegation.\n         * \n         * Instead, we use a 'e.target' filter to prevent handler\n         * added to document close HuxNav.  \n         *\n         * Also, we use 'click' instead of 'touchstart' as compromise\n         */\n        document.addEventListener('click', function (e) {\n            if (e.target == $toggle) return;\n            if (e.target.className == 'icon-bar') return;\n            __HuxNav__.close();\n        })\n    </script>\n    <!-- Search -->\n<div class=\"search-page\">\n  <div class=\"search-icon-close-container\">\n    <span class=\"search-icon-close\">\n      <i class=\"fa fa-chevron-down\"></i>\n    </span>\n  </div>\n  <div class=\"search-main container\">\n    <div class=\"row\">\n      <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n        <form></form>\n        <input type=\"text\" id=\"search-input\" placeholder=\"$ grep...\">\n        </form>\n        <div id=\"search-results\" class=\"mini-post-list\"></div>\n      </div>\n    </div>\n  </div>\n</div>\n\n    <!-- Image to hack wechat -->\n<!-- <img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\"> -->\n<!-- <img src=\"/img/home-bg-geek.jpg\" width=\"0\" height=\"0\"> -->\n\n<!-- Post Header -->\n\n\n\n<style type=\"text/css\">\n    header.intro-header{\n        position: relative;\n        background-image: url('/img/home-bg-geek.jpg');\n        background: ;\n    }\n\n    \n</style>\n\n<header class=\"intro-header\" >\n\n    <div class=\"header-mask\"></div>\n    \n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <div class=\"post-heading\">\n                    <div class=\"tags\">\n                        \n                    </div>\n                    <h1>Charles HTTPS实践</h1>\n                    \n                    <h2 class=\"subheading\"></h2>\n                    <span class=\"meta\">Posted by PaysonChen on October 7, 2023</span>\n                </div>\n            </div>\n        </div>\n    </div>\n</header>\n\n\n\n\n\n\n<!-- Post Content -->\n<article>\n    <div class=\"container\">\n        <div class=\"row\">\n\n    <!-- Post Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                post-container\">\n\n                <!-- Multi-Lingual -->\n                \n\n\t\t\t\t<h1 id=\"charles-https-实践\">Charles HTTPS 实践</h1>\n\n<h2 id=\"1背景\">1、背景</h2>\n\n<p>在构建充电桩能力的需求背景下，需要对竞品数据进行收集评估，以前是通过截图+ocr方案进行数据收集，效率低下无法满足数据更新的及时性，现在需要采用更加高效的方式</p>\n\n<h2 id=\"2方案选择\">2、方案选择</h2>\n\n<p>咨询之前做过类似工作的测试团队，无法给到比较可靠的方案，一开始选择逆向方案，通过移动端组内评估，以及咨询业内的安全工程师，逆向方案 ，代价较高，且暂无这方面的能力储备，风险不可控。</p>\n\n<p>于是我们认为可以尝试抓包某地图App的方式，验证可行性</p>\n\n<h2 id=\"3抓包\">3、抓包</h2>\n\n<p>wireshark上抓包无法（难度较高）解析https协议</p>\n\n<p>采用Charles 抓包：</p>\n\n<h3 id=\"31代理搭建\">3.1、代理搭建</h3>\n\n<p>打开Charles，在顶部状态栏选择：help-&gt;Local IP Address</p>\n\n<p><img src=\"/img/2023-10-09-Charles/local_IP.png\" alt=\"local_IP\" /></p>\n\n<p>获取到代理机在局域网的ip</p>\n\n<p><img src=\"/img/2023-10-09-Charles/local_IP2.png\" alt=\"local_IP2\" /></p>\n\n<p>在设备上（iPhone）手动设置代理:</p>\n\n<p><img src=\"/img/2023-10-09-Charles/device.png\" alt=\"device\" /></p>\n\n<p>代理设置为上述代理机器的ip + 端口号8888</p>\n\n<p><img src=\"/img/2023-10-09-Charles/device2.png\" alt=\"device2\" /></p>\n\n<h3 id=\"32安装证书\">3.2、安装证书</h3>\n\n<p>在顶部状态栏 help-&gt;SSL Proxying-&gt;Install Charles Root Certification on a Mobile Device or Remote Broswer：</p>\n\n<p><img src=\"/img/2023-10-09-Charles/ssl_cert.png\" alt=\"ssl_cert\" /></p>\n\n<p><img src=\"/img/2023-10-09-Charles/ssl_cert2.png\" alt=\"ssl_cert2\" /></p>\n\n<p>通过设备访问：chls.pro/ssl</p>\n\n<p>下载地址，然后在设置-&gt;通用-&gt;关于-&gt;证书信任 安装/信任证书，并打开证书的开关</p>\n\n<p><img src=\"/img/2023-10-09-Charles/device3.png\" alt=\"device3\" /></p>\n\n<h3 id=\"33报文解析\">3.3、报文解析</h3>\n\n<p>设置好上述说明后，针对所需要抓取的域名的https报文进行解析：</p>\n\n<p>顶部状态栏 Proxy-&gt; SSL Proxying Settings</p>\n\n<p><img src=\"/img/2023-10-09-Charles/ssl_proxy.png\" alt=\"ssl_proxy\" /></p>\n\n<p>添加域名和端口号（端口号为443）：</p>\n\n<p><img src=\"/img/2023-10-09-Charles/ssl_proxy2.png\" alt=\"ssl_proxy2\" /></p>\n\n<p>打开某地图app，搜索相关关键字，得到的结果再Charles查看：</p>\n\n<p><img src=\"/img/2023-10-09-Charles/data.png\" alt=\"data\" /></p>\n\n\n                <hr style=\"visibility: hidden;\">\n                <ul class=\"pager\">\n                    \n                    <li class=\"previous\">\n                        <a href=\"/2023/10/07/%E7%BB%84%E4%BB%B6%E5%8C%96%E4%B9%8B%E5%88%86%E6%94%AF%E5%90%88%E5%B9%B6/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"组件化实践之：主工程抽离代码分支合并用\">\n                        Previous<br>\n                        <span>组件化实践之：主工程抽离代码分支合并用</span>\n                        </a>\n                    </li>\n                    \n                    \n                    <li class=\"next\">\n                        <a href=\"/2023/11/08/%E6%9E%84%E5%BB%BA%E6%B5%81%E6%B0%B4%E7%BA%BF%E5%AE%9E%E8%B7%B5/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"构建流水线实践\">\n                        Next<br>\n                        <span>构建流水线实践</span>\n                        </a>\n                    </li>\n                    \n                </ul>\n                <hr style=\"visibility: hidden;\">\n\n                \n                <!-- disqus 评论框 start -->\n                <div class=\"comment\">\n                    <div id=\"disqus_thread\" class=\"disqus-thread\"></div>\n                </div>\n                <!-- disqus 评论框 end -->\n                \n\n                \n            </div>  \n\n    <!-- Side Catalog Container -->\n        \n            <div class=\"\n                col-lg-2 col-lg-offset-0\n                visible-lg-block\n                sidebar-container\n                catalog-container\">\n                <div class=\"side-catalog\">\n                    <hr class=\"hidden-sm hidden-xs\">\n                    <h5>\n                        <a class=\"catalog-toggle\" href=\"#\">CATALOG</a>\n                    </h5>\n                    <ul class=\"catalog-body\"></ul>\n                </div>\n            </div>\n        \n\n    <!-- Sidebar Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                sidebar-container\">\n\n                <!-- Featured Tags -->\n                \n\n\n<section>\n    \n        <hr class=\"hidden-sm hidden-xs\">\n    \n    <h5><a href=\"/archive/\">FEATURED TAGS</a></h5>\n    <div class=\"tags\">\n        \n        \n        \n        \n        \n    </div>\n</section>\n\n\n                <!-- Friends Blog -->\n                \n            </div>\n        </div>\n    </div>\n</article>\n\n<!-- add support for mathjax by voleking-->\n\n\n\n\n\n\n<!-- disqus 公共JS代码 start (一个网页只需插入一次) -->\n<script type=\"text/javascript\">\n    /* * * CONFIGURATION VARIABLES * * */\n    var disqus_shortname = \"Cyp\";\n    var disqus_identifier = \"/2023/10/07/抓包实践\";\n    var disqus_url = \"http://localhost:4000/2023/10/07/%E6%8A%93%E5%8C%85%E5%AE%9E%E8%B7%B5/\";\n\n    (function() {\n        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;\n        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';\n        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);\n    })();\n</script>\n<!-- disqus 公共JS代码 end -->\n\n\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n      var d = document, t = 'script',\n          o = d.createElement(t),\n          s = d.getElementsByTagName(t)[0];\n      o.src = u;\n      if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n      s.parentNode.insertBefore(o, s);\n    }\n</script>\n<!-- anchor-js, Doc:http://bryanbraun.github.io/anchorjs/ -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/anchor-js/1.1.1/anchor.min.js\",function(){\n        anchors.options = {\n          visible: 'hover',\n          placement: 'right',\n          // icon: '#'\n        };\n        anchors.add().remove('.intro-header h1').remove('.subheading').remove('.sidebar-container h5');\n    })\n</script>\n<style>\n    /* place left on bigger screen */\n    @media all and (min-width: 800px) {\n        .anchorjs-link{\n            position: absolute;\n            left: -0.75em;\n            font-size: 1.1em;\n            margin-top : -0.1em;\n        }\n    }\n</style>\n\n\n\n    <!-- Footer -->\n<footer>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <!-- SNS Link -->\n                \n\n\n<ul class=\"list-inline text-center\">\n\n\n  \n  \n  \n  \n  \n  \n  \n</ul>\n\n                <p class=\"copyright text-muted\">\n                    Copyright &copy; PaysonChen Blog 2024\n                    <br>\n                    <!-- Powered by <a href=\"http://huangxuan.me\">Hux Blog</a> | -->\n                 <!--    <iframe style=\"margin-left: 2px; margin-bottom:-5px;\" frameborder=\"0\" scrolling=\"0\" width=\"100px\"\n                        height=\"20px\"\n                        src=\"https://ghbtns.com/github-btn.html?user=huxpro&repo=huxpro.github.io&type=star&count=true\">\n                    </iframe> -->\n                </p>\n            </div>\n        </div>\n    </div>\n</footer>\n\n<!-- jQuery -->\n<script src=\"/js/jquery.min.js \"></script>\n\n<!-- Bootstrap Core JavaScript -->\n<!-- Currently, only navbar scroll-down effect at desktop still depends on this -->\n<script src=\"/js/bootstrap.min.js \"></script>\n\n<!-- Custom Theme JavaScript -->\n<script src=\"/js/hux-blog.min.js \"></script>\n\n<!-- Simple Jekyll Search -->\n<script src=\"/js/simple-jekyll-search.min.js\"></script>\n\n<!-- Service Worker -->\n\n<script src=\"/js/snackbar.js \"></script>\n<script src=\"/js/sw-registration.js \"></script>\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n        var d = document, t = 'script',\n            o = d.createElement(t),\n            s = d.getElementsByTagName(t)[0];\n        o.src = u;\n        if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n        s.parentNode.insertBefore(o, s);\n    }\n</script>\n\n<!--\n     Because of the native support for backtick-style fenced code blocks\n     right within the Markdown is landed in Github Pages,\n     From V1.6, There is no need for Highlight.js,\n     so Huxblog drops it officially.\n\n     - https://github.com/blog/2100-github-pages-now-faster-and-simpler-with-jekyll-3-0\n     - https://help.github.com/articles/creating-and-highlighting-code-blocks/\n     - https://github.com/jneen/rouge/wiki/list-of-supported-languages-and-lexers\n-->\n<!--\n    <script>\n        async(\"http://cdn.bootcss.com/highlight.js/8.6/highlight.min.js\", function(){\n            hljs.initHighlightingOnLoad();\n        })\n    </script>\n    <link href=\"http://cdn.bootcss.com/highlight.js/8.6/styles/github.min.css\" rel=\"stylesheet\">\n-->\n\n\n\n\n\n\n\n<!--fastClick.js -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/fastclick/1.0.6/fastclick.min.js\", function () {\n        var $nav = document.querySelector(\"nav\");\n        if ($nav) FastClick.attach($nav);\n    })\n</script>\n\n\n<!-- Google Analytics -->\n\n\n\n<!-- Baidu Tongji -->\n\n\n\n<!-- Side Catalog -->\n\n<script type=\"text/javascript\">\n    function generateCatalog(selector) {\n\n        // interop with multilangual \n        if ('' == 'true') {\n            _containerSelector = 'div.post-container.active'\n        } else {\n            _containerSelector = 'div.post-container'\n        }\n\n        // init\n        var P = $(_containerSelector), a, n, t, l, i, c;\n        a = P.find('h1,h2,h3,h4,h5,h6');\n\n        // clean\n        $(selector).html('')\n\n        // appending\n        a.each(function () {\n            n = $(this).prop('tagName').toLowerCase();\n            i = \"#\" + $(this).prop('id');\n            t = $(this).text();\n            c = $('<a href=\"' + i + '\" rel=\"nofollow\">' + t + '</a>');\n            l = $('<li class=\"' + n + '_nav\"></li>').append(c);\n            $(selector).append(l);\n        });\n        return true;\n    }\n\n    generateCatalog(\".catalog-body\");\n\n    // toggle side catalog\n    $(\".catalog-toggle\").click((function (e) {\n        e.preventDefault();\n        $('.side-catalog').toggleClass(\"fold\")\n    }))\n\n    /*\n     * Doc: https://github.com/davist11/jQuery-One-Page-Nav\n     * Fork by Hux to support padding\n     */\n    async(\"/js/jquery.nav.js\", function () {\n        $('.catalog-body').onePageNav({\n            currentClass: \"active\",\n            changeHash: !1,\n            easing: \"swing\",\n            filter: \"\",\n            scrollSpeed: 700,\n            scrollOffset: 0,\n            scrollThreshold: .2,\n            begin: null,\n            end: null,\n            scrollChange: null,\n            padding: 80\n        });\n    });\n</script>\n\n\n\n<!-- Multi-Lingual -->\n\n\n<!-- Simple Jekyll Search -->\n<script>\n    // https://stackoverflow.com/questions/1912501/unescape-html-entities-in-javascript\n    function htmlDecode(input) {\n        var e = document.createElement('textarea');\n        e.innerHTML = input;\n        // handle case of empty input\n        return e.childNodes.length === 0 ? \"\" : e.childNodes[0].nodeValue;\n    }\n\n    SimpleJekyllSearch({\n        searchInput: document.getElementById('search-input'),\n        resultsContainer: document.getElementById('search-results'),\n        json: '/search.json',\n        searchResultTemplate: '<div class=\"post-preview item\"><a href=\"{url}\"><h2 class=\"post-title\">{title}</h2><h3 class=\"post-subtitle\">{subtitle}</h3><hr></a></div>',\n        noResultsText: 'No results',\n        limit: 50,\n        fuzzy: false,\n        // a hack to get escaped subtitle unescaped. for some reason, \n        // post.subtitle w/o escape filter nuke entire search.\n        templateMiddleware: function (prop, value, template) {\n            if (prop === 'subtitle' || prop === 'title') {\n                if (value.indexOf(\"code\")) {\n                    return htmlDecode(value);\n                } else {\n                    return value;\n                }\n            }\n        }\n    });\n\n    $(document).ready(function () {\n        var $searchPage = $('.search-page');\n        var $searchOpen = $('.search-icon');\n        var $searchClose = $('.search-icon-close');\n        var $searchInput = $('#search-input');\n        var $body = $('body');\n\n        $searchOpen.on('click', function (e) {\n            e.preventDefault();\n            $searchPage.toggleClass('search-active');\n            var prevClasses = $body.attr('class') || '';\n            setTimeout(function () {\n                $body.addClass('no-scroll');\n            }, 400)\n\n            if ($searchPage.hasClass('search-active')) {\n                $searchClose.on('click', function (e) {\n                    e.preventDefault();\n                    $searchPage.removeClass('search-active');\n                    $body.attr('class', prevClasses);  // from closure \n                });\n                $searchInput.focus();\n            }\n        });\n    });\n</script>\n\n\n<!-- Image to hack wechat -->\n<img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\" />\n<!-- Migrate from head to bottom, no longer block render and still work -->\n\n</body>\n\n</html>\n","excerpt":"<h1 id=\"charles-https-实践\">Charles HTTPS 实践</h1>\n","url":"/2023/10/07/%E6%8A%93%E5%8C%85%E5%AE%9E%E8%B7%B5/","next":{"id":"/2023/11/08/构建流水线实践","tags":[],"relative_path":"_posts/2023-11-08-构建流水线实践.md","collection":"posts","name":"2023-11-08-构建流水线实践.md","url":"/2023/11/08/%E6%9E%84%E5%BB%BA%E6%B5%81%E6%B0%B4%E7%BA%BF%E5%AE%9E%E8%B7%B5/","title":"构建流水线实践","date":"2023-11-08 00:00:00 +0800","categories":[],"path":"_posts/2023-11-08-构建流水线实践.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/home-bg-geek.jpg","mermaid":true,"slug":"构建流水线实践","ext":".md"},"title":"Charles HTTPS实践","date":"2023-10-07 00:00:00 +0800","categories":[],"path":"_posts/2023-10-09-抓包实践.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/home-bg-geek.jpg","slug":"抓包实践","ext":".md"},"output":"<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"google-site-verification\" content=\"xBT4GhYoi5qRD5tr338pgPM5OWHHIDR6mNg1a3euekI\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, viewport-fit=cover\">\n    <meta name=\"description\" content=\"与你一起发现更大的世界。\">\n    <meta name=\"keywords\"  content=\"PaysonChen,iOS,流媒体\">\n    <meta name=\"theme-color\" content=\"#000000\">\n    \n    <!-- Open Graph -->\n    <meta property=\"og:title\" content=\"构建流水线实践 - PaysonChen的博客 | PaysonChen Blog\">\n    \n    <meta property=\"og:type\" content=\"article\">\n    <meta property=\"og:description\" content=\"1 背景\n\">\n    \n    <script type=\"text/javascript\"\n  src=\"https://unpkg.com/mermaid@8.0.0-rc.8/dist/mermaid.min.js\">\n</script>\n<script>\n$(document).ready(function() {\n    mermaid.initialize({\n        theme: 'forest'\n    });\n});\n</script>\n    \n    \n    <meta property=\"article:published_time\" content=\"2023-11-08T00:00:00Z\">\n    \n    \n    <meta property=\"article:author\" content=\"PaysonChen\">\n    \n    \n    \n    <meta property=\"og:image\" content=\"http://localhost:4000\">\n    <meta property=\"og:url\" content=\"http://localhost:4000/2023/11/08/%E6%9E%84%E5%BB%BA%E6%B5%81%E6%B0%B4%E7%BA%BF%E5%AE%9E%E8%B7%B5/\">\n    <meta property=\"og:site_name\" content=\"PaysonChen的博客 | PaysonChen Blog\">\n    \n    <title>构建流水线实践 - PaysonChen的博客 | PaysonChen Blog</title>\n\n    <!-- Web App Manifest -->\n    <link rel=\"manifest\" href=\"/pwa/manifest.json\">\n\n    <!-- Favicon -->\n    <link rel=\"shortcut icon\" href=\"/img/favicon.ico\">\n    \n    <!-- Canonical URL -->\n    <link rel=\"canonical\" href=\"http://localhost:4000/2023/11/08/%E6%9E%84%E5%BB%BA%E6%B5%81%E6%B0%B4%E7%BA%BF%E5%AE%9E%E8%B7%B5/\">\n\n    <!-- Bootstrap Core CSS -->\n    <link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\">\n\n    <!-- Custom CSS -->\n    <link rel=\"stylesheet\" href=\"/css/hux-blog.min.css\">\n\n    <!-- Custom Fonts -->\n    <!-- <link href=\"http://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\"> -->\n    <!-- Hux change font-awesome CDN to qiniu -->\n    <link href=\"//cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\">\n\n\n    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->\n    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->\n    <!--[if lt IE 9]>\n        <script src=\"https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js\"></script>\n        <script src=\"https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js\"></script>\n    <![endif]-->\n\n    <!-- ga & ba script hoook -->\n    <script></script>\n</head>\n\n\n<!-- hack iOS CSS :active style -->\n<body ontouchstart=\"\">\n\n    <!-- Navigation -->\n\n    <nav class=\"navbar navbar-default navbar-custom navbar-fixed-top\">\n        \n        <div class=\"container-fluid\">\n            <!-- Brand and toggle get grouped for better mobile display -->\n            <div class=\"navbar-header page-scroll\">\n                <button type=\"button\" class=\"navbar-toggle\">\n                    <span class=\"sr-only\">Toggle navigation</span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                </button>\n                <a class=\"navbar-brand\" href=\"/\">PaysonChen Blog</a>\n            </div>\n\n            <!-- Collect the nav links, forms, and other content for toggling -->\n            <div id=\"huxblog_navbar\">\n                <div class=\"navbar-collapse\">\n                    <ul class=\"nav navbar-nav navbar-right\">\n                        <li>\n                            <a href=\"/\">Home</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        <li>\n                            <a href=\"/about/\">About</a>\n                        </li>\n                        \n                        \n                        \n                        <li>\n                            <a href=\"/archive/\">Archive</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        <li class=\"search-icon\">\n                            <a href=\"javascript:void(0)\">\n                                <i class=\"fa fa-search\"></i>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n            <!-- /.navbar-collapse -->\n        </div>\n        <!-- /.container -->\n    </nav>\n\n    <script>\n        // Drop Bootstarp low-performance Navbar\n        // Use customize navbar with high-quality material design animation\n        // in high-perf jank-free CSS3 implementation\n        var $body = document.body;\n        var $toggle = document.querySelector('.navbar-toggle');\n        var $navbar = document.querySelector('#huxblog_navbar');\n        var $collapse = document.querySelector('.navbar-collapse');\n\n        var __HuxNav__ = {\n            close: function () {\n                $navbar.className = \" \";\n                // wait until animation end.\n                setTimeout(function () {\n                    // prevent frequently toggle\n                    if ($navbar.className.indexOf('in') < 0) {\n                        $collapse.style.height = \"0px\"\n                    }\n                }, 400)\n            },\n            open: function () {\n                $collapse.style.height = \"auto\"\n                $navbar.className += \" in\";\n            }\n        }\n\n        // Bind Event\n        $toggle.addEventListener('click', function (e) {\n            if ($navbar.className.indexOf('in') > 0) {\n                __HuxNav__.close()\n            } else {\n                __HuxNav__.open()\n            }\n        })\n\n        /**\n         * Since Fastclick is used to delegate 'touchstart' globally\n         * to hack 300ms delay in iOS by performing a fake 'click',\n         * Using 'e.stopPropagation' to stop 'touchstart' event from \n         * $toggle/$collapse will break global delegation.\n         * \n         * Instead, we use a 'e.target' filter to prevent handler\n         * added to document close HuxNav.  \n         *\n         * Also, we use 'click' instead of 'touchstart' as compromise\n         */\n        document.addEventListener('click', function (e) {\n            if (e.target == $toggle) return;\n            if (e.target.className == 'icon-bar') return;\n            __HuxNav__.close();\n        })\n    </script>\n    <!-- Search -->\n<div class=\"search-page\">\n  <div class=\"search-icon-close-container\">\n    <span class=\"search-icon-close\">\n      <i class=\"fa fa-chevron-down\"></i>\n    </span>\n  </div>\n  <div class=\"search-main container\">\n    <div class=\"row\">\n      <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n        <form></form>\n        <input type=\"text\" id=\"search-input\" placeholder=\"$ grep...\">\n        </form>\n        <div id=\"search-results\" class=\"mini-post-list\"></div>\n      </div>\n    </div>\n  </div>\n</div>\n\n    <!-- Image to hack wechat -->\n<!-- <img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\"> -->\n<!-- <img src=\"/img/home-bg-geek.jpg\" width=\"0\" height=\"0\"> -->\n\n<!-- Post Header -->\n\n\n\n<style type=\"text/css\">\n    header.intro-header{\n        position: relative;\n        background-image: url('/img/home-bg-geek.jpg');\n        background: ;\n    }\n\n    \n</style>\n\n<header class=\"intro-header\" >\n\n    <div class=\"header-mask\"></div>\n    \n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <div class=\"post-heading\">\n                    <div class=\"tags\">\n                        \n                    </div>\n                    <h1>构建流水线实践</h1>\n                    \n                    <h2 class=\"subheading\"></h2>\n                    <span class=\"meta\">Posted by PaysonChen on November 8, 2023</span>\n                </div>\n            </div>\n        </div>\n    </div>\n</header>\n\n\n\n\n\n\n<!-- Post Content -->\n<article>\n    <div class=\"container\">\n        <div class=\"row\">\n\n    <!-- Post Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                post-container\">\n\n                <!-- Multi-Lingual -->\n                \n\n\t\t\t\t<h2 id=\"1-背景\">1 背景</h2>\n\n<p>​\t为了适应不通项目的自动化的需求，而且构建的方式和能力也在不断的迭代与演进，同时维护多个构建脚本存在成本与遗漏，因此将打包脚本的通用能力抽离，通过配置参数进行不同项目的构建。</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n</pre></td><td class=\"rouge-code\"><pre># [目的]\n# 为了使流水线建设趋于可维护，易维护，可迁移，易迁移，对构建逻辑进行模块化、将构建主流程划分为：构建前、构建、构建后，三大模块\n#\n#   构建前：参数配置、版本号设置\n#   构建中：Pod install、xcbuild\n#   构建后：归档、分发、通知\n#\n# 当前的构建后方案的选择：\n#   归档：简单云（ipa+dSYM）、bugly（dSYM）\n#   分发：蒲公英、阿里云OSS、AppStore\n#   通知：钉钉机器人\n# 在未来的持续集成过程中，可以对归档方案进行替换、对分发方案进行替换、对通知方案进行替换、不需要阅读和改动构建中流程\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h2 id=\"2-开始\">2 开始</h2>\n\n<p>构建脚本由构建入口、构建主流程、额外流程三个模块构成，</p>\n\n<script src=\"js/mermaid.ts\"></script>\n<div class=\"mermaid\">\n\ngraph TB\nSTART--&gt;入参配置\n入参配置--&gt;构建前-第三方APIKEY配置\n构建前-第三方APIKEY配置--&gt;构建前-设置构建版本号自增\n构建前-设置构建版本号自增--&gt;构建前-获取工程配置  \n构建前-获取工程配置--&gt;构建中-环境变量设置\n构建中-环境变量设置--&gt;构建中-执行Pod依赖安装\n构建中-执行Pod依赖安装--&gt;构建中-执行构建\n构建中-执行构建--&gt;构建中-执行归档\n构建中-执行归档--&gt;构建中-执行分发\n构建中-执行分发--&gt;构建中-执行通知\n构建中-执行通知--&gt;END\n\n</div>\n\n<h3 id=\"21-构建入口\">2.1 构建入口</h3>\n\n<p>构建入口由UniversalBuild.sh 执行，负责可变参数声明及脚本入参处理</p>\n\n<p>参数说明：</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n</pre></td><td class=\"rouge-code\"><pre># [参数]\n#   -cfg                #打包方式：configuration(0:DailyBuild|1:TestFlight|2:Release|3:TFInner)\n#   -target_name        #项目配置：要打包的TargetName\n#   -channel_name       #渠道号：pgy下载 url后缀\n#   -notify             #是否启用通知 有传值1则启用群通知，2启用内部群通知\n#   -publish            #分发方式：1 启用oss| 2 启用pgy+oss | else pgy\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>以下以【Demo】为例：</p>\n\n<p>​\tTarget为PSCDemoiOS</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n</pre></td><td class=\"rouge-code\"><pre># [调用说明]\n#   使用了gitsubmodule 构建组件，兼容git 检出不兼容，需要先执行 git submodule update --init --recursive\n#   git submodule update --init --recursive\n#   拉取自模块更新\n#   git submodule update --remote\n#\n#   打包方式：configuration(0:DailyBuild|1:TestFlight|2:Release|3:TFInner)\n#   configuration=0\n#\n#   项目配置（TargetName与源码所在目录需同名）：\n#   targetName=PSCDemoiOS\n#\n#   渠道号：pgy下载 url后缀\n#   pgyChannel=129\n#\n#   是否启用通知 有传值1则启用群通知，2启用内部群通知\n#   notify=1\n#\n#   1 启用oss 2 启用pgy+oss else pgy\n#   publish=0\n#\n#   sh PSC_iOS_Build_SH/UniversalBuild.sh -cfg $configuration -target_name $targetName -channel_name $pgyChannel -notify $notify -publish $publish\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h3 id=\"22-构建主流程\">2.2 构建主流程</h3>\n\n<p>构建主流吃由build_sh.sh 执行，负责iOS构建工作，此部分与打包业务强相关，相对比较稳定，不太需要频繁修改，因此抽离出来</p>\n\n<p>主流程简单说明：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n</pre></td><td class=\"rouge-code\"><pre><span class=\"k\">function </span>build<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"c\">#新增耗时统计</span>\n    <span class=\"nb\">export </span><span class=\"nv\">build_start_time</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">date</span> +%s.%N<span class=\"si\">)</span>\n\n    <span class=\"c\">#初始化环境</span>\n    bInitEnv\n    print_time_cost <span class=\"s2\">\"构建前配置\"</span>\n\n    <span class=\"c\">#执行pod</span>\n    bPodInstall\n    print_time_cost <span class=\"s2\">\"执行pod\"</span>\n\n    <span class=\"c\">#执行构建</span>\n    bBuildProject\n    print_time_cost <span class=\"s2\">\"执行构建\"</span>\n\n    <span class=\"c\">#执行构建后的归档流程：ipa &amp; dsym</span>\n    bCollection\n    print_time_cost <span class=\"s2\">\"执行构建归档操作\"</span>\n\n    <span class=\"c\">#执行构建后的分发流程：上传（发布）安装包，供下载安装</span>\n    bDistribution\n    print_time_cost <span class=\"s2\">\"执行分发操作\"</span>\n\n    <span class=\"c\">#执行构建后的通知流程</span>\n    bNotification\n    print_time_cost <span class=\"s2\">\"执行通知操作\"</span>\n<span class=\"o\">}</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>详细步骤，详见代码相关模块</p>\n\n<h3 id=\"23-额外流程\">2.3 额外流程</h3>\n\n<p>额外流程抽离是考虑到上传、通知、归档等属于打包的后续操作，不需要与打包流程耦合，且这部分的流程抽离，可实现模块的热插拔替换。</p>\n\n<h4 id=\"231-分发\">2.3.1 分发</h4>\n\n<p>​\t目前支持以下三种分法方式：</p>\n\n<ul>\n  <li>蒲公英</li>\n  <li>阿里云OSS</li>\n  <li>AppStore</li>\n</ul>\n\n<p>​\t安装包的分发逻辑调用</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>sh build_ext/build_publish.sh\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>​\t在 build_publish.sh 中执行分发逻辑，</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n</pre></td><td class=\"rouge-code\"><pre><span class=\"k\">function </span>upload_ipa <span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"nb\">export </span><span class=\"nv\">upload_start_time</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">date</span> +%s.%N<span class=\"si\">)</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'///upload_ipa configurationName = '</span><span class=\"k\">${</span><span class=\"nv\">configurationName</span><span class=\"k\">}</span>\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">packedToAppStore</span><span class=\"k\">}</span><span class=\"s2\">\"</span> <span class=\"o\">==</span> <span class=\"s2\">\"1\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">echo</span> <span class=\"s1\">'TFInner 、TestFlight &amp; appstore 上传到appstore 统计耗时'</span>\n        upload_ipa_to_AppStore\n        print_upload_time_cost <span class=\"s2\">\"上传AppStore\"</span>\n\n    <span class=\"k\">else</span>\n        <span class=\"c\">#其他</span>\n        <span class=\"c\">#启用pgy时构建包上传到pgy</span>\n        <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">use_pgy_publish</span><span class=\"k\">}</span><span class=\"s2\">\"</span> <span class=\"o\">=</span> <span class=\"s2\">\"1\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n            </span><span class=\"nb\">echo</span> <span class=\"s1\">'///启用pgy上传，统计耗时'</span>\n            upload_ipa_to_pgyer\n            print_upload_time_cost <span class=\"s2\">\"上传PGY\"</span>\n        <span class=\"k\">fi</span>\n\n        <span class=\"c\">#启用oss</span>\n        <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">use_oss_publish</span><span class=\"k\">}</span><span class=\"s2\">\"</span> <span class=\"o\">=</span> <span class=\"s2\">\"1\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n            </span><span class=\"nb\">echo</span> <span class=\"s1\">'///启用oss上传，统计耗时'</span>\n            upload_ipa_to_aliyunOSS\n            print_upload_time_cost <span class=\"s2\">\"上传oss\"</span>\n        <span class=\"k\">fi\n    fi</span>\n<span class=\"o\">}</span>\n\n\n<span class=\"k\">function </span>upload<span class=\"o\">()</span>\n<span class=\"o\">{</span>   \n    <span class=\"c\">#发布ipa</span>\n    upload_ipa\n<span class=\"o\">}</span>\n\n<span class=\"c\">#归档</span>\nupload\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>​\t上传测试包可以从现在的蒲公英换到Fir或者简单云等，则不需要关心打包流程，只需要将上传模块的方法切换即可。</p>\n\n<ul>\n  <li><strong>dailybuild</strong></li>\n</ul>\n\n<p>​\t蒲公英：</p>\n\n<p>​\t用于测试包构建，安装包目前上传到蒲公英（服务端环境可切换）</p>\n\n<p>​\t上传蒲公英的逻辑：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#发布到第三方分发平台：蒲公英</span>\n<span class=\"k\">function </span>upload_ipa_to_pgyer <span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'/// 上传 PGY 开始 IPA_PATH='</span><span class=\"k\">${</span><span class=\"nv\">IPA_PATH</span><span class=\"k\">}</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'/// 上传 PGY 开始 渠道='</span><span class=\"k\">${</span><span class=\"nv\">channel_name</span><span class=\"k\">}</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'/// 上传 PGY 开始 提交 git_log='</span><span class=\"k\">${</span><span class=\"nv\">git_log</span><span class=\"k\">}</span>\n        \n    <span class=\"nv\">compileEnvironment</span><span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">buildName</span><span class=\"k\">}</span><span class=\"s2\">:</span><span class=\"k\">${</span><span class=\"nv\">git_log</span><span class=\"k\">}</span><span class=\"s2\">\"</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'/// 上传 PGY 开始 内容='</span><span class=\"k\">${</span><span class=\"nv\">compileEnvironment</span><span class=\"k\">}</span>\n\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$channel_name</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then</span>\n        <span class=\"c\"># 渠道空，则走默认 不指定渠道号的上传</span>\n        <span class=\"c\"># 改成2.0api</span>\n        <span class=\"nb\">echo</span> <span class=\"s1\">'/// 上传 PGY 开始 渠道 为空'</span>\n        bash <span class=\"nv\">$build_ext_path</span>/publish_res/pgyer_upload.sh <span class=\"nt\">-k</span> <span class=\"k\">${</span><span class=\"nv\">pgyAPIKey</span><span class=\"k\">}</span> <span class=\"nt\">-d</span> <span class=\"k\">${</span><span class=\"nv\">compileEnvironment</span><span class=\"k\">}</span> <span class=\"k\">${</span><span class=\"nv\">IPA_PATH</span><span class=\"k\">}</span>\n    <span class=\"k\">else</span>\n        <span class=\"c\"># 渠道非空，走下载地址关联 渠道</span>\n        <span class=\"c\"># 改成2.0api</span>\n        <span class=\"nb\">echo</span> <span class=\"s1\">'/// 上传 PGY 开始 渠道='</span><span class=\"k\">${</span><span class=\"nv\">channel_name</span><span class=\"k\">}</span>\n        bash <span class=\"nv\">$build_ext_path</span>/publish_res/pgyer_upload.sh <span class=\"nt\">-k</span> <span class=\"k\">${</span><span class=\"nv\">pgyAPIKey</span><span class=\"k\">}</span> <span class=\"nt\">-d</span> <span class=\"k\">${</span><span class=\"nv\">compileEnvironment</span><span class=\"k\">}</span> <span class=\"nt\">-c</span> <span class=\"k\">${</span><span class=\"nv\">pgyDownloadUrlSubfix</span><span class=\"k\">}</span> <span class=\"k\">${</span><span class=\"nv\">IPA_PATH</span><span class=\"k\">}</span>\n    <span class=\"k\">fi\n            \n    </span><span class=\"nb\">echo</span> <span class=\"s1\">'/// 上传 PGY 结束'</span>\n<span class=\"o\">}</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>​\t阿里云OSS：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#在下载二维码增加git日志</span>\n<span class=\"k\">function </span>add_log_commit_title_msg_to_qrcode <span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"c\">#二维码打上版本信息</span>\n    <span class=\"c\">#TODO: 这里需要安装下工具 ImageMgick [brew install ImageMgick]</span>\n    <span class=\"c\">#check_command_and_install \"convert\" \"ImageMgick\"</span>\n    bash <span class=\"nv\">$build_ext_path</span>/build_tools/build_tools.sh <span class=\"s2\">\"convert\"</span> <span class=\"s2\">\"ImageMagick\"</span>\n    \n    <span class=\"nv\">title</span><span class=\"o\">=</span><span class=\"nv\">$xcodeVersion3number</span>.<span class=\"k\">${</span><span class=\"nv\">channel_name</span><span class=\"k\">}</span>.<span class=\"nv\">$configurationName</span>.<span class=\"k\">${</span><span class=\"nv\">BuildNo</span><span class=\"k\">}</span>\n\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nv\">$1</span> <span class=\"o\">=</span> <span class=\"s2\">\"1\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nv\">dst_line_cnt</span><span class=\"o\">=</span>0\n        <span class=\"c\">#FIXME: 这样取会为空???? ${source_log_arr}</span>\n        <span class=\"nb\">export </span><span class=\"nv\">oss_source_log_arr</span><span class=\"o\">=(</span><span class=\"sb\">`</span><span class=\"nb\">echo</span> <span class=\"nv\">$source_log_str</span> | <span class=\"nb\">tr</span> <span class=\"s1\">'}{'</span> <span class=\"s1\">' '</span><span class=\"sb\">`</span><span class=\"o\">)</span>\n        <span class=\"nb\">export </span><span class=\"nv\">oss_log_line_count</span><span class=\"o\">=</span><span class=\"k\">${#</span><span class=\"nv\">oss_source_log_arr</span><span class=\"p\">[@]</span><span class=\"k\">}</span>\n        <span class=\"nb\">echo</span> <span class=\"s1\">'/// oss 分发： 添加 二维码msg log_line_count='</span><span class=\"nv\">$oss_log_line_count</span>\n        <span class=\"nb\">echo</span> <span class=\"s1\">'/// oss 分发： 添加 二维码msg source_log_arr count='</span><span class=\"k\">${#</span><span class=\"nv\">source_log_arr</span><span class=\"p\">[@]</span><span class=\"k\">}</span>\n\n        <span class=\"k\">for</span><span class=\"o\">((</span> <span class=\"nv\">i</span><span class=\"o\">=</span>0<span class=\"p\">;</span>i&lt;<span class=\"k\">${</span><span class=\"nv\">oss_log_line_count</span><span class=\"k\">}</span><span class=\"p\">;</span>i++<span class=\"o\">))</span>\n        <span class=\"k\">do\n            </span><span class=\"nv\">single_len</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">echo</span> <span class=\"nt\">-n</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">oss_source_log_arr</span><span class=\"p\">[i]</span><span class=\"k\">}</span><span class=\"s2\">\"</span> | <span class=\"nb\">wc</span> <span class=\"nt\">-m</span><span class=\"si\">)</span>\n            <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">oss_source_log_arr</span><span class=\"p\">[i]</span><span class=\"k\">}</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n                </span><span class=\"nv\">oss_singleStr</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">oss_source_log_arr</span><span class=\"p\">[i]</span><span class=\"k\">}</span><span class=\"p\">;</span>\n                <span class=\"nb\">echo</span> <span class=\"s1\">'///--遍历'</span><span class=\"k\">${</span><span class=\"nv\">oss_source_log_arr</span><span class=\"p\">[i]</span><span class=\"k\">}</span><span class=\"s1\">'为空文字长度：'</span><span class=\"nv\">$single_len</span>\n                <span class=\"nv\">dst_line_cnt</span><span class=\"o\">=</span><span class=\"k\">$((</span>dst_line_cnt+1<span class=\"k\">))</span>\n            <span class=\"k\">else\n                </span><span class=\"nv\">line_max_len</span><span class=\"o\">=</span>30\n                <span class=\"nv\">ingle_cnt</span><span class=\"o\">=</span><span class=\"k\">$((</span>single_len <span class=\"o\">/</span> line_max_len<span class=\"k\">))</span>\n\n\n                <span class=\"k\">if</span> <span class=\"o\">((</span>ingle_cnt <span class=\"o\">&gt;</span> 0<span class=\"o\">))</span><span class=\"p\">;</span> <span class=\"k\">then\n                    for</span><span class=\"o\">((</span> <span class=\"nv\">j</span><span class=\"o\">=</span>0<span class=\"p\">;</span>j&lt;<span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">ingle_cnt</span><span class=\"k\">}</span><span class=\"p\">;</span>j++<span class=\"o\">))</span>\n                    <span class=\"k\">do\n                        </span><span class=\"nv\">string</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">oss_source_log_arr</span><span class=\"p\">[i]</span><span class=\"k\">}</span>\n                        <span class=\"nv\">single_line1</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">string</span>:<span class=\"p\">(line_max_len * j)</span>:line_max_len<span class=\"k\">}</span>\n                        <span class=\"nb\">echo</span> <span class=\"s1\">'///--遍历'</span> <span class=\"k\">${</span><span class=\"nv\">oss_source_log_arr</span><span class=\"p\">[i]</span><span class=\"k\">}</span><span class=\"s1\">'文字长度：'</span><span class=\"nv\">$single_len</span><span class=\"s1\">'超阈值阶段：第'</span><span class=\"nv\">$j</span><span class=\"s1\">'行:'</span><span class=\"nv\">$single_line1</span>\n                        oss_singleStr+<span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"se\">\\n</span><span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">single_line1</span><span class=\"k\">}</span><span class=\"p\">;</span>\n                        <span class=\"nv\">dst_line_cnt</span><span class=\"o\">=</span><span class=\"k\">$((</span>dst_line_cnt+1<span class=\"k\">))</span>\n                    <span class=\"k\">done</span><span class=\"p\">;</span>\n                <span class=\"k\">else\n                    </span><span class=\"nb\">echo</span> <span class=\"s1\">'///--遍历'</span> <span class=\"k\">${</span><span class=\"nv\">oss_source_log_arr</span><span class=\"p\">[i]</span><span class=\"k\">}</span><span class=\"s1\">' 文字长度：'</span><span class=\"nv\">$single_len</span>\n                    <span class=\"nv\">dst_line_cnt</span><span class=\"o\">=</span><span class=\"k\">$((</span>dst_line_cnt+1<span class=\"k\">))</span>\n                    oss_singleStr+<span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"se\">\\n</span><span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">oss_source_log_arr</span><span class=\"p\">[i]</span><span class=\"k\">}</span><span class=\"p\">;</span>\n                <span class=\"k\">fi\n            fi\n        done</span><span class=\"p\">;</span>\n        <span class=\"nv\">msg</span><span class=\"o\">=</span><span class=\"nv\">$oss_singleStr</span>\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"/// oss render msg=\"</span><span class=\"nv\">$msg</span>\n        \n        <span class=\"nv\">contentsize_width</span><span class=\"o\">=</span>600\n        <span class=\"nv\">contentsize_height</span><span class=\"o\">=</span><span class=\"k\">$((</span>contentsize_width <span class=\"o\">+</span> <span class=\"nv\">$dst_line_cnt</span> <span class=\"o\">*</span> <span class=\"m\">25</span> <span class=\"o\">+</span> <span class=\"m\">40</span> <span class=\"o\">+</span> <span class=\"m\">40</span><span class=\"k\">))</span> <span class=\"c\">#第一个40是title的高度 第二个40是距离底部空间</span>\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"contentsize_height=\"</span><span class=\"nv\">$contentsize_height</span>\n        <span class=\"c\">#改变原图大小</span>\n        convert <span class=\"nv\">$qrcode_path</span> <span class=\"nt\">-resize</span> <span class=\"k\">${</span><span class=\"nv\">contentsize_width</span><span class=\"k\">}</span>x<span class=\"k\">${</span><span class=\"nv\">contentsize_width</span><span class=\"k\">}</span>^ <span class=\"nt\">-gravity</span> center <span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span>_1.png\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"1 convert：\"</span><span class=\"k\">${</span><span class=\"nv\">contentsize_width</span><span class=\"k\">}</span>x<span class=\"k\">${</span><span class=\"nv\">contentsize_width</span><span class=\"k\">}</span>\n\n        <span class=\"c\">#变高，兼容msg</span>\n        convert <span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span>_1.png <span class=\"nt\">-gravity</span> north <span class=\"nt\">-extent</span> <span class=\"k\">${</span><span class=\"nv\">contentsize_width</span><span class=\"k\">}</span>x<span class=\"k\">${</span><span class=\"nv\">contentsize_height</span><span class=\"k\">}</span> <span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span>_2.png\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"2 convert：\"</span><span class=\"k\">${</span><span class=\"nv\">contentsize_width</span><span class=\"k\">}</span>x<span class=\"k\">${</span><span class=\"nv\">contentsize_height</span><span class=\"k\">}</span>\n\n        <span class=\"c\">#汉字字体</span>\n        <span class=\"nv\">chn_tff_path</span><span class=\"o\">=</span><span class=\"nv\">$build_ext_path</span>/publish_res/chn.ttf\n        \n        <span class=\"c\">#渲染title</span>\n        convert <span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span>_2.png <span class=\"nt\">-gravity</span> north <span class=\"nt\">-pointsize</span> 30 <span class=\"nt\">-font</span> <span class=\"nv\">$chn_tff_path</span> <span class=\"nt\">-fill</span> black <span class=\"nt\">-annotate</span> +0+<span class=\"k\">${</span><span class=\"nv\">contentsize_width</span><span class=\"k\">}</span> <span class=\"nv\">$title</span> <span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span>_3.png\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"3 convert：title：\"</span><span class=\"k\">${</span><span class=\"nv\">title</span><span class=\"k\">}</span>\n\n        <span class=\"c\">#渲染msg</span>\n        <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$msg</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n            </span><span class=\"nb\">echo</span> <span class=\"s2\">\"4 convert：msg：为空\"</span>\n        <span class=\"k\">fi\n        \n        </span>convert <span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span>_3.png <span class=\"nt\">-gravity</span> north <span class=\"nt\">-pointsize</span> 20 <span class=\"nt\">-font</span> <span class=\"nv\">$chn_tff_path</span> <span class=\"nt\">-fill</span> black <span class=\"nt\">-annotate</span> +0+<span class=\"k\">$((${</span><span class=\"nv\">contentsize_width</span><span class=\"k\">}</span><span class=\"o\">+</span><span class=\"m\">40</span><span class=\"k\">))</span> <span class=\"nv\">$msg</span> <span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span>_4.png\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"4 convert：msg：\"</span><span class=\"k\">${</span><span class=\"nv\">msg</span><span class=\"k\">}</span>\n        \n        <span class=\"k\">if </span><span class=\"nb\">test</span> <span class=\"nt\">-e</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span><span class=\"s2\">_4.png\"</span><span class=\"p\">;</span> <span class=\"k\">then\n            </span><span class=\"nb\">echo</span> <span class=\"s2\">\"4 convert：msg 存在\"</span>\n            <span class=\"nv\">qrcode_path_with_msg</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span>_4.png\n        <span class=\"k\">else\n            </span><span class=\"nb\">echo</span> <span class=\"s2\">\"4 convert：msg 不存在 使用3\"</span>\n            <span class=\"nv\">qrcode_path_with_msg</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span>_3.png\n        <span class=\"k\">fi\n\n    else</span>\n        <span class=\"c\">#没有传 1 不需要msg，只给title</span>\n        convert <span class=\"nv\">$qrcode_path</span> <span class=\"nt\">-gravity</span> south <span class=\"nt\">-pointsize</span> 10 <span class=\"nt\">-fill</span> gray <span class=\"nt\">-annotate</span> +0+0 <span class=\"nv\">$qrcode_print_msg</span>  <span class=\"nv\">$qrcode_path_with_msg</span>\n        <span class=\"nb\">echo</span> <span class=\"s1\">'/// oss 分发： 添加 二维码title='</span><span class=\"k\">${</span><span class=\"nv\">title</span><span class=\"k\">}</span>\n    <span class=\"k\">fi</span>\n\n<span class=\"o\">}</span>\n\n<span class=\"c\">#发布到阿里云OSS</span>\n<span class=\"k\">function </span>upload_ipa_to_aliyunOSS <span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"c\">#更新plist的键值对：</span>\n    <span class=\"c\">#    /usr/libexec/PlistBuddy -c \"Set :CFBundleShortVersionString ${version3number}\" ${WeSingNotificationServiceExtension_plist}</span>\n    <span class=\"nv\">manifest_path</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">exportPath</span><span class=\"k\">}</span>/manifest.plist\n    <span class=\"nb\">echo</span> <span class=\"s1\">'/// oss 分发： manifest_path='</span><span class=\"k\">${</span><span class=\"nv\">manifest_path</span><span class=\"k\">}</span>\n    \n    <span class=\"nv\">oss_bucket</span><span class=\"o\">=</span><span class=\"s2\">\"oss_bucket_name\"</span>\n    <span class=\"nv\">oss_platform</span><span class=\"o\">=</span><span class=\"s2\">\"iOS\"</span>\n    <span class=\"nv\">oss_bucket_path</span><span class=\"o\">=</span><span class=\"nv\">$oss_platform</span>/<span class=\"k\">${</span><span class=\"nv\">TARGET_NAME</span><span class=\"k\">}</span>/<span class=\"nv\">$configurationName</span>/<span class=\"k\">${</span><span class=\"nv\">channel_name</span><span class=\"k\">}</span>/<span class=\"k\">${</span><span class=\"nv\">BuildNo</span><span class=\"k\">}</span>/<span class=\"k\">${</span><span class=\"nv\">TARGET_NAME</span><span class=\"k\">}</span>_<span class=\"k\">${</span><span class=\"nv\">channel_name</span><span class=\"k\">}</span>_<span class=\"nv\">$configurationName_</span><span class=\"k\">${</span><span class=\"nv\">BuildNo</span><span class=\"k\">}</span>\n    <span class=\"nv\">oss_path</span><span class=\"o\">=</span><span class=\"s2\">\"oss://</span><span class=\"nv\">$oss_bucket</span><span class=\"s2\">/</span><span class=\"nv\">$oss_bucket_path</span><span class=\"s2\">\"</span>\n    <span class=\"nv\">oss_url</span><span class=\"o\">=</span><span class=\"s2\">\"https://</span><span class=\"nv\">$oss_bucket</span><span class=\"s2\">.oss-cn-beijing.aliyuncs.com/</span><span class=\"nv\">$oss_bucket_path</span><span class=\"s2\">\"</span>\n\n    <span class=\"nv\">oss_ipa_upload_url</span><span class=\"o\">=</span><span class=\"nv\">$oss_path</span><span class=\"s2\">\".ipa\"</span>\n    <span class=\"nv\">oss_ipa_url</span><span class=\"o\">=</span><span class=\"nv\">$oss_url</span><span class=\"s2\">\".ipa\"</span>\n\n    <span class=\"c\">#icon下载地址配置</span>\n    <span class=\"nv\">oss_icon_url</span><span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">aliyunOSSBuicket</span><span class=\"k\">}</span><span class=\"s2\">/icon/icon.png\"</span>\n    <span class=\"nv\">oss_icon_fs_url</span><span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">aliyunOSSBuicket</span><span class=\"k\">}</span><span class=\"s2\">/icon/icon_fs.png\"</span>\n\n    \n    <span class=\"c\">#修改ipa下载地址</span>\n    /usr/libexec/PlistBuddy <span class=\"nt\">-c</span> <span class=\"s2\">\"Set :items:0:assets:0:url </span><span class=\"nv\">$oss_ipa_url</span><span class=\"s2\">\"</span> <span class=\"nv\">$manifest_path</span>\n\n    <span class=\"c\">#修改icon地址</span>\n    /usr/libexec/PlistBuddy <span class=\"nt\">-c</span> <span class=\"s2\">\"Set :items:0:assets:1:url </span><span class=\"nv\">$oss_icon_url</span><span class=\"s2\">\"</span> <span class=\"nv\">$manifest_path</span>\n\n    <span class=\"c\">#修改icon full size地址</span>\n    /usr/libexec/PlistBuddy <span class=\"nt\">-c</span> <span class=\"s2\">\"Set :items:0:assets:2:url </span><span class=\"nv\">$oss_icon_fs_url</span><span class=\"s2\">\"</span> <span class=\"nv\">$manifest_path</span>\n\n\n    <span class=\"c\">#传ipa</span>\n    ossutil <span class=\"nb\">cp</span> <span class=\"k\">${</span><span class=\"nv\">IPA_PATH</span><span class=\"k\">}</span> <span class=\"nv\">$oss_ipa_upload_url</span> <span class=\"nt\">-f</span>\n    \n    <span class=\"c\">#传manifest</span>\n    <span class=\"nv\">oss_manifest_extension</span><span class=\"o\">=</span><span class=\"s2\">\"plist\"</span>\n    <span class=\"nv\">oss_manifest_upload_url</span><span class=\"o\">=</span><span class=\"nv\">$oss_path</span><span class=\"s2\">\".\"</span><span class=\"nv\">$oss_manifest_extension</span>\n    <span class=\"nv\">oss_manifest_url</span><span class=\"o\">=</span><span class=\"nv\">$oss_url</span><span class=\"s2\">\".\"</span><span class=\"nv\">$oss_manifest_extension</span>\n    ossutil <span class=\"nb\">cp</span> <span class=\"k\">${</span><span class=\"nv\">manifest_path</span><span class=\"k\">}</span> <span class=\"nv\">$oss_manifest_upload_url</span> <span class=\"nt\">-f</span>\n    \n    <span class=\"c\">#上述做归档后，生成下载二维码</span>\n    <span class=\"nv\">download_url</span><span class=\"o\">=</span><span class=\"s2\">\"itms-services://?action=download-manifest&amp;url=\"</span><span class=\"nv\">$oss_manifest_url</span>\n    <span class=\"nv\">qrcode_path</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">exportPath</span><span class=\"k\">}</span>/<span class=\"k\">${</span><span class=\"nv\">TARGET_NAME</span><span class=\"k\">}</span>_<span class=\"k\">${</span><span class=\"nv\">BuildNo</span><span class=\"k\">}</span>.png\n    \n    <span class=\"c\">#TODO: 这里需要安装下工具 qrencode [brew install qrencode]</span>\n    bash <span class=\"nv\">$build_ext_path</span>/build_tools/build_tools.sh <span class=\"s2\">\"qrencode\"</span>\n\n    qrencode <span class=\"nt\">-o</span> <span class=\"nv\">$qrcode_path</span> <span class=\"nv\">$download_url</span>\n    \n    <span class=\"c\">#将二维码上传到oss</span>\n    <span class=\"nv\">oss_qrencode_extension</span><span class=\"o\">=</span><span class=\"s2\">\"png\"</span>\n    <span class=\"nv\">oss_qrencode_upload_url</span><span class=\"o\">=</span><span class=\"nv\">$oss_path</span><span class=\"s2\">\".\"</span><span class=\"nv\">$oss_qrencode_extension</span>\n    <span class=\"nv\">qrcode_path_with_msg</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span>_with_msg\n        \n    <span class=\"c\">#如果需要二维码打上log信息则调用</span>\n    <span class=\"nv\">need_msg</span><span class=\"o\">=</span>1\n    add_log_commit_title_msg_to_qrcode <span class=\"nv\">$need_msg</span>\n        \n    <span class=\"c\">#上传到阿里云oss</span>\n    ossutil <span class=\"nb\">cp</span> <span class=\"k\">${</span><span class=\"nv\">qrcode_path_with_msg</span><span class=\"k\">}</span> <span class=\"nv\">$oss_qrencode_upload_url</span> <span class=\"nt\">-f</span>\n    \n    <span class=\"c\">#二维码的url 通知出来</span>\n    <span class=\"nb\">export </span><span class=\"nv\">oss_app_download_qrcode_url</span><span class=\"o\">=</span><span class=\"nv\">$oss_url</span><span class=\"s2\">\".\"</span><span class=\"nv\">$oss_qrencode_extension</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'/// oss 分发： 二维码的oss_app_download_qrcode_url='</span><span class=\"k\">${</span><span class=\"nv\">oss_app_download_qrcode_url</span><span class=\"k\">}</span>\n<span class=\"o\">}</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<ul>\n  <li><strong>TestFlight</strong></li>\n</ul>\n\n<p>​\t打灰度包将执行ipa上传到AppStore后台的操作（服务端环境是正式环境，未来有外网的灰度需求可改成灰度环境）</p>\n\n<ul>\n  <li><strong>Release</strong></li>\n</ul>\n\n<p>​\t打正式包将执行ipa上传到AppStore后台的操作（服务端环境是正式环境）</p>\n\n<ul>\n  <li><strong>TFinner</strong></li>\n</ul>\n\n<p>​\t打灰度包给没有添加测试设备的同事下载，解决100设备不够用（带Debug模式、可切换环境、上传到AppStore）</p>\n\n<p>AppStore分发：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#发布到AppStore</span>\n<span class=\"k\">function </span>upload_ipa_to_AppStore <span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'/// 上传App Store 开始'</span>\n    xcrun altool <span class=\"nt\">--validate-app</span> <span class=\"nt\">-f</span>  <span class=\"nv\">$IPA_PATH</span> <span class=\"nt\">--type</span>  ios  <span class=\"nt\">--apiKey</span> <span class=\"nv\">$appStore_apikey</span> <span class=\"nt\">--apiIssuer</span> <span class=\"nv\">$appStore_apiIssuer</span>\n    xcrun altool <span class=\"nt\">--upload-app</span> <span class=\"nt\">-f</span>  <span class=\"nv\">$IPA_PATH</span> <span class=\"nt\">--type</span>  ios  <span class=\"nt\">--apiKey</span> <span class=\"nv\">$appStore_apikey</span> <span class=\"nt\">--apiIssuer</span> <span class=\"nv\">$appStore_apiIssuer</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'/// 上传App Store 结束'</span>\n<span class=\"o\">}</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h4 id=\"232-通知\">2.3.2 通知</h4>\n\n<p>​\t通知模块目前通过钉钉通知，未来也可改成邮件甚至其他方式，考量亦是如此。通知实现内容可定制，当参数notify不为空，才需要通知测试团队进行更新：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n</pre></td><td class=\"rouge-code\"><pre> <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$notify</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then</span>\n        <span class=\"c\"># 空，不发通知</span>\n        <span class=\"nb\">echo</span> <span class=\"s1\">'/// 本次打包静默，不发通知 '</span>\n <span class=\"k\">else</span>\n    ....\n <span class=\"k\">fi</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>​\t通知通过 build_notification.sh 实现如下逻辑：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#构建通知</span>\n<span class=\"k\">function </span>notification<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"nv\">param</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$param</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">echo</span> <span class=\"s1\">'///构建通知（参数为空）'</span>\n        notify\n    <span class=\"k\">else\n        </span><span class=\"nb\">echo</span> <span class=\"s1\">'///构建通知（参数不为空）：'</span><span class=\"nv\">$param</span>\n        <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">param</span><span class=\"k\">}</span><span class=\"s2\">\"</span> <span class=\"o\">=</span> <span class=\"s2\">\"AppStore\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n            </span><span class=\"nb\">echo</span> <span class=\"s1\">'///构建通知AppStore'</span>\n            notify_AppStore\n        <span class=\"k\">else\n            </span><span class=\"nb\">echo</span> <span class=\"s1\">'///构建异常（参数:）'</span><span class=\"nv\">$param</span>\n            notify_fail <span class=\"nv\">$param</span>\n        <span class=\"k\">fi\n    fi</span>\n\n<span class=\"o\">}</span>\n\n<span class=\"nb\">echo</span> <span class=\"s1\">'///构建通知（'</span><span class=\"nv\">$1</span><span class=\"s1\">')'</span>\n\n<span class=\"c\">#通知</span>\nnotification <span class=\"nv\">$1</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>通知兼容蒲公英下载地址 + oss下载地址：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#执行通知逻辑</span>\n<span class=\"k\">function </span>notify<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"nv\">modify_msg</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">git_log</span><span class=\"k\">}</span>\n    <span class=\"nv\">ProductName</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">xcodeProductName</span><span class=\"k\">}</span>\n    <span class=\"nv\">downloadPrefix</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">PrefixID</span><span class=\"k\">}</span>\n    <span class=\"nv\">channel</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">channel_name</span><span class=\"k\">}</span>\n    <span class=\"nv\">title</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">buildName</span><span class=\"k\">}</span>\n    \n    <span class=\"nv\">app_donwnload_url</span><span class=\"o\">=</span><span class=\"s2\">\"\"</span>\n    <span class=\"nv\">pgy_app_donwnload_url</span><span class=\"o\">=</span><span class=\"s2\">\"\"</span>\n    <span class=\"c\">#启用传pgy</span>\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">use_pgy_publish</span><span class=\"k\">}</span><span class=\"s2\">\"</span> <span class=\"o\">=</span> <span class=\"s2\">\"1\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then</span>\n        <span class=\"c\">#采用直接 拼 channel后缀</span>\n        <span class=\"nv\">shortUrl</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">downloadPrefix</span><span class=\"k\">}${</span><span class=\"nv\">ProductName</span><span class=\"k\">}${</span><span class=\"nv\">channel</span><span class=\"k\">}</span>\n\n\n        <span class=\"nv\">pgy_app_donwnload_url</span><span class=\"o\">=</span><span class=\"s2\">\"https://www.xcxwo.com/</span><span class=\"k\">${</span><span class=\"nv\">shortUrl</span><span class=\"k\">}</span><span class=\"s2\">\"</span>\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"short_download_url = \"</span><span class=\"nv\">$short_download_url</span>\n        <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$short_download_url</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n            </span><span class=\"nv\">app_donwnload_url</span><span class=\"o\">=</span><span class=\"nv\">$pgy_app_donwnload_url</span>\n        <span class=\"k\">else\n            </span><span class=\"nv\">app_donwnload_url</span><span class=\"o\">=</span><span class=\"nv\">$short_download_url</span>\n        <span class=\"k\">fi</span>\n        <span class=\"c\">#蒲公英下载地址</span>\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"通知：蒲公英分发，下载地址：'</span><span class=\"k\">${</span><span class=\"nv\">app_donwnload_url</span><span class=\"k\">}</span><span class=\"s2\">'\"</span>\n    <span class=\"k\">fi</span>\n    \n    \n    <span class=\"c\">#启用传oss</span>\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">use_oss_publish</span><span class=\"k\">}</span><span class=\"s2\">\"</span> <span class=\"o\">=</span> <span class=\"s2\">\"1\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$oss_app_download_qrcode_url</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then</span>\n            <span class=\"c\">#oss下载地址为空</span>\n            <span class=\"nb\">echo</span> <span class=\"s2\">\"通知：oss_app_download_qrcode_url 为空则 下载地址：'</span><span class=\"k\">${</span><span class=\"nv\">app_donwnload_url</span><span class=\"k\">}</span><span class=\"s2\">'\"</span>\n        <span class=\"k\">else\n            </span><span class=\"nb\">echo</span> <span class=\"s2\">\"通知：oss_app_download_qrcode_url 不为空 下载地址：'</span><span class=\"k\">${</span><span class=\"nv\">app_donwnload_url</span><span class=\"k\">}</span><span class=\"s2\">' and '</span><span class=\"nv\">$oss_app_download_qrcode_url</span><span class=\"s2\">'\"</span>\n            <span class=\"nv\">app_donwnload_url</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">pgy_app_donwnload_url</span><span class=\"k\">}</span><span class=\"s1\">'\\n\\n'</span>oss下载地址:<span class=\"nv\">$oss_app_download_qrcode_url</span>\n\n        <span class=\"k\">fi\n    fi\n    \n    </span><span class=\"nb\">echo</span> <span class=\"s2\">\"通知 COME下载地址：'</span><span class=\"k\">${</span><span class=\"nv\">app_donwnload_url</span><span class=\"k\">}</span><span class=\"s2\">'\"</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"通知 内容：'\"\"'</span><span class=\"k\">${</span><span class=\"nv\">ProductName</span><span class=\"k\">}</span><span class=\"s2\">' App更新：'</span><span class=\"k\">${</span><span class=\"nv\">title</span><span class=\"k\">}</span><span class=\"s2\">'</span><span class=\"se\">\\n</span><span class=\"s2\">'</span><span class=\"k\">${</span><span class=\"nv\">modify_msg</span><span class=\"k\">}</span><span class=\"s2\">'</span><span class=\"se\">\\n</span><span class=\"s2\">下载地址：'</span><span class=\"k\">${</span><span class=\"nv\">app_donwnload_url</span><span class=\"k\">}</span><span class=\"s2\">'\"</span>\n    \n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">notify</span><span class=\"k\">}</span><span class=\"s2\">\"</span> <span class=\"o\">=</span> <span class=\"s2\">\"1\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">echo</span> <span class=\"s1\">'/// 本次打发通知到群里 '</span>\n    <span class=\"k\">elif</span> <span class=\"o\">[</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">notify</span><span class=\"k\">}</span><span class=\"s2\">\"</span> <span class=\"o\">=</span> <span class=\"s2\">\"2\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">echo</span> <span class=\"s1\">'/// 本次打发通知到内部群里 '</span>\n        <span class=\"nv\">access_token</span><span class=\"o\">=</span><span class=\"nv\">$internal_access_token</span>\n    <span class=\"k\">else\n        </span><span class=\"nb\">echo</span> <span class=\"s1\">'/// 本次打发通知参数'</span><span class=\"k\">${</span><span class=\"nv\">notify</span><span class=\"k\">}</span>\n    <span class=\"k\">fi\n    \n    if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$notify</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then</span>\n        <span class=\"c\"># 空，不发通知</span>\n        <span class=\"nb\">echo</span> <span class=\"s1\">'/// 本次打包静默，不发通知 '</span>\n\n    <span class=\"k\">else\n        </span><span class=\"nb\">echo</span> <span class=\"s1\">'/// 本次打包发通知 '</span>\n        <span class=\"c\">#发送发版通知</span>\n        curl <span class=\"s1\">'https://oapi.dingtalk.com/robot/send?access_token='</span><span class=\"k\">${</span><span class=\"nv\">access_token</span><span class=\"k\">}</span> <span class=\"se\">\\</span>\n            <span class=\"nt\">-H</span> <span class=\"s1\">'Content-Type: application/json'</span> <span class=\"se\">\\</span>\n            <span class=\"nt\">-d</span> <span class=\"s1\">'{\"msgtype\": \"text\",\n                \"at\": {\n                \"atMobiles\":[\n                    \"xx1\"\n                    \"xx2\"\n                    \"xx3\"\n                    \"xx4\"\n                    \"xx5\"\n                    \"xx6\"\n                    \"xx7\"\n                ],\n                \"isAtAll\": false\n                },\n                 \"text\": {\n                      \"content\": \"'</span><span class=\"k\">${</span><span class=\"nv\">ProductName</span><span class=\"k\">}</span><span class=\"s1\">' App更新：'</span><span class=\"k\">${</span><span class=\"nv\">title</span><span class=\"k\">}</span><span class=\"s1\">'\\n'</span><span class=\"k\">${</span><span class=\"nv\">modify_msg</span><span class=\"k\">}</span><span class=\"s1\">'\\n下载地址：'</span><span class=\"k\">${</span><span class=\"nv\">app_donwnload_url</span><span class=\"k\">}</span><span class=\"s1\">'\"            }\n               }'</span>\n               \n               \n        <span class=\"nb\">echo</span> <span class=\"s1\">'///-------------------------------------------------------'</span>\n        <span class=\"nb\">echo</span> <span class=\"s1\">'/// 通知Come3 '</span>\n        <span class=\"nb\">echo</span> <span class=\"s1\">'///-------------------------------------------------------'</span>\n    <span class=\"k\">fi</span>\n\n<span class=\"o\">}</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>​\t构建失败通知：</p>\n\n<div class=\"language-sh highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#打包出错时通知</span>\n<span class=\"k\">function </span>notify_fail<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"c\">#发布到移动端内部群</span>\n    <span class=\"nv\">access_token</span><span class=\"o\">=</span><span class=\"nv\">$internal_access_token</span>\n    <span class=\"c\">#产物</span>\n    <span class=\"nv\">ProductName</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">xcodeProductName</span><span class=\"k\">}</span>\n    <span class=\"c\">#渠道名</span>\n    <span class=\"nv\">channel</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">channel_name</span><span class=\"k\">}</span>\n    <span class=\"c\">#流水线名称</span>\n    <span class=\"nv\">title</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">buildName</span><span class=\"k\">}</span>\n    \n    <span class=\"c\">#失败原因</span>\n    <span class=\"nv\">reson</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n    \n    <span class=\"nb\">echo</span> <span class=\"s1\">'/// 本次打包异常：发通知到内部群 '</span>\n    <span class=\"c\">#发送发版通知</span>\n    curl <span class=\"s1\">'https://oapi.dingtalk.com/robot/send?access_token='</span><span class=\"k\">${</span><span class=\"nv\">access_token</span><span class=\"k\">}</span> <span class=\"se\">\\</span>\n        <span class=\"nt\">-H</span> <span class=\"s1\">'Content-Type: application/json'</span> <span class=\"se\">\\</span>\n        <span class=\"nt\">-d</span> <span class=\"s1\">'{\"msgtype\": \"text\",\n            \"at\": {\n            \"atMobiles\":[\n                \"DD1\",\n                \"DD2\"\n            ],\n            \"isAtAll\": false\n            },\n             \"text\": {\n                  \"content\": \"❌构建失败:\\nApp:'</span><span class=\"k\">${</span><span class=\"nv\">ProductName</span><span class=\"k\">}</span><span class=\"s1\">'\\n原  因：'</span><span class=\"k\">${</span><span class=\"nv\">reson</span><span class=\"k\">}</span><span class=\"s1\">'\\n流水线：'</span><span class=\"k\">${</span><span class=\"nv\">title</span><span class=\"k\">}</span><span class=\"s1\">'\\n渠  道：'</span><span class=\"k\">${</span><span class=\"nv\">buildName</span><span class=\"k\">}</span><span class=\"s1\">'\"}\n           }'</span>\n           \n           \n    <span class=\"nb\">echo</span> <span class=\"s1\">'///-------------------------------------------------------'</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'/// 构建通知'</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'///-------------------------------------------------------'</span>\n<span class=\"o\">}</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>构建到AppStore时需要测试团队对上线进行验证：也发送下通知</p>\n\n<div class=\"language-sh highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#打包AppStore通知，通知到群给出TestFlight下载链接二维码</span>\n<span class=\"k\">function </span>notify_AppStore<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"c\">#发布到移动端内部群</span>\n    <span class=\"nv\">access_token</span><span class=\"o\">=</span><span class=\"nv\">$internal_access_token</span>\n    <span class=\"c\">#产物</span>\n    <span class=\"nv\">ProductName</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">xcodeProductName</span><span class=\"k\">}</span>\n    <span class=\"c\">#渠道名</span>\n    <span class=\"nv\">channel</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">channel_name</span><span class=\"k\">}</span>\n    <span class=\"c\">#流水线名称</span>\n    <span class=\"nv\">title</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">buildName</span><span class=\"k\">}</span>\n    \n    <span class=\"c\">#testFlight 二维码in OSS</span>\n    <span class=\"nv\">downloadTF</span><span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">aliyunOSSBuicket</span><span class=\"k\">}</span><span class=\"s2\">/AppStoreValid/testflight.png\"</span>\n    \n    <span class=\"nb\">echo</span> <span class=\"s1\">'/// 本次打包构建到AppStore：发通知到内部群 '</span>\n    <span class=\"c\">#发送发版通知</span>\n    curl <span class=\"s1\">'https://oapi.dingtalk.com/robot/send?access_token='</span><span class=\"k\">${</span><span class=\"nv\">access_token</span><span class=\"k\">}</span> <span class=\"se\">\\</span>\n        <span class=\"nt\">-H</span> <span class=\"s1\">'Content-Type: application/json'</span> <span class=\"se\">\\</span>\n        <span class=\"nt\">-d</span> <span class=\"s1\">'{\"msgtype\": \"text\",\n            \"at\": {\n            \"atMobiles\":[\n                \"DD1\",\n                \"DD2\"\n            ],\n            \"isAtAll\": false\n            },\n             \"text\": {\n                  \"content\": \"✅AppSore构建成功:\\nApp:'</span><span class=\"k\">${</span><span class=\"nv\">ProductName</span><span class=\"k\">}</span><span class=\"s1\">'\\n构建名：'</span><span class=\"k\">${</span><span class=\"nv\">configurationName</span><span class=\"k\">}</span><span class=\"s1\">'\\n流水线：'</span><span class=\"k\">${</span><span class=\"nv\">title</span><span class=\"k\">}</span><span class=\"s1\">'\\n版本号：'</span><span class=\"k\">${</span><span class=\"nv\">xcodeVersion3number</span><span class=\"k\">}</span><span class=\"s1\">'\\n构建号：'</span><span class=\"k\">${</span><span class=\"nv\">BuildNo</span><span class=\"k\">}</span><span class=\"s1\">'\\nTestFlight:'</span><span class=\"k\">${</span><span class=\"nv\">downloadTF</span><span class=\"k\">}</span><span class=\"s1\">'\"}\n           }'</span>\n           \n           \n    <span class=\"nb\">echo</span> <span class=\"s1\">'///-------------------------------------------------------'</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'/// 构建通知'</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'///-------------------------------------------------------'</span>\n<span class=\"o\">}</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h4 id=\"233-归档\">2.3.3 归档</h4>\n\n<p>​\t目前在Release、TestFlight 打包时将ipa与dysm打包上传到简单云制品库</p>\n\n<p>​\t构建归档，将ipa与dysm打程zip包</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n</pre></td><td class=\"rouge-code\"><pre><span class=\"k\">function </span>ProductCollection<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">configurationName</span><span class=\"k\">}</span><span class=\"s2\">\"</span> <span class=\"o\">=</span> <span class=\"s2\">\"Release\"</span> <span class=\"o\">]</span> <span class=\"o\">||</span> <span class=\"o\">[</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">configurationName</span><span class=\"k\">}</span><span class=\"s2\">\"</span> <span class=\"o\">=</span> <span class=\"s2\">\"TestFlight\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n\n        </span>dSYMCollection\n    \n        IPACollection\n        \n        <span class=\"nb\">export </span><span class=\"nv\">ProductCollectionPath</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">dSYM_dict_PATH</span><span class=\"k\">}</span>/ProductCollection.zip\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"ProductCollectionPath=\"</span><span class=\"nv\">$ProductCollectionPath</span>\n        zip <span class=\"nv\">$ProductCollectionPath</span> <span class=\"k\">${</span><span class=\"nv\">dSYMZip_PATH</span><span class=\"k\">}</span> <span class=\"k\">${</span><span class=\"nv\">IPAZip_PATH</span><span class=\"k\">}</span>\n        <span class=\"c\">#执行归档,(ipa+dSYM)并找个地方存起来</span>\n        bash <span class=\"nv\">$build_ext_path</span>/<span class=\"nv\">$collection_sh</span>\n    <span class=\"k\">fi</span>\n\n<span class=\"o\">}</span>\n\n<span class=\"k\">function </span>dSYMCollection<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"c\"># zip and copy dSYM</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"dSYMCollection\"</span>\n\n    <span class=\"nb\">cd</span> <span class=\"k\">${</span><span class=\"nv\">build_path</span><span class=\"k\">}</span>/Build/Products/<span class=\"k\">${</span><span class=\"nv\">configurationName</span><span class=\"k\">}</span><span class=\"nt\">-iphoneos</span>\n    find <span class=\"nb\">.</span> <span class=\"nt\">-name</span> <span class=\"s1\">'*.dSYM'</span> | zip <span class=\"nt\">-r</span> <span class=\"k\">${</span><span class=\"nv\">dSYMZip_PATH</span><span class=\"k\">}</span> -@\n    find <span class=\"nb\">.</span> <span class=\"nt\">-name</span> <span class=\"s1\">'*.dSYM'</span> <span class=\"nt\">-exec</span> <span class=\"nb\">cp</span> <span class=\"nt\">-R</span> <span class=\"o\">{}</span> <span class=\"k\">${</span><span class=\"nv\">dSYM_dict_PATH</span><span class=\"k\">}</span> <span class=\"se\">\\;</span>\n    <span class=\"nb\">cd</span> -\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"Copy dSYM.zip file success save path:\"</span> <span class=\"k\">${</span><span class=\"nv\">dSYMZip_PATH</span><span class=\"k\">}</span>\n<span class=\"o\">}</span>\n\n<span class=\"k\">function </span>IPACollection<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"c\"># zip and copy dSYM</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"IPACollection\"</span>\n    <span class=\"nb\">cd</span> <span class=\"k\">${</span><span class=\"nv\">build_path</span><span class=\"k\">}</span>/Build/Products/<span class=\"k\">${</span><span class=\"nv\">configurationName</span><span class=\"k\">}</span><span class=\"nt\">-iphoneos</span>\n    find <span class=\"nb\">.</span> <span class=\"nt\">-name</span> <span class=\"s1\">'*.ipa'</span> | zip <span class=\"nt\">-r</span> <span class=\"k\">${</span><span class=\"nv\">IPAZip_PATH</span><span class=\"k\">}</span> -@\n    find <span class=\"nb\">.</span> <span class=\"nt\">-name</span> <span class=\"s1\">'*.ipa'</span> <span class=\"nt\">-exec</span> <span class=\"nb\">cp</span> <span class=\"nt\">-R</span> <span class=\"o\">{}</span> <span class=\"k\">${</span><span class=\"nv\">dSYM_dict_PATH</span><span class=\"k\">}</span> <span class=\"se\">\\;</span>\n    <span class=\"nb\">cd</span> -\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"Copy IPAZip_PATH.zip file success save path:\"</span> <span class=\"k\">${</span><span class=\"nv\">IPAZip_PATH</span><span class=\"k\">}</span>\n<span class=\"o\">}</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>​\t将zip包归档到简单云</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n</pre></td><td class=\"rouge-code\"><pre><span class=\"k\">function </span>upload_to_store<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"nb\">export </span><span class=\"nv\">p</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'/// 上传 dsym ipa 到制品库 '</span><span class=\"k\">${</span><span class=\"nv\">v</span><span class=\"k\">}</span><span class=\"s1\">'pkgName='</span><span class=\"k\">${</span><span class=\"nv\">pkgName</span><span class=\"k\">}</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"dSYMZip_PATH = \"</span><span class=\"k\">${</span><span class=\"nv\">dSYMZip_PATH</span><span class=\"k\">}</span><span class=\"s2\">\"https://PSC-devops.com/pkg/PSC/raw/OperationsAppAnddSYM/release?version=\"</span><span class=\"k\">${</span><span class=\"nv\">v</span><span class=\"k\">}</span><span class=\"s2\">\"&amp;pkgName=\"</span><span class=\"k\">${</span><span class=\"nv\">pkgName</span><span class=\"k\">}</span>\n    <span class=\"c\">#上传简单云制品库</span>\n    curl <span class=\"nt\">-F</span> <span class=\"s2\">\"file=@\"</span><span class=\"k\">${</span><span class=\"nv\">p</span><span class=\"k\">}</span> <span class=\"nt\">-u</span> 简单云账号:简单云密码 <span class=\"s2\">\"https://PSC-devops.com/pkg/PSC/raw/OperationsAppAnddSYM/release?version=\"</span><span class=\"k\">${</span><span class=\"nv\">v</span><span class=\"k\">}</span><span class=\"s2\">\"&amp;pkgName=\"</span><span class=\"k\">${</span><span class=\"nv\">pkgName</span><span class=\"k\">}</span> <span class=\"nt\">-k</span>\n<span class=\"o\">}</span>\n        \n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>​\t将dSYM上传到bugly，用于定位线上crash：</p>\n\n<div class=\"language-sh highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n</pre></td><td class=\"rouge-code\"><pre><span class=\"k\">function </span>upload_dSYM_to_bugly<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"nb\">export </span><span class=\"nv\">p</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">dSYM_dict_PATH</span><span class=\"k\">}</span>\n    \n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">TARGET_NAME</span><span class=\"k\">}</span><span class=\"s2\">\"</span> <span class=\"o\">=</span> <span class=\"s2\">\"PSCDemoiOS\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nv\">bugly_appid</span><span class=\"o\">=</span><span class=\"nv\">$Demo_bugly_appid</span>\n        <span class=\"nv\">bugly_appkey</span><span class=\"o\">=</span><span class=\"nv\">$Demo_bugly_appkey</span>\n    <span class=\"k\">fi\n    \n    if</span> <span class=\"o\">[</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">TARGET_NAME</span><span class=\"k\">}</span><span class=\"s2\">\"</span> <span class=\"o\">=</span> <span class=\"s2\">\"Operations\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nv\">bugly_appid</span><span class=\"o\">=</span><span class=\"nv\">$operations_bugly_appid</span>\n        <span class=\"nv\">bugly_appkey</span><span class=\"o\">=</span><span class=\"nv\">$operations_bugly_appkey</span>\n    <span class=\"k\">fi\n    \n    </span><span class=\"nb\">echo</span> <span class=\"s2\">\"/// 上传 dsym path </span><span class=\"k\">${</span><span class=\"nv\">p</span><span class=\"k\">}</span><span class=\"s2\">\"</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"/// 上传 dsym target </span><span class=\"k\">${</span><span class=\"nv\">TARGET_NAME</span><span class=\"k\">}</span><span class=\"s2\">\"</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"/// 上传 dsym bugly_appid </span><span class=\"k\">${</span><span class=\"nv\">bugly_appid</span><span class=\"k\">}</span><span class=\"s2\">\"</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"/// 上传 dsym bugly_appkey </span><span class=\"k\">${</span><span class=\"nv\">bugly_appkey</span><span class=\"k\">}</span><span class=\"s2\">\"</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'/// 上传 dsym bugly '</span><span class=\"k\">${</span><span class=\"nv\">versionName</span><span class=\"k\">}</span><span class=\"s1\">'pkgName='</span><span class=\"k\">${</span><span class=\"nv\">pkgName</span><span class=\"k\">}</span>\n    \n    <span class=\"c\">#切换java 版本在流水线实现，这边实现不了</span>\n    java <span class=\"nt\">-version</span>\n<span class=\"c\">#    jdk8</span>\n<span class=\"c\">#    java -version</span>\n    \n    <span class=\"nv\">bugly_jar_path</span><span class=\"o\">=</span><span class=\"nv\">$build_ext_path</span>/collection_res/buglyqq-upload-symbol/buglyqq-upload-symbol.jar\n    \n    java <span class=\"nt\">-jar</span> <span class=\"k\">${</span><span class=\"nv\">bugly_jar_path</span><span class=\"k\">}</span> <span class=\"nt\">-appid</span> <span class=\"k\">${</span><span class=\"nv\">bugly_appid</span><span class=\"k\">}</span> <span class=\"nt\">-appkey</span> <span class=\"k\">${</span><span class=\"nv\">bugly_appkey</span><span class=\"k\">}</span> <span class=\"nt\">-bundleid</span> <span class=\"k\">${</span><span class=\"nv\">pkgName</span><span class=\"k\">}</span> <span class=\"nt\">-version</span> <span class=\"k\">${</span><span class=\"nv\">versionName</span><span class=\"k\">}</span> <span class=\"nt\">-platform</span> IOS <span class=\"nt\">-inputSymbol</span> <span class=\"k\">${</span><span class=\"nv\">p</span><span class=\"k\">}</span>\n<span class=\"o\">}</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h2 id=\"3补充说明\">3.补充说明</h2>\n\n<p>​\t打包脚本抽离成git submodule，以供各个工程项目的集成，减少维护成本，如果没有跟主工程一起更新，则每次构建时需要同步下最新的脚本</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#使用了gitsubmodule 构建组件，兼容git 检出不兼容，需要先执行 git submodule update --init --recursive</span>\ngit submodule update <span class=\"nt\">--init</span> <span class=\"nt\">--recursive</span>\n<span class=\"c\">#拉取自模块更新</span>\ngit submodule update <span class=\"nt\">--remote</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h2 id=\"4author\">4.Author</h2>\n\n<p>​\t有任何问题，欢迎联系：wangshu2015@gmail.com</p>\n\n\n\n                <hr style=\"visibility: hidden;\">\n                <ul class=\"pager\">\n                    \n                    <li class=\"previous\">\n                        <a href=\"/2023/10/07/%E6%8A%93%E5%8C%85%E5%AE%9E%E8%B7%B5/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Charles HTTPS实践\">\n                        Previous<br>\n                        <span>Charles HTTPS实践</span>\n                        </a>\n                    </li>\n                    \n                    \n                    <li class=\"next\">\n                        <a href=\"/2024/01/08/ios/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"iOS组件化实现之：实用工具沉淀及介绍\">\n                        Next<br>\n                        <span>iOS组件化实现之：实用工具沉淀及介绍</span>\n                        </a>\n                    </li>\n                    \n                </ul>\n                <hr style=\"visibility: hidden;\">\n\n                \n                <!-- disqus 评论框 start -->\n                <div class=\"comment\">\n                    <div id=\"disqus_thread\" class=\"disqus-thread\"></div>\n                </div>\n                <!-- disqus 评论框 end -->\n                \n\n                \n            </div>  \n\n    <!-- Side Catalog Container -->\n        \n            <div class=\"\n                col-lg-2 col-lg-offset-0\n                visible-lg-block\n                sidebar-container\n                catalog-container\">\n                <div class=\"side-catalog\">\n                    <hr class=\"hidden-sm hidden-xs\">\n                    <h5>\n                        <a class=\"catalog-toggle\" href=\"#\">CATALOG</a>\n                    </h5>\n                    <ul class=\"catalog-body\"></ul>\n                </div>\n            </div>\n        \n\n    <!-- Sidebar Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                sidebar-container\">\n\n                <!-- Featured Tags -->\n                \n\n\n<section>\n    \n        <hr class=\"hidden-sm hidden-xs\">\n    \n    <h5><a href=\"/archive/\">FEATURED TAGS</a></h5>\n    <div class=\"tags\">\n        \n        \n        \n        \n        \n    </div>\n</section>\n\n\n                <!-- Friends Blog -->\n                \n            </div>\n        </div>\n    </div>\n</article>\n\n<!-- add support for mathjax by voleking-->\n\n\n\n\n\n\n<!-- disqus 公共JS代码 start (一个网页只需插入一次) -->\n<script type=\"text/javascript\">\n    /* * * CONFIGURATION VARIABLES * * */\n    var disqus_shortname = \"Cyp\";\n    var disqus_identifier = \"/2023/11/08/构建流水线实践\";\n    var disqus_url = \"http://localhost:4000/2023/11/08/%E6%9E%84%E5%BB%BA%E6%B5%81%E6%B0%B4%E7%BA%BF%E5%AE%9E%E8%B7%B5/\";\n\n    (function() {\n        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;\n        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';\n        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);\n    })();\n</script>\n<!-- disqus 公共JS代码 end -->\n\n\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n      var d = document, t = 'script',\n          o = d.createElement(t),\n          s = d.getElementsByTagName(t)[0];\n      o.src = u;\n      if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n      s.parentNode.insertBefore(o, s);\n    }\n</script>\n<!-- anchor-js, Doc:http://bryanbraun.github.io/anchorjs/ -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/anchor-js/1.1.1/anchor.min.js\",function(){\n        anchors.options = {\n          visible: 'hover',\n          placement: 'right',\n          // icon: '#'\n        };\n        anchors.add().remove('.intro-header h1').remove('.subheading').remove('.sidebar-container h5');\n    })\n</script>\n<style>\n    /* place left on bigger screen */\n    @media all and (min-width: 800px) {\n        .anchorjs-link{\n            position: absolute;\n            left: -0.75em;\n            font-size: 1.1em;\n            margin-top : -0.1em;\n        }\n    }\n</style>\n\n\n\n    <!-- Footer -->\n<footer>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <!-- SNS Link -->\n                \n\n\n<ul class=\"list-inline text-center\">\n\n\n  \n  \n  \n  \n  \n  \n  \n</ul>\n\n                <p class=\"copyright text-muted\">\n                    Copyright &copy; PaysonChen Blog 2024\n                    <br>\n                    <!-- Powered by <a href=\"http://huangxuan.me\">Hux Blog</a> | -->\n                 <!--    <iframe style=\"margin-left: 2px; margin-bottom:-5px;\" frameborder=\"0\" scrolling=\"0\" width=\"100px\"\n                        height=\"20px\"\n                        src=\"https://ghbtns.com/github-btn.html?user=huxpro&repo=huxpro.github.io&type=star&count=true\">\n                    </iframe> -->\n                </p>\n            </div>\n        </div>\n    </div>\n</footer>\n\n<!-- jQuery -->\n<script src=\"/js/jquery.min.js \"></script>\n\n<!-- Bootstrap Core JavaScript -->\n<!-- Currently, only navbar scroll-down effect at desktop still depends on this -->\n<script src=\"/js/bootstrap.min.js \"></script>\n\n<!-- Custom Theme JavaScript -->\n<script src=\"/js/hux-blog.min.js \"></script>\n\n<!-- Simple Jekyll Search -->\n<script src=\"/js/simple-jekyll-search.min.js\"></script>\n\n<!-- Service Worker -->\n\n<script src=\"/js/snackbar.js \"></script>\n<script src=\"/js/sw-registration.js \"></script>\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n        var d = document, t = 'script',\n            o = d.createElement(t),\n            s = d.getElementsByTagName(t)[0];\n        o.src = u;\n        if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n        s.parentNode.insertBefore(o, s);\n    }\n</script>\n\n<!--\n     Because of the native support for backtick-style fenced code blocks\n     right within the Markdown is landed in Github Pages,\n     From V1.6, There is no need for Highlight.js,\n     so Huxblog drops it officially.\n\n     - https://github.com/blog/2100-github-pages-now-faster-and-simpler-with-jekyll-3-0\n     - https://help.github.com/articles/creating-and-highlighting-code-blocks/\n     - https://github.com/jneen/rouge/wiki/list-of-supported-languages-and-lexers\n-->\n<!--\n    <script>\n        async(\"http://cdn.bootcss.com/highlight.js/8.6/highlight.min.js\", function(){\n            hljs.initHighlightingOnLoad();\n        })\n    </script>\n    <link href=\"http://cdn.bootcss.com/highlight.js/8.6/styles/github.min.css\" rel=\"stylesheet\">\n-->\n\n\n\n\n\n\n\n<!--fastClick.js -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/fastclick/1.0.6/fastclick.min.js\", function () {\n        var $nav = document.querySelector(\"nav\");\n        if ($nav) FastClick.attach($nav);\n    })\n</script>\n\n\n<!-- Google Analytics -->\n\n\n\n<!-- Baidu Tongji -->\n\n\n\n<!-- Side Catalog -->\n\n<script type=\"text/javascript\">\n    function generateCatalog(selector) {\n\n        // interop with multilangual \n        if ('' == 'true') {\n            _containerSelector = 'div.post-container.active'\n        } else {\n            _containerSelector = 'div.post-container'\n        }\n\n        // init\n        var P = $(_containerSelector), a, n, t, l, i, c;\n        a = P.find('h1,h2,h3,h4,h5,h6');\n\n        // clean\n        $(selector).html('')\n\n        // appending\n        a.each(function () {\n            n = $(this).prop('tagName').toLowerCase();\n            i = \"#\" + $(this).prop('id');\n            t = $(this).text();\n            c = $('<a href=\"' + i + '\" rel=\"nofollow\">' + t + '</a>');\n            l = $('<li class=\"' + n + '_nav\"></li>').append(c);\n            $(selector).append(l);\n        });\n        return true;\n    }\n\n    generateCatalog(\".catalog-body\");\n\n    // toggle side catalog\n    $(\".catalog-toggle\").click((function (e) {\n        e.preventDefault();\n        $('.side-catalog').toggleClass(\"fold\")\n    }))\n\n    /*\n     * Doc: https://github.com/davist11/jQuery-One-Page-Nav\n     * Fork by Hux to support padding\n     */\n    async(\"/js/jquery.nav.js\", function () {\n        $('.catalog-body').onePageNav({\n            currentClass: \"active\",\n            changeHash: !1,\n            easing: \"swing\",\n            filter: \"\",\n            scrollSpeed: 700,\n            scrollOffset: 0,\n            scrollThreshold: .2,\n            begin: null,\n            end: null,\n            scrollChange: null,\n            padding: 80\n        });\n    });\n</script>\n\n\n\n<!-- Multi-Lingual -->\n\n\n<!-- Simple Jekyll Search -->\n<script>\n    // https://stackoverflow.com/questions/1912501/unescape-html-entities-in-javascript\n    function htmlDecode(input) {\n        var e = document.createElement('textarea');\n        e.innerHTML = input;\n        // handle case of empty input\n        return e.childNodes.length === 0 ? \"\" : e.childNodes[0].nodeValue;\n    }\n\n    SimpleJekyllSearch({\n        searchInput: document.getElementById('search-input'),\n        resultsContainer: document.getElementById('search-results'),\n        json: '/search.json',\n        searchResultTemplate: '<div class=\"post-preview item\"><a href=\"{url}\"><h2 class=\"post-title\">{title}</h2><h3 class=\"post-subtitle\">{subtitle}</h3><hr></a></div>',\n        noResultsText: 'No results',\n        limit: 50,\n        fuzzy: false,\n        // a hack to get escaped subtitle unescaped. for some reason, \n        // post.subtitle w/o escape filter nuke entire search.\n        templateMiddleware: function (prop, value, template) {\n            if (prop === 'subtitle' || prop === 'title') {\n                if (value.indexOf(\"code\")) {\n                    return htmlDecode(value);\n                } else {\n                    return value;\n                }\n            }\n        }\n    });\n\n    $(document).ready(function () {\n        var $searchPage = $('.search-page');\n        var $searchOpen = $('.search-icon');\n        var $searchClose = $('.search-icon-close');\n        var $searchInput = $('#search-input');\n        var $body = $('body');\n\n        $searchOpen.on('click', function (e) {\n            e.preventDefault();\n            $searchPage.toggleClass('search-active');\n            var prevClasses = $body.attr('class') || '';\n            setTimeout(function () {\n                $body.addClass('no-scroll');\n            }, 400)\n\n            if ($searchPage.hasClass('search-active')) {\n                $searchClose.on('click', function (e) {\n                    e.preventDefault();\n                    $searchPage.removeClass('search-active');\n                    $body.attr('class', prevClasses);  // from closure \n                });\n                $searchInput.focus();\n            }\n        });\n    });\n</script>\n\n\n<!-- Image to hack wechat -->\n<img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\" />\n<!-- Migrate from head to bottom, no longer block render and still work -->\n\n</body>\n\n</html>\n","excerpt":"<h2 id=\"1-背景\">1 背景</h2>\n","url":"/2023/11/08/%E6%9E%84%E5%BB%BA%E6%B5%81%E6%B0%B4%E7%BA%BF%E5%AE%9E%E8%B7%B5/","next":{"id":"/2024/01/08/ios","tags":[],"relative_path":"_posts/2024-01-08-ios.md","collection":"posts","content":"<h1 id=\"1背景\">1.背景</h1>\n\n<p>​\t组件化过程中，有一些重复/高频的问题需要解决，倘若手动解决会带来重复劳动的时间损失，以及没有沉淀的效率损失，为了避免上述损失，沉淀一些工具分享。</p>\n\n<h1 id=\"2组件化工具介绍\">2.组件化工具介绍</h1>\n\n<h2 id=\"21-xcode编译错误解决工具\">2.1 Xcode编译错误解决工具</h2>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#!/bin/bash</span>\n\n<span class=\"c\"># [背景]</span>\n<span class=\"c\"># 组件化过程中，经常出现以下编译错误：</span>\n<span class=\"c\"># Build service could not create build operation: unknown error while handling message: MsgHandlingError(message: \"unable to initiate PIF transfer session (operation in progress?)\")</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># author: PaysonChen</span>\n<span class=\"c\"># [目的]</span>\n<span class=\"c\"># 为解决上述错误，需要清理构建索引目录并重启xcode，由于操作重复，考虑抽出shell脚本</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [目录]</span>\n<span class=\"c\">#   - auto_clean.sh</span>\n<span class=\"c\"># [说明]</span>\n<span class=\"c\"># 1、CD[指定xcode构建索引目录]目录</span>\n<span class=\"c\"># 2、递归删除当前文件下所有文件</span>\n<span class=\"c\"># 3、重启xcode</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [参数]</span>\n<span class=\"c\"># 1、参数1，指定xcode构建索引目录</span>\n<span class=\"c\"># 1、参数2，指定要打开的Xcode项目目</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [调用说明]</span>\n<span class=\"c\"># 1、未指定目录，则取当前目录：sh auto_clean.sh</span>\n<span class=\"c\"># 2、指定目录：sh auto_clean.sh /xcode构建索引目录/ /要打开的Xcode项目目录/</span>\n\n<span class=\"c\">#获取当前用户名</span>\n<span class=\"nv\">user_name</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">whoami</span><span class=\"si\">)</span>\n\n<span class=\"nb\">export </span><span class=\"nv\">XcodeDerivedDataPath</span><span class=\"o\">=</span>/Users/<span class=\"nv\">$user_name</span>/Library/Developer/Xcode/DerivedData\n<span class=\"nb\">export </span><span class=\"nv\">XcodeWorkspacePath</span><span class=\"o\">=</span>/Applications/Xcode.app\n\n<span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$1</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n    </span><span class=\"nb\">echo</span> <span class=\"s1\">'///入参1为空，使用默认xcode构建索引目录:'</span><span class=\"k\">${</span><span class=\"nv\">XcodeDerivedDataPath</span><span class=\"k\">}</span>\n<span class=\"k\">else\n    </span><span class=\"nv\">XcodeDerivedDataPath</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'///入参1不为空，xcode构建索引目录:'</span><span class=\"k\">${</span><span class=\"nv\">XcodeDerivedDataPath</span><span class=\"k\">}</span>\n<span class=\"k\">fi\n\nif</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$2</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n    </span><span class=\"nb\">echo</span> <span class=\"s1\">'///入参2为空，使用默认xcode项目目录:'</span><span class=\"k\">${</span><span class=\"nv\">XcodeWorkspacePath</span><span class=\"k\">}</span>\n<span class=\"k\">else\n    </span><span class=\"nv\">XcodeWorkspacePath</span><span class=\"o\">=</span><span class=\"nv\">$2</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'///入参2不为空，xcode项目目录:'</span><span class=\"k\">${</span><span class=\"nv\">XcodeWorkspacePath</span><span class=\"k\">}</span>\n<span class=\"k\">fi</span>\n\n<span class=\"c\">#cd到xcode构建索引目录</span>\n<span class=\"nb\">cd</span>  <span class=\"nv\">$XcodeDerivedDataPath</span>\n\n<span class=\"nv\">exit_status</span><span class=\"o\">=</span><span class=\"nv\">$?</span>\n\n<span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nv\">$exit_status</span> <span class=\"nt\">-ne</span> 0 <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n    </span><span class=\"nb\">echo</span> <span class=\"s1\">'///切换目录失败:'</span><span class=\"k\">${</span><span class=\"nv\">XcodeDerivedDataPath</span><span class=\"k\">}</span>\n    <span class=\"nb\">exit</span> <span class=\"nt\">-1</span>\n<span class=\"k\">else\n    </span><span class=\"nb\">echo</span> <span class=\"s1\">'///切换目录成功:'</span><span class=\"k\">${</span><span class=\"nv\">XcodeDerivedDataPath</span><span class=\"k\">}</span>\n<span class=\"k\">fi</span>\n\n<span class=\"c\">#删除当前目录所有构件索引</span>\n<span class=\"nb\">rm</span> <span class=\"nt\">-rf</span> <span class=\"k\">*</span>\n\n<span class=\"c\">#重启xcode</span>\nkillall Xcode\n\n<span class=\"c\">#休眠一下，不然可能导致重启失败</span>\n<span class=\"nb\">sleep </span>0.1\n\n<span class=\"c\">#重启项目工程</span>\nopen <span class=\"nv\">$XcodeWorkspacePath</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h2 id=\"22-私有组件批量更新工具\">2.2 私有组件批量更新工具</h2>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#!/bin/bash</span>\n\n<span class=\"c\"># 遍历更新当前目录下，子目录git仓库的脚本</span>\n<span class=\"c\"># author: PaysonChen</span>\n<span class=\"c\"># [目的]</span>\n<span class=\"c\"># 组件化建设过程及后续的协同开发中，经常碰到团队人员更新组件库代码及主工程，主工程容易更新，但是随着pod库的增多，每次更新组件库仓库的重复劳动需要被改进</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [目录]</span>\n<span class=\"c\">#   - auto_update_git.sh.sh 遍历更新当前目录下，子目录git仓库的脚本</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [说明]</span>\n<span class=\"c\"># 1、遍历指定目录（若未传参数则为当前目录）下的子目录</span>\n<span class=\"c\"># 2、cd 到子目录</span>\n<span class=\"c\"># 3、检查当前分支</span>\n<span class=\"c\"># 4、拉取远端当前分支</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [参数]</span>\n<span class=\"c\"># 1、参数1，指定目录</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [调用说明]</span>\n<span class=\"c\"># 1、未指定目录，则取当前目录：sh auto_update_git.sh</span>\n<span class=\"c\"># 2、指定目录：sh auto_update_git.sh /User/xxx/xx</span>\n\n\n<span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$1</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n    </span><span class=\"nb\">export </span><span class=\"nv\">dist_path</span><span class=\"o\">=</span><span class=\"k\">*</span>/\n    <span class=\"nb\">echo</span> <span class=\"s1\">'///指定目录 为空:'</span><span class=\"k\">${</span><span class=\"nv\">dist_path</span><span class=\"k\">}</span>\n<span class=\"k\">else\n    </span><span class=\"nb\">export </span><span class=\"nv\">dist_path</span><span class=\"o\">=</span><span class=\"nv\">$1</span>/<span class=\"k\">*</span>/\n    <span class=\"nb\">echo</span> <span class=\"s1\">'///指定目录 不为空:'</span><span class=\"k\">${</span><span class=\"nv\">dist_path</span><span class=\"k\">}</span>\n<span class=\"k\">fi</span>\n    \n<span class=\"c\"># 遍历指定目录的子目录</span>\n<span class=\"k\">for </span><span class=\"nb\">dir </span><span class=\"k\">in</span> <span class=\"k\">${</span><span class=\"nv\">dist_path</span><span class=\"k\">}</span><span class=\"p\">;</span> <span class=\"k\">do\n  </span><span class=\"nb\">cd</span> <span class=\"s2\">\"</span><span class=\"nv\">$dir</span><span class=\"s2\">\"</span>  <span class=\"c\"># 进入子目录</span>\n  <span class=\"nb\">echo</span> <span class=\"s1\">'///进入子目录:'</span><span class=\"k\">${</span><span class=\"nv\">dir</span><span class=\"k\">}</span>\n\n  <span class=\"c\"># 检查是否是git仓库</span>\n  <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-d</span> .git <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n    </span><span class=\"nb\">echo</span> <span class=\"s2\">\"Updating git repository in </span><span class=\"nv\">$dir</span><span class=\"s2\">\"</span>\n    <span class=\"nv\">current_branch</span><span class=\"o\">=</span><span class=\"sb\">`</span>git branch <span class=\"nt\">--show-current</span><span class=\"sb\">`</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"current_branch is </span><span class=\"nv\">$current_branch</span><span class=\"s2\">\"</span>\n\n    git config pull.rebase <span class=\"nb\">false</span> <span class=\"c\"># 合并（缺省策略）</span>\n    git pull origin <span class=\"nv\">$current_branch</span>  <span class=\"c\"># 使用git pull命令更新git仓库</span>\n  <span class=\"k\">else\n    </span><span class=\"nb\">echo</span> <span class=\"s2\">\"Skipping non-git repository in </span><span class=\"nv\">$dir</span><span class=\"s2\">\"</span>\n  <span class=\"k\">fi\n\n  </span><span class=\"nb\">cd</span> ..  <span class=\"c\"># 返回上一级目录</span>\n<span class=\"k\">done</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h2 id=\"23-私有组件批量提交工具\">2.3 私有组件批量提交工具</h2>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#!/bin/bash</span>\n\n<span class=\"c\"># 遍历更新当前目录下，子目录git仓库的脚本</span>\n<span class=\"c\"># author: PaysonChen</span>\n<span class=\"c\"># [目的]</span>\n<span class=\"c\"># 组件化建设过程及后续的协同开发中，经常碰到团队人员更新组件库代码及主工程，主工程容易更新，但是随着pod库的增多，每次更新组件库仓库的重复劳动需要被改进</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [目录]</span>\n<span class=\"c\">#   - auto_commit_git.sh 遍历更新当前目录下，子目录git仓库的脚本</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [说明]</span>\n<span class=\"c\"># 1、遍历指定目录（若未传参数则为当前目录）下的子目录</span>\n<span class=\"c\"># 2、cd 到子目录</span>\n<span class=\"c\"># 3、检查当前分支</span>\n<span class=\"c\"># 4、提交修改</span>\n<span class=\"c\"># 5、commit 、push</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [参数]</span>\n<span class=\"c\"># 1、参数1，指定目录</span>\n<span class=\"c\"># 2、参数2，提交信息</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [调用说明]</span>\n<span class=\"c\"># 1、未指定目录，则取当前目录：sh auto_commit_git.sh</span>\n<span class=\"c\"># 2、指定目录：sh auto_commit_git.sh /User/xxx/xx \"提交信息\"</span>\n\n\n<span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$1</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n    </span><span class=\"nb\">export </span><span class=\"nv\">dist_path</span><span class=\"o\">=</span><span class=\"k\">*</span>/\n    <span class=\"nb\">echo</span> <span class=\"s1\">'///指定目录 为空:'</span><span class=\"k\">${</span><span class=\"nv\">dist_path</span><span class=\"k\">}</span>\n<span class=\"k\">else\n    </span><span class=\"nb\">export </span><span class=\"nv\">dist_path</span><span class=\"o\">=</span><span class=\"nv\">$1</span>/<span class=\"k\">*</span>/\n    <span class=\"nb\">echo</span> <span class=\"s1\">'///指定目录 不为空:'</span><span class=\"k\">${</span><span class=\"nv\">dist_path</span><span class=\"k\">}</span>\n<span class=\"k\">fi\n\n</span><span class=\"nb\">echo</span> <span class=\"s1\">'///指定:'</span><span class=\"nv\">$1</span>\n<span class=\"nb\">echo</span> <span class=\"s1\">'///指定:'</span><span class=\"nv\">$2</span>\n\n<span class=\"c\"># 遍历指定目录的子目录</span>\n<span class=\"k\">for </span><span class=\"nb\">dir </span><span class=\"k\">in</span> <span class=\"k\">${</span><span class=\"nv\">dist_path</span><span class=\"k\">}</span><span class=\"p\">;</span> <span class=\"k\">do\n  </span><span class=\"nb\">cd</span> <span class=\"s2\">\"</span><span class=\"nv\">$dir</span><span class=\"s2\">\"</span>  <span class=\"c\"># 进入子目录</span>\n  <span class=\"nb\">echo</span> <span class=\"s1\">'///进入子目录:'</span><span class=\"k\">${</span><span class=\"nv\">dir</span><span class=\"k\">}</span>\n\n  <span class=\"c\"># 检查是否是git仓库</span>\n  <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-d</span> .git <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n    </span><span class=\"nb\">echo</span> <span class=\"s2\">\"commiting git repository in </span><span class=\"nv\">$dir</span><span class=\"s2\">\"</span>\n    <span class=\"nv\">current_branch</span><span class=\"o\">=</span><span class=\"sb\">`</span>git branch <span class=\"nt\">--show-current</span><span class=\"sb\">`</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"current_branch is </span><span class=\"nv\">$current_branch</span><span class=\"s2\">\"</span>\n    \n    git add <span class=\"nb\">.</span>\n    <span class=\"nv\">msg</span><span class=\"o\">=</span><span class=\"s2\">\"\"</span>\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$2</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nv\">msg</span><span class=\"o\">=</span><span class=\"s2\">\"--update:更新代码\"</span>\n        <span class=\"nb\">echo</span> <span class=\"s1\">'///提交记录 为空:'</span><span class=\"nv\">$msg</span>\n    <span class=\"k\">else\n        </span><span class=\"nv\">msg</span><span class=\"o\">=</span><span class=\"nv\">$2</span>\n        <span class=\"nb\">echo</span> <span class=\"s1\">'///提交记录 不为空:'</span><span class=\"nv\">$msg</span>\n    <span class=\"k\">fi\n\n    </span>git commit <span class=\"nt\">-m</span> <span class=\"s2\">\"</span><span class=\"nv\">$msg</span><span class=\"s2\">\"</span>\n    git push <span class=\"nt\">-f</span> origin master\n  <span class=\"k\">else\n    </span><span class=\"nb\">echo</span> <span class=\"s2\">\"Skipping non-git repository in </span><span class=\"nv\">$dir</span><span class=\"s2\">\"</span>\n  <span class=\"k\">fi\n\n  </span><span class=\"nb\">cd</span> ..  <span class=\"c\"># 返回上一级目录</span>\n<span class=\"k\">done</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h2 id=\"24-私有组件批量发版工具\">2.4 私有组件批量发版工具</h2>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#!/bin/bash</span>\n\n<span class=\"c\"># 遍历当前目录下，私有库自动自增发版</span>\n<span class=\"c\"># author: PaysonChen</span>\n<span class=\"c\"># [目的]</span>\n<span class=\"c\"># 组件化建设过程及后续的协同开发中，有些全局修改需要统一发版</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [目录]</span>\n<span class=\"c\">#   - auto_publish_git.sh  遍历当前目录下，私有库自动自增发版</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [说明]</span>\n<span class=\"c\"># 1、遍历指定目录（若未传参数则为当前目录）下的子目录</span>\n<span class=\"c\"># 2、cd 到子目录</span>\n<span class=\"c\"># 3、检查当前分支</span>\n<span class=\"c\"># 4、自动发版</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [参数]</span>\n<span class=\"c\"># 1、参数1，指定目录</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [调用说明]</span>\n<span class=\"c\"># 1、未指定目录，则取当前目录：sh auto_publish_git.sh</span>\n<span class=\"c\"># 2、指定目录：sh auto_publish_git.sh /User/xxx/xx</span>\n\n\n<span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$1</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n    </span><span class=\"nb\">export </span><span class=\"nv\">dist_path</span><span class=\"o\">=</span><span class=\"k\">*</span>/\n    <span class=\"nb\">echo</span> <span class=\"s1\">'///指定目录 为空:'</span><span class=\"k\">${</span><span class=\"nv\">dist_path</span><span class=\"k\">}</span>\n<span class=\"k\">else\n    </span><span class=\"nb\">export </span><span class=\"nv\">dist_path</span><span class=\"o\">=</span><span class=\"nv\">$1</span>/<span class=\"k\">*</span>/\n    <span class=\"nb\">echo</span> <span class=\"s1\">'///指定目录 不为空:'</span><span class=\"k\">${</span><span class=\"nv\">dist_path</span><span class=\"k\">}</span>\n<span class=\"k\">fi</span>\n    \n<span class=\"c\"># 遍历指定目录的子目录</span>\n<span class=\"k\">for </span><span class=\"nb\">dir </span><span class=\"k\">in</span> <span class=\"k\">${</span><span class=\"nv\">dist_path</span><span class=\"k\">}</span><span class=\"p\">;</span> <span class=\"k\">do\n  </span><span class=\"nb\">cd</span> <span class=\"s2\">\"</span><span class=\"nv\">$dir</span><span class=\"s2\">\"</span>  <span class=\"c\"># 进入子目录</span>\n  <span class=\"nb\">echo</span> <span class=\"s1\">'///进入子目录:'</span><span class=\"k\">${</span><span class=\"nv\">dir</span><span class=\"k\">}</span>\n\n  <span class=\"c\"># 检查是否是git仓库</span>\n  <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-d</span> .git <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n    </span><span class=\"nb\">echo</span> <span class=\"s2\">\"Updating git repository in </span><span class=\"nv\">$dir</span><span class=\"s2\">\"</span>\n    <span class=\"nv\">current_branch</span><span class=\"o\">=</span><span class=\"sb\">`</span>git branch <span class=\"nt\">--show-current</span><span class=\"sb\">`</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"current_branch is </span><span class=\"nv\">$current_branch</span><span class=\"s2\">\"</span>\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$2</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">echo</span> <span class=\"s2\">\"tag 为空，采用自增tag\"</span>\n        pod push\n    <span class=\"k\">else\n        </span><span class=\"nb\">echo</span> <span class=\"s2\">\"tag 不为空，tag=\"</span><span class=\"nv\">$2</span>\n        pod push <span class=\"nv\">$2</span>\n    <span class=\"k\">fi\n  else\n    </span><span class=\"nb\">echo</span> <span class=\"s2\">\"Skipping non-git repository in </span><span class=\"nv\">$dir</span><span class=\"s2\">\"</span>\n  <span class=\"k\">fi\n\n  </span><span class=\"nb\">cd</span> ..  <span class=\"c\"># 返回上一级目录</span>\n<span class=\"k\">done</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>其中 pod push 依赖于cocapods插件（计划在后续文章中讲解）</p>\n\n<h2 id=\"25-私有组件批量发版工具-优化\">2.5 私有组件批量发版工具-优化</h2>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#!/bin/bash</span>\n\n<span class=\"c\"># 遍历当前目录下，当最新提交不是Tag记录时（即有需要发版）才进行的私有库自动自增发版</span>\n<span class=\"c\"># author: PaysonChen</span>\n<span class=\"c\"># [目的]</span>\n<span class=\"c\"># 组件化建设过程及后续的协同开发中，有些全局修改需要统一发版</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [目录]</span>\n<span class=\"c\">#   - auto_tag_if_need_git.sh  遍历当前目录下，私有库根据是否需要发版的逻辑进行自动自增发版</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [说明]</span>\n<span class=\"c\"># 1、遍历指定目录（若未传参数则为当前目录）下的子目录</span>\n<span class=\"c\"># 2、cd 到子目录</span>\n<span class=\"c\"># 3、检查当前分支</span>\n<span class=\"c\"># 4、自动发版</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [参数]</span>\n<span class=\"c\"># 1、参数1，指定目录</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [调用说明]</span>\n<span class=\"c\"># 1、未指定目录，则取当前目录：sh auto_tag_if_need_git.sh</span>\n<span class=\"c\"># 2、指定目录：sh auto_tag_if_need_git.sh /User/xxx/xx</span>\n\n\n<span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$1</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n    </span><span class=\"nb\">export </span><span class=\"nv\">dist_path</span><span class=\"o\">=</span><span class=\"k\">*</span>/\n    <span class=\"nb\">echo</span> <span class=\"s1\">'///指定目录 为空:'</span><span class=\"k\">${</span><span class=\"nv\">dist_path</span><span class=\"k\">}</span>\n<span class=\"k\">else\n    </span><span class=\"nb\">export </span><span class=\"nv\">dist_path</span><span class=\"o\">=</span><span class=\"nv\">$1</span>/<span class=\"k\">*</span>/\n    <span class=\"nb\">echo</span> <span class=\"s1\">'///指定目录 不为空:'</span><span class=\"k\">${</span><span class=\"nv\">dist_path</span><span class=\"k\">}</span>\n<span class=\"k\">fi\n\n\nfunction </span>get_tag<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"nv\">latest_tag</span><span class=\"o\">=</span><span class=\"si\">$(</span>git describe <span class=\"nt\">--exact-match</span> <span class=\"nt\">--tags</span> <span class=\"si\">$(</span>git log <span class=\"nt\">-n1</span> <span class=\"nt\">--pretty</span><span class=\"o\">=</span><span class=\"s1\">'%h'</span><span class=\"si\">)</span> 2&gt;/dev/null<span class=\"si\">)</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">latest_tag</span><span class=\"k\">}</span><span class=\"s2\">\"</span>\n<span class=\"o\">}</span>\n\n<span class=\"k\">function </span>push_if_need<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"k\">if </span>git describe <span class=\"nt\">--exact-match</span> <span class=\"nt\">--tags</span> <span class=\"si\">$(</span>git log <span class=\"nt\">-n1</span> <span class=\"nt\">--pretty</span><span class=\"o\">=</span><span class=\"s1\">'%h'</span><span class=\"si\">)</span> <span class=\"o\">&gt;</span>/dev/null 2&gt;&amp;1<span class=\"p\">;</span> <span class=\"k\">then\n        \n        </span><span class=\"nv\">latest_tag</span><span class=\"o\">=</span><span class=\"si\">$(</span>get_tag<span class=\"si\">)</span>\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"[push_if_need]:最新提交是一个标签（</span><span class=\"k\">${</span><span class=\"nv\">latest_tag</span><span class=\"k\">}</span><span class=\"s2\">）</span><span class=\"nv\">$1</span><span class=\"s2\">。\"</span>\n        <span class=\"k\">return </span>0\n    <span class=\"k\">else\n        </span><span class=\"nv\">latest_tag</span><span class=\"o\">=</span><span class=\"si\">$(</span>get_tag<span class=\"si\">)</span>\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"[push_if_need]:最新提交不是标签（</span><span class=\"k\">${</span><span class=\"nv\">latest_tag</span><span class=\"k\">}</span><span class=\"s2\">）</span><span class=\"nv\">$1</span><span class=\"s2\">。\"</span>\n        pod push\n        <span class=\"nv\">latest_tag</span><span class=\"o\">=</span><span class=\"si\">$(</span>get_tag<span class=\"si\">)</span>\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"[push_if_need]:打包后的标签（</span><span class=\"k\">${</span><span class=\"nv\">latest_tag</span><span class=\"k\">}</span><span class=\"s2\">）</span><span class=\"nv\">$1</span><span class=\"s2\">。\"</span>\n        <span class=\"k\">return </span>1\n    <span class=\"k\">fi</span>\n<span class=\"o\">}</span>\n    \n<span class=\"c\"># 遍历指定目录的子目录</span>\n<span class=\"nv\">allTaged</span><span class=\"o\">=</span><span class=\"s2\">\"\"</span>\n\n<span class=\"k\">for </span><span class=\"nb\">dir </span><span class=\"k\">in</span> <span class=\"k\">${</span><span class=\"nv\">dist_path</span><span class=\"k\">}</span><span class=\"p\">;</span> <span class=\"k\">do\n  </span><span class=\"nb\">cd</span> <span class=\"s2\">\"</span><span class=\"nv\">$dir</span><span class=\"s2\">\"</span>  <span class=\"c\"># 进入子目录</span>\n  <span class=\"nb\">echo</span> <span class=\"s1\">'///进入子目录:'</span><span class=\"k\">${</span><span class=\"nv\">dir</span><span class=\"k\">}</span>\n\n  <span class=\"c\"># 检查是否是git仓库</span>\n  <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-d</span> .git <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n    </span><span class=\"nv\">result</span><span class=\"o\">=</span><span class=\"nb\">false\n    echo</span> <span class=\"s2\">\"Updating git repository in </span><span class=\"nv\">$dir</span><span class=\"s2\">\"</span>\n    <span class=\"nv\">current_branch</span><span class=\"o\">=</span><span class=\"sb\">`</span>git branch <span class=\"nt\">--show-current</span><span class=\"sb\">`</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"current_branch is </span><span class=\"nv\">$current_branch</span><span class=\"s2\">\"</span>\n    \n    git config pull.rebase <span class=\"nb\">false</span> <span class=\"c\"># 合并（缺省策略）</span>\n    git pull origin <span class=\"nv\">$current_branch</span>  <span class=\"c\"># 使用git pull命令更新git仓库</span>\n\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$2</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">echo</span> <span class=\"s2\">\"tag 为空，采用自增tag\"</span>\n<span class=\"c\">#        pod push</span>\n        push_if_need <span class=\"nv\">$dir</span>\n        <span class=\"nv\">result</span><span class=\"o\">=</span><span class=\"nv\">$?</span>\n    \n    <span class=\"k\">else\n        </span><span class=\"nb\">echo</span> <span class=\"s2\">\"tag 不为空，全量发版tag=\"</span><span class=\"nv\">$2</span>\n        pod push <span class=\"nv\">$2</span>\n    <span class=\"k\">fi\n\n\n    if</span> <span class=\"o\">[</span> <span class=\"nv\">$result</span> <span class=\"nt\">-eq</span> 1 <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then</span>\n<span class=\"c\">#        tmp=$allTaged</span>\n        <span class=\"nv\">latest_tag</span><span class=\"o\">=</span><span class=\"si\">$(</span>get_tag<span class=\"si\">)</span>\n\n        <span class=\"nv\">allTaged</span><span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"nv\">$allTaged</span><span class=\"s2\"> </span><span class=\"nv\">$dir$latest_tag</span><span class=\"s2\">\"</span>\n<span class=\"c\">#        echo \"变量是 true。\"$dir</span>\n<span class=\"c\">#        echo \"变量是 true。\"$tmp</span>\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"变量是 true。\"</span><span class=\"nv\">$allTaged</span>\n\n    <span class=\"k\">else\n        </span><span class=\"nb\">echo</span> <span class=\"s2\">\"变量是 false。\"</span>\n    <span class=\"k\">fi\n\n\n  else\n    </span><span class=\"nb\">echo</span> <span class=\"s2\">\"Skipping non-git repository in </span><span class=\"nv\">$dir</span><span class=\"s2\">\"</span>\n  <span class=\"k\">fi\n\n  </span><span class=\"nb\">cd</span> ..  <span class=\"c\"># 返回上一级目录</span>\n<span class=\"k\">done\n\n</span><span class=\"nb\">echo</span> <span class=\"s2\">\"------------------------\"</span>\n<span class=\"nb\">echo</span> <span class=\"s2\">\"allTaged（进行发版的所有组件）： = \"</span><span class=\"nv\">$allTaged</span>\n<span class=\"nb\">echo</span> <span class=\"s2\">\"------------------------\"</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h1 id=\"3其他工具介绍\">3.其他工具介绍</h1>\n\n<h2 id=\"31-删除注释掉的import工具\">3.1 删除注释掉的#import工具</h2>\n\n<pre><code class=\"language-objective-c\">//#import \"xxx.h\"\n</code></pre>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#!/bin/bash</span>\n\n<span class=\"c\"># 遍历指定目录下的类删除注释掉的import代码行的脚本</span>\n<span class=\"c\"># author: PaysonChen</span>\n<span class=\"c\"># [目的]</span>\n<span class=\"c\"># 工程阶段性整理无用import（注释掉）</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [目录]</span>\n<span class=\"c\">#   - delete_unused_import_annotation.sh</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [说明]</span>\n<span class=\"c\"># 1、遍历指定目录</span>\n<span class=\"c\"># 2、检索代码行</span>\n<span class=\"c\"># 3、符合给定条件：//import</span>\n<span class=\"c\"># 4、删除代码行</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [参数]</span>\n<span class=\"c\"># 1、参数1，指定目录</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [调用说明]</span>\n<span class=\"c\"># 1 调用示例：sh delete_unused_import_annotation.sh your_path</span>\n\n\nfind <span class=\"nv\">$1</span> <span class=\"nt\">-type</span> f <span class=\"se\">\\(</span> <span class=\"nt\">-name</span> <span class=\"s2\">\"*.h\"</span> <span class=\"nt\">-o</span> <span class=\"nt\">-name</span> <span class=\"s2\">\"*.m\"</span> <span class=\"se\">\\)</span> <span class=\"nt\">-exec</span> <span class=\"nb\">sed</span> <span class=\"nt\">-i</span> <span class=\"s1\">''</span> <span class=\"s1\">'/\\/\\/#import/d'</span> <span class=\"o\">{}</span> <span class=\"se\">\\;</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h2 id=\"32-未被引用的类文件清理工具\">3.2 未被引用的类文件清理工具</h2>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#!/bin/bash</span>\n\n<span class=\"c\"># [背景]</span>\n<span class=\"c\"># 基础组件拆分到一定程度时，主工程剩下的就多数与视图界面(vc、view等)相关的类文件。此时可以考虑对业务组件进行设计和规划，但是在此时，工程还存在如下问题：</span>\n<span class=\"c\"># 冗余文件：</span>\n<span class=\"c\">#   未被引用到Project，但存在在工程目录中的冗余的类文件</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># author: PaysonChen</span>\n<span class=\"c\"># [目的]</span>\n<span class=\"c\"># 为了减轻业务组件的工作量和复杂度，在此之前最好能净化/清理一下工程</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [目录]</span>\n<span class=\"c\">#   - find_all_file_no_project.sh</span>\n<span class=\"c\"># [说明]</span>\n<span class=\"c\"># 1、通过递归遍历工程目录，将遍历后的类名逐一与XXX.xcodeproj/project.pbxproj 文件内容进行匹配</span>\n<span class=\"c\"># 2、匹配不成功则输出文件列表</span>\n<span class=\"c\"># 3、【人工】对文件列表一一检查，确认是冗余文件则从工程中删除</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [参数]</span>\n<span class=\"c\"># 1、参数1，指定xcode工程自身的主工程类所在目录，而非project所在的目录</span>\n<span class=\"c\">#   例如 XXX/ProjectName/ProjectName.xcodeproj/project.pbxproj</span>\n<span class=\"c\">#       XXX/ProjectName/ProjectName/AppDelegate.h</span>\n<span class=\"c\">#   需要传入的是下面这地址：</span>\n<span class=\"c\">#       XXX/ProjectName/ProjectName</span>\n<span class=\"c\"># [调用说明]</span>\n<span class=\"c\"># 1、未指定目录，则取当前目录：sh find_all_file_no_project.sh</span>\n<span class=\"c\"># 2、指定目录：sh find_all_file_no_project.sh /Users/xxxxx/Project-IOS/ProjectName/ProjectName</span>\n\n\n<span class=\"c\">#!/bin/bash</span>\n\n<span class=\"k\">function </span>main<span class=\"o\">()</span> <span class=\"o\">{</span>\n    \n    <span class=\"c\"># 设置项目目录</span>\n    <span class=\"nv\">project_directory</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$1</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then</span>\n        <span class=\"c\">#未传参为当前目录</span>\n        <span class=\"nv\">project_directory</span><span class=\"o\">=</span><span class=\"nb\">.</span>\n    <span class=\"k\">fi</span>\n\n    <span class=\"c\"># 设置其他目录</span>\n    <span class=\"nv\">parent_path</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">dirname</span> <span class=\"s2\">\"</span><span class=\"nv\">$project_directory</span><span class=\"s2\">\"</span><span class=\"si\">)</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"project 路径：\"</span><span class=\"nv\">$parent_path</span>\n    \n    <span class=\"nv\">current_dir</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">basename</span> <span class=\"s2\">\"</span><span class=\"nv\">$project_directory</span><span class=\"s2\">\"</span><span class=\"si\">)</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"当前路径 文件夹名称：\"</span><span class=\"nv\">$current_dir</span>\n\n    \n    <span class=\"nv\">project_path</span><span class=\"o\">=</span><span class=\"si\">$(</span>find <span class=\"s2\">\"</span><span class=\"nv\">$parent_path</span><span class=\"s2\">\"</span>/<span class=\"nv\">$current_dir</span>.xcodeproj <span class=\"nt\">-type</span> f <span class=\"se\">\\(</span> <span class=\"nt\">-name</span> <span class=\"s2\">\"*.pbxproj\"</span> <span class=\"se\">\\)</span><span class=\"si\">)</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"project 路径：\"</span><span class=\"nv\">$project_path</span>\n\n    <span class=\"nv\">all_file_path</span><span class=\"o\">=</span><span class=\"si\">$(</span>find <span class=\"s2\">\"</span><span class=\"nv\">$project_directory</span><span class=\"s2\">\"</span> <span class=\"nt\">-type</span> f <span class=\"se\">\\(</span> <span class=\"nt\">-name</span> <span class=\"s2\">\"*.h\"</span> <span class=\"se\">\\)</span><span class=\"si\">)</span>\n    <span class=\"nv\">all_file_path_cnt</span><span class=\"o\">=</span><span class=\"si\">$(</span>find <span class=\"s2\">\"</span><span class=\"nv\">$project_directory</span><span class=\"s2\">\"</span> <span class=\"nt\">-type</span> f <span class=\"se\">\\(</span> <span class=\"nt\">-name</span> <span class=\"s2\">\"*.h\"</span> <span class=\"se\">\\)</span> | <span class=\"nb\">wc</span> <span class=\"nt\">-l</span><span class=\"si\">)</span>\n\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"主工程 头文件数量：\"</span><span class=\"nv\">$all_file_path_cnt</span>\n\n    <span class=\"k\">for </span>src_file <span class=\"k\">in</span> <span class=\"nv\">$all_file_path</span><span class=\"p\">;</span> <span class=\"k\">do</span>\n    <span class=\"c\">#    echo $src_file</span>\n        <span class=\"nv\">filename</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">basename</span> <span class=\"s2\">\"</span><span class=\"nv\">$src_file</span><span class=\"s2\">\"</span> .h<span class=\"si\">)</span>\n        <span class=\"k\">if</span>  <span class=\"o\">!</span> <span class=\"nb\">grep</span> <span class=\"nt\">-q</span> <span class=\"s2\">\"</span><span class=\"se\">\\b</span><span class=\"nv\">$filename</span><span class=\"se\">\\b</span><span class=\"s2\">\"</span> <span class=\"s2\">\"</span><span class=\"nv\">$project_path</span><span class=\"s2\">\"</span><span class=\"p\">;</span>  <span class=\"k\">then\n            </span><span class=\"nb\">echo</span> <span class=\"s2\">\"project不包含：\"</span><span class=\"nv\">$src_file</span>\n        <span class=\"k\">fi\n    done</span>\n<span class=\"o\">}</span>\n\n\nmain <span class=\"nv\">$1</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h2 id=\"33-未被使用的类文件清理工具\">3.3 未被使用的类文件清理工具</h2>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#!/bin/bash</span>\n\n<span class=\"c\"># [背景]</span>\n<span class=\"c\"># 基础组件拆分到一定程度时，主工程剩下的就多数与视图界面(vc、view等)相关的类文件。此时可以考虑对业务组件进行设计和规划，但是在此时，工程还存在如下问题：</span>\n<span class=\"c\">#    冗余文件：</span>\n<span class=\"c\">#    非冗余但未被使用的文件</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># author: PaysonChen</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [目的]</span>\n<span class=\"c\"># 此脚本解决 \"非冗余但未被使用的文件\" 的清理</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [目录]</span>\n<span class=\"c\">#   - find_unused_class.sh</span>\n<span class=\"c\"># [说明]</span>\n<span class=\"c\"># 1 遍历工程目录的所有实现类：.m文件（不包含category）</span>\n<span class=\"c\"># 2 将类名与工程内除自身以外所有文件进行进逐行匹配（包含category）</span>\n<span class=\"c\"># 3 当匹配到不包含// 与 #import 开头的行，则算为有引用，否则为未引用</span>\n<span class=\"c\"># 4 将未匹配到的文件路径进行输出</span>\n<span class=\"c\"># 5 将上述匹配出来的文件先进行移除，再执行一遍（由于第一层被移除，可能会暴露出更多没被引用的类）</span>\n<span class=\"c\"># 6 直到没有匹配到未被调用的类为止</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [参数]</span>\n<span class=\"c\"># 1、参数1，指定xcode工程目录 （未指定则为当前目录）</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [调用说明]</span>\n<span class=\"c\"># 1、未指定目录，则取当前目录：sh find_unused_class.sh</span>\n<span class=\"c\"># 2、指定目录 ：sh find_unused_class.sh /Users/xxxxx/ProjectName-IOS/ProjectName/ProjectName</span>\n\n\n<span class=\"c\">#!/bin/bash</span>\n\n<span class=\"c\">#是否重复执行到没有找到不可用文件</span>\n<span class=\"nb\">export </span><span class=\"nv\">cycle_deal</span><span class=\"o\">=</span>1\n<span class=\"nb\">export </span><span class=\"nv\">cycle_idx</span><span class=\"o\">=</span>1\n<span class=\"nv\">total_unused_file_name</span><span class=\"o\">=</span><span class=\"s1\">''</span>\n<span class=\"k\">function </span>main<span class=\"o\">()</span> <span class=\"o\">{</span>\n    \n    <span class=\"c\"># 设置项目目录</span>\n    <span class=\"nv\">project_directory</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$1</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then</span>\n        <span class=\"c\">#未传参为当前目录</span>\n        <span class=\"nv\">project_directory</span><span class=\"o\">=</span><span class=\"nb\">.</span>\n    <span class=\"k\">fi</span>\n\n    <span class=\"c\">#初始化参数：</span>\n    <span class=\"nv\">unused_files</span><span class=\"o\">=</span><span class=\"s1\">''</span>\n\n    <span class=\"c\"># 查找所有以ViewController.m结尾的文件并输出列表</span>\n    <span class=\"nv\">all_class_path</span><span class=\"o\">=</span><span class=\"si\">$(</span>find <span class=\"s2\">\"</span><span class=\"nv\">$project_directory</span><span class=\"s2\">\"</span> <span class=\"nt\">-type</span> f <span class=\"se\">\\(</span> <span class=\"nt\">-name</span> <span class=\"s2\">\"*.m\"</span> <span class=\"se\">\\)</span> | <span class=\"nb\">grep</span> <span class=\"nt\">-v</span> <span class=\"s1\">'+'</span><span class=\"si\">)</span>\n\n    <span class=\"nv\">all_file_path</span><span class=\"o\">=</span><span class=\"si\">$(</span>find <span class=\"s2\">\"</span><span class=\"nv\">$project_directory</span><span class=\"s2\">\"</span> <span class=\"nt\">-type</span> f <span class=\"se\">\\(</span> <span class=\"nt\">-name</span> <span class=\"s2\">\"*.m\"</span> <span class=\"nt\">-o</span> <span class=\"nt\">-name</span> <span class=\"s2\">\"*.h\"</span> <span class=\"se\">\\)</span> <span class=\"si\">)</span>\n\n    <span class=\"nv\">file_cnt</span><span class=\"o\">=</span>0\n    <span class=\"k\">for </span>file <span class=\"k\">in</span> <span class=\"nv\">$all_class_path</span><span class=\"p\">;</span> <span class=\"k\">do\n        </span><span class=\"nv\">file_cnt</span><span class=\"o\">=</span><span class=\"k\">$((</span>file_cnt+1<span class=\"k\">))</span>\n    <span class=\"k\">done\n    </span><span class=\"nb\">echo</span> <span class=\"s2\">\"*******file_cnt：\"</span><span class=\"nv\">$file_cnt</span>\n\n\n    <span class=\"k\">for </span>file <span class=\"k\">in</span> <span class=\"nv\">$all_class_path</span><span class=\"p\">;</span> <span class=\"k\">do\n        </span><span class=\"nv\">filename</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">basename</span> <span class=\"s2\">\"</span><span class=\"nv\">$file</span><span class=\"s2\">\"</span> .m<span class=\"si\">)</span>\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"***********开始遍历文件名：\"</span><span class=\"nv\">$filename</span>\n        <span class=\"nv\">is_referenced</span><span class=\"o\">=</span><span class=\"nb\">false\n        </span><span class=\"k\">for </span>other_file <span class=\"k\">in</span> <span class=\"nv\">$all_file_path</span><span class=\"p\">;</span> <span class=\"k\">do\n            </span><span class=\"nv\">other_file_name</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">basename</span> <span class=\"s2\">\"</span><span class=\"nv\">$other_file</span><span class=\"s2\">\"</span><span class=\"si\">)</span>\n            <span class=\"c\">#获取除自身以外的类名：不包含拓展的名称，为了避免在自身的.h .m进行引用判断</span>\n            <span class=\"nv\">other_file_name_without_extension</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">echo</span> <span class=\"s2\">\"</span><span class=\"nv\">$other_file_name</span><span class=\"s2\">\"</span> | <span class=\"nb\">cut</span> <span class=\"nt\">-d</span><span class=\"nb\">.</span> <span class=\"nt\">-f1</span><span class=\"si\">)</span>\n            <span class=\"c\">#获取category的主类名称</span>\n            <span class=\"nv\">other_file_name_without_extension_before_plus</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">echo</span> <span class=\"s2\">\"</span><span class=\"nv\">$other_file_name_without_extension</span><span class=\"s2\">\"</span> | <span class=\"nb\">awk</span> <span class=\"nt\">-F</span><span class=\"s1\">'+'</span> <span class=\"s1\">'{print $1}'</span><span class=\"si\">)</span>\n            <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"s2\">\"</span><span class=\"nv\">$other_file_name_without_extension_before_plus</span><span class=\"s2\">\"</span> <span class=\"o\">!=</span> <span class=\"s2\">\"</span><span class=\"nv\">$filename</span><span class=\"s2\">\"</span> <span class=\"o\">]</span> <span class=\"p\">;</span> <span class=\"k\">then</span>\n            <span class=\"c\"># if [ \"$other_file\" != \"$file\" ] &amp;&amp; ([ \"${other_file##*.}\" = \"m\" ] ); then</span>\n                <span class=\"k\">if </span><span class=\"nb\">grep</span> <span class=\"nt\">-q</span> <span class=\"s2\">\"</span><span class=\"se\">\\b</span><span class=\"nv\">$filename</span><span class=\"se\">\\b</span><span class=\"s2\">\"</span> <span class=\"s2\">\"</span><span class=\"nv\">$other_file</span><span class=\"s2\">\"</span><span class=\"p\">;</span>  <span class=\"k\">then</span>\n                    <span class=\"c\"># 检查文件中是否有注释行</span>\n                    <span class=\"nv\">has_comment</span><span class=\"o\">=</span><span class=\"nb\">false\n                    </span><span class=\"k\">while </span><span class=\"nv\">IFS</span><span class=\"o\">=</span> <span class=\"nb\">read</span> <span class=\"nt\">-r</span> line<span class=\"p\">;</span> <span class=\"k\">do\n                        </span><span class=\"nb\">echo</span> <span class=\"s2\">\"逐行匹配：\"</span><span class=\"nv\">$line</span>\n                        <span class=\"k\">if</span> <span class=\"o\">!</span> <span class=\"nb\">grep</span> <span class=\"nt\">-qE</span> <span class=\"s2\">\"^[[:space:]]*//\"</span> <span class=\"o\">&lt;&lt;&lt;</span> <span class=\"s2\">\"</span><span class=\"nv\">$line</span><span class=\"s2\">\"</span><span class=\"p\">;</span> <span class=\"k\">then\n                            if</span> <span class=\"o\">[[</span> <span class=\"o\">!</span> <span class=\"nv\">$line</span> <span class=\"o\">=</span>~ ^[[:space:]]<span class=\"k\">*</span><span class=\"c\">#import ]]; then</span>\n                                <span class=\"nv\">has_comment</span><span class=\"o\">=</span><span class=\"nb\">true\n                                echo</span> <span class=\"s2\">\"在文件:\"</span><span class=\"nv\">$other_file</span><span class=\"s2\">\"匹配\"</span><span class=\"nv\">$filename</span><span class=\"s2\">\"存在 并且不是 注释代码 或者 import 的 break（\"</span><span class=\"nv\">$line</span>\n                                <span class=\"nb\">break\n                            </span><span class=\"k\">fi\n\n                        fi\n                    done</span> <span class=\"o\">&lt;&lt;&lt;</span> <span class=\"s2\">\"</span><span class=\"si\">$(</span><span class=\"nb\">grep</span> <span class=\"s2\">\"</span><span class=\"se\">\\b</span><span class=\"nv\">$filename</span><span class=\"se\">\\b</span><span class=\"s2\">\"</span> <span class=\"s2\">\"</span><span class=\"nv\">$other_file</span><span class=\"s2\">\"</span><span class=\"si\">)</span><span class=\"s2\">\"</span>\n                    \n                    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"s2\">\"</span><span class=\"nv\">$has_comment</span><span class=\"s2\">\"</span> <span class=\"o\">=</span> <span class=\"nb\">true</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n                        </span><span class=\"nv\">is_referenced</span><span class=\"o\">=</span><span class=\"nb\">true\n                        break\n                    </span><span class=\"k\">fi\n                fi\n            fi\n        done\n\n        if</span> <span class=\"o\">[</span> <span class=\"s2\">\"</span><span class=\"nv\">$is_referenced</span><span class=\"s2\">\"</span> <span class=\"o\">=</span> <span class=\"nb\">false</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n            </span><span class=\"nb\">echo</span> <span class=\"s2\">\"没有被引用到的文件:\"</span><span class=\"nv\">$file</span>\n            <span class=\"nv\">unused_files</span><span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"nv\">$unused_files$file</span><span class=\"se\">\\n</span><span class=\"s2\">\"</span>\n        <span class=\"k\">fi\n        </span><span class=\"nb\">echo</span> <span class=\"s2\">\"***********\"</span>\n    <span class=\"k\">done</span>\n\n    <span class=\"c\"># 输出未被引用的文件列表</span>\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-n</span> <span class=\"s2\">\"</span><span class=\"nv\">$unused_files</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">echo</span> <span class=\"nt\">-e</span> <span class=\"s2\">\"Unused class files:</span><span class=\"se\">\\n</span><span class=\"nv\">$unused_files</span><span class=\"s2\">\"</span>\n        <span class=\"nv\">total_unused_file_name</span><span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"nv\">$total_unused_file_name$unused_files</span><span class=\"se\">\\n</span><span class=\"s2\">\"</span>\n\n        <span class=\"c\">#将检索出来的文件 mv 出来</span>\n        <span class=\"nb\">mkdir</span> <span class=\"nt\">-p</span> ./unused_files/<span class=\"nv\">$cycle_idx</span>/\n        <span class=\"nv\">array</span><span class=\"o\">=(</span><span class=\"sb\">`</span><span class=\"nb\">echo</span> <span class=\"nv\">$unused_files</span> | <span class=\"nb\">tr</span> <span class=\"s1\">'\\n'</span> <span class=\"s1\">' '</span><span class=\"sb\">`</span><span class=\"o\">)</span>\n        <span class=\"k\">for </span>element <span class=\"k\">in</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">array</span><span class=\"p\">[@]</span><span class=\"k\">}</span><span class=\"s2\">\"</span><span class=\"p\">;</span> <span class=\"k\">do\n            </span><span class=\"nv\">element</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">echo</span> <span class=\"s2\">\"</span><span class=\"nv\">$element</span><span class=\"s2\">\"</span> | <span class=\"nb\">tr</span> <span class=\"nt\">-d</span> <span class=\"s1\">'\\n'</span><span class=\"si\">)</span>\n            <span class=\"nb\">echo</span> <span class=\"s2\">\"Unused class = \"</span><span class=\"nv\">$element</span>\n            <span class=\"nv\">element_filename</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">basename</span> <span class=\"s2\">\"</span><span class=\"nv\">$element</span><span class=\"s2\">\"</span> .m<span class=\"si\">)</span>\n            <span class=\"nv\">element_dirname</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">dirname</span> <span class=\"s2\">\"</span><span class=\"nv\">$element</span><span class=\"s2\">\"</span><span class=\"si\">)</span>\n            \n            <span class=\"nv\">destFoldName</span><span class=\"o\">=</span><span class=\"s2\">\"./unused_files/</span><span class=\"nv\">$cycle_idx</span><span class=\"s2\">/</span><span class=\"k\">${</span><span class=\"nv\">element_dirname</span><span class=\"k\">}</span><span class=\"s2\">/</span><span class=\"k\">${</span><span class=\"nv\">element_filename</span><span class=\"k\">}</span><span class=\"s2\">\"</span>\n            <span class=\"nb\">mkdir</span> <span class=\"nt\">-p</span> <span class=\"nv\">$destFoldName</span>\n            \n            <span class=\"nb\">cp</span> <span class=\"nt\">-f</span> <span class=\"k\">${</span><span class=\"nv\">element_dirname</span><span class=\"k\">}</span>/<span class=\"k\">${</span><span class=\"nv\">element_filename</span><span class=\"k\">}</span>.h <span class=\"nv\">$destFoldName</span>/<span class=\"nv\">$element_filename</span>.h\n            <span class=\"nb\">cp</span> <span class=\"nt\">-f</span> <span class=\"k\">${</span><span class=\"nv\">element_dirname</span><span class=\"k\">}</span>/<span class=\"k\">${</span><span class=\"nv\">element_filename</span><span class=\"k\">}</span>.m <span class=\"nv\">$destFoldName</span>/<span class=\"nv\">$element_filename</span>.m\n        <span class=\"k\">done</span>\n        \n        <span class=\"c\">#cycle_deal参数为空则不循环执行</span>\n        <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$cycle_deal</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n            </span><span class=\"nb\">echo</span> <span class=\"s2\">\"cycle_deal参数为空则不循环执行\"</span>\n\n            <span class=\"nb\">exit </span>0\n        <span class=\"k\">else</span>\n            <span class=\"c\">#cycle_deal 不为空 循环执行，直到不再有新文件检出</span>\n            <span class=\"nb\">echo</span> <span class=\"nt\">-e</span> <span class=\"s2\">\"循环执行\"</span>\n            <span class=\"nv\">cycle_idx</span><span class=\"o\">=</span><span class=\"k\">$((</span>cycle_idx+1<span class=\"k\">))</span>\n            main <span class=\"nv\">$1</span>\n        <span class=\"k\">fi\n\n    else\n        </span><span class=\"nb\">echo</span> <span class=\"s2\">\"No unused ViewController files found.\"</span><span class=\"nv\">$all_file_path</span>\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"**************************\"</span>\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"total_unused_file_name class files:</span><span class=\"se\">\\n</span><span class=\"nv\">$total_unused_file_name</span><span class=\"s2\">\"</span>\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"**************************\"</span>\n\n        <span class=\"nb\">exit </span>0\n    <span class=\"k\">fi</span>\n<span class=\"o\">}</span>\n\n\nmain <span class=\"nv\">$1</span>\n\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h2 id=\"34-冲突解决工具\">3.4 冲突解决工具</h2>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#!/bin/bash</span>\n\n<span class=\"c\"># [背景]</span>\n<span class=\"c\">#    组件化过程中不可避免的会遇到这样一个问题：</span>\n<span class=\"c\">#    组件化的过程一般周期比较长，此过程中不免会有业务需求的输入，这样就会导致一个情况：</span>\n<span class=\"c\">#    组件化分支已经将主工程里的类迁移到pod仓库,而在此期间的业务需求代码对这些被迁移的类有修改，</span>\n<span class=\"c\">#    合并主干（其他分支）代码时,主干（其他分支）有对移动之前的类做修改的情况下,会导致合并冲突,</span>\n<span class=\"c\">#    这种冲突是整个类都是新增符号(+),没有冲突符号，此时无法简单的通过工具，或者冲突的符号对其进行解冲突。</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># author: PaysonChen</span>\n<span class=\"c\"># [目的]</span>\n<span class=\"c\"># 为了减轻组件化分支合并主干分支的工作量和复杂度</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [目录]</span>\n<span class=\"c\">#   - merge.sh</span>\n<span class=\"c\"># [说明]</span>\n<span class=\"c\"># 1、整理project 冲突文件的路径列表</span>\n<span class=\"c\"># 2、整理冲突列表在各个pod库中的路径列表</span>\n<span class=\"c\"># 3、在未预合并分支上先mv一份整理后的pod库中的路径列表到主工程</span>\n<span class=\"c\"># 4、再进行分支合并</span>\n<span class=\"c\"># 5、解决冲突后，执行将主工程的上述列表，mv到各个pod库</span>\n<span class=\"c\"># 6、提交各个Pod库代码</span>\n<span class=\"c\"># 7、整理Project文件及工程类</span>\n<span class=\"c\"># 8、提交Project代码</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [参数]</span>\n<span class=\"c\"># 1、参数1：源路径：从参数1下的文件路径了列表，移动到参数2（索引）对应的路径</span>\n<span class=\"c\">#   例如 merge_pods_files.txt</span>\n<span class=\"c\"># 2、参数2，目标移动路径列表</span>\n<span class=\"c\">#   例如 merge_project_files.txt</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [调用说明]</span>\n<span class=\"c\"># 1、需要指定目录</span>\n<span class=\"c\">#  从Pod移动到主工程：sh merge.sh merge_pods_files.txt merge_project_files.txt</span>\n<span class=\"c\">#  从主工程移动到Pod：sh merge.sh merge_project_files.txt merge_pods_files.txt</span>\n\n\n<span class=\"c\"># 从外部文件中读取源文件路径和目标文件夹路径</span>\n<span class=\"c\">#\"source_paths.txt\"</span>\n<span class=\"nv\">source_file</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n<span class=\"c\">#\"destination_paths.txt\"</span>\n<span class=\"nv\">destination_file</span><span class=\"o\">=</span><span class=\"nv\">$2</span>\n\n<span class=\"c\"># 检查源文件是否存在</span>\n<span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"o\">!</span> <span class=\"nt\">-f</span> <span class=\"s2\">\"</span><span class=\"nv\">$source_file</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n    </span><span class=\"nb\">echo</span> <span class=\"s2\">\"源文件 '</span><span class=\"nv\">$source_file</span><span class=\"s2\">' 不存在。\"</span>\n    <span class=\"nb\">exit </span>1\n<span class=\"k\">fi</span>\n\n<span class=\"c\"># 检查目标文件夹文件是否存在</span>\n<span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"o\">!</span> <span class=\"nt\">-f</span> <span class=\"s2\">\"</span><span class=\"nv\">$destination_file</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n    </span><span class=\"nb\">echo</span> <span class=\"s2\">\"源文件 '</span><span class=\"nv\">$source_file</span><span class=\"s2\">' 不存在。\"</span>\n    <span class=\"nb\">exit </span>1\n<span class=\"k\">fi</span>\n\n<span class=\"c\">#保证每条记录都有一个回车（最后一行如果没有回车，会被忽略）</span>\n<span class=\"k\">while </span><span class=\"nv\">IFS</span><span class=\"o\">=</span> <span class=\"nb\">read</span> <span class=\"nt\">-r</span> source_path <span class=\"o\">&amp;&amp;</span> <span class=\"nv\">IFS</span><span class=\"o\">=</span> <span class=\"nb\">read</span> <span class=\"nt\">-r</span> destination_folder &lt;&amp;3<span class=\"p\">;</span> <span class=\"k\">do\n    </span>source_paths+<span class=\"o\">=(</span><span class=\"s2\">\"</span><span class=\"nv\">$source_path</span><span class=\"s2\">\"</span><span class=\"o\">)</span>\n    destination_paths+<span class=\"o\">=(</span><span class=\"s2\">\"</span><span class=\"nv\">$destination_folder</span><span class=\"s2\">\"</span><span class=\"o\">)</span>\n<span class=\"k\">done</span> &lt; <span class=\"nv\">$source_file</span> 3&lt; <span class=\"nv\">$destination_file</span>\n\n<span class=\"c\"># 输出数组长度</span>\n<span class=\"nb\">echo</span> <span class=\"s2\">\"源文件路径数组长度：</span><span class=\"k\">${#</span><span class=\"nv\">source_paths</span><span class=\"p\">[@]</span><span class=\"k\">}</span><span class=\"s2\">\"</span>\n<span class=\"nb\">echo</span> <span class=\"s2\">\"目标文件夹路径数组长度：</span><span class=\"k\">${#</span><span class=\"nv\">destination_paths</span><span class=\"p\">[@]</span><span class=\"k\">}</span><span class=\"s2\">\"</span>\n\n<span class=\"c\">#exit 0</span>\n<span class=\"c\"># 遍历索引</span>\n<span class=\"k\">for </span>index <span class=\"k\">in</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"p\">!source_paths[@]</span><span class=\"k\">}</span><span class=\"s2\">\"</span><span class=\"p\">;</span> <span class=\"k\">do\n    </span><span class=\"nb\">echo</span> <span class=\"s2\">\"遍历目标文件夹路径数组,index=\"</span><span class=\"nv\">$index</span>\n    <span class=\"nv\">source_path</span><span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">source_paths</span><span class=\"p\">[</span><span class=\"nv\">$index</span><span class=\"p\">]</span><span class=\"k\">}</span><span class=\"s2\">\"</span>\n    <span class=\"nv\">destination_path</span><span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">destination_paths</span><span class=\"p\">[</span><span class=\"nv\">$index</span><span class=\"p\">]</span><span class=\"k\">}</span><span class=\"s2\">\"</span>\n\n    <span class=\"c\"># 构建目标文件的完整路径</span>\n<span class=\"c\">#    destination_path=\"${destination_folder}${source_path}\"</span>\n\n    <span class=\"c\"># 检查目标文件是否存在，如果存在则删除</span>\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-e</span> <span class=\"s2\">\"</span><span class=\"nv\">$destination_path</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">rm</span> <span class=\"s2\">\"</span><span class=\"nv\">$destination_path</span><span class=\"s2\">\"</span>\n    <span class=\"k\">fi</span>\n\n    <span class=\"c\"># 确保目标文件夹存在</span>\n    <span class=\"nb\">mkdir</span> <span class=\"nt\">-p</span> <span class=\"s2\">\"</span><span class=\"si\">$(</span><span class=\"nb\">dirname</span> <span class=\"s2\">\"</span><span class=\"nv\">$destination_path</span><span class=\"s2\">\"</span><span class=\"si\">)</span><span class=\"s2\">\"</span>\n\n    <span class=\"c\"># 复制源文件到目标路径</span>\n    <span class=\"nb\">mv</span> <span class=\"s2\">\"</span><span class=\"nv\">$source_path</span><span class=\"s2\">\"</span> <span class=\"s2\">\"</span><span class=\"nv\">$destination_path</span><span class=\"s2\">\"</span>\n<span class=\"k\">done\n\n</span><span class=\"nb\">echo</span> <span class=\"s2\">\"文件复制完成。\"</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h2 id=\"35-版权信息批量同步工具\">3.5 版权信息批量同步工具</h2>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#!/bin/bash</span>\n\n<span class=\"c\"># 遍历更新当前目录下(含子目录）所有iOS工程类文件：.h .m .swift 并对其注释头进行模板替换</span>\n<span class=\"c\"># author: PaysonChen</span>\n<span class=\"c\"># [目的]</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># 组件化规整之后，可能存在的情况是前后的文件命名不一致导致的影响代码易读性、易维护等问题</span>\n<span class=\"c\"># 除此之外，由于代码经由不同人迭代的，甚至不同组织迭代（从外包接手的项目）还存在一些文件注释的注释模板差异的情况</span>\n<span class=\"c\"># 此脚本目的为了解决存量类文件头注释统一性问题</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [目录]</span>\n<span class=\"c\">#   - replace_class_header_anotation.sh 遍历更新当前目录下，子目录git仓库的脚本</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [说明]</span>\n<span class=\"c\"># 1、遍历指定目录（若未传参数则为当前目录）下的子目录</span>\n<span class=\"c\"># 2、匹配所有iOS工程类文件：.h .m .swift</span>\n<span class=\"c\"># 3、对其注释头进行模板替换</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [参数]</span>\n<span class=\"c\"># 1、参数1，指定目录</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [调用说明]</span>\n<span class=\"c\"># 1、未指定目录，则取当前目录：sh replace_class_header_anotation.sh</span>\n<span class=\"c\"># 2、指定目录：sh replace_class_header_anotation.sh /User/xxx/xx</span>\n<span class=\"c\"># 本脚本适用于将：下述注释替换成 统一注释模板：</span>\n<span class=\"c\">#   其一：</span>\n<span class=\"c\">#//</span>\n<span class=\"c\">#//  FileName.h</span>\n<span class=\"c\">#//  ProjectName</span>\n<span class=\"c\">#//</span>\n<span class=\"c\">#//  Created by Author on Date.</span>\n<span class=\"c\">#// (没版权信息)</span>\n<span class=\"c\">#//</span>\n<span class=\"c\">#</span>\n<span class=\"c\">#   其二：</span>\n<span class=\"c\">#   /****************************************************************************************************</span>\n<span class=\"c\">#   * 版权所有： Copyright (c) 2012-2021 xxxx. All rights reserved.</span>\n<span class=\"c\">#   * 作 者： Author （2021/3/12）</span>\n<span class=\"c\">#   * 界面描述：  界面描述</span>\n<span class=\"c\">#   ****************************************************************************************************/</span>\n<span class=\"c\">#</span>\n<span class=\"c\">#   其三：</span>\n<span class=\"c\">#   没有任何注释的</span>\n<span class=\"c\">#</span>\n<span class=\"c\">#</span>\n<span class=\"c\">#   替换成统一注释模板：</span>\n<span class=\"c\">#</span>\n<span class=\"c\">#//</span>\n<span class=\"c\">#//  \"$filename\"</span>\n<span class=\"c\">#//  \"$project_name\"</span>\n<span class=\"c\">#//</span>\n<span class=\"c\">#//  Created by \"$auth\" on \"$date\".</span>\n<span class=\"c\">#//  \"$copyright_str\"</span>\n<span class=\"c\">#//</span>\n<span class=\"c\">#</span>\n<span class=\"c\">#定义版权信息</span>\n<span class=\"nb\">export </span><span class=\"nv\">copyright_str</span><span class=\"o\">=</span><span class=\"s2\">\"Copyright (C) </span><span class=\"si\">$(</span><span class=\"nb\">date</span> +%Y<span class=\"si\">)</span><span class=\"s2\">  Your CompanyName Limited. All rights reserved.\"</span>\n\n<span class=\"c\">#定义默认用户信息：PaysonChen</span>\n<span class=\"nb\">export </span><span class=\"nv\">def_author_str</span><span class=\"o\">=</span><span class=\"s2\">\"PaysonChen\"</span>\n\n<span class=\"c\">#定义默认日期：当前日期</span>\n<span class=\"nb\">export </span><span class=\"nv\">def_time_str</span><span class=\"o\">=</span><span class=\"sb\">`</span><span class=\"nb\">date</span> +%Y/%m/%d<span class=\"sb\">`</span>\n\n<span class=\"k\">function </span>get_creator_name_with_template_2<span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"nv\">file</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n    <span class=\"nv\">creator_name</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">sed</span> <span class=\"nt\">-n</span> <span class=\"s1\">'s/.*作    者： \\(.*\\).*/\\1/p'</span> <span class=\"nv\">$file</span><span class=\"si\">)</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"creator_name=\"</span><span class=\"nv\">$creator_name</span><span class=\"s2\">\" in file=\"</span><span class=\"nv\">$file</span>\n    \n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$creator_name</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">echo</span> <span class=\"s1\">'///获取创建者 第二种模板获取 为空 使用默认值'</span>\n        <span class=\"nv\">creator_name</span><span class=\"o\">=</span><span class=\"nv\">$def_author_str</span>\n    <span class=\"k\">fi</span>\n<span class=\"o\">}</span>\n\n<span class=\"k\">function </span>get_creator_name<span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"nv\">file</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n    <span class=\"nv\">creator_name</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">sed</span> <span class=\"nt\">-n</span> <span class=\"s1\">'s/.*Created by \\(.*\\) on.*/\\1/p'</span> <span class=\"nv\">$file</span><span class=\"si\">)</span>\n    \n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$creator_name</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span>get_creator_name_with_template_2 <span class=\"nv\">$file</span>\n    <span class=\"k\">fi\n    \n    </span><span class=\"nb\">echo</span> <span class=\"s2\">\"--------creator_name=【\"</span><span class=\"nv\">$creator_name</span><span class=\"s2\">\"】 in file=\"</span><span class=\"nv\">$file</span>\n<span class=\"o\">}</span>\n\n\n\n<span class=\"k\">function </span>get_creator_time_with_template_2<span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"nv\">file</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n    <span class=\"nv\">creator_time</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">sed</span> <span class=\"nt\">-n</span> <span class=\"s1\">'s/.*创建日期： \\(.*\\).*/\\1/p'</span> <span class=\"nv\">$file</span><span class=\"si\">)</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"-------创建日期=【\"</span><span class=\"nv\">$creator_time</span><span class=\"s2\">\"】 in file=\"</span><span class=\"nv\">$file</span>\n\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$creator_time</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then</span>\n<span class=\"c\">#        echo '///获取创建时间 第二种模板获取 为空 使用默认值'</span>\n        <span class=\"nv\">creator_time</span><span class=\"o\">=</span><span class=\"nv\">$def_time_str</span>\n    <span class=\"k\">fi</span>\n<span class=\"o\">}</span>\n\n\n<span class=\"k\">function </span>format_creator_time<span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"nv\">creator_time</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n    \n    <span class=\"nv\">length</span><span class=\"o\">=</span><span class=\"k\">${#</span><span class=\"nv\">creator_time</span><span class=\"k\">}</span>\n\n    <span class=\"c\"># 截取除最后一个字符外的部分</span>\n    <span class=\"nv\">creator_time</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">creator_time</span>:0:length-1<span class=\"k\">}</span>\n    <span class=\"c\">#echo \"截去掉最后一个字符后的字符串: $creator_time\"</span>\n<span class=\"o\">}</span>\n\n\n<span class=\"k\">function </span>get_creator_time<span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"nv\">file</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n    \n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$2</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nv\">line</span><span class=\"o\">=</span>5\n    <span class=\"k\">else\n        </span><span class=\"nv\">line</span><span class=\"o\">=</span><span class=\"nv\">$2</span>\n    <span class=\"k\">fi</span>\n    <span class=\"c\">#creator_time=$(sed -n '5s/.*\\(.\\{10\\}\\)$/\\1/p' $file)</span>\n    <span class=\"nv\">creator_time</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">awk</span> <span class=\"s1\">'NR=='</span><span class=\"nv\">$line</span><span class=\"s1\">' {print $NF}'</span> <span class=\"nv\">$file</span><span class=\"si\">)</span>\n\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"-------creator_time=【\"</span><span class=\"nv\">$creator_time</span><span class=\"s2\">\"】 line = \"</span><span class=\"nv\">$line</span><span class=\"s2\">\" in file=\"</span><span class=\"nv\">$file</span>\n<span class=\"c\">#    date_regex='^(19|20)[0-9]{2}/(0?[1-9]|1[0-2])/(0?[1-9]|[1-2][0-9]|3[0-1]).$'</span>\n    <span class=\"c\">#date_regex='^(19[0-9]{2}|20[0-9]{2}|[0-9]{2})/(0?[1-9]|1[0-2])/(0?[1-9]|[1-2][0-9]|3[0-1]).$'</span>\n    <span class=\"nv\">date_regex</span><span class=\"o\">=</span><span class=\"s1\">'^(19[0-9]{2}|20[0-9]{2}|[0-9]{2})([-/])(0?[1-9]|1[0-2])([-/])(0?[1-9]|[1-2][0-9]|3[0-1]).$'</span>\n\n    <span class=\"c\"># 进行正则匹配</span>\n    <span class=\"k\">if</span> <span class=\"o\">[[</span> <span class=\"nv\">$creator_time</span> <span class=\"o\">=</span>~ <span class=\"nv\">$date_regex</span> <span class=\"o\">]]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">echo</span> <span class=\"s2\">\"日期格式正确，截断最后一个小数 .\"</span>\n        format_creator_time <span class=\"nv\">$creator_time</span>\n    <span class=\"k\">else\n        if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$2</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n            </span><span class=\"nv\">discount</span><span class=\"o\">=</span>1\n            <span class=\"nv\">new_line</span><span class=\"o\">=</span><span class=\"k\">$((</span>line-discount<span class=\"k\">))</span>\n            <span class=\"nb\">echo</span> <span class=\"s2\">\"常规调用如果匹配不到的花，那么多一次，向上查找\"</span><span class=\"nv\">$discount</span><span class=\"s2\">\"行，进行递归:\"</span><span class=\"nv\">$new_line</span>\n            get_creator_time <span class=\"nv\">$file</span> <span class=\"nv\">$new_line</span>\n        <span class=\"k\">else\n            </span><span class=\"nb\">echo</span> <span class=\"s2\">\"日期格式错误，执行第二种匹配\"</span>\n            get_creator_time_with_template_2 <span class=\"nv\">$file</span>\n        <span class=\"k\">fi\n    fi\n    </span><span class=\"nb\">echo</span> <span class=\"s2\">\"********creator_time=【\"</span><span class=\"nv\">$creator_time</span><span class=\"s2\">\"】 in file=\"</span><span class=\"nv\">$file</span>\n<span class=\"o\">}</span>\n\n\n\n<span class=\"k\">function </span>replace_header_anoation<span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"nv\">file</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n    \n    <span class=\"c\">#定义要替换的字符串</span>\n    <span class=\"c\">#文件名</span>\n    <span class=\"nv\">filename</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">echo</span> <span class=\"s2\">\"</span><span class=\"nv\">$file</span><span class=\"s2\">\"</span> | <span class=\"nb\">sed</span> <span class=\"s1\">'s#.*/##'</span><span class=\"si\">)</span>\n    <span class=\"c\">#项目名</span>\n    <span class=\"nv\">project_name</span><span class=\"o\">=</span><span class=\"s2\">\"YourProjectName\"</span>\n    \n    <span class=\"c\">#还有从当前类中获取作者信息，获取不到取默认值</span>\n    <span class=\"nv\">auth</span><span class=\"o\">=</span><span class=\"nv\">$creator_name</span>\n    \n    <span class=\"c\">#还有从当前类中获取作者信息，获取不到取默认值</span>\n    <span class=\"nb\">date</span><span class=\"o\">=</span><span class=\"nv\">$creator_time</span>\n\n    <span class=\"c\">#以下是替换的模板</span>\n    <span class=\"nv\">new_content</span><span class=\"o\">=</span><span class=\"s2\">\"//\n//  \"</span><span class=\"nv\">$filename</span><span class=\"s2\">\"\n//  \"</span><span class=\"nv\">$project_name</span><span class=\"s2\">\"\n//\n//  Created by \"</span><span class=\"nv\">$auth</span><span class=\"s2\">\" on \"</span><span class=\"nv\">$date</span><span class=\"s2\">\".\n//  \"</span><span class=\"nv\">$copyright_str</span><span class=\"s2\">\"\n//\"</span>\n\n    <span class=\"nv\">new_content_escaped</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">echo</span> <span class=\"s2\">\"</span><span class=\"nv\">$new_content</span><span class=\"s2\">\"</span> | <span class=\"nb\">sed</span> <span class=\"s1\">'s/$/\\\\/'</span><span class=\"si\">)</span> <span class=\"c\"># 转义换行符</span>\n    <span class=\"nb\">sed</span> <span class=\"nt\">-i</span> <span class=\"s1\">''</span> <span class=\"nt\">-e</span> <span class=\"s2\">\"1,7c</span><span class=\"se\">\\\\</span><span class=\"s2\">\n</span><span class=\"nv\">$new_content_escaped</span><span class=\"s2\">\"</span> <span class=\"s2\">\"</span><span class=\"nv\">$file</span><span class=\"s2\">\"</span>\n\n    <span class=\"c\">#还有几个问题待优化</span>\n    <span class=\"c\">#1、如果开头没有注释，则会直接覆盖，或者注释不足7行的</span>\n    <span class=\"c\">#2、日期正则如果不是以 YYYY/MM/DD or YY/MM/DD 其中/和-都适用</span>\n        <span class=\"c\">#2.1但是兼容2023/8/1这样的个位数日期)，</span>\n        <span class=\"c\">#2.2如果日期是8/1/23 这样会导致识别错误 会被替换成今天的日期</span>\n\n<span class=\"o\">}</span>\n\n<span class=\"c\"># 统一类头注释</span>\n<span class=\"k\">function </span>unify_header_anoation<span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"nv\">file</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n\n    <span class=\"c\">#还有从当前类中获取作者信息，获取不到取默认值</span>\n    get_creator_name <span class=\"nv\">$file</span>\n    \n    <span class=\"c\">#还有从当前类中获取作者信息，获取不到取默认值</span>\n    get_creator_time <span class=\"nv\">$file</span>\n    \n    <span class=\"c\">#不传第二个参数 则执行替换，传就不执行</span>\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$2</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span>replace_header_anoation <span class=\"nv\">$file</span>\n    <span class=\"k\">fi</span>\n<span class=\"o\">}</span>\n\n\n<span class=\"k\">function </span>main<span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"nv\">file_path</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$file_path</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">echo</span> <span class=\"s1\">'///未指定路径,file_path为. 当前路径'</span>\n        <span class=\"nv\">file_path</span><span class=\"o\">=</span><span class=\"nb\">.</span>\n    <span class=\"k\">fi</span>\n\n\n    <span class=\"c\">#遍历当前路径下所有oc类</span>\n    find <span class=\"nv\">$file_path</span> <span class=\"nt\">-type</span> f <span class=\"nt\">-name</span> <span class=\"s2\">\"*.swift\"</span> <span class=\"nt\">-o</span> <span class=\"nt\">-name</span> <span class=\"s2\">\"*.h\"</span> <span class=\"nt\">-o</span> <span class=\"nt\">-name</span> <span class=\"s2\">\"*.m\"</span> | <span class=\"k\">while </span><span class=\"nb\">read </span>file<span class=\"p\">;</span> <span class=\"k\">do\n        </span>unify_header_anoation <span class=\"nv\">$file</span> <span class=\"nv\">$2</span>\n    <span class=\"k\">done</span>\n<span class=\"o\">}</span>\n\n\nmain <span class=\"nv\">$1</span> <span class=\"nv\">$2</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n","name":"2024-01-08-ios.md","previous":{"id":"/2023/11/08/构建流水线实践","tags":[],"relative_path":"_posts/2023-11-08-构建流水线实践.md","collection":"posts","name":"2023-11-08-构建流水线实践.md","url":"/2023/11/08/%E6%9E%84%E5%BB%BA%E6%B5%81%E6%B0%B4%E7%BA%BF%E5%AE%9E%E8%B7%B5/","title":"构建流水线实践","date":"2023-11-08 00:00:00 +0800","categories":[],"path":"_posts/2023-11-08-构建流水线实践.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/home-bg-geek.jpg","mermaid":true,"slug":"构建流水线实践","ext":".md"},"output":"<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"google-site-verification\" content=\"xBT4GhYoi5qRD5tr338pgPM5OWHHIDR6mNg1a3euekI\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, viewport-fit=cover\">\n    <meta name=\"description\" content=\"与你一起发现更大的世界。\">\n    <meta name=\"keywords\"  content=\"PaysonChen,iOS,流媒体\">\n    <meta name=\"theme-color\" content=\"#000000\">\n    \n    <!-- Open Graph -->\n    <meta property=\"og:title\" content=\"iOS组件化实现之：实用工具沉淀及介绍 - PaysonChen的博客 | PaysonChen Blog\">\n    \n    <meta property=\"og:type\" content=\"article\">\n    <meta property=\"og:description\" content=\"1.背景\n\">\n    \n    \n    <meta property=\"article:published_time\" content=\"2024-01-08T00:00:00Z\">\n    \n    \n    <meta property=\"article:author\" content=\"PaysonChen\">\n    \n    \n    \n    <meta property=\"og:image\" content=\"http://localhost:4000\">\n    <meta property=\"og:url\" content=\"http://localhost:4000/2024/01/08/ios/\">\n    <meta property=\"og:site_name\" content=\"PaysonChen的博客 | PaysonChen Blog\">\n    \n    <title>iOS组件化实现之：实用工具沉淀及介绍 - PaysonChen的博客 | PaysonChen Blog</title>\n\n    <!-- Web App Manifest -->\n    <link rel=\"manifest\" href=\"/pwa/manifest.json\">\n\n    <!-- Favicon -->\n    <link rel=\"shortcut icon\" href=\"/img/favicon.ico\">\n    \n    <!-- Canonical URL -->\n    <link rel=\"canonical\" href=\"http://localhost:4000/2024/01/08/ios/\">\n\n    <!-- Bootstrap Core CSS -->\n    <link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\">\n\n    <!-- Custom CSS -->\n    <link rel=\"stylesheet\" href=\"/css/hux-blog.min.css\">\n\n    <!-- Custom Fonts -->\n    <!-- <link href=\"http://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\"> -->\n    <!-- Hux change font-awesome CDN to qiniu -->\n    <link href=\"//cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\">\n\n\n    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->\n    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->\n    <!--[if lt IE 9]>\n        <script src=\"https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js\"></script>\n        <script src=\"https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js\"></script>\n    <![endif]-->\n\n    <!-- ga & ba script hoook -->\n    <script></script>\n</head>\n\n\n<!-- hack iOS CSS :active style -->\n<body ontouchstart=\"\">\n\n    <!-- Navigation -->\n\n    <nav class=\"navbar navbar-default navbar-custom navbar-fixed-top\">\n        \n        <div class=\"container-fluid\">\n            <!-- Brand and toggle get grouped for better mobile display -->\n            <div class=\"navbar-header page-scroll\">\n                <button type=\"button\" class=\"navbar-toggle\">\n                    <span class=\"sr-only\">Toggle navigation</span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                </button>\n                <a class=\"navbar-brand\" href=\"/\">PaysonChen Blog</a>\n            </div>\n\n            <!-- Collect the nav links, forms, and other content for toggling -->\n            <div id=\"huxblog_navbar\">\n                <div class=\"navbar-collapse\">\n                    <ul class=\"nav navbar-nav navbar-right\">\n                        <li>\n                            <a href=\"/\">Home</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        <li>\n                            <a href=\"/about/\">About</a>\n                        </li>\n                        \n                        \n                        \n                        <li>\n                            <a href=\"/archive/\">Archive</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        <li class=\"search-icon\">\n                            <a href=\"javascript:void(0)\">\n                                <i class=\"fa fa-search\"></i>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n            <!-- /.navbar-collapse -->\n        </div>\n        <!-- /.container -->\n    </nav>\n\n    <script>\n        // Drop Bootstarp low-performance Navbar\n        // Use customize navbar with high-quality material design animation\n        // in high-perf jank-free CSS3 implementation\n        var $body = document.body;\n        var $toggle = document.querySelector('.navbar-toggle');\n        var $navbar = document.querySelector('#huxblog_navbar');\n        var $collapse = document.querySelector('.navbar-collapse');\n\n        var __HuxNav__ = {\n            close: function () {\n                $navbar.className = \" \";\n                // wait until animation end.\n                setTimeout(function () {\n                    // prevent frequently toggle\n                    if ($navbar.className.indexOf('in') < 0) {\n                        $collapse.style.height = \"0px\"\n                    }\n                }, 400)\n            },\n            open: function () {\n                $collapse.style.height = \"auto\"\n                $navbar.className += \" in\";\n            }\n        }\n\n        // Bind Event\n        $toggle.addEventListener('click', function (e) {\n            if ($navbar.className.indexOf('in') > 0) {\n                __HuxNav__.close()\n            } else {\n                __HuxNav__.open()\n            }\n        })\n\n        /**\n         * Since Fastclick is used to delegate 'touchstart' globally\n         * to hack 300ms delay in iOS by performing a fake 'click',\n         * Using 'e.stopPropagation' to stop 'touchstart' event from \n         * $toggle/$collapse will break global delegation.\n         * \n         * Instead, we use a 'e.target' filter to prevent handler\n         * added to document close HuxNav.  \n         *\n         * Also, we use 'click' instead of 'touchstart' as compromise\n         */\n        document.addEventListener('click', function (e) {\n            if (e.target == $toggle) return;\n            if (e.target.className == 'icon-bar') return;\n            __HuxNav__.close();\n        })\n    </script>\n    <!-- Search -->\n<div class=\"search-page\">\n  <div class=\"search-icon-close-container\">\n    <span class=\"search-icon-close\">\n      <i class=\"fa fa-chevron-down\"></i>\n    </span>\n  </div>\n  <div class=\"search-main container\">\n    <div class=\"row\">\n      <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n        <form></form>\n        <input type=\"text\" id=\"search-input\" placeholder=\"$ grep...\">\n        </form>\n        <div id=\"search-results\" class=\"mini-post-list\"></div>\n      </div>\n    </div>\n  </div>\n</div>\n\n    <!-- Image to hack wechat -->\n<!-- <img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\"> -->\n<!-- <img src=\"/img/post-bg-2015.jpg\" width=\"0\" height=\"0\"> -->\n\n<!-- Post Header -->\n\n\n\n<style type=\"text/css\">\n    header.intro-header{\n        position: relative;\n        background-image: url('/img/post-bg-2015.jpg');\n        background: ;\n    }\n\n    \n</style>\n\n<header class=\"intro-header\" >\n\n    <div class=\"header-mask\"></div>\n    \n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <div class=\"post-heading\">\n                    <div class=\"tags\">\n                        \n                    </div>\n                    <h1>iOS组件化实现之：实用工具沉淀及介绍</h1>\n                    \n                    <h2 class=\"subheading\">组件化过程中，有一些重复/高频的问题需要解决，倘若手动解决会带来重复劳动的时间损失，以及没有沉淀的效率损失，为了避免上述损失，沉淀一些工具分享</h2>\n                    <span class=\"meta\">Posted by PaysonChen on January 8, 2024</span>\n                </div>\n            </div>\n        </div>\n    </div>\n</header>\n\n\n\n\n\n\n<!-- Post Content -->\n<article>\n    <div class=\"container\">\n        <div class=\"row\">\n\n    <!-- Post Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                post-container\">\n\n                <!-- Multi-Lingual -->\n                \n\n\t\t\t\t<h1 id=\"1背景\">1.背景</h1>\n\n<p>​\t组件化过程中，有一些重复/高频的问题需要解决，倘若手动解决会带来重复劳动的时间损失，以及没有沉淀的效率损失，为了避免上述损失，沉淀一些工具分享。</p>\n\n<h1 id=\"2组件化工具介绍\">2.组件化工具介绍</h1>\n\n<h2 id=\"21-xcode编译错误解决工具\">2.1 Xcode编译错误解决工具</h2>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#!/bin/bash</span>\n\n<span class=\"c\"># [背景]</span>\n<span class=\"c\"># 组件化过程中，经常出现以下编译错误：</span>\n<span class=\"c\"># Build service could not create build operation: unknown error while handling message: MsgHandlingError(message: \"unable to initiate PIF transfer session (operation in progress?)\")</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># author: PaysonChen</span>\n<span class=\"c\"># [目的]</span>\n<span class=\"c\"># 为解决上述错误，需要清理构建索引目录并重启xcode，由于操作重复，考虑抽出shell脚本</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [目录]</span>\n<span class=\"c\">#   - auto_clean.sh</span>\n<span class=\"c\"># [说明]</span>\n<span class=\"c\"># 1、CD[指定xcode构建索引目录]目录</span>\n<span class=\"c\"># 2、递归删除当前文件下所有文件</span>\n<span class=\"c\"># 3、重启xcode</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [参数]</span>\n<span class=\"c\"># 1、参数1，指定xcode构建索引目录</span>\n<span class=\"c\"># 1、参数2，指定要打开的Xcode项目目</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [调用说明]</span>\n<span class=\"c\"># 1、未指定目录，则取当前目录：sh auto_clean.sh</span>\n<span class=\"c\"># 2、指定目录：sh auto_clean.sh /xcode构建索引目录/ /要打开的Xcode项目目录/</span>\n\n<span class=\"c\">#获取当前用户名</span>\n<span class=\"nv\">user_name</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">whoami</span><span class=\"si\">)</span>\n\n<span class=\"nb\">export </span><span class=\"nv\">XcodeDerivedDataPath</span><span class=\"o\">=</span>/Users/<span class=\"nv\">$user_name</span>/Library/Developer/Xcode/DerivedData\n<span class=\"nb\">export </span><span class=\"nv\">XcodeWorkspacePath</span><span class=\"o\">=</span>/Applications/Xcode.app\n\n<span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$1</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n    </span><span class=\"nb\">echo</span> <span class=\"s1\">'///入参1为空，使用默认xcode构建索引目录:'</span><span class=\"k\">${</span><span class=\"nv\">XcodeDerivedDataPath</span><span class=\"k\">}</span>\n<span class=\"k\">else\n    </span><span class=\"nv\">XcodeDerivedDataPath</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'///入参1不为空，xcode构建索引目录:'</span><span class=\"k\">${</span><span class=\"nv\">XcodeDerivedDataPath</span><span class=\"k\">}</span>\n<span class=\"k\">fi\n\nif</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$2</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n    </span><span class=\"nb\">echo</span> <span class=\"s1\">'///入参2为空，使用默认xcode项目目录:'</span><span class=\"k\">${</span><span class=\"nv\">XcodeWorkspacePath</span><span class=\"k\">}</span>\n<span class=\"k\">else\n    </span><span class=\"nv\">XcodeWorkspacePath</span><span class=\"o\">=</span><span class=\"nv\">$2</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'///入参2不为空，xcode项目目录:'</span><span class=\"k\">${</span><span class=\"nv\">XcodeWorkspacePath</span><span class=\"k\">}</span>\n<span class=\"k\">fi</span>\n\n<span class=\"c\">#cd到xcode构建索引目录</span>\n<span class=\"nb\">cd</span>  <span class=\"nv\">$XcodeDerivedDataPath</span>\n\n<span class=\"nv\">exit_status</span><span class=\"o\">=</span><span class=\"nv\">$?</span>\n\n<span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nv\">$exit_status</span> <span class=\"nt\">-ne</span> 0 <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n    </span><span class=\"nb\">echo</span> <span class=\"s1\">'///切换目录失败:'</span><span class=\"k\">${</span><span class=\"nv\">XcodeDerivedDataPath</span><span class=\"k\">}</span>\n    <span class=\"nb\">exit</span> <span class=\"nt\">-1</span>\n<span class=\"k\">else\n    </span><span class=\"nb\">echo</span> <span class=\"s1\">'///切换目录成功:'</span><span class=\"k\">${</span><span class=\"nv\">XcodeDerivedDataPath</span><span class=\"k\">}</span>\n<span class=\"k\">fi</span>\n\n<span class=\"c\">#删除当前目录所有构件索引</span>\n<span class=\"nb\">rm</span> <span class=\"nt\">-rf</span> <span class=\"k\">*</span>\n\n<span class=\"c\">#重启xcode</span>\nkillall Xcode\n\n<span class=\"c\">#休眠一下，不然可能导致重启失败</span>\n<span class=\"nb\">sleep </span>0.1\n\n<span class=\"c\">#重启项目工程</span>\nopen <span class=\"nv\">$XcodeWorkspacePath</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h2 id=\"22-私有组件批量更新工具\">2.2 私有组件批量更新工具</h2>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#!/bin/bash</span>\n\n<span class=\"c\"># 遍历更新当前目录下，子目录git仓库的脚本</span>\n<span class=\"c\"># author: PaysonChen</span>\n<span class=\"c\"># [目的]</span>\n<span class=\"c\"># 组件化建设过程及后续的协同开发中，经常碰到团队人员更新组件库代码及主工程，主工程容易更新，但是随着pod库的增多，每次更新组件库仓库的重复劳动需要被改进</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [目录]</span>\n<span class=\"c\">#   - auto_update_git.sh.sh 遍历更新当前目录下，子目录git仓库的脚本</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [说明]</span>\n<span class=\"c\"># 1、遍历指定目录（若未传参数则为当前目录）下的子目录</span>\n<span class=\"c\"># 2、cd 到子目录</span>\n<span class=\"c\"># 3、检查当前分支</span>\n<span class=\"c\"># 4、拉取远端当前分支</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [参数]</span>\n<span class=\"c\"># 1、参数1，指定目录</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [调用说明]</span>\n<span class=\"c\"># 1、未指定目录，则取当前目录：sh auto_update_git.sh</span>\n<span class=\"c\"># 2、指定目录：sh auto_update_git.sh /User/xxx/xx</span>\n\n\n<span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$1</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n    </span><span class=\"nb\">export </span><span class=\"nv\">dist_path</span><span class=\"o\">=</span><span class=\"k\">*</span>/\n    <span class=\"nb\">echo</span> <span class=\"s1\">'///指定目录 为空:'</span><span class=\"k\">${</span><span class=\"nv\">dist_path</span><span class=\"k\">}</span>\n<span class=\"k\">else\n    </span><span class=\"nb\">export </span><span class=\"nv\">dist_path</span><span class=\"o\">=</span><span class=\"nv\">$1</span>/<span class=\"k\">*</span>/\n    <span class=\"nb\">echo</span> <span class=\"s1\">'///指定目录 不为空:'</span><span class=\"k\">${</span><span class=\"nv\">dist_path</span><span class=\"k\">}</span>\n<span class=\"k\">fi</span>\n    \n<span class=\"c\"># 遍历指定目录的子目录</span>\n<span class=\"k\">for </span><span class=\"nb\">dir </span><span class=\"k\">in</span> <span class=\"k\">${</span><span class=\"nv\">dist_path</span><span class=\"k\">}</span><span class=\"p\">;</span> <span class=\"k\">do\n  </span><span class=\"nb\">cd</span> <span class=\"s2\">\"</span><span class=\"nv\">$dir</span><span class=\"s2\">\"</span>  <span class=\"c\"># 进入子目录</span>\n  <span class=\"nb\">echo</span> <span class=\"s1\">'///进入子目录:'</span><span class=\"k\">${</span><span class=\"nv\">dir</span><span class=\"k\">}</span>\n\n  <span class=\"c\"># 检查是否是git仓库</span>\n  <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-d</span> .git <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n    </span><span class=\"nb\">echo</span> <span class=\"s2\">\"Updating git repository in </span><span class=\"nv\">$dir</span><span class=\"s2\">\"</span>\n    <span class=\"nv\">current_branch</span><span class=\"o\">=</span><span class=\"sb\">`</span>git branch <span class=\"nt\">--show-current</span><span class=\"sb\">`</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"current_branch is </span><span class=\"nv\">$current_branch</span><span class=\"s2\">\"</span>\n\n    git config pull.rebase <span class=\"nb\">false</span> <span class=\"c\"># 合并（缺省策略）</span>\n    git pull origin <span class=\"nv\">$current_branch</span>  <span class=\"c\"># 使用git pull命令更新git仓库</span>\n  <span class=\"k\">else\n    </span><span class=\"nb\">echo</span> <span class=\"s2\">\"Skipping non-git repository in </span><span class=\"nv\">$dir</span><span class=\"s2\">\"</span>\n  <span class=\"k\">fi\n\n  </span><span class=\"nb\">cd</span> ..  <span class=\"c\"># 返回上一级目录</span>\n<span class=\"k\">done</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h2 id=\"23-私有组件批量提交工具\">2.3 私有组件批量提交工具</h2>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#!/bin/bash</span>\n\n<span class=\"c\"># 遍历更新当前目录下，子目录git仓库的脚本</span>\n<span class=\"c\"># author: PaysonChen</span>\n<span class=\"c\"># [目的]</span>\n<span class=\"c\"># 组件化建设过程及后续的协同开发中，经常碰到团队人员更新组件库代码及主工程，主工程容易更新，但是随着pod库的增多，每次更新组件库仓库的重复劳动需要被改进</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [目录]</span>\n<span class=\"c\">#   - auto_commit_git.sh 遍历更新当前目录下，子目录git仓库的脚本</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [说明]</span>\n<span class=\"c\"># 1、遍历指定目录（若未传参数则为当前目录）下的子目录</span>\n<span class=\"c\"># 2、cd 到子目录</span>\n<span class=\"c\"># 3、检查当前分支</span>\n<span class=\"c\"># 4、提交修改</span>\n<span class=\"c\"># 5、commit 、push</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [参数]</span>\n<span class=\"c\"># 1、参数1，指定目录</span>\n<span class=\"c\"># 2、参数2，提交信息</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [调用说明]</span>\n<span class=\"c\"># 1、未指定目录，则取当前目录：sh auto_commit_git.sh</span>\n<span class=\"c\"># 2、指定目录：sh auto_commit_git.sh /User/xxx/xx \"提交信息\"</span>\n\n\n<span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$1</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n    </span><span class=\"nb\">export </span><span class=\"nv\">dist_path</span><span class=\"o\">=</span><span class=\"k\">*</span>/\n    <span class=\"nb\">echo</span> <span class=\"s1\">'///指定目录 为空:'</span><span class=\"k\">${</span><span class=\"nv\">dist_path</span><span class=\"k\">}</span>\n<span class=\"k\">else\n    </span><span class=\"nb\">export </span><span class=\"nv\">dist_path</span><span class=\"o\">=</span><span class=\"nv\">$1</span>/<span class=\"k\">*</span>/\n    <span class=\"nb\">echo</span> <span class=\"s1\">'///指定目录 不为空:'</span><span class=\"k\">${</span><span class=\"nv\">dist_path</span><span class=\"k\">}</span>\n<span class=\"k\">fi\n\n</span><span class=\"nb\">echo</span> <span class=\"s1\">'///指定:'</span><span class=\"nv\">$1</span>\n<span class=\"nb\">echo</span> <span class=\"s1\">'///指定:'</span><span class=\"nv\">$2</span>\n\n<span class=\"c\"># 遍历指定目录的子目录</span>\n<span class=\"k\">for </span><span class=\"nb\">dir </span><span class=\"k\">in</span> <span class=\"k\">${</span><span class=\"nv\">dist_path</span><span class=\"k\">}</span><span class=\"p\">;</span> <span class=\"k\">do\n  </span><span class=\"nb\">cd</span> <span class=\"s2\">\"</span><span class=\"nv\">$dir</span><span class=\"s2\">\"</span>  <span class=\"c\"># 进入子目录</span>\n  <span class=\"nb\">echo</span> <span class=\"s1\">'///进入子目录:'</span><span class=\"k\">${</span><span class=\"nv\">dir</span><span class=\"k\">}</span>\n\n  <span class=\"c\"># 检查是否是git仓库</span>\n  <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-d</span> .git <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n    </span><span class=\"nb\">echo</span> <span class=\"s2\">\"commiting git repository in </span><span class=\"nv\">$dir</span><span class=\"s2\">\"</span>\n    <span class=\"nv\">current_branch</span><span class=\"o\">=</span><span class=\"sb\">`</span>git branch <span class=\"nt\">--show-current</span><span class=\"sb\">`</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"current_branch is </span><span class=\"nv\">$current_branch</span><span class=\"s2\">\"</span>\n    \n    git add <span class=\"nb\">.</span>\n    <span class=\"nv\">msg</span><span class=\"o\">=</span><span class=\"s2\">\"\"</span>\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$2</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nv\">msg</span><span class=\"o\">=</span><span class=\"s2\">\"--update:更新代码\"</span>\n        <span class=\"nb\">echo</span> <span class=\"s1\">'///提交记录 为空:'</span><span class=\"nv\">$msg</span>\n    <span class=\"k\">else\n        </span><span class=\"nv\">msg</span><span class=\"o\">=</span><span class=\"nv\">$2</span>\n        <span class=\"nb\">echo</span> <span class=\"s1\">'///提交记录 不为空:'</span><span class=\"nv\">$msg</span>\n    <span class=\"k\">fi\n\n    </span>git commit <span class=\"nt\">-m</span> <span class=\"s2\">\"</span><span class=\"nv\">$msg</span><span class=\"s2\">\"</span>\n    git push <span class=\"nt\">-f</span> origin master\n  <span class=\"k\">else\n    </span><span class=\"nb\">echo</span> <span class=\"s2\">\"Skipping non-git repository in </span><span class=\"nv\">$dir</span><span class=\"s2\">\"</span>\n  <span class=\"k\">fi\n\n  </span><span class=\"nb\">cd</span> ..  <span class=\"c\"># 返回上一级目录</span>\n<span class=\"k\">done</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h2 id=\"24-私有组件批量发版工具\">2.4 私有组件批量发版工具</h2>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#!/bin/bash</span>\n\n<span class=\"c\"># 遍历当前目录下，私有库自动自增发版</span>\n<span class=\"c\"># author: PaysonChen</span>\n<span class=\"c\"># [目的]</span>\n<span class=\"c\"># 组件化建设过程及后续的协同开发中，有些全局修改需要统一发版</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [目录]</span>\n<span class=\"c\">#   - auto_publish_git.sh  遍历当前目录下，私有库自动自增发版</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [说明]</span>\n<span class=\"c\"># 1、遍历指定目录（若未传参数则为当前目录）下的子目录</span>\n<span class=\"c\"># 2、cd 到子目录</span>\n<span class=\"c\"># 3、检查当前分支</span>\n<span class=\"c\"># 4、自动发版</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [参数]</span>\n<span class=\"c\"># 1、参数1，指定目录</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [调用说明]</span>\n<span class=\"c\"># 1、未指定目录，则取当前目录：sh auto_publish_git.sh</span>\n<span class=\"c\"># 2、指定目录：sh auto_publish_git.sh /User/xxx/xx</span>\n\n\n<span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$1</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n    </span><span class=\"nb\">export </span><span class=\"nv\">dist_path</span><span class=\"o\">=</span><span class=\"k\">*</span>/\n    <span class=\"nb\">echo</span> <span class=\"s1\">'///指定目录 为空:'</span><span class=\"k\">${</span><span class=\"nv\">dist_path</span><span class=\"k\">}</span>\n<span class=\"k\">else\n    </span><span class=\"nb\">export </span><span class=\"nv\">dist_path</span><span class=\"o\">=</span><span class=\"nv\">$1</span>/<span class=\"k\">*</span>/\n    <span class=\"nb\">echo</span> <span class=\"s1\">'///指定目录 不为空:'</span><span class=\"k\">${</span><span class=\"nv\">dist_path</span><span class=\"k\">}</span>\n<span class=\"k\">fi</span>\n    \n<span class=\"c\"># 遍历指定目录的子目录</span>\n<span class=\"k\">for </span><span class=\"nb\">dir </span><span class=\"k\">in</span> <span class=\"k\">${</span><span class=\"nv\">dist_path</span><span class=\"k\">}</span><span class=\"p\">;</span> <span class=\"k\">do\n  </span><span class=\"nb\">cd</span> <span class=\"s2\">\"</span><span class=\"nv\">$dir</span><span class=\"s2\">\"</span>  <span class=\"c\"># 进入子目录</span>\n  <span class=\"nb\">echo</span> <span class=\"s1\">'///进入子目录:'</span><span class=\"k\">${</span><span class=\"nv\">dir</span><span class=\"k\">}</span>\n\n  <span class=\"c\"># 检查是否是git仓库</span>\n  <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-d</span> .git <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n    </span><span class=\"nb\">echo</span> <span class=\"s2\">\"Updating git repository in </span><span class=\"nv\">$dir</span><span class=\"s2\">\"</span>\n    <span class=\"nv\">current_branch</span><span class=\"o\">=</span><span class=\"sb\">`</span>git branch <span class=\"nt\">--show-current</span><span class=\"sb\">`</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"current_branch is </span><span class=\"nv\">$current_branch</span><span class=\"s2\">\"</span>\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$2</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">echo</span> <span class=\"s2\">\"tag 为空，采用自增tag\"</span>\n        pod push\n    <span class=\"k\">else\n        </span><span class=\"nb\">echo</span> <span class=\"s2\">\"tag 不为空，tag=\"</span><span class=\"nv\">$2</span>\n        pod push <span class=\"nv\">$2</span>\n    <span class=\"k\">fi\n  else\n    </span><span class=\"nb\">echo</span> <span class=\"s2\">\"Skipping non-git repository in </span><span class=\"nv\">$dir</span><span class=\"s2\">\"</span>\n  <span class=\"k\">fi\n\n  </span><span class=\"nb\">cd</span> ..  <span class=\"c\"># 返回上一级目录</span>\n<span class=\"k\">done</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>其中 pod push 依赖于cocapods插件（计划在后续文章中讲解）</p>\n\n<h2 id=\"25-私有组件批量发版工具-优化\">2.5 私有组件批量发版工具-优化</h2>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#!/bin/bash</span>\n\n<span class=\"c\"># 遍历当前目录下，当最新提交不是Tag记录时（即有需要发版）才进行的私有库自动自增发版</span>\n<span class=\"c\"># author: PaysonChen</span>\n<span class=\"c\"># [目的]</span>\n<span class=\"c\"># 组件化建设过程及后续的协同开发中，有些全局修改需要统一发版</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [目录]</span>\n<span class=\"c\">#   - auto_tag_if_need_git.sh  遍历当前目录下，私有库根据是否需要发版的逻辑进行自动自增发版</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [说明]</span>\n<span class=\"c\"># 1、遍历指定目录（若未传参数则为当前目录）下的子目录</span>\n<span class=\"c\"># 2、cd 到子目录</span>\n<span class=\"c\"># 3、检查当前分支</span>\n<span class=\"c\"># 4、自动发版</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [参数]</span>\n<span class=\"c\"># 1、参数1，指定目录</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [调用说明]</span>\n<span class=\"c\"># 1、未指定目录，则取当前目录：sh auto_tag_if_need_git.sh</span>\n<span class=\"c\"># 2、指定目录：sh auto_tag_if_need_git.sh /User/xxx/xx</span>\n\n\n<span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$1</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n    </span><span class=\"nb\">export </span><span class=\"nv\">dist_path</span><span class=\"o\">=</span><span class=\"k\">*</span>/\n    <span class=\"nb\">echo</span> <span class=\"s1\">'///指定目录 为空:'</span><span class=\"k\">${</span><span class=\"nv\">dist_path</span><span class=\"k\">}</span>\n<span class=\"k\">else\n    </span><span class=\"nb\">export </span><span class=\"nv\">dist_path</span><span class=\"o\">=</span><span class=\"nv\">$1</span>/<span class=\"k\">*</span>/\n    <span class=\"nb\">echo</span> <span class=\"s1\">'///指定目录 不为空:'</span><span class=\"k\">${</span><span class=\"nv\">dist_path</span><span class=\"k\">}</span>\n<span class=\"k\">fi\n\n\nfunction </span>get_tag<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"nv\">latest_tag</span><span class=\"o\">=</span><span class=\"si\">$(</span>git describe <span class=\"nt\">--exact-match</span> <span class=\"nt\">--tags</span> <span class=\"si\">$(</span>git log <span class=\"nt\">-n1</span> <span class=\"nt\">--pretty</span><span class=\"o\">=</span><span class=\"s1\">'%h'</span><span class=\"si\">)</span> 2&gt;/dev/null<span class=\"si\">)</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">latest_tag</span><span class=\"k\">}</span><span class=\"s2\">\"</span>\n<span class=\"o\">}</span>\n\n<span class=\"k\">function </span>push_if_need<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"k\">if </span>git describe <span class=\"nt\">--exact-match</span> <span class=\"nt\">--tags</span> <span class=\"si\">$(</span>git log <span class=\"nt\">-n1</span> <span class=\"nt\">--pretty</span><span class=\"o\">=</span><span class=\"s1\">'%h'</span><span class=\"si\">)</span> <span class=\"o\">&gt;</span>/dev/null 2&gt;&amp;1<span class=\"p\">;</span> <span class=\"k\">then\n        \n        </span><span class=\"nv\">latest_tag</span><span class=\"o\">=</span><span class=\"si\">$(</span>get_tag<span class=\"si\">)</span>\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"[push_if_need]:最新提交是一个标签（</span><span class=\"k\">${</span><span class=\"nv\">latest_tag</span><span class=\"k\">}</span><span class=\"s2\">）</span><span class=\"nv\">$1</span><span class=\"s2\">。\"</span>\n        <span class=\"k\">return </span>0\n    <span class=\"k\">else\n        </span><span class=\"nv\">latest_tag</span><span class=\"o\">=</span><span class=\"si\">$(</span>get_tag<span class=\"si\">)</span>\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"[push_if_need]:最新提交不是标签（</span><span class=\"k\">${</span><span class=\"nv\">latest_tag</span><span class=\"k\">}</span><span class=\"s2\">）</span><span class=\"nv\">$1</span><span class=\"s2\">。\"</span>\n        pod push\n        <span class=\"nv\">latest_tag</span><span class=\"o\">=</span><span class=\"si\">$(</span>get_tag<span class=\"si\">)</span>\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"[push_if_need]:打包后的标签（</span><span class=\"k\">${</span><span class=\"nv\">latest_tag</span><span class=\"k\">}</span><span class=\"s2\">）</span><span class=\"nv\">$1</span><span class=\"s2\">。\"</span>\n        <span class=\"k\">return </span>1\n    <span class=\"k\">fi</span>\n<span class=\"o\">}</span>\n    \n<span class=\"c\"># 遍历指定目录的子目录</span>\n<span class=\"nv\">allTaged</span><span class=\"o\">=</span><span class=\"s2\">\"\"</span>\n\n<span class=\"k\">for </span><span class=\"nb\">dir </span><span class=\"k\">in</span> <span class=\"k\">${</span><span class=\"nv\">dist_path</span><span class=\"k\">}</span><span class=\"p\">;</span> <span class=\"k\">do\n  </span><span class=\"nb\">cd</span> <span class=\"s2\">\"</span><span class=\"nv\">$dir</span><span class=\"s2\">\"</span>  <span class=\"c\"># 进入子目录</span>\n  <span class=\"nb\">echo</span> <span class=\"s1\">'///进入子目录:'</span><span class=\"k\">${</span><span class=\"nv\">dir</span><span class=\"k\">}</span>\n\n  <span class=\"c\"># 检查是否是git仓库</span>\n  <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-d</span> .git <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n    </span><span class=\"nv\">result</span><span class=\"o\">=</span><span class=\"nb\">false\n    echo</span> <span class=\"s2\">\"Updating git repository in </span><span class=\"nv\">$dir</span><span class=\"s2\">\"</span>\n    <span class=\"nv\">current_branch</span><span class=\"o\">=</span><span class=\"sb\">`</span>git branch <span class=\"nt\">--show-current</span><span class=\"sb\">`</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"current_branch is </span><span class=\"nv\">$current_branch</span><span class=\"s2\">\"</span>\n    \n    git config pull.rebase <span class=\"nb\">false</span> <span class=\"c\"># 合并（缺省策略）</span>\n    git pull origin <span class=\"nv\">$current_branch</span>  <span class=\"c\"># 使用git pull命令更新git仓库</span>\n\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$2</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">echo</span> <span class=\"s2\">\"tag 为空，采用自增tag\"</span>\n<span class=\"c\">#        pod push</span>\n        push_if_need <span class=\"nv\">$dir</span>\n        <span class=\"nv\">result</span><span class=\"o\">=</span><span class=\"nv\">$?</span>\n    \n    <span class=\"k\">else\n        </span><span class=\"nb\">echo</span> <span class=\"s2\">\"tag 不为空，全量发版tag=\"</span><span class=\"nv\">$2</span>\n        pod push <span class=\"nv\">$2</span>\n    <span class=\"k\">fi\n\n\n    if</span> <span class=\"o\">[</span> <span class=\"nv\">$result</span> <span class=\"nt\">-eq</span> 1 <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then</span>\n<span class=\"c\">#        tmp=$allTaged</span>\n        <span class=\"nv\">latest_tag</span><span class=\"o\">=</span><span class=\"si\">$(</span>get_tag<span class=\"si\">)</span>\n\n        <span class=\"nv\">allTaged</span><span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"nv\">$allTaged</span><span class=\"s2\"> </span><span class=\"nv\">$dir$latest_tag</span><span class=\"s2\">\"</span>\n<span class=\"c\">#        echo \"变量是 true。\"$dir</span>\n<span class=\"c\">#        echo \"变量是 true。\"$tmp</span>\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"变量是 true。\"</span><span class=\"nv\">$allTaged</span>\n\n    <span class=\"k\">else\n        </span><span class=\"nb\">echo</span> <span class=\"s2\">\"变量是 false。\"</span>\n    <span class=\"k\">fi\n\n\n  else\n    </span><span class=\"nb\">echo</span> <span class=\"s2\">\"Skipping non-git repository in </span><span class=\"nv\">$dir</span><span class=\"s2\">\"</span>\n  <span class=\"k\">fi\n\n  </span><span class=\"nb\">cd</span> ..  <span class=\"c\"># 返回上一级目录</span>\n<span class=\"k\">done\n\n</span><span class=\"nb\">echo</span> <span class=\"s2\">\"------------------------\"</span>\n<span class=\"nb\">echo</span> <span class=\"s2\">\"allTaged（进行发版的所有组件）： = \"</span><span class=\"nv\">$allTaged</span>\n<span class=\"nb\">echo</span> <span class=\"s2\">\"------------------------\"</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h1 id=\"3其他工具介绍\">3.其他工具介绍</h1>\n\n<h2 id=\"31-删除注释掉的import工具\">3.1 删除注释掉的#import工具</h2>\n\n<pre><code class=\"language-objective-c\">//#import \"xxx.h\"\n</code></pre>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#!/bin/bash</span>\n\n<span class=\"c\"># 遍历指定目录下的类删除注释掉的import代码行的脚本</span>\n<span class=\"c\"># author: PaysonChen</span>\n<span class=\"c\"># [目的]</span>\n<span class=\"c\"># 工程阶段性整理无用import（注释掉）</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [目录]</span>\n<span class=\"c\">#   - delete_unused_import_annotation.sh</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [说明]</span>\n<span class=\"c\"># 1、遍历指定目录</span>\n<span class=\"c\"># 2、检索代码行</span>\n<span class=\"c\"># 3、符合给定条件：//import</span>\n<span class=\"c\"># 4、删除代码行</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [参数]</span>\n<span class=\"c\"># 1、参数1，指定目录</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [调用说明]</span>\n<span class=\"c\"># 1 调用示例：sh delete_unused_import_annotation.sh your_path</span>\n\n\nfind <span class=\"nv\">$1</span> <span class=\"nt\">-type</span> f <span class=\"se\">\\(</span> <span class=\"nt\">-name</span> <span class=\"s2\">\"*.h\"</span> <span class=\"nt\">-o</span> <span class=\"nt\">-name</span> <span class=\"s2\">\"*.m\"</span> <span class=\"se\">\\)</span> <span class=\"nt\">-exec</span> <span class=\"nb\">sed</span> <span class=\"nt\">-i</span> <span class=\"s1\">''</span> <span class=\"s1\">'/\\/\\/#import/d'</span> <span class=\"o\">{}</span> <span class=\"se\">\\;</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h2 id=\"32-未被引用的类文件清理工具\">3.2 未被引用的类文件清理工具</h2>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#!/bin/bash</span>\n\n<span class=\"c\"># [背景]</span>\n<span class=\"c\"># 基础组件拆分到一定程度时，主工程剩下的就多数与视图界面(vc、view等)相关的类文件。此时可以考虑对业务组件进行设计和规划，但是在此时，工程还存在如下问题：</span>\n<span class=\"c\"># 冗余文件：</span>\n<span class=\"c\">#   未被引用到Project，但存在在工程目录中的冗余的类文件</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># author: PaysonChen</span>\n<span class=\"c\"># [目的]</span>\n<span class=\"c\"># 为了减轻业务组件的工作量和复杂度，在此之前最好能净化/清理一下工程</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [目录]</span>\n<span class=\"c\">#   - find_all_file_no_project.sh</span>\n<span class=\"c\"># [说明]</span>\n<span class=\"c\"># 1、通过递归遍历工程目录，将遍历后的类名逐一与XXX.xcodeproj/project.pbxproj 文件内容进行匹配</span>\n<span class=\"c\"># 2、匹配不成功则输出文件列表</span>\n<span class=\"c\"># 3、【人工】对文件列表一一检查，确认是冗余文件则从工程中删除</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [参数]</span>\n<span class=\"c\"># 1、参数1，指定xcode工程自身的主工程类所在目录，而非project所在的目录</span>\n<span class=\"c\">#   例如 XXX/ProjectName/ProjectName.xcodeproj/project.pbxproj</span>\n<span class=\"c\">#       XXX/ProjectName/ProjectName/AppDelegate.h</span>\n<span class=\"c\">#   需要传入的是下面这地址：</span>\n<span class=\"c\">#       XXX/ProjectName/ProjectName</span>\n<span class=\"c\"># [调用说明]</span>\n<span class=\"c\"># 1、未指定目录，则取当前目录：sh find_all_file_no_project.sh</span>\n<span class=\"c\"># 2、指定目录：sh find_all_file_no_project.sh /Users/xxxxx/Project-IOS/ProjectName/ProjectName</span>\n\n\n<span class=\"c\">#!/bin/bash</span>\n\n<span class=\"k\">function </span>main<span class=\"o\">()</span> <span class=\"o\">{</span>\n    \n    <span class=\"c\"># 设置项目目录</span>\n    <span class=\"nv\">project_directory</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$1</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then</span>\n        <span class=\"c\">#未传参为当前目录</span>\n        <span class=\"nv\">project_directory</span><span class=\"o\">=</span><span class=\"nb\">.</span>\n    <span class=\"k\">fi</span>\n\n    <span class=\"c\"># 设置其他目录</span>\n    <span class=\"nv\">parent_path</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">dirname</span> <span class=\"s2\">\"</span><span class=\"nv\">$project_directory</span><span class=\"s2\">\"</span><span class=\"si\">)</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"project 路径：\"</span><span class=\"nv\">$parent_path</span>\n    \n    <span class=\"nv\">current_dir</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">basename</span> <span class=\"s2\">\"</span><span class=\"nv\">$project_directory</span><span class=\"s2\">\"</span><span class=\"si\">)</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"当前路径 文件夹名称：\"</span><span class=\"nv\">$current_dir</span>\n\n    \n    <span class=\"nv\">project_path</span><span class=\"o\">=</span><span class=\"si\">$(</span>find <span class=\"s2\">\"</span><span class=\"nv\">$parent_path</span><span class=\"s2\">\"</span>/<span class=\"nv\">$current_dir</span>.xcodeproj <span class=\"nt\">-type</span> f <span class=\"se\">\\(</span> <span class=\"nt\">-name</span> <span class=\"s2\">\"*.pbxproj\"</span> <span class=\"se\">\\)</span><span class=\"si\">)</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"project 路径：\"</span><span class=\"nv\">$project_path</span>\n\n    <span class=\"nv\">all_file_path</span><span class=\"o\">=</span><span class=\"si\">$(</span>find <span class=\"s2\">\"</span><span class=\"nv\">$project_directory</span><span class=\"s2\">\"</span> <span class=\"nt\">-type</span> f <span class=\"se\">\\(</span> <span class=\"nt\">-name</span> <span class=\"s2\">\"*.h\"</span> <span class=\"se\">\\)</span><span class=\"si\">)</span>\n    <span class=\"nv\">all_file_path_cnt</span><span class=\"o\">=</span><span class=\"si\">$(</span>find <span class=\"s2\">\"</span><span class=\"nv\">$project_directory</span><span class=\"s2\">\"</span> <span class=\"nt\">-type</span> f <span class=\"se\">\\(</span> <span class=\"nt\">-name</span> <span class=\"s2\">\"*.h\"</span> <span class=\"se\">\\)</span> | <span class=\"nb\">wc</span> <span class=\"nt\">-l</span><span class=\"si\">)</span>\n\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"主工程 头文件数量：\"</span><span class=\"nv\">$all_file_path_cnt</span>\n\n    <span class=\"k\">for </span>src_file <span class=\"k\">in</span> <span class=\"nv\">$all_file_path</span><span class=\"p\">;</span> <span class=\"k\">do</span>\n    <span class=\"c\">#    echo $src_file</span>\n        <span class=\"nv\">filename</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">basename</span> <span class=\"s2\">\"</span><span class=\"nv\">$src_file</span><span class=\"s2\">\"</span> .h<span class=\"si\">)</span>\n        <span class=\"k\">if</span>  <span class=\"o\">!</span> <span class=\"nb\">grep</span> <span class=\"nt\">-q</span> <span class=\"s2\">\"</span><span class=\"se\">\\b</span><span class=\"nv\">$filename</span><span class=\"se\">\\b</span><span class=\"s2\">\"</span> <span class=\"s2\">\"</span><span class=\"nv\">$project_path</span><span class=\"s2\">\"</span><span class=\"p\">;</span>  <span class=\"k\">then\n            </span><span class=\"nb\">echo</span> <span class=\"s2\">\"project不包含：\"</span><span class=\"nv\">$src_file</span>\n        <span class=\"k\">fi\n    done</span>\n<span class=\"o\">}</span>\n\n\nmain <span class=\"nv\">$1</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h2 id=\"33-未被使用的类文件清理工具\">3.3 未被使用的类文件清理工具</h2>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#!/bin/bash</span>\n\n<span class=\"c\"># [背景]</span>\n<span class=\"c\"># 基础组件拆分到一定程度时，主工程剩下的就多数与视图界面(vc、view等)相关的类文件。此时可以考虑对业务组件进行设计和规划，但是在此时，工程还存在如下问题：</span>\n<span class=\"c\">#    冗余文件：</span>\n<span class=\"c\">#    非冗余但未被使用的文件</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># author: PaysonChen</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [目的]</span>\n<span class=\"c\"># 此脚本解决 \"非冗余但未被使用的文件\" 的清理</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [目录]</span>\n<span class=\"c\">#   - find_unused_class.sh</span>\n<span class=\"c\"># [说明]</span>\n<span class=\"c\"># 1 遍历工程目录的所有实现类：.m文件（不包含category）</span>\n<span class=\"c\"># 2 将类名与工程内除自身以外所有文件进行进逐行匹配（包含category）</span>\n<span class=\"c\"># 3 当匹配到不包含// 与 #import 开头的行，则算为有引用，否则为未引用</span>\n<span class=\"c\"># 4 将未匹配到的文件路径进行输出</span>\n<span class=\"c\"># 5 将上述匹配出来的文件先进行移除，再执行一遍（由于第一层被移除，可能会暴露出更多没被引用的类）</span>\n<span class=\"c\"># 6 直到没有匹配到未被调用的类为止</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [参数]</span>\n<span class=\"c\"># 1、参数1，指定xcode工程目录 （未指定则为当前目录）</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [调用说明]</span>\n<span class=\"c\"># 1、未指定目录，则取当前目录：sh find_unused_class.sh</span>\n<span class=\"c\"># 2、指定目录 ：sh find_unused_class.sh /Users/xxxxx/ProjectName-IOS/ProjectName/ProjectName</span>\n\n\n<span class=\"c\">#!/bin/bash</span>\n\n<span class=\"c\">#是否重复执行到没有找到不可用文件</span>\n<span class=\"nb\">export </span><span class=\"nv\">cycle_deal</span><span class=\"o\">=</span>1\n<span class=\"nb\">export </span><span class=\"nv\">cycle_idx</span><span class=\"o\">=</span>1\n<span class=\"nv\">total_unused_file_name</span><span class=\"o\">=</span><span class=\"s1\">''</span>\n<span class=\"k\">function </span>main<span class=\"o\">()</span> <span class=\"o\">{</span>\n    \n    <span class=\"c\"># 设置项目目录</span>\n    <span class=\"nv\">project_directory</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$1</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then</span>\n        <span class=\"c\">#未传参为当前目录</span>\n        <span class=\"nv\">project_directory</span><span class=\"o\">=</span><span class=\"nb\">.</span>\n    <span class=\"k\">fi</span>\n\n    <span class=\"c\">#初始化参数：</span>\n    <span class=\"nv\">unused_files</span><span class=\"o\">=</span><span class=\"s1\">''</span>\n\n    <span class=\"c\"># 查找所有以ViewController.m结尾的文件并输出列表</span>\n    <span class=\"nv\">all_class_path</span><span class=\"o\">=</span><span class=\"si\">$(</span>find <span class=\"s2\">\"</span><span class=\"nv\">$project_directory</span><span class=\"s2\">\"</span> <span class=\"nt\">-type</span> f <span class=\"se\">\\(</span> <span class=\"nt\">-name</span> <span class=\"s2\">\"*.m\"</span> <span class=\"se\">\\)</span> | <span class=\"nb\">grep</span> <span class=\"nt\">-v</span> <span class=\"s1\">'+'</span><span class=\"si\">)</span>\n\n    <span class=\"nv\">all_file_path</span><span class=\"o\">=</span><span class=\"si\">$(</span>find <span class=\"s2\">\"</span><span class=\"nv\">$project_directory</span><span class=\"s2\">\"</span> <span class=\"nt\">-type</span> f <span class=\"se\">\\(</span> <span class=\"nt\">-name</span> <span class=\"s2\">\"*.m\"</span> <span class=\"nt\">-o</span> <span class=\"nt\">-name</span> <span class=\"s2\">\"*.h\"</span> <span class=\"se\">\\)</span> <span class=\"si\">)</span>\n\n    <span class=\"nv\">file_cnt</span><span class=\"o\">=</span>0\n    <span class=\"k\">for </span>file <span class=\"k\">in</span> <span class=\"nv\">$all_class_path</span><span class=\"p\">;</span> <span class=\"k\">do\n        </span><span class=\"nv\">file_cnt</span><span class=\"o\">=</span><span class=\"k\">$((</span>file_cnt+1<span class=\"k\">))</span>\n    <span class=\"k\">done\n    </span><span class=\"nb\">echo</span> <span class=\"s2\">\"*******file_cnt：\"</span><span class=\"nv\">$file_cnt</span>\n\n\n    <span class=\"k\">for </span>file <span class=\"k\">in</span> <span class=\"nv\">$all_class_path</span><span class=\"p\">;</span> <span class=\"k\">do\n        </span><span class=\"nv\">filename</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">basename</span> <span class=\"s2\">\"</span><span class=\"nv\">$file</span><span class=\"s2\">\"</span> .m<span class=\"si\">)</span>\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"***********开始遍历文件名：\"</span><span class=\"nv\">$filename</span>\n        <span class=\"nv\">is_referenced</span><span class=\"o\">=</span><span class=\"nb\">false\n        </span><span class=\"k\">for </span>other_file <span class=\"k\">in</span> <span class=\"nv\">$all_file_path</span><span class=\"p\">;</span> <span class=\"k\">do\n            </span><span class=\"nv\">other_file_name</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">basename</span> <span class=\"s2\">\"</span><span class=\"nv\">$other_file</span><span class=\"s2\">\"</span><span class=\"si\">)</span>\n            <span class=\"c\">#获取除自身以外的类名：不包含拓展的名称，为了避免在自身的.h .m进行引用判断</span>\n            <span class=\"nv\">other_file_name_without_extension</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">echo</span> <span class=\"s2\">\"</span><span class=\"nv\">$other_file_name</span><span class=\"s2\">\"</span> | <span class=\"nb\">cut</span> <span class=\"nt\">-d</span><span class=\"nb\">.</span> <span class=\"nt\">-f1</span><span class=\"si\">)</span>\n            <span class=\"c\">#获取category的主类名称</span>\n            <span class=\"nv\">other_file_name_without_extension_before_plus</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">echo</span> <span class=\"s2\">\"</span><span class=\"nv\">$other_file_name_without_extension</span><span class=\"s2\">\"</span> | <span class=\"nb\">awk</span> <span class=\"nt\">-F</span><span class=\"s1\">'+'</span> <span class=\"s1\">'{print $1}'</span><span class=\"si\">)</span>\n            <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"s2\">\"</span><span class=\"nv\">$other_file_name_without_extension_before_plus</span><span class=\"s2\">\"</span> <span class=\"o\">!=</span> <span class=\"s2\">\"</span><span class=\"nv\">$filename</span><span class=\"s2\">\"</span> <span class=\"o\">]</span> <span class=\"p\">;</span> <span class=\"k\">then</span>\n            <span class=\"c\"># if [ \"$other_file\" != \"$file\" ] &amp;&amp; ([ \"${other_file##*.}\" = \"m\" ] ); then</span>\n                <span class=\"k\">if </span><span class=\"nb\">grep</span> <span class=\"nt\">-q</span> <span class=\"s2\">\"</span><span class=\"se\">\\b</span><span class=\"nv\">$filename</span><span class=\"se\">\\b</span><span class=\"s2\">\"</span> <span class=\"s2\">\"</span><span class=\"nv\">$other_file</span><span class=\"s2\">\"</span><span class=\"p\">;</span>  <span class=\"k\">then</span>\n                    <span class=\"c\"># 检查文件中是否有注释行</span>\n                    <span class=\"nv\">has_comment</span><span class=\"o\">=</span><span class=\"nb\">false\n                    </span><span class=\"k\">while </span><span class=\"nv\">IFS</span><span class=\"o\">=</span> <span class=\"nb\">read</span> <span class=\"nt\">-r</span> line<span class=\"p\">;</span> <span class=\"k\">do\n                        </span><span class=\"nb\">echo</span> <span class=\"s2\">\"逐行匹配：\"</span><span class=\"nv\">$line</span>\n                        <span class=\"k\">if</span> <span class=\"o\">!</span> <span class=\"nb\">grep</span> <span class=\"nt\">-qE</span> <span class=\"s2\">\"^[[:space:]]*//\"</span> <span class=\"o\">&lt;&lt;&lt;</span> <span class=\"s2\">\"</span><span class=\"nv\">$line</span><span class=\"s2\">\"</span><span class=\"p\">;</span> <span class=\"k\">then\n                            if</span> <span class=\"o\">[[</span> <span class=\"o\">!</span> <span class=\"nv\">$line</span> <span class=\"o\">=</span>~ ^[[:space:]]<span class=\"k\">*</span><span class=\"c\">#import ]]; then</span>\n                                <span class=\"nv\">has_comment</span><span class=\"o\">=</span><span class=\"nb\">true\n                                echo</span> <span class=\"s2\">\"在文件:\"</span><span class=\"nv\">$other_file</span><span class=\"s2\">\"匹配\"</span><span class=\"nv\">$filename</span><span class=\"s2\">\"存在 并且不是 注释代码 或者 import 的 break（\"</span><span class=\"nv\">$line</span>\n                                <span class=\"nb\">break\n                            </span><span class=\"k\">fi\n\n                        fi\n                    done</span> <span class=\"o\">&lt;&lt;&lt;</span> <span class=\"s2\">\"</span><span class=\"si\">$(</span><span class=\"nb\">grep</span> <span class=\"s2\">\"</span><span class=\"se\">\\b</span><span class=\"nv\">$filename</span><span class=\"se\">\\b</span><span class=\"s2\">\"</span> <span class=\"s2\">\"</span><span class=\"nv\">$other_file</span><span class=\"s2\">\"</span><span class=\"si\">)</span><span class=\"s2\">\"</span>\n                    \n                    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"s2\">\"</span><span class=\"nv\">$has_comment</span><span class=\"s2\">\"</span> <span class=\"o\">=</span> <span class=\"nb\">true</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n                        </span><span class=\"nv\">is_referenced</span><span class=\"o\">=</span><span class=\"nb\">true\n                        break\n                    </span><span class=\"k\">fi\n                fi\n            fi\n        done\n\n        if</span> <span class=\"o\">[</span> <span class=\"s2\">\"</span><span class=\"nv\">$is_referenced</span><span class=\"s2\">\"</span> <span class=\"o\">=</span> <span class=\"nb\">false</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n            </span><span class=\"nb\">echo</span> <span class=\"s2\">\"没有被引用到的文件:\"</span><span class=\"nv\">$file</span>\n            <span class=\"nv\">unused_files</span><span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"nv\">$unused_files$file</span><span class=\"se\">\\n</span><span class=\"s2\">\"</span>\n        <span class=\"k\">fi\n        </span><span class=\"nb\">echo</span> <span class=\"s2\">\"***********\"</span>\n    <span class=\"k\">done</span>\n\n    <span class=\"c\"># 输出未被引用的文件列表</span>\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-n</span> <span class=\"s2\">\"</span><span class=\"nv\">$unused_files</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">echo</span> <span class=\"nt\">-e</span> <span class=\"s2\">\"Unused class files:</span><span class=\"se\">\\n</span><span class=\"nv\">$unused_files</span><span class=\"s2\">\"</span>\n        <span class=\"nv\">total_unused_file_name</span><span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"nv\">$total_unused_file_name$unused_files</span><span class=\"se\">\\n</span><span class=\"s2\">\"</span>\n\n        <span class=\"c\">#将检索出来的文件 mv 出来</span>\n        <span class=\"nb\">mkdir</span> <span class=\"nt\">-p</span> ./unused_files/<span class=\"nv\">$cycle_idx</span>/\n        <span class=\"nv\">array</span><span class=\"o\">=(</span><span class=\"sb\">`</span><span class=\"nb\">echo</span> <span class=\"nv\">$unused_files</span> | <span class=\"nb\">tr</span> <span class=\"s1\">'\\n'</span> <span class=\"s1\">' '</span><span class=\"sb\">`</span><span class=\"o\">)</span>\n        <span class=\"k\">for </span>element <span class=\"k\">in</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">array</span><span class=\"p\">[@]</span><span class=\"k\">}</span><span class=\"s2\">\"</span><span class=\"p\">;</span> <span class=\"k\">do\n            </span><span class=\"nv\">element</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">echo</span> <span class=\"s2\">\"</span><span class=\"nv\">$element</span><span class=\"s2\">\"</span> | <span class=\"nb\">tr</span> <span class=\"nt\">-d</span> <span class=\"s1\">'\\n'</span><span class=\"si\">)</span>\n            <span class=\"nb\">echo</span> <span class=\"s2\">\"Unused class = \"</span><span class=\"nv\">$element</span>\n            <span class=\"nv\">element_filename</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">basename</span> <span class=\"s2\">\"</span><span class=\"nv\">$element</span><span class=\"s2\">\"</span> .m<span class=\"si\">)</span>\n            <span class=\"nv\">element_dirname</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">dirname</span> <span class=\"s2\">\"</span><span class=\"nv\">$element</span><span class=\"s2\">\"</span><span class=\"si\">)</span>\n            \n            <span class=\"nv\">destFoldName</span><span class=\"o\">=</span><span class=\"s2\">\"./unused_files/</span><span class=\"nv\">$cycle_idx</span><span class=\"s2\">/</span><span class=\"k\">${</span><span class=\"nv\">element_dirname</span><span class=\"k\">}</span><span class=\"s2\">/</span><span class=\"k\">${</span><span class=\"nv\">element_filename</span><span class=\"k\">}</span><span class=\"s2\">\"</span>\n            <span class=\"nb\">mkdir</span> <span class=\"nt\">-p</span> <span class=\"nv\">$destFoldName</span>\n            \n            <span class=\"nb\">cp</span> <span class=\"nt\">-f</span> <span class=\"k\">${</span><span class=\"nv\">element_dirname</span><span class=\"k\">}</span>/<span class=\"k\">${</span><span class=\"nv\">element_filename</span><span class=\"k\">}</span>.h <span class=\"nv\">$destFoldName</span>/<span class=\"nv\">$element_filename</span>.h\n            <span class=\"nb\">cp</span> <span class=\"nt\">-f</span> <span class=\"k\">${</span><span class=\"nv\">element_dirname</span><span class=\"k\">}</span>/<span class=\"k\">${</span><span class=\"nv\">element_filename</span><span class=\"k\">}</span>.m <span class=\"nv\">$destFoldName</span>/<span class=\"nv\">$element_filename</span>.m\n        <span class=\"k\">done</span>\n        \n        <span class=\"c\">#cycle_deal参数为空则不循环执行</span>\n        <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$cycle_deal</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n            </span><span class=\"nb\">echo</span> <span class=\"s2\">\"cycle_deal参数为空则不循环执行\"</span>\n\n            <span class=\"nb\">exit </span>0\n        <span class=\"k\">else</span>\n            <span class=\"c\">#cycle_deal 不为空 循环执行，直到不再有新文件检出</span>\n            <span class=\"nb\">echo</span> <span class=\"nt\">-e</span> <span class=\"s2\">\"循环执行\"</span>\n            <span class=\"nv\">cycle_idx</span><span class=\"o\">=</span><span class=\"k\">$((</span>cycle_idx+1<span class=\"k\">))</span>\n            main <span class=\"nv\">$1</span>\n        <span class=\"k\">fi\n\n    else\n        </span><span class=\"nb\">echo</span> <span class=\"s2\">\"No unused ViewController files found.\"</span><span class=\"nv\">$all_file_path</span>\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"**************************\"</span>\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"total_unused_file_name class files:</span><span class=\"se\">\\n</span><span class=\"nv\">$total_unused_file_name</span><span class=\"s2\">\"</span>\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"**************************\"</span>\n\n        <span class=\"nb\">exit </span>0\n    <span class=\"k\">fi</span>\n<span class=\"o\">}</span>\n\n\nmain <span class=\"nv\">$1</span>\n\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h2 id=\"34-冲突解决工具\">3.4 冲突解决工具</h2>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#!/bin/bash</span>\n\n<span class=\"c\"># [背景]</span>\n<span class=\"c\">#    组件化过程中不可避免的会遇到这样一个问题：</span>\n<span class=\"c\">#    组件化的过程一般周期比较长，此过程中不免会有业务需求的输入，这样就会导致一个情况：</span>\n<span class=\"c\">#    组件化分支已经将主工程里的类迁移到pod仓库,而在此期间的业务需求代码对这些被迁移的类有修改，</span>\n<span class=\"c\">#    合并主干（其他分支）代码时,主干（其他分支）有对移动之前的类做修改的情况下,会导致合并冲突,</span>\n<span class=\"c\">#    这种冲突是整个类都是新增符号(+),没有冲突符号，此时无法简单的通过工具，或者冲突的符号对其进行解冲突。</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># author: PaysonChen</span>\n<span class=\"c\"># [目的]</span>\n<span class=\"c\"># 为了减轻组件化分支合并主干分支的工作量和复杂度</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [目录]</span>\n<span class=\"c\">#   - merge.sh</span>\n<span class=\"c\"># [说明]</span>\n<span class=\"c\"># 1、整理project 冲突文件的路径列表</span>\n<span class=\"c\"># 2、整理冲突列表在各个pod库中的路径列表</span>\n<span class=\"c\"># 3、在未预合并分支上先mv一份整理后的pod库中的路径列表到主工程</span>\n<span class=\"c\"># 4、再进行分支合并</span>\n<span class=\"c\"># 5、解决冲突后，执行将主工程的上述列表，mv到各个pod库</span>\n<span class=\"c\"># 6、提交各个Pod库代码</span>\n<span class=\"c\"># 7、整理Project文件及工程类</span>\n<span class=\"c\"># 8、提交Project代码</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [参数]</span>\n<span class=\"c\"># 1、参数1：源路径：从参数1下的文件路径了列表，移动到参数2（索引）对应的路径</span>\n<span class=\"c\">#   例如 merge_pods_files.txt</span>\n<span class=\"c\"># 2、参数2，目标移动路径列表</span>\n<span class=\"c\">#   例如 merge_project_files.txt</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [调用说明]</span>\n<span class=\"c\"># 1、需要指定目录</span>\n<span class=\"c\">#  从Pod移动到主工程：sh merge.sh merge_pods_files.txt merge_project_files.txt</span>\n<span class=\"c\">#  从主工程移动到Pod：sh merge.sh merge_project_files.txt merge_pods_files.txt</span>\n\n\n<span class=\"c\"># 从外部文件中读取源文件路径和目标文件夹路径</span>\n<span class=\"c\">#\"source_paths.txt\"</span>\n<span class=\"nv\">source_file</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n<span class=\"c\">#\"destination_paths.txt\"</span>\n<span class=\"nv\">destination_file</span><span class=\"o\">=</span><span class=\"nv\">$2</span>\n\n<span class=\"c\"># 检查源文件是否存在</span>\n<span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"o\">!</span> <span class=\"nt\">-f</span> <span class=\"s2\">\"</span><span class=\"nv\">$source_file</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n    </span><span class=\"nb\">echo</span> <span class=\"s2\">\"源文件 '</span><span class=\"nv\">$source_file</span><span class=\"s2\">' 不存在。\"</span>\n    <span class=\"nb\">exit </span>1\n<span class=\"k\">fi</span>\n\n<span class=\"c\"># 检查目标文件夹文件是否存在</span>\n<span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"o\">!</span> <span class=\"nt\">-f</span> <span class=\"s2\">\"</span><span class=\"nv\">$destination_file</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n    </span><span class=\"nb\">echo</span> <span class=\"s2\">\"源文件 '</span><span class=\"nv\">$source_file</span><span class=\"s2\">' 不存在。\"</span>\n    <span class=\"nb\">exit </span>1\n<span class=\"k\">fi</span>\n\n<span class=\"c\">#保证每条记录都有一个回车（最后一行如果没有回车，会被忽略）</span>\n<span class=\"k\">while </span><span class=\"nv\">IFS</span><span class=\"o\">=</span> <span class=\"nb\">read</span> <span class=\"nt\">-r</span> source_path <span class=\"o\">&amp;&amp;</span> <span class=\"nv\">IFS</span><span class=\"o\">=</span> <span class=\"nb\">read</span> <span class=\"nt\">-r</span> destination_folder &lt;&amp;3<span class=\"p\">;</span> <span class=\"k\">do\n    </span>source_paths+<span class=\"o\">=(</span><span class=\"s2\">\"</span><span class=\"nv\">$source_path</span><span class=\"s2\">\"</span><span class=\"o\">)</span>\n    destination_paths+<span class=\"o\">=(</span><span class=\"s2\">\"</span><span class=\"nv\">$destination_folder</span><span class=\"s2\">\"</span><span class=\"o\">)</span>\n<span class=\"k\">done</span> &lt; <span class=\"nv\">$source_file</span> 3&lt; <span class=\"nv\">$destination_file</span>\n\n<span class=\"c\"># 输出数组长度</span>\n<span class=\"nb\">echo</span> <span class=\"s2\">\"源文件路径数组长度：</span><span class=\"k\">${#</span><span class=\"nv\">source_paths</span><span class=\"p\">[@]</span><span class=\"k\">}</span><span class=\"s2\">\"</span>\n<span class=\"nb\">echo</span> <span class=\"s2\">\"目标文件夹路径数组长度：</span><span class=\"k\">${#</span><span class=\"nv\">destination_paths</span><span class=\"p\">[@]</span><span class=\"k\">}</span><span class=\"s2\">\"</span>\n\n<span class=\"c\">#exit 0</span>\n<span class=\"c\"># 遍历索引</span>\n<span class=\"k\">for </span>index <span class=\"k\">in</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"p\">!source_paths[@]</span><span class=\"k\">}</span><span class=\"s2\">\"</span><span class=\"p\">;</span> <span class=\"k\">do\n    </span><span class=\"nb\">echo</span> <span class=\"s2\">\"遍历目标文件夹路径数组,index=\"</span><span class=\"nv\">$index</span>\n    <span class=\"nv\">source_path</span><span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">source_paths</span><span class=\"p\">[</span><span class=\"nv\">$index</span><span class=\"p\">]</span><span class=\"k\">}</span><span class=\"s2\">\"</span>\n    <span class=\"nv\">destination_path</span><span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">destination_paths</span><span class=\"p\">[</span><span class=\"nv\">$index</span><span class=\"p\">]</span><span class=\"k\">}</span><span class=\"s2\">\"</span>\n\n    <span class=\"c\"># 构建目标文件的完整路径</span>\n<span class=\"c\">#    destination_path=\"${destination_folder}${source_path}\"</span>\n\n    <span class=\"c\"># 检查目标文件是否存在，如果存在则删除</span>\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-e</span> <span class=\"s2\">\"</span><span class=\"nv\">$destination_path</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">rm</span> <span class=\"s2\">\"</span><span class=\"nv\">$destination_path</span><span class=\"s2\">\"</span>\n    <span class=\"k\">fi</span>\n\n    <span class=\"c\"># 确保目标文件夹存在</span>\n    <span class=\"nb\">mkdir</span> <span class=\"nt\">-p</span> <span class=\"s2\">\"</span><span class=\"si\">$(</span><span class=\"nb\">dirname</span> <span class=\"s2\">\"</span><span class=\"nv\">$destination_path</span><span class=\"s2\">\"</span><span class=\"si\">)</span><span class=\"s2\">\"</span>\n\n    <span class=\"c\"># 复制源文件到目标路径</span>\n    <span class=\"nb\">mv</span> <span class=\"s2\">\"</span><span class=\"nv\">$source_path</span><span class=\"s2\">\"</span> <span class=\"s2\">\"</span><span class=\"nv\">$destination_path</span><span class=\"s2\">\"</span>\n<span class=\"k\">done\n\n</span><span class=\"nb\">echo</span> <span class=\"s2\">\"文件复制完成。\"</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h2 id=\"35-版权信息批量同步工具\">3.5 版权信息批量同步工具</h2>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#!/bin/bash</span>\n\n<span class=\"c\"># 遍历更新当前目录下(含子目录）所有iOS工程类文件：.h .m .swift 并对其注释头进行模板替换</span>\n<span class=\"c\"># author: PaysonChen</span>\n<span class=\"c\"># [目的]</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># 组件化规整之后，可能存在的情况是前后的文件命名不一致导致的影响代码易读性、易维护等问题</span>\n<span class=\"c\"># 除此之外，由于代码经由不同人迭代的，甚至不同组织迭代（从外包接手的项目）还存在一些文件注释的注释模板差异的情况</span>\n<span class=\"c\"># 此脚本目的为了解决存量类文件头注释统一性问题</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [目录]</span>\n<span class=\"c\">#   - replace_class_header_anotation.sh 遍历更新当前目录下，子目录git仓库的脚本</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [说明]</span>\n<span class=\"c\"># 1、遍历指定目录（若未传参数则为当前目录）下的子目录</span>\n<span class=\"c\"># 2、匹配所有iOS工程类文件：.h .m .swift</span>\n<span class=\"c\"># 3、对其注释头进行模板替换</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [参数]</span>\n<span class=\"c\"># 1、参数1，指定目录</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [调用说明]</span>\n<span class=\"c\"># 1、未指定目录，则取当前目录：sh replace_class_header_anotation.sh</span>\n<span class=\"c\"># 2、指定目录：sh replace_class_header_anotation.sh /User/xxx/xx</span>\n<span class=\"c\"># 本脚本适用于将：下述注释替换成 统一注释模板：</span>\n<span class=\"c\">#   其一：</span>\n<span class=\"c\">#//</span>\n<span class=\"c\">#//  FileName.h</span>\n<span class=\"c\">#//  ProjectName</span>\n<span class=\"c\">#//</span>\n<span class=\"c\">#//  Created by Author on Date.</span>\n<span class=\"c\">#// (没版权信息)</span>\n<span class=\"c\">#//</span>\n<span class=\"c\">#</span>\n<span class=\"c\">#   其二：</span>\n<span class=\"c\">#   /****************************************************************************************************</span>\n<span class=\"c\">#   * 版权所有： Copyright (c) 2012-2021 xxxx. All rights reserved.</span>\n<span class=\"c\">#   * 作 者： Author （2021/3/12）</span>\n<span class=\"c\">#   * 界面描述：  界面描述</span>\n<span class=\"c\">#   ****************************************************************************************************/</span>\n<span class=\"c\">#</span>\n<span class=\"c\">#   其三：</span>\n<span class=\"c\">#   没有任何注释的</span>\n<span class=\"c\">#</span>\n<span class=\"c\">#</span>\n<span class=\"c\">#   替换成统一注释模板：</span>\n<span class=\"c\">#</span>\n<span class=\"c\">#//</span>\n<span class=\"c\">#//  \"$filename\"</span>\n<span class=\"c\">#//  \"$project_name\"</span>\n<span class=\"c\">#//</span>\n<span class=\"c\">#//  Created by \"$auth\" on \"$date\".</span>\n<span class=\"c\">#//  \"$copyright_str\"</span>\n<span class=\"c\">#//</span>\n<span class=\"c\">#</span>\n<span class=\"c\">#定义版权信息</span>\n<span class=\"nb\">export </span><span class=\"nv\">copyright_str</span><span class=\"o\">=</span><span class=\"s2\">\"Copyright (C) </span><span class=\"si\">$(</span><span class=\"nb\">date</span> +%Y<span class=\"si\">)</span><span class=\"s2\">  Your CompanyName Limited. All rights reserved.\"</span>\n\n<span class=\"c\">#定义默认用户信息：PaysonChen</span>\n<span class=\"nb\">export </span><span class=\"nv\">def_author_str</span><span class=\"o\">=</span><span class=\"s2\">\"PaysonChen\"</span>\n\n<span class=\"c\">#定义默认日期：当前日期</span>\n<span class=\"nb\">export </span><span class=\"nv\">def_time_str</span><span class=\"o\">=</span><span class=\"sb\">`</span><span class=\"nb\">date</span> +%Y/%m/%d<span class=\"sb\">`</span>\n\n<span class=\"k\">function </span>get_creator_name_with_template_2<span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"nv\">file</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n    <span class=\"nv\">creator_name</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">sed</span> <span class=\"nt\">-n</span> <span class=\"s1\">'s/.*作    者： \\(.*\\).*/\\1/p'</span> <span class=\"nv\">$file</span><span class=\"si\">)</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"creator_name=\"</span><span class=\"nv\">$creator_name</span><span class=\"s2\">\" in file=\"</span><span class=\"nv\">$file</span>\n    \n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$creator_name</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">echo</span> <span class=\"s1\">'///获取创建者 第二种模板获取 为空 使用默认值'</span>\n        <span class=\"nv\">creator_name</span><span class=\"o\">=</span><span class=\"nv\">$def_author_str</span>\n    <span class=\"k\">fi</span>\n<span class=\"o\">}</span>\n\n<span class=\"k\">function </span>get_creator_name<span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"nv\">file</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n    <span class=\"nv\">creator_name</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">sed</span> <span class=\"nt\">-n</span> <span class=\"s1\">'s/.*Created by \\(.*\\) on.*/\\1/p'</span> <span class=\"nv\">$file</span><span class=\"si\">)</span>\n    \n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$creator_name</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span>get_creator_name_with_template_2 <span class=\"nv\">$file</span>\n    <span class=\"k\">fi\n    \n    </span><span class=\"nb\">echo</span> <span class=\"s2\">\"--------creator_name=【\"</span><span class=\"nv\">$creator_name</span><span class=\"s2\">\"】 in file=\"</span><span class=\"nv\">$file</span>\n<span class=\"o\">}</span>\n\n\n\n<span class=\"k\">function </span>get_creator_time_with_template_2<span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"nv\">file</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n    <span class=\"nv\">creator_time</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">sed</span> <span class=\"nt\">-n</span> <span class=\"s1\">'s/.*创建日期： \\(.*\\).*/\\1/p'</span> <span class=\"nv\">$file</span><span class=\"si\">)</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"-------创建日期=【\"</span><span class=\"nv\">$creator_time</span><span class=\"s2\">\"】 in file=\"</span><span class=\"nv\">$file</span>\n\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$creator_time</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then</span>\n<span class=\"c\">#        echo '///获取创建时间 第二种模板获取 为空 使用默认值'</span>\n        <span class=\"nv\">creator_time</span><span class=\"o\">=</span><span class=\"nv\">$def_time_str</span>\n    <span class=\"k\">fi</span>\n<span class=\"o\">}</span>\n\n\n<span class=\"k\">function </span>format_creator_time<span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"nv\">creator_time</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n    \n    <span class=\"nv\">length</span><span class=\"o\">=</span><span class=\"k\">${#</span><span class=\"nv\">creator_time</span><span class=\"k\">}</span>\n\n    <span class=\"c\"># 截取除最后一个字符外的部分</span>\n    <span class=\"nv\">creator_time</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">creator_time</span>:0:length-1<span class=\"k\">}</span>\n    <span class=\"c\">#echo \"截去掉最后一个字符后的字符串: $creator_time\"</span>\n<span class=\"o\">}</span>\n\n\n<span class=\"k\">function </span>get_creator_time<span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"nv\">file</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n    \n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$2</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nv\">line</span><span class=\"o\">=</span>5\n    <span class=\"k\">else\n        </span><span class=\"nv\">line</span><span class=\"o\">=</span><span class=\"nv\">$2</span>\n    <span class=\"k\">fi</span>\n    <span class=\"c\">#creator_time=$(sed -n '5s/.*\\(.\\{10\\}\\)$/\\1/p' $file)</span>\n    <span class=\"nv\">creator_time</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">awk</span> <span class=\"s1\">'NR=='</span><span class=\"nv\">$line</span><span class=\"s1\">' {print $NF}'</span> <span class=\"nv\">$file</span><span class=\"si\">)</span>\n\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"-------creator_time=【\"</span><span class=\"nv\">$creator_time</span><span class=\"s2\">\"】 line = \"</span><span class=\"nv\">$line</span><span class=\"s2\">\" in file=\"</span><span class=\"nv\">$file</span>\n<span class=\"c\">#    date_regex='^(19|20)[0-9]{2}/(0?[1-9]|1[0-2])/(0?[1-9]|[1-2][0-9]|3[0-1]).$'</span>\n    <span class=\"c\">#date_regex='^(19[0-9]{2}|20[0-9]{2}|[0-9]{2})/(0?[1-9]|1[0-2])/(0?[1-9]|[1-2][0-9]|3[0-1]).$'</span>\n    <span class=\"nv\">date_regex</span><span class=\"o\">=</span><span class=\"s1\">'^(19[0-9]{2}|20[0-9]{2}|[0-9]{2})([-/])(0?[1-9]|1[0-2])([-/])(0?[1-9]|[1-2][0-9]|3[0-1]).$'</span>\n\n    <span class=\"c\"># 进行正则匹配</span>\n    <span class=\"k\">if</span> <span class=\"o\">[[</span> <span class=\"nv\">$creator_time</span> <span class=\"o\">=</span>~ <span class=\"nv\">$date_regex</span> <span class=\"o\">]]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">echo</span> <span class=\"s2\">\"日期格式正确，截断最后一个小数 .\"</span>\n        format_creator_time <span class=\"nv\">$creator_time</span>\n    <span class=\"k\">else\n        if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$2</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n            </span><span class=\"nv\">discount</span><span class=\"o\">=</span>1\n            <span class=\"nv\">new_line</span><span class=\"o\">=</span><span class=\"k\">$((</span>line-discount<span class=\"k\">))</span>\n            <span class=\"nb\">echo</span> <span class=\"s2\">\"常规调用如果匹配不到的花，那么多一次，向上查找\"</span><span class=\"nv\">$discount</span><span class=\"s2\">\"行，进行递归:\"</span><span class=\"nv\">$new_line</span>\n            get_creator_time <span class=\"nv\">$file</span> <span class=\"nv\">$new_line</span>\n        <span class=\"k\">else\n            </span><span class=\"nb\">echo</span> <span class=\"s2\">\"日期格式错误，执行第二种匹配\"</span>\n            get_creator_time_with_template_2 <span class=\"nv\">$file</span>\n        <span class=\"k\">fi\n    fi\n    </span><span class=\"nb\">echo</span> <span class=\"s2\">\"********creator_time=【\"</span><span class=\"nv\">$creator_time</span><span class=\"s2\">\"】 in file=\"</span><span class=\"nv\">$file</span>\n<span class=\"o\">}</span>\n\n\n\n<span class=\"k\">function </span>replace_header_anoation<span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"nv\">file</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n    \n    <span class=\"c\">#定义要替换的字符串</span>\n    <span class=\"c\">#文件名</span>\n    <span class=\"nv\">filename</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">echo</span> <span class=\"s2\">\"</span><span class=\"nv\">$file</span><span class=\"s2\">\"</span> | <span class=\"nb\">sed</span> <span class=\"s1\">'s#.*/##'</span><span class=\"si\">)</span>\n    <span class=\"c\">#项目名</span>\n    <span class=\"nv\">project_name</span><span class=\"o\">=</span><span class=\"s2\">\"YourProjectName\"</span>\n    \n    <span class=\"c\">#还有从当前类中获取作者信息，获取不到取默认值</span>\n    <span class=\"nv\">auth</span><span class=\"o\">=</span><span class=\"nv\">$creator_name</span>\n    \n    <span class=\"c\">#还有从当前类中获取作者信息，获取不到取默认值</span>\n    <span class=\"nb\">date</span><span class=\"o\">=</span><span class=\"nv\">$creator_time</span>\n\n    <span class=\"c\">#以下是替换的模板</span>\n    <span class=\"nv\">new_content</span><span class=\"o\">=</span><span class=\"s2\">\"//\n//  \"</span><span class=\"nv\">$filename</span><span class=\"s2\">\"\n//  \"</span><span class=\"nv\">$project_name</span><span class=\"s2\">\"\n//\n//  Created by \"</span><span class=\"nv\">$auth</span><span class=\"s2\">\" on \"</span><span class=\"nv\">$date</span><span class=\"s2\">\".\n//  \"</span><span class=\"nv\">$copyright_str</span><span class=\"s2\">\"\n//\"</span>\n\n    <span class=\"nv\">new_content_escaped</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">echo</span> <span class=\"s2\">\"</span><span class=\"nv\">$new_content</span><span class=\"s2\">\"</span> | <span class=\"nb\">sed</span> <span class=\"s1\">'s/$/\\\\/'</span><span class=\"si\">)</span> <span class=\"c\"># 转义换行符</span>\n    <span class=\"nb\">sed</span> <span class=\"nt\">-i</span> <span class=\"s1\">''</span> <span class=\"nt\">-e</span> <span class=\"s2\">\"1,7c</span><span class=\"se\">\\\\</span><span class=\"s2\">\n</span><span class=\"nv\">$new_content_escaped</span><span class=\"s2\">\"</span> <span class=\"s2\">\"</span><span class=\"nv\">$file</span><span class=\"s2\">\"</span>\n\n    <span class=\"c\">#还有几个问题待优化</span>\n    <span class=\"c\">#1、如果开头没有注释，则会直接覆盖，或者注释不足7行的</span>\n    <span class=\"c\">#2、日期正则如果不是以 YYYY/MM/DD or YY/MM/DD 其中/和-都适用</span>\n        <span class=\"c\">#2.1但是兼容2023/8/1这样的个位数日期)，</span>\n        <span class=\"c\">#2.2如果日期是8/1/23 这样会导致识别错误 会被替换成今天的日期</span>\n\n<span class=\"o\">}</span>\n\n<span class=\"c\"># 统一类头注释</span>\n<span class=\"k\">function </span>unify_header_anoation<span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"nv\">file</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n\n    <span class=\"c\">#还有从当前类中获取作者信息，获取不到取默认值</span>\n    get_creator_name <span class=\"nv\">$file</span>\n    \n    <span class=\"c\">#还有从当前类中获取作者信息，获取不到取默认值</span>\n    get_creator_time <span class=\"nv\">$file</span>\n    \n    <span class=\"c\">#不传第二个参数 则执行替换，传就不执行</span>\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$2</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span>replace_header_anoation <span class=\"nv\">$file</span>\n    <span class=\"k\">fi</span>\n<span class=\"o\">}</span>\n\n\n<span class=\"k\">function </span>main<span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"nv\">file_path</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$file_path</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">echo</span> <span class=\"s1\">'///未指定路径,file_path为. 当前路径'</span>\n        <span class=\"nv\">file_path</span><span class=\"o\">=</span><span class=\"nb\">.</span>\n    <span class=\"k\">fi</span>\n\n\n    <span class=\"c\">#遍历当前路径下所有oc类</span>\n    find <span class=\"nv\">$file_path</span> <span class=\"nt\">-type</span> f <span class=\"nt\">-name</span> <span class=\"s2\">\"*.swift\"</span> <span class=\"nt\">-o</span> <span class=\"nt\">-name</span> <span class=\"s2\">\"*.h\"</span> <span class=\"nt\">-o</span> <span class=\"nt\">-name</span> <span class=\"s2\">\"*.m\"</span> | <span class=\"k\">while </span><span class=\"nb\">read </span>file<span class=\"p\">;</span> <span class=\"k\">do\n        </span>unify_header_anoation <span class=\"nv\">$file</span> <span class=\"nv\">$2</span>\n    <span class=\"k\">done</span>\n<span class=\"o\">}</span>\n\n\nmain <span class=\"nv\">$1</span> <span class=\"nv\">$2</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n\n\n                <hr style=\"visibility: hidden;\">\n                <ul class=\"pager\">\n                    \n                    <li class=\"previous\">\n                        <a href=\"/2023/11/08/%E6%9E%84%E5%BB%BA%E6%B5%81%E6%B0%B4%E7%BA%BF%E5%AE%9E%E8%B7%B5/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"构建流水线实践\">\n                        Previous<br>\n                        <span>构建流水线实践</span>\n                        </a>\n                    </li>\n                    \n                    \n                </ul>\n                <hr style=\"visibility: hidden;\">\n\n                \n                <!-- disqus 评论框 start -->\n                <div class=\"comment\">\n                    <div id=\"disqus_thread\" class=\"disqus-thread\"></div>\n                </div>\n                <!-- disqus 评论框 end -->\n                \n\n                \n            </div>  \n\n    <!-- Side Catalog Container -->\n        \n            <div class=\"\n                col-lg-2 col-lg-offset-0\n                visible-lg-block\n                sidebar-container\n                catalog-container\">\n                <div class=\"side-catalog\">\n                    <hr class=\"hidden-sm hidden-xs\">\n                    <h5>\n                        <a class=\"catalog-toggle\" href=\"#\">CATALOG</a>\n                    </h5>\n                    <ul class=\"catalog-body\"></ul>\n                </div>\n            </div>\n        \n\n    <!-- Sidebar Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                sidebar-container\">\n\n                <!-- Featured Tags -->\n                \n\n\n<section>\n    \n        <hr class=\"hidden-sm hidden-xs\">\n    \n    <h5><a href=\"/archive/\">FEATURED TAGS</a></h5>\n    <div class=\"tags\">\n        \n        \n        \n        \n        \n    </div>\n</section>\n\n\n                <!-- Friends Blog -->\n                \n            </div>\n        </div>\n    </div>\n</article>\n\n<!-- add support for mathjax by voleking-->\n\n\n\n\n\n\n<!-- disqus 公共JS代码 start (一个网页只需插入一次) -->\n<script type=\"text/javascript\">\n    /* * * CONFIGURATION VARIABLES * * */\n    var disqus_shortname = \"Cyp\";\n    var disqus_identifier = \"/2024/01/08/ios\";\n    var disqus_url = \"http://localhost:4000/2024/01/08/ios/\";\n\n    (function() {\n        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;\n        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';\n        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);\n    })();\n</script>\n<!-- disqus 公共JS代码 end -->\n\n\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n      var d = document, t = 'script',\n          o = d.createElement(t),\n          s = d.getElementsByTagName(t)[0];\n      o.src = u;\n      if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n      s.parentNode.insertBefore(o, s);\n    }\n</script>\n<!-- anchor-js, Doc:http://bryanbraun.github.io/anchorjs/ -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/anchor-js/1.1.1/anchor.min.js\",function(){\n        anchors.options = {\n          visible: 'hover',\n          placement: 'right',\n          // icon: '#'\n        };\n        anchors.add().remove('.intro-header h1').remove('.subheading').remove('.sidebar-container h5');\n    })\n</script>\n<style>\n    /* place left on bigger screen */\n    @media all and (min-width: 800px) {\n        .anchorjs-link{\n            position: absolute;\n            left: -0.75em;\n            font-size: 1.1em;\n            margin-top : -0.1em;\n        }\n    }\n</style>\n\n\n\n    <!-- Footer -->\n<footer>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <!-- SNS Link -->\n                \n\n\n<ul class=\"list-inline text-center\">\n\n\n  \n  \n  \n  \n  \n  \n  \n</ul>\n\n                <p class=\"copyright text-muted\">\n                    Copyright &copy; PaysonChen Blog 2024\n                    <br>\n                    <!-- Powered by <a href=\"http://huangxuan.me\">Hux Blog</a> | -->\n                 <!--    <iframe style=\"margin-left: 2px; margin-bottom:-5px;\" frameborder=\"0\" scrolling=\"0\" width=\"100px\"\n                        height=\"20px\"\n                        src=\"https://ghbtns.com/github-btn.html?user=huxpro&repo=huxpro.github.io&type=star&count=true\">\n                    </iframe> -->\n                </p>\n            </div>\n        </div>\n    </div>\n</footer>\n\n<!-- jQuery -->\n<script src=\"/js/jquery.min.js \"></script>\n\n<!-- Bootstrap Core JavaScript -->\n<!-- Currently, only navbar scroll-down effect at desktop still depends on this -->\n<script src=\"/js/bootstrap.min.js \"></script>\n\n<!-- Custom Theme JavaScript -->\n<script src=\"/js/hux-blog.min.js \"></script>\n\n<!-- Simple Jekyll Search -->\n<script src=\"/js/simple-jekyll-search.min.js\"></script>\n\n<!-- Service Worker -->\n\n<script src=\"/js/snackbar.js \"></script>\n<script src=\"/js/sw-registration.js \"></script>\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n        var d = document, t = 'script',\n            o = d.createElement(t),\n            s = d.getElementsByTagName(t)[0];\n        o.src = u;\n        if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n        s.parentNode.insertBefore(o, s);\n    }\n</script>\n\n<!--\n     Because of the native support for backtick-style fenced code blocks\n     right within the Markdown is landed in Github Pages,\n     From V1.6, There is no need for Highlight.js,\n     so Huxblog drops it officially.\n\n     - https://github.com/blog/2100-github-pages-now-faster-and-simpler-with-jekyll-3-0\n     - https://help.github.com/articles/creating-and-highlighting-code-blocks/\n     - https://github.com/jneen/rouge/wiki/list-of-supported-languages-and-lexers\n-->\n<!--\n    <script>\n        async(\"http://cdn.bootcss.com/highlight.js/8.6/highlight.min.js\", function(){\n            hljs.initHighlightingOnLoad();\n        })\n    </script>\n    <link href=\"http://cdn.bootcss.com/highlight.js/8.6/styles/github.min.css\" rel=\"stylesheet\">\n-->\n\n\n\n\n\n\n\n<!--fastClick.js -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/fastclick/1.0.6/fastclick.min.js\", function () {\n        var $nav = document.querySelector(\"nav\");\n        if ($nav) FastClick.attach($nav);\n    })\n</script>\n\n\n<!-- Google Analytics -->\n\n\n\n<!-- Baidu Tongji -->\n\n\n\n<!-- Side Catalog -->\n\n<script type=\"text/javascript\">\n    function generateCatalog(selector) {\n\n        // interop with multilangual \n        if ('' == 'true') {\n            _containerSelector = 'div.post-container.active'\n        } else {\n            _containerSelector = 'div.post-container'\n        }\n\n        // init\n        var P = $(_containerSelector), a, n, t, l, i, c;\n        a = P.find('h1,h2,h3,h4,h5,h6');\n\n        // clean\n        $(selector).html('')\n\n        // appending\n        a.each(function () {\n            n = $(this).prop('tagName').toLowerCase();\n            i = \"#\" + $(this).prop('id');\n            t = $(this).text();\n            c = $('<a href=\"' + i + '\" rel=\"nofollow\">' + t + '</a>');\n            l = $('<li class=\"' + n + '_nav\"></li>').append(c);\n            $(selector).append(l);\n        });\n        return true;\n    }\n\n    generateCatalog(\".catalog-body\");\n\n    // toggle side catalog\n    $(\".catalog-toggle\").click((function (e) {\n        e.preventDefault();\n        $('.side-catalog').toggleClass(\"fold\")\n    }))\n\n    /*\n     * Doc: https://github.com/davist11/jQuery-One-Page-Nav\n     * Fork by Hux to support padding\n     */\n    async(\"/js/jquery.nav.js\", function () {\n        $('.catalog-body').onePageNav({\n            currentClass: \"active\",\n            changeHash: !1,\n            easing: \"swing\",\n            filter: \"\",\n            scrollSpeed: 700,\n            scrollOffset: 0,\n            scrollThreshold: .2,\n            begin: null,\n            end: null,\n            scrollChange: null,\n            padding: 80\n        });\n    });\n</script>\n\n\n\n<!-- Multi-Lingual -->\n\n\n<!-- Simple Jekyll Search -->\n<script>\n    // https://stackoverflow.com/questions/1912501/unescape-html-entities-in-javascript\n    function htmlDecode(input) {\n        var e = document.createElement('textarea');\n        e.innerHTML = input;\n        // handle case of empty input\n        return e.childNodes.length === 0 ? \"\" : e.childNodes[0].nodeValue;\n    }\n\n    SimpleJekyllSearch({\n        searchInput: document.getElementById('search-input'),\n        resultsContainer: document.getElementById('search-results'),\n        json: '/search.json',\n        searchResultTemplate: '<div class=\"post-preview item\"><a href=\"{url}\"><h2 class=\"post-title\">{title}</h2><h3 class=\"post-subtitle\">{subtitle}</h3><hr></a></div>',\n        noResultsText: 'No results',\n        limit: 50,\n        fuzzy: false,\n        // a hack to get escaped subtitle unescaped. for some reason, \n        // post.subtitle w/o escape filter nuke entire search.\n        templateMiddleware: function (prop, value, template) {\n            if (prop === 'subtitle' || prop === 'title') {\n                if (value.indexOf(\"code\")) {\n                    return htmlDecode(value);\n                } else {\n                    return value;\n                }\n            }\n        }\n    });\n\n    $(document).ready(function () {\n        var $searchPage = $('.search-page');\n        var $searchOpen = $('.search-icon');\n        var $searchClose = $('.search-icon-close');\n        var $searchInput = $('#search-input');\n        var $body = $('body');\n\n        $searchOpen.on('click', function (e) {\n            e.preventDefault();\n            $searchPage.toggleClass('search-active');\n            var prevClasses = $body.attr('class') || '';\n            setTimeout(function () {\n                $body.addClass('no-scroll');\n            }, 400)\n\n            if ($searchPage.hasClass('search-active')) {\n                $searchClose.on('click', function (e) {\n                    e.preventDefault();\n                    $searchPage.removeClass('search-active');\n                    $body.attr('class', prevClasses);  // from closure \n                });\n                $searchInput.focus();\n            }\n        });\n    });\n</script>\n\n\n<!-- Image to hack wechat -->\n<img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\" />\n<!-- Migrate from head to bottom, no longer block render and still work -->\n\n</body>\n\n</html>\n","excerpt":"<h1 id=\"1背景\">1.背景</h1>\n","url":"/2024/01/08/ios/","next":null,"title":"iOS组件化实现之：实用工具沉淀及介绍","date":"2024-01-08 00:00:00 +0800","categories":[],"path":"_posts/2024-01-08-ios.md","draft":false,"layout":"post","subtitle":"组件化过程中，有一些重复/高频的问题需要解决，倘若手动解决会带来重复劳动的时间损失，以及没有沉淀的效率损失，为了避免上述损失，沉淀一些工具分享","author":"PaysonChen","header-img":"img/post-bg-2015.jpg","slug":"ios","ext":".md"},"title":"构建流水线实践","date":"2023-11-08 00:00:00 +0800","categories":[],"path":"_posts/2023-11-08-构建流水线实践.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/home-bg-geek.jpg","mermaid":true,"slug":"构建流水线实践","ext":".md"},{"id":"/2023/10/07/抓包实践","tags":[],"relative_path":"_posts/2023-10-09-抓包实践.md","collection":"posts","content":"<h1 id=\"charles-https-实践\">Charles HTTPS 实践</h1>\n\n<h2 id=\"1背景\">1、背景</h2>\n\n<p>在构建充电桩能力的需求背景下，需要对竞品数据进行收集评估，以前是通过截图+ocr方案进行数据收集，效率低下无法满足数据更新的及时性，现在需要采用更加高效的方式</p>\n\n<h2 id=\"2方案选择\">2、方案选择</h2>\n\n<p>咨询之前做过类似工作的测试团队，无法给到比较可靠的方案，一开始选择逆向方案，通过移动端组内评估，以及咨询业内的安全工程师，逆向方案 ，代价较高，且暂无这方面的能力储备，风险不可控。</p>\n\n<p>于是我们认为可以尝试抓包某地图App的方式，验证可行性</p>\n\n<h2 id=\"3抓包\">3、抓包</h2>\n\n<p>wireshark上抓包无法（难度较高）解析https协议</p>\n\n<p>采用Charles 抓包：</p>\n\n<h3 id=\"31代理搭建\">3.1、代理搭建</h3>\n\n<p>打开Charles，在顶部状态栏选择：help-&gt;Local IP Address</p>\n\n<p><img src=\"/img/2023-10-09-Charles/local_IP.png\" alt=\"local_IP\" /></p>\n\n<p>获取到代理机在局域网的ip</p>\n\n<p><img src=\"/img/2023-10-09-Charles/local_IP2.png\" alt=\"local_IP2\" /></p>\n\n<p>在设备上（iPhone）手动设置代理:</p>\n\n<p><img src=\"/img/2023-10-09-Charles/device.png\" alt=\"device\" /></p>\n\n<p>代理设置为上述代理机器的ip + 端口号8888</p>\n\n<p><img src=\"/img/2023-10-09-Charles/device2.png\" alt=\"device2\" /></p>\n\n<h3 id=\"32安装证书\">3.2、安装证书</h3>\n\n<p>在顶部状态栏 help-&gt;SSL Proxying-&gt;Install Charles Root Certification on a Mobile Device or Remote Broswer：</p>\n\n<p><img src=\"/img/2023-10-09-Charles/ssl_cert.png\" alt=\"ssl_cert\" /></p>\n\n<p><img src=\"/img/2023-10-09-Charles/ssl_cert2.png\" alt=\"ssl_cert2\" /></p>\n\n<p>通过设备访问：chls.pro/ssl</p>\n\n<p>下载地址，然后在设置-&gt;通用-&gt;关于-&gt;证书信任 安装/信任证书，并打开证书的开关</p>\n\n<p><img src=\"/img/2023-10-09-Charles/device3.png\" alt=\"device3\" /></p>\n\n<h3 id=\"33报文解析\">3.3、报文解析</h3>\n\n<p>设置好上述说明后，针对所需要抓取的域名的https报文进行解析：</p>\n\n<p>顶部状态栏 Proxy-&gt; SSL Proxying Settings</p>\n\n<p><img src=\"/img/2023-10-09-Charles/ssl_proxy.png\" alt=\"ssl_proxy\" /></p>\n\n<p>添加域名和端口号（端口号为443）：</p>\n\n<p><img src=\"/img/2023-10-09-Charles/ssl_proxy2.png\" alt=\"ssl_proxy2\" /></p>\n\n<p>打开某地图app，搜索相关关键字，得到的结果再Charles查看：</p>\n\n<p><img src=\"/img/2023-10-09-Charles/data.png\" alt=\"data\" /></p>\n","name":"2023-10-09-抓包实践.md","previous":{"id":"/2023/10/07/组件化之分支合并","tags":[],"relative_path":"_posts/2023-10-07-组件化之分支合并.md","collection":"posts","content":"<h1 id=\"组件化实践之主工程抽离代码分支合并\">组件化实践之：主工程抽离代码分支合并</h1>\n\n<h2 id=\"1-背景\">1 背景</h2>\n\n<p>​\t组件化过程中不可避免的会遇到这样一个问题：</p>\n\n<p>​\t组件化的过程一般周期比较长，此过程中不免会有业务需求的输入，这样就会导致一个情况：</p>\n\n<p>​\t组件化分支已经将主工程里的类迁移到pod仓库,而在此期间的业务需求代码对这些被迁移的类有修改，</p>\n\n<p>​\t合并主干（其他分支）代码时,主干（其他分支）有对移动之前的类做修改的情况下,会导致合并冲突,</p>\n\n<p>​\t这种冲突是整个类都是新增符号(+),没有冲突符号，此时无法简单的通过工具，或者冲突的符号对其进行解冲突。</p>\n\n<h2 id=\"2-问题处理\">2 问题处理</h2>\n\n<p>​\t解决上述冲突,最开始想到的方案是通过xcode自带filemerge进行对比,这样比较容易导致遗漏且工作量大,无法充分利用git的冲突标志,</p>\n\n<h2 id=\"3-更优解决\">3 更优解决</h2>\n\n<p>​\t如果可以知道有哪些类在合并代码时，</p>\n\n<ul class=\"task-list\">\n  <li class=\"task-list-item\"><input type=\"checkbox\" class=\"task-list-item-checkbox\" disabled=\"disabled\" checked=\"checked\" />​\t有修改</li>\n  <li class=\"task-list-item\"><input type=\"checkbox\" class=\"task-list-item-checkbox\" disabled=\"disabled\" checked=\"checked\" />​\t且已经被迁移了（不存在主工程）</li>\n</ul>\n\n<p>​\t那么就可以以这些类进行冲突检测</p>\n\n<h3 id=\"31-冲突解决方案\">3.1 冲突解决方案</h3>\n\n<p>以下简述冲突检测设计思路</p>\n\n<h4 id=\"311-数据准备\">3.1.1 数据准备</h4>\n\n<ul>\n  <li>先进行一次预合并，通过首次合并,可以从sourcetree中看到冲突的类列表文件，查看冲突内容，出现整个文件都带+的变更内容，该文件即为被迁移且被其他分支修改的文件。</li>\n</ul>\n\n<p><img src=\"/img/2023-10-07-merge/0.jpg\" alt=\"0\" /></p>\n\n<ul>\n  <li>将预合并产生的上述冲突的文件列表进行整理，将列表中符合迁移并修改的文件路径列表定义为数组存入文件：merge_project_files.txt</li>\n</ul>\n\n<p><img src=\"/img/2023-10-07-merge/1.png\" alt=\"1\" /></p>\n\n<p>​\t通过选中类(可以全选之后一起移动【mv】)移动路径:</p>\n\n<p><img src=\"/img/2023-10-07-merge/2.png\" alt=\"2\" /></p>\n\n<p><strong><em>Tips：这里用移动mv，不用复制cp，为了主工程修改完之后，能恢复迁移后的样子，不至于多出一些已迁移但是还存在主工程的文件</em></strong></p>\n\n<p>即可获取主工程冲突文件路径，新建一个文本文件,将上述所有冲突类路径移动过去,</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n</pre></td><td class=\"rouge-code\"><pre>/Users/username/Documents/Project/git/Inner/Demo/127/Demo-IOS/ProjectDemoiOS/ProjectDemoiOS/Class/Main/Car/Model/PSCCarDetailInforModel.h\n/Users/username/Documents/Project/git/Inner/Demo/127/Demo-IOS/ProjectDemoiOS/ProjectDemoiOS/Class/Main/Sites/View/PSCPowerPriceTableViewCell.m\n.....\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<ul>\n  <li>将上述文件列表一一对应到组件库里本地clone路径了列表，定义为数组存入文件；merge_pods_files.txt</li>\n</ul>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n</pre></td><td class=\"rouge-code\"><pre>/Users/username/Documents/Project/git/CocoaPods/Private/ProjectCarModule/ProjectCarModule/Classes/Car/Model/DemoCarDetailInforModel.h\n/Users/username/Documents/Project/git/CocoaPods/Private/ProjectExchangeMoudle/ProjectExchangeMoudle/Classes/Sites/View/DemoPowerPriceTableViewCell.m\n.....\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p><strong><em>Tips:commond+option+c可以文件路径</em></strong></p>\n\n<h4 id=\"312--算法编写\">3.1.2  算法编写</h4>\n\n<ul>\n  <li>步骤1:在一个全新的组件化分支（未进行预合并）上先从组件库将冲突的类文件拷贝回主工程,</li>\n  <li>步骤2:提交本地仓库(不需要push远程仓库)后再进行合并</li>\n  <li>步骤3:合并冲突则为可参考历史变更及可解决的冲突状态</li>\n  <li>步骤4:合并解决完后再通过上述方案,反向将dest的主工程目录拷贝并覆盖到组件库文件</li>\n</ul>\n\n<p><strong><em>Tips:可能存在一些已经删除的文件，但是也出现在上述列表中，此时无法从组件库移动到主工程，需要确认是否是无用文件（不是误删）</em></strong></p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\"># merge.sh</span>\n<span class=\"c\"># 从外部文件中读取源文件路径和目标文件夹路径</span>\n<span class=\"c\">#\"source_paths.txt\"</span>\n<span class=\"nv\">source_file</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n<span class=\"c\">#\"destination_paths.txt\"</span>\n<span class=\"nv\">destination_file</span><span class=\"o\">=</span><span class=\"nv\">$2</span>\n\n<span class=\"c\"># 检查源文件是否存在</span>\n<span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"o\">!</span> <span class=\"nt\">-f</span> <span class=\"s2\">\"</span><span class=\"nv\">$source_file</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n    </span><span class=\"nb\">echo</span> <span class=\"s2\">\"源文件 '</span><span class=\"nv\">$source_file</span><span class=\"s2\">' 不存在。\"</span>\n    <span class=\"nb\">exit </span>1\n<span class=\"k\">fi</span>\n\n<span class=\"c\"># 检查目标文件夹文件是否存在</span>\n<span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"o\">!</span> <span class=\"nt\">-f</span> <span class=\"s2\">\"</span><span class=\"nv\">$destination_file</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n    </span><span class=\"nb\">echo</span> <span class=\"s2\">\"源文件 '</span><span class=\"nv\">$source_file</span><span class=\"s2\">' 不存在。\"</span>\n    <span class=\"nb\">exit </span>1\n<span class=\"k\">fi</span>\n\n<span class=\"c\">#保证每条记录都有一个回车（最后一行如果没有回车，会被忽略）</span>\n<span class=\"k\">while </span><span class=\"nv\">IFS</span><span class=\"o\">=</span> <span class=\"nb\">read</span> <span class=\"nt\">-r</span> source_path <span class=\"o\">&amp;&amp;</span> <span class=\"nv\">IFS</span><span class=\"o\">=</span> <span class=\"nb\">read</span> <span class=\"nt\">-r</span> destination_folder &lt;&amp;3<span class=\"p\">;</span> <span class=\"k\">do\n    </span>source_paths+<span class=\"o\">=(</span><span class=\"s2\">\"</span><span class=\"nv\">$source_path</span><span class=\"s2\">\"</span><span class=\"o\">)</span>\n    destination_paths+<span class=\"o\">=(</span><span class=\"s2\">\"</span><span class=\"nv\">$destination_folder</span><span class=\"s2\">\"</span><span class=\"o\">)</span>\n<span class=\"k\">done</span> &lt; <span class=\"nv\">$source_file</span> 3&lt; <span class=\"nv\">$destination_file</span>\n\n<span class=\"c\"># 输出数组长度</span>\n<span class=\"nb\">echo</span> <span class=\"s2\">\"源文件路径数组长度：</span><span class=\"k\">${#</span><span class=\"nv\">source_paths</span><span class=\"p\">[@]</span><span class=\"k\">}</span><span class=\"s2\">\"</span>\n<span class=\"nb\">echo</span> <span class=\"s2\">\"目标文件夹路径数组长度：</span><span class=\"k\">${#</span><span class=\"nv\">destination_paths</span><span class=\"p\">[@]</span><span class=\"k\">}</span><span class=\"s2\">\"</span>\n\n<span class=\"c\">#exit 0</span>\n<span class=\"c\"># 遍历索引</span>\n<span class=\"k\">for </span>index <span class=\"k\">in</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"p\">!source_paths[@]</span><span class=\"k\">}</span><span class=\"s2\">\"</span><span class=\"p\">;</span> <span class=\"k\">do\n    </span><span class=\"nb\">echo</span> <span class=\"s2\">\"遍历目标文件夹路径数组,index=\"</span><span class=\"nv\">$index</span>\n    <span class=\"nv\">source_path</span><span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">source_paths</span><span class=\"p\">[</span><span class=\"nv\">$index</span><span class=\"p\">]</span><span class=\"k\">}</span><span class=\"s2\">\"</span>\n    <span class=\"nv\">destination_path</span><span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">destination_paths</span><span class=\"p\">[</span><span class=\"nv\">$index</span><span class=\"p\">]</span><span class=\"k\">}</span><span class=\"s2\">\"</span>\n\n    <span class=\"c\"># 构建目标文件的完整路径</span>\n<span class=\"c\">#    destination_path=\"${destination_folder}${source_path}\"</span>\n\n    <span class=\"c\"># 检查目标文件是否存在，如果存在则删除</span>\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-e</span> <span class=\"s2\">\"</span><span class=\"nv\">$destination_path</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">rm</span> <span class=\"s2\">\"</span><span class=\"nv\">$destination_path</span><span class=\"s2\">\"</span>\n    <span class=\"k\">fi</span>\n\n    <span class=\"c\"># 确保目标文件夹存在</span>\n    <span class=\"nb\">mkdir</span> <span class=\"nt\">-p</span> <span class=\"s2\">\"</span><span class=\"si\">$(</span><span class=\"nb\">dirname</span> <span class=\"s2\">\"</span><span class=\"nv\">$destination_path</span><span class=\"s2\">\"</span><span class=\"si\">)</span><span class=\"s2\">\"</span>\n\n    <span class=\"c\"># 移动源文件到目标路径</span>\n    <span class=\"nb\">mv</span> <span class=\"s2\">\"</span><span class=\"nv\">$source_path</span><span class=\"s2\">\"</span> <span class=\"s2\">\"</span><span class=\"nv\">$destination_path</span><span class=\"s2\">\"</span>\n<span class=\"k\">done\n\n</span><span class=\"nb\">echo</span> <span class=\"s2\">\"文件移动完成。\"</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h4 id=\"313-执行\">3.1.3 执行</h4>\n\n<p>将pod仓库的文件移动回主工程的调用方式：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>sh merge.sh merge_pods_files.txt merge_project_files.txt\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>解决完冲突后将主工程的上述文件移动回组件库</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>sh merge.sh merge_project_files.txt merge_pods_files.txt\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h4 id=\"314-收尾\">3.1.4 收尾</h4>\n\n<ul>\n  <li>解决完冲突，Pod仓库会得到从主干(其他功能分支)合并的最新类的修改版本，需要提交到对应迁移Pod仓库</li>\n  <li>主工程Project文件保留迁移后的版本，可以得到组件化改造后的Project的文件结构</li>\n  <li>再执行一次之前提到的寻找Project未引用，但是还存在的类的脚本进行最后的清理</li>\n</ul>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n</pre></td><td class=\"rouge-code\"><pre><span class=\"k\">function </span>main<span class=\"o\">()</span> <span class=\"o\">{</span>\n    \n    <span class=\"c\"># 设置项目目录</span>\n    <span class=\"nv\">project_directory</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$1</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then</span>\n        <span class=\"c\">#未传参为当前目录</span>\n        <span class=\"nv\">project_directory</span><span class=\"o\">=</span><span class=\"nb\">.</span>\n    <span class=\"k\">fi</span>\n\n    <span class=\"c\"># 设置其他目录</span>\n    <span class=\"nv\">parent_path</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">dirname</span> <span class=\"s2\">\"</span><span class=\"nv\">$project_directory</span><span class=\"s2\">\"</span><span class=\"si\">)</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"project 路径：\"</span><span class=\"nv\">$parent_path</span>\n    \n    <span class=\"nv\">current_dir</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">basename</span> <span class=\"s2\">\"</span><span class=\"nv\">$project_directory</span><span class=\"s2\">\"</span><span class=\"si\">)</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"当前路径 文件夹名称：\"</span><span class=\"nv\">$current_dir</span>\n\n    \n    <span class=\"nv\">project_path</span><span class=\"o\">=</span><span class=\"si\">$(</span>find <span class=\"s2\">\"</span><span class=\"nv\">$parent_path</span><span class=\"s2\">\"</span>/<span class=\"nv\">$current_dir</span>.xcodeproj <span class=\"nt\">-type</span> f <span class=\"se\">\\(</span> <span class=\"nt\">-name</span> <span class=\"s2\">\"*.pbxproj\"</span> <span class=\"se\">\\)</span><span class=\"si\">)</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"project 路径：\"</span><span class=\"nv\">$project_path</span>\n\n    <span class=\"nv\">all_file_path</span><span class=\"o\">=</span><span class=\"si\">$(</span>find <span class=\"s2\">\"</span><span class=\"nv\">$project_directory</span><span class=\"s2\">\"</span> <span class=\"nt\">-type</span> f <span class=\"se\">\\(</span> <span class=\"nt\">-name</span> <span class=\"s2\">\"*.h\"</span> <span class=\"se\">\\)</span><span class=\"si\">)</span>\n    <span class=\"nv\">all_file_path_cnt</span><span class=\"o\">=</span><span class=\"si\">$(</span>find <span class=\"s2\">\"</span><span class=\"nv\">$project_directory</span><span class=\"s2\">\"</span> <span class=\"nt\">-type</span> f <span class=\"se\">\\(</span> <span class=\"nt\">-name</span> <span class=\"s2\">\"*.h\"</span> <span class=\"se\">\\)</span> | <span class=\"nb\">wc</span> <span class=\"nt\">-l</span><span class=\"si\">)</span>\n\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"主工程 头文件数量：\"</span><span class=\"nv\">$all_file_path_cnt</span>\n\n    <span class=\"k\">for </span>src_file <span class=\"k\">in</span> <span class=\"nv\">$all_file_path</span><span class=\"p\">;</span> <span class=\"k\">do</span>\n    <span class=\"c\">#    echo $src_file</span>\n        <span class=\"nv\">filename</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">basename</span> <span class=\"s2\">\"</span><span class=\"nv\">$src_file</span><span class=\"s2\">\"</span> .h<span class=\"si\">)</span>\n        <span class=\"k\">if</span>  <span class=\"o\">!</span> <span class=\"nb\">grep</span> <span class=\"nt\">-q</span> <span class=\"s2\">\"</span><span class=\"se\">\\b</span><span class=\"nv\">$filename</span><span class=\"se\">\\b</span><span class=\"s2\">\"</span> <span class=\"s2\">\"</span><span class=\"nv\">$project_path</span><span class=\"s2\">\"</span><span class=\"p\">;</span>  <span class=\"k\">then\n            </span><span class=\"nb\">echo</span> <span class=\"s2\">\"project不包含：\"</span><span class=\"nv\">$src_file</span>\n        <span class=\"k\">fi\n    done</span>\n<span class=\"o\">}</span>\n\n\nmain <span class=\"nv\">$1</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>传入工程(Project文件所在的目录)路径：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>sh find_all_file_no_project.sh /Users/username/Documents/Project/git/Inner/Demo/Release/Demo-IOS/ProjectiOS/ProjectiOS \n</pre></td></tr></tbody></table></code></pre></div></div>\n\n","name":"2023-10-07-组件化之分支合并.md","previous":{"id":"/2023/09/12/iOS-OC-Swift混编","tags":[],"relative_path":"_posts/2023-09-12-iOS-OC-Swift混编.md","collection":"posts","name":"2023-09-12-iOS-OC-Swift混编.md","url":"/2023/09/12/iOS-OC-Swift%E6%B7%B7%E7%BC%96/","title":"Pod仓库内OC与Swift调用","date":"2023-09-12 00:00:00 +0800","categories":[],"path":"_posts/2023-09-12-iOS-OC-Swift混编.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/home-bg-geek.jpg","slug":"iOS-OC-Swift混编","ext":".md"},"output":"<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"google-site-verification\" content=\"xBT4GhYoi5qRD5tr338pgPM5OWHHIDR6mNg1a3euekI\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, viewport-fit=cover\">\n    <meta name=\"description\" content=\"与你一起发现更大的世界。\">\n    <meta name=\"keywords\"  content=\"PaysonChen,iOS,流媒体\">\n    <meta name=\"theme-color\" content=\"#000000\">\n    \n    <!-- Open Graph -->\n    <meta property=\"og:title\" content=\"组件化实践之：主工程抽离代码分支合并用 - PaysonChen的博客 | PaysonChen Blog\">\n    \n    <meta property=\"og:type\" content=\"article\">\n    <meta property=\"og:description\" content=\"组件化实践之：主工程抽离代码分支合并\n\">\n    \n    \n    <meta property=\"article:published_time\" content=\"2023-10-07T00:00:00Z\">\n    \n    \n    <meta property=\"article:author\" content=\"PaysonChen\">\n    \n    \n    \n    <meta property=\"og:image\" content=\"http://localhost:4000\">\n    <meta property=\"og:url\" content=\"http://localhost:4000/2023/10/07/%E7%BB%84%E4%BB%B6%E5%8C%96%E4%B9%8B%E5%88%86%E6%94%AF%E5%90%88%E5%B9%B6/\">\n    <meta property=\"og:site_name\" content=\"PaysonChen的博客 | PaysonChen Blog\">\n    \n    <title>组件化实践之：主工程抽离代码分支合并用 - PaysonChen的博客 | PaysonChen Blog</title>\n\n    <!-- Web App Manifest -->\n    <link rel=\"manifest\" href=\"/pwa/manifest.json\">\n\n    <!-- Favicon -->\n    <link rel=\"shortcut icon\" href=\"/img/favicon.ico\">\n    \n    <!-- Canonical URL -->\n    <link rel=\"canonical\" href=\"http://localhost:4000/2023/10/07/%E7%BB%84%E4%BB%B6%E5%8C%96%E4%B9%8B%E5%88%86%E6%94%AF%E5%90%88%E5%B9%B6/\">\n\n    <!-- Bootstrap Core CSS -->\n    <link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\">\n\n    <!-- Custom CSS -->\n    <link rel=\"stylesheet\" href=\"/css/hux-blog.min.css\">\n\n    <!-- Custom Fonts -->\n    <!-- <link href=\"http://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\"> -->\n    <!-- Hux change font-awesome CDN to qiniu -->\n    <link href=\"//cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\">\n\n\n    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->\n    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->\n    <!--[if lt IE 9]>\n        <script src=\"https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js\"></script>\n        <script src=\"https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js\"></script>\n    <![endif]-->\n\n    <!-- ga & ba script hoook -->\n    <script></script>\n</head>\n\n\n<!-- hack iOS CSS :active style -->\n<body ontouchstart=\"\">\n\n    <!-- Navigation -->\n\n    <nav class=\"navbar navbar-default navbar-custom navbar-fixed-top\">\n        \n        <div class=\"container-fluid\">\n            <!-- Brand and toggle get grouped for better mobile display -->\n            <div class=\"navbar-header page-scroll\">\n                <button type=\"button\" class=\"navbar-toggle\">\n                    <span class=\"sr-only\">Toggle navigation</span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                </button>\n                <a class=\"navbar-brand\" href=\"/\">PaysonChen Blog</a>\n            </div>\n\n            <!-- Collect the nav links, forms, and other content for toggling -->\n            <div id=\"huxblog_navbar\">\n                <div class=\"navbar-collapse\">\n                    <ul class=\"nav navbar-nav navbar-right\">\n                        <li>\n                            <a href=\"/\">Home</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        <li>\n                            <a href=\"/about/\">About</a>\n                        </li>\n                        \n                        \n                        \n                        <li>\n                            <a href=\"/archive/\">Archive</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        <li class=\"search-icon\">\n                            <a href=\"javascript:void(0)\">\n                                <i class=\"fa fa-search\"></i>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n            <!-- /.navbar-collapse -->\n        </div>\n        <!-- /.container -->\n    </nav>\n\n    <script>\n        // Drop Bootstarp low-performance Navbar\n        // Use customize navbar with high-quality material design animation\n        // in high-perf jank-free CSS3 implementation\n        var $body = document.body;\n        var $toggle = document.querySelector('.navbar-toggle');\n        var $navbar = document.querySelector('#huxblog_navbar');\n        var $collapse = document.querySelector('.navbar-collapse');\n\n        var __HuxNav__ = {\n            close: function () {\n                $navbar.className = \" \";\n                // wait until animation end.\n                setTimeout(function () {\n                    // prevent frequently toggle\n                    if ($navbar.className.indexOf('in') < 0) {\n                        $collapse.style.height = \"0px\"\n                    }\n                }, 400)\n            },\n            open: function () {\n                $collapse.style.height = \"auto\"\n                $navbar.className += \" in\";\n            }\n        }\n\n        // Bind Event\n        $toggle.addEventListener('click', function (e) {\n            if ($navbar.className.indexOf('in') > 0) {\n                __HuxNav__.close()\n            } else {\n                __HuxNav__.open()\n            }\n        })\n\n        /**\n         * Since Fastclick is used to delegate 'touchstart' globally\n         * to hack 300ms delay in iOS by performing a fake 'click',\n         * Using 'e.stopPropagation' to stop 'touchstart' event from \n         * $toggle/$collapse will break global delegation.\n         * \n         * Instead, we use a 'e.target' filter to prevent handler\n         * added to document close HuxNav.  \n         *\n         * Also, we use 'click' instead of 'touchstart' as compromise\n         */\n        document.addEventListener('click', function (e) {\n            if (e.target == $toggle) return;\n            if (e.target.className == 'icon-bar') return;\n            __HuxNav__.close();\n        })\n    </script>\n    <!-- Search -->\n<div class=\"search-page\">\n  <div class=\"search-icon-close-container\">\n    <span class=\"search-icon-close\">\n      <i class=\"fa fa-chevron-down\"></i>\n    </span>\n  </div>\n  <div class=\"search-main container\">\n    <div class=\"row\">\n      <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n        <form></form>\n        <input type=\"text\" id=\"search-input\" placeholder=\"$ grep...\">\n        </form>\n        <div id=\"search-results\" class=\"mini-post-list\"></div>\n      </div>\n    </div>\n  </div>\n</div>\n\n    <!-- Image to hack wechat -->\n<!-- <img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\"> -->\n<!-- <img src=\"/img/home-bg-geek.jpg\" width=\"0\" height=\"0\"> -->\n\n<!-- Post Header -->\n\n\n\n<style type=\"text/css\">\n    header.intro-header{\n        position: relative;\n        background-image: url('/img/home-bg-geek.jpg');\n        background: ;\n    }\n\n    \n</style>\n\n<header class=\"intro-header\" >\n\n    <div class=\"header-mask\"></div>\n    \n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <div class=\"post-heading\">\n                    <div class=\"tags\">\n                        \n                    </div>\n                    <h1>组件化实践之：主工程抽离代码分支合并用</h1>\n                    \n                    <h2 class=\"subheading\"></h2>\n                    <span class=\"meta\">Posted by PaysonChen on October 7, 2023</span>\n                </div>\n            </div>\n        </div>\n    </div>\n</header>\n\n\n\n\n\n\n<!-- Post Content -->\n<article>\n    <div class=\"container\">\n        <div class=\"row\">\n\n    <!-- Post Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                post-container\">\n\n                <!-- Multi-Lingual -->\n                \n\n\t\t\t\t<h1 id=\"组件化实践之主工程抽离代码分支合并\">组件化实践之：主工程抽离代码分支合并</h1>\n\n<h2 id=\"1-背景\">1 背景</h2>\n\n<p>​\t组件化过程中不可避免的会遇到这样一个问题：</p>\n\n<p>​\t组件化的过程一般周期比较长，此过程中不免会有业务需求的输入，这样就会导致一个情况：</p>\n\n<p>​\t组件化分支已经将主工程里的类迁移到pod仓库,而在此期间的业务需求代码对这些被迁移的类有修改，</p>\n\n<p>​\t合并主干（其他分支）代码时,主干（其他分支）有对移动之前的类做修改的情况下,会导致合并冲突,</p>\n\n<p>​\t这种冲突是整个类都是新增符号(+),没有冲突符号，此时无法简单的通过工具，或者冲突的符号对其进行解冲突。</p>\n\n<h2 id=\"2-问题处理\">2 问题处理</h2>\n\n<p>​\t解决上述冲突,最开始想到的方案是通过xcode自带filemerge进行对比,这样比较容易导致遗漏且工作量大,无法充分利用git的冲突标志,</p>\n\n<h2 id=\"3-更优解决\">3 更优解决</h2>\n\n<p>​\t如果可以知道有哪些类在合并代码时，</p>\n\n<ul class=\"task-list\">\n  <li class=\"task-list-item\"><input type=\"checkbox\" class=\"task-list-item-checkbox\" disabled=\"disabled\" checked=\"checked\" />​\t有修改</li>\n  <li class=\"task-list-item\"><input type=\"checkbox\" class=\"task-list-item-checkbox\" disabled=\"disabled\" checked=\"checked\" />​\t且已经被迁移了（不存在主工程）</li>\n</ul>\n\n<p>​\t那么就可以以这些类进行冲突检测</p>\n\n<h3 id=\"31-冲突解决方案\">3.1 冲突解决方案</h3>\n\n<p>以下简述冲突检测设计思路</p>\n\n<h4 id=\"311-数据准备\">3.1.1 数据准备</h4>\n\n<ul>\n  <li>先进行一次预合并，通过首次合并,可以从sourcetree中看到冲突的类列表文件，查看冲突内容，出现整个文件都带+的变更内容，该文件即为被迁移且被其他分支修改的文件。</li>\n</ul>\n\n<p><img src=\"/img/2023-10-07-merge/0.jpg\" alt=\"0\" /></p>\n\n<ul>\n  <li>将预合并产生的上述冲突的文件列表进行整理，将列表中符合迁移并修改的文件路径列表定义为数组存入文件：merge_project_files.txt</li>\n</ul>\n\n<p><img src=\"/img/2023-10-07-merge/1.png\" alt=\"1\" /></p>\n\n<p>​\t通过选中类(可以全选之后一起移动【mv】)移动路径:</p>\n\n<p><img src=\"/img/2023-10-07-merge/2.png\" alt=\"2\" /></p>\n\n<p><strong><em>Tips：这里用移动mv，不用复制cp，为了主工程修改完之后，能恢复迁移后的样子，不至于多出一些已迁移但是还存在主工程的文件</em></strong></p>\n\n<p>即可获取主工程冲突文件路径，新建一个文本文件,将上述所有冲突类路径移动过去,</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n</pre></td><td class=\"rouge-code\"><pre>/Users/username/Documents/Project/git/Inner/Demo/127/Demo-IOS/ProjectDemoiOS/ProjectDemoiOS/Class/Main/Car/Model/PSCCarDetailInforModel.h\n/Users/username/Documents/Project/git/Inner/Demo/127/Demo-IOS/ProjectDemoiOS/ProjectDemoiOS/Class/Main/Sites/View/PSCPowerPriceTableViewCell.m\n.....\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<ul>\n  <li>将上述文件列表一一对应到组件库里本地clone路径了列表，定义为数组存入文件；merge_pods_files.txt</li>\n</ul>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n</pre></td><td class=\"rouge-code\"><pre>/Users/username/Documents/Project/git/CocoaPods/Private/ProjectCarModule/ProjectCarModule/Classes/Car/Model/DemoCarDetailInforModel.h\n/Users/username/Documents/Project/git/CocoaPods/Private/ProjectExchangeMoudle/ProjectExchangeMoudle/Classes/Sites/View/DemoPowerPriceTableViewCell.m\n.....\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p><strong><em>Tips:commond+option+c可以文件路径</em></strong></p>\n\n<h4 id=\"312--算法编写\">3.1.2  算法编写</h4>\n\n<ul>\n  <li>步骤1:在一个全新的组件化分支（未进行预合并）上先从组件库将冲突的类文件拷贝回主工程,</li>\n  <li>步骤2:提交本地仓库(不需要push远程仓库)后再进行合并</li>\n  <li>步骤3:合并冲突则为可参考历史变更及可解决的冲突状态</li>\n  <li>步骤4:合并解决完后再通过上述方案,反向将dest的主工程目录拷贝并覆盖到组件库文件</li>\n</ul>\n\n<p><strong><em>Tips:可能存在一些已经删除的文件，但是也出现在上述列表中，此时无法从组件库移动到主工程，需要确认是否是无用文件（不是误删）</em></strong></p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\"># merge.sh</span>\n<span class=\"c\"># 从外部文件中读取源文件路径和目标文件夹路径</span>\n<span class=\"c\">#\"source_paths.txt\"</span>\n<span class=\"nv\">source_file</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n<span class=\"c\">#\"destination_paths.txt\"</span>\n<span class=\"nv\">destination_file</span><span class=\"o\">=</span><span class=\"nv\">$2</span>\n\n<span class=\"c\"># 检查源文件是否存在</span>\n<span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"o\">!</span> <span class=\"nt\">-f</span> <span class=\"s2\">\"</span><span class=\"nv\">$source_file</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n    </span><span class=\"nb\">echo</span> <span class=\"s2\">\"源文件 '</span><span class=\"nv\">$source_file</span><span class=\"s2\">' 不存在。\"</span>\n    <span class=\"nb\">exit </span>1\n<span class=\"k\">fi</span>\n\n<span class=\"c\"># 检查目标文件夹文件是否存在</span>\n<span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"o\">!</span> <span class=\"nt\">-f</span> <span class=\"s2\">\"</span><span class=\"nv\">$destination_file</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n    </span><span class=\"nb\">echo</span> <span class=\"s2\">\"源文件 '</span><span class=\"nv\">$source_file</span><span class=\"s2\">' 不存在。\"</span>\n    <span class=\"nb\">exit </span>1\n<span class=\"k\">fi</span>\n\n<span class=\"c\">#保证每条记录都有一个回车（最后一行如果没有回车，会被忽略）</span>\n<span class=\"k\">while </span><span class=\"nv\">IFS</span><span class=\"o\">=</span> <span class=\"nb\">read</span> <span class=\"nt\">-r</span> source_path <span class=\"o\">&amp;&amp;</span> <span class=\"nv\">IFS</span><span class=\"o\">=</span> <span class=\"nb\">read</span> <span class=\"nt\">-r</span> destination_folder &lt;&amp;3<span class=\"p\">;</span> <span class=\"k\">do\n    </span>source_paths+<span class=\"o\">=(</span><span class=\"s2\">\"</span><span class=\"nv\">$source_path</span><span class=\"s2\">\"</span><span class=\"o\">)</span>\n    destination_paths+<span class=\"o\">=(</span><span class=\"s2\">\"</span><span class=\"nv\">$destination_folder</span><span class=\"s2\">\"</span><span class=\"o\">)</span>\n<span class=\"k\">done</span> &lt; <span class=\"nv\">$source_file</span> 3&lt; <span class=\"nv\">$destination_file</span>\n\n<span class=\"c\"># 输出数组长度</span>\n<span class=\"nb\">echo</span> <span class=\"s2\">\"源文件路径数组长度：</span><span class=\"k\">${#</span><span class=\"nv\">source_paths</span><span class=\"p\">[@]</span><span class=\"k\">}</span><span class=\"s2\">\"</span>\n<span class=\"nb\">echo</span> <span class=\"s2\">\"目标文件夹路径数组长度：</span><span class=\"k\">${#</span><span class=\"nv\">destination_paths</span><span class=\"p\">[@]</span><span class=\"k\">}</span><span class=\"s2\">\"</span>\n\n<span class=\"c\">#exit 0</span>\n<span class=\"c\"># 遍历索引</span>\n<span class=\"k\">for </span>index <span class=\"k\">in</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"p\">!source_paths[@]</span><span class=\"k\">}</span><span class=\"s2\">\"</span><span class=\"p\">;</span> <span class=\"k\">do\n    </span><span class=\"nb\">echo</span> <span class=\"s2\">\"遍历目标文件夹路径数组,index=\"</span><span class=\"nv\">$index</span>\n    <span class=\"nv\">source_path</span><span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">source_paths</span><span class=\"p\">[</span><span class=\"nv\">$index</span><span class=\"p\">]</span><span class=\"k\">}</span><span class=\"s2\">\"</span>\n    <span class=\"nv\">destination_path</span><span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">destination_paths</span><span class=\"p\">[</span><span class=\"nv\">$index</span><span class=\"p\">]</span><span class=\"k\">}</span><span class=\"s2\">\"</span>\n\n    <span class=\"c\"># 构建目标文件的完整路径</span>\n<span class=\"c\">#    destination_path=\"${destination_folder}${source_path}\"</span>\n\n    <span class=\"c\"># 检查目标文件是否存在，如果存在则删除</span>\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-e</span> <span class=\"s2\">\"</span><span class=\"nv\">$destination_path</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">rm</span> <span class=\"s2\">\"</span><span class=\"nv\">$destination_path</span><span class=\"s2\">\"</span>\n    <span class=\"k\">fi</span>\n\n    <span class=\"c\"># 确保目标文件夹存在</span>\n    <span class=\"nb\">mkdir</span> <span class=\"nt\">-p</span> <span class=\"s2\">\"</span><span class=\"si\">$(</span><span class=\"nb\">dirname</span> <span class=\"s2\">\"</span><span class=\"nv\">$destination_path</span><span class=\"s2\">\"</span><span class=\"si\">)</span><span class=\"s2\">\"</span>\n\n    <span class=\"c\"># 移动源文件到目标路径</span>\n    <span class=\"nb\">mv</span> <span class=\"s2\">\"</span><span class=\"nv\">$source_path</span><span class=\"s2\">\"</span> <span class=\"s2\">\"</span><span class=\"nv\">$destination_path</span><span class=\"s2\">\"</span>\n<span class=\"k\">done\n\n</span><span class=\"nb\">echo</span> <span class=\"s2\">\"文件移动完成。\"</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h4 id=\"313-执行\">3.1.3 执行</h4>\n\n<p>将pod仓库的文件移动回主工程的调用方式：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>sh merge.sh merge_pods_files.txt merge_project_files.txt\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>解决完冲突后将主工程的上述文件移动回组件库</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>sh merge.sh merge_project_files.txt merge_pods_files.txt\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h4 id=\"314-收尾\">3.1.4 收尾</h4>\n\n<ul>\n  <li>解决完冲突，Pod仓库会得到从主干(其他功能分支)合并的最新类的修改版本，需要提交到对应迁移Pod仓库</li>\n  <li>主工程Project文件保留迁移后的版本，可以得到组件化改造后的Project的文件结构</li>\n  <li>再执行一次之前提到的寻找Project未引用，但是还存在的类的脚本进行最后的清理</li>\n</ul>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n</pre></td><td class=\"rouge-code\"><pre><span class=\"k\">function </span>main<span class=\"o\">()</span> <span class=\"o\">{</span>\n    \n    <span class=\"c\"># 设置项目目录</span>\n    <span class=\"nv\">project_directory</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$1</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then</span>\n        <span class=\"c\">#未传参为当前目录</span>\n        <span class=\"nv\">project_directory</span><span class=\"o\">=</span><span class=\"nb\">.</span>\n    <span class=\"k\">fi</span>\n\n    <span class=\"c\"># 设置其他目录</span>\n    <span class=\"nv\">parent_path</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">dirname</span> <span class=\"s2\">\"</span><span class=\"nv\">$project_directory</span><span class=\"s2\">\"</span><span class=\"si\">)</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"project 路径：\"</span><span class=\"nv\">$parent_path</span>\n    \n    <span class=\"nv\">current_dir</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">basename</span> <span class=\"s2\">\"</span><span class=\"nv\">$project_directory</span><span class=\"s2\">\"</span><span class=\"si\">)</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"当前路径 文件夹名称：\"</span><span class=\"nv\">$current_dir</span>\n\n    \n    <span class=\"nv\">project_path</span><span class=\"o\">=</span><span class=\"si\">$(</span>find <span class=\"s2\">\"</span><span class=\"nv\">$parent_path</span><span class=\"s2\">\"</span>/<span class=\"nv\">$current_dir</span>.xcodeproj <span class=\"nt\">-type</span> f <span class=\"se\">\\(</span> <span class=\"nt\">-name</span> <span class=\"s2\">\"*.pbxproj\"</span> <span class=\"se\">\\)</span><span class=\"si\">)</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"project 路径：\"</span><span class=\"nv\">$project_path</span>\n\n    <span class=\"nv\">all_file_path</span><span class=\"o\">=</span><span class=\"si\">$(</span>find <span class=\"s2\">\"</span><span class=\"nv\">$project_directory</span><span class=\"s2\">\"</span> <span class=\"nt\">-type</span> f <span class=\"se\">\\(</span> <span class=\"nt\">-name</span> <span class=\"s2\">\"*.h\"</span> <span class=\"se\">\\)</span><span class=\"si\">)</span>\n    <span class=\"nv\">all_file_path_cnt</span><span class=\"o\">=</span><span class=\"si\">$(</span>find <span class=\"s2\">\"</span><span class=\"nv\">$project_directory</span><span class=\"s2\">\"</span> <span class=\"nt\">-type</span> f <span class=\"se\">\\(</span> <span class=\"nt\">-name</span> <span class=\"s2\">\"*.h\"</span> <span class=\"se\">\\)</span> | <span class=\"nb\">wc</span> <span class=\"nt\">-l</span><span class=\"si\">)</span>\n\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"主工程 头文件数量：\"</span><span class=\"nv\">$all_file_path_cnt</span>\n\n    <span class=\"k\">for </span>src_file <span class=\"k\">in</span> <span class=\"nv\">$all_file_path</span><span class=\"p\">;</span> <span class=\"k\">do</span>\n    <span class=\"c\">#    echo $src_file</span>\n        <span class=\"nv\">filename</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">basename</span> <span class=\"s2\">\"</span><span class=\"nv\">$src_file</span><span class=\"s2\">\"</span> .h<span class=\"si\">)</span>\n        <span class=\"k\">if</span>  <span class=\"o\">!</span> <span class=\"nb\">grep</span> <span class=\"nt\">-q</span> <span class=\"s2\">\"</span><span class=\"se\">\\b</span><span class=\"nv\">$filename</span><span class=\"se\">\\b</span><span class=\"s2\">\"</span> <span class=\"s2\">\"</span><span class=\"nv\">$project_path</span><span class=\"s2\">\"</span><span class=\"p\">;</span>  <span class=\"k\">then\n            </span><span class=\"nb\">echo</span> <span class=\"s2\">\"project不包含：\"</span><span class=\"nv\">$src_file</span>\n        <span class=\"k\">fi\n    done</span>\n<span class=\"o\">}</span>\n\n\nmain <span class=\"nv\">$1</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>传入工程(Project文件所在的目录)路径：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>sh find_all_file_no_project.sh /Users/username/Documents/Project/git/Inner/Demo/Release/Demo-IOS/ProjectiOS/ProjectiOS \n</pre></td></tr></tbody></table></code></pre></div></div>\n\n\n\n                <hr style=\"visibility: hidden;\">\n                <ul class=\"pager\">\n                    \n                    <li class=\"previous\">\n                        <a href=\"/2023/09/12/iOS-OC-Swift%E6%B7%B7%E7%BC%96/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Pod仓库内OC与Swift调用\">\n                        Previous<br>\n                        <span>Pod仓库内OC与Swift调用</span>\n                        </a>\n                    </li>\n                    \n                    \n                    <li class=\"next\">\n                        <a href=\"/2023/10/07/%E6%8A%93%E5%8C%85%E5%AE%9E%E8%B7%B5/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Charles HTTPS实践\">\n                        Next<br>\n                        <span>Charles HTTPS实践</span>\n                        </a>\n                    </li>\n                    \n                </ul>\n                <hr style=\"visibility: hidden;\">\n\n                \n                <!-- disqus 评论框 start -->\n                <div class=\"comment\">\n                    <div id=\"disqus_thread\" class=\"disqus-thread\"></div>\n                </div>\n                <!-- disqus 评论框 end -->\n                \n\n                \n            </div>  \n\n    <!-- Side Catalog Container -->\n        \n            <div class=\"\n                col-lg-2 col-lg-offset-0\n                visible-lg-block\n                sidebar-container\n                catalog-container\">\n                <div class=\"side-catalog\">\n                    <hr class=\"hidden-sm hidden-xs\">\n                    <h5>\n                        <a class=\"catalog-toggle\" href=\"#\">CATALOG</a>\n                    </h5>\n                    <ul class=\"catalog-body\"></ul>\n                </div>\n            </div>\n        \n\n    <!-- Sidebar Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                sidebar-container\">\n\n                <!-- Featured Tags -->\n                \n\n\n<section>\n    \n        <hr class=\"hidden-sm hidden-xs\">\n    \n    <h5><a href=\"/archive/\">FEATURED TAGS</a></h5>\n    <div class=\"tags\">\n        \n        \n        \n        \n        \n    </div>\n</section>\n\n\n                <!-- Friends Blog -->\n                \n            </div>\n        </div>\n    </div>\n</article>\n\n<!-- add support for mathjax by voleking-->\n\n\n\n\n\n\n<!-- disqus 公共JS代码 start (一个网页只需插入一次) -->\n<script type=\"text/javascript\">\n    /* * * CONFIGURATION VARIABLES * * */\n    var disqus_shortname = \"Cyp\";\n    var disqus_identifier = \"/2023/10/07/组件化之分支合并\";\n    var disqus_url = \"http://localhost:4000/2023/10/07/%E7%BB%84%E4%BB%B6%E5%8C%96%E4%B9%8B%E5%88%86%E6%94%AF%E5%90%88%E5%B9%B6/\";\n\n    (function() {\n        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;\n        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';\n        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);\n    })();\n</script>\n<!-- disqus 公共JS代码 end -->\n\n\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n      var d = document, t = 'script',\n          o = d.createElement(t),\n          s = d.getElementsByTagName(t)[0];\n      o.src = u;\n      if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n      s.parentNode.insertBefore(o, s);\n    }\n</script>\n<!-- anchor-js, Doc:http://bryanbraun.github.io/anchorjs/ -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/anchor-js/1.1.1/anchor.min.js\",function(){\n        anchors.options = {\n          visible: 'hover',\n          placement: 'right',\n          // icon: '#'\n        };\n        anchors.add().remove('.intro-header h1').remove('.subheading').remove('.sidebar-container h5');\n    })\n</script>\n<style>\n    /* place left on bigger screen */\n    @media all and (min-width: 800px) {\n        .anchorjs-link{\n            position: absolute;\n            left: -0.75em;\n            font-size: 1.1em;\n            margin-top : -0.1em;\n        }\n    }\n</style>\n\n\n\n    <!-- Footer -->\n<footer>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <!-- SNS Link -->\n                \n\n\n<ul class=\"list-inline text-center\">\n\n\n  \n  \n  \n  \n  \n  \n  \n</ul>\n\n                <p class=\"copyright text-muted\">\n                    Copyright &copy; PaysonChen Blog 2024\n                    <br>\n                    <!-- Powered by <a href=\"http://huangxuan.me\">Hux Blog</a> | -->\n                 <!--    <iframe style=\"margin-left: 2px; margin-bottom:-5px;\" frameborder=\"0\" scrolling=\"0\" width=\"100px\"\n                        height=\"20px\"\n                        src=\"https://ghbtns.com/github-btn.html?user=huxpro&repo=huxpro.github.io&type=star&count=true\">\n                    </iframe> -->\n                </p>\n            </div>\n        </div>\n    </div>\n</footer>\n\n<!-- jQuery -->\n<script src=\"/js/jquery.min.js \"></script>\n\n<!-- Bootstrap Core JavaScript -->\n<!-- Currently, only navbar scroll-down effect at desktop still depends on this -->\n<script src=\"/js/bootstrap.min.js \"></script>\n\n<!-- Custom Theme JavaScript -->\n<script src=\"/js/hux-blog.min.js \"></script>\n\n<!-- Simple Jekyll Search -->\n<script src=\"/js/simple-jekyll-search.min.js\"></script>\n\n<!-- Service Worker -->\n\n<script src=\"/js/snackbar.js \"></script>\n<script src=\"/js/sw-registration.js \"></script>\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n        var d = document, t = 'script',\n            o = d.createElement(t),\n            s = d.getElementsByTagName(t)[0];\n        o.src = u;\n        if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n        s.parentNode.insertBefore(o, s);\n    }\n</script>\n\n<!--\n     Because of the native support for backtick-style fenced code blocks\n     right within the Markdown is landed in Github Pages,\n     From V1.6, There is no need for Highlight.js,\n     so Huxblog drops it officially.\n\n     - https://github.com/blog/2100-github-pages-now-faster-and-simpler-with-jekyll-3-0\n     - https://help.github.com/articles/creating-and-highlighting-code-blocks/\n     - https://github.com/jneen/rouge/wiki/list-of-supported-languages-and-lexers\n-->\n<!--\n    <script>\n        async(\"http://cdn.bootcss.com/highlight.js/8.6/highlight.min.js\", function(){\n            hljs.initHighlightingOnLoad();\n        })\n    </script>\n    <link href=\"http://cdn.bootcss.com/highlight.js/8.6/styles/github.min.css\" rel=\"stylesheet\">\n-->\n\n\n\n\n\n\n\n<!--fastClick.js -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/fastclick/1.0.6/fastclick.min.js\", function () {\n        var $nav = document.querySelector(\"nav\");\n        if ($nav) FastClick.attach($nav);\n    })\n</script>\n\n\n<!-- Google Analytics -->\n\n\n\n<!-- Baidu Tongji -->\n\n\n\n<!-- Side Catalog -->\n\n<script type=\"text/javascript\">\n    function generateCatalog(selector) {\n\n        // interop with multilangual \n        if ('' == 'true') {\n            _containerSelector = 'div.post-container.active'\n        } else {\n            _containerSelector = 'div.post-container'\n        }\n\n        // init\n        var P = $(_containerSelector), a, n, t, l, i, c;\n        a = P.find('h1,h2,h3,h4,h5,h6');\n\n        // clean\n        $(selector).html('')\n\n        // appending\n        a.each(function () {\n            n = $(this).prop('tagName').toLowerCase();\n            i = \"#\" + $(this).prop('id');\n            t = $(this).text();\n            c = $('<a href=\"' + i + '\" rel=\"nofollow\">' + t + '</a>');\n            l = $('<li class=\"' + n + '_nav\"></li>').append(c);\n            $(selector).append(l);\n        });\n        return true;\n    }\n\n    generateCatalog(\".catalog-body\");\n\n    // toggle side catalog\n    $(\".catalog-toggle\").click((function (e) {\n        e.preventDefault();\n        $('.side-catalog').toggleClass(\"fold\")\n    }))\n\n    /*\n     * Doc: https://github.com/davist11/jQuery-One-Page-Nav\n     * Fork by Hux to support padding\n     */\n    async(\"/js/jquery.nav.js\", function () {\n        $('.catalog-body').onePageNav({\n            currentClass: \"active\",\n            changeHash: !1,\n            easing: \"swing\",\n            filter: \"\",\n            scrollSpeed: 700,\n            scrollOffset: 0,\n            scrollThreshold: .2,\n            begin: null,\n            end: null,\n            scrollChange: null,\n            padding: 80\n        });\n    });\n</script>\n\n\n\n<!-- Multi-Lingual -->\n\n\n<!-- Simple Jekyll Search -->\n<script>\n    // https://stackoverflow.com/questions/1912501/unescape-html-entities-in-javascript\n    function htmlDecode(input) {\n        var e = document.createElement('textarea');\n        e.innerHTML = input;\n        // handle case of empty input\n        return e.childNodes.length === 0 ? \"\" : e.childNodes[0].nodeValue;\n    }\n\n    SimpleJekyllSearch({\n        searchInput: document.getElementById('search-input'),\n        resultsContainer: document.getElementById('search-results'),\n        json: '/search.json',\n        searchResultTemplate: '<div class=\"post-preview item\"><a href=\"{url}\"><h2 class=\"post-title\">{title}</h2><h3 class=\"post-subtitle\">{subtitle}</h3><hr></a></div>',\n        noResultsText: 'No results',\n        limit: 50,\n        fuzzy: false,\n        // a hack to get escaped subtitle unescaped. for some reason, \n        // post.subtitle w/o escape filter nuke entire search.\n        templateMiddleware: function (prop, value, template) {\n            if (prop === 'subtitle' || prop === 'title') {\n                if (value.indexOf(\"code\")) {\n                    return htmlDecode(value);\n                } else {\n                    return value;\n                }\n            }\n        }\n    });\n\n    $(document).ready(function () {\n        var $searchPage = $('.search-page');\n        var $searchOpen = $('.search-icon');\n        var $searchClose = $('.search-icon-close');\n        var $searchInput = $('#search-input');\n        var $body = $('body');\n\n        $searchOpen.on('click', function (e) {\n            e.preventDefault();\n            $searchPage.toggleClass('search-active');\n            var prevClasses = $body.attr('class') || '';\n            setTimeout(function () {\n                $body.addClass('no-scroll');\n            }, 400)\n\n            if ($searchPage.hasClass('search-active')) {\n                $searchClose.on('click', function (e) {\n                    e.preventDefault();\n                    $searchPage.removeClass('search-active');\n                    $body.attr('class', prevClasses);  // from closure \n                });\n                $searchInput.focus();\n            }\n        });\n    });\n</script>\n\n\n<!-- Image to hack wechat -->\n<img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\" />\n<!-- Migrate from head to bottom, no longer block render and still work -->\n\n</body>\n\n</html>\n","excerpt":"<h1 id=\"组件化实践之主工程抽离代码分支合并\">组件化实践之：主工程抽离代码分支合并</h1>\n","url":"/2023/10/07/%E7%BB%84%E4%BB%B6%E5%8C%96%E4%B9%8B%E5%88%86%E6%94%AF%E5%90%88%E5%B9%B6/","next":{"id":"/2023/10/07/抓包实践","tags":[],"relative_path":"_posts/2023-10-09-抓包实践.md","collection":"posts","name":"2023-10-09-抓包实践.md","url":"/2023/10/07/%E6%8A%93%E5%8C%85%E5%AE%9E%E8%B7%B5/","title":"Charles HTTPS实践","date":"2023-10-07 00:00:00 +0800","categories":[],"path":"_posts/2023-10-09-抓包实践.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/home-bg-geek.jpg","slug":"抓包实践","ext":".md"},"title":"组件化实践之：主工程抽离代码分支合并用","date":"2023-10-07 00:00:00 +0800","categories":[],"path":"_posts/2023-10-07-组件化之分支合并.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/home-bg-geek.jpg","slug":"组件化之分支合并","ext":".md"},"output":"<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"google-site-verification\" content=\"xBT4GhYoi5qRD5tr338pgPM5OWHHIDR6mNg1a3euekI\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, viewport-fit=cover\">\n    <meta name=\"description\" content=\"与你一起发现更大的世界。\">\n    <meta name=\"keywords\"  content=\"PaysonChen,iOS,流媒体\">\n    <meta name=\"theme-color\" content=\"#000000\">\n    \n    <!-- Open Graph -->\n    <meta property=\"og:title\" content=\"Charles HTTPS实践 - PaysonChen的博客 | PaysonChen Blog\">\n    \n    <meta property=\"og:type\" content=\"article\">\n    <meta property=\"og:description\" content=\"Charles HTTPS 实践\n\">\n    \n    \n    <meta property=\"article:published_time\" content=\"2023-10-07T00:00:00Z\">\n    \n    \n    <meta property=\"article:author\" content=\"PaysonChen\">\n    \n    \n    \n    <meta property=\"og:image\" content=\"http://localhost:4000\">\n    <meta property=\"og:url\" content=\"http://localhost:4000/2023/10/07/%E6%8A%93%E5%8C%85%E5%AE%9E%E8%B7%B5/\">\n    <meta property=\"og:site_name\" content=\"PaysonChen的博客 | PaysonChen Blog\">\n    \n    <title>Charles HTTPS实践 - PaysonChen的博客 | PaysonChen Blog</title>\n\n    <!-- Web App Manifest -->\n    <link rel=\"manifest\" href=\"/pwa/manifest.json\">\n\n    <!-- Favicon -->\n    <link rel=\"shortcut icon\" href=\"/img/favicon.ico\">\n    \n    <!-- Canonical URL -->\n    <link rel=\"canonical\" href=\"http://localhost:4000/2023/10/07/%E6%8A%93%E5%8C%85%E5%AE%9E%E8%B7%B5/\">\n\n    <!-- Bootstrap Core CSS -->\n    <link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\">\n\n    <!-- Custom CSS -->\n    <link rel=\"stylesheet\" href=\"/css/hux-blog.min.css\">\n\n    <!-- Custom Fonts -->\n    <!-- <link href=\"http://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\"> -->\n    <!-- Hux change font-awesome CDN to qiniu -->\n    <link href=\"//cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\">\n\n\n    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->\n    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->\n    <!--[if lt IE 9]>\n        <script src=\"https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js\"></script>\n        <script src=\"https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js\"></script>\n    <![endif]-->\n\n    <!-- ga & ba script hoook -->\n    <script></script>\n</head>\n\n\n<!-- hack iOS CSS :active style -->\n<body ontouchstart=\"\">\n\n    <!-- Navigation -->\n\n    <nav class=\"navbar navbar-default navbar-custom navbar-fixed-top\">\n        \n        <div class=\"container-fluid\">\n            <!-- Brand and toggle get grouped for better mobile display -->\n            <div class=\"navbar-header page-scroll\">\n                <button type=\"button\" class=\"navbar-toggle\">\n                    <span class=\"sr-only\">Toggle navigation</span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                </button>\n                <a class=\"navbar-brand\" href=\"/\">PaysonChen Blog</a>\n            </div>\n\n            <!-- Collect the nav links, forms, and other content for toggling -->\n            <div id=\"huxblog_navbar\">\n                <div class=\"navbar-collapse\">\n                    <ul class=\"nav navbar-nav navbar-right\">\n                        <li>\n                            <a href=\"/\">Home</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        <li>\n                            <a href=\"/about/\">About</a>\n                        </li>\n                        \n                        \n                        \n                        <li>\n                            <a href=\"/archive/\">Archive</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        <li class=\"search-icon\">\n                            <a href=\"javascript:void(0)\">\n                                <i class=\"fa fa-search\"></i>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n            <!-- /.navbar-collapse -->\n        </div>\n        <!-- /.container -->\n    </nav>\n\n    <script>\n        // Drop Bootstarp low-performance Navbar\n        // Use customize navbar with high-quality material design animation\n        // in high-perf jank-free CSS3 implementation\n        var $body = document.body;\n        var $toggle = document.querySelector('.navbar-toggle');\n        var $navbar = document.querySelector('#huxblog_navbar');\n        var $collapse = document.querySelector('.navbar-collapse');\n\n        var __HuxNav__ = {\n            close: function () {\n                $navbar.className = \" \";\n                // wait until animation end.\n                setTimeout(function () {\n                    // prevent frequently toggle\n                    if ($navbar.className.indexOf('in') < 0) {\n                        $collapse.style.height = \"0px\"\n                    }\n                }, 400)\n            },\n            open: function () {\n                $collapse.style.height = \"auto\"\n                $navbar.className += \" in\";\n            }\n        }\n\n        // Bind Event\n        $toggle.addEventListener('click', function (e) {\n            if ($navbar.className.indexOf('in') > 0) {\n                __HuxNav__.close()\n            } else {\n                __HuxNav__.open()\n            }\n        })\n\n        /**\n         * Since Fastclick is used to delegate 'touchstart' globally\n         * to hack 300ms delay in iOS by performing a fake 'click',\n         * Using 'e.stopPropagation' to stop 'touchstart' event from \n         * $toggle/$collapse will break global delegation.\n         * \n         * Instead, we use a 'e.target' filter to prevent handler\n         * added to document close HuxNav.  \n         *\n         * Also, we use 'click' instead of 'touchstart' as compromise\n         */\n        document.addEventListener('click', function (e) {\n            if (e.target == $toggle) return;\n            if (e.target.className == 'icon-bar') return;\n            __HuxNav__.close();\n        })\n    </script>\n    <!-- Search -->\n<div class=\"search-page\">\n  <div class=\"search-icon-close-container\">\n    <span class=\"search-icon-close\">\n      <i class=\"fa fa-chevron-down\"></i>\n    </span>\n  </div>\n  <div class=\"search-main container\">\n    <div class=\"row\">\n      <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n        <form></form>\n        <input type=\"text\" id=\"search-input\" placeholder=\"$ grep...\">\n        </form>\n        <div id=\"search-results\" class=\"mini-post-list\"></div>\n      </div>\n    </div>\n  </div>\n</div>\n\n    <!-- Image to hack wechat -->\n<!-- <img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\"> -->\n<!-- <img src=\"/img/home-bg-geek.jpg\" width=\"0\" height=\"0\"> -->\n\n<!-- Post Header -->\n\n\n\n<style type=\"text/css\">\n    header.intro-header{\n        position: relative;\n        background-image: url('/img/home-bg-geek.jpg');\n        background: ;\n    }\n\n    \n</style>\n\n<header class=\"intro-header\" >\n\n    <div class=\"header-mask\"></div>\n    \n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <div class=\"post-heading\">\n                    <div class=\"tags\">\n                        \n                    </div>\n                    <h1>Charles HTTPS实践</h1>\n                    \n                    <h2 class=\"subheading\"></h2>\n                    <span class=\"meta\">Posted by PaysonChen on October 7, 2023</span>\n                </div>\n            </div>\n        </div>\n    </div>\n</header>\n\n\n\n\n\n\n<!-- Post Content -->\n<article>\n    <div class=\"container\">\n        <div class=\"row\">\n\n    <!-- Post Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                post-container\">\n\n                <!-- Multi-Lingual -->\n                \n\n\t\t\t\t<h1 id=\"charles-https-实践\">Charles HTTPS 实践</h1>\n\n<h2 id=\"1背景\">1、背景</h2>\n\n<p>在构建充电桩能力的需求背景下，需要对竞品数据进行收集评估，以前是通过截图+ocr方案进行数据收集，效率低下无法满足数据更新的及时性，现在需要采用更加高效的方式</p>\n\n<h2 id=\"2方案选择\">2、方案选择</h2>\n\n<p>咨询之前做过类似工作的测试团队，无法给到比较可靠的方案，一开始选择逆向方案，通过移动端组内评估，以及咨询业内的安全工程师，逆向方案 ，代价较高，且暂无这方面的能力储备，风险不可控。</p>\n\n<p>于是我们认为可以尝试抓包某地图App的方式，验证可行性</p>\n\n<h2 id=\"3抓包\">3、抓包</h2>\n\n<p>wireshark上抓包无法（难度较高）解析https协议</p>\n\n<p>采用Charles 抓包：</p>\n\n<h3 id=\"31代理搭建\">3.1、代理搭建</h3>\n\n<p>打开Charles，在顶部状态栏选择：help-&gt;Local IP Address</p>\n\n<p><img src=\"/img/2023-10-09-Charles/local_IP.png\" alt=\"local_IP\" /></p>\n\n<p>获取到代理机在局域网的ip</p>\n\n<p><img src=\"/img/2023-10-09-Charles/local_IP2.png\" alt=\"local_IP2\" /></p>\n\n<p>在设备上（iPhone）手动设置代理:</p>\n\n<p><img src=\"/img/2023-10-09-Charles/device.png\" alt=\"device\" /></p>\n\n<p>代理设置为上述代理机器的ip + 端口号8888</p>\n\n<p><img src=\"/img/2023-10-09-Charles/device2.png\" alt=\"device2\" /></p>\n\n<h3 id=\"32安装证书\">3.2、安装证书</h3>\n\n<p>在顶部状态栏 help-&gt;SSL Proxying-&gt;Install Charles Root Certification on a Mobile Device or Remote Broswer：</p>\n\n<p><img src=\"/img/2023-10-09-Charles/ssl_cert.png\" alt=\"ssl_cert\" /></p>\n\n<p><img src=\"/img/2023-10-09-Charles/ssl_cert2.png\" alt=\"ssl_cert2\" /></p>\n\n<p>通过设备访问：chls.pro/ssl</p>\n\n<p>下载地址，然后在设置-&gt;通用-&gt;关于-&gt;证书信任 安装/信任证书，并打开证书的开关</p>\n\n<p><img src=\"/img/2023-10-09-Charles/device3.png\" alt=\"device3\" /></p>\n\n<h3 id=\"33报文解析\">3.3、报文解析</h3>\n\n<p>设置好上述说明后，针对所需要抓取的域名的https报文进行解析：</p>\n\n<p>顶部状态栏 Proxy-&gt; SSL Proxying Settings</p>\n\n<p><img src=\"/img/2023-10-09-Charles/ssl_proxy.png\" alt=\"ssl_proxy\" /></p>\n\n<p>添加域名和端口号（端口号为443）：</p>\n\n<p><img src=\"/img/2023-10-09-Charles/ssl_proxy2.png\" alt=\"ssl_proxy2\" /></p>\n\n<p>打开某地图app，搜索相关关键字，得到的结果再Charles查看：</p>\n\n<p><img src=\"/img/2023-10-09-Charles/data.png\" alt=\"data\" /></p>\n\n\n                <hr style=\"visibility: hidden;\">\n                <ul class=\"pager\">\n                    \n                    <li class=\"previous\">\n                        <a href=\"/2023/10/07/%E7%BB%84%E4%BB%B6%E5%8C%96%E4%B9%8B%E5%88%86%E6%94%AF%E5%90%88%E5%B9%B6/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"组件化实践之：主工程抽离代码分支合并用\">\n                        Previous<br>\n                        <span>组件化实践之：主工程抽离代码分支合并用</span>\n                        </a>\n                    </li>\n                    \n                    \n                    <li class=\"next\">\n                        <a href=\"/2023/11/08/%E6%9E%84%E5%BB%BA%E6%B5%81%E6%B0%B4%E7%BA%BF%E5%AE%9E%E8%B7%B5/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"构建流水线实践\">\n                        Next<br>\n                        <span>构建流水线实践</span>\n                        </a>\n                    </li>\n                    \n                </ul>\n                <hr style=\"visibility: hidden;\">\n\n                \n                <!-- disqus 评论框 start -->\n                <div class=\"comment\">\n                    <div id=\"disqus_thread\" class=\"disqus-thread\"></div>\n                </div>\n                <!-- disqus 评论框 end -->\n                \n\n                \n            </div>  \n\n    <!-- Side Catalog Container -->\n        \n            <div class=\"\n                col-lg-2 col-lg-offset-0\n                visible-lg-block\n                sidebar-container\n                catalog-container\">\n                <div class=\"side-catalog\">\n                    <hr class=\"hidden-sm hidden-xs\">\n                    <h5>\n                        <a class=\"catalog-toggle\" href=\"#\">CATALOG</a>\n                    </h5>\n                    <ul class=\"catalog-body\"></ul>\n                </div>\n            </div>\n        \n\n    <!-- Sidebar Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                sidebar-container\">\n\n                <!-- Featured Tags -->\n                \n\n\n<section>\n    \n        <hr class=\"hidden-sm hidden-xs\">\n    \n    <h5><a href=\"/archive/\">FEATURED TAGS</a></h5>\n    <div class=\"tags\">\n        \n        \n        \n        \n        \n    </div>\n</section>\n\n\n                <!-- Friends Blog -->\n                \n            </div>\n        </div>\n    </div>\n</article>\n\n<!-- add support for mathjax by voleking-->\n\n\n\n\n\n\n<!-- disqus 公共JS代码 start (一个网页只需插入一次) -->\n<script type=\"text/javascript\">\n    /* * * CONFIGURATION VARIABLES * * */\n    var disqus_shortname = \"Cyp\";\n    var disqus_identifier = \"/2023/10/07/抓包实践\";\n    var disqus_url = \"http://localhost:4000/2023/10/07/%E6%8A%93%E5%8C%85%E5%AE%9E%E8%B7%B5/\";\n\n    (function() {\n        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;\n        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';\n        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);\n    })();\n</script>\n<!-- disqus 公共JS代码 end -->\n\n\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n      var d = document, t = 'script',\n          o = d.createElement(t),\n          s = d.getElementsByTagName(t)[0];\n      o.src = u;\n      if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n      s.parentNode.insertBefore(o, s);\n    }\n</script>\n<!-- anchor-js, Doc:http://bryanbraun.github.io/anchorjs/ -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/anchor-js/1.1.1/anchor.min.js\",function(){\n        anchors.options = {\n          visible: 'hover',\n          placement: 'right',\n          // icon: '#'\n        };\n        anchors.add().remove('.intro-header h1').remove('.subheading').remove('.sidebar-container h5');\n    })\n</script>\n<style>\n    /* place left on bigger screen */\n    @media all and (min-width: 800px) {\n        .anchorjs-link{\n            position: absolute;\n            left: -0.75em;\n            font-size: 1.1em;\n            margin-top : -0.1em;\n        }\n    }\n</style>\n\n\n\n    <!-- Footer -->\n<footer>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <!-- SNS Link -->\n                \n\n\n<ul class=\"list-inline text-center\">\n\n\n  \n  \n  \n  \n  \n  \n  \n</ul>\n\n                <p class=\"copyright text-muted\">\n                    Copyright &copy; PaysonChen Blog 2024\n                    <br>\n                    <!-- Powered by <a href=\"http://huangxuan.me\">Hux Blog</a> | -->\n                 <!--    <iframe style=\"margin-left: 2px; margin-bottom:-5px;\" frameborder=\"0\" scrolling=\"0\" width=\"100px\"\n                        height=\"20px\"\n                        src=\"https://ghbtns.com/github-btn.html?user=huxpro&repo=huxpro.github.io&type=star&count=true\">\n                    </iframe> -->\n                </p>\n            </div>\n        </div>\n    </div>\n</footer>\n\n<!-- jQuery -->\n<script src=\"/js/jquery.min.js \"></script>\n\n<!-- Bootstrap Core JavaScript -->\n<!-- Currently, only navbar scroll-down effect at desktop still depends on this -->\n<script src=\"/js/bootstrap.min.js \"></script>\n\n<!-- Custom Theme JavaScript -->\n<script src=\"/js/hux-blog.min.js \"></script>\n\n<!-- Simple Jekyll Search -->\n<script src=\"/js/simple-jekyll-search.min.js\"></script>\n\n<!-- Service Worker -->\n\n<script src=\"/js/snackbar.js \"></script>\n<script src=\"/js/sw-registration.js \"></script>\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n        var d = document, t = 'script',\n            o = d.createElement(t),\n            s = d.getElementsByTagName(t)[0];\n        o.src = u;\n        if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n        s.parentNode.insertBefore(o, s);\n    }\n</script>\n\n<!--\n     Because of the native support for backtick-style fenced code blocks\n     right within the Markdown is landed in Github Pages,\n     From V1.6, There is no need for Highlight.js,\n     so Huxblog drops it officially.\n\n     - https://github.com/blog/2100-github-pages-now-faster-and-simpler-with-jekyll-3-0\n     - https://help.github.com/articles/creating-and-highlighting-code-blocks/\n     - https://github.com/jneen/rouge/wiki/list-of-supported-languages-and-lexers\n-->\n<!--\n    <script>\n        async(\"http://cdn.bootcss.com/highlight.js/8.6/highlight.min.js\", function(){\n            hljs.initHighlightingOnLoad();\n        })\n    </script>\n    <link href=\"http://cdn.bootcss.com/highlight.js/8.6/styles/github.min.css\" rel=\"stylesheet\">\n-->\n\n\n\n\n\n\n\n<!--fastClick.js -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/fastclick/1.0.6/fastclick.min.js\", function () {\n        var $nav = document.querySelector(\"nav\");\n        if ($nav) FastClick.attach($nav);\n    })\n</script>\n\n\n<!-- Google Analytics -->\n\n\n\n<!-- Baidu Tongji -->\n\n\n\n<!-- Side Catalog -->\n\n<script type=\"text/javascript\">\n    function generateCatalog(selector) {\n\n        // interop with multilangual \n        if ('' == 'true') {\n            _containerSelector = 'div.post-container.active'\n        } else {\n            _containerSelector = 'div.post-container'\n        }\n\n        // init\n        var P = $(_containerSelector), a, n, t, l, i, c;\n        a = P.find('h1,h2,h3,h4,h5,h6');\n\n        // clean\n        $(selector).html('')\n\n        // appending\n        a.each(function () {\n            n = $(this).prop('tagName').toLowerCase();\n            i = \"#\" + $(this).prop('id');\n            t = $(this).text();\n            c = $('<a href=\"' + i + '\" rel=\"nofollow\">' + t + '</a>');\n            l = $('<li class=\"' + n + '_nav\"></li>').append(c);\n            $(selector).append(l);\n        });\n        return true;\n    }\n\n    generateCatalog(\".catalog-body\");\n\n    // toggle side catalog\n    $(\".catalog-toggle\").click((function (e) {\n        e.preventDefault();\n        $('.side-catalog').toggleClass(\"fold\")\n    }))\n\n    /*\n     * Doc: https://github.com/davist11/jQuery-One-Page-Nav\n     * Fork by Hux to support padding\n     */\n    async(\"/js/jquery.nav.js\", function () {\n        $('.catalog-body').onePageNav({\n            currentClass: \"active\",\n            changeHash: !1,\n            easing: \"swing\",\n            filter: \"\",\n            scrollSpeed: 700,\n            scrollOffset: 0,\n            scrollThreshold: .2,\n            begin: null,\n            end: null,\n            scrollChange: null,\n            padding: 80\n        });\n    });\n</script>\n\n\n\n<!-- Multi-Lingual -->\n\n\n<!-- Simple Jekyll Search -->\n<script>\n    // https://stackoverflow.com/questions/1912501/unescape-html-entities-in-javascript\n    function htmlDecode(input) {\n        var e = document.createElement('textarea');\n        e.innerHTML = input;\n        // handle case of empty input\n        return e.childNodes.length === 0 ? \"\" : e.childNodes[0].nodeValue;\n    }\n\n    SimpleJekyllSearch({\n        searchInput: document.getElementById('search-input'),\n        resultsContainer: document.getElementById('search-results'),\n        json: '/search.json',\n        searchResultTemplate: '<div class=\"post-preview item\"><a href=\"{url}\"><h2 class=\"post-title\">{title}</h2><h3 class=\"post-subtitle\">{subtitle}</h3><hr></a></div>',\n        noResultsText: 'No results',\n        limit: 50,\n        fuzzy: false,\n        // a hack to get escaped subtitle unescaped. for some reason, \n        // post.subtitle w/o escape filter nuke entire search.\n        templateMiddleware: function (prop, value, template) {\n            if (prop === 'subtitle' || prop === 'title') {\n                if (value.indexOf(\"code\")) {\n                    return htmlDecode(value);\n                } else {\n                    return value;\n                }\n            }\n        }\n    });\n\n    $(document).ready(function () {\n        var $searchPage = $('.search-page');\n        var $searchOpen = $('.search-icon');\n        var $searchClose = $('.search-icon-close');\n        var $searchInput = $('#search-input');\n        var $body = $('body');\n\n        $searchOpen.on('click', function (e) {\n            e.preventDefault();\n            $searchPage.toggleClass('search-active');\n            var prevClasses = $body.attr('class') || '';\n            setTimeout(function () {\n                $body.addClass('no-scroll');\n            }, 400)\n\n            if ($searchPage.hasClass('search-active')) {\n                $searchClose.on('click', function (e) {\n                    e.preventDefault();\n                    $searchPage.removeClass('search-active');\n                    $body.attr('class', prevClasses);  // from closure \n                });\n                $searchInput.focus();\n            }\n        });\n    });\n</script>\n\n\n<!-- Image to hack wechat -->\n<img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\" />\n<!-- Migrate from head to bottom, no longer block render and still work -->\n\n</body>\n\n</html>\n","excerpt":"<h1 id=\"charles-https-实践\">Charles HTTPS 实践</h1>\n","url":"/2023/10/07/%E6%8A%93%E5%8C%85%E5%AE%9E%E8%B7%B5/","next":{"id":"/2023/11/08/构建流水线实践","tags":[],"relative_path":"_posts/2023-11-08-构建流水线实践.md","collection":"posts","content":"<h2 id=\"1-背景\">1 背景</h2>\n\n<p>​\t为了适应不通项目的自动化的需求，而且构建的方式和能力也在不断的迭代与演进，同时维护多个构建脚本存在成本与遗漏，因此将打包脚本的通用能力抽离，通过配置参数进行不同项目的构建。</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n</pre></td><td class=\"rouge-code\"><pre># [目的]\n# 为了使流水线建设趋于可维护，易维护，可迁移，易迁移，对构建逻辑进行模块化、将构建主流程划分为：构建前、构建、构建后，三大模块\n#\n#   构建前：参数配置、版本号设置\n#   构建中：Pod install、xcbuild\n#   构建后：归档、分发、通知\n#\n# 当前的构建后方案的选择：\n#   归档：简单云（ipa+dSYM）、bugly（dSYM）\n#   分发：蒲公英、阿里云OSS、AppStore\n#   通知：钉钉机器人\n# 在未来的持续集成过程中，可以对归档方案进行替换、对分发方案进行替换、对通知方案进行替换、不需要阅读和改动构建中流程\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h2 id=\"2-开始\">2 开始</h2>\n\n<p>构建脚本由构建入口、构建主流程、额外流程三个模块构成，</p>\n\n<script src=\"js/mermaid.ts\"></script>\n<div class=\"mermaid\">\n\ngraph TB\nSTART--&gt;入参配置\n入参配置--&gt;构建前-第三方APIKEY配置\n构建前-第三方APIKEY配置--&gt;构建前-设置构建版本号自增\n构建前-设置构建版本号自增--&gt;构建前-获取工程配置  \n构建前-获取工程配置--&gt;构建中-环境变量设置\n构建中-环境变量设置--&gt;构建中-执行Pod依赖安装\n构建中-执行Pod依赖安装--&gt;构建中-执行构建\n构建中-执行构建--&gt;构建中-执行归档\n构建中-执行归档--&gt;构建中-执行分发\n构建中-执行分发--&gt;构建中-执行通知\n构建中-执行通知--&gt;END\n\n</div>\n\n<h3 id=\"21-构建入口\">2.1 构建入口</h3>\n\n<p>构建入口由UniversalBuild.sh 执行，负责可变参数声明及脚本入参处理</p>\n\n<p>参数说明：</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n</pre></td><td class=\"rouge-code\"><pre># [参数]\n#   -cfg                #打包方式：configuration(0:DailyBuild|1:TestFlight|2:Release|3:TFInner)\n#   -target_name        #项目配置：要打包的TargetName\n#   -channel_name       #渠道号：pgy下载 url后缀\n#   -notify             #是否启用通知 有传值1则启用群通知，2启用内部群通知\n#   -publish            #分发方式：1 启用oss| 2 启用pgy+oss | else pgy\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>以下以【Demo】为例：</p>\n\n<p>​\tTarget为PSCDemoiOS</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n</pre></td><td class=\"rouge-code\"><pre># [调用说明]\n#   使用了gitsubmodule 构建组件，兼容git 检出不兼容，需要先执行 git submodule update --init --recursive\n#   git submodule update --init --recursive\n#   拉取自模块更新\n#   git submodule update --remote\n#\n#   打包方式：configuration(0:DailyBuild|1:TestFlight|2:Release|3:TFInner)\n#   configuration=0\n#\n#   项目配置（TargetName与源码所在目录需同名）：\n#   targetName=PSCDemoiOS\n#\n#   渠道号：pgy下载 url后缀\n#   pgyChannel=129\n#\n#   是否启用通知 有传值1则启用群通知，2启用内部群通知\n#   notify=1\n#\n#   1 启用oss 2 启用pgy+oss else pgy\n#   publish=0\n#\n#   sh PSC_iOS_Build_SH/UniversalBuild.sh -cfg $configuration -target_name $targetName -channel_name $pgyChannel -notify $notify -publish $publish\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h3 id=\"22-构建主流程\">2.2 构建主流程</h3>\n\n<p>构建主流吃由build_sh.sh 执行，负责iOS构建工作，此部分与打包业务强相关，相对比较稳定，不太需要频繁修改，因此抽离出来</p>\n\n<p>主流程简单说明：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n</pre></td><td class=\"rouge-code\"><pre><span class=\"k\">function </span>build<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"c\">#新增耗时统计</span>\n    <span class=\"nb\">export </span><span class=\"nv\">build_start_time</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">date</span> +%s.%N<span class=\"si\">)</span>\n\n    <span class=\"c\">#初始化环境</span>\n    bInitEnv\n    print_time_cost <span class=\"s2\">\"构建前配置\"</span>\n\n    <span class=\"c\">#执行pod</span>\n    bPodInstall\n    print_time_cost <span class=\"s2\">\"执行pod\"</span>\n\n    <span class=\"c\">#执行构建</span>\n    bBuildProject\n    print_time_cost <span class=\"s2\">\"执行构建\"</span>\n\n    <span class=\"c\">#执行构建后的归档流程：ipa &amp; dsym</span>\n    bCollection\n    print_time_cost <span class=\"s2\">\"执行构建归档操作\"</span>\n\n    <span class=\"c\">#执行构建后的分发流程：上传（发布）安装包，供下载安装</span>\n    bDistribution\n    print_time_cost <span class=\"s2\">\"执行分发操作\"</span>\n\n    <span class=\"c\">#执行构建后的通知流程</span>\n    bNotification\n    print_time_cost <span class=\"s2\">\"执行通知操作\"</span>\n<span class=\"o\">}</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>详细步骤，详见代码相关模块</p>\n\n<h3 id=\"23-额外流程\">2.3 额外流程</h3>\n\n<p>额外流程抽离是考虑到上传、通知、归档等属于打包的后续操作，不需要与打包流程耦合，且这部分的流程抽离，可实现模块的热插拔替换。</p>\n\n<h4 id=\"231-分发\">2.3.1 分发</h4>\n\n<p>​\t目前支持以下三种分法方式：</p>\n\n<ul>\n  <li>蒲公英</li>\n  <li>阿里云OSS</li>\n  <li>AppStore</li>\n</ul>\n\n<p>​\t安装包的分发逻辑调用</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>sh build_ext/build_publish.sh\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>​\t在 build_publish.sh 中执行分发逻辑，</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n</pre></td><td class=\"rouge-code\"><pre><span class=\"k\">function </span>upload_ipa <span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"nb\">export </span><span class=\"nv\">upload_start_time</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">date</span> +%s.%N<span class=\"si\">)</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'///upload_ipa configurationName = '</span><span class=\"k\">${</span><span class=\"nv\">configurationName</span><span class=\"k\">}</span>\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">packedToAppStore</span><span class=\"k\">}</span><span class=\"s2\">\"</span> <span class=\"o\">==</span> <span class=\"s2\">\"1\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">echo</span> <span class=\"s1\">'TFInner 、TestFlight &amp; appstore 上传到appstore 统计耗时'</span>\n        upload_ipa_to_AppStore\n        print_upload_time_cost <span class=\"s2\">\"上传AppStore\"</span>\n\n    <span class=\"k\">else</span>\n        <span class=\"c\">#其他</span>\n        <span class=\"c\">#启用pgy时构建包上传到pgy</span>\n        <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">use_pgy_publish</span><span class=\"k\">}</span><span class=\"s2\">\"</span> <span class=\"o\">=</span> <span class=\"s2\">\"1\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n            </span><span class=\"nb\">echo</span> <span class=\"s1\">'///启用pgy上传，统计耗时'</span>\n            upload_ipa_to_pgyer\n            print_upload_time_cost <span class=\"s2\">\"上传PGY\"</span>\n        <span class=\"k\">fi</span>\n\n        <span class=\"c\">#启用oss</span>\n        <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">use_oss_publish</span><span class=\"k\">}</span><span class=\"s2\">\"</span> <span class=\"o\">=</span> <span class=\"s2\">\"1\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n            </span><span class=\"nb\">echo</span> <span class=\"s1\">'///启用oss上传，统计耗时'</span>\n            upload_ipa_to_aliyunOSS\n            print_upload_time_cost <span class=\"s2\">\"上传oss\"</span>\n        <span class=\"k\">fi\n    fi</span>\n<span class=\"o\">}</span>\n\n\n<span class=\"k\">function </span>upload<span class=\"o\">()</span>\n<span class=\"o\">{</span>   \n    <span class=\"c\">#发布ipa</span>\n    upload_ipa\n<span class=\"o\">}</span>\n\n<span class=\"c\">#归档</span>\nupload\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>​\t上传测试包可以从现在的蒲公英换到Fir或者简单云等，则不需要关心打包流程，只需要将上传模块的方法切换即可。</p>\n\n<ul>\n  <li><strong>dailybuild</strong></li>\n</ul>\n\n<p>​\t蒲公英：</p>\n\n<p>​\t用于测试包构建，安装包目前上传到蒲公英（服务端环境可切换）</p>\n\n<p>​\t上传蒲公英的逻辑：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#发布到第三方分发平台：蒲公英</span>\n<span class=\"k\">function </span>upload_ipa_to_pgyer <span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'/// 上传 PGY 开始 IPA_PATH='</span><span class=\"k\">${</span><span class=\"nv\">IPA_PATH</span><span class=\"k\">}</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'/// 上传 PGY 开始 渠道='</span><span class=\"k\">${</span><span class=\"nv\">channel_name</span><span class=\"k\">}</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'/// 上传 PGY 开始 提交 git_log='</span><span class=\"k\">${</span><span class=\"nv\">git_log</span><span class=\"k\">}</span>\n        \n    <span class=\"nv\">compileEnvironment</span><span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">buildName</span><span class=\"k\">}</span><span class=\"s2\">:</span><span class=\"k\">${</span><span class=\"nv\">git_log</span><span class=\"k\">}</span><span class=\"s2\">\"</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'/// 上传 PGY 开始 内容='</span><span class=\"k\">${</span><span class=\"nv\">compileEnvironment</span><span class=\"k\">}</span>\n\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$channel_name</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then</span>\n        <span class=\"c\"># 渠道空，则走默认 不指定渠道号的上传</span>\n        <span class=\"c\"># 改成2.0api</span>\n        <span class=\"nb\">echo</span> <span class=\"s1\">'/// 上传 PGY 开始 渠道 为空'</span>\n        bash <span class=\"nv\">$build_ext_path</span>/publish_res/pgyer_upload.sh <span class=\"nt\">-k</span> <span class=\"k\">${</span><span class=\"nv\">pgyAPIKey</span><span class=\"k\">}</span> <span class=\"nt\">-d</span> <span class=\"k\">${</span><span class=\"nv\">compileEnvironment</span><span class=\"k\">}</span> <span class=\"k\">${</span><span class=\"nv\">IPA_PATH</span><span class=\"k\">}</span>\n    <span class=\"k\">else</span>\n        <span class=\"c\"># 渠道非空，走下载地址关联 渠道</span>\n        <span class=\"c\"># 改成2.0api</span>\n        <span class=\"nb\">echo</span> <span class=\"s1\">'/// 上传 PGY 开始 渠道='</span><span class=\"k\">${</span><span class=\"nv\">channel_name</span><span class=\"k\">}</span>\n        bash <span class=\"nv\">$build_ext_path</span>/publish_res/pgyer_upload.sh <span class=\"nt\">-k</span> <span class=\"k\">${</span><span class=\"nv\">pgyAPIKey</span><span class=\"k\">}</span> <span class=\"nt\">-d</span> <span class=\"k\">${</span><span class=\"nv\">compileEnvironment</span><span class=\"k\">}</span> <span class=\"nt\">-c</span> <span class=\"k\">${</span><span class=\"nv\">pgyDownloadUrlSubfix</span><span class=\"k\">}</span> <span class=\"k\">${</span><span class=\"nv\">IPA_PATH</span><span class=\"k\">}</span>\n    <span class=\"k\">fi\n            \n    </span><span class=\"nb\">echo</span> <span class=\"s1\">'/// 上传 PGY 结束'</span>\n<span class=\"o\">}</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>​\t阿里云OSS：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#在下载二维码增加git日志</span>\n<span class=\"k\">function </span>add_log_commit_title_msg_to_qrcode <span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"c\">#二维码打上版本信息</span>\n    <span class=\"c\">#TODO: 这里需要安装下工具 ImageMgick [brew install ImageMgick]</span>\n    <span class=\"c\">#check_command_and_install \"convert\" \"ImageMgick\"</span>\n    bash <span class=\"nv\">$build_ext_path</span>/build_tools/build_tools.sh <span class=\"s2\">\"convert\"</span> <span class=\"s2\">\"ImageMagick\"</span>\n    \n    <span class=\"nv\">title</span><span class=\"o\">=</span><span class=\"nv\">$xcodeVersion3number</span>.<span class=\"k\">${</span><span class=\"nv\">channel_name</span><span class=\"k\">}</span>.<span class=\"nv\">$configurationName</span>.<span class=\"k\">${</span><span class=\"nv\">BuildNo</span><span class=\"k\">}</span>\n\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nv\">$1</span> <span class=\"o\">=</span> <span class=\"s2\">\"1\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nv\">dst_line_cnt</span><span class=\"o\">=</span>0\n        <span class=\"c\">#FIXME: 这样取会为空???? ${source_log_arr}</span>\n        <span class=\"nb\">export </span><span class=\"nv\">oss_source_log_arr</span><span class=\"o\">=(</span><span class=\"sb\">`</span><span class=\"nb\">echo</span> <span class=\"nv\">$source_log_str</span> | <span class=\"nb\">tr</span> <span class=\"s1\">'}{'</span> <span class=\"s1\">' '</span><span class=\"sb\">`</span><span class=\"o\">)</span>\n        <span class=\"nb\">export </span><span class=\"nv\">oss_log_line_count</span><span class=\"o\">=</span><span class=\"k\">${#</span><span class=\"nv\">oss_source_log_arr</span><span class=\"p\">[@]</span><span class=\"k\">}</span>\n        <span class=\"nb\">echo</span> <span class=\"s1\">'/// oss 分发： 添加 二维码msg log_line_count='</span><span class=\"nv\">$oss_log_line_count</span>\n        <span class=\"nb\">echo</span> <span class=\"s1\">'/// oss 分发： 添加 二维码msg source_log_arr count='</span><span class=\"k\">${#</span><span class=\"nv\">source_log_arr</span><span class=\"p\">[@]</span><span class=\"k\">}</span>\n\n        <span class=\"k\">for</span><span class=\"o\">((</span> <span class=\"nv\">i</span><span class=\"o\">=</span>0<span class=\"p\">;</span>i&lt;<span class=\"k\">${</span><span class=\"nv\">oss_log_line_count</span><span class=\"k\">}</span><span class=\"p\">;</span>i++<span class=\"o\">))</span>\n        <span class=\"k\">do\n            </span><span class=\"nv\">single_len</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">echo</span> <span class=\"nt\">-n</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">oss_source_log_arr</span><span class=\"p\">[i]</span><span class=\"k\">}</span><span class=\"s2\">\"</span> | <span class=\"nb\">wc</span> <span class=\"nt\">-m</span><span class=\"si\">)</span>\n            <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">oss_source_log_arr</span><span class=\"p\">[i]</span><span class=\"k\">}</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n                </span><span class=\"nv\">oss_singleStr</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">oss_source_log_arr</span><span class=\"p\">[i]</span><span class=\"k\">}</span><span class=\"p\">;</span>\n                <span class=\"nb\">echo</span> <span class=\"s1\">'///--遍历'</span><span class=\"k\">${</span><span class=\"nv\">oss_source_log_arr</span><span class=\"p\">[i]</span><span class=\"k\">}</span><span class=\"s1\">'为空文字长度：'</span><span class=\"nv\">$single_len</span>\n                <span class=\"nv\">dst_line_cnt</span><span class=\"o\">=</span><span class=\"k\">$((</span>dst_line_cnt+1<span class=\"k\">))</span>\n            <span class=\"k\">else\n                </span><span class=\"nv\">line_max_len</span><span class=\"o\">=</span>30\n                <span class=\"nv\">ingle_cnt</span><span class=\"o\">=</span><span class=\"k\">$((</span>single_len <span class=\"o\">/</span> line_max_len<span class=\"k\">))</span>\n\n\n                <span class=\"k\">if</span> <span class=\"o\">((</span>ingle_cnt <span class=\"o\">&gt;</span> 0<span class=\"o\">))</span><span class=\"p\">;</span> <span class=\"k\">then\n                    for</span><span class=\"o\">((</span> <span class=\"nv\">j</span><span class=\"o\">=</span>0<span class=\"p\">;</span>j&lt;<span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">ingle_cnt</span><span class=\"k\">}</span><span class=\"p\">;</span>j++<span class=\"o\">))</span>\n                    <span class=\"k\">do\n                        </span><span class=\"nv\">string</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">oss_source_log_arr</span><span class=\"p\">[i]</span><span class=\"k\">}</span>\n                        <span class=\"nv\">single_line1</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">string</span>:<span class=\"p\">(line_max_len * j)</span>:line_max_len<span class=\"k\">}</span>\n                        <span class=\"nb\">echo</span> <span class=\"s1\">'///--遍历'</span> <span class=\"k\">${</span><span class=\"nv\">oss_source_log_arr</span><span class=\"p\">[i]</span><span class=\"k\">}</span><span class=\"s1\">'文字长度：'</span><span class=\"nv\">$single_len</span><span class=\"s1\">'超阈值阶段：第'</span><span class=\"nv\">$j</span><span class=\"s1\">'行:'</span><span class=\"nv\">$single_line1</span>\n                        oss_singleStr+<span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"se\">\\n</span><span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">single_line1</span><span class=\"k\">}</span><span class=\"p\">;</span>\n                        <span class=\"nv\">dst_line_cnt</span><span class=\"o\">=</span><span class=\"k\">$((</span>dst_line_cnt+1<span class=\"k\">))</span>\n                    <span class=\"k\">done</span><span class=\"p\">;</span>\n                <span class=\"k\">else\n                    </span><span class=\"nb\">echo</span> <span class=\"s1\">'///--遍历'</span> <span class=\"k\">${</span><span class=\"nv\">oss_source_log_arr</span><span class=\"p\">[i]</span><span class=\"k\">}</span><span class=\"s1\">' 文字长度：'</span><span class=\"nv\">$single_len</span>\n                    <span class=\"nv\">dst_line_cnt</span><span class=\"o\">=</span><span class=\"k\">$((</span>dst_line_cnt+1<span class=\"k\">))</span>\n                    oss_singleStr+<span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"se\">\\n</span><span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">oss_source_log_arr</span><span class=\"p\">[i]</span><span class=\"k\">}</span><span class=\"p\">;</span>\n                <span class=\"k\">fi\n            fi\n        done</span><span class=\"p\">;</span>\n        <span class=\"nv\">msg</span><span class=\"o\">=</span><span class=\"nv\">$oss_singleStr</span>\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"/// oss render msg=\"</span><span class=\"nv\">$msg</span>\n        \n        <span class=\"nv\">contentsize_width</span><span class=\"o\">=</span>600\n        <span class=\"nv\">contentsize_height</span><span class=\"o\">=</span><span class=\"k\">$((</span>contentsize_width <span class=\"o\">+</span> <span class=\"nv\">$dst_line_cnt</span> <span class=\"o\">*</span> <span class=\"m\">25</span> <span class=\"o\">+</span> <span class=\"m\">40</span> <span class=\"o\">+</span> <span class=\"m\">40</span><span class=\"k\">))</span> <span class=\"c\">#第一个40是title的高度 第二个40是距离底部空间</span>\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"contentsize_height=\"</span><span class=\"nv\">$contentsize_height</span>\n        <span class=\"c\">#改变原图大小</span>\n        convert <span class=\"nv\">$qrcode_path</span> <span class=\"nt\">-resize</span> <span class=\"k\">${</span><span class=\"nv\">contentsize_width</span><span class=\"k\">}</span>x<span class=\"k\">${</span><span class=\"nv\">contentsize_width</span><span class=\"k\">}</span>^ <span class=\"nt\">-gravity</span> center <span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span>_1.png\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"1 convert：\"</span><span class=\"k\">${</span><span class=\"nv\">contentsize_width</span><span class=\"k\">}</span>x<span class=\"k\">${</span><span class=\"nv\">contentsize_width</span><span class=\"k\">}</span>\n\n        <span class=\"c\">#变高，兼容msg</span>\n        convert <span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span>_1.png <span class=\"nt\">-gravity</span> north <span class=\"nt\">-extent</span> <span class=\"k\">${</span><span class=\"nv\">contentsize_width</span><span class=\"k\">}</span>x<span class=\"k\">${</span><span class=\"nv\">contentsize_height</span><span class=\"k\">}</span> <span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span>_2.png\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"2 convert：\"</span><span class=\"k\">${</span><span class=\"nv\">contentsize_width</span><span class=\"k\">}</span>x<span class=\"k\">${</span><span class=\"nv\">contentsize_height</span><span class=\"k\">}</span>\n\n        <span class=\"c\">#汉字字体</span>\n        <span class=\"nv\">chn_tff_path</span><span class=\"o\">=</span><span class=\"nv\">$build_ext_path</span>/publish_res/chn.ttf\n        \n        <span class=\"c\">#渲染title</span>\n        convert <span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span>_2.png <span class=\"nt\">-gravity</span> north <span class=\"nt\">-pointsize</span> 30 <span class=\"nt\">-font</span> <span class=\"nv\">$chn_tff_path</span> <span class=\"nt\">-fill</span> black <span class=\"nt\">-annotate</span> +0+<span class=\"k\">${</span><span class=\"nv\">contentsize_width</span><span class=\"k\">}</span> <span class=\"nv\">$title</span> <span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span>_3.png\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"3 convert：title：\"</span><span class=\"k\">${</span><span class=\"nv\">title</span><span class=\"k\">}</span>\n\n        <span class=\"c\">#渲染msg</span>\n        <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$msg</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n            </span><span class=\"nb\">echo</span> <span class=\"s2\">\"4 convert：msg：为空\"</span>\n        <span class=\"k\">fi\n        \n        </span>convert <span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span>_3.png <span class=\"nt\">-gravity</span> north <span class=\"nt\">-pointsize</span> 20 <span class=\"nt\">-font</span> <span class=\"nv\">$chn_tff_path</span> <span class=\"nt\">-fill</span> black <span class=\"nt\">-annotate</span> +0+<span class=\"k\">$((${</span><span class=\"nv\">contentsize_width</span><span class=\"k\">}</span><span class=\"o\">+</span><span class=\"m\">40</span><span class=\"k\">))</span> <span class=\"nv\">$msg</span> <span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span>_4.png\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"4 convert：msg：\"</span><span class=\"k\">${</span><span class=\"nv\">msg</span><span class=\"k\">}</span>\n        \n        <span class=\"k\">if </span><span class=\"nb\">test</span> <span class=\"nt\">-e</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span><span class=\"s2\">_4.png\"</span><span class=\"p\">;</span> <span class=\"k\">then\n            </span><span class=\"nb\">echo</span> <span class=\"s2\">\"4 convert：msg 存在\"</span>\n            <span class=\"nv\">qrcode_path_with_msg</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span>_4.png\n        <span class=\"k\">else\n            </span><span class=\"nb\">echo</span> <span class=\"s2\">\"4 convert：msg 不存在 使用3\"</span>\n            <span class=\"nv\">qrcode_path_with_msg</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span>_3.png\n        <span class=\"k\">fi\n\n    else</span>\n        <span class=\"c\">#没有传 1 不需要msg，只给title</span>\n        convert <span class=\"nv\">$qrcode_path</span> <span class=\"nt\">-gravity</span> south <span class=\"nt\">-pointsize</span> 10 <span class=\"nt\">-fill</span> gray <span class=\"nt\">-annotate</span> +0+0 <span class=\"nv\">$qrcode_print_msg</span>  <span class=\"nv\">$qrcode_path_with_msg</span>\n        <span class=\"nb\">echo</span> <span class=\"s1\">'/// oss 分发： 添加 二维码title='</span><span class=\"k\">${</span><span class=\"nv\">title</span><span class=\"k\">}</span>\n    <span class=\"k\">fi</span>\n\n<span class=\"o\">}</span>\n\n<span class=\"c\">#发布到阿里云OSS</span>\n<span class=\"k\">function </span>upload_ipa_to_aliyunOSS <span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"c\">#更新plist的键值对：</span>\n    <span class=\"c\">#    /usr/libexec/PlistBuddy -c \"Set :CFBundleShortVersionString ${version3number}\" ${WeSingNotificationServiceExtension_plist}</span>\n    <span class=\"nv\">manifest_path</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">exportPath</span><span class=\"k\">}</span>/manifest.plist\n    <span class=\"nb\">echo</span> <span class=\"s1\">'/// oss 分发： manifest_path='</span><span class=\"k\">${</span><span class=\"nv\">manifest_path</span><span class=\"k\">}</span>\n    \n    <span class=\"nv\">oss_bucket</span><span class=\"o\">=</span><span class=\"s2\">\"oss_bucket_name\"</span>\n    <span class=\"nv\">oss_platform</span><span class=\"o\">=</span><span class=\"s2\">\"iOS\"</span>\n    <span class=\"nv\">oss_bucket_path</span><span class=\"o\">=</span><span class=\"nv\">$oss_platform</span>/<span class=\"k\">${</span><span class=\"nv\">TARGET_NAME</span><span class=\"k\">}</span>/<span class=\"nv\">$configurationName</span>/<span class=\"k\">${</span><span class=\"nv\">channel_name</span><span class=\"k\">}</span>/<span class=\"k\">${</span><span class=\"nv\">BuildNo</span><span class=\"k\">}</span>/<span class=\"k\">${</span><span class=\"nv\">TARGET_NAME</span><span class=\"k\">}</span>_<span class=\"k\">${</span><span class=\"nv\">channel_name</span><span class=\"k\">}</span>_<span class=\"nv\">$configurationName_</span><span class=\"k\">${</span><span class=\"nv\">BuildNo</span><span class=\"k\">}</span>\n    <span class=\"nv\">oss_path</span><span class=\"o\">=</span><span class=\"s2\">\"oss://</span><span class=\"nv\">$oss_bucket</span><span class=\"s2\">/</span><span class=\"nv\">$oss_bucket_path</span><span class=\"s2\">\"</span>\n    <span class=\"nv\">oss_url</span><span class=\"o\">=</span><span class=\"s2\">\"https://</span><span class=\"nv\">$oss_bucket</span><span class=\"s2\">.oss-cn-beijing.aliyuncs.com/</span><span class=\"nv\">$oss_bucket_path</span><span class=\"s2\">\"</span>\n\n    <span class=\"nv\">oss_ipa_upload_url</span><span class=\"o\">=</span><span class=\"nv\">$oss_path</span><span class=\"s2\">\".ipa\"</span>\n    <span class=\"nv\">oss_ipa_url</span><span class=\"o\">=</span><span class=\"nv\">$oss_url</span><span class=\"s2\">\".ipa\"</span>\n\n    <span class=\"c\">#icon下载地址配置</span>\n    <span class=\"nv\">oss_icon_url</span><span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">aliyunOSSBuicket</span><span class=\"k\">}</span><span class=\"s2\">/icon/icon.png\"</span>\n    <span class=\"nv\">oss_icon_fs_url</span><span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">aliyunOSSBuicket</span><span class=\"k\">}</span><span class=\"s2\">/icon/icon_fs.png\"</span>\n\n    \n    <span class=\"c\">#修改ipa下载地址</span>\n    /usr/libexec/PlistBuddy <span class=\"nt\">-c</span> <span class=\"s2\">\"Set :items:0:assets:0:url </span><span class=\"nv\">$oss_ipa_url</span><span class=\"s2\">\"</span> <span class=\"nv\">$manifest_path</span>\n\n    <span class=\"c\">#修改icon地址</span>\n    /usr/libexec/PlistBuddy <span class=\"nt\">-c</span> <span class=\"s2\">\"Set :items:0:assets:1:url </span><span class=\"nv\">$oss_icon_url</span><span class=\"s2\">\"</span> <span class=\"nv\">$manifest_path</span>\n\n    <span class=\"c\">#修改icon full size地址</span>\n    /usr/libexec/PlistBuddy <span class=\"nt\">-c</span> <span class=\"s2\">\"Set :items:0:assets:2:url </span><span class=\"nv\">$oss_icon_fs_url</span><span class=\"s2\">\"</span> <span class=\"nv\">$manifest_path</span>\n\n\n    <span class=\"c\">#传ipa</span>\n    ossutil <span class=\"nb\">cp</span> <span class=\"k\">${</span><span class=\"nv\">IPA_PATH</span><span class=\"k\">}</span> <span class=\"nv\">$oss_ipa_upload_url</span> <span class=\"nt\">-f</span>\n    \n    <span class=\"c\">#传manifest</span>\n    <span class=\"nv\">oss_manifest_extension</span><span class=\"o\">=</span><span class=\"s2\">\"plist\"</span>\n    <span class=\"nv\">oss_manifest_upload_url</span><span class=\"o\">=</span><span class=\"nv\">$oss_path</span><span class=\"s2\">\".\"</span><span class=\"nv\">$oss_manifest_extension</span>\n    <span class=\"nv\">oss_manifest_url</span><span class=\"o\">=</span><span class=\"nv\">$oss_url</span><span class=\"s2\">\".\"</span><span class=\"nv\">$oss_manifest_extension</span>\n    ossutil <span class=\"nb\">cp</span> <span class=\"k\">${</span><span class=\"nv\">manifest_path</span><span class=\"k\">}</span> <span class=\"nv\">$oss_manifest_upload_url</span> <span class=\"nt\">-f</span>\n    \n    <span class=\"c\">#上述做归档后，生成下载二维码</span>\n    <span class=\"nv\">download_url</span><span class=\"o\">=</span><span class=\"s2\">\"itms-services://?action=download-manifest&amp;url=\"</span><span class=\"nv\">$oss_manifest_url</span>\n    <span class=\"nv\">qrcode_path</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">exportPath</span><span class=\"k\">}</span>/<span class=\"k\">${</span><span class=\"nv\">TARGET_NAME</span><span class=\"k\">}</span>_<span class=\"k\">${</span><span class=\"nv\">BuildNo</span><span class=\"k\">}</span>.png\n    \n    <span class=\"c\">#TODO: 这里需要安装下工具 qrencode [brew install qrencode]</span>\n    bash <span class=\"nv\">$build_ext_path</span>/build_tools/build_tools.sh <span class=\"s2\">\"qrencode\"</span>\n\n    qrencode <span class=\"nt\">-o</span> <span class=\"nv\">$qrcode_path</span> <span class=\"nv\">$download_url</span>\n    \n    <span class=\"c\">#将二维码上传到oss</span>\n    <span class=\"nv\">oss_qrencode_extension</span><span class=\"o\">=</span><span class=\"s2\">\"png\"</span>\n    <span class=\"nv\">oss_qrencode_upload_url</span><span class=\"o\">=</span><span class=\"nv\">$oss_path</span><span class=\"s2\">\".\"</span><span class=\"nv\">$oss_qrencode_extension</span>\n    <span class=\"nv\">qrcode_path_with_msg</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span>_with_msg\n        \n    <span class=\"c\">#如果需要二维码打上log信息则调用</span>\n    <span class=\"nv\">need_msg</span><span class=\"o\">=</span>1\n    add_log_commit_title_msg_to_qrcode <span class=\"nv\">$need_msg</span>\n        \n    <span class=\"c\">#上传到阿里云oss</span>\n    ossutil <span class=\"nb\">cp</span> <span class=\"k\">${</span><span class=\"nv\">qrcode_path_with_msg</span><span class=\"k\">}</span> <span class=\"nv\">$oss_qrencode_upload_url</span> <span class=\"nt\">-f</span>\n    \n    <span class=\"c\">#二维码的url 通知出来</span>\n    <span class=\"nb\">export </span><span class=\"nv\">oss_app_download_qrcode_url</span><span class=\"o\">=</span><span class=\"nv\">$oss_url</span><span class=\"s2\">\".\"</span><span class=\"nv\">$oss_qrencode_extension</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'/// oss 分发： 二维码的oss_app_download_qrcode_url='</span><span class=\"k\">${</span><span class=\"nv\">oss_app_download_qrcode_url</span><span class=\"k\">}</span>\n<span class=\"o\">}</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<ul>\n  <li><strong>TestFlight</strong></li>\n</ul>\n\n<p>​\t打灰度包将执行ipa上传到AppStore后台的操作（服务端环境是正式环境，未来有外网的灰度需求可改成灰度环境）</p>\n\n<ul>\n  <li><strong>Release</strong></li>\n</ul>\n\n<p>​\t打正式包将执行ipa上传到AppStore后台的操作（服务端环境是正式环境）</p>\n\n<ul>\n  <li><strong>TFinner</strong></li>\n</ul>\n\n<p>​\t打灰度包给没有添加测试设备的同事下载，解决100设备不够用（带Debug模式、可切换环境、上传到AppStore）</p>\n\n<p>AppStore分发：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#发布到AppStore</span>\n<span class=\"k\">function </span>upload_ipa_to_AppStore <span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'/// 上传App Store 开始'</span>\n    xcrun altool <span class=\"nt\">--validate-app</span> <span class=\"nt\">-f</span>  <span class=\"nv\">$IPA_PATH</span> <span class=\"nt\">--type</span>  ios  <span class=\"nt\">--apiKey</span> <span class=\"nv\">$appStore_apikey</span> <span class=\"nt\">--apiIssuer</span> <span class=\"nv\">$appStore_apiIssuer</span>\n    xcrun altool <span class=\"nt\">--upload-app</span> <span class=\"nt\">-f</span>  <span class=\"nv\">$IPA_PATH</span> <span class=\"nt\">--type</span>  ios  <span class=\"nt\">--apiKey</span> <span class=\"nv\">$appStore_apikey</span> <span class=\"nt\">--apiIssuer</span> <span class=\"nv\">$appStore_apiIssuer</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'/// 上传App Store 结束'</span>\n<span class=\"o\">}</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h4 id=\"232-通知\">2.3.2 通知</h4>\n\n<p>​\t通知模块目前通过钉钉通知，未来也可改成邮件甚至其他方式，考量亦是如此。通知实现内容可定制，当参数notify不为空，才需要通知测试团队进行更新：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n</pre></td><td class=\"rouge-code\"><pre> <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$notify</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then</span>\n        <span class=\"c\"># 空，不发通知</span>\n        <span class=\"nb\">echo</span> <span class=\"s1\">'/// 本次打包静默，不发通知 '</span>\n <span class=\"k\">else</span>\n    ....\n <span class=\"k\">fi</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>​\t通知通过 build_notification.sh 实现如下逻辑：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#构建通知</span>\n<span class=\"k\">function </span>notification<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"nv\">param</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$param</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">echo</span> <span class=\"s1\">'///构建通知（参数为空）'</span>\n        notify\n    <span class=\"k\">else\n        </span><span class=\"nb\">echo</span> <span class=\"s1\">'///构建通知（参数不为空）：'</span><span class=\"nv\">$param</span>\n        <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">param</span><span class=\"k\">}</span><span class=\"s2\">\"</span> <span class=\"o\">=</span> <span class=\"s2\">\"AppStore\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n            </span><span class=\"nb\">echo</span> <span class=\"s1\">'///构建通知AppStore'</span>\n            notify_AppStore\n        <span class=\"k\">else\n            </span><span class=\"nb\">echo</span> <span class=\"s1\">'///构建异常（参数:）'</span><span class=\"nv\">$param</span>\n            notify_fail <span class=\"nv\">$param</span>\n        <span class=\"k\">fi\n    fi</span>\n\n<span class=\"o\">}</span>\n\n<span class=\"nb\">echo</span> <span class=\"s1\">'///构建通知（'</span><span class=\"nv\">$1</span><span class=\"s1\">')'</span>\n\n<span class=\"c\">#通知</span>\nnotification <span class=\"nv\">$1</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>通知兼容蒲公英下载地址 + oss下载地址：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#执行通知逻辑</span>\n<span class=\"k\">function </span>notify<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"nv\">modify_msg</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">git_log</span><span class=\"k\">}</span>\n    <span class=\"nv\">ProductName</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">xcodeProductName</span><span class=\"k\">}</span>\n    <span class=\"nv\">downloadPrefix</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">PrefixID</span><span class=\"k\">}</span>\n    <span class=\"nv\">channel</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">channel_name</span><span class=\"k\">}</span>\n    <span class=\"nv\">title</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">buildName</span><span class=\"k\">}</span>\n    \n    <span class=\"nv\">app_donwnload_url</span><span class=\"o\">=</span><span class=\"s2\">\"\"</span>\n    <span class=\"nv\">pgy_app_donwnload_url</span><span class=\"o\">=</span><span class=\"s2\">\"\"</span>\n    <span class=\"c\">#启用传pgy</span>\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">use_pgy_publish</span><span class=\"k\">}</span><span class=\"s2\">\"</span> <span class=\"o\">=</span> <span class=\"s2\">\"1\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then</span>\n        <span class=\"c\">#采用直接 拼 channel后缀</span>\n        <span class=\"nv\">shortUrl</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">downloadPrefix</span><span class=\"k\">}${</span><span class=\"nv\">ProductName</span><span class=\"k\">}${</span><span class=\"nv\">channel</span><span class=\"k\">}</span>\n\n\n        <span class=\"nv\">pgy_app_donwnload_url</span><span class=\"o\">=</span><span class=\"s2\">\"https://www.xcxwo.com/</span><span class=\"k\">${</span><span class=\"nv\">shortUrl</span><span class=\"k\">}</span><span class=\"s2\">\"</span>\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"short_download_url = \"</span><span class=\"nv\">$short_download_url</span>\n        <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$short_download_url</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n            </span><span class=\"nv\">app_donwnload_url</span><span class=\"o\">=</span><span class=\"nv\">$pgy_app_donwnload_url</span>\n        <span class=\"k\">else\n            </span><span class=\"nv\">app_donwnload_url</span><span class=\"o\">=</span><span class=\"nv\">$short_download_url</span>\n        <span class=\"k\">fi</span>\n        <span class=\"c\">#蒲公英下载地址</span>\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"通知：蒲公英分发，下载地址：'</span><span class=\"k\">${</span><span class=\"nv\">app_donwnload_url</span><span class=\"k\">}</span><span class=\"s2\">'\"</span>\n    <span class=\"k\">fi</span>\n    \n    \n    <span class=\"c\">#启用传oss</span>\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">use_oss_publish</span><span class=\"k\">}</span><span class=\"s2\">\"</span> <span class=\"o\">=</span> <span class=\"s2\">\"1\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$oss_app_download_qrcode_url</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then</span>\n            <span class=\"c\">#oss下载地址为空</span>\n            <span class=\"nb\">echo</span> <span class=\"s2\">\"通知：oss_app_download_qrcode_url 为空则 下载地址：'</span><span class=\"k\">${</span><span class=\"nv\">app_donwnload_url</span><span class=\"k\">}</span><span class=\"s2\">'\"</span>\n        <span class=\"k\">else\n            </span><span class=\"nb\">echo</span> <span class=\"s2\">\"通知：oss_app_download_qrcode_url 不为空 下载地址：'</span><span class=\"k\">${</span><span class=\"nv\">app_donwnload_url</span><span class=\"k\">}</span><span class=\"s2\">' and '</span><span class=\"nv\">$oss_app_download_qrcode_url</span><span class=\"s2\">'\"</span>\n            <span class=\"nv\">app_donwnload_url</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">pgy_app_donwnload_url</span><span class=\"k\">}</span><span class=\"s1\">'\\n\\n'</span>oss下载地址:<span class=\"nv\">$oss_app_download_qrcode_url</span>\n\n        <span class=\"k\">fi\n    fi\n    \n    </span><span class=\"nb\">echo</span> <span class=\"s2\">\"通知 COME下载地址：'</span><span class=\"k\">${</span><span class=\"nv\">app_donwnload_url</span><span class=\"k\">}</span><span class=\"s2\">'\"</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"通知 内容：'\"\"'</span><span class=\"k\">${</span><span class=\"nv\">ProductName</span><span class=\"k\">}</span><span class=\"s2\">' App更新：'</span><span class=\"k\">${</span><span class=\"nv\">title</span><span class=\"k\">}</span><span class=\"s2\">'</span><span class=\"se\">\\n</span><span class=\"s2\">'</span><span class=\"k\">${</span><span class=\"nv\">modify_msg</span><span class=\"k\">}</span><span class=\"s2\">'</span><span class=\"se\">\\n</span><span class=\"s2\">下载地址：'</span><span class=\"k\">${</span><span class=\"nv\">app_donwnload_url</span><span class=\"k\">}</span><span class=\"s2\">'\"</span>\n    \n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">notify</span><span class=\"k\">}</span><span class=\"s2\">\"</span> <span class=\"o\">=</span> <span class=\"s2\">\"1\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">echo</span> <span class=\"s1\">'/// 本次打发通知到群里 '</span>\n    <span class=\"k\">elif</span> <span class=\"o\">[</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">notify</span><span class=\"k\">}</span><span class=\"s2\">\"</span> <span class=\"o\">=</span> <span class=\"s2\">\"2\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">echo</span> <span class=\"s1\">'/// 本次打发通知到内部群里 '</span>\n        <span class=\"nv\">access_token</span><span class=\"o\">=</span><span class=\"nv\">$internal_access_token</span>\n    <span class=\"k\">else\n        </span><span class=\"nb\">echo</span> <span class=\"s1\">'/// 本次打发通知参数'</span><span class=\"k\">${</span><span class=\"nv\">notify</span><span class=\"k\">}</span>\n    <span class=\"k\">fi\n    \n    if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$notify</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then</span>\n        <span class=\"c\"># 空，不发通知</span>\n        <span class=\"nb\">echo</span> <span class=\"s1\">'/// 本次打包静默，不发通知 '</span>\n\n    <span class=\"k\">else\n        </span><span class=\"nb\">echo</span> <span class=\"s1\">'/// 本次打包发通知 '</span>\n        <span class=\"c\">#发送发版通知</span>\n        curl <span class=\"s1\">'https://oapi.dingtalk.com/robot/send?access_token='</span><span class=\"k\">${</span><span class=\"nv\">access_token</span><span class=\"k\">}</span> <span class=\"se\">\\</span>\n            <span class=\"nt\">-H</span> <span class=\"s1\">'Content-Type: application/json'</span> <span class=\"se\">\\</span>\n            <span class=\"nt\">-d</span> <span class=\"s1\">'{\"msgtype\": \"text\",\n                \"at\": {\n                \"atMobiles\":[\n                    \"xx1\"\n                    \"xx2\"\n                    \"xx3\"\n                    \"xx4\"\n                    \"xx5\"\n                    \"xx6\"\n                    \"xx7\"\n                ],\n                \"isAtAll\": false\n                },\n                 \"text\": {\n                      \"content\": \"'</span><span class=\"k\">${</span><span class=\"nv\">ProductName</span><span class=\"k\">}</span><span class=\"s1\">' App更新：'</span><span class=\"k\">${</span><span class=\"nv\">title</span><span class=\"k\">}</span><span class=\"s1\">'\\n'</span><span class=\"k\">${</span><span class=\"nv\">modify_msg</span><span class=\"k\">}</span><span class=\"s1\">'\\n下载地址：'</span><span class=\"k\">${</span><span class=\"nv\">app_donwnload_url</span><span class=\"k\">}</span><span class=\"s1\">'\"            }\n               }'</span>\n               \n               \n        <span class=\"nb\">echo</span> <span class=\"s1\">'///-------------------------------------------------------'</span>\n        <span class=\"nb\">echo</span> <span class=\"s1\">'/// 通知Come3 '</span>\n        <span class=\"nb\">echo</span> <span class=\"s1\">'///-------------------------------------------------------'</span>\n    <span class=\"k\">fi</span>\n\n<span class=\"o\">}</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>​\t构建失败通知：</p>\n\n<div class=\"language-sh highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#打包出错时通知</span>\n<span class=\"k\">function </span>notify_fail<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"c\">#发布到移动端内部群</span>\n    <span class=\"nv\">access_token</span><span class=\"o\">=</span><span class=\"nv\">$internal_access_token</span>\n    <span class=\"c\">#产物</span>\n    <span class=\"nv\">ProductName</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">xcodeProductName</span><span class=\"k\">}</span>\n    <span class=\"c\">#渠道名</span>\n    <span class=\"nv\">channel</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">channel_name</span><span class=\"k\">}</span>\n    <span class=\"c\">#流水线名称</span>\n    <span class=\"nv\">title</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">buildName</span><span class=\"k\">}</span>\n    \n    <span class=\"c\">#失败原因</span>\n    <span class=\"nv\">reson</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n    \n    <span class=\"nb\">echo</span> <span class=\"s1\">'/// 本次打包异常：发通知到内部群 '</span>\n    <span class=\"c\">#发送发版通知</span>\n    curl <span class=\"s1\">'https://oapi.dingtalk.com/robot/send?access_token='</span><span class=\"k\">${</span><span class=\"nv\">access_token</span><span class=\"k\">}</span> <span class=\"se\">\\</span>\n        <span class=\"nt\">-H</span> <span class=\"s1\">'Content-Type: application/json'</span> <span class=\"se\">\\</span>\n        <span class=\"nt\">-d</span> <span class=\"s1\">'{\"msgtype\": \"text\",\n            \"at\": {\n            \"atMobiles\":[\n                \"DD1\",\n                \"DD2\"\n            ],\n            \"isAtAll\": false\n            },\n             \"text\": {\n                  \"content\": \"❌构建失败:\\nApp:'</span><span class=\"k\">${</span><span class=\"nv\">ProductName</span><span class=\"k\">}</span><span class=\"s1\">'\\n原  因：'</span><span class=\"k\">${</span><span class=\"nv\">reson</span><span class=\"k\">}</span><span class=\"s1\">'\\n流水线：'</span><span class=\"k\">${</span><span class=\"nv\">title</span><span class=\"k\">}</span><span class=\"s1\">'\\n渠  道：'</span><span class=\"k\">${</span><span class=\"nv\">buildName</span><span class=\"k\">}</span><span class=\"s1\">'\"}\n           }'</span>\n           \n           \n    <span class=\"nb\">echo</span> <span class=\"s1\">'///-------------------------------------------------------'</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'/// 构建通知'</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'///-------------------------------------------------------'</span>\n<span class=\"o\">}</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>构建到AppStore时需要测试团队对上线进行验证：也发送下通知</p>\n\n<div class=\"language-sh highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#打包AppStore通知，通知到群给出TestFlight下载链接二维码</span>\n<span class=\"k\">function </span>notify_AppStore<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"c\">#发布到移动端内部群</span>\n    <span class=\"nv\">access_token</span><span class=\"o\">=</span><span class=\"nv\">$internal_access_token</span>\n    <span class=\"c\">#产物</span>\n    <span class=\"nv\">ProductName</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">xcodeProductName</span><span class=\"k\">}</span>\n    <span class=\"c\">#渠道名</span>\n    <span class=\"nv\">channel</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">channel_name</span><span class=\"k\">}</span>\n    <span class=\"c\">#流水线名称</span>\n    <span class=\"nv\">title</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">buildName</span><span class=\"k\">}</span>\n    \n    <span class=\"c\">#testFlight 二维码in OSS</span>\n    <span class=\"nv\">downloadTF</span><span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">aliyunOSSBuicket</span><span class=\"k\">}</span><span class=\"s2\">/AppStoreValid/testflight.png\"</span>\n    \n    <span class=\"nb\">echo</span> <span class=\"s1\">'/// 本次打包构建到AppStore：发通知到内部群 '</span>\n    <span class=\"c\">#发送发版通知</span>\n    curl <span class=\"s1\">'https://oapi.dingtalk.com/robot/send?access_token='</span><span class=\"k\">${</span><span class=\"nv\">access_token</span><span class=\"k\">}</span> <span class=\"se\">\\</span>\n        <span class=\"nt\">-H</span> <span class=\"s1\">'Content-Type: application/json'</span> <span class=\"se\">\\</span>\n        <span class=\"nt\">-d</span> <span class=\"s1\">'{\"msgtype\": \"text\",\n            \"at\": {\n            \"atMobiles\":[\n                \"DD1\",\n                \"DD2\"\n            ],\n            \"isAtAll\": false\n            },\n             \"text\": {\n                  \"content\": \"✅AppSore构建成功:\\nApp:'</span><span class=\"k\">${</span><span class=\"nv\">ProductName</span><span class=\"k\">}</span><span class=\"s1\">'\\n构建名：'</span><span class=\"k\">${</span><span class=\"nv\">configurationName</span><span class=\"k\">}</span><span class=\"s1\">'\\n流水线：'</span><span class=\"k\">${</span><span class=\"nv\">title</span><span class=\"k\">}</span><span class=\"s1\">'\\n版本号：'</span><span class=\"k\">${</span><span class=\"nv\">xcodeVersion3number</span><span class=\"k\">}</span><span class=\"s1\">'\\n构建号：'</span><span class=\"k\">${</span><span class=\"nv\">BuildNo</span><span class=\"k\">}</span><span class=\"s1\">'\\nTestFlight:'</span><span class=\"k\">${</span><span class=\"nv\">downloadTF</span><span class=\"k\">}</span><span class=\"s1\">'\"}\n           }'</span>\n           \n           \n    <span class=\"nb\">echo</span> <span class=\"s1\">'///-------------------------------------------------------'</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'/// 构建通知'</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'///-------------------------------------------------------'</span>\n<span class=\"o\">}</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h4 id=\"233-归档\">2.3.3 归档</h4>\n\n<p>​\t目前在Release、TestFlight 打包时将ipa与dysm打包上传到简单云制品库</p>\n\n<p>​\t构建归档，将ipa与dysm打程zip包</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n</pre></td><td class=\"rouge-code\"><pre><span class=\"k\">function </span>ProductCollection<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">configurationName</span><span class=\"k\">}</span><span class=\"s2\">\"</span> <span class=\"o\">=</span> <span class=\"s2\">\"Release\"</span> <span class=\"o\">]</span> <span class=\"o\">||</span> <span class=\"o\">[</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">configurationName</span><span class=\"k\">}</span><span class=\"s2\">\"</span> <span class=\"o\">=</span> <span class=\"s2\">\"TestFlight\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n\n        </span>dSYMCollection\n    \n        IPACollection\n        \n        <span class=\"nb\">export </span><span class=\"nv\">ProductCollectionPath</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">dSYM_dict_PATH</span><span class=\"k\">}</span>/ProductCollection.zip\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"ProductCollectionPath=\"</span><span class=\"nv\">$ProductCollectionPath</span>\n        zip <span class=\"nv\">$ProductCollectionPath</span> <span class=\"k\">${</span><span class=\"nv\">dSYMZip_PATH</span><span class=\"k\">}</span> <span class=\"k\">${</span><span class=\"nv\">IPAZip_PATH</span><span class=\"k\">}</span>\n        <span class=\"c\">#执行归档,(ipa+dSYM)并找个地方存起来</span>\n        bash <span class=\"nv\">$build_ext_path</span>/<span class=\"nv\">$collection_sh</span>\n    <span class=\"k\">fi</span>\n\n<span class=\"o\">}</span>\n\n<span class=\"k\">function </span>dSYMCollection<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"c\"># zip and copy dSYM</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"dSYMCollection\"</span>\n\n    <span class=\"nb\">cd</span> <span class=\"k\">${</span><span class=\"nv\">build_path</span><span class=\"k\">}</span>/Build/Products/<span class=\"k\">${</span><span class=\"nv\">configurationName</span><span class=\"k\">}</span><span class=\"nt\">-iphoneos</span>\n    find <span class=\"nb\">.</span> <span class=\"nt\">-name</span> <span class=\"s1\">'*.dSYM'</span> | zip <span class=\"nt\">-r</span> <span class=\"k\">${</span><span class=\"nv\">dSYMZip_PATH</span><span class=\"k\">}</span> -@\n    find <span class=\"nb\">.</span> <span class=\"nt\">-name</span> <span class=\"s1\">'*.dSYM'</span> <span class=\"nt\">-exec</span> <span class=\"nb\">cp</span> <span class=\"nt\">-R</span> <span class=\"o\">{}</span> <span class=\"k\">${</span><span class=\"nv\">dSYM_dict_PATH</span><span class=\"k\">}</span> <span class=\"se\">\\;</span>\n    <span class=\"nb\">cd</span> -\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"Copy dSYM.zip file success save path:\"</span> <span class=\"k\">${</span><span class=\"nv\">dSYMZip_PATH</span><span class=\"k\">}</span>\n<span class=\"o\">}</span>\n\n<span class=\"k\">function </span>IPACollection<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"c\"># zip and copy dSYM</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"IPACollection\"</span>\n    <span class=\"nb\">cd</span> <span class=\"k\">${</span><span class=\"nv\">build_path</span><span class=\"k\">}</span>/Build/Products/<span class=\"k\">${</span><span class=\"nv\">configurationName</span><span class=\"k\">}</span><span class=\"nt\">-iphoneos</span>\n    find <span class=\"nb\">.</span> <span class=\"nt\">-name</span> <span class=\"s1\">'*.ipa'</span> | zip <span class=\"nt\">-r</span> <span class=\"k\">${</span><span class=\"nv\">IPAZip_PATH</span><span class=\"k\">}</span> -@\n    find <span class=\"nb\">.</span> <span class=\"nt\">-name</span> <span class=\"s1\">'*.ipa'</span> <span class=\"nt\">-exec</span> <span class=\"nb\">cp</span> <span class=\"nt\">-R</span> <span class=\"o\">{}</span> <span class=\"k\">${</span><span class=\"nv\">dSYM_dict_PATH</span><span class=\"k\">}</span> <span class=\"se\">\\;</span>\n    <span class=\"nb\">cd</span> -\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"Copy IPAZip_PATH.zip file success save path:\"</span> <span class=\"k\">${</span><span class=\"nv\">IPAZip_PATH</span><span class=\"k\">}</span>\n<span class=\"o\">}</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>​\t将zip包归档到简单云</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n</pre></td><td class=\"rouge-code\"><pre><span class=\"k\">function </span>upload_to_store<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"nb\">export </span><span class=\"nv\">p</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'/// 上传 dsym ipa 到制品库 '</span><span class=\"k\">${</span><span class=\"nv\">v</span><span class=\"k\">}</span><span class=\"s1\">'pkgName='</span><span class=\"k\">${</span><span class=\"nv\">pkgName</span><span class=\"k\">}</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"dSYMZip_PATH = \"</span><span class=\"k\">${</span><span class=\"nv\">dSYMZip_PATH</span><span class=\"k\">}</span><span class=\"s2\">\"https://PSC-devops.com/pkg/PSC/raw/OperationsAppAnddSYM/release?version=\"</span><span class=\"k\">${</span><span class=\"nv\">v</span><span class=\"k\">}</span><span class=\"s2\">\"&amp;pkgName=\"</span><span class=\"k\">${</span><span class=\"nv\">pkgName</span><span class=\"k\">}</span>\n    <span class=\"c\">#上传简单云制品库</span>\n    curl <span class=\"nt\">-F</span> <span class=\"s2\">\"file=@\"</span><span class=\"k\">${</span><span class=\"nv\">p</span><span class=\"k\">}</span> <span class=\"nt\">-u</span> 简单云账号:简单云密码 <span class=\"s2\">\"https://PSC-devops.com/pkg/PSC/raw/OperationsAppAnddSYM/release?version=\"</span><span class=\"k\">${</span><span class=\"nv\">v</span><span class=\"k\">}</span><span class=\"s2\">\"&amp;pkgName=\"</span><span class=\"k\">${</span><span class=\"nv\">pkgName</span><span class=\"k\">}</span> <span class=\"nt\">-k</span>\n<span class=\"o\">}</span>\n        \n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>​\t将dSYM上传到bugly，用于定位线上crash：</p>\n\n<div class=\"language-sh highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n</pre></td><td class=\"rouge-code\"><pre><span class=\"k\">function </span>upload_dSYM_to_bugly<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"nb\">export </span><span class=\"nv\">p</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">dSYM_dict_PATH</span><span class=\"k\">}</span>\n    \n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">TARGET_NAME</span><span class=\"k\">}</span><span class=\"s2\">\"</span> <span class=\"o\">=</span> <span class=\"s2\">\"PSCDemoiOS\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nv\">bugly_appid</span><span class=\"o\">=</span><span class=\"nv\">$Demo_bugly_appid</span>\n        <span class=\"nv\">bugly_appkey</span><span class=\"o\">=</span><span class=\"nv\">$Demo_bugly_appkey</span>\n    <span class=\"k\">fi\n    \n    if</span> <span class=\"o\">[</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">TARGET_NAME</span><span class=\"k\">}</span><span class=\"s2\">\"</span> <span class=\"o\">=</span> <span class=\"s2\">\"Operations\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nv\">bugly_appid</span><span class=\"o\">=</span><span class=\"nv\">$operations_bugly_appid</span>\n        <span class=\"nv\">bugly_appkey</span><span class=\"o\">=</span><span class=\"nv\">$operations_bugly_appkey</span>\n    <span class=\"k\">fi\n    \n    </span><span class=\"nb\">echo</span> <span class=\"s2\">\"/// 上传 dsym path </span><span class=\"k\">${</span><span class=\"nv\">p</span><span class=\"k\">}</span><span class=\"s2\">\"</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"/// 上传 dsym target </span><span class=\"k\">${</span><span class=\"nv\">TARGET_NAME</span><span class=\"k\">}</span><span class=\"s2\">\"</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"/// 上传 dsym bugly_appid </span><span class=\"k\">${</span><span class=\"nv\">bugly_appid</span><span class=\"k\">}</span><span class=\"s2\">\"</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"/// 上传 dsym bugly_appkey </span><span class=\"k\">${</span><span class=\"nv\">bugly_appkey</span><span class=\"k\">}</span><span class=\"s2\">\"</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'/// 上传 dsym bugly '</span><span class=\"k\">${</span><span class=\"nv\">versionName</span><span class=\"k\">}</span><span class=\"s1\">'pkgName='</span><span class=\"k\">${</span><span class=\"nv\">pkgName</span><span class=\"k\">}</span>\n    \n    <span class=\"c\">#切换java 版本在流水线实现，这边实现不了</span>\n    java <span class=\"nt\">-version</span>\n<span class=\"c\">#    jdk8</span>\n<span class=\"c\">#    java -version</span>\n    \n    <span class=\"nv\">bugly_jar_path</span><span class=\"o\">=</span><span class=\"nv\">$build_ext_path</span>/collection_res/buglyqq-upload-symbol/buglyqq-upload-symbol.jar\n    \n    java <span class=\"nt\">-jar</span> <span class=\"k\">${</span><span class=\"nv\">bugly_jar_path</span><span class=\"k\">}</span> <span class=\"nt\">-appid</span> <span class=\"k\">${</span><span class=\"nv\">bugly_appid</span><span class=\"k\">}</span> <span class=\"nt\">-appkey</span> <span class=\"k\">${</span><span class=\"nv\">bugly_appkey</span><span class=\"k\">}</span> <span class=\"nt\">-bundleid</span> <span class=\"k\">${</span><span class=\"nv\">pkgName</span><span class=\"k\">}</span> <span class=\"nt\">-version</span> <span class=\"k\">${</span><span class=\"nv\">versionName</span><span class=\"k\">}</span> <span class=\"nt\">-platform</span> IOS <span class=\"nt\">-inputSymbol</span> <span class=\"k\">${</span><span class=\"nv\">p</span><span class=\"k\">}</span>\n<span class=\"o\">}</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h2 id=\"3补充说明\">3.补充说明</h2>\n\n<p>​\t打包脚本抽离成git submodule，以供各个工程项目的集成，减少维护成本，如果没有跟主工程一起更新，则每次构建时需要同步下最新的脚本</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#使用了gitsubmodule 构建组件，兼容git 检出不兼容，需要先执行 git submodule update --init --recursive</span>\ngit submodule update <span class=\"nt\">--init</span> <span class=\"nt\">--recursive</span>\n<span class=\"c\">#拉取自模块更新</span>\ngit submodule update <span class=\"nt\">--remote</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h2 id=\"4author\">4.Author</h2>\n\n<p>​\t有任何问题，欢迎联系：wangshu2015@gmail.com</p>\n\n","name":"2023-11-08-构建流水线实践.md","previous":{"id":"/2023/10/07/抓包实践","tags":[],"relative_path":"_posts/2023-10-09-抓包实践.md","collection":"posts","name":"2023-10-09-抓包实践.md","url":"/2023/10/07/%E6%8A%93%E5%8C%85%E5%AE%9E%E8%B7%B5/","title":"Charles HTTPS实践","date":"2023-10-07 00:00:00 +0800","categories":[],"path":"_posts/2023-10-09-抓包实践.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/home-bg-geek.jpg","slug":"抓包实践","ext":".md"},"output":"<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"google-site-verification\" content=\"xBT4GhYoi5qRD5tr338pgPM5OWHHIDR6mNg1a3euekI\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, viewport-fit=cover\">\n    <meta name=\"description\" content=\"与你一起发现更大的世界。\">\n    <meta name=\"keywords\"  content=\"PaysonChen,iOS,流媒体\">\n    <meta name=\"theme-color\" content=\"#000000\">\n    \n    <!-- Open Graph -->\n    <meta property=\"og:title\" content=\"构建流水线实践 - PaysonChen的博客 | PaysonChen Blog\">\n    \n    <meta property=\"og:type\" content=\"article\">\n    <meta property=\"og:description\" content=\"1 背景\n\">\n    \n    <script type=\"text/javascript\"\n  src=\"https://unpkg.com/mermaid@8.0.0-rc.8/dist/mermaid.min.js\">\n</script>\n<script>\n$(document).ready(function() {\n    mermaid.initialize({\n        theme: 'forest'\n    });\n});\n</script>\n    \n    \n    <meta property=\"article:published_time\" content=\"2023-11-08T00:00:00Z\">\n    \n    \n    <meta property=\"article:author\" content=\"PaysonChen\">\n    \n    \n    \n    <meta property=\"og:image\" content=\"http://localhost:4000\">\n    <meta property=\"og:url\" content=\"http://localhost:4000/2023/11/08/%E6%9E%84%E5%BB%BA%E6%B5%81%E6%B0%B4%E7%BA%BF%E5%AE%9E%E8%B7%B5/\">\n    <meta property=\"og:site_name\" content=\"PaysonChen的博客 | PaysonChen Blog\">\n    \n    <title>构建流水线实践 - PaysonChen的博客 | PaysonChen Blog</title>\n\n    <!-- Web App Manifest -->\n    <link rel=\"manifest\" href=\"/pwa/manifest.json\">\n\n    <!-- Favicon -->\n    <link rel=\"shortcut icon\" href=\"/img/favicon.ico\">\n    \n    <!-- Canonical URL -->\n    <link rel=\"canonical\" href=\"http://localhost:4000/2023/11/08/%E6%9E%84%E5%BB%BA%E6%B5%81%E6%B0%B4%E7%BA%BF%E5%AE%9E%E8%B7%B5/\">\n\n    <!-- Bootstrap Core CSS -->\n    <link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\">\n\n    <!-- Custom CSS -->\n    <link rel=\"stylesheet\" href=\"/css/hux-blog.min.css\">\n\n    <!-- Custom Fonts -->\n    <!-- <link href=\"http://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\"> -->\n    <!-- Hux change font-awesome CDN to qiniu -->\n    <link href=\"//cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\">\n\n\n    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->\n    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->\n    <!--[if lt IE 9]>\n        <script src=\"https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js\"></script>\n        <script src=\"https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js\"></script>\n    <![endif]-->\n\n    <!-- ga & ba script hoook -->\n    <script></script>\n</head>\n\n\n<!-- hack iOS CSS :active style -->\n<body ontouchstart=\"\">\n\n    <!-- Navigation -->\n\n    <nav class=\"navbar navbar-default navbar-custom navbar-fixed-top\">\n        \n        <div class=\"container-fluid\">\n            <!-- Brand and toggle get grouped for better mobile display -->\n            <div class=\"navbar-header page-scroll\">\n                <button type=\"button\" class=\"navbar-toggle\">\n                    <span class=\"sr-only\">Toggle navigation</span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                </button>\n                <a class=\"navbar-brand\" href=\"/\">PaysonChen Blog</a>\n            </div>\n\n            <!-- Collect the nav links, forms, and other content for toggling -->\n            <div id=\"huxblog_navbar\">\n                <div class=\"navbar-collapse\">\n                    <ul class=\"nav navbar-nav navbar-right\">\n                        <li>\n                            <a href=\"/\">Home</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        <li>\n                            <a href=\"/about/\">About</a>\n                        </li>\n                        \n                        \n                        \n                        <li>\n                            <a href=\"/archive/\">Archive</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        <li class=\"search-icon\">\n                            <a href=\"javascript:void(0)\">\n                                <i class=\"fa fa-search\"></i>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n            <!-- /.navbar-collapse -->\n        </div>\n        <!-- /.container -->\n    </nav>\n\n    <script>\n        // Drop Bootstarp low-performance Navbar\n        // Use customize navbar with high-quality material design animation\n        // in high-perf jank-free CSS3 implementation\n        var $body = document.body;\n        var $toggle = document.querySelector('.navbar-toggle');\n        var $navbar = document.querySelector('#huxblog_navbar');\n        var $collapse = document.querySelector('.navbar-collapse');\n\n        var __HuxNav__ = {\n            close: function () {\n                $navbar.className = \" \";\n                // wait until animation end.\n                setTimeout(function () {\n                    // prevent frequently toggle\n                    if ($navbar.className.indexOf('in') < 0) {\n                        $collapse.style.height = \"0px\"\n                    }\n                }, 400)\n            },\n            open: function () {\n                $collapse.style.height = \"auto\"\n                $navbar.className += \" in\";\n            }\n        }\n\n        // Bind Event\n        $toggle.addEventListener('click', function (e) {\n            if ($navbar.className.indexOf('in') > 0) {\n                __HuxNav__.close()\n            } else {\n                __HuxNav__.open()\n            }\n        })\n\n        /**\n         * Since Fastclick is used to delegate 'touchstart' globally\n         * to hack 300ms delay in iOS by performing a fake 'click',\n         * Using 'e.stopPropagation' to stop 'touchstart' event from \n         * $toggle/$collapse will break global delegation.\n         * \n         * Instead, we use a 'e.target' filter to prevent handler\n         * added to document close HuxNav.  \n         *\n         * Also, we use 'click' instead of 'touchstart' as compromise\n         */\n        document.addEventListener('click', function (e) {\n            if (e.target == $toggle) return;\n            if (e.target.className == 'icon-bar') return;\n            __HuxNav__.close();\n        })\n    </script>\n    <!-- Search -->\n<div class=\"search-page\">\n  <div class=\"search-icon-close-container\">\n    <span class=\"search-icon-close\">\n      <i class=\"fa fa-chevron-down\"></i>\n    </span>\n  </div>\n  <div class=\"search-main container\">\n    <div class=\"row\">\n      <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n        <form></form>\n        <input type=\"text\" id=\"search-input\" placeholder=\"$ grep...\">\n        </form>\n        <div id=\"search-results\" class=\"mini-post-list\"></div>\n      </div>\n    </div>\n  </div>\n</div>\n\n    <!-- Image to hack wechat -->\n<!-- <img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\"> -->\n<!-- <img src=\"/img/home-bg-geek.jpg\" width=\"0\" height=\"0\"> -->\n\n<!-- Post Header -->\n\n\n\n<style type=\"text/css\">\n    header.intro-header{\n        position: relative;\n        background-image: url('/img/home-bg-geek.jpg');\n        background: ;\n    }\n\n    \n</style>\n\n<header class=\"intro-header\" >\n\n    <div class=\"header-mask\"></div>\n    \n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <div class=\"post-heading\">\n                    <div class=\"tags\">\n                        \n                    </div>\n                    <h1>构建流水线实践</h1>\n                    \n                    <h2 class=\"subheading\"></h2>\n                    <span class=\"meta\">Posted by PaysonChen on November 8, 2023</span>\n                </div>\n            </div>\n        </div>\n    </div>\n</header>\n\n\n\n\n\n\n<!-- Post Content -->\n<article>\n    <div class=\"container\">\n        <div class=\"row\">\n\n    <!-- Post Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                post-container\">\n\n                <!-- Multi-Lingual -->\n                \n\n\t\t\t\t<h2 id=\"1-背景\">1 背景</h2>\n\n<p>​\t为了适应不通项目的自动化的需求，而且构建的方式和能力也在不断的迭代与演进，同时维护多个构建脚本存在成本与遗漏，因此将打包脚本的通用能力抽离，通过配置参数进行不同项目的构建。</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n</pre></td><td class=\"rouge-code\"><pre># [目的]\n# 为了使流水线建设趋于可维护，易维护，可迁移，易迁移，对构建逻辑进行模块化、将构建主流程划分为：构建前、构建、构建后，三大模块\n#\n#   构建前：参数配置、版本号设置\n#   构建中：Pod install、xcbuild\n#   构建后：归档、分发、通知\n#\n# 当前的构建后方案的选择：\n#   归档：简单云（ipa+dSYM）、bugly（dSYM）\n#   分发：蒲公英、阿里云OSS、AppStore\n#   通知：钉钉机器人\n# 在未来的持续集成过程中，可以对归档方案进行替换、对分发方案进行替换、对通知方案进行替换、不需要阅读和改动构建中流程\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h2 id=\"2-开始\">2 开始</h2>\n\n<p>构建脚本由构建入口、构建主流程、额外流程三个模块构成，</p>\n\n<script src=\"js/mermaid.ts\"></script>\n<div class=\"mermaid\">\n\ngraph TB\nSTART--&gt;入参配置\n入参配置--&gt;构建前-第三方APIKEY配置\n构建前-第三方APIKEY配置--&gt;构建前-设置构建版本号自增\n构建前-设置构建版本号自增--&gt;构建前-获取工程配置  \n构建前-获取工程配置--&gt;构建中-环境变量设置\n构建中-环境变量设置--&gt;构建中-执行Pod依赖安装\n构建中-执行Pod依赖安装--&gt;构建中-执行构建\n构建中-执行构建--&gt;构建中-执行归档\n构建中-执行归档--&gt;构建中-执行分发\n构建中-执行分发--&gt;构建中-执行通知\n构建中-执行通知--&gt;END\n\n</div>\n\n<h3 id=\"21-构建入口\">2.1 构建入口</h3>\n\n<p>构建入口由UniversalBuild.sh 执行，负责可变参数声明及脚本入参处理</p>\n\n<p>参数说明：</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n</pre></td><td class=\"rouge-code\"><pre># [参数]\n#   -cfg                #打包方式：configuration(0:DailyBuild|1:TestFlight|2:Release|3:TFInner)\n#   -target_name        #项目配置：要打包的TargetName\n#   -channel_name       #渠道号：pgy下载 url后缀\n#   -notify             #是否启用通知 有传值1则启用群通知，2启用内部群通知\n#   -publish            #分发方式：1 启用oss| 2 启用pgy+oss | else pgy\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>以下以【Demo】为例：</p>\n\n<p>​\tTarget为PSCDemoiOS</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n</pre></td><td class=\"rouge-code\"><pre># [调用说明]\n#   使用了gitsubmodule 构建组件，兼容git 检出不兼容，需要先执行 git submodule update --init --recursive\n#   git submodule update --init --recursive\n#   拉取自模块更新\n#   git submodule update --remote\n#\n#   打包方式：configuration(0:DailyBuild|1:TestFlight|2:Release|3:TFInner)\n#   configuration=0\n#\n#   项目配置（TargetName与源码所在目录需同名）：\n#   targetName=PSCDemoiOS\n#\n#   渠道号：pgy下载 url后缀\n#   pgyChannel=129\n#\n#   是否启用通知 有传值1则启用群通知，2启用内部群通知\n#   notify=1\n#\n#   1 启用oss 2 启用pgy+oss else pgy\n#   publish=0\n#\n#   sh PSC_iOS_Build_SH/UniversalBuild.sh -cfg $configuration -target_name $targetName -channel_name $pgyChannel -notify $notify -publish $publish\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h3 id=\"22-构建主流程\">2.2 构建主流程</h3>\n\n<p>构建主流吃由build_sh.sh 执行，负责iOS构建工作，此部分与打包业务强相关，相对比较稳定，不太需要频繁修改，因此抽离出来</p>\n\n<p>主流程简单说明：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n</pre></td><td class=\"rouge-code\"><pre><span class=\"k\">function </span>build<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"c\">#新增耗时统计</span>\n    <span class=\"nb\">export </span><span class=\"nv\">build_start_time</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">date</span> +%s.%N<span class=\"si\">)</span>\n\n    <span class=\"c\">#初始化环境</span>\n    bInitEnv\n    print_time_cost <span class=\"s2\">\"构建前配置\"</span>\n\n    <span class=\"c\">#执行pod</span>\n    bPodInstall\n    print_time_cost <span class=\"s2\">\"执行pod\"</span>\n\n    <span class=\"c\">#执行构建</span>\n    bBuildProject\n    print_time_cost <span class=\"s2\">\"执行构建\"</span>\n\n    <span class=\"c\">#执行构建后的归档流程：ipa &amp; dsym</span>\n    bCollection\n    print_time_cost <span class=\"s2\">\"执行构建归档操作\"</span>\n\n    <span class=\"c\">#执行构建后的分发流程：上传（发布）安装包，供下载安装</span>\n    bDistribution\n    print_time_cost <span class=\"s2\">\"执行分发操作\"</span>\n\n    <span class=\"c\">#执行构建后的通知流程</span>\n    bNotification\n    print_time_cost <span class=\"s2\">\"执行通知操作\"</span>\n<span class=\"o\">}</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>详细步骤，详见代码相关模块</p>\n\n<h3 id=\"23-额外流程\">2.3 额外流程</h3>\n\n<p>额外流程抽离是考虑到上传、通知、归档等属于打包的后续操作，不需要与打包流程耦合，且这部分的流程抽离，可实现模块的热插拔替换。</p>\n\n<h4 id=\"231-分发\">2.3.1 分发</h4>\n\n<p>​\t目前支持以下三种分法方式：</p>\n\n<ul>\n  <li>蒲公英</li>\n  <li>阿里云OSS</li>\n  <li>AppStore</li>\n</ul>\n\n<p>​\t安装包的分发逻辑调用</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>sh build_ext/build_publish.sh\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>​\t在 build_publish.sh 中执行分发逻辑，</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n</pre></td><td class=\"rouge-code\"><pre><span class=\"k\">function </span>upload_ipa <span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"nb\">export </span><span class=\"nv\">upload_start_time</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">date</span> +%s.%N<span class=\"si\">)</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'///upload_ipa configurationName = '</span><span class=\"k\">${</span><span class=\"nv\">configurationName</span><span class=\"k\">}</span>\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">packedToAppStore</span><span class=\"k\">}</span><span class=\"s2\">\"</span> <span class=\"o\">==</span> <span class=\"s2\">\"1\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">echo</span> <span class=\"s1\">'TFInner 、TestFlight &amp; appstore 上传到appstore 统计耗时'</span>\n        upload_ipa_to_AppStore\n        print_upload_time_cost <span class=\"s2\">\"上传AppStore\"</span>\n\n    <span class=\"k\">else</span>\n        <span class=\"c\">#其他</span>\n        <span class=\"c\">#启用pgy时构建包上传到pgy</span>\n        <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">use_pgy_publish</span><span class=\"k\">}</span><span class=\"s2\">\"</span> <span class=\"o\">=</span> <span class=\"s2\">\"1\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n            </span><span class=\"nb\">echo</span> <span class=\"s1\">'///启用pgy上传，统计耗时'</span>\n            upload_ipa_to_pgyer\n            print_upload_time_cost <span class=\"s2\">\"上传PGY\"</span>\n        <span class=\"k\">fi</span>\n\n        <span class=\"c\">#启用oss</span>\n        <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">use_oss_publish</span><span class=\"k\">}</span><span class=\"s2\">\"</span> <span class=\"o\">=</span> <span class=\"s2\">\"1\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n            </span><span class=\"nb\">echo</span> <span class=\"s1\">'///启用oss上传，统计耗时'</span>\n            upload_ipa_to_aliyunOSS\n            print_upload_time_cost <span class=\"s2\">\"上传oss\"</span>\n        <span class=\"k\">fi\n    fi</span>\n<span class=\"o\">}</span>\n\n\n<span class=\"k\">function </span>upload<span class=\"o\">()</span>\n<span class=\"o\">{</span>   \n    <span class=\"c\">#发布ipa</span>\n    upload_ipa\n<span class=\"o\">}</span>\n\n<span class=\"c\">#归档</span>\nupload\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>​\t上传测试包可以从现在的蒲公英换到Fir或者简单云等，则不需要关心打包流程，只需要将上传模块的方法切换即可。</p>\n\n<ul>\n  <li><strong>dailybuild</strong></li>\n</ul>\n\n<p>​\t蒲公英：</p>\n\n<p>​\t用于测试包构建，安装包目前上传到蒲公英（服务端环境可切换）</p>\n\n<p>​\t上传蒲公英的逻辑：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#发布到第三方分发平台：蒲公英</span>\n<span class=\"k\">function </span>upload_ipa_to_pgyer <span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'/// 上传 PGY 开始 IPA_PATH='</span><span class=\"k\">${</span><span class=\"nv\">IPA_PATH</span><span class=\"k\">}</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'/// 上传 PGY 开始 渠道='</span><span class=\"k\">${</span><span class=\"nv\">channel_name</span><span class=\"k\">}</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'/// 上传 PGY 开始 提交 git_log='</span><span class=\"k\">${</span><span class=\"nv\">git_log</span><span class=\"k\">}</span>\n        \n    <span class=\"nv\">compileEnvironment</span><span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">buildName</span><span class=\"k\">}</span><span class=\"s2\">:</span><span class=\"k\">${</span><span class=\"nv\">git_log</span><span class=\"k\">}</span><span class=\"s2\">\"</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'/// 上传 PGY 开始 内容='</span><span class=\"k\">${</span><span class=\"nv\">compileEnvironment</span><span class=\"k\">}</span>\n\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$channel_name</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then</span>\n        <span class=\"c\"># 渠道空，则走默认 不指定渠道号的上传</span>\n        <span class=\"c\"># 改成2.0api</span>\n        <span class=\"nb\">echo</span> <span class=\"s1\">'/// 上传 PGY 开始 渠道 为空'</span>\n        bash <span class=\"nv\">$build_ext_path</span>/publish_res/pgyer_upload.sh <span class=\"nt\">-k</span> <span class=\"k\">${</span><span class=\"nv\">pgyAPIKey</span><span class=\"k\">}</span> <span class=\"nt\">-d</span> <span class=\"k\">${</span><span class=\"nv\">compileEnvironment</span><span class=\"k\">}</span> <span class=\"k\">${</span><span class=\"nv\">IPA_PATH</span><span class=\"k\">}</span>\n    <span class=\"k\">else</span>\n        <span class=\"c\"># 渠道非空，走下载地址关联 渠道</span>\n        <span class=\"c\"># 改成2.0api</span>\n        <span class=\"nb\">echo</span> <span class=\"s1\">'/// 上传 PGY 开始 渠道='</span><span class=\"k\">${</span><span class=\"nv\">channel_name</span><span class=\"k\">}</span>\n        bash <span class=\"nv\">$build_ext_path</span>/publish_res/pgyer_upload.sh <span class=\"nt\">-k</span> <span class=\"k\">${</span><span class=\"nv\">pgyAPIKey</span><span class=\"k\">}</span> <span class=\"nt\">-d</span> <span class=\"k\">${</span><span class=\"nv\">compileEnvironment</span><span class=\"k\">}</span> <span class=\"nt\">-c</span> <span class=\"k\">${</span><span class=\"nv\">pgyDownloadUrlSubfix</span><span class=\"k\">}</span> <span class=\"k\">${</span><span class=\"nv\">IPA_PATH</span><span class=\"k\">}</span>\n    <span class=\"k\">fi\n            \n    </span><span class=\"nb\">echo</span> <span class=\"s1\">'/// 上传 PGY 结束'</span>\n<span class=\"o\">}</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>​\t阿里云OSS：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#在下载二维码增加git日志</span>\n<span class=\"k\">function </span>add_log_commit_title_msg_to_qrcode <span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"c\">#二维码打上版本信息</span>\n    <span class=\"c\">#TODO: 这里需要安装下工具 ImageMgick [brew install ImageMgick]</span>\n    <span class=\"c\">#check_command_and_install \"convert\" \"ImageMgick\"</span>\n    bash <span class=\"nv\">$build_ext_path</span>/build_tools/build_tools.sh <span class=\"s2\">\"convert\"</span> <span class=\"s2\">\"ImageMagick\"</span>\n    \n    <span class=\"nv\">title</span><span class=\"o\">=</span><span class=\"nv\">$xcodeVersion3number</span>.<span class=\"k\">${</span><span class=\"nv\">channel_name</span><span class=\"k\">}</span>.<span class=\"nv\">$configurationName</span>.<span class=\"k\">${</span><span class=\"nv\">BuildNo</span><span class=\"k\">}</span>\n\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nv\">$1</span> <span class=\"o\">=</span> <span class=\"s2\">\"1\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nv\">dst_line_cnt</span><span class=\"o\">=</span>0\n        <span class=\"c\">#FIXME: 这样取会为空???? ${source_log_arr}</span>\n        <span class=\"nb\">export </span><span class=\"nv\">oss_source_log_arr</span><span class=\"o\">=(</span><span class=\"sb\">`</span><span class=\"nb\">echo</span> <span class=\"nv\">$source_log_str</span> | <span class=\"nb\">tr</span> <span class=\"s1\">'}{'</span> <span class=\"s1\">' '</span><span class=\"sb\">`</span><span class=\"o\">)</span>\n        <span class=\"nb\">export </span><span class=\"nv\">oss_log_line_count</span><span class=\"o\">=</span><span class=\"k\">${#</span><span class=\"nv\">oss_source_log_arr</span><span class=\"p\">[@]</span><span class=\"k\">}</span>\n        <span class=\"nb\">echo</span> <span class=\"s1\">'/// oss 分发： 添加 二维码msg log_line_count='</span><span class=\"nv\">$oss_log_line_count</span>\n        <span class=\"nb\">echo</span> <span class=\"s1\">'/// oss 分发： 添加 二维码msg source_log_arr count='</span><span class=\"k\">${#</span><span class=\"nv\">source_log_arr</span><span class=\"p\">[@]</span><span class=\"k\">}</span>\n\n        <span class=\"k\">for</span><span class=\"o\">((</span> <span class=\"nv\">i</span><span class=\"o\">=</span>0<span class=\"p\">;</span>i&lt;<span class=\"k\">${</span><span class=\"nv\">oss_log_line_count</span><span class=\"k\">}</span><span class=\"p\">;</span>i++<span class=\"o\">))</span>\n        <span class=\"k\">do\n            </span><span class=\"nv\">single_len</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">echo</span> <span class=\"nt\">-n</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">oss_source_log_arr</span><span class=\"p\">[i]</span><span class=\"k\">}</span><span class=\"s2\">\"</span> | <span class=\"nb\">wc</span> <span class=\"nt\">-m</span><span class=\"si\">)</span>\n            <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">oss_source_log_arr</span><span class=\"p\">[i]</span><span class=\"k\">}</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n                </span><span class=\"nv\">oss_singleStr</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">oss_source_log_arr</span><span class=\"p\">[i]</span><span class=\"k\">}</span><span class=\"p\">;</span>\n                <span class=\"nb\">echo</span> <span class=\"s1\">'///--遍历'</span><span class=\"k\">${</span><span class=\"nv\">oss_source_log_arr</span><span class=\"p\">[i]</span><span class=\"k\">}</span><span class=\"s1\">'为空文字长度：'</span><span class=\"nv\">$single_len</span>\n                <span class=\"nv\">dst_line_cnt</span><span class=\"o\">=</span><span class=\"k\">$((</span>dst_line_cnt+1<span class=\"k\">))</span>\n            <span class=\"k\">else\n                </span><span class=\"nv\">line_max_len</span><span class=\"o\">=</span>30\n                <span class=\"nv\">ingle_cnt</span><span class=\"o\">=</span><span class=\"k\">$((</span>single_len <span class=\"o\">/</span> line_max_len<span class=\"k\">))</span>\n\n\n                <span class=\"k\">if</span> <span class=\"o\">((</span>ingle_cnt <span class=\"o\">&gt;</span> 0<span class=\"o\">))</span><span class=\"p\">;</span> <span class=\"k\">then\n                    for</span><span class=\"o\">((</span> <span class=\"nv\">j</span><span class=\"o\">=</span>0<span class=\"p\">;</span>j&lt;<span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">ingle_cnt</span><span class=\"k\">}</span><span class=\"p\">;</span>j++<span class=\"o\">))</span>\n                    <span class=\"k\">do\n                        </span><span class=\"nv\">string</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">oss_source_log_arr</span><span class=\"p\">[i]</span><span class=\"k\">}</span>\n                        <span class=\"nv\">single_line1</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">string</span>:<span class=\"p\">(line_max_len * j)</span>:line_max_len<span class=\"k\">}</span>\n                        <span class=\"nb\">echo</span> <span class=\"s1\">'///--遍历'</span> <span class=\"k\">${</span><span class=\"nv\">oss_source_log_arr</span><span class=\"p\">[i]</span><span class=\"k\">}</span><span class=\"s1\">'文字长度：'</span><span class=\"nv\">$single_len</span><span class=\"s1\">'超阈值阶段：第'</span><span class=\"nv\">$j</span><span class=\"s1\">'行:'</span><span class=\"nv\">$single_line1</span>\n                        oss_singleStr+<span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"se\">\\n</span><span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">single_line1</span><span class=\"k\">}</span><span class=\"p\">;</span>\n                        <span class=\"nv\">dst_line_cnt</span><span class=\"o\">=</span><span class=\"k\">$((</span>dst_line_cnt+1<span class=\"k\">))</span>\n                    <span class=\"k\">done</span><span class=\"p\">;</span>\n                <span class=\"k\">else\n                    </span><span class=\"nb\">echo</span> <span class=\"s1\">'///--遍历'</span> <span class=\"k\">${</span><span class=\"nv\">oss_source_log_arr</span><span class=\"p\">[i]</span><span class=\"k\">}</span><span class=\"s1\">' 文字长度：'</span><span class=\"nv\">$single_len</span>\n                    <span class=\"nv\">dst_line_cnt</span><span class=\"o\">=</span><span class=\"k\">$((</span>dst_line_cnt+1<span class=\"k\">))</span>\n                    oss_singleStr+<span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"se\">\\n</span><span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">oss_source_log_arr</span><span class=\"p\">[i]</span><span class=\"k\">}</span><span class=\"p\">;</span>\n                <span class=\"k\">fi\n            fi\n        done</span><span class=\"p\">;</span>\n        <span class=\"nv\">msg</span><span class=\"o\">=</span><span class=\"nv\">$oss_singleStr</span>\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"/// oss render msg=\"</span><span class=\"nv\">$msg</span>\n        \n        <span class=\"nv\">contentsize_width</span><span class=\"o\">=</span>600\n        <span class=\"nv\">contentsize_height</span><span class=\"o\">=</span><span class=\"k\">$((</span>contentsize_width <span class=\"o\">+</span> <span class=\"nv\">$dst_line_cnt</span> <span class=\"o\">*</span> <span class=\"m\">25</span> <span class=\"o\">+</span> <span class=\"m\">40</span> <span class=\"o\">+</span> <span class=\"m\">40</span><span class=\"k\">))</span> <span class=\"c\">#第一个40是title的高度 第二个40是距离底部空间</span>\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"contentsize_height=\"</span><span class=\"nv\">$contentsize_height</span>\n        <span class=\"c\">#改变原图大小</span>\n        convert <span class=\"nv\">$qrcode_path</span> <span class=\"nt\">-resize</span> <span class=\"k\">${</span><span class=\"nv\">contentsize_width</span><span class=\"k\">}</span>x<span class=\"k\">${</span><span class=\"nv\">contentsize_width</span><span class=\"k\">}</span>^ <span class=\"nt\">-gravity</span> center <span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span>_1.png\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"1 convert：\"</span><span class=\"k\">${</span><span class=\"nv\">contentsize_width</span><span class=\"k\">}</span>x<span class=\"k\">${</span><span class=\"nv\">contentsize_width</span><span class=\"k\">}</span>\n\n        <span class=\"c\">#变高，兼容msg</span>\n        convert <span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span>_1.png <span class=\"nt\">-gravity</span> north <span class=\"nt\">-extent</span> <span class=\"k\">${</span><span class=\"nv\">contentsize_width</span><span class=\"k\">}</span>x<span class=\"k\">${</span><span class=\"nv\">contentsize_height</span><span class=\"k\">}</span> <span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span>_2.png\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"2 convert：\"</span><span class=\"k\">${</span><span class=\"nv\">contentsize_width</span><span class=\"k\">}</span>x<span class=\"k\">${</span><span class=\"nv\">contentsize_height</span><span class=\"k\">}</span>\n\n        <span class=\"c\">#汉字字体</span>\n        <span class=\"nv\">chn_tff_path</span><span class=\"o\">=</span><span class=\"nv\">$build_ext_path</span>/publish_res/chn.ttf\n        \n        <span class=\"c\">#渲染title</span>\n        convert <span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span>_2.png <span class=\"nt\">-gravity</span> north <span class=\"nt\">-pointsize</span> 30 <span class=\"nt\">-font</span> <span class=\"nv\">$chn_tff_path</span> <span class=\"nt\">-fill</span> black <span class=\"nt\">-annotate</span> +0+<span class=\"k\">${</span><span class=\"nv\">contentsize_width</span><span class=\"k\">}</span> <span class=\"nv\">$title</span> <span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span>_3.png\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"3 convert：title：\"</span><span class=\"k\">${</span><span class=\"nv\">title</span><span class=\"k\">}</span>\n\n        <span class=\"c\">#渲染msg</span>\n        <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$msg</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n            </span><span class=\"nb\">echo</span> <span class=\"s2\">\"4 convert：msg：为空\"</span>\n        <span class=\"k\">fi\n        \n        </span>convert <span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span>_3.png <span class=\"nt\">-gravity</span> north <span class=\"nt\">-pointsize</span> 20 <span class=\"nt\">-font</span> <span class=\"nv\">$chn_tff_path</span> <span class=\"nt\">-fill</span> black <span class=\"nt\">-annotate</span> +0+<span class=\"k\">$((${</span><span class=\"nv\">contentsize_width</span><span class=\"k\">}</span><span class=\"o\">+</span><span class=\"m\">40</span><span class=\"k\">))</span> <span class=\"nv\">$msg</span> <span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span>_4.png\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"4 convert：msg：\"</span><span class=\"k\">${</span><span class=\"nv\">msg</span><span class=\"k\">}</span>\n        \n        <span class=\"k\">if </span><span class=\"nb\">test</span> <span class=\"nt\">-e</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span><span class=\"s2\">_4.png\"</span><span class=\"p\">;</span> <span class=\"k\">then\n            </span><span class=\"nb\">echo</span> <span class=\"s2\">\"4 convert：msg 存在\"</span>\n            <span class=\"nv\">qrcode_path_with_msg</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span>_4.png\n        <span class=\"k\">else\n            </span><span class=\"nb\">echo</span> <span class=\"s2\">\"4 convert：msg 不存在 使用3\"</span>\n            <span class=\"nv\">qrcode_path_with_msg</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span>_3.png\n        <span class=\"k\">fi\n\n    else</span>\n        <span class=\"c\">#没有传 1 不需要msg，只给title</span>\n        convert <span class=\"nv\">$qrcode_path</span> <span class=\"nt\">-gravity</span> south <span class=\"nt\">-pointsize</span> 10 <span class=\"nt\">-fill</span> gray <span class=\"nt\">-annotate</span> +0+0 <span class=\"nv\">$qrcode_print_msg</span>  <span class=\"nv\">$qrcode_path_with_msg</span>\n        <span class=\"nb\">echo</span> <span class=\"s1\">'/// oss 分发： 添加 二维码title='</span><span class=\"k\">${</span><span class=\"nv\">title</span><span class=\"k\">}</span>\n    <span class=\"k\">fi</span>\n\n<span class=\"o\">}</span>\n\n<span class=\"c\">#发布到阿里云OSS</span>\n<span class=\"k\">function </span>upload_ipa_to_aliyunOSS <span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"c\">#更新plist的键值对：</span>\n    <span class=\"c\">#    /usr/libexec/PlistBuddy -c \"Set :CFBundleShortVersionString ${version3number}\" ${WeSingNotificationServiceExtension_plist}</span>\n    <span class=\"nv\">manifest_path</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">exportPath</span><span class=\"k\">}</span>/manifest.plist\n    <span class=\"nb\">echo</span> <span class=\"s1\">'/// oss 分发： manifest_path='</span><span class=\"k\">${</span><span class=\"nv\">manifest_path</span><span class=\"k\">}</span>\n    \n    <span class=\"nv\">oss_bucket</span><span class=\"o\">=</span><span class=\"s2\">\"oss_bucket_name\"</span>\n    <span class=\"nv\">oss_platform</span><span class=\"o\">=</span><span class=\"s2\">\"iOS\"</span>\n    <span class=\"nv\">oss_bucket_path</span><span class=\"o\">=</span><span class=\"nv\">$oss_platform</span>/<span class=\"k\">${</span><span class=\"nv\">TARGET_NAME</span><span class=\"k\">}</span>/<span class=\"nv\">$configurationName</span>/<span class=\"k\">${</span><span class=\"nv\">channel_name</span><span class=\"k\">}</span>/<span class=\"k\">${</span><span class=\"nv\">BuildNo</span><span class=\"k\">}</span>/<span class=\"k\">${</span><span class=\"nv\">TARGET_NAME</span><span class=\"k\">}</span>_<span class=\"k\">${</span><span class=\"nv\">channel_name</span><span class=\"k\">}</span>_<span class=\"nv\">$configurationName_</span><span class=\"k\">${</span><span class=\"nv\">BuildNo</span><span class=\"k\">}</span>\n    <span class=\"nv\">oss_path</span><span class=\"o\">=</span><span class=\"s2\">\"oss://</span><span class=\"nv\">$oss_bucket</span><span class=\"s2\">/</span><span class=\"nv\">$oss_bucket_path</span><span class=\"s2\">\"</span>\n    <span class=\"nv\">oss_url</span><span class=\"o\">=</span><span class=\"s2\">\"https://</span><span class=\"nv\">$oss_bucket</span><span class=\"s2\">.oss-cn-beijing.aliyuncs.com/</span><span class=\"nv\">$oss_bucket_path</span><span class=\"s2\">\"</span>\n\n    <span class=\"nv\">oss_ipa_upload_url</span><span class=\"o\">=</span><span class=\"nv\">$oss_path</span><span class=\"s2\">\".ipa\"</span>\n    <span class=\"nv\">oss_ipa_url</span><span class=\"o\">=</span><span class=\"nv\">$oss_url</span><span class=\"s2\">\".ipa\"</span>\n\n    <span class=\"c\">#icon下载地址配置</span>\n    <span class=\"nv\">oss_icon_url</span><span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">aliyunOSSBuicket</span><span class=\"k\">}</span><span class=\"s2\">/icon/icon.png\"</span>\n    <span class=\"nv\">oss_icon_fs_url</span><span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">aliyunOSSBuicket</span><span class=\"k\">}</span><span class=\"s2\">/icon/icon_fs.png\"</span>\n\n    \n    <span class=\"c\">#修改ipa下载地址</span>\n    /usr/libexec/PlistBuddy <span class=\"nt\">-c</span> <span class=\"s2\">\"Set :items:0:assets:0:url </span><span class=\"nv\">$oss_ipa_url</span><span class=\"s2\">\"</span> <span class=\"nv\">$manifest_path</span>\n\n    <span class=\"c\">#修改icon地址</span>\n    /usr/libexec/PlistBuddy <span class=\"nt\">-c</span> <span class=\"s2\">\"Set :items:0:assets:1:url </span><span class=\"nv\">$oss_icon_url</span><span class=\"s2\">\"</span> <span class=\"nv\">$manifest_path</span>\n\n    <span class=\"c\">#修改icon full size地址</span>\n    /usr/libexec/PlistBuddy <span class=\"nt\">-c</span> <span class=\"s2\">\"Set :items:0:assets:2:url </span><span class=\"nv\">$oss_icon_fs_url</span><span class=\"s2\">\"</span> <span class=\"nv\">$manifest_path</span>\n\n\n    <span class=\"c\">#传ipa</span>\n    ossutil <span class=\"nb\">cp</span> <span class=\"k\">${</span><span class=\"nv\">IPA_PATH</span><span class=\"k\">}</span> <span class=\"nv\">$oss_ipa_upload_url</span> <span class=\"nt\">-f</span>\n    \n    <span class=\"c\">#传manifest</span>\n    <span class=\"nv\">oss_manifest_extension</span><span class=\"o\">=</span><span class=\"s2\">\"plist\"</span>\n    <span class=\"nv\">oss_manifest_upload_url</span><span class=\"o\">=</span><span class=\"nv\">$oss_path</span><span class=\"s2\">\".\"</span><span class=\"nv\">$oss_manifest_extension</span>\n    <span class=\"nv\">oss_manifest_url</span><span class=\"o\">=</span><span class=\"nv\">$oss_url</span><span class=\"s2\">\".\"</span><span class=\"nv\">$oss_manifest_extension</span>\n    ossutil <span class=\"nb\">cp</span> <span class=\"k\">${</span><span class=\"nv\">manifest_path</span><span class=\"k\">}</span> <span class=\"nv\">$oss_manifest_upload_url</span> <span class=\"nt\">-f</span>\n    \n    <span class=\"c\">#上述做归档后，生成下载二维码</span>\n    <span class=\"nv\">download_url</span><span class=\"o\">=</span><span class=\"s2\">\"itms-services://?action=download-manifest&amp;url=\"</span><span class=\"nv\">$oss_manifest_url</span>\n    <span class=\"nv\">qrcode_path</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">exportPath</span><span class=\"k\">}</span>/<span class=\"k\">${</span><span class=\"nv\">TARGET_NAME</span><span class=\"k\">}</span>_<span class=\"k\">${</span><span class=\"nv\">BuildNo</span><span class=\"k\">}</span>.png\n    \n    <span class=\"c\">#TODO: 这里需要安装下工具 qrencode [brew install qrencode]</span>\n    bash <span class=\"nv\">$build_ext_path</span>/build_tools/build_tools.sh <span class=\"s2\">\"qrencode\"</span>\n\n    qrencode <span class=\"nt\">-o</span> <span class=\"nv\">$qrcode_path</span> <span class=\"nv\">$download_url</span>\n    \n    <span class=\"c\">#将二维码上传到oss</span>\n    <span class=\"nv\">oss_qrencode_extension</span><span class=\"o\">=</span><span class=\"s2\">\"png\"</span>\n    <span class=\"nv\">oss_qrencode_upload_url</span><span class=\"o\">=</span><span class=\"nv\">$oss_path</span><span class=\"s2\">\".\"</span><span class=\"nv\">$oss_qrencode_extension</span>\n    <span class=\"nv\">qrcode_path_with_msg</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span>_with_msg\n        \n    <span class=\"c\">#如果需要二维码打上log信息则调用</span>\n    <span class=\"nv\">need_msg</span><span class=\"o\">=</span>1\n    add_log_commit_title_msg_to_qrcode <span class=\"nv\">$need_msg</span>\n        \n    <span class=\"c\">#上传到阿里云oss</span>\n    ossutil <span class=\"nb\">cp</span> <span class=\"k\">${</span><span class=\"nv\">qrcode_path_with_msg</span><span class=\"k\">}</span> <span class=\"nv\">$oss_qrencode_upload_url</span> <span class=\"nt\">-f</span>\n    \n    <span class=\"c\">#二维码的url 通知出来</span>\n    <span class=\"nb\">export </span><span class=\"nv\">oss_app_download_qrcode_url</span><span class=\"o\">=</span><span class=\"nv\">$oss_url</span><span class=\"s2\">\".\"</span><span class=\"nv\">$oss_qrencode_extension</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'/// oss 分发： 二维码的oss_app_download_qrcode_url='</span><span class=\"k\">${</span><span class=\"nv\">oss_app_download_qrcode_url</span><span class=\"k\">}</span>\n<span class=\"o\">}</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<ul>\n  <li><strong>TestFlight</strong></li>\n</ul>\n\n<p>​\t打灰度包将执行ipa上传到AppStore后台的操作（服务端环境是正式环境，未来有外网的灰度需求可改成灰度环境）</p>\n\n<ul>\n  <li><strong>Release</strong></li>\n</ul>\n\n<p>​\t打正式包将执行ipa上传到AppStore后台的操作（服务端环境是正式环境）</p>\n\n<ul>\n  <li><strong>TFinner</strong></li>\n</ul>\n\n<p>​\t打灰度包给没有添加测试设备的同事下载，解决100设备不够用（带Debug模式、可切换环境、上传到AppStore）</p>\n\n<p>AppStore分发：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#发布到AppStore</span>\n<span class=\"k\">function </span>upload_ipa_to_AppStore <span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'/// 上传App Store 开始'</span>\n    xcrun altool <span class=\"nt\">--validate-app</span> <span class=\"nt\">-f</span>  <span class=\"nv\">$IPA_PATH</span> <span class=\"nt\">--type</span>  ios  <span class=\"nt\">--apiKey</span> <span class=\"nv\">$appStore_apikey</span> <span class=\"nt\">--apiIssuer</span> <span class=\"nv\">$appStore_apiIssuer</span>\n    xcrun altool <span class=\"nt\">--upload-app</span> <span class=\"nt\">-f</span>  <span class=\"nv\">$IPA_PATH</span> <span class=\"nt\">--type</span>  ios  <span class=\"nt\">--apiKey</span> <span class=\"nv\">$appStore_apikey</span> <span class=\"nt\">--apiIssuer</span> <span class=\"nv\">$appStore_apiIssuer</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'/// 上传App Store 结束'</span>\n<span class=\"o\">}</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h4 id=\"232-通知\">2.3.2 通知</h4>\n\n<p>​\t通知模块目前通过钉钉通知，未来也可改成邮件甚至其他方式，考量亦是如此。通知实现内容可定制，当参数notify不为空，才需要通知测试团队进行更新：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n</pre></td><td class=\"rouge-code\"><pre> <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$notify</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then</span>\n        <span class=\"c\"># 空，不发通知</span>\n        <span class=\"nb\">echo</span> <span class=\"s1\">'/// 本次打包静默，不发通知 '</span>\n <span class=\"k\">else</span>\n    ....\n <span class=\"k\">fi</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>​\t通知通过 build_notification.sh 实现如下逻辑：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#构建通知</span>\n<span class=\"k\">function </span>notification<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"nv\">param</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$param</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">echo</span> <span class=\"s1\">'///构建通知（参数为空）'</span>\n        notify\n    <span class=\"k\">else\n        </span><span class=\"nb\">echo</span> <span class=\"s1\">'///构建通知（参数不为空）：'</span><span class=\"nv\">$param</span>\n        <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">param</span><span class=\"k\">}</span><span class=\"s2\">\"</span> <span class=\"o\">=</span> <span class=\"s2\">\"AppStore\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n            </span><span class=\"nb\">echo</span> <span class=\"s1\">'///构建通知AppStore'</span>\n            notify_AppStore\n        <span class=\"k\">else\n            </span><span class=\"nb\">echo</span> <span class=\"s1\">'///构建异常（参数:）'</span><span class=\"nv\">$param</span>\n            notify_fail <span class=\"nv\">$param</span>\n        <span class=\"k\">fi\n    fi</span>\n\n<span class=\"o\">}</span>\n\n<span class=\"nb\">echo</span> <span class=\"s1\">'///构建通知（'</span><span class=\"nv\">$1</span><span class=\"s1\">')'</span>\n\n<span class=\"c\">#通知</span>\nnotification <span class=\"nv\">$1</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>通知兼容蒲公英下载地址 + oss下载地址：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#执行通知逻辑</span>\n<span class=\"k\">function </span>notify<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"nv\">modify_msg</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">git_log</span><span class=\"k\">}</span>\n    <span class=\"nv\">ProductName</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">xcodeProductName</span><span class=\"k\">}</span>\n    <span class=\"nv\">downloadPrefix</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">PrefixID</span><span class=\"k\">}</span>\n    <span class=\"nv\">channel</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">channel_name</span><span class=\"k\">}</span>\n    <span class=\"nv\">title</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">buildName</span><span class=\"k\">}</span>\n    \n    <span class=\"nv\">app_donwnload_url</span><span class=\"o\">=</span><span class=\"s2\">\"\"</span>\n    <span class=\"nv\">pgy_app_donwnload_url</span><span class=\"o\">=</span><span class=\"s2\">\"\"</span>\n    <span class=\"c\">#启用传pgy</span>\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">use_pgy_publish</span><span class=\"k\">}</span><span class=\"s2\">\"</span> <span class=\"o\">=</span> <span class=\"s2\">\"1\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then</span>\n        <span class=\"c\">#采用直接 拼 channel后缀</span>\n        <span class=\"nv\">shortUrl</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">downloadPrefix</span><span class=\"k\">}${</span><span class=\"nv\">ProductName</span><span class=\"k\">}${</span><span class=\"nv\">channel</span><span class=\"k\">}</span>\n\n\n        <span class=\"nv\">pgy_app_donwnload_url</span><span class=\"o\">=</span><span class=\"s2\">\"https://www.xcxwo.com/</span><span class=\"k\">${</span><span class=\"nv\">shortUrl</span><span class=\"k\">}</span><span class=\"s2\">\"</span>\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"short_download_url = \"</span><span class=\"nv\">$short_download_url</span>\n        <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$short_download_url</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n            </span><span class=\"nv\">app_donwnload_url</span><span class=\"o\">=</span><span class=\"nv\">$pgy_app_donwnload_url</span>\n        <span class=\"k\">else\n            </span><span class=\"nv\">app_donwnload_url</span><span class=\"o\">=</span><span class=\"nv\">$short_download_url</span>\n        <span class=\"k\">fi</span>\n        <span class=\"c\">#蒲公英下载地址</span>\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"通知：蒲公英分发，下载地址：'</span><span class=\"k\">${</span><span class=\"nv\">app_donwnload_url</span><span class=\"k\">}</span><span class=\"s2\">'\"</span>\n    <span class=\"k\">fi</span>\n    \n    \n    <span class=\"c\">#启用传oss</span>\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">use_oss_publish</span><span class=\"k\">}</span><span class=\"s2\">\"</span> <span class=\"o\">=</span> <span class=\"s2\">\"1\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$oss_app_download_qrcode_url</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then</span>\n            <span class=\"c\">#oss下载地址为空</span>\n            <span class=\"nb\">echo</span> <span class=\"s2\">\"通知：oss_app_download_qrcode_url 为空则 下载地址：'</span><span class=\"k\">${</span><span class=\"nv\">app_donwnload_url</span><span class=\"k\">}</span><span class=\"s2\">'\"</span>\n        <span class=\"k\">else\n            </span><span class=\"nb\">echo</span> <span class=\"s2\">\"通知：oss_app_download_qrcode_url 不为空 下载地址：'</span><span class=\"k\">${</span><span class=\"nv\">app_donwnload_url</span><span class=\"k\">}</span><span class=\"s2\">' and '</span><span class=\"nv\">$oss_app_download_qrcode_url</span><span class=\"s2\">'\"</span>\n            <span class=\"nv\">app_donwnload_url</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">pgy_app_donwnload_url</span><span class=\"k\">}</span><span class=\"s1\">'\\n\\n'</span>oss下载地址:<span class=\"nv\">$oss_app_download_qrcode_url</span>\n\n        <span class=\"k\">fi\n    fi\n    \n    </span><span class=\"nb\">echo</span> <span class=\"s2\">\"通知 COME下载地址：'</span><span class=\"k\">${</span><span class=\"nv\">app_donwnload_url</span><span class=\"k\">}</span><span class=\"s2\">'\"</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"通知 内容：'\"\"'</span><span class=\"k\">${</span><span class=\"nv\">ProductName</span><span class=\"k\">}</span><span class=\"s2\">' App更新：'</span><span class=\"k\">${</span><span class=\"nv\">title</span><span class=\"k\">}</span><span class=\"s2\">'</span><span class=\"se\">\\n</span><span class=\"s2\">'</span><span class=\"k\">${</span><span class=\"nv\">modify_msg</span><span class=\"k\">}</span><span class=\"s2\">'</span><span class=\"se\">\\n</span><span class=\"s2\">下载地址：'</span><span class=\"k\">${</span><span class=\"nv\">app_donwnload_url</span><span class=\"k\">}</span><span class=\"s2\">'\"</span>\n    \n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">notify</span><span class=\"k\">}</span><span class=\"s2\">\"</span> <span class=\"o\">=</span> <span class=\"s2\">\"1\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">echo</span> <span class=\"s1\">'/// 本次打发通知到群里 '</span>\n    <span class=\"k\">elif</span> <span class=\"o\">[</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">notify</span><span class=\"k\">}</span><span class=\"s2\">\"</span> <span class=\"o\">=</span> <span class=\"s2\">\"2\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">echo</span> <span class=\"s1\">'/// 本次打发通知到内部群里 '</span>\n        <span class=\"nv\">access_token</span><span class=\"o\">=</span><span class=\"nv\">$internal_access_token</span>\n    <span class=\"k\">else\n        </span><span class=\"nb\">echo</span> <span class=\"s1\">'/// 本次打发通知参数'</span><span class=\"k\">${</span><span class=\"nv\">notify</span><span class=\"k\">}</span>\n    <span class=\"k\">fi\n    \n    if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$notify</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then</span>\n        <span class=\"c\"># 空，不发通知</span>\n        <span class=\"nb\">echo</span> <span class=\"s1\">'/// 本次打包静默，不发通知 '</span>\n\n    <span class=\"k\">else\n        </span><span class=\"nb\">echo</span> <span class=\"s1\">'/// 本次打包发通知 '</span>\n        <span class=\"c\">#发送发版通知</span>\n        curl <span class=\"s1\">'https://oapi.dingtalk.com/robot/send?access_token='</span><span class=\"k\">${</span><span class=\"nv\">access_token</span><span class=\"k\">}</span> <span class=\"se\">\\</span>\n            <span class=\"nt\">-H</span> <span class=\"s1\">'Content-Type: application/json'</span> <span class=\"se\">\\</span>\n            <span class=\"nt\">-d</span> <span class=\"s1\">'{\"msgtype\": \"text\",\n                \"at\": {\n                \"atMobiles\":[\n                    \"xx1\"\n                    \"xx2\"\n                    \"xx3\"\n                    \"xx4\"\n                    \"xx5\"\n                    \"xx6\"\n                    \"xx7\"\n                ],\n                \"isAtAll\": false\n                },\n                 \"text\": {\n                      \"content\": \"'</span><span class=\"k\">${</span><span class=\"nv\">ProductName</span><span class=\"k\">}</span><span class=\"s1\">' App更新：'</span><span class=\"k\">${</span><span class=\"nv\">title</span><span class=\"k\">}</span><span class=\"s1\">'\\n'</span><span class=\"k\">${</span><span class=\"nv\">modify_msg</span><span class=\"k\">}</span><span class=\"s1\">'\\n下载地址：'</span><span class=\"k\">${</span><span class=\"nv\">app_donwnload_url</span><span class=\"k\">}</span><span class=\"s1\">'\"            }\n               }'</span>\n               \n               \n        <span class=\"nb\">echo</span> <span class=\"s1\">'///-------------------------------------------------------'</span>\n        <span class=\"nb\">echo</span> <span class=\"s1\">'/// 通知Come3 '</span>\n        <span class=\"nb\">echo</span> <span class=\"s1\">'///-------------------------------------------------------'</span>\n    <span class=\"k\">fi</span>\n\n<span class=\"o\">}</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>​\t构建失败通知：</p>\n\n<div class=\"language-sh highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#打包出错时通知</span>\n<span class=\"k\">function </span>notify_fail<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"c\">#发布到移动端内部群</span>\n    <span class=\"nv\">access_token</span><span class=\"o\">=</span><span class=\"nv\">$internal_access_token</span>\n    <span class=\"c\">#产物</span>\n    <span class=\"nv\">ProductName</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">xcodeProductName</span><span class=\"k\">}</span>\n    <span class=\"c\">#渠道名</span>\n    <span class=\"nv\">channel</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">channel_name</span><span class=\"k\">}</span>\n    <span class=\"c\">#流水线名称</span>\n    <span class=\"nv\">title</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">buildName</span><span class=\"k\">}</span>\n    \n    <span class=\"c\">#失败原因</span>\n    <span class=\"nv\">reson</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n    \n    <span class=\"nb\">echo</span> <span class=\"s1\">'/// 本次打包异常：发通知到内部群 '</span>\n    <span class=\"c\">#发送发版通知</span>\n    curl <span class=\"s1\">'https://oapi.dingtalk.com/robot/send?access_token='</span><span class=\"k\">${</span><span class=\"nv\">access_token</span><span class=\"k\">}</span> <span class=\"se\">\\</span>\n        <span class=\"nt\">-H</span> <span class=\"s1\">'Content-Type: application/json'</span> <span class=\"se\">\\</span>\n        <span class=\"nt\">-d</span> <span class=\"s1\">'{\"msgtype\": \"text\",\n            \"at\": {\n            \"atMobiles\":[\n                \"DD1\",\n                \"DD2\"\n            ],\n            \"isAtAll\": false\n            },\n             \"text\": {\n                  \"content\": \"❌构建失败:\\nApp:'</span><span class=\"k\">${</span><span class=\"nv\">ProductName</span><span class=\"k\">}</span><span class=\"s1\">'\\n原  因：'</span><span class=\"k\">${</span><span class=\"nv\">reson</span><span class=\"k\">}</span><span class=\"s1\">'\\n流水线：'</span><span class=\"k\">${</span><span class=\"nv\">title</span><span class=\"k\">}</span><span class=\"s1\">'\\n渠  道：'</span><span class=\"k\">${</span><span class=\"nv\">buildName</span><span class=\"k\">}</span><span class=\"s1\">'\"}\n           }'</span>\n           \n           \n    <span class=\"nb\">echo</span> <span class=\"s1\">'///-------------------------------------------------------'</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'/// 构建通知'</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'///-------------------------------------------------------'</span>\n<span class=\"o\">}</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>构建到AppStore时需要测试团队对上线进行验证：也发送下通知</p>\n\n<div class=\"language-sh highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#打包AppStore通知，通知到群给出TestFlight下载链接二维码</span>\n<span class=\"k\">function </span>notify_AppStore<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"c\">#发布到移动端内部群</span>\n    <span class=\"nv\">access_token</span><span class=\"o\">=</span><span class=\"nv\">$internal_access_token</span>\n    <span class=\"c\">#产物</span>\n    <span class=\"nv\">ProductName</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">xcodeProductName</span><span class=\"k\">}</span>\n    <span class=\"c\">#渠道名</span>\n    <span class=\"nv\">channel</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">channel_name</span><span class=\"k\">}</span>\n    <span class=\"c\">#流水线名称</span>\n    <span class=\"nv\">title</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">buildName</span><span class=\"k\">}</span>\n    \n    <span class=\"c\">#testFlight 二维码in OSS</span>\n    <span class=\"nv\">downloadTF</span><span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">aliyunOSSBuicket</span><span class=\"k\">}</span><span class=\"s2\">/AppStoreValid/testflight.png\"</span>\n    \n    <span class=\"nb\">echo</span> <span class=\"s1\">'/// 本次打包构建到AppStore：发通知到内部群 '</span>\n    <span class=\"c\">#发送发版通知</span>\n    curl <span class=\"s1\">'https://oapi.dingtalk.com/robot/send?access_token='</span><span class=\"k\">${</span><span class=\"nv\">access_token</span><span class=\"k\">}</span> <span class=\"se\">\\</span>\n        <span class=\"nt\">-H</span> <span class=\"s1\">'Content-Type: application/json'</span> <span class=\"se\">\\</span>\n        <span class=\"nt\">-d</span> <span class=\"s1\">'{\"msgtype\": \"text\",\n            \"at\": {\n            \"atMobiles\":[\n                \"DD1\",\n                \"DD2\"\n            ],\n            \"isAtAll\": false\n            },\n             \"text\": {\n                  \"content\": \"✅AppSore构建成功:\\nApp:'</span><span class=\"k\">${</span><span class=\"nv\">ProductName</span><span class=\"k\">}</span><span class=\"s1\">'\\n构建名：'</span><span class=\"k\">${</span><span class=\"nv\">configurationName</span><span class=\"k\">}</span><span class=\"s1\">'\\n流水线：'</span><span class=\"k\">${</span><span class=\"nv\">title</span><span class=\"k\">}</span><span class=\"s1\">'\\n版本号：'</span><span class=\"k\">${</span><span class=\"nv\">xcodeVersion3number</span><span class=\"k\">}</span><span class=\"s1\">'\\n构建号：'</span><span class=\"k\">${</span><span class=\"nv\">BuildNo</span><span class=\"k\">}</span><span class=\"s1\">'\\nTestFlight:'</span><span class=\"k\">${</span><span class=\"nv\">downloadTF</span><span class=\"k\">}</span><span class=\"s1\">'\"}\n           }'</span>\n           \n           \n    <span class=\"nb\">echo</span> <span class=\"s1\">'///-------------------------------------------------------'</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'/// 构建通知'</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'///-------------------------------------------------------'</span>\n<span class=\"o\">}</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h4 id=\"233-归档\">2.3.3 归档</h4>\n\n<p>​\t目前在Release、TestFlight 打包时将ipa与dysm打包上传到简单云制品库</p>\n\n<p>​\t构建归档，将ipa与dysm打程zip包</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n</pre></td><td class=\"rouge-code\"><pre><span class=\"k\">function </span>ProductCollection<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">configurationName</span><span class=\"k\">}</span><span class=\"s2\">\"</span> <span class=\"o\">=</span> <span class=\"s2\">\"Release\"</span> <span class=\"o\">]</span> <span class=\"o\">||</span> <span class=\"o\">[</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">configurationName</span><span class=\"k\">}</span><span class=\"s2\">\"</span> <span class=\"o\">=</span> <span class=\"s2\">\"TestFlight\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n\n        </span>dSYMCollection\n    \n        IPACollection\n        \n        <span class=\"nb\">export </span><span class=\"nv\">ProductCollectionPath</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">dSYM_dict_PATH</span><span class=\"k\">}</span>/ProductCollection.zip\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"ProductCollectionPath=\"</span><span class=\"nv\">$ProductCollectionPath</span>\n        zip <span class=\"nv\">$ProductCollectionPath</span> <span class=\"k\">${</span><span class=\"nv\">dSYMZip_PATH</span><span class=\"k\">}</span> <span class=\"k\">${</span><span class=\"nv\">IPAZip_PATH</span><span class=\"k\">}</span>\n        <span class=\"c\">#执行归档,(ipa+dSYM)并找个地方存起来</span>\n        bash <span class=\"nv\">$build_ext_path</span>/<span class=\"nv\">$collection_sh</span>\n    <span class=\"k\">fi</span>\n\n<span class=\"o\">}</span>\n\n<span class=\"k\">function </span>dSYMCollection<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"c\"># zip and copy dSYM</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"dSYMCollection\"</span>\n\n    <span class=\"nb\">cd</span> <span class=\"k\">${</span><span class=\"nv\">build_path</span><span class=\"k\">}</span>/Build/Products/<span class=\"k\">${</span><span class=\"nv\">configurationName</span><span class=\"k\">}</span><span class=\"nt\">-iphoneos</span>\n    find <span class=\"nb\">.</span> <span class=\"nt\">-name</span> <span class=\"s1\">'*.dSYM'</span> | zip <span class=\"nt\">-r</span> <span class=\"k\">${</span><span class=\"nv\">dSYMZip_PATH</span><span class=\"k\">}</span> -@\n    find <span class=\"nb\">.</span> <span class=\"nt\">-name</span> <span class=\"s1\">'*.dSYM'</span> <span class=\"nt\">-exec</span> <span class=\"nb\">cp</span> <span class=\"nt\">-R</span> <span class=\"o\">{}</span> <span class=\"k\">${</span><span class=\"nv\">dSYM_dict_PATH</span><span class=\"k\">}</span> <span class=\"se\">\\;</span>\n    <span class=\"nb\">cd</span> -\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"Copy dSYM.zip file success save path:\"</span> <span class=\"k\">${</span><span class=\"nv\">dSYMZip_PATH</span><span class=\"k\">}</span>\n<span class=\"o\">}</span>\n\n<span class=\"k\">function </span>IPACollection<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"c\"># zip and copy dSYM</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"IPACollection\"</span>\n    <span class=\"nb\">cd</span> <span class=\"k\">${</span><span class=\"nv\">build_path</span><span class=\"k\">}</span>/Build/Products/<span class=\"k\">${</span><span class=\"nv\">configurationName</span><span class=\"k\">}</span><span class=\"nt\">-iphoneos</span>\n    find <span class=\"nb\">.</span> <span class=\"nt\">-name</span> <span class=\"s1\">'*.ipa'</span> | zip <span class=\"nt\">-r</span> <span class=\"k\">${</span><span class=\"nv\">IPAZip_PATH</span><span class=\"k\">}</span> -@\n    find <span class=\"nb\">.</span> <span class=\"nt\">-name</span> <span class=\"s1\">'*.ipa'</span> <span class=\"nt\">-exec</span> <span class=\"nb\">cp</span> <span class=\"nt\">-R</span> <span class=\"o\">{}</span> <span class=\"k\">${</span><span class=\"nv\">dSYM_dict_PATH</span><span class=\"k\">}</span> <span class=\"se\">\\;</span>\n    <span class=\"nb\">cd</span> -\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"Copy IPAZip_PATH.zip file success save path:\"</span> <span class=\"k\">${</span><span class=\"nv\">IPAZip_PATH</span><span class=\"k\">}</span>\n<span class=\"o\">}</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>​\t将zip包归档到简单云</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n</pre></td><td class=\"rouge-code\"><pre><span class=\"k\">function </span>upload_to_store<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"nb\">export </span><span class=\"nv\">p</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'/// 上传 dsym ipa 到制品库 '</span><span class=\"k\">${</span><span class=\"nv\">v</span><span class=\"k\">}</span><span class=\"s1\">'pkgName='</span><span class=\"k\">${</span><span class=\"nv\">pkgName</span><span class=\"k\">}</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"dSYMZip_PATH = \"</span><span class=\"k\">${</span><span class=\"nv\">dSYMZip_PATH</span><span class=\"k\">}</span><span class=\"s2\">\"https://PSC-devops.com/pkg/PSC/raw/OperationsAppAnddSYM/release?version=\"</span><span class=\"k\">${</span><span class=\"nv\">v</span><span class=\"k\">}</span><span class=\"s2\">\"&amp;pkgName=\"</span><span class=\"k\">${</span><span class=\"nv\">pkgName</span><span class=\"k\">}</span>\n    <span class=\"c\">#上传简单云制品库</span>\n    curl <span class=\"nt\">-F</span> <span class=\"s2\">\"file=@\"</span><span class=\"k\">${</span><span class=\"nv\">p</span><span class=\"k\">}</span> <span class=\"nt\">-u</span> 简单云账号:简单云密码 <span class=\"s2\">\"https://PSC-devops.com/pkg/PSC/raw/OperationsAppAnddSYM/release?version=\"</span><span class=\"k\">${</span><span class=\"nv\">v</span><span class=\"k\">}</span><span class=\"s2\">\"&amp;pkgName=\"</span><span class=\"k\">${</span><span class=\"nv\">pkgName</span><span class=\"k\">}</span> <span class=\"nt\">-k</span>\n<span class=\"o\">}</span>\n        \n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>​\t将dSYM上传到bugly，用于定位线上crash：</p>\n\n<div class=\"language-sh highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n</pre></td><td class=\"rouge-code\"><pre><span class=\"k\">function </span>upload_dSYM_to_bugly<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"nb\">export </span><span class=\"nv\">p</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">dSYM_dict_PATH</span><span class=\"k\">}</span>\n    \n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">TARGET_NAME</span><span class=\"k\">}</span><span class=\"s2\">\"</span> <span class=\"o\">=</span> <span class=\"s2\">\"PSCDemoiOS\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nv\">bugly_appid</span><span class=\"o\">=</span><span class=\"nv\">$Demo_bugly_appid</span>\n        <span class=\"nv\">bugly_appkey</span><span class=\"o\">=</span><span class=\"nv\">$Demo_bugly_appkey</span>\n    <span class=\"k\">fi\n    \n    if</span> <span class=\"o\">[</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">TARGET_NAME</span><span class=\"k\">}</span><span class=\"s2\">\"</span> <span class=\"o\">=</span> <span class=\"s2\">\"Operations\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nv\">bugly_appid</span><span class=\"o\">=</span><span class=\"nv\">$operations_bugly_appid</span>\n        <span class=\"nv\">bugly_appkey</span><span class=\"o\">=</span><span class=\"nv\">$operations_bugly_appkey</span>\n    <span class=\"k\">fi\n    \n    </span><span class=\"nb\">echo</span> <span class=\"s2\">\"/// 上传 dsym path </span><span class=\"k\">${</span><span class=\"nv\">p</span><span class=\"k\">}</span><span class=\"s2\">\"</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"/// 上传 dsym target </span><span class=\"k\">${</span><span class=\"nv\">TARGET_NAME</span><span class=\"k\">}</span><span class=\"s2\">\"</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"/// 上传 dsym bugly_appid </span><span class=\"k\">${</span><span class=\"nv\">bugly_appid</span><span class=\"k\">}</span><span class=\"s2\">\"</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"/// 上传 dsym bugly_appkey </span><span class=\"k\">${</span><span class=\"nv\">bugly_appkey</span><span class=\"k\">}</span><span class=\"s2\">\"</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'/// 上传 dsym bugly '</span><span class=\"k\">${</span><span class=\"nv\">versionName</span><span class=\"k\">}</span><span class=\"s1\">'pkgName='</span><span class=\"k\">${</span><span class=\"nv\">pkgName</span><span class=\"k\">}</span>\n    \n    <span class=\"c\">#切换java 版本在流水线实现，这边实现不了</span>\n    java <span class=\"nt\">-version</span>\n<span class=\"c\">#    jdk8</span>\n<span class=\"c\">#    java -version</span>\n    \n    <span class=\"nv\">bugly_jar_path</span><span class=\"o\">=</span><span class=\"nv\">$build_ext_path</span>/collection_res/buglyqq-upload-symbol/buglyqq-upload-symbol.jar\n    \n    java <span class=\"nt\">-jar</span> <span class=\"k\">${</span><span class=\"nv\">bugly_jar_path</span><span class=\"k\">}</span> <span class=\"nt\">-appid</span> <span class=\"k\">${</span><span class=\"nv\">bugly_appid</span><span class=\"k\">}</span> <span class=\"nt\">-appkey</span> <span class=\"k\">${</span><span class=\"nv\">bugly_appkey</span><span class=\"k\">}</span> <span class=\"nt\">-bundleid</span> <span class=\"k\">${</span><span class=\"nv\">pkgName</span><span class=\"k\">}</span> <span class=\"nt\">-version</span> <span class=\"k\">${</span><span class=\"nv\">versionName</span><span class=\"k\">}</span> <span class=\"nt\">-platform</span> IOS <span class=\"nt\">-inputSymbol</span> <span class=\"k\">${</span><span class=\"nv\">p</span><span class=\"k\">}</span>\n<span class=\"o\">}</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h2 id=\"3补充说明\">3.补充说明</h2>\n\n<p>​\t打包脚本抽离成git submodule，以供各个工程项目的集成，减少维护成本，如果没有跟主工程一起更新，则每次构建时需要同步下最新的脚本</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#使用了gitsubmodule 构建组件，兼容git 检出不兼容，需要先执行 git submodule update --init --recursive</span>\ngit submodule update <span class=\"nt\">--init</span> <span class=\"nt\">--recursive</span>\n<span class=\"c\">#拉取自模块更新</span>\ngit submodule update <span class=\"nt\">--remote</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h2 id=\"4author\">4.Author</h2>\n\n<p>​\t有任何问题，欢迎联系：wangshu2015@gmail.com</p>\n\n\n\n                <hr style=\"visibility: hidden;\">\n                <ul class=\"pager\">\n                    \n                    <li class=\"previous\">\n                        <a href=\"/2023/10/07/%E6%8A%93%E5%8C%85%E5%AE%9E%E8%B7%B5/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Charles HTTPS实践\">\n                        Previous<br>\n                        <span>Charles HTTPS实践</span>\n                        </a>\n                    </li>\n                    \n                    \n                    <li class=\"next\">\n                        <a href=\"/2024/01/08/ios/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"iOS组件化实现之：实用工具沉淀及介绍\">\n                        Next<br>\n                        <span>iOS组件化实现之：实用工具沉淀及介绍</span>\n                        </a>\n                    </li>\n                    \n                </ul>\n                <hr style=\"visibility: hidden;\">\n\n                \n                <!-- disqus 评论框 start -->\n                <div class=\"comment\">\n                    <div id=\"disqus_thread\" class=\"disqus-thread\"></div>\n                </div>\n                <!-- disqus 评论框 end -->\n                \n\n                \n            </div>  \n\n    <!-- Side Catalog Container -->\n        \n            <div class=\"\n                col-lg-2 col-lg-offset-0\n                visible-lg-block\n                sidebar-container\n                catalog-container\">\n                <div class=\"side-catalog\">\n                    <hr class=\"hidden-sm hidden-xs\">\n                    <h5>\n                        <a class=\"catalog-toggle\" href=\"#\">CATALOG</a>\n                    </h5>\n                    <ul class=\"catalog-body\"></ul>\n                </div>\n            </div>\n        \n\n    <!-- Sidebar Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                sidebar-container\">\n\n                <!-- Featured Tags -->\n                \n\n\n<section>\n    \n        <hr class=\"hidden-sm hidden-xs\">\n    \n    <h5><a href=\"/archive/\">FEATURED TAGS</a></h5>\n    <div class=\"tags\">\n        \n        \n        \n        \n        \n    </div>\n</section>\n\n\n                <!-- Friends Blog -->\n                \n            </div>\n        </div>\n    </div>\n</article>\n\n<!-- add support for mathjax by voleking-->\n\n\n\n\n\n\n<!-- disqus 公共JS代码 start (一个网页只需插入一次) -->\n<script type=\"text/javascript\">\n    /* * * CONFIGURATION VARIABLES * * */\n    var disqus_shortname = \"Cyp\";\n    var disqus_identifier = \"/2023/11/08/构建流水线实践\";\n    var disqus_url = \"http://localhost:4000/2023/11/08/%E6%9E%84%E5%BB%BA%E6%B5%81%E6%B0%B4%E7%BA%BF%E5%AE%9E%E8%B7%B5/\";\n\n    (function() {\n        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;\n        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';\n        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);\n    })();\n</script>\n<!-- disqus 公共JS代码 end -->\n\n\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n      var d = document, t = 'script',\n          o = d.createElement(t),\n          s = d.getElementsByTagName(t)[0];\n      o.src = u;\n      if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n      s.parentNode.insertBefore(o, s);\n    }\n</script>\n<!-- anchor-js, Doc:http://bryanbraun.github.io/anchorjs/ -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/anchor-js/1.1.1/anchor.min.js\",function(){\n        anchors.options = {\n          visible: 'hover',\n          placement: 'right',\n          // icon: '#'\n        };\n        anchors.add().remove('.intro-header h1').remove('.subheading').remove('.sidebar-container h5');\n    })\n</script>\n<style>\n    /* place left on bigger screen */\n    @media all and (min-width: 800px) {\n        .anchorjs-link{\n            position: absolute;\n            left: -0.75em;\n            font-size: 1.1em;\n            margin-top : -0.1em;\n        }\n    }\n</style>\n\n\n\n    <!-- Footer -->\n<footer>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <!-- SNS Link -->\n                \n\n\n<ul class=\"list-inline text-center\">\n\n\n  \n  \n  \n  \n  \n  \n  \n</ul>\n\n                <p class=\"copyright text-muted\">\n                    Copyright &copy; PaysonChen Blog 2024\n                    <br>\n                    <!-- Powered by <a href=\"http://huangxuan.me\">Hux Blog</a> | -->\n                 <!--    <iframe style=\"margin-left: 2px; margin-bottom:-5px;\" frameborder=\"0\" scrolling=\"0\" width=\"100px\"\n                        height=\"20px\"\n                        src=\"https://ghbtns.com/github-btn.html?user=huxpro&repo=huxpro.github.io&type=star&count=true\">\n                    </iframe> -->\n                </p>\n            </div>\n        </div>\n    </div>\n</footer>\n\n<!-- jQuery -->\n<script src=\"/js/jquery.min.js \"></script>\n\n<!-- Bootstrap Core JavaScript -->\n<!-- Currently, only navbar scroll-down effect at desktop still depends on this -->\n<script src=\"/js/bootstrap.min.js \"></script>\n\n<!-- Custom Theme JavaScript -->\n<script src=\"/js/hux-blog.min.js \"></script>\n\n<!-- Simple Jekyll Search -->\n<script src=\"/js/simple-jekyll-search.min.js\"></script>\n\n<!-- Service Worker -->\n\n<script src=\"/js/snackbar.js \"></script>\n<script src=\"/js/sw-registration.js \"></script>\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n        var d = document, t = 'script',\n            o = d.createElement(t),\n            s = d.getElementsByTagName(t)[0];\n        o.src = u;\n        if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n        s.parentNode.insertBefore(o, s);\n    }\n</script>\n\n<!--\n     Because of the native support for backtick-style fenced code blocks\n     right within the Markdown is landed in Github Pages,\n     From V1.6, There is no need for Highlight.js,\n     so Huxblog drops it officially.\n\n     - https://github.com/blog/2100-github-pages-now-faster-and-simpler-with-jekyll-3-0\n     - https://help.github.com/articles/creating-and-highlighting-code-blocks/\n     - https://github.com/jneen/rouge/wiki/list-of-supported-languages-and-lexers\n-->\n<!--\n    <script>\n        async(\"http://cdn.bootcss.com/highlight.js/8.6/highlight.min.js\", function(){\n            hljs.initHighlightingOnLoad();\n        })\n    </script>\n    <link href=\"http://cdn.bootcss.com/highlight.js/8.6/styles/github.min.css\" rel=\"stylesheet\">\n-->\n\n\n\n\n\n\n\n<!--fastClick.js -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/fastclick/1.0.6/fastclick.min.js\", function () {\n        var $nav = document.querySelector(\"nav\");\n        if ($nav) FastClick.attach($nav);\n    })\n</script>\n\n\n<!-- Google Analytics -->\n\n\n\n<!-- Baidu Tongji -->\n\n\n\n<!-- Side Catalog -->\n\n<script type=\"text/javascript\">\n    function generateCatalog(selector) {\n\n        // interop with multilangual \n        if ('' == 'true') {\n            _containerSelector = 'div.post-container.active'\n        } else {\n            _containerSelector = 'div.post-container'\n        }\n\n        // init\n        var P = $(_containerSelector), a, n, t, l, i, c;\n        a = P.find('h1,h2,h3,h4,h5,h6');\n\n        // clean\n        $(selector).html('')\n\n        // appending\n        a.each(function () {\n            n = $(this).prop('tagName').toLowerCase();\n            i = \"#\" + $(this).prop('id');\n            t = $(this).text();\n            c = $('<a href=\"' + i + '\" rel=\"nofollow\">' + t + '</a>');\n            l = $('<li class=\"' + n + '_nav\"></li>').append(c);\n            $(selector).append(l);\n        });\n        return true;\n    }\n\n    generateCatalog(\".catalog-body\");\n\n    // toggle side catalog\n    $(\".catalog-toggle\").click((function (e) {\n        e.preventDefault();\n        $('.side-catalog').toggleClass(\"fold\")\n    }))\n\n    /*\n     * Doc: https://github.com/davist11/jQuery-One-Page-Nav\n     * Fork by Hux to support padding\n     */\n    async(\"/js/jquery.nav.js\", function () {\n        $('.catalog-body').onePageNav({\n            currentClass: \"active\",\n            changeHash: !1,\n            easing: \"swing\",\n            filter: \"\",\n            scrollSpeed: 700,\n            scrollOffset: 0,\n            scrollThreshold: .2,\n            begin: null,\n            end: null,\n            scrollChange: null,\n            padding: 80\n        });\n    });\n</script>\n\n\n\n<!-- Multi-Lingual -->\n\n\n<!-- Simple Jekyll Search -->\n<script>\n    // https://stackoverflow.com/questions/1912501/unescape-html-entities-in-javascript\n    function htmlDecode(input) {\n        var e = document.createElement('textarea');\n        e.innerHTML = input;\n        // handle case of empty input\n        return e.childNodes.length === 0 ? \"\" : e.childNodes[0].nodeValue;\n    }\n\n    SimpleJekyllSearch({\n        searchInput: document.getElementById('search-input'),\n        resultsContainer: document.getElementById('search-results'),\n        json: '/search.json',\n        searchResultTemplate: '<div class=\"post-preview item\"><a href=\"{url}\"><h2 class=\"post-title\">{title}</h2><h3 class=\"post-subtitle\">{subtitle}</h3><hr></a></div>',\n        noResultsText: 'No results',\n        limit: 50,\n        fuzzy: false,\n        // a hack to get escaped subtitle unescaped. for some reason, \n        // post.subtitle w/o escape filter nuke entire search.\n        templateMiddleware: function (prop, value, template) {\n            if (prop === 'subtitle' || prop === 'title') {\n                if (value.indexOf(\"code\")) {\n                    return htmlDecode(value);\n                } else {\n                    return value;\n                }\n            }\n        }\n    });\n\n    $(document).ready(function () {\n        var $searchPage = $('.search-page');\n        var $searchOpen = $('.search-icon');\n        var $searchClose = $('.search-icon-close');\n        var $searchInput = $('#search-input');\n        var $body = $('body');\n\n        $searchOpen.on('click', function (e) {\n            e.preventDefault();\n            $searchPage.toggleClass('search-active');\n            var prevClasses = $body.attr('class') || '';\n            setTimeout(function () {\n                $body.addClass('no-scroll');\n            }, 400)\n\n            if ($searchPage.hasClass('search-active')) {\n                $searchClose.on('click', function (e) {\n                    e.preventDefault();\n                    $searchPage.removeClass('search-active');\n                    $body.attr('class', prevClasses);  // from closure \n                });\n                $searchInput.focus();\n            }\n        });\n    });\n</script>\n\n\n<!-- Image to hack wechat -->\n<img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\" />\n<!-- Migrate from head to bottom, no longer block render and still work -->\n\n</body>\n\n</html>\n","excerpt":"<h2 id=\"1-背景\">1 背景</h2>\n","url":"/2023/11/08/%E6%9E%84%E5%BB%BA%E6%B5%81%E6%B0%B4%E7%BA%BF%E5%AE%9E%E8%B7%B5/","next":{"id":"/2024/01/08/ios","tags":[],"relative_path":"_posts/2024-01-08-ios.md","collection":"posts","name":"2024-01-08-ios.md","url":"/2024/01/08/ios/","title":"iOS组件化实现之：实用工具沉淀及介绍","date":"2024-01-08 00:00:00 +0800","categories":[],"path":"_posts/2024-01-08-ios.md","draft":false,"layout":"post","subtitle":"组件化过程中，有一些重复/高频的问题需要解决，倘若手动解决会带来重复劳动的时间损失，以及没有沉淀的效率损失，为了避免上述损失，沉淀一些工具分享","author":"PaysonChen","header-img":"img/post-bg-2015.jpg","slug":"ios","ext":".md"},"title":"构建流水线实践","date":"2023-11-08 00:00:00 +0800","categories":[],"path":"_posts/2023-11-08-构建流水线实践.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/home-bg-geek.jpg","mermaid":true,"slug":"构建流水线实践","ext":".md"},"title":"Charles HTTPS实践","date":"2023-10-07 00:00:00 +0800","categories":[],"path":"_posts/2023-10-09-抓包实践.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/home-bg-geek.jpg","slug":"抓包实践","ext":".md"},{"id":"/2023/10/07/组件化之分支合并","tags":[],"relative_path":"_posts/2023-10-07-组件化之分支合并.md","collection":"posts","content":"<h1 id=\"组件化实践之主工程抽离代码分支合并\">组件化实践之：主工程抽离代码分支合并</h1>\n\n<h2 id=\"1-背景\">1 背景</h2>\n\n<p>​\t组件化过程中不可避免的会遇到这样一个问题：</p>\n\n<p>​\t组件化的过程一般周期比较长，此过程中不免会有业务需求的输入，这样就会导致一个情况：</p>\n\n<p>​\t组件化分支已经将主工程里的类迁移到pod仓库,而在此期间的业务需求代码对这些被迁移的类有修改，</p>\n\n<p>​\t合并主干（其他分支）代码时,主干（其他分支）有对移动之前的类做修改的情况下,会导致合并冲突,</p>\n\n<p>​\t这种冲突是整个类都是新增符号(+),没有冲突符号，此时无法简单的通过工具，或者冲突的符号对其进行解冲突。</p>\n\n<h2 id=\"2-问题处理\">2 问题处理</h2>\n\n<p>​\t解决上述冲突,最开始想到的方案是通过xcode自带filemerge进行对比,这样比较容易导致遗漏且工作量大,无法充分利用git的冲突标志,</p>\n\n<h2 id=\"3-更优解决\">3 更优解决</h2>\n\n<p>​\t如果可以知道有哪些类在合并代码时，</p>\n\n<ul class=\"task-list\">\n  <li class=\"task-list-item\"><input type=\"checkbox\" class=\"task-list-item-checkbox\" disabled=\"disabled\" checked=\"checked\" />​\t有修改</li>\n  <li class=\"task-list-item\"><input type=\"checkbox\" class=\"task-list-item-checkbox\" disabled=\"disabled\" checked=\"checked\" />​\t且已经被迁移了（不存在主工程）</li>\n</ul>\n\n<p>​\t那么就可以以这些类进行冲突检测</p>\n\n<h3 id=\"31-冲突解决方案\">3.1 冲突解决方案</h3>\n\n<p>以下简述冲突检测设计思路</p>\n\n<h4 id=\"311-数据准备\">3.1.1 数据准备</h4>\n\n<ul>\n  <li>先进行一次预合并，通过首次合并,可以从sourcetree中看到冲突的类列表文件，查看冲突内容，出现整个文件都带+的变更内容，该文件即为被迁移且被其他分支修改的文件。</li>\n</ul>\n\n<p><img src=\"/img/2023-10-07-merge/0.jpg\" alt=\"0\" /></p>\n\n<ul>\n  <li>将预合并产生的上述冲突的文件列表进行整理，将列表中符合迁移并修改的文件路径列表定义为数组存入文件：merge_project_files.txt</li>\n</ul>\n\n<p><img src=\"/img/2023-10-07-merge/1.png\" alt=\"1\" /></p>\n\n<p>​\t通过选中类(可以全选之后一起移动【mv】)移动路径:</p>\n\n<p><img src=\"/img/2023-10-07-merge/2.png\" alt=\"2\" /></p>\n\n<p><strong><em>Tips：这里用移动mv，不用复制cp，为了主工程修改完之后，能恢复迁移后的样子，不至于多出一些已迁移但是还存在主工程的文件</em></strong></p>\n\n<p>即可获取主工程冲突文件路径，新建一个文本文件,将上述所有冲突类路径移动过去,</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n</pre></td><td class=\"rouge-code\"><pre>/Users/username/Documents/Project/git/Inner/Demo/127/Demo-IOS/ProjectDemoiOS/ProjectDemoiOS/Class/Main/Car/Model/PSCCarDetailInforModel.h\n/Users/username/Documents/Project/git/Inner/Demo/127/Demo-IOS/ProjectDemoiOS/ProjectDemoiOS/Class/Main/Sites/View/PSCPowerPriceTableViewCell.m\n.....\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<ul>\n  <li>将上述文件列表一一对应到组件库里本地clone路径了列表，定义为数组存入文件；merge_pods_files.txt</li>\n</ul>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n</pre></td><td class=\"rouge-code\"><pre>/Users/username/Documents/Project/git/CocoaPods/Private/ProjectCarModule/ProjectCarModule/Classes/Car/Model/DemoCarDetailInforModel.h\n/Users/username/Documents/Project/git/CocoaPods/Private/ProjectExchangeMoudle/ProjectExchangeMoudle/Classes/Sites/View/DemoPowerPriceTableViewCell.m\n.....\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p><strong><em>Tips:commond+option+c可以文件路径</em></strong></p>\n\n<h4 id=\"312--算法编写\">3.1.2  算法编写</h4>\n\n<ul>\n  <li>步骤1:在一个全新的组件化分支（未进行预合并）上先从组件库将冲突的类文件拷贝回主工程,</li>\n  <li>步骤2:提交本地仓库(不需要push远程仓库)后再进行合并</li>\n  <li>步骤3:合并冲突则为可参考历史变更及可解决的冲突状态</li>\n  <li>步骤4:合并解决完后再通过上述方案,反向将dest的主工程目录拷贝并覆盖到组件库文件</li>\n</ul>\n\n<p><strong><em>Tips:可能存在一些已经删除的文件，但是也出现在上述列表中，此时无法从组件库移动到主工程，需要确认是否是无用文件（不是误删）</em></strong></p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\"># merge.sh</span>\n<span class=\"c\"># 从外部文件中读取源文件路径和目标文件夹路径</span>\n<span class=\"c\">#\"source_paths.txt\"</span>\n<span class=\"nv\">source_file</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n<span class=\"c\">#\"destination_paths.txt\"</span>\n<span class=\"nv\">destination_file</span><span class=\"o\">=</span><span class=\"nv\">$2</span>\n\n<span class=\"c\"># 检查源文件是否存在</span>\n<span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"o\">!</span> <span class=\"nt\">-f</span> <span class=\"s2\">\"</span><span class=\"nv\">$source_file</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n    </span><span class=\"nb\">echo</span> <span class=\"s2\">\"源文件 '</span><span class=\"nv\">$source_file</span><span class=\"s2\">' 不存在。\"</span>\n    <span class=\"nb\">exit </span>1\n<span class=\"k\">fi</span>\n\n<span class=\"c\"># 检查目标文件夹文件是否存在</span>\n<span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"o\">!</span> <span class=\"nt\">-f</span> <span class=\"s2\">\"</span><span class=\"nv\">$destination_file</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n    </span><span class=\"nb\">echo</span> <span class=\"s2\">\"源文件 '</span><span class=\"nv\">$source_file</span><span class=\"s2\">' 不存在。\"</span>\n    <span class=\"nb\">exit </span>1\n<span class=\"k\">fi</span>\n\n<span class=\"c\">#保证每条记录都有一个回车（最后一行如果没有回车，会被忽略）</span>\n<span class=\"k\">while </span><span class=\"nv\">IFS</span><span class=\"o\">=</span> <span class=\"nb\">read</span> <span class=\"nt\">-r</span> source_path <span class=\"o\">&amp;&amp;</span> <span class=\"nv\">IFS</span><span class=\"o\">=</span> <span class=\"nb\">read</span> <span class=\"nt\">-r</span> destination_folder &lt;&amp;3<span class=\"p\">;</span> <span class=\"k\">do\n    </span>source_paths+<span class=\"o\">=(</span><span class=\"s2\">\"</span><span class=\"nv\">$source_path</span><span class=\"s2\">\"</span><span class=\"o\">)</span>\n    destination_paths+<span class=\"o\">=(</span><span class=\"s2\">\"</span><span class=\"nv\">$destination_folder</span><span class=\"s2\">\"</span><span class=\"o\">)</span>\n<span class=\"k\">done</span> &lt; <span class=\"nv\">$source_file</span> 3&lt; <span class=\"nv\">$destination_file</span>\n\n<span class=\"c\"># 输出数组长度</span>\n<span class=\"nb\">echo</span> <span class=\"s2\">\"源文件路径数组长度：</span><span class=\"k\">${#</span><span class=\"nv\">source_paths</span><span class=\"p\">[@]</span><span class=\"k\">}</span><span class=\"s2\">\"</span>\n<span class=\"nb\">echo</span> <span class=\"s2\">\"目标文件夹路径数组长度：</span><span class=\"k\">${#</span><span class=\"nv\">destination_paths</span><span class=\"p\">[@]</span><span class=\"k\">}</span><span class=\"s2\">\"</span>\n\n<span class=\"c\">#exit 0</span>\n<span class=\"c\"># 遍历索引</span>\n<span class=\"k\">for </span>index <span class=\"k\">in</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"p\">!source_paths[@]</span><span class=\"k\">}</span><span class=\"s2\">\"</span><span class=\"p\">;</span> <span class=\"k\">do\n    </span><span class=\"nb\">echo</span> <span class=\"s2\">\"遍历目标文件夹路径数组,index=\"</span><span class=\"nv\">$index</span>\n    <span class=\"nv\">source_path</span><span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">source_paths</span><span class=\"p\">[</span><span class=\"nv\">$index</span><span class=\"p\">]</span><span class=\"k\">}</span><span class=\"s2\">\"</span>\n    <span class=\"nv\">destination_path</span><span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">destination_paths</span><span class=\"p\">[</span><span class=\"nv\">$index</span><span class=\"p\">]</span><span class=\"k\">}</span><span class=\"s2\">\"</span>\n\n    <span class=\"c\"># 构建目标文件的完整路径</span>\n<span class=\"c\">#    destination_path=\"${destination_folder}${source_path}\"</span>\n\n    <span class=\"c\"># 检查目标文件是否存在，如果存在则删除</span>\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-e</span> <span class=\"s2\">\"</span><span class=\"nv\">$destination_path</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">rm</span> <span class=\"s2\">\"</span><span class=\"nv\">$destination_path</span><span class=\"s2\">\"</span>\n    <span class=\"k\">fi</span>\n\n    <span class=\"c\"># 确保目标文件夹存在</span>\n    <span class=\"nb\">mkdir</span> <span class=\"nt\">-p</span> <span class=\"s2\">\"</span><span class=\"si\">$(</span><span class=\"nb\">dirname</span> <span class=\"s2\">\"</span><span class=\"nv\">$destination_path</span><span class=\"s2\">\"</span><span class=\"si\">)</span><span class=\"s2\">\"</span>\n\n    <span class=\"c\"># 移动源文件到目标路径</span>\n    <span class=\"nb\">mv</span> <span class=\"s2\">\"</span><span class=\"nv\">$source_path</span><span class=\"s2\">\"</span> <span class=\"s2\">\"</span><span class=\"nv\">$destination_path</span><span class=\"s2\">\"</span>\n<span class=\"k\">done\n\n</span><span class=\"nb\">echo</span> <span class=\"s2\">\"文件移动完成。\"</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h4 id=\"313-执行\">3.1.3 执行</h4>\n\n<p>将pod仓库的文件移动回主工程的调用方式：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>sh merge.sh merge_pods_files.txt merge_project_files.txt\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>解决完冲突后将主工程的上述文件移动回组件库</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>sh merge.sh merge_project_files.txt merge_pods_files.txt\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h4 id=\"314-收尾\">3.1.4 收尾</h4>\n\n<ul>\n  <li>解决完冲突，Pod仓库会得到从主干(其他功能分支)合并的最新类的修改版本，需要提交到对应迁移Pod仓库</li>\n  <li>主工程Project文件保留迁移后的版本，可以得到组件化改造后的Project的文件结构</li>\n  <li>再执行一次之前提到的寻找Project未引用，但是还存在的类的脚本进行最后的清理</li>\n</ul>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n</pre></td><td class=\"rouge-code\"><pre><span class=\"k\">function </span>main<span class=\"o\">()</span> <span class=\"o\">{</span>\n    \n    <span class=\"c\"># 设置项目目录</span>\n    <span class=\"nv\">project_directory</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$1</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then</span>\n        <span class=\"c\">#未传参为当前目录</span>\n        <span class=\"nv\">project_directory</span><span class=\"o\">=</span><span class=\"nb\">.</span>\n    <span class=\"k\">fi</span>\n\n    <span class=\"c\"># 设置其他目录</span>\n    <span class=\"nv\">parent_path</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">dirname</span> <span class=\"s2\">\"</span><span class=\"nv\">$project_directory</span><span class=\"s2\">\"</span><span class=\"si\">)</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"project 路径：\"</span><span class=\"nv\">$parent_path</span>\n    \n    <span class=\"nv\">current_dir</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">basename</span> <span class=\"s2\">\"</span><span class=\"nv\">$project_directory</span><span class=\"s2\">\"</span><span class=\"si\">)</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"当前路径 文件夹名称：\"</span><span class=\"nv\">$current_dir</span>\n\n    \n    <span class=\"nv\">project_path</span><span class=\"o\">=</span><span class=\"si\">$(</span>find <span class=\"s2\">\"</span><span class=\"nv\">$parent_path</span><span class=\"s2\">\"</span>/<span class=\"nv\">$current_dir</span>.xcodeproj <span class=\"nt\">-type</span> f <span class=\"se\">\\(</span> <span class=\"nt\">-name</span> <span class=\"s2\">\"*.pbxproj\"</span> <span class=\"se\">\\)</span><span class=\"si\">)</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"project 路径：\"</span><span class=\"nv\">$project_path</span>\n\n    <span class=\"nv\">all_file_path</span><span class=\"o\">=</span><span class=\"si\">$(</span>find <span class=\"s2\">\"</span><span class=\"nv\">$project_directory</span><span class=\"s2\">\"</span> <span class=\"nt\">-type</span> f <span class=\"se\">\\(</span> <span class=\"nt\">-name</span> <span class=\"s2\">\"*.h\"</span> <span class=\"se\">\\)</span><span class=\"si\">)</span>\n    <span class=\"nv\">all_file_path_cnt</span><span class=\"o\">=</span><span class=\"si\">$(</span>find <span class=\"s2\">\"</span><span class=\"nv\">$project_directory</span><span class=\"s2\">\"</span> <span class=\"nt\">-type</span> f <span class=\"se\">\\(</span> <span class=\"nt\">-name</span> <span class=\"s2\">\"*.h\"</span> <span class=\"se\">\\)</span> | <span class=\"nb\">wc</span> <span class=\"nt\">-l</span><span class=\"si\">)</span>\n\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"主工程 头文件数量：\"</span><span class=\"nv\">$all_file_path_cnt</span>\n\n    <span class=\"k\">for </span>src_file <span class=\"k\">in</span> <span class=\"nv\">$all_file_path</span><span class=\"p\">;</span> <span class=\"k\">do</span>\n    <span class=\"c\">#    echo $src_file</span>\n        <span class=\"nv\">filename</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">basename</span> <span class=\"s2\">\"</span><span class=\"nv\">$src_file</span><span class=\"s2\">\"</span> .h<span class=\"si\">)</span>\n        <span class=\"k\">if</span>  <span class=\"o\">!</span> <span class=\"nb\">grep</span> <span class=\"nt\">-q</span> <span class=\"s2\">\"</span><span class=\"se\">\\b</span><span class=\"nv\">$filename</span><span class=\"se\">\\b</span><span class=\"s2\">\"</span> <span class=\"s2\">\"</span><span class=\"nv\">$project_path</span><span class=\"s2\">\"</span><span class=\"p\">;</span>  <span class=\"k\">then\n            </span><span class=\"nb\">echo</span> <span class=\"s2\">\"project不包含：\"</span><span class=\"nv\">$src_file</span>\n        <span class=\"k\">fi\n    done</span>\n<span class=\"o\">}</span>\n\n\nmain <span class=\"nv\">$1</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>传入工程(Project文件所在的目录)路径：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>sh find_all_file_no_project.sh /Users/username/Documents/Project/git/Inner/Demo/Release/Demo-IOS/ProjectiOS/ProjectiOS \n</pre></td></tr></tbody></table></code></pre></div></div>\n\n","name":"2023-10-07-组件化之分支合并.md","previous":{"id":"/2023/09/12/iOS-OC-Swift混编","tags":[],"relative_path":"_posts/2023-09-12-iOS-OC-Swift混编.md","collection":"posts","content":"<h1 id=\"pod仓库内oc与swift调用\">Pod仓库内OC与Swift调用</h1>\n\n<h2 id=\"1pod内oc调swift\">1、Pod内OC调Swift</h2>\n\n<p>Pod内Swift类的声明需加上</p>\n\n<div class=\"language-swift highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre><span class=\"kd\">@objcMembers</span> <span class=\"kd\">open</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>例如：</p>\n\n<div class=\"language-swift highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n</pre></td><td class=\"rouge-code\"><pre><span class=\"kd\">import</span> <span class=\"kt\">Foundation</span>\n\n<span class=\"kd\">@objcMembers</span> <span class=\"kd\">open</span> <span class=\"kd\">class</span> <span class=\"kt\">SwiftBridge</span> <span class=\"p\">:</span> <span class=\"kt\">UIViewController</span> <span class=\"p\">{</span>\n    <span class=\"kd\">open</span> <span class=\"k\">override</span> <span class=\"kd\">func</span> <span class=\"nf\">viewDidLoad</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n        <span class=\"k\">self</span><span class=\"o\">.</span><span class=\"n\">view</span><span class=\"o\">.</span><span class=\"n\">backgroundColor</span> <span class=\"o\">=</span> <span class=\"kt\">UIColor</span><span class=\"o\">.</span><span class=\"n\">red</span>        \n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>在需要使用的类上 import</p>\n\n<pre><code class=\"language-objective-c\">  #import \"YourPodName/YourPodName-Swift.h\"\n</code></pre>\n\n<p>如果需要在多处调用也可以在podspec中添加</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n</pre></td><td class=\"rouge-code\"><pre>  <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">prefix_header_contents</span> <span class=\"o\">=</span> <span class=\"o\">&lt;&lt;-</span><span class=\"no\">EOS</span><span class=\"sh\">\n  #if __has_include(&lt;xxxModule/xxxModule-Swift.h&gt;)\n  #import &lt;xxxModule/xxxModule-Swift.h&gt;\n  #else\n  #import \"xxxModule/xxxModule-Swift.h\"\n  #endif\n</span><span class=\"no\">  EOS</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>XXX-Swift.h 机制可以参考Build Setting里的key value</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>Objective-C Generated Interface Header Name=$(SWIFT_MODULE_NAME)-Swift.h\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p><img src=\"/img/iosswiift/image1.png\" alt=\"1\" /></p>\n\n<h2 id=\"2pod内swift调oc\">2、Pod内Swift调OC</h2>\n\n<p>Pod指定了source_files，其中.h文件会被加载到xxxModule-umbrella 中，在Pod内部可以直接访问</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre><span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">source_files</span> <span class=\"o\">=</span> <span class=\"s1\">'xxxModule/Classes/**/*'</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>xxxModule-umbrella.h</p>\n\n<div class=\"language-objc highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n</pre></td><td class=\"rouge-code\"><pre><span class=\"cp\">#ifdef __OBJC__\n#import &lt;UIKit/UIKit.h&gt;\n#else\n#ifndef FOUNDATION_EXPORT\n#if defined(__cplusplus)\n#define FOUNDATION_EXPORT extern \"C\"\n#else\n#define FOUNDATION_EXPORT extern\n#endif\n#endif\n#endif\n</span>\n<span class=\"cp\">#import \"OCForSwiftUse.h\"\n#import \"xxxModule.h\"\n</span>\n<span class=\"n\">FOUNDATION_EXPORT</span> <span class=\"kt\">double</span> <span class=\"n\">xxxModuleVersionNumber</span><span class=\"p\">;</span>\n<span class=\"n\">FOUNDATION_EXPORT</span> <span class=\"k\">const</span> <span class=\"kt\">unsigned</span> <span class=\"kt\">char</span> <span class=\"n\">xxxModuleVersionString</span><span class=\"p\">[];</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>swift文件:</p>\n\n<div class=\"language-swift highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n</pre></td><td class=\"rouge-code\"><pre><span class=\"kd\">import</span> <span class=\"kt\">Foundation</span>\n\n<span class=\"kd\">@objcMembers</span> <span class=\"kd\">open</span> <span class=\"kd\">class</span> <span class=\"kt\">SwiftBridge</span> <span class=\"p\">:</span> <span class=\"kt\">UIViewController</span> <span class=\"p\">{</span>\n    <span class=\"kd\">open</span> <span class=\"k\">override</span> <span class=\"kd\">func</span> <span class=\"nf\">viewDidLoad</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n        <span class=\"k\">self</span><span class=\"o\">.</span><span class=\"n\">view</span><span class=\"o\">.</span><span class=\"n\">backgroundColor</span> <span class=\"o\">=</span> <span class=\"kt\">UIColor</span><span class=\"o\">.</span><span class=\"n\">red</span>\n        <span class=\"k\">let</span> <span class=\"nv\">ocs</span> <span class=\"o\">=</span> <span class=\"kt\">OCForSwiftUse</span><span class=\"p\">()</span>\n        <span class=\"c1\">// other codes</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n","name":"2023-09-12-iOS-OC-Swift混编.md","previous":{"id":"/2023/08/17/iOS组件化-业务组件准备篇","tags":[],"relative_path":"_posts/2023-08-17-iOS组件化-业务组件准备篇.md","collection":"posts","name":"2023-08-17-iOS组件化-业务组件准备篇.md","url":"/2023/08/17/iOS%E7%BB%84%E4%BB%B6%E5%8C%96-%E4%B8%9A%E5%8A%A1%E7%BB%84%E4%BB%B6%E5%87%86%E5%A4%87%E7%AF%87/","title":"iOS组件化之：业务组件准备篇","date":"2023-08-17 00:00:00 +0800","categories":[],"path":"_posts/2023-08-17-iOS组件化-业务组件准备篇.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/home-bg-geek.jpg","slug":"iOS组件化-业务组件准备篇","ext":".md"},"output":"<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"google-site-verification\" content=\"xBT4GhYoi5qRD5tr338pgPM5OWHHIDR6mNg1a3euekI\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, viewport-fit=cover\">\n    <meta name=\"description\" content=\"与你一起发现更大的世界。\">\n    <meta name=\"keywords\"  content=\"PaysonChen,iOS,流媒体\">\n    <meta name=\"theme-color\" content=\"#000000\">\n    \n    <!-- Open Graph -->\n    <meta property=\"og:title\" content=\"Pod仓库内OC与Swift调用 - PaysonChen的博客 | PaysonChen Blog\">\n    \n    <meta property=\"og:type\" content=\"article\">\n    <meta property=\"og:description\" content=\"Pod仓库内OC与Swift调用\n\">\n    \n    \n    <meta property=\"article:published_time\" content=\"2023-09-12T00:00:00Z\">\n    \n    \n    <meta property=\"article:author\" content=\"PaysonChen\">\n    \n    \n    \n    <meta property=\"og:image\" content=\"http://localhost:4000\">\n    <meta property=\"og:url\" content=\"http://localhost:4000/2023/09/12/iOS-OC-Swift%E6%B7%B7%E7%BC%96/\">\n    <meta property=\"og:site_name\" content=\"PaysonChen的博客 | PaysonChen Blog\">\n    \n    <title>Pod仓库内OC与Swift调用 - PaysonChen的博客 | PaysonChen Blog</title>\n\n    <!-- Web App Manifest -->\n    <link rel=\"manifest\" href=\"/pwa/manifest.json\">\n\n    <!-- Favicon -->\n    <link rel=\"shortcut icon\" href=\"/img/favicon.ico\">\n    \n    <!-- Canonical URL -->\n    <link rel=\"canonical\" href=\"http://localhost:4000/2023/09/12/iOS-OC-Swift%E6%B7%B7%E7%BC%96/\">\n\n    <!-- Bootstrap Core CSS -->\n    <link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\">\n\n    <!-- Custom CSS -->\n    <link rel=\"stylesheet\" href=\"/css/hux-blog.min.css\">\n\n    <!-- Custom Fonts -->\n    <!-- <link href=\"http://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\"> -->\n    <!-- Hux change font-awesome CDN to qiniu -->\n    <link href=\"//cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\">\n\n\n    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->\n    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->\n    <!--[if lt IE 9]>\n        <script src=\"https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js\"></script>\n        <script src=\"https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js\"></script>\n    <![endif]-->\n\n    <!-- ga & ba script hoook -->\n    <script></script>\n</head>\n\n\n<!-- hack iOS CSS :active style -->\n<body ontouchstart=\"\">\n\n    <!-- Navigation -->\n\n    <nav class=\"navbar navbar-default navbar-custom navbar-fixed-top\">\n        \n        <div class=\"container-fluid\">\n            <!-- Brand and toggle get grouped for better mobile display -->\n            <div class=\"navbar-header page-scroll\">\n                <button type=\"button\" class=\"navbar-toggle\">\n                    <span class=\"sr-only\">Toggle navigation</span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                </button>\n                <a class=\"navbar-brand\" href=\"/\">PaysonChen Blog</a>\n            </div>\n\n            <!-- Collect the nav links, forms, and other content for toggling -->\n            <div id=\"huxblog_navbar\">\n                <div class=\"navbar-collapse\">\n                    <ul class=\"nav navbar-nav navbar-right\">\n                        <li>\n                            <a href=\"/\">Home</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        <li>\n                            <a href=\"/about/\">About</a>\n                        </li>\n                        \n                        \n                        \n                        <li>\n                            <a href=\"/archive/\">Archive</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        <li class=\"search-icon\">\n                            <a href=\"javascript:void(0)\">\n                                <i class=\"fa fa-search\"></i>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n            <!-- /.navbar-collapse -->\n        </div>\n        <!-- /.container -->\n    </nav>\n\n    <script>\n        // Drop Bootstarp low-performance Navbar\n        // Use customize navbar with high-quality material design animation\n        // in high-perf jank-free CSS3 implementation\n        var $body = document.body;\n        var $toggle = document.querySelector('.navbar-toggle');\n        var $navbar = document.querySelector('#huxblog_navbar');\n        var $collapse = document.querySelector('.navbar-collapse');\n\n        var __HuxNav__ = {\n            close: function () {\n                $navbar.className = \" \";\n                // wait until animation end.\n                setTimeout(function () {\n                    // prevent frequently toggle\n                    if ($navbar.className.indexOf('in') < 0) {\n                        $collapse.style.height = \"0px\"\n                    }\n                }, 400)\n            },\n            open: function () {\n                $collapse.style.height = \"auto\"\n                $navbar.className += \" in\";\n            }\n        }\n\n        // Bind Event\n        $toggle.addEventListener('click', function (e) {\n            if ($navbar.className.indexOf('in') > 0) {\n                __HuxNav__.close()\n            } else {\n                __HuxNav__.open()\n            }\n        })\n\n        /**\n         * Since Fastclick is used to delegate 'touchstart' globally\n         * to hack 300ms delay in iOS by performing a fake 'click',\n         * Using 'e.stopPropagation' to stop 'touchstart' event from \n         * $toggle/$collapse will break global delegation.\n         * \n         * Instead, we use a 'e.target' filter to prevent handler\n         * added to document close HuxNav.  \n         *\n         * Also, we use 'click' instead of 'touchstart' as compromise\n         */\n        document.addEventListener('click', function (e) {\n            if (e.target == $toggle) return;\n            if (e.target.className == 'icon-bar') return;\n            __HuxNav__.close();\n        })\n    </script>\n    <!-- Search -->\n<div class=\"search-page\">\n  <div class=\"search-icon-close-container\">\n    <span class=\"search-icon-close\">\n      <i class=\"fa fa-chevron-down\"></i>\n    </span>\n  </div>\n  <div class=\"search-main container\">\n    <div class=\"row\">\n      <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n        <form></form>\n        <input type=\"text\" id=\"search-input\" placeholder=\"$ grep...\">\n        </form>\n        <div id=\"search-results\" class=\"mini-post-list\"></div>\n      </div>\n    </div>\n  </div>\n</div>\n\n    <!-- Image to hack wechat -->\n<!-- <img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\"> -->\n<!-- <img src=\"/img/home-bg-geek.jpg\" width=\"0\" height=\"0\"> -->\n\n<!-- Post Header -->\n\n\n\n<style type=\"text/css\">\n    header.intro-header{\n        position: relative;\n        background-image: url('/img/home-bg-geek.jpg');\n        background: ;\n    }\n\n    \n</style>\n\n<header class=\"intro-header\" >\n\n    <div class=\"header-mask\"></div>\n    \n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <div class=\"post-heading\">\n                    <div class=\"tags\">\n                        \n                    </div>\n                    <h1>Pod仓库内OC与Swift调用</h1>\n                    \n                    <h2 class=\"subheading\"></h2>\n                    <span class=\"meta\">Posted by PaysonChen on September 12, 2023</span>\n                </div>\n            </div>\n        </div>\n    </div>\n</header>\n\n\n\n\n\n\n<!-- Post Content -->\n<article>\n    <div class=\"container\">\n        <div class=\"row\">\n\n    <!-- Post Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                post-container\">\n\n                <!-- Multi-Lingual -->\n                \n\n\t\t\t\t<h1 id=\"pod仓库内oc与swift调用\">Pod仓库内OC与Swift调用</h1>\n\n<h2 id=\"1pod内oc调swift\">1、Pod内OC调Swift</h2>\n\n<p>Pod内Swift类的声明需加上</p>\n\n<div class=\"language-swift highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre><span class=\"kd\">@objcMembers</span> <span class=\"kd\">open</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>例如：</p>\n\n<div class=\"language-swift highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n</pre></td><td class=\"rouge-code\"><pre><span class=\"kd\">import</span> <span class=\"kt\">Foundation</span>\n\n<span class=\"kd\">@objcMembers</span> <span class=\"kd\">open</span> <span class=\"kd\">class</span> <span class=\"kt\">SwiftBridge</span> <span class=\"p\">:</span> <span class=\"kt\">UIViewController</span> <span class=\"p\">{</span>\n    <span class=\"kd\">open</span> <span class=\"k\">override</span> <span class=\"kd\">func</span> <span class=\"nf\">viewDidLoad</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n        <span class=\"k\">self</span><span class=\"o\">.</span><span class=\"n\">view</span><span class=\"o\">.</span><span class=\"n\">backgroundColor</span> <span class=\"o\">=</span> <span class=\"kt\">UIColor</span><span class=\"o\">.</span><span class=\"n\">red</span>        \n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>在需要使用的类上 import</p>\n\n<pre><code class=\"language-objective-c\">  #import \"YourPodName/YourPodName-Swift.h\"\n</code></pre>\n\n<p>如果需要在多处调用也可以在podspec中添加</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n</pre></td><td class=\"rouge-code\"><pre>  <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">prefix_header_contents</span> <span class=\"o\">=</span> <span class=\"o\">&lt;&lt;-</span><span class=\"no\">EOS</span><span class=\"sh\">\n  #if __has_include(&lt;xxxModule/xxxModule-Swift.h&gt;)\n  #import &lt;xxxModule/xxxModule-Swift.h&gt;\n  #else\n  #import \"xxxModule/xxxModule-Swift.h\"\n  #endif\n</span><span class=\"no\">  EOS</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>XXX-Swift.h 机制可以参考Build Setting里的key value</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>Objective-C Generated Interface Header Name=$(SWIFT_MODULE_NAME)-Swift.h\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p><img src=\"/img/iosswiift/image1.png\" alt=\"1\" /></p>\n\n<h2 id=\"2pod内swift调oc\">2、Pod内Swift调OC</h2>\n\n<p>Pod指定了source_files，其中.h文件会被加载到xxxModule-umbrella 中，在Pod内部可以直接访问</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre><span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">source_files</span> <span class=\"o\">=</span> <span class=\"s1\">'xxxModule/Classes/**/*'</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>xxxModule-umbrella.h</p>\n\n<div class=\"language-objc highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n</pre></td><td class=\"rouge-code\"><pre><span class=\"cp\">#ifdef __OBJC__\n#import &lt;UIKit/UIKit.h&gt;\n#else\n#ifndef FOUNDATION_EXPORT\n#if defined(__cplusplus)\n#define FOUNDATION_EXPORT extern \"C\"\n#else\n#define FOUNDATION_EXPORT extern\n#endif\n#endif\n#endif\n</span>\n<span class=\"cp\">#import \"OCForSwiftUse.h\"\n#import \"xxxModule.h\"\n</span>\n<span class=\"n\">FOUNDATION_EXPORT</span> <span class=\"kt\">double</span> <span class=\"n\">xxxModuleVersionNumber</span><span class=\"p\">;</span>\n<span class=\"n\">FOUNDATION_EXPORT</span> <span class=\"k\">const</span> <span class=\"kt\">unsigned</span> <span class=\"kt\">char</span> <span class=\"n\">xxxModuleVersionString</span><span class=\"p\">[];</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>swift文件:</p>\n\n<div class=\"language-swift highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n</pre></td><td class=\"rouge-code\"><pre><span class=\"kd\">import</span> <span class=\"kt\">Foundation</span>\n\n<span class=\"kd\">@objcMembers</span> <span class=\"kd\">open</span> <span class=\"kd\">class</span> <span class=\"kt\">SwiftBridge</span> <span class=\"p\">:</span> <span class=\"kt\">UIViewController</span> <span class=\"p\">{</span>\n    <span class=\"kd\">open</span> <span class=\"k\">override</span> <span class=\"kd\">func</span> <span class=\"nf\">viewDidLoad</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n        <span class=\"k\">self</span><span class=\"o\">.</span><span class=\"n\">view</span><span class=\"o\">.</span><span class=\"n\">backgroundColor</span> <span class=\"o\">=</span> <span class=\"kt\">UIColor</span><span class=\"o\">.</span><span class=\"n\">red</span>\n        <span class=\"k\">let</span> <span class=\"nv\">ocs</span> <span class=\"o\">=</span> <span class=\"kt\">OCForSwiftUse</span><span class=\"p\">()</span>\n        <span class=\"c1\">// other codes</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n\n\n                <hr style=\"visibility: hidden;\">\n                <ul class=\"pager\">\n                    \n                    <li class=\"previous\">\n                        <a href=\"/2023/08/17/iOS%E7%BB%84%E4%BB%B6%E5%8C%96-%E4%B8%9A%E5%8A%A1%E7%BB%84%E4%BB%B6%E5%87%86%E5%A4%87%E7%AF%87/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"iOS组件化之：业务组件准备篇\">\n                        Previous<br>\n                        <span>iOS组件化之：业务组件准备篇</span>\n                        </a>\n                    </li>\n                    \n                    \n                    <li class=\"next\">\n                        <a href=\"/2023/10/07/%E7%BB%84%E4%BB%B6%E5%8C%96%E4%B9%8B%E5%88%86%E6%94%AF%E5%90%88%E5%B9%B6/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"组件化实践之：主工程抽离代码分支合并用\">\n                        Next<br>\n                        <span>组件化实践之：主工程抽离代码分支合并用</span>\n                        </a>\n                    </li>\n                    \n                </ul>\n                <hr style=\"visibility: hidden;\">\n\n                \n                <!-- disqus 评论框 start -->\n                <div class=\"comment\">\n                    <div id=\"disqus_thread\" class=\"disqus-thread\"></div>\n                </div>\n                <!-- disqus 评论框 end -->\n                \n\n                \n            </div>  \n\n    <!-- Side Catalog Container -->\n        \n            <div class=\"\n                col-lg-2 col-lg-offset-0\n                visible-lg-block\n                sidebar-container\n                catalog-container\">\n                <div class=\"side-catalog\">\n                    <hr class=\"hidden-sm hidden-xs\">\n                    <h5>\n                        <a class=\"catalog-toggle\" href=\"#\">CATALOG</a>\n                    </h5>\n                    <ul class=\"catalog-body\"></ul>\n                </div>\n            </div>\n        \n\n    <!-- Sidebar Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                sidebar-container\">\n\n                <!-- Featured Tags -->\n                \n\n\n<section>\n    \n        <hr class=\"hidden-sm hidden-xs\">\n    \n    <h5><a href=\"/archive/\">FEATURED TAGS</a></h5>\n    <div class=\"tags\">\n        \n        \n        \n        \n        \n    </div>\n</section>\n\n\n                <!-- Friends Blog -->\n                \n            </div>\n        </div>\n    </div>\n</article>\n\n<!-- add support for mathjax by voleking-->\n\n\n\n\n\n\n<!-- disqus 公共JS代码 start (一个网页只需插入一次) -->\n<script type=\"text/javascript\">\n    /* * * CONFIGURATION VARIABLES * * */\n    var disqus_shortname = \"Cyp\";\n    var disqus_identifier = \"/2023/09/12/iOS-OC-Swift混编\";\n    var disqus_url = \"http://localhost:4000/2023/09/12/iOS-OC-Swift%E6%B7%B7%E7%BC%96/\";\n\n    (function() {\n        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;\n        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';\n        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);\n    })();\n</script>\n<!-- disqus 公共JS代码 end -->\n\n\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n      var d = document, t = 'script',\n          o = d.createElement(t),\n          s = d.getElementsByTagName(t)[0];\n      o.src = u;\n      if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n      s.parentNode.insertBefore(o, s);\n    }\n</script>\n<!-- anchor-js, Doc:http://bryanbraun.github.io/anchorjs/ -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/anchor-js/1.1.1/anchor.min.js\",function(){\n        anchors.options = {\n          visible: 'hover',\n          placement: 'right',\n          // icon: '#'\n        };\n        anchors.add().remove('.intro-header h1').remove('.subheading').remove('.sidebar-container h5');\n    })\n</script>\n<style>\n    /* place left on bigger screen */\n    @media all and (min-width: 800px) {\n        .anchorjs-link{\n            position: absolute;\n            left: -0.75em;\n            font-size: 1.1em;\n            margin-top : -0.1em;\n        }\n    }\n</style>\n\n\n\n    <!-- Footer -->\n<footer>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <!-- SNS Link -->\n                \n\n\n<ul class=\"list-inline text-center\">\n\n\n  \n  \n  \n  \n  \n  \n  \n</ul>\n\n                <p class=\"copyright text-muted\">\n                    Copyright &copy; PaysonChen Blog 2024\n                    <br>\n                    <!-- Powered by <a href=\"http://huangxuan.me\">Hux Blog</a> | -->\n                 <!--    <iframe style=\"margin-left: 2px; margin-bottom:-5px;\" frameborder=\"0\" scrolling=\"0\" width=\"100px\"\n                        height=\"20px\"\n                        src=\"https://ghbtns.com/github-btn.html?user=huxpro&repo=huxpro.github.io&type=star&count=true\">\n                    </iframe> -->\n                </p>\n            </div>\n        </div>\n    </div>\n</footer>\n\n<!-- jQuery -->\n<script src=\"/js/jquery.min.js \"></script>\n\n<!-- Bootstrap Core JavaScript -->\n<!-- Currently, only navbar scroll-down effect at desktop still depends on this -->\n<script src=\"/js/bootstrap.min.js \"></script>\n\n<!-- Custom Theme JavaScript -->\n<script src=\"/js/hux-blog.min.js \"></script>\n\n<!-- Simple Jekyll Search -->\n<script src=\"/js/simple-jekyll-search.min.js\"></script>\n\n<!-- Service Worker -->\n\n<script src=\"/js/snackbar.js \"></script>\n<script src=\"/js/sw-registration.js \"></script>\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n        var d = document, t = 'script',\n            o = d.createElement(t),\n            s = d.getElementsByTagName(t)[0];\n        o.src = u;\n        if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n        s.parentNode.insertBefore(o, s);\n    }\n</script>\n\n<!--\n     Because of the native support for backtick-style fenced code blocks\n     right within the Markdown is landed in Github Pages,\n     From V1.6, There is no need for Highlight.js,\n     so Huxblog drops it officially.\n\n     - https://github.com/blog/2100-github-pages-now-faster-and-simpler-with-jekyll-3-0\n     - https://help.github.com/articles/creating-and-highlighting-code-blocks/\n     - https://github.com/jneen/rouge/wiki/list-of-supported-languages-and-lexers\n-->\n<!--\n    <script>\n        async(\"http://cdn.bootcss.com/highlight.js/8.6/highlight.min.js\", function(){\n            hljs.initHighlightingOnLoad();\n        })\n    </script>\n    <link href=\"http://cdn.bootcss.com/highlight.js/8.6/styles/github.min.css\" rel=\"stylesheet\">\n-->\n\n\n\n\n\n\n\n<!--fastClick.js -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/fastclick/1.0.6/fastclick.min.js\", function () {\n        var $nav = document.querySelector(\"nav\");\n        if ($nav) FastClick.attach($nav);\n    })\n</script>\n\n\n<!-- Google Analytics -->\n\n\n\n<!-- Baidu Tongji -->\n\n\n\n<!-- Side Catalog -->\n\n<script type=\"text/javascript\">\n    function generateCatalog(selector) {\n\n        // interop with multilangual \n        if ('' == 'true') {\n            _containerSelector = 'div.post-container.active'\n        } else {\n            _containerSelector = 'div.post-container'\n        }\n\n        // init\n        var P = $(_containerSelector), a, n, t, l, i, c;\n        a = P.find('h1,h2,h3,h4,h5,h6');\n\n        // clean\n        $(selector).html('')\n\n        // appending\n        a.each(function () {\n            n = $(this).prop('tagName').toLowerCase();\n            i = \"#\" + $(this).prop('id');\n            t = $(this).text();\n            c = $('<a href=\"' + i + '\" rel=\"nofollow\">' + t + '</a>');\n            l = $('<li class=\"' + n + '_nav\"></li>').append(c);\n            $(selector).append(l);\n        });\n        return true;\n    }\n\n    generateCatalog(\".catalog-body\");\n\n    // toggle side catalog\n    $(\".catalog-toggle\").click((function (e) {\n        e.preventDefault();\n        $('.side-catalog').toggleClass(\"fold\")\n    }))\n\n    /*\n     * Doc: https://github.com/davist11/jQuery-One-Page-Nav\n     * Fork by Hux to support padding\n     */\n    async(\"/js/jquery.nav.js\", function () {\n        $('.catalog-body').onePageNav({\n            currentClass: \"active\",\n            changeHash: !1,\n            easing: \"swing\",\n            filter: \"\",\n            scrollSpeed: 700,\n            scrollOffset: 0,\n            scrollThreshold: .2,\n            begin: null,\n            end: null,\n            scrollChange: null,\n            padding: 80\n        });\n    });\n</script>\n\n\n\n<!-- Multi-Lingual -->\n\n\n<!-- Simple Jekyll Search -->\n<script>\n    // https://stackoverflow.com/questions/1912501/unescape-html-entities-in-javascript\n    function htmlDecode(input) {\n        var e = document.createElement('textarea');\n        e.innerHTML = input;\n        // handle case of empty input\n        return e.childNodes.length === 0 ? \"\" : e.childNodes[0].nodeValue;\n    }\n\n    SimpleJekyllSearch({\n        searchInput: document.getElementById('search-input'),\n        resultsContainer: document.getElementById('search-results'),\n        json: '/search.json',\n        searchResultTemplate: '<div class=\"post-preview item\"><a href=\"{url}\"><h2 class=\"post-title\">{title}</h2><h3 class=\"post-subtitle\">{subtitle}</h3><hr></a></div>',\n        noResultsText: 'No results',\n        limit: 50,\n        fuzzy: false,\n        // a hack to get escaped subtitle unescaped. for some reason, \n        // post.subtitle w/o escape filter nuke entire search.\n        templateMiddleware: function (prop, value, template) {\n            if (prop === 'subtitle' || prop === 'title') {\n                if (value.indexOf(\"code\")) {\n                    return htmlDecode(value);\n                } else {\n                    return value;\n                }\n            }\n        }\n    });\n\n    $(document).ready(function () {\n        var $searchPage = $('.search-page');\n        var $searchOpen = $('.search-icon');\n        var $searchClose = $('.search-icon-close');\n        var $searchInput = $('#search-input');\n        var $body = $('body');\n\n        $searchOpen.on('click', function (e) {\n            e.preventDefault();\n            $searchPage.toggleClass('search-active');\n            var prevClasses = $body.attr('class') || '';\n            setTimeout(function () {\n                $body.addClass('no-scroll');\n            }, 400)\n\n            if ($searchPage.hasClass('search-active')) {\n                $searchClose.on('click', function (e) {\n                    e.preventDefault();\n                    $searchPage.removeClass('search-active');\n                    $body.attr('class', prevClasses);  // from closure \n                });\n                $searchInput.focus();\n            }\n        });\n    });\n</script>\n\n\n<!-- Image to hack wechat -->\n<img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\" />\n<!-- Migrate from head to bottom, no longer block render and still work -->\n\n</body>\n\n</html>\n","excerpt":"<h1 id=\"pod仓库内oc与swift调用\">Pod仓库内OC与Swift调用</h1>\n","url":"/2023/09/12/iOS-OC-Swift%E6%B7%B7%E7%BC%96/","next":{"id":"/2023/10/07/组件化之分支合并","tags":[],"relative_path":"_posts/2023-10-07-组件化之分支合并.md","collection":"posts","name":"2023-10-07-组件化之分支合并.md","url":"/2023/10/07/%E7%BB%84%E4%BB%B6%E5%8C%96%E4%B9%8B%E5%88%86%E6%94%AF%E5%90%88%E5%B9%B6/","title":"组件化实践之：主工程抽离代码分支合并用","date":"2023-10-07 00:00:00 +0800","categories":[],"path":"_posts/2023-10-07-组件化之分支合并.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/home-bg-geek.jpg","slug":"组件化之分支合并","ext":".md"},"title":"Pod仓库内OC与Swift调用","date":"2023-09-12 00:00:00 +0800","categories":[],"path":"_posts/2023-09-12-iOS-OC-Swift混编.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/home-bg-geek.jpg","slug":"iOS-OC-Swift混编","ext":".md"},"output":"<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"google-site-verification\" content=\"xBT4GhYoi5qRD5tr338pgPM5OWHHIDR6mNg1a3euekI\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, viewport-fit=cover\">\n    <meta name=\"description\" content=\"与你一起发现更大的世界。\">\n    <meta name=\"keywords\"  content=\"PaysonChen,iOS,流媒体\">\n    <meta name=\"theme-color\" content=\"#000000\">\n    \n    <!-- Open Graph -->\n    <meta property=\"og:title\" content=\"组件化实践之：主工程抽离代码分支合并用 - PaysonChen的博客 | PaysonChen Blog\">\n    \n    <meta property=\"og:type\" content=\"article\">\n    <meta property=\"og:description\" content=\"组件化实践之：主工程抽离代码分支合并\n\">\n    \n    \n    <meta property=\"article:published_time\" content=\"2023-10-07T00:00:00Z\">\n    \n    \n    <meta property=\"article:author\" content=\"PaysonChen\">\n    \n    \n    \n    <meta property=\"og:image\" content=\"http://localhost:4000\">\n    <meta property=\"og:url\" content=\"http://localhost:4000/2023/10/07/%E7%BB%84%E4%BB%B6%E5%8C%96%E4%B9%8B%E5%88%86%E6%94%AF%E5%90%88%E5%B9%B6/\">\n    <meta property=\"og:site_name\" content=\"PaysonChen的博客 | PaysonChen Blog\">\n    \n    <title>组件化实践之：主工程抽离代码分支合并用 - PaysonChen的博客 | PaysonChen Blog</title>\n\n    <!-- Web App Manifest -->\n    <link rel=\"manifest\" href=\"/pwa/manifest.json\">\n\n    <!-- Favicon -->\n    <link rel=\"shortcut icon\" href=\"/img/favicon.ico\">\n    \n    <!-- Canonical URL -->\n    <link rel=\"canonical\" href=\"http://localhost:4000/2023/10/07/%E7%BB%84%E4%BB%B6%E5%8C%96%E4%B9%8B%E5%88%86%E6%94%AF%E5%90%88%E5%B9%B6/\">\n\n    <!-- Bootstrap Core CSS -->\n    <link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\">\n\n    <!-- Custom CSS -->\n    <link rel=\"stylesheet\" href=\"/css/hux-blog.min.css\">\n\n    <!-- Custom Fonts -->\n    <!-- <link href=\"http://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\"> -->\n    <!-- Hux change font-awesome CDN to qiniu -->\n    <link href=\"//cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\">\n\n\n    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->\n    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->\n    <!--[if lt IE 9]>\n        <script src=\"https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js\"></script>\n        <script src=\"https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js\"></script>\n    <![endif]-->\n\n    <!-- ga & ba script hoook -->\n    <script></script>\n</head>\n\n\n<!-- hack iOS CSS :active style -->\n<body ontouchstart=\"\">\n\n    <!-- Navigation -->\n\n    <nav class=\"navbar navbar-default navbar-custom navbar-fixed-top\">\n        \n        <div class=\"container-fluid\">\n            <!-- Brand and toggle get grouped for better mobile display -->\n            <div class=\"navbar-header page-scroll\">\n                <button type=\"button\" class=\"navbar-toggle\">\n                    <span class=\"sr-only\">Toggle navigation</span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                </button>\n                <a class=\"navbar-brand\" href=\"/\">PaysonChen Blog</a>\n            </div>\n\n            <!-- Collect the nav links, forms, and other content for toggling -->\n            <div id=\"huxblog_navbar\">\n                <div class=\"navbar-collapse\">\n                    <ul class=\"nav navbar-nav navbar-right\">\n                        <li>\n                            <a href=\"/\">Home</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        <li>\n                            <a href=\"/about/\">About</a>\n                        </li>\n                        \n                        \n                        \n                        <li>\n                            <a href=\"/archive/\">Archive</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        <li class=\"search-icon\">\n                            <a href=\"javascript:void(0)\">\n                                <i class=\"fa fa-search\"></i>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n            <!-- /.navbar-collapse -->\n        </div>\n        <!-- /.container -->\n    </nav>\n\n    <script>\n        // Drop Bootstarp low-performance Navbar\n        // Use customize navbar with high-quality material design animation\n        // in high-perf jank-free CSS3 implementation\n        var $body = document.body;\n        var $toggle = document.querySelector('.navbar-toggle');\n        var $navbar = document.querySelector('#huxblog_navbar');\n        var $collapse = document.querySelector('.navbar-collapse');\n\n        var __HuxNav__ = {\n            close: function () {\n                $navbar.className = \" \";\n                // wait until animation end.\n                setTimeout(function () {\n                    // prevent frequently toggle\n                    if ($navbar.className.indexOf('in') < 0) {\n                        $collapse.style.height = \"0px\"\n                    }\n                }, 400)\n            },\n            open: function () {\n                $collapse.style.height = \"auto\"\n                $navbar.className += \" in\";\n            }\n        }\n\n        // Bind Event\n        $toggle.addEventListener('click', function (e) {\n            if ($navbar.className.indexOf('in') > 0) {\n                __HuxNav__.close()\n            } else {\n                __HuxNav__.open()\n            }\n        })\n\n        /**\n         * Since Fastclick is used to delegate 'touchstart' globally\n         * to hack 300ms delay in iOS by performing a fake 'click',\n         * Using 'e.stopPropagation' to stop 'touchstart' event from \n         * $toggle/$collapse will break global delegation.\n         * \n         * Instead, we use a 'e.target' filter to prevent handler\n         * added to document close HuxNav.  \n         *\n         * Also, we use 'click' instead of 'touchstart' as compromise\n         */\n        document.addEventListener('click', function (e) {\n            if (e.target == $toggle) return;\n            if (e.target.className == 'icon-bar') return;\n            __HuxNav__.close();\n        })\n    </script>\n    <!-- Search -->\n<div class=\"search-page\">\n  <div class=\"search-icon-close-container\">\n    <span class=\"search-icon-close\">\n      <i class=\"fa fa-chevron-down\"></i>\n    </span>\n  </div>\n  <div class=\"search-main container\">\n    <div class=\"row\">\n      <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n        <form></form>\n        <input type=\"text\" id=\"search-input\" placeholder=\"$ grep...\">\n        </form>\n        <div id=\"search-results\" class=\"mini-post-list\"></div>\n      </div>\n    </div>\n  </div>\n</div>\n\n    <!-- Image to hack wechat -->\n<!-- <img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\"> -->\n<!-- <img src=\"/img/home-bg-geek.jpg\" width=\"0\" height=\"0\"> -->\n\n<!-- Post Header -->\n\n\n\n<style type=\"text/css\">\n    header.intro-header{\n        position: relative;\n        background-image: url('/img/home-bg-geek.jpg');\n        background: ;\n    }\n\n    \n</style>\n\n<header class=\"intro-header\" >\n\n    <div class=\"header-mask\"></div>\n    \n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <div class=\"post-heading\">\n                    <div class=\"tags\">\n                        \n                    </div>\n                    <h1>组件化实践之：主工程抽离代码分支合并用</h1>\n                    \n                    <h2 class=\"subheading\"></h2>\n                    <span class=\"meta\">Posted by PaysonChen on October 7, 2023</span>\n                </div>\n            </div>\n        </div>\n    </div>\n</header>\n\n\n\n\n\n\n<!-- Post Content -->\n<article>\n    <div class=\"container\">\n        <div class=\"row\">\n\n    <!-- Post Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                post-container\">\n\n                <!-- Multi-Lingual -->\n                \n\n\t\t\t\t<h1 id=\"组件化实践之主工程抽离代码分支合并\">组件化实践之：主工程抽离代码分支合并</h1>\n\n<h2 id=\"1-背景\">1 背景</h2>\n\n<p>​\t组件化过程中不可避免的会遇到这样一个问题：</p>\n\n<p>​\t组件化的过程一般周期比较长，此过程中不免会有业务需求的输入，这样就会导致一个情况：</p>\n\n<p>​\t组件化分支已经将主工程里的类迁移到pod仓库,而在此期间的业务需求代码对这些被迁移的类有修改，</p>\n\n<p>​\t合并主干（其他分支）代码时,主干（其他分支）有对移动之前的类做修改的情况下,会导致合并冲突,</p>\n\n<p>​\t这种冲突是整个类都是新增符号(+),没有冲突符号，此时无法简单的通过工具，或者冲突的符号对其进行解冲突。</p>\n\n<h2 id=\"2-问题处理\">2 问题处理</h2>\n\n<p>​\t解决上述冲突,最开始想到的方案是通过xcode自带filemerge进行对比,这样比较容易导致遗漏且工作量大,无法充分利用git的冲突标志,</p>\n\n<h2 id=\"3-更优解决\">3 更优解决</h2>\n\n<p>​\t如果可以知道有哪些类在合并代码时，</p>\n\n<ul class=\"task-list\">\n  <li class=\"task-list-item\"><input type=\"checkbox\" class=\"task-list-item-checkbox\" disabled=\"disabled\" checked=\"checked\" />​\t有修改</li>\n  <li class=\"task-list-item\"><input type=\"checkbox\" class=\"task-list-item-checkbox\" disabled=\"disabled\" checked=\"checked\" />​\t且已经被迁移了（不存在主工程）</li>\n</ul>\n\n<p>​\t那么就可以以这些类进行冲突检测</p>\n\n<h3 id=\"31-冲突解决方案\">3.1 冲突解决方案</h3>\n\n<p>以下简述冲突检测设计思路</p>\n\n<h4 id=\"311-数据准备\">3.1.1 数据准备</h4>\n\n<ul>\n  <li>先进行一次预合并，通过首次合并,可以从sourcetree中看到冲突的类列表文件，查看冲突内容，出现整个文件都带+的变更内容，该文件即为被迁移且被其他分支修改的文件。</li>\n</ul>\n\n<p><img src=\"/img/2023-10-07-merge/0.jpg\" alt=\"0\" /></p>\n\n<ul>\n  <li>将预合并产生的上述冲突的文件列表进行整理，将列表中符合迁移并修改的文件路径列表定义为数组存入文件：merge_project_files.txt</li>\n</ul>\n\n<p><img src=\"/img/2023-10-07-merge/1.png\" alt=\"1\" /></p>\n\n<p>​\t通过选中类(可以全选之后一起移动【mv】)移动路径:</p>\n\n<p><img src=\"/img/2023-10-07-merge/2.png\" alt=\"2\" /></p>\n\n<p><strong><em>Tips：这里用移动mv，不用复制cp，为了主工程修改完之后，能恢复迁移后的样子，不至于多出一些已迁移但是还存在主工程的文件</em></strong></p>\n\n<p>即可获取主工程冲突文件路径，新建一个文本文件,将上述所有冲突类路径移动过去,</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n</pre></td><td class=\"rouge-code\"><pre>/Users/username/Documents/Project/git/Inner/Demo/127/Demo-IOS/ProjectDemoiOS/ProjectDemoiOS/Class/Main/Car/Model/PSCCarDetailInforModel.h\n/Users/username/Documents/Project/git/Inner/Demo/127/Demo-IOS/ProjectDemoiOS/ProjectDemoiOS/Class/Main/Sites/View/PSCPowerPriceTableViewCell.m\n.....\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<ul>\n  <li>将上述文件列表一一对应到组件库里本地clone路径了列表，定义为数组存入文件；merge_pods_files.txt</li>\n</ul>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n</pre></td><td class=\"rouge-code\"><pre>/Users/username/Documents/Project/git/CocoaPods/Private/ProjectCarModule/ProjectCarModule/Classes/Car/Model/DemoCarDetailInforModel.h\n/Users/username/Documents/Project/git/CocoaPods/Private/ProjectExchangeMoudle/ProjectExchangeMoudle/Classes/Sites/View/DemoPowerPriceTableViewCell.m\n.....\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p><strong><em>Tips:commond+option+c可以文件路径</em></strong></p>\n\n<h4 id=\"312--算法编写\">3.1.2  算法编写</h4>\n\n<ul>\n  <li>步骤1:在一个全新的组件化分支（未进行预合并）上先从组件库将冲突的类文件拷贝回主工程,</li>\n  <li>步骤2:提交本地仓库(不需要push远程仓库)后再进行合并</li>\n  <li>步骤3:合并冲突则为可参考历史变更及可解决的冲突状态</li>\n  <li>步骤4:合并解决完后再通过上述方案,反向将dest的主工程目录拷贝并覆盖到组件库文件</li>\n</ul>\n\n<p><strong><em>Tips:可能存在一些已经删除的文件，但是也出现在上述列表中，此时无法从组件库移动到主工程，需要确认是否是无用文件（不是误删）</em></strong></p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\"># merge.sh</span>\n<span class=\"c\"># 从外部文件中读取源文件路径和目标文件夹路径</span>\n<span class=\"c\">#\"source_paths.txt\"</span>\n<span class=\"nv\">source_file</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n<span class=\"c\">#\"destination_paths.txt\"</span>\n<span class=\"nv\">destination_file</span><span class=\"o\">=</span><span class=\"nv\">$2</span>\n\n<span class=\"c\"># 检查源文件是否存在</span>\n<span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"o\">!</span> <span class=\"nt\">-f</span> <span class=\"s2\">\"</span><span class=\"nv\">$source_file</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n    </span><span class=\"nb\">echo</span> <span class=\"s2\">\"源文件 '</span><span class=\"nv\">$source_file</span><span class=\"s2\">' 不存在。\"</span>\n    <span class=\"nb\">exit </span>1\n<span class=\"k\">fi</span>\n\n<span class=\"c\"># 检查目标文件夹文件是否存在</span>\n<span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"o\">!</span> <span class=\"nt\">-f</span> <span class=\"s2\">\"</span><span class=\"nv\">$destination_file</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n    </span><span class=\"nb\">echo</span> <span class=\"s2\">\"源文件 '</span><span class=\"nv\">$source_file</span><span class=\"s2\">' 不存在。\"</span>\n    <span class=\"nb\">exit </span>1\n<span class=\"k\">fi</span>\n\n<span class=\"c\">#保证每条记录都有一个回车（最后一行如果没有回车，会被忽略）</span>\n<span class=\"k\">while </span><span class=\"nv\">IFS</span><span class=\"o\">=</span> <span class=\"nb\">read</span> <span class=\"nt\">-r</span> source_path <span class=\"o\">&amp;&amp;</span> <span class=\"nv\">IFS</span><span class=\"o\">=</span> <span class=\"nb\">read</span> <span class=\"nt\">-r</span> destination_folder &lt;&amp;3<span class=\"p\">;</span> <span class=\"k\">do\n    </span>source_paths+<span class=\"o\">=(</span><span class=\"s2\">\"</span><span class=\"nv\">$source_path</span><span class=\"s2\">\"</span><span class=\"o\">)</span>\n    destination_paths+<span class=\"o\">=(</span><span class=\"s2\">\"</span><span class=\"nv\">$destination_folder</span><span class=\"s2\">\"</span><span class=\"o\">)</span>\n<span class=\"k\">done</span> &lt; <span class=\"nv\">$source_file</span> 3&lt; <span class=\"nv\">$destination_file</span>\n\n<span class=\"c\"># 输出数组长度</span>\n<span class=\"nb\">echo</span> <span class=\"s2\">\"源文件路径数组长度：</span><span class=\"k\">${#</span><span class=\"nv\">source_paths</span><span class=\"p\">[@]</span><span class=\"k\">}</span><span class=\"s2\">\"</span>\n<span class=\"nb\">echo</span> <span class=\"s2\">\"目标文件夹路径数组长度：</span><span class=\"k\">${#</span><span class=\"nv\">destination_paths</span><span class=\"p\">[@]</span><span class=\"k\">}</span><span class=\"s2\">\"</span>\n\n<span class=\"c\">#exit 0</span>\n<span class=\"c\"># 遍历索引</span>\n<span class=\"k\">for </span>index <span class=\"k\">in</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"p\">!source_paths[@]</span><span class=\"k\">}</span><span class=\"s2\">\"</span><span class=\"p\">;</span> <span class=\"k\">do\n    </span><span class=\"nb\">echo</span> <span class=\"s2\">\"遍历目标文件夹路径数组,index=\"</span><span class=\"nv\">$index</span>\n    <span class=\"nv\">source_path</span><span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">source_paths</span><span class=\"p\">[</span><span class=\"nv\">$index</span><span class=\"p\">]</span><span class=\"k\">}</span><span class=\"s2\">\"</span>\n    <span class=\"nv\">destination_path</span><span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">destination_paths</span><span class=\"p\">[</span><span class=\"nv\">$index</span><span class=\"p\">]</span><span class=\"k\">}</span><span class=\"s2\">\"</span>\n\n    <span class=\"c\"># 构建目标文件的完整路径</span>\n<span class=\"c\">#    destination_path=\"${destination_folder}${source_path}\"</span>\n\n    <span class=\"c\"># 检查目标文件是否存在，如果存在则删除</span>\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-e</span> <span class=\"s2\">\"</span><span class=\"nv\">$destination_path</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">rm</span> <span class=\"s2\">\"</span><span class=\"nv\">$destination_path</span><span class=\"s2\">\"</span>\n    <span class=\"k\">fi</span>\n\n    <span class=\"c\"># 确保目标文件夹存在</span>\n    <span class=\"nb\">mkdir</span> <span class=\"nt\">-p</span> <span class=\"s2\">\"</span><span class=\"si\">$(</span><span class=\"nb\">dirname</span> <span class=\"s2\">\"</span><span class=\"nv\">$destination_path</span><span class=\"s2\">\"</span><span class=\"si\">)</span><span class=\"s2\">\"</span>\n\n    <span class=\"c\"># 移动源文件到目标路径</span>\n    <span class=\"nb\">mv</span> <span class=\"s2\">\"</span><span class=\"nv\">$source_path</span><span class=\"s2\">\"</span> <span class=\"s2\">\"</span><span class=\"nv\">$destination_path</span><span class=\"s2\">\"</span>\n<span class=\"k\">done\n\n</span><span class=\"nb\">echo</span> <span class=\"s2\">\"文件移动完成。\"</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h4 id=\"313-执行\">3.1.3 执行</h4>\n\n<p>将pod仓库的文件移动回主工程的调用方式：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>sh merge.sh merge_pods_files.txt merge_project_files.txt\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>解决完冲突后将主工程的上述文件移动回组件库</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>sh merge.sh merge_project_files.txt merge_pods_files.txt\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h4 id=\"314-收尾\">3.1.4 收尾</h4>\n\n<ul>\n  <li>解决完冲突，Pod仓库会得到从主干(其他功能分支)合并的最新类的修改版本，需要提交到对应迁移Pod仓库</li>\n  <li>主工程Project文件保留迁移后的版本，可以得到组件化改造后的Project的文件结构</li>\n  <li>再执行一次之前提到的寻找Project未引用，但是还存在的类的脚本进行最后的清理</li>\n</ul>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n</pre></td><td class=\"rouge-code\"><pre><span class=\"k\">function </span>main<span class=\"o\">()</span> <span class=\"o\">{</span>\n    \n    <span class=\"c\"># 设置项目目录</span>\n    <span class=\"nv\">project_directory</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$1</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then</span>\n        <span class=\"c\">#未传参为当前目录</span>\n        <span class=\"nv\">project_directory</span><span class=\"o\">=</span><span class=\"nb\">.</span>\n    <span class=\"k\">fi</span>\n\n    <span class=\"c\"># 设置其他目录</span>\n    <span class=\"nv\">parent_path</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">dirname</span> <span class=\"s2\">\"</span><span class=\"nv\">$project_directory</span><span class=\"s2\">\"</span><span class=\"si\">)</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"project 路径：\"</span><span class=\"nv\">$parent_path</span>\n    \n    <span class=\"nv\">current_dir</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">basename</span> <span class=\"s2\">\"</span><span class=\"nv\">$project_directory</span><span class=\"s2\">\"</span><span class=\"si\">)</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"当前路径 文件夹名称：\"</span><span class=\"nv\">$current_dir</span>\n\n    \n    <span class=\"nv\">project_path</span><span class=\"o\">=</span><span class=\"si\">$(</span>find <span class=\"s2\">\"</span><span class=\"nv\">$parent_path</span><span class=\"s2\">\"</span>/<span class=\"nv\">$current_dir</span>.xcodeproj <span class=\"nt\">-type</span> f <span class=\"se\">\\(</span> <span class=\"nt\">-name</span> <span class=\"s2\">\"*.pbxproj\"</span> <span class=\"se\">\\)</span><span class=\"si\">)</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"project 路径：\"</span><span class=\"nv\">$project_path</span>\n\n    <span class=\"nv\">all_file_path</span><span class=\"o\">=</span><span class=\"si\">$(</span>find <span class=\"s2\">\"</span><span class=\"nv\">$project_directory</span><span class=\"s2\">\"</span> <span class=\"nt\">-type</span> f <span class=\"se\">\\(</span> <span class=\"nt\">-name</span> <span class=\"s2\">\"*.h\"</span> <span class=\"se\">\\)</span><span class=\"si\">)</span>\n    <span class=\"nv\">all_file_path_cnt</span><span class=\"o\">=</span><span class=\"si\">$(</span>find <span class=\"s2\">\"</span><span class=\"nv\">$project_directory</span><span class=\"s2\">\"</span> <span class=\"nt\">-type</span> f <span class=\"se\">\\(</span> <span class=\"nt\">-name</span> <span class=\"s2\">\"*.h\"</span> <span class=\"se\">\\)</span> | <span class=\"nb\">wc</span> <span class=\"nt\">-l</span><span class=\"si\">)</span>\n\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"主工程 头文件数量：\"</span><span class=\"nv\">$all_file_path_cnt</span>\n\n    <span class=\"k\">for </span>src_file <span class=\"k\">in</span> <span class=\"nv\">$all_file_path</span><span class=\"p\">;</span> <span class=\"k\">do</span>\n    <span class=\"c\">#    echo $src_file</span>\n        <span class=\"nv\">filename</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">basename</span> <span class=\"s2\">\"</span><span class=\"nv\">$src_file</span><span class=\"s2\">\"</span> .h<span class=\"si\">)</span>\n        <span class=\"k\">if</span>  <span class=\"o\">!</span> <span class=\"nb\">grep</span> <span class=\"nt\">-q</span> <span class=\"s2\">\"</span><span class=\"se\">\\b</span><span class=\"nv\">$filename</span><span class=\"se\">\\b</span><span class=\"s2\">\"</span> <span class=\"s2\">\"</span><span class=\"nv\">$project_path</span><span class=\"s2\">\"</span><span class=\"p\">;</span>  <span class=\"k\">then\n            </span><span class=\"nb\">echo</span> <span class=\"s2\">\"project不包含：\"</span><span class=\"nv\">$src_file</span>\n        <span class=\"k\">fi\n    done</span>\n<span class=\"o\">}</span>\n\n\nmain <span class=\"nv\">$1</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>传入工程(Project文件所在的目录)路径：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>sh find_all_file_no_project.sh /Users/username/Documents/Project/git/Inner/Demo/Release/Demo-IOS/ProjectiOS/ProjectiOS \n</pre></td></tr></tbody></table></code></pre></div></div>\n\n\n\n                <hr style=\"visibility: hidden;\">\n                <ul class=\"pager\">\n                    \n                    <li class=\"previous\">\n                        <a href=\"/2023/09/12/iOS-OC-Swift%E6%B7%B7%E7%BC%96/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Pod仓库内OC与Swift调用\">\n                        Previous<br>\n                        <span>Pod仓库内OC与Swift调用</span>\n                        </a>\n                    </li>\n                    \n                    \n                    <li class=\"next\">\n                        <a href=\"/2023/10/07/%E6%8A%93%E5%8C%85%E5%AE%9E%E8%B7%B5/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Charles HTTPS实践\">\n                        Next<br>\n                        <span>Charles HTTPS实践</span>\n                        </a>\n                    </li>\n                    \n                </ul>\n                <hr style=\"visibility: hidden;\">\n\n                \n                <!-- disqus 评论框 start -->\n                <div class=\"comment\">\n                    <div id=\"disqus_thread\" class=\"disqus-thread\"></div>\n                </div>\n                <!-- disqus 评论框 end -->\n                \n\n                \n            </div>  \n\n    <!-- Side Catalog Container -->\n        \n            <div class=\"\n                col-lg-2 col-lg-offset-0\n                visible-lg-block\n                sidebar-container\n                catalog-container\">\n                <div class=\"side-catalog\">\n                    <hr class=\"hidden-sm hidden-xs\">\n                    <h5>\n                        <a class=\"catalog-toggle\" href=\"#\">CATALOG</a>\n                    </h5>\n                    <ul class=\"catalog-body\"></ul>\n                </div>\n            </div>\n        \n\n    <!-- Sidebar Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                sidebar-container\">\n\n                <!-- Featured Tags -->\n                \n\n\n<section>\n    \n        <hr class=\"hidden-sm hidden-xs\">\n    \n    <h5><a href=\"/archive/\">FEATURED TAGS</a></h5>\n    <div class=\"tags\">\n        \n        \n        \n        \n        \n    </div>\n</section>\n\n\n                <!-- Friends Blog -->\n                \n            </div>\n        </div>\n    </div>\n</article>\n\n<!-- add support for mathjax by voleking-->\n\n\n\n\n\n\n<!-- disqus 公共JS代码 start (一个网页只需插入一次) -->\n<script type=\"text/javascript\">\n    /* * * CONFIGURATION VARIABLES * * */\n    var disqus_shortname = \"Cyp\";\n    var disqus_identifier = \"/2023/10/07/组件化之分支合并\";\n    var disqus_url = \"http://localhost:4000/2023/10/07/%E7%BB%84%E4%BB%B6%E5%8C%96%E4%B9%8B%E5%88%86%E6%94%AF%E5%90%88%E5%B9%B6/\";\n\n    (function() {\n        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;\n        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';\n        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);\n    })();\n</script>\n<!-- disqus 公共JS代码 end -->\n\n\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n      var d = document, t = 'script',\n          o = d.createElement(t),\n          s = d.getElementsByTagName(t)[0];\n      o.src = u;\n      if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n      s.parentNode.insertBefore(o, s);\n    }\n</script>\n<!-- anchor-js, Doc:http://bryanbraun.github.io/anchorjs/ -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/anchor-js/1.1.1/anchor.min.js\",function(){\n        anchors.options = {\n          visible: 'hover',\n          placement: 'right',\n          // icon: '#'\n        };\n        anchors.add().remove('.intro-header h1').remove('.subheading').remove('.sidebar-container h5');\n    })\n</script>\n<style>\n    /* place left on bigger screen */\n    @media all and (min-width: 800px) {\n        .anchorjs-link{\n            position: absolute;\n            left: -0.75em;\n            font-size: 1.1em;\n            margin-top : -0.1em;\n        }\n    }\n</style>\n\n\n\n    <!-- Footer -->\n<footer>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <!-- SNS Link -->\n                \n\n\n<ul class=\"list-inline text-center\">\n\n\n  \n  \n  \n  \n  \n  \n  \n</ul>\n\n                <p class=\"copyright text-muted\">\n                    Copyright &copy; PaysonChen Blog 2024\n                    <br>\n                    <!-- Powered by <a href=\"http://huangxuan.me\">Hux Blog</a> | -->\n                 <!--    <iframe style=\"margin-left: 2px; margin-bottom:-5px;\" frameborder=\"0\" scrolling=\"0\" width=\"100px\"\n                        height=\"20px\"\n                        src=\"https://ghbtns.com/github-btn.html?user=huxpro&repo=huxpro.github.io&type=star&count=true\">\n                    </iframe> -->\n                </p>\n            </div>\n        </div>\n    </div>\n</footer>\n\n<!-- jQuery -->\n<script src=\"/js/jquery.min.js \"></script>\n\n<!-- Bootstrap Core JavaScript -->\n<!-- Currently, only navbar scroll-down effect at desktop still depends on this -->\n<script src=\"/js/bootstrap.min.js \"></script>\n\n<!-- Custom Theme JavaScript -->\n<script src=\"/js/hux-blog.min.js \"></script>\n\n<!-- Simple Jekyll Search -->\n<script src=\"/js/simple-jekyll-search.min.js\"></script>\n\n<!-- Service Worker -->\n\n<script src=\"/js/snackbar.js \"></script>\n<script src=\"/js/sw-registration.js \"></script>\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n        var d = document, t = 'script',\n            o = d.createElement(t),\n            s = d.getElementsByTagName(t)[0];\n        o.src = u;\n        if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n        s.parentNode.insertBefore(o, s);\n    }\n</script>\n\n<!--\n     Because of the native support for backtick-style fenced code blocks\n     right within the Markdown is landed in Github Pages,\n     From V1.6, There is no need for Highlight.js,\n     so Huxblog drops it officially.\n\n     - https://github.com/blog/2100-github-pages-now-faster-and-simpler-with-jekyll-3-0\n     - https://help.github.com/articles/creating-and-highlighting-code-blocks/\n     - https://github.com/jneen/rouge/wiki/list-of-supported-languages-and-lexers\n-->\n<!--\n    <script>\n        async(\"http://cdn.bootcss.com/highlight.js/8.6/highlight.min.js\", function(){\n            hljs.initHighlightingOnLoad();\n        })\n    </script>\n    <link href=\"http://cdn.bootcss.com/highlight.js/8.6/styles/github.min.css\" rel=\"stylesheet\">\n-->\n\n\n\n\n\n\n\n<!--fastClick.js -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/fastclick/1.0.6/fastclick.min.js\", function () {\n        var $nav = document.querySelector(\"nav\");\n        if ($nav) FastClick.attach($nav);\n    })\n</script>\n\n\n<!-- Google Analytics -->\n\n\n\n<!-- Baidu Tongji -->\n\n\n\n<!-- Side Catalog -->\n\n<script type=\"text/javascript\">\n    function generateCatalog(selector) {\n\n        // interop with multilangual \n        if ('' == 'true') {\n            _containerSelector = 'div.post-container.active'\n        } else {\n            _containerSelector = 'div.post-container'\n        }\n\n        // init\n        var P = $(_containerSelector), a, n, t, l, i, c;\n        a = P.find('h1,h2,h3,h4,h5,h6');\n\n        // clean\n        $(selector).html('')\n\n        // appending\n        a.each(function () {\n            n = $(this).prop('tagName').toLowerCase();\n            i = \"#\" + $(this).prop('id');\n            t = $(this).text();\n            c = $('<a href=\"' + i + '\" rel=\"nofollow\">' + t + '</a>');\n            l = $('<li class=\"' + n + '_nav\"></li>').append(c);\n            $(selector).append(l);\n        });\n        return true;\n    }\n\n    generateCatalog(\".catalog-body\");\n\n    // toggle side catalog\n    $(\".catalog-toggle\").click((function (e) {\n        e.preventDefault();\n        $('.side-catalog').toggleClass(\"fold\")\n    }))\n\n    /*\n     * Doc: https://github.com/davist11/jQuery-One-Page-Nav\n     * Fork by Hux to support padding\n     */\n    async(\"/js/jquery.nav.js\", function () {\n        $('.catalog-body').onePageNav({\n            currentClass: \"active\",\n            changeHash: !1,\n            easing: \"swing\",\n            filter: \"\",\n            scrollSpeed: 700,\n            scrollOffset: 0,\n            scrollThreshold: .2,\n            begin: null,\n            end: null,\n            scrollChange: null,\n            padding: 80\n        });\n    });\n</script>\n\n\n\n<!-- Multi-Lingual -->\n\n\n<!-- Simple Jekyll Search -->\n<script>\n    // https://stackoverflow.com/questions/1912501/unescape-html-entities-in-javascript\n    function htmlDecode(input) {\n        var e = document.createElement('textarea');\n        e.innerHTML = input;\n        // handle case of empty input\n        return e.childNodes.length === 0 ? \"\" : e.childNodes[0].nodeValue;\n    }\n\n    SimpleJekyllSearch({\n        searchInput: document.getElementById('search-input'),\n        resultsContainer: document.getElementById('search-results'),\n        json: '/search.json',\n        searchResultTemplate: '<div class=\"post-preview item\"><a href=\"{url}\"><h2 class=\"post-title\">{title}</h2><h3 class=\"post-subtitle\">{subtitle}</h3><hr></a></div>',\n        noResultsText: 'No results',\n        limit: 50,\n        fuzzy: false,\n        // a hack to get escaped subtitle unescaped. for some reason, \n        // post.subtitle w/o escape filter nuke entire search.\n        templateMiddleware: function (prop, value, template) {\n            if (prop === 'subtitle' || prop === 'title') {\n                if (value.indexOf(\"code\")) {\n                    return htmlDecode(value);\n                } else {\n                    return value;\n                }\n            }\n        }\n    });\n\n    $(document).ready(function () {\n        var $searchPage = $('.search-page');\n        var $searchOpen = $('.search-icon');\n        var $searchClose = $('.search-icon-close');\n        var $searchInput = $('#search-input');\n        var $body = $('body');\n\n        $searchOpen.on('click', function (e) {\n            e.preventDefault();\n            $searchPage.toggleClass('search-active');\n            var prevClasses = $body.attr('class') || '';\n            setTimeout(function () {\n                $body.addClass('no-scroll');\n            }, 400)\n\n            if ($searchPage.hasClass('search-active')) {\n                $searchClose.on('click', function (e) {\n                    e.preventDefault();\n                    $searchPage.removeClass('search-active');\n                    $body.attr('class', prevClasses);  // from closure \n                });\n                $searchInput.focus();\n            }\n        });\n    });\n</script>\n\n\n<!-- Image to hack wechat -->\n<img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\" />\n<!-- Migrate from head to bottom, no longer block render and still work -->\n\n</body>\n\n</html>\n","excerpt":"<h1 id=\"组件化实践之主工程抽离代码分支合并\">组件化实践之：主工程抽离代码分支合并</h1>\n","url":"/2023/10/07/%E7%BB%84%E4%BB%B6%E5%8C%96%E4%B9%8B%E5%88%86%E6%94%AF%E5%90%88%E5%B9%B6/","next":{"id":"/2023/10/07/抓包实践","tags":[],"relative_path":"_posts/2023-10-09-抓包实践.md","collection":"posts","content":"<h1 id=\"charles-https-实践\">Charles HTTPS 实践</h1>\n\n<h2 id=\"1背景\">1、背景</h2>\n\n<p>在构建充电桩能力的需求背景下，需要对竞品数据进行收集评估，以前是通过截图+ocr方案进行数据收集，效率低下无法满足数据更新的及时性，现在需要采用更加高效的方式</p>\n\n<h2 id=\"2方案选择\">2、方案选择</h2>\n\n<p>咨询之前做过类似工作的测试团队，无法给到比较可靠的方案，一开始选择逆向方案，通过移动端组内评估，以及咨询业内的安全工程师，逆向方案 ，代价较高，且暂无这方面的能力储备，风险不可控。</p>\n\n<p>于是我们认为可以尝试抓包某地图App的方式，验证可行性</p>\n\n<h2 id=\"3抓包\">3、抓包</h2>\n\n<p>wireshark上抓包无法（难度较高）解析https协议</p>\n\n<p>采用Charles 抓包：</p>\n\n<h3 id=\"31代理搭建\">3.1、代理搭建</h3>\n\n<p>打开Charles，在顶部状态栏选择：help-&gt;Local IP Address</p>\n\n<p><img src=\"/img/2023-10-09-Charles/local_IP.png\" alt=\"local_IP\" /></p>\n\n<p>获取到代理机在局域网的ip</p>\n\n<p><img src=\"/img/2023-10-09-Charles/local_IP2.png\" alt=\"local_IP2\" /></p>\n\n<p>在设备上（iPhone）手动设置代理:</p>\n\n<p><img src=\"/img/2023-10-09-Charles/device.png\" alt=\"device\" /></p>\n\n<p>代理设置为上述代理机器的ip + 端口号8888</p>\n\n<p><img src=\"/img/2023-10-09-Charles/device2.png\" alt=\"device2\" /></p>\n\n<h3 id=\"32安装证书\">3.2、安装证书</h3>\n\n<p>在顶部状态栏 help-&gt;SSL Proxying-&gt;Install Charles Root Certification on a Mobile Device or Remote Broswer：</p>\n\n<p><img src=\"/img/2023-10-09-Charles/ssl_cert.png\" alt=\"ssl_cert\" /></p>\n\n<p><img src=\"/img/2023-10-09-Charles/ssl_cert2.png\" alt=\"ssl_cert2\" /></p>\n\n<p>通过设备访问：chls.pro/ssl</p>\n\n<p>下载地址，然后在设置-&gt;通用-&gt;关于-&gt;证书信任 安装/信任证书，并打开证书的开关</p>\n\n<p><img src=\"/img/2023-10-09-Charles/device3.png\" alt=\"device3\" /></p>\n\n<h3 id=\"33报文解析\">3.3、报文解析</h3>\n\n<p>设置好上述说明后，针对所需要抓取的域名的https报文进行解析：</p>\n\n<p>顶部状态栏 Proxy-&gt; SSL Proxying Settings</p>\n\n<p><img src=\"/img/2023-10-09-Charles/ssl_proxy.png\" alt=\"ssl_proxy\" /></p>\n\n<p>添加域名和端口号（端口号为443）：</p>\n\n<p><img src=\"/img/2023-10-09-Charles/ssl_proxy2.png\" alt=\"ssl_proxy2\" /></p>\n\n<p>打开某地图app，搜索相关关键字，得到的结果再Charles查看：</p>\n\n<p><img src=\"/img/2023-10-09-Charles/data.png\" alt=\"data\" /></p>\n","name":"2023-10-09-抓包实践.md","previous":{"id":"/2023/10/07/组件化之分支合并","tags":[],"relative_path":"_posts/2023-10-07-组件化之分支合并.md","collection":"posts","name":"2023-10-07-组件化之分支合并.md","url":"/2023/10/07/%E7%BB%84%E4%BB%B6%E5%8C%96%E4%B9%8B%E5%88%86%E6%94%AF%E5%90%88%E5%B9%B6/","title":"组件化实践之：主工程抽离代码分支合并用","date":"2023-10-07 00:00:00 +0800","categories":[],"path":"_posts/2023-10-07-组件化之分支合并.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/home-bg-geek.jpg","slug":"组件化之分支合并","ext":".md"},"output":"<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"google-site-verification\" content=\"xBT4GhYoi5qRD5tr338pgPM5OWHHIDR6mNg1a3euekI\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, viewport-fit=cover\">\n    <meta name=\"description\" content=\"与你一起发现更大的世界。\">\n    <meta name=\"keywords\"  content=\"PaysonChen,iOS,流媒体\">\n    <meta name=\"theme-color\" content=\"#000000\">\n    \n    <!-- Open Graph -->\n    <meta property=\"og:title\" content=\"Charles HTTPS实践 - PaysonChen的博客 | PaysonChen Blog\">\n    \n    <meta property=\"og:type\" content=\"article\">\n    <meta property=\"og:description\" content=\"Charles HTTPS 实践\n\">\n    \n    \n    <meta property=\"article:published_time\" content=\"2023-10-07T00:00:00Z\">\n    \n    \n    <meta property=\"article:author\" content=\"PaysonChen\">\n    \n    \n    \n    <meta property=\"og:image\" content=\"http://localhost:4000\">\n    <meta property=\"og:url\" content=\"http://localhost:4000/2023/10/07/%E6%8A%93%E5%8C%85%E5%AE%9E%E8%B7%B5/\">\n    <meta property=\"og:site_name\" content=\"PaysonChen的博客 | PaysonChen Blog\">\n    \n    <title>Charles HTTPS实践 - PaysonChen的博客 | PaysonChen Blog</title>\n\n    <!-- Web App Manifest -->\n    <link rel=\"manifest\" href=\"/pwa/manifest.json\">\n\n    <!-- Favicon -->\n    <link rel=\"shortcut icon\" href=\"/img/favicon.ico\">\n    \n    <!-- Canonical URL -->\n    <link rel=\"canonical\" href=\"http://localhost:4000/2023/10/07/%E6%8A%93%E5%8C%85%E5%AE%9E%E8%B7%B5/\">\n\n    <!-- Bootstrap Core CSS -->\n    <link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\">\n\n    <!-- Custom CSS -->\n    <link rel=\"stylesheet\" href=\"/css/hux-blog.min.css\">\n\n    <!-- Custom Fonts -->\n    <!-- <link href=\"http://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\"> -->\n    <!-- Hux change font-awesome CDN to qiniu -->\n    <link href=\"//cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\">\n\n\n    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->\n    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->\n    <!--[if lt IE 9]>\n        <script src=\"https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js\"></script>\n        <script src=\"https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js\"></script>\n    <![endif]-->\n\n    <!-- ga & ba script hoook -->\n    <script></script>\n</head>\n\n\n<!-- hack iOS CSS :active style -->\n<body ontouchstart=\"\">\n\n    <!-- Navigation -->\n\n    <nav class=\"navbar navbar-default navbar-custom navbar-fixed-top\">\n        \n        <div class=\"container-fluid\">\n            <!-- Brand and toggle get grouped for better mobile display -->\n            <div class=\"navbar-header page-scroll\">\n                <button type=\"button\" class=\"navbar-toggle\">\n                    <span class=\"sr-only\">Toggle navigation</span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                </button>\n                <a class=\"navbar-brand\" href=\"/\">PaysonChen Blog</a>\n            </div>\n\n            <!-- Collect the nav links, forms, and other content for toggling -->\n            <div id=\"huxblog_navbar\">\n                <div class=\"navbar-collapse\">\n                    <ul class=\"nav navbar-nav navbar-right\">\n                        <li>\n                            <a href=\"/\">Home</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        <li>\n                            <a href=\"/about/\">About</a>\n                        </li>\n                        \n                        \n                        \n                        <li>\n                            <a href=\"/archive/\">Archive</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        <li class=\"search-icon\">\n                            <a href=\"javascript:void(0)\">\n                                <i class=\"fa fa-search\"></i>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n            <!-- /.navbar-collapse -->\n        </div>\n        <!-- /.container -->\n    </nav>\n\n    <script>\n        // Drop Bootstarp low-performance Navbar\n        // Use customize navbar with high-quality material design animation\n        // in high-perf jank-free CSS3 implementation\n        var $body = document.body;\n        var $toggle = document.querySelector('.navbar-toggle');\n        var $navbar = document.querySelector('#huxblog_navbar');\n        var $collapse = document.querySelector('.navbar-collapse');\n\n        var __HuxNav__ = {\n            close: function () {\n                $navbar.className = \" \";\n                // wait until animation end.\n                setTimeout(function () {\n                    // prevent frequently toggle\n                    if ($navbar.className.indexOf('in') < 0) {\n                        $collapse.style.height = \"0px\"\n                    }\n                }, 400)\n            },\n            open: function () {\n                $collapse.style.height = \"auto\"\n                $navbar.className += \" in\";\n            }\n        }\n\n        // Bind Event\n        $toggle.addEventListener('click', function (e) {\n            if ($navbar.className.indexOf('in') > 0) {\n                __HuxNav__.close()\n            } else {\n                __HuxNav__.open()\n            }\n        })\n\n        /**\n         * Since Fastclick is used to delegate 'touchstart' globally\n         * to hack 300ms delay in iOS by performing a fake 'click',\n         * Using 'e.stopPropagation' to stop 'touchstart' event from \n         * $toggle/$collapse will break global delegation.\n         * \n         * Instead, we use a 'e.target' filter to prevent handler\n         * added to document close HuxNav.  \n         *\n         * Also, we use 'click' instead of 'touchstart' as compromise\n         */\n        document.addEventListener('click', function (e) {\n            if (e.target == $toggle) return;\n            if (e.target.className == 'icon-bar') return;\n            __HuxNav__.close();\n        })\n    </script>\n    <!-- Search -->\n<div class=\"search-page\">\n  <div class=\"search-icon-close-container\">\n    <span class=\"search-icon-close\">\n      <i class=\"fa fa-chevron-down\"></i>\n    </span>\n  </div>\n  <div class=\"search-main container\">\n    <div class=\"row\">\n      <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n        <form></form>\n        <input type=\"text\" id=\"search-input\" placeholder=\"$ grep...\">\n        </form>\n        <div id=\"search-results\" class=\"mini-post-list\"></div>\n      </div>\n    </div>\n  </div>\n</div>\n\n    <!-- Image to hack wechat -->\n<!-- <img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\"> -->\n<!-- <img src=\"/img/home-bg-geek.jpg\" width=\"0\" height=\"0\"> -->\n\n<!-- Post Header -->\n\n\n\n<style type=\"text/css\">\n    header.intro-header{\n        position: relative;\n        background-image: url('/img/home-bg-geek.jpg');\n        background: ;\n    }\n\n    \n</style>\n\n<header class=\"intro-header\" >\n\n    <div class=\"header-mask\"></div>\n    \n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <div class=\"post-heading\">\n                    <div class=\"tags\">\n                        \n                    </div>\n                    <h1>Charles HTTPS实践</h1>\n                    \n                    <h2 class=\"subheading\"></h2>\n                    <span class=\"meta\">Posted by PaysonChen on October 7, 2023</span>\n                </div>\n            </div>\n        </div>\n    </div>\n</header>\n\n\n\n\n\n\n<!-- Post Content -->\n<article>\n    <div class=\"container\">\n        <div class=\"row\">\n\n    <!-- Post Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                post-container\">\n\n                <!-- Multi-Lingual -->\n                \n\n\t\t\t\t<h1 id=\"charles-https-实践\">Charles HTTPS 实践</h1>\n\n<h2 id=\"1背景\">1、背景</h2>\n\n<p>在构建充电桩能力的需求背景下，需要对竞品数据进行收集评估，以前是通过截图+ocr方案进行数据收集，效率低下无法满足数据更新的及时性，现在需要采用更加高效的方式</p>\n\n<h2 id=\"2方案选择\">2、方案选择</h2>\n\n<p>咨询之前做过类似工作的测试团队，无法给到比较可靠的方案，一开始选择逆向方案，通过移动端组内评估，以及咨询业内的安全工程师，逆向方案 ，代价较高，且暂无这方面的能力储备，风险不可控。</p>\n\n<p>于是我们认为可以尝试抓包某地图App的方式，验证可行性</p>\n\n<h2 id=\"3抓包\">3、抓包</h2>\n\n<p>wireshark上抓包无法（难度较高）解析https协议</p>\n\n<p>采用Charles 抓包：</p>\n\n<h3 id=\"31代理搭建\">3.1、代理搭建</h3>\n\n<p>打开Charles，在顶部状态栏选择：help-&gt;Local IP Address</p>\n\n<p><img src=\"/img/2023-10-09-Charles/local_IP.png\" alt=\"local_IP\" /></p>\n\n<p>获取到代理机在局域网的ip</p>\n\n<p><img src=\"/img/2023-10-09-Charles/local_IP2.png\" alt=\"local_IP2\" /></p>\n\n<p>在设备上（iPhone）手动设置代理:</p>\n\n<p><img src=\"/img/2023-10-09-Charles/device.png\" alt=\"device\" /></p>\n\n<p>代理设置为上述代理机器的ip + 端口号8888</p>\n\n<p><img src=\"/img/2023-10-09-Charles/device2.png\" alt=\"device2\" /></p>\n\n<h3 id=\"32安装证书\">3.2、安装证书</h3>\n\n<p>在顶部状态栏 help-&gt;SSL Proxying-&gt;Install Charles Root Certification on a Mobile Device or Remote Broswer：</p>\n\n<p><img src=\"/img/2023-10-09-Charles/ssl_cert.png\" alt=\"ssl_cert\" /></p>\n\n<p><img src=\"/img/2023-10-09-Charles/ssl_cert2.png\" alt=\"ssl_cert2\" /></p>\n\n<p>通过设备访问：chls.pro/ssl</p>\n\n<p>下载地址，然后在设置-&gt;通用-&gt;关于-&gt;证书信任 安装/信任证书，并打开证书的开关</p>\n\n<p><img src=\"/img/2023-10-09-Charles/device3.png\" alt=\"device3\" /></p>\n\n<h3 id=\"33报文解析\">3.3、报文解析</h3>\n\n<p>设置好上述说明后，针对所需要抓取的域名的https报文进行解析：</p>\n\n<p>顶部状态栏 Proxy-&gt; SSL Proxying Settings</p>\n\n<p><img src=\"/img/2023-10-09-Charles/ssl_proxy.png\" alt=\"ssl_proxy\" /></p>\n\n<p>添加域名和端口号（端口号为443）：</p>\n\n<p><img src=\"/img/2023-10-09-Charles/ssl_proxy2.png\" alt=\"ssl_proxy2\" /></p>\n\n<p>打开某地图app，搜索相关关键字，得到的结果再Charles查看：</p>\n\n<p><img src=\"/img/2023-10-09-Charles/data.png\" alt=\"data\" /></p>\n\n\n                <hr style=\"visibility: hidden;\">\n                <ul class=\"pager\">\n                    \n                    <li class=\"previous\">\n                        <a href=\"/2023/10/07/%E7%BB%84%E4%BB%B6%E5%8C%96%E4%B9%8B%E5%88%86%E6%94%AF%E5%90%88%E5%B9%B6/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"组件化实践之：主工程抽离代码分支合并用\">\n                        Previous<br>\n                        <span>组件化实践之：主工程抽离代码分支合并用</span>\n                        </a>\n                    </li>\n                    \n                    \n                    <li class=\"next\">\n                        <a href=\"/2023/11/08/%E6%9E%84%E5%BB%BA%E6%B5%81%E6%B0%B4%E7%BA%BF%E5%AE%9E%E8%B7%B5/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"构建流水线实践\">\n                        Next<br>\n                        <span>构建流水线实践</span>\n                        </a>\n                    </li>\n                    \n                </ul>\n                <hr style=\"visibility: hidden;\">\n\n                \n                <!-- disqus 评论框 start -->\n                <div class=\"comment\">\n                    <div id=\"disqus_thread\" class=\"disqus-thread\"></div>\n                </div>\n                <!-- disqus 评论框 end -->\n                \n\n                \n            </div>  \n\n    <!-- Side Catalog Container -->\n        \n            <div class=\"\n                col-lg-2 col-lg-offset-0\n                visible-lg-block\n                sidebar-container\n                catalog-container\">\n                <div class=\"side-catalog\">\n                    <hr class=\"hidden-sm hidden-xs\">\n                    <h5>\n                        <a class=\"catalog-toggle\" href=\"#\">CATALOG</a>\n                    </h5>\n                    <ul class=\"catalog-body\"></ul>\n                </div>\n            </div>\n        \n\n    <!-- Sidebar Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                sidebar-container\">\n\n                <!-- Featured Tags -->\n                \n\n\n<section>\n    \n        <hr class=\"hidden-sm hidden-xs\">\n    \n    <h5><a href=\"/archive/\">FEATURED TAGS</a></h5>\n    <div class=\"tags\">\n        \n        \n        \n        \n        \n    </div>\n</section>\n\n\n                <!-- Friends Blog -->\n                \n            </div>\n        </div>\n    </div>\n</article>\n\n<!-- add support for mathjax by voleking-->\n\n\n\n\n\n\n<!-- disqus 公共JS代码 start (一个网页只需插入一次) -->\n<script type=\"text/javascript\">\n    /* * * CONFIGURATION VARIABLES * * */\n    var disqus_shortname = \"Cyp\";\n    var disqus_identifier = \"/2023/10/07/抓包实践\";\n    var disqus_url = \"http://localhost:4000/2023/10/07/%E6%8A%93%E5%8C%85%E5%AE%9E%E8%B7%B5/\";\n\n    (function() {\n        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;\n        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';\n        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);\n    })();\n</script>\n<!-- disqus 公共JS代码 end -->\n\n\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n      var d = document, t = 'script',\n          o = d.createElement(t),\n          s = d.getElementsByTagName(t)[0];\n      o.src = u;\n      if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n      s.parentNode.insertBefore(o, s);\n    }\n</script>\n<!-- anchor-js, Doc:http://bryanbraun.github.io/anchorjs/ -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/anchor-js/1.1.1/anchor.min.js\",function(){\n        anchors.options = {\n          visible: 'hover',\n          placement: 'right',\n          // icon: '#'\n        };\n        anchors.add().remove('.intro-header h1').remove('.subheading').remove('.sidebar-container h5');\n    })\n</script>\n<style>\n    /* place left on bigger screen */\n    @media all and (min-width: 800px) {\n        .anchorjs-link{\n            position: absolute;\n            left: -0.75em;\n            font-size: 1.1em;\n            margin-top : -0.1em;\n        }\n    }\n</style>\n\n\n\n    <!-- Footer -->\n<footer>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <!-- SNS Link -->\n                \n\n\n<ul class=\"list-inline text-center\">\n\n\n  \n  \n  \n  \n  \n  \n  \n</ul>\n\n                <p class=\"copyright text-muted\">\n                    Copyright &copy; PaysonChen Blog 2024\n                    <br>\n                    <!-- Powered by <a href=\"http://huangxuan.me\">Hux Blog</a> | -->\n                 <!--    <iframe style=\"margin-left: 2px; margin-bottom:-5px;\" frameborder=\"0\" scrolling=\"0\" width=\"100px\"\n                        height=\"20px\"\n                        src=\"https://ghbtns.com/github-btn.html?user=huxpro&repo=huxpro.github.io&type=star&count=true\">\n                    </iframe> -->\n                </p>\n            </div>\n        </div>\n    </div>\n</footer>\n\n<!-- jQuery -->\n<script src=\"/js/jquery.min.js \"></script>\n\n<!-- Bootstrap Core JavaScript -->\n<!-- Currently, only navbar scroll-down effect at desktop still depends on this -->\n<script src=\"/js/bootstrap.min.js \"></script>\n\n<!-- Custom Theme JavaScript -->\n<script src=\"/js/hux-blog.min.js \"></script>\n\n<!-- Simple Jekyll Search -->\n<script src=\"/js/simple-jekyll-search.min.js\"></script>\n\n<!-- Service Worker -->\n\n<script src=\"/js/snackbar.js \"></script>\n<script src=\"/js/sw-registration.js \"></script>\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n        var d = document, t = 'script',\n            o = d.createElement(t),\n            s = d.getElementsByTagName(t)[0];\n        o.src = u;\n        if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n        s.parentNode.insertBefore(o, s);\n    }\n</script>\n\n<!--\n     Because of the native support for backtick-style fenced code blocks\n     right within the Markdown is landed in Github Pages,\n     From V1.6, There is no need for Highlight.js,\n     so Huxblog drops it officially.\n\n     - https://github.com/blog/2100-github-pages-now-faster-and-simpler-with-jekyll-3-0\n     - https://help.github.com/articles/creating-and-highlighting-code-blocks/\n     - https://github.com/jneen/rouge/wiki/list-of-supported-languages-and-lexers\n-->\n<!--\n    <script>\n        async(\"http://cdn.bootcss.com/highlight.js/8.6/highlight.min.js\", function(){\n            hljs.initHighlightingOnLoad();\n        })\n    </script>\n    <link href=\"http://cdn.bootcss.com/highlight.js/8.6/styles/github.min.css\" rel=\"stylesheet\">\n-->\n\n\n\n\n\n\n\n<!--fastClick.js -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/fastclick/1.0.6/fastclick.min.js\", function () {\n        var $nav = document.querySelector(\"nav\");\n        if ($nav) FastClick.attach($nav);\n    })\n</script>\n\n\n<!-- Google Analytics -->\n\n\n\n<!-- Baidu Tongji -->\n\n\n\n<!-- Side Catalog -->\n\n<script type=\"text/javascript\">\n    function generateCatalog(selector) {\n\n        // interop with multilangual \n        if ('' == 'true') {\n            _containerSelector = 'div.post-container.active'\n        } else {\n            _containerSelector = 'div.post-container'\n        }\n\n        // init\n        var P = $(_containerSelector), a, n, t, l, i, c;\n        a = P.find('h1,h2,h3,h4,h5,h6');\n\n        // clean\n        $(selector).html('')\n\n        // appending\n        a.each(function () {\n            n = $(this).prop('tagName').toLowerCase();\n            i = \"#\" + $(this).prop('id');\n            t = $(this).text();\n            c = $('<a href=\"' + i + '\" rel=\"nofollow\">' + t + '</a>');\n            l = $('<li class=\"' + n + '_nav\"></li>').append(c);\n            $(selector).append(l);\n        });\n        return true;\n    }\n\n    generateCatalog(\".catalog-body\");\n\n    // toggle side catalog\n    $(\".catalog-toggle\").click((function (e) {\n        e.preventDefault();\n        $('.side-catalog').toggleClass(\"fold\")\n    }))\n\n    /*\n     * Doc: https://github.com/davist11/jQuery-One-Page-Nav\n     * Fork by Hux to support padding\n     */\n    async(\"/js/jquery.nav.js\", function () {\n        $('.catalog-body').onePageNav({\n            currentClass: \"active\",\n            changeHash: !1,\n            easing: \"swing\",\n            filter: \"\",\n            scrollSpeed: 700,\n            scrollOffset: 0,\n            scrollThreshold: .2,\n            begin: null,\n            end: null,\n            scrollChange: null,\n            padding: 80\n        });\n    });\n</script>\n\n\n\n<!-- Multi-Lingual -->\n\n\n<!-- Simple Jekyll Search -->\n<script>\n    // https://stackoverflow.com/questions/1912501/unescape-html-entities-in-javascript\n    function htmlDecode(input) {\n        var e = document.createElement('textarea');\n        e.innerHTML = input;\n        // handle case of empty input\n        return e.childNodes.length === 0 ? \"\" : e.childNodes[0].nodeValue;\n    }\n\n    SimpleJekyllSearch({\n        searchInput: document.getElementById('search-input'),\n        resultsContainer: document.getElementById('search-results'),\n        json: '/search.json',\n        searchResultTemplate: '<div class=\"post-preview item\"><a href=\"{url}\"><h2 class=\"post-title\">{title}</h2><h3 class=\"post-subtitle\">{subtitle}</h3><hr></a></div>',\n        noResultsText: 'No results',\n        limit: 50,\n        fuzzy: false,\n        // a hack to get escaped subtitle unescaped. for some reason, \n        // post.subtitle w/o escape filter nuke entire search.\n        templateMiddleware: function (prop, value, template) {\n            if (prop === 'subtitle' || prop === 'title') {\n                if (value.indexOf(\"code\")) {\n                    return htmlDecode(value);\n                } else {\n                    return value;\n                }\n            }\n        }\n    });\n\n    $(document).ready(function () {\n        var $searchPage = $('.search-page');\n        var $searchOpen = $('.search-icon');\n        var $searchClose = $('.search-icon-close');\n        var $searchInput = $('#search-input');\n        var $body = $('body');\n\n        $searchOpen.on('click', function (e) {\n            e.preventDefault();\n            $searchPage.toggleClass('search-active');\n            var prevClasses = $body.attr('class') || '';\n            setTimeout(function () {\n                $body.addClass('no-scroll');\n            }, 400)\n\n            if ($searchPage.hasClass('search-active')) {\n                $searchClose.on('click', function (e) {\n                    e.preventDefault();\n                    $searchPage.removeClass('search-active');\n                    $body.attr('class', prevClasses);  // from closure \n                });\n                $searchInput.focus();\n            }\n        });\n    });\n</script>\n\n\n<!-- Image to hack wechat -->\n<img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\" />\n<!-- Migrate from head to bottom, no longer block render and still work -->\n\n</body>\n\n</html>\n","excerpt":"<h1 id=\"charles-https-实践\">Charles HTTPS 实践</h1>\n","url":"/2023/10/07/%E6%8A%93%E5%8C%85%E5%AE%9E%E8%B7%B5/","next":{"id":"/2023/11/08/构建流水线实践","tags":[],"relative_path":"_posts/2023-11-08-构建流水线实践.md","collection":"posts","name":"2023-11-08-构建流水线实践.md","url":"/2023/11/08/%E6%9E%84%E5%BB%BA%E6%B5%81%E6%B0%B4%E7%BA%BF%E5%AE%9E%E8%B7%B5/","title":"构建流水线实践","date":"2023-11-08 00:00:00 +0800","categories":[],"path":"_posts/2023-11-08-构建流水线实践.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/home-bg-geek.jpg","mermaid":true,"slug":"构建流水线实践","ext":".md"},"title":"Charles HTTPS实践","date":"2023-10-07 00:00:00 +0800","categories":[],"path":"_posts/2023-10-09-抓包实践.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/home-bg-geek.jpg","slug":"抓包实践","ext":".md"},"title":"组件化实践之：主工程抽离代码分支合并用","date":"2023-10-07 00:00:00 +0800","categories":[],"path":"_posts/2023-10-07-组件化之分支合并.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/home-bg-geek.jpg","slug":"组件化之分支合并","ext":".md"},{"id":"/2023/09/12/iOS-OC-Swift混编","tags":[],"relative_path":"_posts/2023-09-12-iOS-OC-Swift混编.md","collection":"posts","content":"<h1 id=\"pod仓库内oc与swift调用\">Pod仓库内OC与Swift调用</h1>\n\n<h2 id=\"1pod内oc调swift\">1、Pod内OC调Swift</h2>\n\n<p>Pod内Swift类的声明需加上</p>\n\n<div class=\"language-swift highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre><span class=\"kd\">@objcMembers</span> <span class=\"kd\">open</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>例如：</p>\n\n<div class=\"language-swift highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n</pre></td><td class=\"rouge-code\"><pre><span class=\"kd\">import</span> <span class=\"kt\">Foundation</span>\n\n<span class=\"kd\">@objcMembers</span> <span class=\"kd\">open</span> <span class=\"kd\">class</span> <span class=\"kt\">SwiftBridge</span> <span class=\"p\">:</span> <span class=\"kt\">UIViewController</span> <span class=\"p\">{</span>\n    <span class=\"kd\">open</span> <span class=\"k\">override</span> <span class=\"kd\">func</span> <span class=\"nf\">viewDidLoad</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n        <span class=\"k\">self</span><span class=\"o\">.</span><span class=\"n\">view</span><span class=\"o\">.</span><span class=\"n\">backgroundColor</span> <span class=\"o\">=</span> <span class=\"kt\">UIColor</span><span class=\"o\">.</span><span class=\"n\">red</span>        \n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>在需要使用的类上 import</p>\n\n<pre><code class=\"language-objective-c\">  #import \"YourPodName/YourPodName-Swift.h\"\n</code></pre>\n\n<p>如果需要在多处调用也可以在podspec中添加</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n</pre></td><td class=\"rouge-code\"><pre>  <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">prefix_header_contents</span> <span class=\"o\">=</span> <span class=\"o\">&lt;&lt;-</span><span class=\"no\">EOS</span><span class=\"sh\">\n  #if __has_include(&lt;xxxModule/xxxModule-Swift.h&gt;)\n  #import &lt;xxxModule/xxxModule-Swift.h&gt;\n  #else\n  #import \"xxxModule/xxxModule-Swift.h\"\n  #endif\n</span><span class=\"no\">  EOS</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>XXX-Swift.h 机制可以参考Build Setting里的key value</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>Objective-C Generated Interface Header Name=$(SWIFT_MODULE_NAME)-Swift.h\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p><img src=\"/img/iosswiift/image1.png\" alt=\"1\" /></p>\n\n<h2 id=\"2pod内swift调oc\">2、Pod内Swift调OC</h2>\n\n<p>Pod指定了source_files，其中.h文件会被加载到xxxModule-umbrella 中，在Pod内部可以直接访问</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre><span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">source_files</span> <span class=\"o\">=</span> <span class=\"s1\">'xxxModule/Classes/**/*'</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>xxxModule-umbrella.h</p>\n\n<div class=\"language-objc highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n</pre></td><td class=\"rouge-code\"><pre><span class=\"cp\">#ifdef __OBJC__\n#import &lt;UIKit/UIKit.h&gt;\n#else\n#ifndef FOUNDATION_EXPORT\n#if defined(__cplusplus)\n#define FOUNDATION_EXPORT extern \"C\"\n#else\n#define FOUNDATION_EXPORT extern\n#endif\n#endif\n#endif\n</span>\n<span class=\"cp\">#import \"OCForSwiftUse.h\"\n#import \"xxxModule.h\"\n</span>\n<span class=\"n\">FOUNDATION_EXPORT</span> <span class=\"kt\">double</span> <span class=\"n\">xxxModuleVersionNumber</span><span class=\"p\">;</span>\n<span class=\"n\">FOUNDATION_EXPORT</span> <span class=\"k\">const</span> <span class=\"kt\">unsigned</span> <span class=\"kt\">char</span> <span class=\"n\">xxxModuleVersionString</span><span class=\"p\">[];</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>swift文件:</p>\n\n<div class=\"language-swift highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n</pre></td><td class=\"rouge-code\"><pre><span class=\"kd\">import</span> <span class=\"kt\">Foundation</span>\n\n<span class=\"kd\">@objcMembers</span> <span class=\"kd\">open</span> <span class=\"kd\">class</span> <span class=\"kt\">SwiftBridge</span> <span class=\"p\">:</span> <span class=\"kt\">UIViewController</span> <span class=\"p\">{</span>\n    <span class=\"kd\">open</span> <span class=\"k\">override</span> <span class=\"kd\">func</span> <span class=\"nf\">viewDidLoad</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n        <span class=\"k\">self</span><span class=\"o\">.</span><span class=\"n\">view</span><span class=\"o\">.</span><span class=\"n\">backgroundColor</span> <span class=\"o\">=</span> <span class=\"kt\">UIColor</span><span class=\"o\">.</span><span class=\"n\">red</span>\n        <span class=\"k\">let</span> <span class=\"nv\">ocs</span> <span class=\"o\">=</span> <span class=\"kt\">OCForSwiftUse</span><span class=\"p\">()</span>\n        <span class=\"c1\">// other codes</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n","name":"2023-09-12-iOS-OC-Swift混编.md","previous":{"id":"/2023/08/17/iOS组件化-业务组件准备篇","tags":[],"relative_path":"_posts/2023-08-17-iOS组件化-业务组件准备篇.md","collection":"posts","content":"<h1 id=\"ios组件化之业务组件准备篇\">iOS组件化之：业务组件准备篇</h1>\n\n<h2 id=\"1-背景\">1. 背景</h2>\n\n<p>基础组件拆分到一定程度时，主工程剩下的就多数与视图界面(vc、view等)相关的类文件。此时可以考虑对业务组件进行设计和规划，但是在此时，工程还存在如下问题：</p>\n\n<ul>\n  <li>​\t冗余文件：\n    <ul>\n      <li>未被引用到Project，但存在在工程目录中的冗余的类文件</li>\n    </ul>\n  </li>\n  <li>​\t非冗余但未被使用的文件\n    <ul>\n      <li>未在其他类中使用到的类文件</li>\n    </ul>\n  </li>\n</ul>\n\n<p>为了减轻业务组件的工作量和复杂度，在此之前最好能净化/清理一下工程</p>\n\n<p>具体采用人工 or 脚本 进行清理：</p>\n\n<p>根据我们进行估算，执行的时间复杂度为 n²，如果主工程（还未进行业务组件抽离）里还有1000个文件，则遍历一遍则需要进行100万次检索，m2 芯片执行一次需要2小时左右。人工检索时间更长，并且人工检索将呈现边际效用递增的问题。</p>\n\n<p>脚本解决上述问题，并能实现近乎为0的边际成本，可以沉淀具体算法，供其他项目使用</p>\n\n<h2 id=\"2-工程清理\">2. 工程清理</h2>\n\n<h3 id=\"21-冗余文件清理\">2.1 冗余文件清理</h3>\n\n<p>通过递归遍历工程目录，将遍历后的类名逐一与XXX.xcodeproj/project.pbxproj 文件内容进行匹配，匹配失败即为：</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>未被引用到Project，但存在在工程目录中的冗余的类文件\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>具体思路可以这样实现：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\"># 设置项目目录</span>\n<span class=\"nv\">project_directory</span><span class=\"o\">=</span><span class=\"s2\">\"工程项目目录\"</span>\n<span class=\"nv\">project_path</span><span class=\"o\">=</span><span class=\"s2\">\"xxx.xcodeproj/project.pbxproj的目录\"</span>\n\n<span class=\"c\"># 查找所有以ViewController.m结尾的文件并输出列表</span>\n<span class=\"c\"># 查找所有以ViewController.m结尾的文件并输出不包含后缀名的文件名</span>\n<span class=\"nv\">all_file_path</span><span class=\"o\">=</span><span class=\"si\">$(</span>find <span class=\"s2\">\"</span><span class=\"nv\">$project_directory</span><span class=\"s2\">\"</span> <span class=\"nt\">-type</span> f <span class=\"se\">\\(</span> <span class=\"nt\">-name</span> <span class=\"s2\">\"*.h\"</span> <span class=\"se\">\\)</span><span class=\"si\">)</span>\n\n<span class=\"k\">for </span>src_file <span class=\"k\">in</span> <span class=\"nv\">$all_file_path</span><span class=\"p\">;</span> <span class=\"k\">do</span>\n<span class=\"c\">#    echo $src_file</span>\n    <span class=\"nv\">filename</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">basename</span> <span class=\"s2\">\"</span><span class=\"nv\">$src_file</span><span class=\"s2\">\"</span> .h<span class=\"si\">)</span>\n    <span class=\"k\">if</span>  <span class=\"o\">!</span> <span class=\"nb\">grep</span> <span class=\"nt\">-q</span> <span class=\"s2\">\"</span><span class=\"se\">\\b</span><span class=\"nv\">$filename</span><span class=\"se\">\\b</span><span class=\"s2\">\"</span> <span class=\"s2\">\"</span><span class=\"nv\">$project_path</span><span class=\"s2\">\"</span><span class=\"p\">;</span>  <span class=\"k\">then\n        </span><span class=\"nb\">echo</span> <span class=\"s2\">\"project不包含：\"</span><span class=\"nv\">$filename</span>\n    <span class=\"k\">fi\ndone</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h3 id=\"22-未使用文件清理\">2.2 未使用文件清理</h3>\n\n<h4 id=\"221-fui工具\">2.2.1 <a href=\"https://github.com/dblock/fui\">fui工具</a></h4>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n</pre></td><td class=\"rouge-code\"><pre><span class=\"nb\">sudo </span>gem <span class=\"nb\">install </span>fui <span class=\"nt\">-n</span> /usr/local/bin\n\nfui find\t<span class=\"c\">#当前目录执行</span>\nfui <span class=\"nt\">--path</span><span class=\"o\">=</span>~/source/project/Name find\t<span class=\"c\">#指定目录执行</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>fui工具的源码，暂时还没去详细看，但是发现一个问题，他无法识别注释的取消引用：</p>\n\n<p>举个例子，A import B，但是import 当前行注释掉了:</p>\n\n<pre><code class=\"language-objective-c\">//\n//  \n//  A.m  \n//  Example\n//\n//  Created by PSC on 2023/8/15\n//  Copyright © 2023 PSC. All rights reserved.\n//\n\n#import \"A.h\"\n//#import \"B.h\"\n\n……\n</code></pre>\n\n<p>在fui的执行结果中，不会认为B没有被使用。</p>\n\n<h4 id=\"222-自建工具\">2.2.2 自建工具</h4>\n\n<p>为了解决上述fui工具的问题，并且做出一些优化，自建工具的设计思路为：</p>\n\n<ul>\n  <li>遍历工程目录的所有实现类：.m文件（不包含category）</li>\n  <li>将类名与工程内除自身以外所有文件进行进逐行匹配（包含category）</li>\n  <li>当匹配到不包含// 与 #import 开头的行，则算为有引用，否则为未引用</li>\n  <li>将未匹配到的文件路径进行输出</li>\n  <li>将上述匹配出来的文件先进行移除，再执行一遍（由于第一层被移除，可能会暴露出更多没被引用的类）</li>\n  <li>直到没有匹配到未被调用的类为止</li>\n</ul>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#!/bin/bash</span>\n\n<span class=\"c\"># [背景]</span>\n<span class=\"c\"># 基础组件拆分到一定程度时，主工程剩下的就多数与视图界面(vc、view等)相关的类文件。此时可以考虑对业务组件进行设计和规划，但是在此时，工程还存在如下问题：</span>\n<span class=\"c\">#    冗余文件：</span>\n<span class=\"c\">#​    非冗余但未被使用的文件</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># author: Chenyp34</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [目的]</span>\n<span class=\"c\"># 此脚本解决 \"非冗余但未被使用的文件\" 的清理</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [目录]</span>\n<span class=\"c\">#   - find_unused_class.sh</span>\n<span class=\"c\"># [说明]</span>\n<span class=\"c\"># 1 遍历工程目录的所有实现类：.m文件（不包含category）</span>\n<span class=\"c\"># 2 将类名与工程内除自身以外所有文件进行进逐行匹配（包含category）</span>\n<span class=\"c\"># 3 当匹配到不包含// 与 #import 开头的行，则算为有引用，否则为未引用</span>\n<span class=\"c\"># 4 将未匹配到的文件路径进行输出</span>\n<span class=\"c\"># 5 将上述匹配出来的文件先进行移除，再执行一遍（由于第一层被移除，可能会暴露出更多没被引用的类）</span>\n<span class=\"c\"># 6 直到没有匹配到未被调用的类为止</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [参数]</span>\n<span class=\"c\"># 1、参数1，指定xcode工程目录 （未指定则为当前目录）</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [调用说明]</span>\n<span class=\"c\"># 1、未指定目录，则取当前目录：sh find_unused_class.sh</span>\n<span class=\"c\"># 2、指定目录 ：sh find_unused_class.sh /Users/xxxxx/Project-IOS/Project/Project</span>\n\n\n<span class=\"c\">#!/bin/bash</span>\n\n<span class=\"c\">#是否重复执行到没有找到不可用文件</span>\n<span class=\"nb\">export </span><span class=\"nv\">cycle_deal</span><span class=\"o\">=</span>1\n<span class=\"nb\">export </span><span class=\"nv\">cycle_idx</span><span class=\"o\">=</span>1\n<span class=\"nv\">total_unused_file_name</span><span class=\"o\">=</span><span class=\"s1\">''</span>\n<span class=\"k\">function </span>main<span class=\"o\">()</span> <span class=\"o\">{</span>\n    \n    <span class=\"c\"># 设置项目目录</span>\n    <span class=\"nv\">project_directory</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$1</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then</span>\n        <span class=\"c\">#未传参为当前目录</span>\n        <span class=\"nv\">project_directory</span><span class=\"o\">=</span><span class=\"nb\">.</span>\n    <span class=\"k\">fi</span>\n\n    <span class=\"c\">#初始化参数：</span>\n    <span class=\"nv\">unused_files</span><span class=\"o\">=</span><span class=\"s1\">''</span>\n\n    <span class=\"c\"># 查找所有以ViewController.m结尾的文件并输出列表</span>\n    <span class=\"nv\">all_class_path</span><span class=\"o\">=</span><span class=\"si\">$(</span>find <span class=\"s2\">\"</span><span class=\"nv\">$project_directory</span><span class=\"s2\">\"</span> <span class=\"nt\">-type</span> f <span class=\"se\">\\(</span> <span class=\"nt\">-name</span> <span class=\"s2\">\"*.m\"</span> <span class=\"se\">\\)</span> | <span class=\"nb\">grep</span> <span class=\"nt\">-v</span> <span class=\"s1\">'+'</span><span class=\"si\">)</span>\n\n    <span class=\"nv\">all_file_path</span><span class=\"o\">=</span><span class=\"si\">$(</span>find <span class=\"s2\">\"</span><span class=\"nv\">$project_directory</span><span class=\"s2\">\"</span> <span class=\"nt\">-type</span> f <span class=\"se\">\\(</span> <span class=\"nt\">-name</span> <span class=\"s2\">\"*.m\"</span> <span class=\"nt\">-o</span> <span class=\"nt\">-name</span> <span class=\"s2\">\"*.h\"</span> <span class=\"se\">\\)</span> <span class=\"si\">)</span>\n\n    <span class=\"k\">for </span>file <span class=\"k\">in</span> <span class=\"nv\">$all_class_path</span><span class=\"p\">;</span> <span class=\"k\">do\n        </span><span class=\"nv\">filename</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">basename</span> <span class=\"s2\">\"</span><span class=\"nv\">$file</span><span class=\"s2\">\"</span> .m<span class=\"si\">)</span>\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"***********开始遍历文件名：\"</span><span class=\"nv\">$filename</span>\n        <span class=\"nv\">is_referenced</span><span class=\"o\">=</span><span class=\"nb\">false\n        </span><span class=\"k\">for </span>other_file <span class=\"k\">in</span> <span class=\"nv\">$all_file_path</span><span class=\"p\">;</span> <span class=\"k\">do\n            </span><span class=\"nv\">other_file_name</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">basename</span> <span class=\"s2\">\"</span><span class=\"nv\">$other_file</span><span class=\"s2\">\"</span><span class=\"si\">)</span>\n            <span class=\"c\">#获取除自身以外的类名：不包含拓展的名称，为了避免在自身的.h .m进行引用判断</span>\n            <span class=\"nv\">other_file_name_without_extension</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">echo</span> <span class=\"s2\">\"</span><span class=\"nv\">$other_file_name</span><span class=\"s2\">\"</span> | <span class=\"nb\">cut</span> <span class=\"nt\">-d</span><span class=\"nb\">.</span> <span class=\"nt\">-f1</span><span class=\"si\">)</span>\n            <span class=\"c\">#获取category的主类名称</span>\n            <span class=\"nv\">other_file_name_without_extension_before_plus</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">echo</span> <span class=\"s2\">\"</span><span class=\"nv\">$other_file_name_without_extension</span><span class=\"s2\">\"</span> | <span class=\"nb\">awk</span> <span class=\"nt\">-F</span><span class=\"s1\">'+'</span> <span class=\"s1\">'{print $1}'</span><span class=\"si\">)</span>\n            <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"s2\">\"</span><span class=\"nv\">$other_file_name_without_extension_before_plus</span><span class=\"s2\">\"</span> <span class=\"o\">!=</span> <span class=\"s2\">\"</span><span class=\"nv\">$filename</span><span class=\"s2\">\"</span> <span class=\"o\">]</span> <span class=\"p\">;</span> <span class=\"k\">then</span>\n            <span class=\"c\"># if [ \"$other_file\" != \"$file\" ] &amp;&amp; ([ \"${other_file##*.}\" = \"m\" ] ); then</span>\n                <span class=\"k\">if </span><span class=\"nb\">grep</span> <span class=\"nt\">-q</span> <span class=\"s2\">\"</span><span class=\"se\">\\b</span><span class=\"nv\">$filename</span><span class=\"se\">\\b</span><span class=\"s2\">\"</span> <span class=\"s2\">\"</span><span class=\"nv\">$other_file</span><span class=\"s2\">\"</span><span class=\"p\">;</span>  <span class=\"k\">then</span>\n                    <span class=\"c\"># 检查文件中是否有注释行</span>\n                    <span class=\"nv\">has_comment</span><span class=\"o\">=</span><span class=\"nb\">false\n                    </span><span class=\"k\">while </span><span class=\"nv\">IFS</span><span class=\"o\">=</span> <span class=\"nb\">read</span> <span class=\"nt\">-r</span> line<span class=\"p\">;</span> <span class=\"k\">do\n                        </span><span class=\"nb\">echo</span> <span class=\"s2\">\"逐行匹配：\"</span><span class=\"nv\">$line</span>\n                        <span class=\"k\">if</span> <span class=\"o\">!</span> <span class=\"nb\">grep</span> <span class=\"nt\">-qE</span> <span class=\"s2\">\"^[[:space:]]*//\"</span> <span class=\"o\">&lt;&lt;&lt;</span> <span class=\"s2\">\"</span><span class=\"nv\">$line</span><span class=\"s2\">\"</span><span class=\"p\">;</span> <span class=\"k\">then\n                            if</span> <span class=\"o\">[[</span> <span class=\"o\">!</span> <span class=\"nv\">$line</span> <span class=\"o\">=</span>~ ^[[:space:]]<span class=\"k\">*</span><span class=\"c\">#import ]]; then</span>\n                                <span class=\"nv\">has_comment</span><span class=\"o\">=</span><span class=\"nb\">true\n                                echo</span> <span class=\"s2\">\"在文件:\"</span><span class=\"nv\">$other_file</span><span class=\"s2\">\"匹配\"</span><span class=\"nv\">$filename</span><span class=\"s2\">\"存在 并且不是 注释代码 或者 import 的 break（\"</span><span class=\"nv\">$line</span>\n                                <span class=\"nb\">break\n                            </span><span class=\"k\">fi\n\n                        fi\n                    done</span> <span class=\"o\">&lt;&lt;&lt;</span> <span class=\"s2\">\"</span><span class=\"si\">$(</span><span class=\"nb\">grep</span> <span class=\"s2\">\"</span><span class=\"se\">\\b</span><span class=\"nv\">$filename</span><span class=\"se\">\\b</span><span class=\"s2\">\"</span> <span class=\"s2\">\"</span><span class=\"nv\">$other_file</span><span class=\"s2\">\"</span><span class=\"si\">)</span><span class=\"s2\">\"</span>\n                    \n                    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"s2\">\"</span><span class=\"nv\">$has_comment</span><span class=\"s2\">\"</span> <span class=\"o\">=</span> <span class=\"nb\">true</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n                        </span><span class=\"nv\">is_referenced</span><span class=\"o\">=</span><span class=\"nb\">true\n                        break\n                    </span><span class=\"k\">fi\n                fi\n            fi\n        done\n\n        if</span> <span class=\"o\">[</span> <span class=\"s2\">\"</span><span class=\"nv\">$is_referenced</span><span class=\"s2\">\"</span> <span class=\"o\">=</span> <span class=\"nb\">false</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n            </span><span class=\"nb\">echo</span> <span class=\"s2\">\"没有被引用到的文件:\"</span><span class=\"nv\">$file</span>\n            <span class=\"nv\">unused_files</span><span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"nv\">$unused_files$file</span><span class=\"se\">\\n</span><span class=\"s2\">\"</span>\n        <span class=\"k\">fi\n        </span><span class=\"nb\">echo</span> <span class=\"s2\">\"***********\"</span>\n    <span class=\"k\">done</span>\n\n    <span class=\"c\"># 输出未被引用的文件列表</span>\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-n</span> <span class=\"s2\">\"</span><span class=\"nv\">$unused_files</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">echo</span> <span class=\"nt\">-e</span> <span class=\"s2\">\"Unused class files:</span><span class=\"se\">\\n</span><span class=\"nv\">$unused_files</span><span class=\"s2\">\"</span>\n        <span class=\"nv\">total_unused_file_name</span><span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"nv\">$total_unused_file_name$unused_files</span><span class=\"se\">\\n</span><span class=\"s2\">\"</span>\n\n        <span class=\"c\">#将检索出来的文件 mv 出来</span>\n        <span class=\"nb\">mkdir</span> <span class=\"nt\">-p</span> ./unused_files/<span class=\"nv\">$cycle_idx</span>/\n        <span class=\"nv\">array</span><span class=\"o\">=(</span><span class=\"sb\">`</span><span class=\"nb\">echo</span> <span class=\"nv\">$unused_files</span> | <span class=\"nb\">tr</span> <span class=\"s1\">'\\n'</span> <span class=\"s1\">' '</span><span class=\"sb\">`</span><span class=\"o\">)</span>\n        <span class=\"k\">for </span>element <span class=\"k\">in</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">array</span><span class=\"p\">[@]</span><span class=\"k\">}</span><span class=\"s2\">\"</span><span class=\"p\">;</span> <span class=\"k\">do\n            </span><span class=\"nv\">element</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">echo</span> <span class=\"s2\">\"</span><span class=\"nv\">$element</span><span class=\"s2\">\"</span> | <span class=\"nb\">tr</span> <span class=\"nt\">-d</span> <span class=\"s1\">'\\n'</span><span class=\"si\">)</span>\n            <span class=\"nb\">echo</span> <span class=\"s2\">\"Unused class = \"</span><span class=\"nv\">$element</span>\n            <span class=\"nv\">element_filename</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">basename</span> <span class=\"s2\">\"</span><span class=\"nv\">$element</span><span class=\"s2\">\"</span> .m<span class=\"si\">)</span>\n            <span class=\"nv\">element_dirname</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">dirname</span> <span class=\"s2\">\"</span><span class=\"nv\">$element</span><span class=\"s2\">\"</span><span class=\"si\">)</span>\n            <span class=\"nb\">mv</span> <span class=\"nt\">-f</span> <span class=\"k\">${</span><span class=\"nv\">element_dirname</span><span class=\"k\">}</span>/<span class=\"k\">${</span><span class=\"nv\">element_filename</span><span class=\"k\">}</span>.h ./unused_files/<span class=\"nv\">$cycle_idx</span>/<span class=\"nv\">$element_filename</span>.h\n            <span class=\"nb\">mv</span> <span class=\"nt\">-f</span> <span class=\"k\">${</span><span class=\"nv\">element_dirname</span><span class=\"k\">}</span>/<span class=\"k\">${</span><span class=\"nv\">element_filename</span><span class=\"k\">}</span>.m ./unused_files/<span class=\"nv\">$cycle_idx</span>/<span class=\"nv\">$element_filename</span>.m\n        <span class=\"k\">done</span>\n        \n        <span class=\"c\">#cycle_deal参数为空则不循环执行</span>\n        <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-n</span> <span class=\"s2\">\"</span><span class=\"nv\">$cycle_deal</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n            </span><span class=\"nb\">exit\n        </span><span class=\"k\">else</span>\n            <span class=\"c\">#cycle_deal 不为空 循环执行，直到不再有新文件检出</span>\n            <span class=\"nb\">echo</span> <span class=\"nt\">-e</span> <span class=\"s2\">\"循环执行\"</span>\n            <span class=\"nv\">cycle_idx</span><span class=\"o\">=</span><span class=\"k\">$((</span>cycle_idx+1<span class=\"k\">))</span>\n            main <span class=\"nv\">$1</span>\n        <span class=\"k\">done\n\n    else\n        </span><span class=\"nb\">echo</span> <span class=\"s2\">\"No unused ViewController files found.\"</span><span class=\"nv\">$all_file_path</span>\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"**************************\"</span>\n        <span class=\"nb\">echo</span> <span class=\"nt\">-e</span> <span class=\"s2\">\"total_unused_file_name class files:</span><span class=\"se\">\\n</span><span class=\"nv\">$total_unused_file_name</span><span class=\"s2\">\"</span>\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"**************************\"</span>\n\n        <span class=\"nb\">exit </span>0\n    <span class=\"k\">fi</span>\n<span class=\"o\">}</span>\n\n\nmain <span class=\"nv\">$1</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h4 id=\"223-尚有不足之处\">2.2.3 尚有不足之处</h4>\n\n<p>当前工具只是匹配一层未引用，也可能如下情况未适配：</p>\n\n<ul>\n  <li>存在2个以上的类存在互相引用，但却未被其他类用到，但是以上脚本暂时无法识别</li>\n  <li>存在某些类存在在其他API类、通用类、工具类等方法中，但是此方法未被调用，则此方法和该类也可以被移除，但是以上脚本暂时无法识别</li>\n</ul>\n\n","name":"2023-08-17-iOS组件化-业务组件准备篇.md","previous":{"id":"/2023/08/11/Apple企业账号注册流程","tags":[],"relative_path":"_posts/2023-08-11-Apple企业账号注册流程.md","collection":"posts","name":"2023-08-11-Apple企业账号注册流程.md","url":"/2023/08/11/Apple%E4%BC%81%E4%B8%9A%E8%B4%A6%E5%8F%B7%E6%B3%A8%E5%86%8C%E6%B5%81%E7%A8%8B/","title":"Apple 企业账号注册流程","date":"2023-08-11 00:00:00 +0800","categories":[],"path":"_posts/2023-08-11-Apple企业账号注册流程.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/home-bg-geek.jpg","slug":"Apple企业账号注册流程","ext":".md"},"output":"<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"google-site-verification\" content=\"xBT4GhYoi5qRD5tr338pgPM5OWHHIDR6mNg1a3euekI\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, viewport-fit=cover\">\n    <meta name=\"description\" content=\"与你一起发现更大的世界。\">\n    <meta name=\"keywords\"  content=\"PaysonChen,iOS,流媒体\">\n    <meta name=\"theme-color\" content=\"#000000\">\n    \n    <!-- Open Graph -->\n    <meta property=\"og:title\" content=\"iOS组件化之：业务组件准备篇 - PaysonChen的博客 | PaysonChen Blog\">\n    \n    <meta property=\"og:type\" content=\"article\">\n    <meta property=\"og:description\" content=\"iOS组件化之：业务组件准备篇\n\">\n    \n    \n    <meta property=\"article:published_time\" content=\"2023-08-17T00:00:00Z\">\n    \n    \n    <meta property=\"article:author\" content=\"PaysonChen\">\n    \n    \n    \n    <meta property=\"og:image\" content=\"http://localhost:4000\">\n    <meta property=\"og:url\" content=\"http://localhost:4000/2023/08/17/iOS%E7%BB%84%E4%BB%B6%E5%8C%96-%E4%B8%9A%E5%8A%A1%E7%BB%84%E4%BB%B6%E5%87%86%E5%A4%87%E7%AF%87/\">\n    <meta property=\"og:site_name\" content=\"PaysonChen的博客 | PaysonChen Blog\">\n    \n    <title>iOS组件化之：业务组件准备篇 - PaysonChen的博客 | PaysonChen Blog</title>\n\n    <!-- Web App Manifest -->\n    <link rel=\"manifest\" href=\"/pwa/manifest.json\">\n\n    <!-- Favicon -->\n    <link rel=\"shortcut icon\" href=\"/img/favicon.ico\">\n    \n    <!-- Canonical URL -->\n    <link rel=\"canonical\" href=\"http://localhost:4000/2023/08/17/iOS%E7%BB%84%E4%BB%B6%E5%8C%96-%E4%B8%9A%E5%8A%A1%E7%BB%84%E4%BB%B6%E5%87%86%E5%A4%87%E7%AF%87/\">\n\n    <!-- Bootstrap Core CSS -->\n    <link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\">\n\n    <!-- Custom CSS -->\n    <link rel=\"stylesheet\" href=\"/css/hux-blog.min.css\">\n\n    <!-- Custom Fonts -->\n    <!-- <link href=\"http://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\"> -->\n    <!-- Hux change font-awesome CDN to qiniu -->\n    <link href=\"//cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\">\n\n\n    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->\n    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->\n    <!--[if lt IE 9]>\n        <script src=\"https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js\"></script>\n        <script src=\"https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js\"></script>\n    <![endif]-->\n\n    <!-- ga & ba script hoook -->\n    <script></script>\n</head>\n\n\n<!-- hack iOS CSS :active style -->\n<body ontouchstart=\"\">\n\n    <!-- Navigation -->\n\n    <nav class=\"navbar navbar-default navbar-custom navbar-fixed-top\">\n        \n        <div class=\"container-fluid\">\n            <!-- Brand and toggle get grouped for better mobile display -->\n            <div class=\"navbar-header page-scroll\">\n                <button type=\"button\" class=\"navbar-toggle\">\n                    <span class=\"sr-only\">Toggle navigation</span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                </button>\n                <a class=\"navbar-brand\" href=\"/\">PaysonChen Blog</a>\n            </div>\n\n            <!-- Collect the nav links, forms, and other content for toggling -->\n            <div id=\"huxblog_navbar\">\n                <div class=\"navbar-collapse\">\n                    <ul class=\"nav navbar-nav navbar-right\">\n                        <li>\n                            <a href=\"/\">Home</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        <li>\n                            <a href=\"/about/\">About</a>\n                        </li>\n                        \n                        \n                        \n                        <li>\n                            <a href=\"/archive/\">Archive</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        <li class=\"search-icon\">\n                            <a href=\"javascript:void(0)\">\n                                <i class=\"fa fa-search\"></i>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n            <!-- /.navbar-collapse -->\n        </div>\n        <!-- /.container -->\n    </nav>\n\n    <script>\n        // Drop Bootstarp low-performance Navbar\n        // Use customize navbar with high-quality material design animation\n        // in high-perf jank-free CSS3 implementation\n        var $body = document.body;\n        var $toggle = document.querySelector('.navbar-toggle');\n        var $navbar = document.querySelector('#huxblog_navbar');\n        var $collapse = document.querySelector('.navbar-collapse');\n\n        var __HuxNav__ = {\n            close: function () {\n                $navbar.className = \" \";\n                // wait until animation end.\n                setTimeout(function () {\n                    // prevent frequently toggle\n                    if ($navbar.className.indexOf('in') < 0) {\n                        $collapse.style.height = \"0px\"\n                    }\n                }, 400)\n            },\n            open: function () {\n                $collapse.style.height = \"auto\"\n                $navbar.className += \" in\";\n            }\n        }\n\n        // Bind Event\n        $toggle.addEventListener('click', function (e) {\n            if ($navbar.className.indexOf('in') > 0) {\n                __HuxNav__.close()\n            } else {\n                __HuxNav__.open()\n            }\n        })\n\n        /**\n         * Since Fastclick is used to delegate 'touchstart' globally\n         * to hack 300ms delay in iOS by performing a fake 'click',\n         * Using 'e.stopPropagation' to stop 'touchstart' event from \n         * $toggle/$collapse will break global delegation.\n         * \n         * Instead, we use a 'e.target' filter to prevent handler\n         * added to document close HuxNav.  \n         *\n         * Also, we use 'click' instead of 'touchstart' as compromise\n         */\n        document.addEventListener('click', function (e) {\n            if (e.target == $toggle) return;\n            if (e.target.className == 'icon-bar') return;\n            __HuxNav__.close();\n        })\n    </script>\n    <!-- Search -->\n<div class=\"search-page\">\n  <div class=\"search-icon-close-container\">\n    <span class=\"search-icon-close\">\n      <i class=\"fa fa-chevron-down\"></i>\n    </span>\n  </div>\n  <div class=\"search-main container\">\n    <div class=\"row\">\n      <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n        <form></form>\n        <input type=\"text\" id=\"search-input\" placeholder=\"$ grep...\">\n        </form>\n        <div id=\"search-results\" class=\"mini-post-list\"></div>\n      </div>\n    </div>\n  </div>\n</div>\n\n    <!-- Image to hack wechat -->\n<!-- <img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\"> -->\n<!-- <img src=\"/img/home-bg-geek.jpg\" width=\"0\" height=\"0\"> -->\n\n<!-- Post Header -->\n\n\n\n<style type=\"text/css\">\n    header.intro-header{\n        position: relative;\n        background-image: url('/img/home-bg-geek.jpg');\n        background: ;\n    }\n\n    \n</style>\n\n<header class=\"intro-header\" >\n\n    <div class=\"header-mask\"></div>\n    \n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <div class=\"post-heading\">\n                    <div class=\"tags\">\n                        \n                    </div>\n                    <h1>iOS组件化之：业务组件准备篇</h1>\n                    \n                    <h2 class=\"subheading\"></h2>\n                    <span class=\"meta\">Posted by PaysonChen on August 17, 2023</span>\n                </div>\n            </div>\n        </div>\n    </div>\n</header>\n\n\n\n\n\n\n<!-- Post Content -->\n<article>\n    <div class=\"container\">\n        <div class=\"row\">\n\n    <!-- Post Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                post-container\">\n\n                <!-- Multi-Lingual -->\n                \n\n\t\t\t\t<h1 id=\"ios组件化之业务组件准备篇\">iOS组件化之：业务组件准备篇</h1>\n\n<h2 id=\"1-背景\">1. 背景</h2>\n\n<p>基础组件拆分到一定程度时，主工程剩下的就多数与视图界面(vc、view等)相关的类文件。此时可以考虑对业务组件进行设计和规划，但是在此时，工程还存在如下问题：</p>\n\n<ul>\n  <li>​\t冗余文件：\n    <ul>\n      <li>未被引用到Project，但存在在工程目录中的冗余的类文件</li>\n    </ul>\n  </li>\n  <li>​\t非冗余但未被使用的文件\n    <ul>\n      <li>未在其他类中使用到的类文件</li>\n    </ul>\n  </li>\n</ul>\n\n<p>为了减轻业务组件的工作量和复杂度，在此之前最好能净化/清理一下工程</p>\n\n<p>具体采用人工 or 脚本 进行清理：</p>\n\n<p>根据我们进行估算，执行的时间复杂度为 n²，如果主工程（还未进行业务组件抽离）里还有1000个文件，则遍历一遍则需要进行100万次检索，m2 芯片执行一次需要2小时左右。人工检索时间更长，并且人工检索将呈现边际效用递增的问题。</p>\n\n<p>脚本解决上述问题，并能实现近乎为0的边际成本，可以沉淀具体算法，供其他项目使用</p>\n\n<h2 id=\"2-工程清理\">2. 工程清理</h2>\n\n<h3 id=\"21-冗余文件清理\">2.1 冗余文件清理</h3>\n\n<p>通过递归遍历工程目录，将遍历后的类名逐一与XXX.xcodeproj/project.pbxproj 文件内容进行匹配，匹配失败即为：</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>未被引用到Project，但存在在工程目录中的冗余的类文件\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>具体思路可以这样实现：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\"># 设置项目目录</span>\n<span class=\"nv\">project_directory</span><span class=\"o\">=</span><span class=\"s2\">\"工程项目目录\"</span>\n<span class=\"nv\">project_path</span><span class=\"o\">=</span><span class=\"s2\">\"xxx.xcodeproj/project.pbxproj的目录\"</span>\n\n<span class=\"c\"># 查找所有以ViewController.m结尾的文件并输出列表</span>\n<span class=\"c\"># 查找所有以ViewController.m结尾的文件并输出不包含后缀名的文件名</span>\n<span class=\"nv\">all_file_path</span><span class=\"o\">=</span><span class=\"si\">$(</span>find <span class=\"s2\">\"</span><span class=\"nv\">$project_directory</span><span class=\"s2\">\"</span> <span class=\"nt\">-type</span> f <span class=\"se\">\\(</span> <span class=\"nt\">-name</span> <span class=\"s2\">\"*.h\"</span> <span class=\"se\">\\)</span><span class=\"si\">)</span>\n\n<span class=\"k\">for </span>src_file <span class=\"k\">in</span> <span class=\"nv\">$all_file_path</span><span class=\"p\">;</span> <span class=\"k\">do</span>\n<span class=\"c\">#    echo $src_file</span>\n    <span class=\"nv\">filename</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">basename</span> <span class=\"s2\">\"</span><span class=\"nv\">$src_file</span><span class=\"s2\">\"</span> .h<span class=\"si\">)</span>\n    <span class=\"k\">if</span>  <span class=\"o\">!</span> <span class=\"nb\">grep</span> <span class=\"nt\">-q</span> <span class=\"s2\">\"</span><span class=\"se\">\\b</span><span class=\"nv\">$filename</span><span class=\"se\">\\b</span><span class=\"s2\">\"</span> <span class=\"s2\">\"</span><span class=\"nv\">$project_path</span><span class=\"s2\">\"</span><span class=\"p\">;</span>  <span class=\"k\">then\n        </span><span class=\"nb\">echo</span> <span class=\"s2\">\"project不包含：\"</span><span class=\"nv\">$filename</span>\n    <span class=\"k\">fi\ndone</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h3 id=\"22-未使用文件清理\">2.2 未使用文件清理</h3>\n\n<h4 id=\"221-fui工具\">2.2.1 <a href=\"https://github.com/dblock/fui\">fui工具</a></h4>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n</pre></td><td class=\"rouge-code\"><pre><span class=\"nb\">sudo </span>gem <span class=\"nb\">install </span>fui <span class=\"nt\">-n</span> /usr/local/bin\n\nfui find\t<span class=\"c\">#当前目录执行</span>\nfui <span class=\"nt\">--path</span><span class=\"o\">=</span>~/source/project/Name find\t<span class=\"c\">#指定目录执行</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>fui工具的源码，暂时还没去详细看，但是发现一个问题，他无法识别注释的取消引用：</p>\n\n<p>举个例子，A import B，但是import 当前行注释掉了:</p>\n\n<pre><code class=\"language-objective-c\">//\n//  \n//  A.m  \n//  Example\n//\n//  Created by PSC on 2023/8/15\n//  Copyright © 2023 PSC. All rights reserved.\n//\n\n#import \"A.h\"\n//#import \"B.h\"\n\n……\n</code></pre>\n\n<p>在fui的执行结果中，不会认为B没有被使用。</p>\n\n<h4 id=\"222-自建工具\">2.2.2 自建工具</h4>\n\n<p>为了解决上述fui工具的问题，并且做出一些优化，自建工具的设计思路为：</p>\n\n<ul>\n  <li>遍历工程目录的所有实现类：.m文件（不包含category）</li>\n  <li>将类名与工程内除自身以外所有文件进行进逐行匹配（包含category）</li>\n  <li>当匹配到不包含// 与 #import 开头的行，则算为有引用，否则为未引用</li>\n  <li>将未匹配到的文件路径进行输出</li>\n  <li>将上述匹配出来的文件先进行移除，再执行一遍（由于第一层被移除，可能会暴露出更多没被引用的类）</li>\n  <li>直到没有匹配到未被调用的类为止</li>\n</ul>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#!/bin/bash</span>\n\n<span class=\"c\"># [背景]</span>\n<span class=\"c\"># 基础组件拆分到一定程度时，主工程剩下的就多数与视图界面(vc、view等)相关的类文件。此时可以考虑对业务组件进行设计和规划，但是在此时，工程还存在如下问题：</span>\n<span class=\"c\">#    冗余文件：</span>\n<span class=\"c\">#​    非冗余但未被使用的文件</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># author: Chenyp34</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [目的]</span>\n<span class=\"c\"># 此脚本解决 \"非冗余但未被使用的文件\" 的清理</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [目录]</span>\n<span class=\"c\">#   - find_unused_class.sh</span>\n<span class=\"c\"># [说明]</span>\n<span class=\"c\"># 1 遍历工程目录的所有实现类：.m文件（不包含category）</span>\n<span class=\"c\"># 2 将类名与工程内除自身以外所有文件进行进逐行匹配（包含category）</span>\n<span class=\"c\"># 3 当匹配到不包含// 与 #import 开头的行，则算为有引用，否则为未引用</span>\n<span class=\"c\"># 4 将未匹配到的文件路径进行输出</span>\n<span class=\"c\"># 5 将上述匹配出来的文件先进行移除，再执行一遍（由于第一层被移除，可能会暴露出更多没被引用的类）</span>\n<span class=\"c\"># 6 直到没有匹配到未被调用的类为止</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [参数]</span>\n<span class=\"c\"># 1、参数1，指定xcode工程目录 （未指定则为当前目录）</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [调用说明]</span>\n<span class=\"c\"># 1、未指定目录，则取当前目录：sh find_unused_class.sh</span>\n<span class=\"c\"># 2、指定目录 ：sh find_unused_class.sh /Users/xxxxx/Project-IOS/Project/Project</span>\n\n\n<span class=\"c\">#!/bin/bash</span>\n\n<span class=\"c\">#是否重复执行到没有找到不可用文件</span>\n<span class=\"nb\">export </span><span class=\"nv\">cycle_deal</span><span class=\"o\">=</span>1\n<span class=\"nb\">export </span><span class=\"nv\">cycle_idx</span><span class=\"o\">=</span>1\n<span class=\"nv\">total_unused_file_name</span><span class=\"o\">=</span><span class=\"s1\">''</span>\n<span class=\"k\">function </span>main<span class=\"o\">()</span> <span class=\"o\">{</span>\n    \n    <span class=\"c\"># 设置项目目录</span>\n    <span class=\"nv\">project_directory</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$1</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then</span>\n        <span class=\"c\">#未传参为当前目录</span>\n        <span class=\"nv\">project_directory</span><span class=\"o\">=</span><span class=\"nb\">.</span>\n    <span class=\"k\">fi</span>\n\n    <span class=\"c\">#初始化参数：</span>\n    <span class=\"nv\">unused_files</span><span class=\"o\">=</span><span class=\"s1\">''</span>\n\n    <span class=\"c\"># 查找所有以ViewController.m结尾的文件并输出列表</span>\n    <span class=\"nv\">all_class_path</span><span class=\"o\">=</span><span class=\"si\">$(</span>find <span class=\"s2\">\"</span><span class=\"nv\">$project_directory</span><span class=\"s2\">\"</span> <span class=\"nt\">-type</span> f <span class=\"se\">\\(</span> <span class=\"nt\">-name</span> <span class=\"s2\">\"*.m\"</span> <span class=\"se\">\\)</span> | <span class=\"nb\">grep</span> <span class=\"nt\">-v</span> <span class=\"s1\">'+'</span><span class=\"si\">)</span>\n\n    <span class=\"nv\">all_file_path</span><span class=\"o\">=</span><span class=\"si\">$(</span>find <span class=\"s2\">\"</span><span class=\"nv\">$project_directory</span><span class=\"s2\">\"</span> <span class=\"nt\">-type</span> f <span class=\"se\">\\(</span> <span class=\"nt\">-name</span> <span class=\"s2\">\"*.m\"</span> <span class=\"nt\">-o</span> <span class=\"nt\">-name</span> <span class=\"s2\">\"*.h\"</span> <span class=\"se\">\\)</span> <span class=\"si\">)</span>\n\n    <span class=\"k\">for </span>file <span class=\"k\">in</span> <span class=\"nv\">$all_class_path</span><span class=\"p\">;</span> <span class=\"k\">do\n        </span><span class=\"nv\">filename</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">basename</span> <span class=\"s2\">\"</span><span class=\"nv\">$file</span><span class=\"s2\">\"</span> .m<span class=\"si\">)</span>\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"***********开始遍历文件名：\"</span><span class=\"nv\">$filename</span>\n        <span class=\"nv\">is_referenced</span><span class=\"o\">=</span><span class=\"nb\">false\n        </span><span class=\"k\">for </span>other_file <span class=\"k\">in</span> <span class=\"nv\">$all_file_path</span><span class=\"p\">;</span> <span class=\"k\">do\n            </span><span class=\"nv\">other_file_name</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">basename</span> <span class=\"s2\">\"</span><span class=\"nv\">$other_file</span><span class=\"s2\">\"</span><span class=\"si\">)</span>\n            <span class=\"c\">#获取除自身以外的类名：不包含拓展的名称，为了避免在自身的.h .m进行引用判断</span>\n            <span class=\"nv\">other_file_name_without_extension</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">echo</span> <span class=\"s2\">\"</span><span class=\"nv\">$other_file_name</span><span class=\"s2\">\"</span> | <span class=\"nb\">cut</span> <span class=\"nt\">-d</span><span class=\"nb\">.</span> <span class=\"nt\">-f1</span><span class=\"si\">)</span>\n            <span class=\"c\">#获取category的主类名称</span>\n            <span class=\"nv\">other_file_name_without_extension_before_plus</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">echo</span> <span class=\"s2\">\"</span><span class=\"nv\">$other_file_name_without_extension</span><span class=\"s2\">\"</span> | <span class=\"nb\">awk</span> <span class=\"nt\">-F</span><span class=\"s1\">'+'</span> <span class=\"s1\">'{print $1}'</span><span class=\"si\">)</span>\n            <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"s2\">\"</span><span class=\"nv\">$other_file_name_without_extension_before_plus</span><span class=\"s2\">\"</span> <span class=\"o\">!=</span> <span class=\"s2\">\"</span><span class=\"nv\">$filename</span><span class=\"s2\">\"</span> <span class=\"o\">]</span> <span class=\"p\">;</span> <span class=\"k\">then</span>\n            <span class=\"c\"># if [ \"$other_file\" != \"$file\" ] &amp;&amp; ([ \"${other_file##*.}\" = \"m\" ] ); then</span>\n                <span class=\"k\">if </span><span class=\"nb\">grep</span> <span class=\"nt\">-q</span> <span class=\"s2\">\"</span><span class=\"se\">\\b</span><span class=\"nv\">$filename</span><span class=\"se\">\\b</span><span class=\"s2\">\"</span> <span class=\"s2\">\"</span><span class=\"nv\">$other_file</span><span class=\"s2\">\"</span><span class=\"p\">;</span>  <span class=\"k\">then</span>\n                    <span class=\"c\"># 检查文件中是否有注释行</span>\n                    <span class=\"nv\">has_comment</span><span class=\"o\">=</span><span class=\"nb\">false\n                    </span><span class=\"k\">while </span><span class=\"nv\">IFS</span><span class=\"o\">=</span> <span class=\"nb\">read</span> <span class=\"nt\">-r</span> line<span class=\"p\">;</span> <span class=\"k\">do\n                        </span><span class=\"nb\">echo</span> <span class=\"s2\">\"逐行匹配：\"</span><span class=\"nv\">$line</span>\n                        <span class=\"k\">if</span> <span class=\"o\">!</span> <span class=\"nb\">grep</span> <span class=\"nt\">-qE</span> <span class=\"s2\">\"^[[:space:]]*//\"</span> <span class=\"o\">&lt;&lt;&lt;</span> <span class=\"s2\">\"</span><span class=\"nv\">$line</span><span class=\"s2\">\"</span><span class=\"p\">;</span> <span class=\"k\">then\n                            if</span> <span class=\"o\">[[</span> <span class=\"o\">!</span> <span class=\"nv\">$line</span> <span class=\"o\">=</span>~ ^[[:space:]]<span class=\"k\">*</span><span class=\"c\">#import ]]; then</span>\n                                <span class=\"nv\">has_comment</span><span class=\"o\">=</span><span class=\"nb\">true\n                                echo</span> <span class=\"s2\">\"在文件:\"</span><span class=\"nv\">$other_file</span><span class=\"s2\">\"匹配\"</span><span class=\"nv\">$filename</span><span class=\"s2\">\"存在 并且不是 注释代码 或者 import 的 break（\"</span><span class=\"nv\">$line</span>\n                                <span class=\"nb\">break\n                            </span><span class=\"k\">fi\n\n                        fi\n                    done</span> <span class=\"o\">&lt;&lt;&lt;</span> <span class=\"s2\">\"</span><span class=\"si\">$(</span><span class=\"nb\">grep</span> <span class=\"s2\">\"</span><span class=\"se\">\\b</span><span class=\"nv\">$filename</span><span class=\"se\">\\b</span><span class=\"s2\">\"</span> <span class=\"s2\">\"</span><span class=\"nv\">$other_file</span><span class=\"s2\">\"</span><span class=\"si\">)</span><span class=\"s2\">\"</span>\n                    \n                    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"s2\">\"</span><span class=\"nv\">$has_comment</span><span class=\"s2\">\"</span> <span class=\"o\">=</span> <span class=\"nb\">true</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n                        </span><span class=\"nv\">is_referenced</span><span class=\"o\">=</span><span class=\"nb\">true\n                        break\n                    </span><span class=\"k\">fi\n                fi\n            fi\n        done\n\n        if</span> <span class=\"o\">[</span> <span class=\"s2\">\"</span><span class=\"nv\">$is_referenced</span><span class=\"s2\">\"</span> <span class=\"o\">=</span> <span class=\"nb\">false</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n            </span><span class=\"nb\">echo</span> <span class=\"s2\">\"没有被引用到的文件:\"</span><span class=\"nv\">$file</span>\n            <span class=\"nv\">unused_files</span><span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"nv\">$unused_files$file</span><span class=\"se\">\\n</span><span class=\"s2\">\"</span>\n        <span class=\"k\">fi\n        </span><span class=\"nb\">echo</span> <span class=\"s2\">\"***********\"</span>\n    <span class=\"k\">done</span>\n\n    <span class=\"c\"># 输出未被引用的文件列表</span>\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-n</span> <span class=\"s2\">\"</span><span class=\"nv\">$unused_files</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">echo</span> <span class=\"nt\">-e</span> <span class=\"s2\">\"Unused class files:</span><span class=\"se\">\\n</span><span class=\"nv\">$unused_files</span><span class=\"s2\">\"</span>\n        <span class=\"nv\">total_unused_file_name</span><span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"nv\">$total_unused_file_name$unused_files</span><span class=\"se\">\\n</span><span class=\"s2\">\"</span>\n\n        <span class=\"c\">#将检索出来的文件 mv 出来</span>\n        <span class=\"nb\">mkdir</span> <span class=\"nt\">-p</span> ./unused_files/<span class=\"nv\">$cycle_idx</span>/\n        <span class=\"nv\">array</span><span class=\"o\">=(</span><span class=\"sb\">`</span><span class=\"nb\">echo</span> <span class=\"nv\">$unused_files</span> | <span class=\"nb\">tr</span> <span class=\"s1\">'\\n'</span> <span class=\"s1\">' '</span><span class=\"sb\">`</span><span class=\"o\">)</span>\n        <span class=\"k\">for </span>element <span class=\"k\">in</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">array</span><span class=\"p\">[@]</span><span class=\"k\">}</span><span class=\"s2\">\"</span><span class=\"p\">;</span> <span class=\"k\">do\n            </span><span class=\"nv\">element</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">echo</span> <span class=\"s2\">\"</span><span class=\"nv\">$element</span><span class=\"s2\">\"</span> | <span class=\"nb\">tr</span> <span class=\"nt\">-d</span> <span class=\"s1\">'\\n'</span><span class=\"si\">)</span>\n            <span class=\"nb\">echo</span> <span class=\"s2\">\"Unused class = \"</span><span class=\"nv\">$element</span>\n            <span class=\"nv\">element_filename</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">basename</span> <span class=\"s2\">\"</span><span class=\"nv\">$element</span><span class=\"s2\">\"</span> .m<span class=\"si\">)</span>\n            <span class=\"nv\">element_dirname</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">dirname</span> <span class=\"s2\">\"</span><span class=\"nv\">$element</span><span class=\"s2\">\"</span><span class=\"si\">)</span>\n            <span class=\"nb\">mv</span> <span class=\"nt\">-f</span> <span class=\"k\">${</span><span class=\"nv\">element_dirname</span><span class=\"k\">}</span>/<span class=\"k\">${</span><span class=\"nv\">element_filename</span><span class=\"k\">}</span>.h ./unused_files/<span class=\"nv\">$cycle_idx</span>/<span class=\"nv\">$element_filename</span>.h\n            <span class=\"nb\">mv</span> <span class=\"nt\">-f</span> <span class=\"k\">${</span><span class=\"nv\">element_dirname</span><span class=\"k\">}</span>/<span class=\"k\">${</span><span class=\"nv\">element_filename</span><span class=\"k\">}</span>.m ./unused_files/<span class=\"nv\">$cycle_idx</span>/<span class=\"nv\">$element_filename</span>.m\n        <span class=\"k\">done</span>\n        \n        <span class=\"c\">#cycle_deal参数为空则不循环执行</span>\n        <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-n</span> <span class=\"s2\">\"</span><span class=\"nv\">$cycle_deal</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n            </span><span class=\"nb\">exit\n        </span><span class=\"k\">else</span>\n            <span class=\"c\">#cycle_deal 不为空 循环执行，直到不再有新文件检出</span>\n            <span class=\"nb\">echo</span> <span class=\"nt\">-e</span> <span class=\"s2\">\"循环执行\"</span>\n            <span class=\"nv\">cycle_idx</span><span class=\"o\">=</span><span class=\"k\">$((</span>cycle_idx+1<span class=\"k\">))</span>\n            main <span class=\"nv\">$1</span>\n        <span class=\"k\">done\n\n    else\n        </span><span class=\"nb\">echo</span> <span class=\"s2\">\"No unused ViewController files found.\"</span><span class=\"nv\">$all_file_path</span>\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"**************************\"</span>\n        <span class=\"nb\">echo</span> <span class=\"nt\">-e</span> <span class=\"s2\">\"total_unused_file_name class files:</span><span class=\"se\">\\n</span><span class=\"nv\">$total_unused_file_name</span><span class=\"s2\">\"</span>\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"**************************\"</span>\n\n        <span class=\"nb\">exit </span>0\n    <span class=\"k\">fi</span>\n<span class=\"o\">}</span>\n\n\nmain <span class=\"nv\">$1</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h4 id=\"223-尚有不足之处\">2.2.3 尚有不足之处</h4>\n\n<p>当前工具只是匹配一层未引用，也可能如下情况未适配：</p>\n\n<ul>\n  <li>存在2个以上的类存在互相引用，但却未被其他类用到，但是以上脚本暂时无法识别</li>\n  <li>存在某些类存在在其他API类、通用类、工具类等方法中，但是此方法未被调用，则此方法和该类也可以被移除，但是以上脚本暂时无法识别</li>\n</ul>\n\n\n\n                <hr style=\"visibility: hidden;\">\n                <ul class=\"pager\">\n                    \n                    <li class=\"previous\">\n                        <a href=\"/2023/08/11/Apple%E4%BC%81%E4%B8%9A%E8%B4%A6%E5%8F%B7%E6%B3%A8%E5%86%8C%E6%B5%81%E7%A8%8B/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Apple 企业账号注册流程\">\n                        Previous<br>\n                        <span>Apple 企业账号注册流程</span>\n                        </a>\n                    </li>\n                    \n                    \n                    <li class=\"next\">\n                        <a href=\"/2023/09/12/iOS-OC-Swift%E6%B7%B7%E7%BC%96/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Pod仓库内OC与Swift调用\">\n                        Next<br>\n                        <span>Pod仓库内OC与Swift调用</span>\n                        </a>\n                    </li>\n                    \n                </ul>\n                <hr style=\"visibility: hidden;\">\n\n                \n                <!-- disqus 评论框 start -->\n                <div class=\"comment\">\n                    <div id=\"disqus_thread\" class=\"disqus-thread\"></div>\n                </div>\n                <!-- disqus 评论框 end -->\n                \n\n                \n            </div>  \n\n    <!-- Side Catalog Container -->\n        \n            <div class=\"\n                col-lg-2 col-lg-offset-0\n                visible-lg-block\n                sidebar-container\n                catalog-container\">\n                <div class=\"side-catalog\">\n                    <hr class=\"hidden-sm hidden-xs\">\n                    <h5>\n                        <a class=\"catalog-toggle\" href=\"#\">CATALOG</a>\n                    </h5>\n                    <ul class=\"catalog-body\"></ul>\n                </div>\n            </div>\n        \n\n    <!-- Sidebar Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                sidebar-container\">\n\n                <!-- Featured Tags -->\n                \n\n\n<section>\n    \n        <hr class=\"hidden-sm hidden-xs\">\n    \n    <h5><a href=\"/archive/\">FEATURED TAGS</a></h5>\n    <div class=\"tags\">\n        \n        \n        \n        \n        \n    </div>\n</section>\n\n\n                <!-- Friends Blog -->\n                \n            </div>\n        </div>\n    </div>\n</article>\n\n<!-- add support for mathjax by voleking-->\n\n\n\n\n\n\n<!-- disqus 公共JS代码 start (一个网页只需插入一次) -->\n<script type=\"text/javascript\">\n    /* * * CONFIGURATION VARIABLES * * */\n    var disqus_shortname = \"Cyp\";\n    var disqus_identifier = \"/2023/08/17/iOS组件化-业务组件准备篇\";\n    var disqus_url = \"http://localhost:4000/2023/08/17/iOS%E7%BB%84%E4%BB%B6%E5%8C%96-%E4%B8%9A%E5%8A%A1%E7%BB%84%E4%BB%B6%E5%87%86%E5%A4%87%E7%AF%87/\";\n\n    (function() {\n        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;\n        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';\n        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);\n    })();\n</script>\n<!-- disqus 公共JS代码 end -->\n\n\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n      var d = document, t = 'script',\n          o = d.createElement(t),\n          s = d.getElementsByTagName(t)[0];\n      o.src = u;\n      if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n      s.parentNode.insertBefore(o, s);\n    }\n</script>\n<!-- anchor-js, Doc:http://bryanbraun.github.io/anchorjs/ -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/anchor-js/1.1.1/anchor.min.js\",function(){\n        anchors.options = {\n          visible: 'hover',\n          placement: 'right',\n          // icon: '#'\n        };\n        anchors.add().remove('.intro-header h1').remove('.subheading').remove('.sidebar-container h5');\n    })\n</script>\n<style>\n    /* place left on bigger screen */\n    @media all and (min-width: 800px) {\n        .anchorjs-link{\n            position: absolute;\n            left: -0.75em;\n            font-size: 1.1em;\n            margin-top : -0.1em;\n        }\n    }\n</style>\n\n\n\n    <!-- Footer -->\n<footer>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <!-- SNS Link -->\n                \n\n\n<ul class=\"list-inline text-center\">\n\n\n  \n  \n  \n  \n  \n  \n  \n</ul>\n\n                <p class=\"copyright text-muted\">\n                    Copyright &copy; PaysonChen Blog 2024\n                    <br>\n                    <!-- Powered by <a href=\"http://huangxuan.me\">Hux Blog</a> | -->\n                 <!--    <iframe style=\"margin-left: 2px; margin-bottom:-5px;\" frameborder=\"0\" scrolling=\"0\" width=\"100px\"\n                        height=\"20px\"\n                        src=\"https://ghbtns.com/github-btn.html?user=huxpro&repo=huxpro.github.io&type=star&count=true\">\n                    </iframe> -->\n                </p>\n            </div>\n        </div>\n    </div>\n</footer>\n\n<!-- jQuery -->\n<script src=\"/js/jquery.min.js \"></script>\n\n<!-- Bootstrap Core JavaScript -->\n<!-- Currently, only navbar scroll-down effect at desktop still depends on this -->\n<script src=\"/js/bootstrap.min.js \"></script>\n\n<!-- Custom Theme JavaScript -->\n<script src=\"/js/hux-blog.min.js \"></script>\n\n<!-- Simple Jekyll Search -->\n<script src=\"/js/simple-jekyll-search.min.js\"></script>\n\n<!-- Service Worker -->\n\n<script src=\"/js/snackbar.js \"></script>\n<script src=\"/js/sw-registration.js \"></script>\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n        var d = document, t = 'script',\n            o = d.createElement(t),\n            s = d.getElementsByTagName(t)[0];\n        o.src = u;\n        if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n        s.parentNode.insertBefore(o, s);\n    }\n</script>\n\n<!--\n     Because of the native support for backtick-style fenced code blocks\n     right within the Markdown is landed in Github Pages,\n     From V1.6, There is no need for Highlight.js,\n     so Huxblog drops it officially.\n\n     - https://github.com/blog/2100-github-pages-now-faster-and-simpler-with-jekyll-3-0\n     - https://help.github.com/articles/creating-and-highlighting-code-blocks/\n     - https://github.com/jneen/rouge/wiki/list-of-supported-languages-and-lexers\n-->\n<!--\n    <script>\n        async(\"http://cdn.bootcss.com/highlight.js/8.6/highlight.min.js\", function(){\n            hljs.initHighlightingOnLoad();\n        })\n    </script>\n    <link href=\"http://cdn.bootcss.com/highlight.js/8.6/styles/github.min.css\" rel=\"stylesheet\">\n-->\n\n\n\n\n\n\n\n<!--fastClick.js -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/fastclick/1.0.6/fastclick.min.js\", function () {\n        var $nav = document.querySelector(\"nav\");\n        if ($nav) FastClick.attach($nav);\n    })\n</script>\n\n\n<!-- Google Analytics -->\n\n\n\n<!-- Baidu Tongji -->\n\n\n\n<!-- Side Catalog -->\n\n<script type=\"text/javascript\">\n    function generateCatalog(selector) {\n\n        // interop with multilangual \n        if ('' == 'true') {\n            _containerSelector = 'div.post-container.active'\n        } else {\n            _containerSelector = 'div.post-container'\n        }\n\n        // init\n        var P = $(_containerSelector), a, n, t, l, i, c;\n        a = P.find('h1,h2,h3,h4,h5,h6');\n\n        // clean\n        $(selector).html('')\n\n        // appending\n        a.each(function () {\n            n = $(this).prop('tagName').toLowerCase();\n            i = \"#\" + $(this).prop('id');\n            t = $(this).text();\n            c = $('<a href=\"' + i + '\" rel=\"nofollow\">' + t + '</a>');\n            l = $('<li class=\"' + n + '_nav\"></li>').append(c);\n            $(selector).append(l);\n        });\n        return true;\n    }\n\n    generateCatalog(\".catalog-body\");\n\n    // toggle side catalog\n    $(\".catalog-toggle\").click((function (e) {\n        e.preventDefault();\n        $('.side-catalog').toggleClass(\"fold\")\n    }))\n\n    /*\n     * Doc: https://github.com/davist11/jQuery-One-Page-Nav\n     * Fork by Hux to support padding\n     */\n    async(\"/js/jquery.nav.js\", function () {\n        $('.catalog-body').onePageNav({\n            currentClass: \"active\",\n            changeHash: !1,\n            easing: \"swing\",\n            filter: \"\",\n            scrollSpeed: 700,\n            scrollOffset: 0,\n            scrollThreshold: .2,\n            begin: null,\n            end: null,\n            scrollChange: null,\n            padding: 80\n        });\n    });\n</script>\n\n\n\n<!-- Multi-Lingual -->\n\n\n<!-- Simple Jekyll Search -->\n<script>\n    // https://stackoverflow.com/questions/1912501/unescape-html-entities-in-javascript\n    function htmlDecode(input) {\n        var e = document.createElement('textarea');\n        e.innerHTML = input;\n        // handle case of empty input\n        return e.childNodes.length === 0 ? \"\" : e.childNodes[0].nodeValue;\n    }\n\n    SimpleJekyllSearch({\n        searchInput: document.getElementById('search-input'),\n        resultsContainer: document.getElementById('search-results'),\n        json: '/search.json',\n        searchResultTemplate: '<div class=\"post-preview item\"><a href=\"{url}\"><h2 class=\"post-title\">{title}</h2><h3 class=\"post-subtitle\">{subtitle}</h3><hr></a></div>',\n        noResultsText: 'No results',\n        limit: 50,\n        fuzzy: false,\n        // a hack to get escaped subtitle unescaped. for some reason, \n        // post.subtitle w/o escape filter nuke entire search.\n        templateMiddleware: function (prop, value, template) {\n            if (prop === 'subtitle' || prop === 'title') {\n                if (value.indexOf(\"code\")) {\n                    return htmlDecode(value);\n                } else {\n                    return value;\n                }\n            }\n        }\n    });\n\n    $(document).ready(function () {\n        var $searchPage = $('.search-page');\n        var $searchOpen = $('.search-icon');\n        var $searchClose = $('.search-icon-close');\n        var $searchInput = $('#search-input');\n        var $body = $('body');\n\n        $searchOpen.on('click', function (e) {\n            e.preventDefault();\n            $searchPage.toggleClass('search-active');\n            var prevClasses = $body.attr('class') || '';\n            setTimeout(function () {\n                $body.addClass('no-scroll');\n            }, 400)\n\n            if ($searchPage.hasClass('search-active')) {\n                $searchClose.on('click', function (e) {\n                    e.preventDefault();\n                    $searchPage.removeClass('search-active');\n                    $body.attr('class', prevClasses);  // from closure \n                });\n                $searchInput.focus();\n            }\n        });\n    });\n</script>\n\n\n<!-- Image to hack wechat -->\n<img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\" />\n<!-- Migrate from head to bottom, no longer block render and still work -->\n\n</body>\n\n</html>\n","excerpt":"<h1 id=\"ios组件化之业务组件准备篇\">iOS组件化之：业务组件准备篇</h1>\n","url":"/2023/08/17/iOS%E7%BB%84%E4%BB%B6%E5%8C%96-%E4%B8%9A%E5%8A%A1%E7%BB%84%E4%BB%B6%E5%87%86%E5%A4%87%E7%AF%87/","next":{"id":"/2023/09/12/iOS-OC-Swift混编","tags":[],"relative_path":"_posts/2023-09-12-iOS-OC-Swift混编.md","collection":"posts","name":"2023-09-12-iOS-OC-Swift混编.md","url":"/2023/09/12/iOS-OC-Swift%E6%B7%B7%E7%BC%96/","title":"Pod仓库内OC与Swift调用","date":"2023-09-12 00:00:00 +0800","categories":[],"path":"_posts/2023-09-12-iOS-OC-Swift混编.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/home-bg-geek.jpg","slug":"iOS-OC-Swift混编","ext":".md"},"title":"iOS组件化之：业务组件准备篇","date":"2023-08-17 00:00:00 +0800","categories":[],"path":"_posts/2023-08-17-iOS组件化-业务组件准备篇.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/home-bg-geek.jpg","slug":"iOS组件化-业务组件准备篇","ext":".md"},"output":"<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"google-site-verification\" content=\"xBT4GhYoi5qRD5tr338pgPM5OWHHIDR6mNg1a3euekI\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, viewport-fit=cover\">\n    <meta name=\"description\" content=\"与你一起发现更大的世界。\">\n    <meta name=\"keywords\"  content=\"PaysonChen,iOS,流媒体\">\n    <meta name=\"theme-color\" content=\"#000000\">\n    \n    <!-- Open Graph -->\n    <meta property=\"og:title\" content=\"Pod仓库内OC与Swift调用 - PaysonChen的博客 | PaysonChen Blog\">\n    \n    <meta property=\"og:type\" content=\"article\">\n    <meta property=\"og:description\" content=\"Pod仓库内OC与Swift调用\n\">\n    \n    \n    <meta property=\"article:published_time\" content=\"2023-09-12T00:00:00Z\">\n    \n    \n    <meta property=\"article:author\" content=\"PaysonChen\">\n    \n    \n    \n    <meta property=\"og:image\" content=\"http://localhost:4000\">\n    <meta property=\"og:url\" content=\"http://localhost:4000/2023/09/12/iOS-OC-Swift%E6%B7%B7%E7%BC%96/\">\n    <meta property=\"og:site_name\" content=\"PaysonChen的博客 | PaysonChen Blog\">\n    \n    <title>Pod仓库内OC与Swift调用 - PaysonChen的博客 | PaysonChen Blog</title>\n\n    <!-- Web App Manifest -->\n    <link rel=\"manifest\" href=\"/pwa/manifest.json\">\n\n    <!-- Favicon -->\n    <link rel=\"shortcut icon\" href=\"/img/favicon.ico\">\n    \n    <!-- Canonical URL -->\n    <link rel=\"canonical\" href=\"http://localhost:4000/2023/09/12/iOS-OC-Swift%E6%B7%B7%E7%BC%96/\">\n\n    <!-- Bootstrap Core CSS -->\n    <link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\">\n\n    <!-- Custom CSS -->\n    <link rel=\"stylesheet\" href=\"/css/hux-blog.min.css\">\n\n    <!-- Custom Fonts -->\n    <!-- <link href=\"http://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\"> -->\n    <!-- Hux change font-awesome CDN to qiniu -->\n    <link href=\"//cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\">\n\n\n    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->\n    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->\n    <!--[if lt IE 9]>\n        <script src=\"https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js\"></script>\n        <script src=\"https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js\"></script>\n    <![endif]-->\n\n    <!-- ga & ba script hoook -->\n    <script></script>\n</head>\n\n\n<!-- hack iOS CSS :active style -->\n<body ontouchstart=\"\">\n\n    <!-- Navigation -->\n\n    <nav class=\"navbar navbar-default navbar-custom navbar-fixed-top\">\n        \n        <div class=\"container-fluid\">\n            <!-- Brand and toggle get grouped for better mobile display -->\n            <div class=\"navbar-header page-scroll\">\n                <button type=\"button\" class=\"navbar-toggle\">\n                    <span class=\"sr-only\">Toggle navigation</span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                </button>\n                <a class=\"navbar-brand\" href=\"/\">PaysonChen Blog</a>\n            </div>\n\n            <!-- Collect the nav links, forms, and other content for toggling -->\n            <div id=\"huxblog_navbar\">\n                <div class=\"navbar-collapse\">\n                    <ul class=\"nav navbar-nav navbar-right\">\n                        <li>\n                            <a href=\"/\">Home</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        <li>\n                            <a href=\"/about/\">About</a>\n                        </li>\n                        \n                        \n                        \n                        <li>\n                            <a href=\"/archive/\">Archive</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        <li class=\"search-icon\">\n                            <a href=\"javascript:void(0)\">\n                                <i class=\"fa fa-search\"></i>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n            <!-- /.navbar-collapse -->\n        </div>\n        <!-- /.container -->\n    </nav>\n\n    <script>\n        // Drop Bootstarp low-performance Navbar\n        // Use customize navbar with high-quality material design animation\n        // in high-perf jank-free CSS3 implementation\n        var $body = document.body;\n        var $toggle = document.querySelector('.navbar-toggle');\n        var $navbar = document.querySelector('#huxblog_navbar');\n        var $collapse = document.querySelector('.navbar-collapse');\n\n        var __HuxNav__ = {\n            close: function () {\n                $navbar.className = \" \";\n                // wait until animation end.\n                setTimeout(function () {\n                    // prevent frequently toggle\n                    if ($navbar.className.indexOf('in') < 0) {\n                        $collapse.style.height = \"0px\"\n                    }\n                }, 400)\n            },\n            open: function () {\n                $collapse.style.height = \"auto\"\n                $navbar.className += \" in\";\n            }\n        }\n\n        // Bind Event\n        $toggle.addEventListener('click', function (e) {\n            if ($navbar.className.indexOf('in') > 0) {\n                __HuxNav__.close()\n            } else {\n                __HuxNav__.open()\n            }\n        })\n\n        /**\n         * Since Fastclick is used to delegate 'touchstart' globally\n         * to hack 300ms delay in iOS by performing a fake 'click',\n         * Using 'e.stopPropagation' to stop 'touchstart' event from \n         * $toggle/$collapse will break global delegation.\n         * \n         * Instead, we use a 'e.target' filter to prevent handler\n         * added to document close HuxNav.  \n         *\n         * Also, we use 'click' instead of 'touchstart' as compromise\n         */\n        document.addEventListener('click', function (e) {\n            if (e.target == $toggle) return;\n            if (e.target.className == 'icon-bar') return;\n            __HuxNav__.close();\n        })\n    </script>\n    <!-- Search -->\n<div class=\"search-page\">\n  <div class=\"search-icon-close-container\">\n    <span class=\"search-icon-close\">\n      <i class=\"fa fa-chevron-down\"></i>\n    </span>\n  </div>\n  <div class=\"search-main container\">\n    <div class=\"row\">\n      <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n        <form></form>\n        <input type=\"text\" id=\"search-input\" placeholder=\"$ grep...\">\n        </form>\n        <div id=\"search-results\" class=\"mini-post-list\"></div>\n      </div>\n    </div>\n  </div>\n</div>\n\n    <!-- Image to hack wechat -->\n<!-- <img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\"> -->\n<!-- <img src=\"/img/home-bg-geek.jpg\" width=\"0\" height=\"0\"> -->\n\n<!-- Post Header -->\n\n\n\n<style type=\"text/css\">\n    header.intro-header{\n        position: relative;\n        background-image: url('/img/home-bg-geek.jpg');\n        background: ;\n    }\n\n    \n</style>\n\n<header class=\"intro-header\" >\n\n    <div class=\"header-mask\"></div>\n    \n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <div class=\"post-heading\">\n                    <div class=\"tags\">\n                        \n                    </div>\n                    <h1>Pod仓库内OC与Swift调用</h1>\n                    \n                    <h2 class=\"subheading\"></h2>\n                    <span class=\"meta\">Posted by PaysonChen on September 12, 2023</span>\n                </div>\n            </div>\n        </div>\n    </div>\n</header>\n\n\n\n\n\n\n<!-- Post Content -->\n<article>\n    <div class=\"container\">\n        <div class=\"row\">\n\n    <!-- Post Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                post-container\">\n\n                <!-- Multi-Lingual -->\n                \n\n\t\t\t\t<h1 id=\"pod仓库内oc与swift调用\">Pod仓库内OC与Swift调用</h1>\n\n<h2 id=\"1pod内oc调swift\">1、Pod内OC调Swift</h2>\n\n<p>Pod内Swift类的声明需加上</p>\n\n<div class=\"language-swift highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre><span class=\"kd\">@objcMembers</span> <span class=\"kd\">open</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>例如：</p>\n\n<div class=\"language-swift highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n</pre></td><td class=\"rouge-code\"><pre><span class=\"kd\">import</span> <span class=\"kt\">Foundation</span>\n\n<span class=\"kd\">@objcMembers</span> <span class=\"kd\">open</span> <span class=\"kd\">class</span> <span class=\"kt\">SwiftBridge</span> <span class=\"p\">:</span> <span class=\"kt\">UIViewController</span> <span class=\"p\">{</span>\n    <span class=\"kd\">open</span> <span class=\"k\">override</span> <span class=\"kd\">func</span> <span class=\"nf\">viewDidLoad</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n        <span class=\"k\">self</span><span class=\"o\">.</span><span class=\"n\">view</span><span class=\"o\">.</span><span class=\"n\">backgroundColor</span> <span class=\"o\">=</span> <span class=\"kt\">UIColor</span><span class=\"o\">.</span><span class=\"n\">red</span>        \n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>在需要使用的类上 import</p>\n\n<pre><code class=\"language-objective-c\">  #import \"YourPodName/YourPodName-Swift.h\"\n</code></pre>\n\n<p>如果需要在多处调用也可以在podspec中添加</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n</pre></td><td class=\"rouge-code\"><pre>  <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">prefix_header_contents</span> <span class=\"o\">=</span> <span class=\"o\">&lt;&lt;-</span><span class=\"no\">EOS</span><span class=\"sh\">\n  #if __has_include(&lt;xxxModule/xxxModule-Swift.h&gt;)\n  #import &lt;xxxModule/xxxModule-Swift.h&gt;\n  #else\n  #import \"xxxModule/xxxModule-Swift.h\"\n  #endif\n</span><span class=\"no\">  EOS</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>XXX-Swift.h 机制可以参考Build Setting里的key value</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>Objective-C Generated Interface Header Name=$(SWIFT_MODULE_NAME)-Swift.h\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p><img src=\"/img/iosswiift/image1.png\" alt=\"1\" /></p>\n\n<h2 id=\"2pod内swift调oc\">2、Pod内Swift调OC</h2>\n\n<p>Pod指定了source_files，其中.h文件会被加载到xxxModule-umbrella 中，在Pod内部可以直接访问</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre><span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">source_files</span> <span class=\"o\">=</span> <span class=\"s1\">'xxxModule/Classes/**/*'</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>xxxModule-umbrella.h</p>\n\n<div class=\"language-objc highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n</pre></td><td class=\"rouge-code\"><pre><span class=\"cp\">#ifdef __OBJC__\n#import &lt;UIKit/UIKit.h&gt;\n#else\n#ifndef FOUNDATION_EXPORT\n#if defined(__cplusplus)\n#define FOUNDATION_EXPORT extern \"C\"\n#else\n#define FOUNDATION_EXPORT extern\n#endif\n#endif\n#endif\n</span>\n<span class=\"cp\">#import \"OCForSwiftUse.h\"\n#import \"xxxModule.h\"\n</span>\n<span class=\"n\">FOUNDATION_EXPORT</span> <span class=\"kt\">double</span> <span class=\"n\">xxxModuleVersionNumber</span><span class=\"p\">;</span>\n<span class=\"n\">FOUNDATION_EXPORT</span> <span class=\"k\">const</span> <span class=\"kt\">unsigned</span> <span class=\"kt\">char</span> <span class=\"n\">xxxModuleVersionString</span><span class=\"p\">[];</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>swift文件:</p>\n\n<div class=\"language-swift highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n</pre></td><td class=\"rouge-code\"><pre><span class=\"kd\">import</span> <span class=\"kt\">Foundation</span>\n\n<span class=\"kd\">@objcMembers</span> <span class=\"kd\">open</span> <span class=\"kd\">class</span> <span class=\"kt\">SwiftBridge</span> <span class=\"p\">:</span> <span class=\"kt\">UIViewController</span> <span class=\"p\">{</span>\n    <span class=\"kd\">open</span> <span class=\"k\">override</span> <span class=\"kd\">func</span> <span class=\"nf\">viewDidLoad</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n        <span class=\"k\">self</span><span class=\"o\">.</span><span class=\"n\">view</span><span class=\"o\">.</span><span class=\"n\">backgroundColor</span> <span class=\"o\">=</span> <span class=\"kt\">UIColor</span><span class=\"o\">.</span><span class=\"n\">red</span>\n        <span class=\"k\">let</span> <span class=\"nv\">ocs</span> <span class=\"o\">=</span> <span class=\"kt\">OCForSwiftUse</span><span class=\"p\">()</span>\n        <span class=\"c1\">// other codes</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n\n\n                <hr style=\"visibility: hidden;\">\n                <ul class=\"pager\">\n                    \n                    <li class=\"previous\">\n                        <a href=\"/2023/08/17/iOS%E7%BB%84%E4%BB%B6%E5%8C%96-%E4%B8%9A%E5%8A%A1%E7%BB%84%E4%BB%B6%E5%87%86%E5%A4%87%E7%AF%87/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"iOS组件化之：业务组件准备篇\">\n                        Previous<br>\n                        <span>iOS组件化之：业务组件准备篇</span>\n                        </a>\n                    </li>\n                    \n                    \n                    <li class=\"next\">\n                        <a href=\"/2023/10/07/%E7%BB%84%E4%BB%B6%E5%8C%96%E4%B9%8B%E5%88%86%E6%94%AF%E5%90%88%E5%B9%B6/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"组件化实践之：主工程抽离代码分支合并用\">\n                        Next<br>\n                        <span>组件化实践之：主工程抽离代码分支合并用</span>\n                        </a>\n                    </li>\n                    \n                </ul>\n                <hr style=\"visibility: hidden;\">\n\n                \n                <!-- disqus 评论框 start -->\n                <div class=\"comment\">\n                    <div id=\"disqus_thread\" class=\"disqus-thread\"></div>\n                </div>\n                <!-- disqus 评论框 end -->\n                \n\n                \n            </div>  \n\n    <!-- Side Catalog Container -->\n        \n            <div class=\"\n                col-lg-2 col-lg-offset-0\n                visible-lg-block\n                sidebar-container\n                catalog-container\">\n                <div class=\"side-catalog\">\n                    <hr class=\"hidden-sm hidden-xs\">\n                    <h5>\n                        <a class=\"catalog-toggle\" href=\"#\">CATALOG</a>\n                    </h5>\n                    <ul class=\"catalog-body\"></ul>\n                </div>\n            </div>\n        \n\n    <!-- Sidebar Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                sidebar-container\">\n\n                <!-- Featured Tags -->\n                \n\n\n<section>\n    \n        <hr class=\"hidden-sm hidden-xs\">\n    \n    <h5><a href=\"/archive/\">FEATURED TAGS</a></h5>\n    <div class=\"tags\">\n        \n        \n        \n        \n        \n    </div>\n</section>\n\n\n                <!-- Friends Blog -->\n                \n            </div>\n        </div>\n    </div>\n</article>\n\n<!-- add support for mathjax by voleking-->\n\n\n\n\n\n\n<!-- disqus 公共JS代码 start (一个网页只需插入一次) -->\n<script type=\"text/javascript\">\n    /* * * CONFIGURATION VARIABLES * * */\n    var disqus_shortname = \"Cyp\";\n    var disqus_identifier = \"/2023/09/12/iOS-OC-Swift混编\";\n    var disqus_url = \"http://localhost:4000/2023/09/12/iOS-OC-Swift%E6%B7%B7%E7%BC%96/\";\n\n    (function() {\n        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;\n        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';\n        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);\n    })();\n</script>\n<!-- disqus 公共JS代码 end -->\n\n\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n      var d = document, t = 'script',\n          o = d.createElement(t),\n          s = d.getElementsByTagName(t)[0];\n      o.src = u;\n      if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n      s.parentNode.insertBefore(o, s);\n    }\n</script>\n<!-- anchor-js, Doc:http://bryanbraun.github.io/anchorjs/ -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/anchor-js/1.1.1/anchor.min.js\",function(){\n        anchors.options = {\n          visible: 'hover',\n          placement: 'right',\n          // icon: '#'\n        };\n        anchors.add().remove('.intro-header h1').remove('.subheading').remove('.sidebar-container h5');\n    })\n</script>\n<style>\n    /* place left on bigger screen */\n    @media all and (min-width: 800px) {\n        .anchorjs-link{\n            position: absolute;\n            left: -0.75em;\n            font-size: 1.1em;\n            margin-top : -0.1em;\n        }\n    }\n</style>\n\n\n\n    <!-- Footer -->\n<footer>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <!-- SNS Link -->\n                \n\n\n<ul class=\"list-inline text-center\">\n\n\n  \n  \n  \n  \n  \n  \n  \n</ul>\n\n                <p class=\"copyright text-muted\">\n                    Copyright &copy; PaysonChen Blog 2024\n                    <br>\n                    <!-- Powered by <a href=\"http://huangxuan.me\">Hux Blog</a> | -->\n                 <!--    <iframe style=\"margin-left: 2px; margin-bottom:-5px;\" frameborder=\"0\" scrolling=\"0\" width=\"100px\"\n                        height=\"20px\"\n                        src=\"https://ghbtns.com/github-btn.html?user=huxpro&repo=huxpro.github.io&type=star&count=true\">\n                    </iframe> -->\n                </p>\n            </div>\n        </div>\n    </div>\n</footer>\n\n<!-- jQuery -->\n<script src=\"/js/jquery.min.js \"></script>\n\n<!-- Bootstrap Core JavaScript -->\n<!-- Currently, only navbar scroll-down effect at desktop still depends on this -->\n<script src=\"/js/bootstrap.min.js \"></script>\n\n<!-- Custom Theme JavaScript -->\n<script src=\"/js/hux-blog.min.js \"></script>\n\n<!-- Simple Jekyll Search -->\n<script src=\"/js/simple-jekyll-search.min.js\"></script>\n\n<!-- Service Worker -->\n\n<script src=\"/js/snackbar.js \"></script>\n<script src=\"/js/sw-registration.js \"></script>\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n        var d = document, t = 'script',\n            o = d.createElement(t),\n            s = d.getElementsByTagName(t)[0];\n        o.src = u;\n        if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n        s.parentNode.insertBefore(o, s);\n    }\n</script>\n\n<!--\n     Because of the native support for backtick-style fenced code blocks\n     right within the Markdown is landed in Github Pages,\n     From V1.6, There is no need for Highlight.js,\n     so Huxblog drops it officially.\n\n     - https://github.com/blog/2100-github-pages-now-faster-and-simpler-with-jekyll-3-0\n     - https://help.github.com/articles/creating-and-highlighting-code-blocks/\n     - https://github.com/jneen/rouge/wiki/list-of-supported-languages-and-lexers\n-->\n<!--\n    <script>\n        async(\"http://cdn.bootcss.com/highlight.js/8.6/highlight.min.js\", function(){\n            hljs.initHighlightingOnLoad();\n        })\n    </script>\n    <link href=\"http://cdn.bootcss.com/highlight.js/8.6/styles/github.min.css\" rel=\"stylesheet\">\n-->\n\n\n\n\n\n\n\n<!--fastClick.js -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/fastclick/1.0.6/fastclick.min.js\", function () {\n        var $nav = document.querySelector(\"nav\");\n        if ($nav) FastClick.attach($nav);\n    })\n</script>\n\n\n<!-- Google Analytics -->\n\n\n\n<!-- Baidu Tongji -->\n\n\n\n<!-- Side Catalog -->\n\n<script type=\"text/javascript\">\n    function generateCatalog(selector) {\n\n        // interop with multilangual \n        if ('' == 'true') {\n            _containerSelector = 'div.post-container.active'\n        } else {\n            _containerSelector = 'div.post-container'\n        }\n\n        // init\n        var P = $(_containerSelector), a, n, t, l, i, c;\n        a = P.find('h1,h2,h3,h4,h5,h6');\n\n        // clean\n        $(selector).html('')\n\n        // appending\n        a.each(function () {\n            n = $(this).prop('tagName').toLowerCase();\n            i = \"#\" + $(this).prop('id');\n            t = $(this).text();\n            c = $('<a href=\"' + i + '\" rel=\"nofollow\">' + t + '</a>');\n            l = $('<li class=\"' + n + '_nav\"></li>').append(c);\n            $(selector).append(l);\n        });\n        return true;\n    }\n\n    generateCatalog(\".catalog-body\");\n\n    // toggle side catalog\n    $(\".catalog-toggle\").click((function (e) {\n        e.preventDefault();\n        $('.side-catalog').toggleClass(\"fold\")\n    }))\n\n    /*\n     * Doc: https://github.com/davist11/jQuery-One-Page-Nav\n     * Fork by Hux to support padding\n     */\n    async(\"/js/jquery.nav.js\", function () {\n        $('.catalog-body').onePageNav({\n            currentClass: \"active\",\n            changeHash: !1,\n            easing: \"swing\",\n            filter: \"\",\n            scrollSpeed: 700,\n            scrollOffset: 0,\n            scrollThreshold: .2,\n            begin: null,\n            end: null,\n            scrollChange: null,\n            padding: 80\n        });\n    });\n</script>\n\n\n\n<!-- Multi-Lingual -->\n\n\n<!-- Simple Jekyll Search -->\n<script>\n    // https://stackoverflow.com/questions/1912501/unescape-html-entities-in-javascript\n    function htmlDecode(input) {\n        var e = document.createElement('textarea');\n        e.innerHTML = input;\n        // handle case of empty input\n        return e.childNodes.length === 0 ? \"\" : e.childNodes[0].nodeValue;\n    }\n\n    SimpleJekyllSearch({\n        searchInput: document.getElementById('search-input'),\n        resultsContainer: document.getElementById('search-results'),\n        json: '/search.json',\n        searchResultTemplate: '<div class=\"post-preview item\"><a href=\"{url}\"><h2 class=\"post-title\">{title}</h2><h3 class=\"post-subtitle\">{subtitle}</h3><hr></a></div>',\n        noResultsText: 'No results',\n        limit: 50,\n        fuzzy: false,\n        // a hack to get escaped subtitle unescaped. for some reason, \n        // post.subtitle w/o escape filter nuke entire search.\n        templateMiddleware: function (prop, value, template) {\n            if (prop === 'subtitle' || prop === 'title') {\n                if (value.indexOf(\"code\")) {\n                    return htmlDecode(value);\n                } else {\n                    return value;\n                }\n            }\n        }\n    });\n\n    $(document).ready(function () {\n        var $searchPage = $('.search-page');\n        var $searchOpen = $('.search-icon');\n        var $searchClose = $('.search-icon-close');\n        var $searchInput = $('#search-input');\n        var $body = $('body');\n\n        $searchOpen.on('click', function (e) {\n            e.preventDefault();\n            $searchPage.toggleClass('search-active');\n            var prevClasses = $body.attr('class') || '';\n            setTimeout(function () {\n                $body.addClass('no-scroll');\n            }, 400)\n\n            if ($searchPage.hasClass('search-active')) {\n                $searchClose.on('click', function (e) {\n                    e.preventDefault();\n                    $searchPage.removeClass('search-active');\n                    $body.attr('class', prevClasses);  // from closure \n                });\n                $searchInput.focus();\n            }\n        });\n    });\n</script>\n\n\n<!-- Image to hack wechat -->\n<img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\" />\n<!-- Migrate from head to bottom, no longer block render and still work -->\n\n</body>\n\n</html>\n","excerpt":"<h1 id=\"pod仓库内oc与swift调用\">Pod仓库内OC与Swift调用</h1>\n","url":"/2023/09/12/iOS-OC-Swift%E6%B7%B7%E7%BC%96/","next":{"id":"/2023/10/07/组件化之分支合并","tags":[],"relative_path":"_posts/2023-10-07-组件化之分支合并.md","collection":"posts","content":"<h1 id=\"组件化实践之主工程抽离代码分支合并\">组件化实践之：主工程抽离代码分支合并</h1>\n\n<h2 id=\"1-背景\">1 背景</h2>\n\n<p>​\t组件化过程中不可避免的会遇到这样一个问题：</p>\n\n<p>​\t组件化的过程一般周期比较长，此过程中不免会有业务需求的输入，这样就会导致一个情况：</p>\n\n<p>​\t组件化分支已经将主工程里的类迁移到pod仓库,而在此期间的业务需求代码对这些被迁移的类有修改，</p>\n\n<p>​\t合并主干（其他分支）代码时,主干（其他分支）有对移动之前的类做修改的情况下,会导致合并冲突,</p>\n\n<p>​\t这种冲突是整个类都是新增符号(+),没有冲突符号，此时无法简单的通过工具，或者冲突的符号对其进行解冲突。</p>\n\n<h2 id=\"2-问题处理\">2 问题处理</h2>\n\n<p>​\t解决上述冲突,最开始想到的方案是通过xcode自带filemerge进行对比,这样比较容易导致遗漏且工作量大,无法充分利用git的冲突标志,</p>\n\n<h2 id=\"3-更优解决\">3 更优解决</h2>\n\n<p>​\t如果可以知道有哪些类在合并代码时，</p>\n\n<ul class=\"task-list\">\n  <li class=\"task-list-item\"><input type=\"checkbox\" class=\"task-list-item-checkbox\" disabled=\"disabled\" checked=\"checked\" />​\t有修改</li>\n  <li class=\"task-list-item\"><input type=\"checkbox\" class=\"task-list-item-checkbox\" disabled=\"disabled\" checked=\"checked\" />​\t且已经被迁移了（不存在主工程）</li>\n</ul>\n\n<p>​\t那么就可以以这些类进行冲突检测</p>\n\n<h3 id=\"31-冲突解决方案\">3.1 冲突解决方案</h3>\n\n<p>以下简述冲突检测设计思路</p>\n\n<h4 id=\"311-数据准备\">3.1.1 数据准备</h4>\n\n<ul>\n  <li>先进行一次预合并，通过首次合并,可以从sourcetree中看到冲突的类列表文件，查看冲突内容，出现整个文件都带+的变更内容，该文件即为被迁移且被其他分支修改的文件。</li>\n</ul>\n\n<p><img src=\"/img/2023-10-07-merge/0.jpg\" alt=\"0\" /></p>\n\n<ul>\n  <li>将预合并产生的上述冲突的文件列表进行整理，将列表中符合迁移并修改的文件路径列表定义为数组存入文件：merge_project_files.txt</li>\n</ul>\n\n<p><img src=\"/img/2023-10-07-merge/1.png\" alt=\"1\" /></p>\n\n<p>​\t通过选中类(可以全选之后一起移动【mv】)移动路径:</p>\n\n<p><img src=\"/img/2023-10-07-merge/2.png\" alt=\"2\" /></p>\n\n<p><strong><em>Tips：这里用移动mv，不用复制cp，为了主工程修改完之后，能恢复迁移后的样子，不至于多出一些已迁移但是还存在主工程的文件</em></strong></p>\n\n<p>即可获取主工程冲突文件路径，新建一个文本文件,将上述所有冲突类路径移动过去,</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n</pre></td><td class=\"rouge-code\"><pre>/Users/username/Documents/Project/git/Inner/Demo/127/Demo-IOS/ProjectDemoiOS/ProjectDemoiOS/Class/Main/Car/Model/PSCCarDetailInforModel.h\n/Users/username/Documents/Project/git/Inner/Demo/127/Demo-IOS/ProjectDemoiOS/ProjectDemoiOS/Class/Main/Sites/View/PSCPowerPriceTableViewCell.m\n.....\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<ul>\n  <li>将上述文件列表一一对应到组件库里本地clone路径了列表，定义为数组存入文件；merge_pods_files.txt</li>\n</ul>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n</pre></td><td class=\"rouge-code\"><pre>/Users/username/Documents/Project/git/CocoaPods/Private/ProjectCarModule/ProjectCarModule/Classes/Car/Model/DemoCarDetailInforModel.h\n/Users/username/Documents/Project/git/CocoaPods/Private/ProjectExchangeMoudle/ProjectExchangeMoudle/Classes/Sites/View/DemoPowerPriceTableViewCell.m\n.....\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p><strong><em>Tips:commond+option+c可以文件路径</em></strong></p>\n\n<h4 id=\"312--算法编写\">3.1.2  算法编写</h4>\n\n<ul>\n  <li>步骤1:在一个全新的组件化分支（未进行预合并）上先从组件库将冲突的类文件拷贝回主工程,</li>\n  <li>步骤2:提交本地仓库(不需要push远程仓库)后再进行合并</li>\n  <li>步骤3:合并冲突则为可参考历史变更及可解决的冲突状态</li>\n  <li>步骤4:合并解决完后再通过上述方案,反向将dest的主工程目录拷贝并覆盖到组件库文件</li>\n</ul>\n\n<p><strong><em>Tips:可能存在一些已经删除的文件，但是也出现在上述列表中，此时无法从组件库移动到主工程，需要确认是否是无用文件（不是误删）</em></strong></p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\"># merge.sh</span>\n<span class=\"c\"># 从外部文件中读取源文件路径和目标文件夹路径</span>\n<span class=\"c\">#\"source_paths.txt\"</span>\n<span class=\"nv\">source_file</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n<span class=\"c\">#\"destination_paths.txt\"</span>\n<span class=\"nv\">destination_file</span><span class=\"o\">=</span><span class=\"nv\">$2</span>\n\n<span class=\"c\"># 检查源文件是否存在</span>\n<span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"o\">!</span> <span class=\"nt\">-f</span> <span class=\"s2\">\"</span><span class=\"nv\">$source_file</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n    </span><span class=\"nb\">echo</span> <span class=\"s2\">\"源文件 '</span><span class=\"nv\">$source_file</span><span class=\"s2\">' 不存在。\"</span>\n    <span class=\"nb\">exit </span>1\n<span class=\"k\">fi</span>\n\n<span class=\"c\"># 检查目标文件夹文件是否存在</span>\n<span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"o\">!</span> <span class=\"nt\">-f</span> <span class=\"s2\">\"</span><span class=\"nv\">$destination_file</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n    </span><span class=\"nb\">echo</span> <span class=\"s2\">\"源文件 '</span><span class=\"nv\">$source_file</span><span class=\"s2\">' 不存在。\"</span>\n    <span class=\"nb\">exit </span>1\n<span class=\"k\">fi</span>\n\n<span class=\"c\">#保证每条记录都有一个回车（最后一行如果没有回车，会被忽略）</span>\n<span class=\"k\">while </span><span class=\"nv\">IFS</span><span class=\"o\">=</span> <span class=\"nb\">read</span> <span class=\"nt\">-r</span> source_path <span class=\"o\">&amp;&amp;</span> <span class=\"nv\">IFS</span><span class=\"o\">=</span> <span class=\"nb\">read</span> <span class=\"nt\">-r</span> destination_folder &lt;&amp;3<span class=\"p\">;</span> <span class=\"k\">do\n    </span>source_paths+<span class=\"o\">=(</span><span class=\"s2\">\"</span><span class=\"nv\">$source_path</span><span class=\"s2\">\"</span><span class=\"o\">)</span>\n    destination_paths+<span class=\"o\">=(</span><span class=\"s2\">\"</span><span class=\"nv\">$destination_folder</span><span class=\"s2\">\"</span><span class=\"o\">)</span>\n<span class=\"k\">done</span> &lt; <span class=\"nv\">$source_file</span> 3&lt; <span class=\"nv\">$destination_file</span>\n\n<span class=\"c\"># 输出数组长度</span>\n<span class=\"nb\">echo</span> <span class=\"s2\">\"源文件路径数组长度：</span><span class=\"k\">${#</span><span class=\"nv\">source_paths</span><span class=\"p\">[@]</span><span class=\"k\">}</span><span class=\"s2\">\"</span>\n<span class=\"nb\">echo</span> <span class=\"s2\">\"目标文件夹路径数组长度：</span><span class=\"k\">${#</span><span class=\"nv\">destination_paths</span><span class=\"p\">[@]</span><span class=\"k\">}</span><span class=\"s2\">\"</span>\n\n<span class=\"c\">#exit 0</span>\n<span class=\"c\"># 遍历索引</span>\n<span class=\"k\">for </span>index <span class=\"k\">in</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"p\">!source_paths[@]</span><span class=\"k\">}</span><span class=\"s2\">\"</span><span class=\"p\">;</span> <span class=\"k\">do\n    </span><span class=\"nb\">echo</span> <span class=\"s2\">\"遍历目标文件夹路径数组,index=\"</span><span class=\"nv\">$index</span>\n    <span class=\"nv\">source_path</span><span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">source_paths</span><span class=\"p\">[</span><span class=\"nv\">$index</span><span class=\"p\">]</span><span class=\"k\">}</span><span class=\"s2\">\"</span>\n    <span class=\"nv\">destination_path</span><span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">destination_paths</span><span class=\"p\">[</span><span class=\"nv\">$index</span><span class=\"p\">]</span><span class=\"k\">}</span><span class=\"s2\">\"</span>\n\n    <span class=\"c\"># 构建目标文件的完整路径</span>\n<span class=\"c\">#    destination_path=\"${destination_folder}${source_path}\"</span>\n\n    <span class=\"c\"># 检查目标文件是否存在，如果存在则删除</span>\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-e</span> <span class=\"s2\">\"</span><span class=\"nv\">$destination_path</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">rm</span> <span class=\"s2\">\"</span><span class=\"nv\">$destination_path</span><span class=\"s2\">\"</span>\n    <span class=\"k\">fi</span>\n\n    <span class=\"c\"># 确保目标文件夹存在</span>\n    <span class=\"nb\">mkdir</span> <span class=\"nt\">-p</span> <span class=\"s2\">\"</span><span class=\"si\">$(</span><span class=\"nb\">dirname</span> <span class=\"s2\">\"</span><span class=\"nv\">$destination_path</span><span class=\"s2\">\"</span><span class=\"si\">)</span><span class=\"s2\">\"</span>\n\n    <span class=\"c\"># 移动源文件到目标路径</span>\n    <span class=\"nb\">mv</span> <span class=\"s2\">\"</span><span class=\"nv\">$source_path</span><span class=\"s2\">\"</span> <span class=\"s2\">\"</span><span class=\"nv\">$destination_path</span><span class=\"s2\">\"</span>\n<span class=\"k\">done\n\n</span><span class=\"nb\">echo</span> <span class=\"s2\">\"文件移动完成。\"</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h4 id=\"313-执行\">3.1.3 执行</h4>\n\n<p>将pod仓库的文件移动回主工程的调用方式：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>sh merge.sh merge_pods_files.txt merge_project_files.txt\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>解决完冲突后将主工程的上述文件移动回组件库</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>sh merge.sh merge_project_files.txt merge_pods_files.txt\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h4 id=\"314-收尾\">3.1.4 收尾</h4>\n\n<ul>\n  <li>解决完冲突，Pod仓库会得到从主干(其他功能分支)合并的最新类的修改版本，需要提交到对应迁移Pod仓库</li>\n  <li>主工程Project文件保留迁移后的版本，可以得到组件化改造后的Project的文件结构</li>\n  <li>再执行一次之前提到的寻找Project未引用，但是还存在的类的脚本进行最后的清理</li>\n</ul>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n</pre></td><td class=\"rouge-code\"><pre><span class=\"k\">function </span>main<span class=\"o\">()</span> <span class=\"o\">{</span>\n    \n    <span class=\"c\"># 设置项目目录</span>\n    <span class=\"nv\">project_directory</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$1</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then</span>\n        <span class=\"c\">#未传参为当前目录</span>\n        <span class=\"nv\">project_directory</span><span class=\"o\">=</span><span class=\"nb\">.</span>\n    <span class=\"k\">fi</span>\n\n    <span class=\"c\"># 设置其他目录</span>\n    <span class=\"nv\">parent_path</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">dirname</span> <span class=\"s2\">\"</span><span class=\"nv\">$project_directory</span><span class=\"s2\">\"</span><span class=\"si\">)</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"project 路径：\"</span><span class=\"nv\">$parent_path</span>\n    \n    <span class=\"nv\">current_dir</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">basename</span> <span class=\"s2\">\"</span><span class=\"nv\">$project_directory</span><span class=\"s2\">\"</span><span class=\"si\">)</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"当前路径 文件夹名称：\"</span><span class=\"nv\">$current_dir</span>\n\n    \n    <span class=\"nv\">project_path</span><span class=\"o\">=</span><span class=\"si\">$(</span>find <span class=\"s2\">\"</span><span class=\"nv\">$parent_path</span><span class=\"s2\">\"</span>/<span class=\"nv\">$current_dir</span>.xcodeproj <span class=\"nt\">-type</span> f <span class=\"se\">\\(</span> <span class=\"nt\">-name</span> <span class=\"s2\">\"*.pbxproj\"</span> <span class=\"se\">\\)</span><span class=\"si\">)</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"project 路径：\"</span><span class=\"nv\">$project_path</span>\n\n    <span class=\"nv\">all_file_path</span><span class=\"o\">=</span><span class=\"si\">$(</span>find <span class=\"s2\">\"</span><span class=\"nv\">$project_directory</span><span class=\"s2\">\"</span> <span class=\"nt\">-type</span> f <span class=\"se\">\\(</span> <span class=\"nt\">-name</span> <span class=\"s2\">\"*.h\"</span> <span class=\"se\">\\)</span><span class=\"si\">)</span>\n    <span class=\"nv\">all_file_path_cnt</span><span class=\"o\">=</span><span class=\"si\">$(</span>find <span class=\"s2\">\"</span><span class=\"nv\">$project_directory</span><span class=\"s2\">\"</span> <span class=\"nt\">-type</span> f <span class=\"se\">\\(</span> <span class=\"nt\">-name</span> <span class=\"s2\">\"*.h\"</span> <span class=\"se\">\\)</span> | <span class=\"nb\">wc</span> <span class=\"nt\">-l</span><span class=\"si\">)</span>\n\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"主工程 头文件数量：\"</span><span class=\"nv\">$all_file_path_cnt</span>\n\n    <span class=\"k\">for </span>src_file <span class=\"k\">in</span> <span class=\"nv\">$all_file_path</span><span class=\"p\">;</span> <span class=\"k\">do</span>\n    <span class=\"c\">#    echo $src_file</span>\n        <span class=\"nv\">filename</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">basename</span> <span class=\"s2\">\"</span><span class=\"nv\">$src_file</span><span class=\"s2\">\"</span> .h<span class=\"si\">)</span>\n        <span class=\"k\">if</span>  <span class=\"o\">!</span> <span class=\"nb\">grep</span> <span class=\"nt\">-q</span> <span class=\"s2\">\"</span><span class=\"se\">\\b</span><span class=\"nv\">$filename</span><span class=\"se\">\\b</span><span class=\"s2\">\"</span> <span class=\"s2\">\"</span><span class=\"nv\">$project_path</span><span class=\"s2\">\"</span><span class=\"p\">;</span>  <span class=\"k\">then\n            </span><span class=\"nb\">echo</span> <span class=\"s2\">\"project不包含：\"</span><span class=\"nv\">$src_file</span>\n        <span class=\"k\">fi\n    done</span>\n<span class=\"o\">}</span>\n\n\nmain <span class=\"nv\">$1</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>传入工程(Project文件所在的目录)路径：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>sh find_all_file_no_project.sh /Users/username/Documents/Project/git/Inner/Demo/Release/Demo-IOS/ProjectiOS/ProjectiOS \n</pre></td></tr></tbody></table></code></pre></div></div>\n\n","name":"2023-10-07-组件化之分支合并.md","previous":{"id":"/2023/09/12/iOS-OC-Swift混编","tags":[],"relative_path":"_posts/2023-09-12-iOS-OC-Swift混编.md","collection":"posts","name":"2023-09-12-iOS-OC-Swift混编.md","url":"/2023/09/12/iOS-OC-Swift%E6%B7%B7%E7%BC%96/","title":"Pod仓库内OC与Swift调用","date":"2023-09-12 00:00:00 +0800","categories":[],"path":"_posts/2023-09-12-iOS-OC-Swift混编.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/home-bg-geek.jpg","slug":"iOS-OC-Swift混编","ext":".md"},"output":"<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"google-site-verification\" content=\"xBT4GhYoi5qRD5tr338pgPM5OWHHIDR6mNg1a3euekI\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, viewport-fit=cover\">\n    <meta name=\"description\" content=\"与你一起发现更大的世界。\">\n    <meta name=\"keywords\"  content=\"PaysonChen,iOS,流媒体\">\n    <meta name=\"theme-color\" content=\"#000000\">\n    \n    <!-- Open Graph -->\n    <meta property=\"og:title\" content=\"组件化实践之：主工程抽离代码分支合并用 - PaysonChen的博客 | PaysonChen Blog\">\n    \n    <meta property=\"og:type\" content=\"article\">\n    <meta property=\"og:description\" content=\"组件化实践之：主工程抽离代码分支合并\n\">\n    \n    \n    <meta property=\"article:published_time\" content=\"2023-10-07T00:00:00Z\">\n    \n    \n    <meta property=\"article:author\" content=\"PaysonChen\">\n    \n    \n    \n    <meta property=\"og:image\" content=\"http://localhost:4000\">\n    <meta property=\"og:url\" content=\"http://localhost:4000/2023/10/07/%E7%BB%84%E4%BB%B6%E5%8C%96%E4%B9%8B%E5%88%86%E6%94%AF%E5%90%88%E5%B9%B6/\">\n    <meta property=\"og:site_name\" content=\"PaysonChen的博客 | PaysonChen Blog\">\n    \n    <title>组件化实践之：主工程抽离代码分支合并用 - PaysonChen的博客 | PaysonChen Blog</title>\n\n    <!-- Web App Manifest -->\n    <link rel=\"manifest\" href=\"/pwa/manifest.json\">\n\n    <!-- Favicon -->\n    <link rel=\"shortcut icon\" href=\"/img/favicon.ico\">\n    \n    <!-- Canonical URL -->\n    <link rel=\"canonical\" href=\"http://localhost:4000/2023/10/07/%E7%BB%84%E4%BB%B6%E5%8C%96%E4%B9%8B%E5%88%86%E6%94%AF%E5%90%88%E5%B9%B6/\">\n\n    <!-- Bootstrap Core CSS -->\n    <link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\">\n\n    <!-- Custom CSS -->\n    <link rel=\"stylesheet\" href=\"/css/hux-blog.min.css\">\n\n    <!-- Custom Fonts -->\n    <!-- <link href=\"http://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\"> -->\n    <!-- Hux change font-awesome CDN to qiniu -->\n    <link href=\"//cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\">\n\n\n    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->\n    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->\n    <!--[if lt IE 9]>\n        <script src=\"https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js\"></script>\n        <script src=\"https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js\"></script>\n    <![endif]-->\n\n    <!-- ga & ba script hoook -->\n    <script></script>\n</head>\n\n\n<!-- hack iOS CSS :active style -->\n<body ontouchstart=\"\">\n\n    <!-- Navigation -->\n\n    <nav class=\"navbar navbar-default navbar-custom navbar-fixed-top\">\n        \n        <div class=\"container-fluid\">\n            <!-- Brand and toggle get grouped for better mobile display -->\n            <div class=\"navbar-header page-scroll\">\n                <button type=\"button\" class=\"navbar-toggle\">\n                    <span class=\"sr-only\">Toggle navigation</span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                </button>\n                <a class=\"navbar-brand\" href=\"/\">PaysonChen Blog</a>\n            </div>\n\n            <!-- Collect the nav links, forms, and other content for toggling -->\n            <div id=\"huxblog_navbar\">\n                <div class=\"navbar-collapse\">\n                    <ul class=\"nav navbar-nav navbar-right\">\n                        <li>\n                            <a href=\"/\">Home</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        <li>\n                            <a href=\"/about/\">About</a>\n                        </li>\n                        \n                        \n                        \n                        <li>\n                            <a href=\"/archive/\">Archive</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        <li class=\"search-icon\">\n                            <a href=\"javascript:void(0)\">\n                                <i class=\"fa fa-search\"></i>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n            <!-- /.navbar-collapse -->\n        </div>\n        <!-- /.container -->\n    </nav>\n\n    <script>\n        // Drop Bootstarp low-performance Navbar\n        // Use customize navbar with high-quality material design animation\n        // in high-perf jank-free CSS3 implementation\n        var $body = document.body;\n        var $toggle = document.querySelector('.navbar-toggle');\n        var $navbar = document.querySelector('#huxblog_navbar');\n        var $collapse = document.querySelector('.navbar-collapse');\n\n        var __HuxNav__ = {\n            close: function () {\n                $navbar.className = \" \";\n                // wait until animation end.\n                setTimeout(function () {\n                    // prevent frequently toggle\n                    if ($navbar.className.indexOf('in') < 0) {\n                        $collapse.style.height = \"0px\"\n                    }\n                }, 400)\n            },\n            open: function () {\n                $collapse.style.height = \"auto\"\n                $navbar.className += \" in\";\n            }\n        }\n\n        // Bind Event\n        $toggle.addEventListener('click', function (e) {\n            if ($navbar.className.indexOf('in') > 0) {\n                __HuxNav__.close()\n            } else {\n                __HuxNav__.open()\n            }\n        })\n\n        /**\n         * Since Fastclick is used to delegate 'touchstart' globally\n         * to hack 300ms delay in iOS by performing a fake 'click',\n         * Using 'e.stopPropagation' to stop 'touchstart' event from \n         * $toggle/$collapse will break global delegation.\n         * \n         * Instead, we use a 'e.target' filter to prevent handler\n         * added to document close HuxNav.  \n         *\n         * Also, we use 'click' instead of 'touchstart' as compromise\n         */\n        document.addEventListener('click', function (e) {\n            if (e.target == $toggle) return;\n            if (e.target.className == 'icon-bar') return;\n            __HuxNav__.close();\n        })\n    </script>\n    <!-- Search -->\n<div class=\"search-page\">\n  <div class=\"search-icon-close-container\">\n    <span class=\"search-icon-close\">\n      <i class=\"fa fa-chevron-down\"></i>\n    </span>\n  </div>\n  <div class=\"search-main container\">\n    <div class=\"row\">\n      <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n        <form></form>\n        <input type=\"text\" id=\"search-input\" placeholder=\"$ grep...\">\n        </form>\n        <div id=\"search-results\" class=\"mini-post-list\"></div>\n      </div>\n    </div>\n  </div>\n</div>\n\n    <!-- Image to hack wechat -->\n<!-- <img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\"> -->\n<!-- <img src=\"/img/home-bg-geek.jpg\" width=\"0\" height=\"0\"> -->\n\n<!-- Post Header -->\n\n\n\n<style type=\"text/css\">\n    header.intro-header{\n        position: relative;\n        background-image: url('/img/home-bg-geek.jpg');\n        background: ;\n    }\n\n    \n</style>\n\n<header class=\"intro-header\" >\n\n    <div class=\"header-mask\"></div>\n    \n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <div class=\"post-heading\">\n                    <div class=\"tags\">\n                        \n                    </div>\n                    <h1>组件化实践之：主工程抽离代码分支合并用</h1>\n                    \n                    <h2 class=\"subheading\"></h2>\n                    <span class=\"meta\">Posted by PaysonChen on October 7, 2023</span>\n                </div>\n            </div>\n        </div>\n    </div>\n</header>\n\n\n\n\n\n\n<!-- Post Content -->\n<article>\n    <div class=\"container\">\n        <div class=\"row\">\n\n    <!-- Post Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                post-container\">\n\n                <!-- Multi-Lingual -->\n                \n\n\t\t\t\t<h1 id=\"组件化实践之主工程抽离代码分支合并\">组件化实践之：主工程抽离代码分支合并</h1>\n\n<h2 id=\"1-背景\">1 背景</h2>\n\n<p>​\t组件化过程中不可避免的会遇到这样一个问题：</p>\n\n<p>​\t组件化的过程一般周期比较长，此过程中不免会有业务需求的输入，这样就会导致一个情况：</p>\n\n<p>​\t组件化分支已经将主工程里的类迁移到pod仓库,而在此期间的业务需求代码对这些被迁移的类有修改，</p>\n\n<p>​\t合并主干（其他分支）代码时,主干（其他分支）有对移动之前的类做修改的情况下,会导致合并冲突,</p>\n\n<p>​\t这种冲突是整个类都是新增符号(+),没有冲突符号，此时无法简单的通过工具，或者冲突的符号对其进行解冲突。</p>\n\n<h2 id=\"2-问题处理\">2 问题处理</h2>\n\n<p>​\t解决上述冲突,最开始想到的方案是通过xcode自带filemerge进行对比,这样比较容易导致遗漏且工作量大,无法充分利用git的冲突标志,</p>\n\n<h2 id=\"3-更优解决\">3 更优解决</h2>\n\n<p>​\t如果可以知道有哪些类在合并代码时，</p>\n\n<ul class=\"task-list\">\n  <li class=\"task-list-item\"><input type=\"checkbox\" class=\"task-list-item-checkbox\" disabled=\"disabled\" checked=\"checked\" />​\t有修改</li>\n  <li class=\"task-list-item\"><input type=\"checkbox\" class=\"task-list-item-checkbox\" disabled=\"disabled\" checked=\"checked\" />​\t且已经被迁移了（不存在主工程）</li>\n</ul>\n\n<p>​\t那么就可以以这些类进行冲突检测</p>\n\n<h3 id=\"31-冲突解决方案\">3.1 冲突解决方案</h3>\n\n<p>以下简述冲突检测设计思路</p>\n\n<h4 id=\"311-数据准备\">3.1.1 数据准备</h4>\n\n<ul>\n  <li>先进行一次预合并，通过首次合并,可以从sourcetree中看到冲突的类列表文件，查看冲突内容，出现整个文件都带+的变更内容，该文件即为被迁移且被其他分支修改的文件。</li>\n</ul>\n\n<p><img src=\"/img/2023-10-07-merge/0.jpg\" alt=\"0\" /></p>\n\n<ul>\n  <li>将预合并产生的上述冲突的文件列表进行整理，将列表中符合迁移并修改的文件路径列表定义为数组存入文件：merge_project_files.txt</li>\n</ul>\n\n<p><img src=\"/img/2023-10-07-merge/1.png\" alt=\"1\" /></p>\n\n<p>​\t通过选中类(可以全选之后一起移动【mv】)移动路径:</p>\n\n<p><img src=\"/img/2023-10-07-merge/2.png\" alt=\"2\" /></p>\n\n<p><strong><em>Tips：这里用移动mv，不用复制cp，为了主工程修改完之后，能恢复迁移后的样子，不至于多出一些已迁移但是还存在主工程的文件</em></strong></p>\n\n<p>即可获取主工程冲突文件路径，新建一个文本文件,将上述所有冲突类路径移动过去,</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n</pre></td><td class=\"rouge-code\"><pre>/Users/username/Documents/Project/git/Inner/Demo/127/Demo-IOS/ProjectDemoiOS/ProjectDemoiOS/Class/Main/Car/Model/PSCCarDetailInforModel.h\n/Users/username/Documents/Project/git/Inner/Demo/127/Demo-IOS/ProjectDemoiOS/ProjectDemoiOS/Class/Main/Sites/View/PSCPowerPriceTableViewCell.m\n.....\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<ul>\n  <li>将上述文件列表一一对应到组件库里本地clone路径了列表，定义为数组存入文件；merge_pods_files.txt</li>\n</ul>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n</pre></td><td class=\"rouge-code\"><pre>/Users/username/Documents/Project/git/CocoaPods/Private/ProjectCarModule/ProjectCarModule/Classes/Car/Model/DemoCarDetailInforModel.h\n/Users/username/Documents/Project/git/CocoaPods/Private/ProjectExchangeMoudle/ProjectExchangeMoudle/Classes/Sites/View/DemoPowerPriceTableViewCell.m\n.....\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p><strong><em>Tips:commond+option+c可以文件路径</em></strong></p>\n\n<h4 id=\"312--算法编写\">3.1.2  算法编写</h4>\n\n<ul>\n  <li>步骤1:在一个全新的组件化分支（未进行预合并）上先从组件库将冲突的类文件拷贝回主工程,</li>\n  <li>步骤2:提交本地仓库(不需要push远程仓库)后再进行合并</li>\n  <li>步骤3:合并冲突则为可参考历史变更及可解决的冲突状态</li>\n  <li>步骤4:合并解决完后再通过上述方案,反向将dest的主工程目录拷贝并覆盖到组件库文件</li>\n</ul>\n\n<p><strong><em>Tips:可能存在一些已经删除的文件，但是也出现在上述列表中，此时无法从组件库移动到主工程，需要确认是否是无用文件（不是误删）</em></strong></p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\"># merge.sh</span>\n<span class=\"c\"># 从外部文件中读取源文件路径和目标文件夹路径</span>\n<span class=\"c\">#\"source_paths.txt\"</span>\n<span class=\"nv\">source_file</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n<span class=\"c\">#\"destination_paths.txt\"</span>\n<span class=\"nv\">destination_file</span><span class=\"o\">=</span><span class=\"nv\">$2</span>\n\n<span class=\"c\"># 检查源文件是否存在</span>\n<span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"o\">!</span> <span class=\"nt\">-f</span> <span class=\"s2\">\"</span><span class=\"nv\">$source_file</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n    </span><span class=\"nb\">echo</span> <span class=\"s2\">\"源文件 '</span><span class=\"nv\">$source_file</span><span class=\"s2\">' 不存在。\"</span>\n    <span class=\"nb\">exit </span>1\n<span class=\"k\">fi</span>\n\n<span class=\"c\"># 检查目标文件夹文件是否存在</span>\n<span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"o\">!</span> <span class=\"nt\">-f</span> <span class=\"s2\">\"</span><span class=\"nv\">$destination_file</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n    </span><span class=\"nb\">echo</span> <span class=\"s2\">\"源文件 '</span><span class=\"nv\">$source_file</span><span class=\"s2\">' 不存在。\"</span>\n    <span class=\"nb\">exit </span>1\n<span class=\"k\">fi</span>\n\n<span class=\"c\">#保证每条记录都有一个回车（最后一行如果没有回车，会被忽略）</span>\n<span class=\"k\">while </span><span class=\"nv\">IFS</span><span class=\"o\">=</span> <span class=\"nb\">read</span> <span class=\"nt\">-r</span> source_path <span class=\"o\">&amp;&amp;</span> <span class=\"nv\">IFS</span><span class=\"o\">=</span> <span class=\"nb\">read</span> <span class=\"nt\">-r</span> destination_folder &lt;&amp;3<span class=\"p\">;</span> <span class=\"k\">do\n    </span>source_paths+<span class=\"o\">=(</span><span class=\"s2\">\"</span><span class=\"nv\">$source_path</span><span class=\"s2\">\"</span><span class=\"o\">)</span>\n    destination_paths+<span class=\"o\">=(</span><span class=\"s2\">\"</span><span class=\"nv\">$destination_folder</span><span class=\"s2\">\"</span><span class=\"o\">)</span>\n<span class=\"k\">done</span> &lt; <span class=\"nv\">$source_file</span> 3&lt; <span class=\"nv\">$destination_file</span>\n\n<span class=\"c\"># 输出数组长度</span>\n<span class=\"nb\">echo</span> <span class=\"s2\">\"源文件路径数组长度：</span><span class=\"k\">${#</span><span class=\"nv\">source_paths</span><span class=\"p\">[@]</span><span class=\"k\">}</span><span class=\"s2\">\"</span>\n<span class=\"nb\">echo</span> <span class=\"s2\">\"目标文件夹路径数组长度：</span><span class=\"k\">${#</span><span class=\"nv\">destination_paths</span><span class=\"p\">[@]</span><span class=\"k\">}</span><span class=\"s2\">\"</span>\n\n<span class=\"c\">#exit 0</span>\n<span class=\"c\"># 遍历索引</span>\n<span class=\"k\">for </span>index <span class=\"k\">in</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"p\">!source_paths[@]</span><span class=\"k\">}</span><span class=\"s2\">\"</span><span class=\"p\">;</span> <span class=\"k\">do\n    </span><span class=\"nb\">echo</span> <span class=\"s2\">\"遍历目标文件夹路径数组,index=\"</span><span class=\"nv\">$index</span>\n    <span class=\"nv\">source_path</span><span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">source_paths</span><span class=\"p\">[</span><span class=\"nv\">$index</span><span class=\"p\">]</span><span class=\"k\">}</span><span class=\"s2\">\"</span>\n    <span class=\"nv\">destination_path</span><span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">destination_paths</span><span class=\"p\">[</span><span class=\"nv\">$index</span><span class=\"p\">]</span><span class=\"k\">}</span><span class=\"s2\">\"</span>\n\n    <span class=\"c\"># 构建目标文件的完整路径</span>\n<span class=\"c\">#    destination_path=\"${destination_folder}${source_path}\"</span>\n\n    <span class=\"c\"># 检查目标文件是否存在，如果存在则删除</span>\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-e</span> <span class=\"s2\">\"</span><span class=\"nv\">$destination_path</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">rm</span> <span class=\"s2\">\"</span><span class=\"nv\">$destination_path</span><span class=\"s2\">\"</span>\n    <span class=\"k\">fi</span>\n\n    <span class=\"c\"># 确保目标文件夹存在</span>\n    <span class=\"nb\">mkdir</span> <span class=\"nt\">-p</span> <span class=\"s2\">\"</span><span class=\"si\">$(</span><span class=\"nb\">dirname</span> <span class=\"s2\">\"</span><span class=\"nv\">$destination_path</span><span class=\"s2\">\"</span><span class=\"si\">)</span><span class=\"s2\">\"</span>\n\n    <span class=\"c\"># 移动源文件到目标路径</span>\n    <span class=\"nb\">mv</span> <span class=\"s2\">\"</span><span class=\"nv\">$source_path</span><span class=\"s2\">\"</span> <span class=\"s2\">\"</span><span class=\"nv\">$destination_path</span><span class=\"s2\">\"</span>\n<span class=\"k\">done\n\n</span><span class=\"nb\">echo</span> <span class=\"s2\">\"文件移动完成。\"</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h4 id=\"313-执行\">3.1.3 执行</h4>\n\n<p>将pod仓库的文件移动回主工程的调用方式：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>sh merge.sh merge_pods_files.txt merge_project_files.txt\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>解决完冲突后将主工程的上述文件移动回组件库</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>sh merge.sh merge_project_files.txt merge_pods_files.txt\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h4 id=\"314-收尾\">3.1.4 收尾</h4>\n\n<ul>\n  <li>解决完冲突，Pod仓库会得到从主干(其他功能分支)合并的最新类的修改版本，需要提交到对应迁移Pod仓库</li>\n  <li>主工程Project文件保留迁移后的版本，可以得到组件化改造后的Project的文件结构</li>\n  <li>再执行一次之前提到的寻找Project未引用，但是还存在的类的脚本进行最后的清理</li>\n</ul>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n</pre></td><td class=\"rouge-code\"><pre><span class=\"k\">function </span>main<span class=\"o\">()</span> <span class=\"o\">{</span>\n    \n    <span class=\"c\"># 设置项目目录</span>\n    <span class=\"nv\">project_directory</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$1</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then</span>\n        <span class=\"c\">#未传参为当前目录</span>\n        <span class=\"nv\">project_directory</span><span class=\"o\">=</span><span class=\"nb\">.</span>\n    <span class=\"k\">fi</span>\n\n    <span class=\"c\"># 设置其他目录</span>\n    <span class=\"nv\">parent_path</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">dirname</span> <span class=\"s2\">\"</span><span class=\"nv\">$project_directory</span><span class=\"s2\">\"</span><span class=\"si\">)</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"project 路径：\"</span><span class=\"nv\">$parent_path</span>\n    \n    <span class=\"nv\">current_dir</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">basename</span> <span class=\"s2\">\"</span><span class=\"nv\">$project_directory</span><span class=\"s2\">\"</span><span class=\"si\">)</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"当前路径 文件夹名称：\"</span><span class=\"nv\">$current_dir</span>\n\n    \n    <span class=\"nv\">project_path</span><span class=\"o\">=</span><span class=\"si\">$(</span>find <span class=\"s2\">\"</span><span class=\"nv\">$parent_path</span><span class=\"s2\">\"</span>/<span class=\"nv\">$current_dir</span>.xcodeproj <span class=\"nt\">-type</span> f <span class=\"se\">\\(</span> <span class=\"nt\">-name</span> <span class=\"s2\">\"*.pbxproj\"</span> <span class=\"se\">\\)</span><span class=\"si\">)</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"project 路径：\"</span><span class=\"nv\">$project_path</span>\n\n    <span class=\"nv\">all_file_path</span><span class=\"o\">=</span><span class=\"si\">$(</span>find <span class=\"s2\">\"</span><span class=\"nv\">$project_directory</span><span class=\"s2\">\"</span> <span class=\"nt\">-type</span> f <span class=\"se\">\\(</span> <span class=\"nt\">-name</span> <span class=\"s2\">\"*.h\"</span> <span class=\"se\">\\)</span><span class=\"si\">)</span>\n    <span class=\"nv\">all_file_path_cnt</span><span class=\"o\">=</span><span class=\"si\">$(</span>find <span class=\"s2\">\"</span><span class=\"nv\">$project_directory</span><span class=\"s2\">\"</span> <span class=\"nt\">-type</span> f <span class=\"se\">\\(</span> <span class=\"nt\">-name</span> <span class=\"s2\">\"*.h\"</span> <span class=\"se\">\\)</span> | <span class=\"nb\">wc</span> <span class=\"nt\">-l</span><span class=\"si\">)</span>\n\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"主工程 头文件数量：\"</span><span class=\"nv\">$all_file_path_cnt</span>\n\n    <span class=\"k\">for </span>src_file <span class=\"k\">in</span> <span class=\"nv\">$all_file_path</span><span class=\"p\">;</span> <span class=\"k\">do</span>\n    <span class=\"c\">#    echo $src_file</span>\n        <span class=\"nv\">filename</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">basename</span> <span class=\"s2\">\"</span><span class=\"nv\">$src_file</span><span class=\"s2\">\"</span> .h<span class=\"si\">)</span>\n        <span class=\"k\">if</span>  <span class=\"o\">!</span> <span class=\"nb\">grep</span> <span class=\"nt\">-q</span> <span class=\"s2\">\"</span><span class=\"se\">\\b</span><span class=\"nv\">$filename</span><span class=\"se\">\\b</span><span class=\"s2\">\"</span> <span class=\"s2\">\"</span><span class=\"nv\">$project_path</span><span class=\"s2\">\"</span><span class=\"p\">;</span>  <span class=\"k\">then\n            </span><span class=\"nb\">echo</span> <span class=\"s2\">\"project不包含：\"</span><span class=\"nv\">$src_file</span>\n        <span class=\"k\">fi\n    done</span>\n<span class=\"o\">}</span>\n\n\nmain <span class=\"nv\">$1</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>传入工程(Project文件所在的目录)路径：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>sh find_all_file_no_project.sh /Users/username/Documents/Project/git/Inner/Demo/Release/Demo-IOS/ProjectiOS/ProjectiOS \n</pre></td></tr></tbody></table></code></pre></div></div>\n\n\n\n                <hr style=\"visibility: hidden;\">\n                <ul class=\"pager\">\n                    \n                    <li class=\"previous\">\n                        <a href=\"/2023/09/12/iOS-OC-Swift%E6%B7%B7%E7%BC%96/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Pod仓库内OC与Swift调用\">\n                        Previous<br>\n                        <span>Pod仓库内OC与Swift调用</span>\n                        </a>\n                    </li>\n                    \n                    \n                    <li class=\"next\">\n                        <a href=\"/2023/10/07/%E6%8A%93%E5%8C%85%E5%AE%9E%E8%B7%B5/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Charles HTTPS实践\">\n                        Next<br>\n                        <span>Charles HTTPS实践</span>\n                        </a>\n                    </li>\n                    \n                </ul>\n                <hr style=\"visibility: hidden;\">\n\n                \n                <!-- disqus 评论框 start -->\n                <div class=\"comment\">\n                    <div id=\"disqus_thread\" class=\"disqus-thread\"></div>\n                </div>\n                <!-- disqus 评论框 end -->\n                \n\n                \n            </div>  \n\n    <!-- Side Catalog Container -->\n        \n            <div class=\"\n                col-lg-2 col-lg-offset-0\n                visible-lg-block\n                sidebar-container\n                catalog-container\">\n                <div class=\"side-catalog\">\n                    <hr class=\"hidden-sm hidden-xs\">\n                    <h5>\n                        <a class=\"catalog-toggle\" href=\"#\">CATALOG</a>\n                    </h5>\n                    <ul class=\"catalog-body\"></ul>\n                </div>\n            </div>\n        \n\n    <!-- Sidebar Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                sidebar-container\">\n\n                <!-- Featured Tags -->\n                \n\n\n<section>\n    \n        <hr class=\"hidden-sm hidden-xs\">\n    \n    <h5><a href=\"/archive/\">FEATURED TAGS</a></h5>\n    <div class=\"tags\">\n        \n        \n        \n        \n        \n    </div>\n</section>\n\n\n                <!-- Friends Blog -->\n                \n            </div>\n        </div>\n    </div>\n</article>\n\n<!-- add support for mathjax by voleking-->\n\n\n\n\n\n\n<!-- disqus 公共JS代码 start (一个网页只需插入一次) -->\n<script type=\"text/javascript\">\n    /* * * CONFIGURATION VARIABLES * * */\n    var disqus_shortname = \"Cyp\";\n    var disqus_identifier = \"/2023/10/07/组件化之分支合并\";\n    var disqus_url = \"http://localhost:4000/2023/10/07/%E7%BB%84%E4%BB%B6%E5%8C%96%E4%B9%8B%E5%88%86%E6%94%AF%E5%90%88%E5%B9%B6/\";\n\n    (function() {\n        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;\n        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';\n        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);\n    })();\n</script>\n<!-- disqus 公共JS代码 end -->\n\n\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n      var d = document, t = 'script',\n          o = d.createElement(t),\n          s = d.getElementsByTagName(t)[0];\n      o.src = u;\n      if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n      s.parentNode.insertBefore(o, s);\n    }\n</script>\n<!-- anchor-js, Doc:http://bryanbraun.github.io/anchorjs/ -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/anchor-js/1.1.1/anchor.min.js\",function(){\n        anchors.options = {\n          visible: 'hover',\n          placement: 'right',\n          // icon: '#'\n        };\n        anchors.add().remove('.intro-header h1').remove('.subheading').remove('.sidebar-container h5');\n    })\n</script>\n<style>\n    /* place left on bigger screen */\n    @media all and (min-width: 800px) {\n        .anchorjs-link{\n            position: absolute;\n            left: -0.75em;\n            font-size: 1.1em;\n            margin-top : -0.1em;\n        }\n    }\n</style>\n\n\n\n    <!-- Footer -->\n<footer>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <!-- SNS Link -->\n                \n\n\n<ul class=\"list-inline text-center\">\n\n\n  \n  \n  \n  \n  \n  \n  \n</ul>\n\n                <p class=\"copyright text-muted\">\n                    Copyright &copy; PaysonChen Blog 2024\n                    <br>\n                    <!-- Powered by <a href=\"http://huangxuan.me\">Hux Blog</a> | -->\n                 <!--    <iframe style=\"margin-left: 2px; margin-bottom:-5px;\" frameborder=\"0\" scrolling=\"0\" width=\"100px\"\n                        height=\"20px\"\n                        src=\"https://ghbtns.com/github-btn.html?user=huxpro&repo=huxpro.github.io&type=star&count=true\">\n                    </iframe> -->\n                </p>\n            </div>\n        </div>\n    </div>\n</footer>\n\n<!-- jQuery -->\n<script src=\"/js/jquery.min.js \"></script>\n\n<!-- Bootstrap Core JavaScript -->\n<!-- Currently, only navbar scroll-down effect at desktop still depends on this -->\n<script src=\"/js/bootstrap.min.js \"></script>\n\n<!-- Custom Theme JavaScript -->\n<script src=\"/js/hux-blog.min.js \"></script>\n\n<!-- Simple Jekyll Search -->\n<script src=\"/js/simple-jekyll-search.min.js\"></script>\n\n<!-- Service Worker -->\n\n<script src=\"/js/snackbar.js \"></script>\n<script src=\"/js/sw-registration.js \"></script>\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n        var d = document, t = 'script',\n            o = d.createElement(t),\n            s = d.getElementsByTagName(t)[0];\n        o.src = u;\n        if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n        s.parentNode.insertBefore(o, s);\n    }\n</script>\n\n<!--\n     Because of the native support for backtick-style fenced code blocks\n     right within the Markdown is landed in Github Pages,\n     From V1.6, There is no need for Highlight.js,\n     so Huxblog drops it officially.\n\n     - https://github.com/blog/2100-github-pages-now-faster-and-simpler-with-jekyll-3-0\n     - https://help.github.com/articles/creating-and-highlighting-code-blocks/\n     - https://github.com/jneen/rouge/wiki/list-of-supported-languages-and-lexers\n-->\n<!--\n    <script>\n        async(\"http://cdn.bootcss.com/highlight.js/8.6/highlight.min.js\", function(){\n            hljs.initHighlightingOnLoad();\n        })\n    </script>\n    <link href=\"http://cdn.bootcss.com/highlight.js/8.6/styles/github.min.css\" rel=\"stylesheet\">\n-->\n\n\n\n\n\n\n\n<!--fastClick.js -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/fastclick/1.0.6/fastclick.min.js\", function () {\n        var $nav = document.querySelector(\"nav\");\n        if ($nav) FastClick.attach($nav);\n    })\n</script>\n\n\n<!-- Google Analytics -->\n\n\n\n<!-- Baidu Tongji -->\n\n\n\n<!-- Side Catalog -->\n\n<script type=\"text/javascript\">\n    function generateCatalog(selector) {\n\n        // interop with multilangual \n        if ('' == 'true') {\n            _containerSelector = 'div.post-container.active'\n        } else {\n            _containerSelector = 'div.post-container'\n        }\n\n        // init\n        var P = $(_containerSelector), a, n, t, l, i, c;\n        a = P.find('h1,h2,h3,h4,h5,h6');\n\n        // clean\n        $(selector).html('')\n\n        // appending\n        a.each(function () {\n            n = $(this).prop('tagName').toLowerCase();\n            i = \"#\" + $(this).prop('id');\n            t = $(this).text();\n            c = $('<a href=\"' + i + '\" rel=\"nofollow\">' + t + '</a>');\n            l = $('<li class=\"' + n + '_nav\"></li>').append(c);\n            $(selector).append(l);\n        });\n        return true;\n    }\n\n    generateCatalog(\".catalog-body\");\n\n    // toggle side catalog\n    $(\".catalog-toggle\").click((function (e) {\n        e.preventDefault();\n        $('.side-catalog').toggleClass(\"fold\")\n    }))\n\n    /*\n     * Doc: https://github.com/davist11/jQuery-One-Page-Nav\n     * Fork by Hux to support padding\n     */\n    async(\"/js/jquery.nav.js\", function () {\n        $('.catalog-body').onePageNav({\n            currentClass: \"active\",\n            changeHash: !1,\n            easing: \"swing\",\n            filter: \"\",\n            scrollSpeed: 700,\n            scrollOffset: 0,\n            scrollThreshold: .2,\n            begin: null,\n            end: null,\n            scrollChange: null,\n            padding: 80\n        });\n    });\n</script>\n\n\n\n<!-- Multi-Lingual -->\n\n\n<!-- Simple Jekyll Search -->\n<script>\n    // https://stackoverflow.com/questions/1912501/unescape-html-entities-in-javascript\n    function htmlDecode(input) {\n        var e = document.createElement('textarea');\n        e.innerHTML = input;\n        // handle case of empty input\n        return e.childNodes.length === 0 ? \"\" : e.childNodes[0].nodeValue;\n    }\n\n    SimpleJekyllSearch({\n        searchInput: document.getElementById('search-input'),\n        resultsContainer: document.getElementById('search-results'),\n        json: '/search.json',\n        searchResultTemplate: '<div class=\"post-preview item\"><a href=\"{url}\"><h2 class=\"post-title\">{title}</h2><h3 class=\"post-subtitle\">{subtitle}</h3><hr></a></div>',\n        noResultsText: 'No results',\n        limit: 50,\n        fuzzy: false,\n        // a hack to get escaped subtitle unescaped. for some reason, \n        // post.subtitle w/o escape filter nuke entire search.\n        templateMiddleware: function (prop, value, template) {\n            if (prop === 'subtitle' || prop === 'title') {\n                if (value.indexOf(\"code\")) {\n                    return htmlDecode(value);\n                } else {\n                    return value;\n                }\n            }\n        }\n    });\n\n    $(document).ready(function () {\n        var $searchPage = $('.search-page');\n        var $searchOpen = $('.search-icon');\n        var $searchClose = $('.search-icon-close');\n        var $searchInput = $('#search-input');\n        var $body = $('body');\n\n        $searchOpen.on('click', function (e) {\n            e.preventDefault();\n            $searchPage.toggleClass('search-active');\n            var prevClasses = $body.attr('class') || '';\n            setTimeout(function () {\n                $body.addClass('no-scroll');\n            }, 400)\n\n            if ($searchPage.hasClass('search-active')) {\n                $searchClose.on('click', function (e) {\n                    e.preventDefault();\n                    $searchPage.removeClass('search-active');\n                    $body.attr('class', prevClasses);  // from closure \n                });\n                $searchInput.focus();\n            }\n        });\n    });\n</script>\n\n\n<!-- Image to hack wechat -->\n<img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\" />\n<!-- Migrate from head to bottom, no longer block render and still work -->\n\n</body>\n\n</html>\n","excerpt":"<h1 id=\"组件化实践之主工程抽离代码分支合并\">组件化实践之：主工程抽离代码分支合并</h1>\n","url":"/2023/10/07/%E7%BB%84%E4%BB%B6%E5%8C%96%E4%B9%8B%E5%88%86%E6%94%AF%E5%90%88%E5%B9%B6/","next":{"id":"/2023/10/07/抓包实践","tags":[],"relative_path":"_posts/2023-10-09-抓包实践.md","collection":"posts","name":"2023-10-09-抓包实践.md","url":"/2023/10/07/%E6%8A%93%E5%8C%85%E5%AE%9E%E8%B7%B5/","title":"Charles HTTPS实践","date":"2023-10-07 00:00:00 +0800","categories":[],"path":"_posts/2023-10-09-抓包实践.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/home-bg-geek.jpg","slug":"抓包实践","ext":".md"},"title":"组件化实践之：主工程抽离代码分支合并用","date":"2023-10-07 00:00:00 +0800","categories":[],"path":"_posts/2023-10-07-组件化之分支合并.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/home-bg-geek.jpg","slug":"组件化之分支合并","ext":".md"},"title":"Pod仓库内OC与Swift调用","date":"2023-09-12 00:00:00 +0800","categories":[],"path":"_posts/2023-09-12-iOS-OC-Swift混编.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/home-bg-geek.jpg","slug":"iOS-OC-Swift混编","ext":".md"},{"id":"/2023/08/17/iOS组件化-业务组件准备篇","tags":[],"relative_path":"_posts/2023-08-17-iOS组件化-业务组件准备篇.md","collection":"posts","content":"<h1 id=\"ios组件化之业务组件准备篇\">iOS组件化之：业务组件准备篇</h1>\n\n<h2 id=\"1-背景\">1. 背景</h2>\n\n<p>基础组件拆分到一定程度时，主工程剩下的就多数与视图界面(vc、view等)相关的类文件。此时可以考虑对业务组件进行设计和规划，但是在此时，工程还存在如下问题：</p>\n\n<ul>\n  <li>​\t冗余文件：\n    <ul>\n      <li>未被引用到Project，但存在在工程目录中的冗余的类文件</li>\n    </ul>\n  </li>\n  <li>​\t非冗余但未被使用的文件\n    <ul>\n      <li>未在其他类中使用到的类文件</li>\n    </ul>\n  </li>\n</ul>\n\n<p>为了减轻业务组件的工作量和复杂度，在此之前最好能净化/清理一下工程</p>\n\n<p>具体采用人工 or 脚本 进行清理：</p>\n\n<p>根据我们进行估算，执行的时间复杂度为 n²，如果主工程（还未进行业务组件抽离）里还有1000个文件，则遍历一遍则需要进行100万次检索，m2 芯片执行一次需要2小时左右。人工检索时间更长，并且人工检索将呈现边际效用递增的问题。</p>\n\n<p>脚本解决上述问题，并能实现近乎为0的边际成本，可以沉淀具体算法，供其他项目使用</p>\n\n<h2 id=\"2-工程清理\">2. 工程清理</h2>\n\n<h3 id=\"21-冗余文件清理\">2.1 冗余文件清理</h3>\n\n<p>通过递归遍历工程目录，将遍历后的类名逐一与XXX.xcodeproj/project.pbxproj 文件内容进行匹配，匹配失败即为：</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>未被引用到Project，但存在在工程目录中的冗余的类文件\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>具体思路可以这样实现：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\"># 设置项目目录</span>\n<span class=\"nv\">project_directory</span><span class=\"o\">=</span><span class=\"s2\">\"工程项目目录\"</span>\n<span class=\"nv\">project_path</span><span class=\"o\">=</span><span class=\"s2\">\"xxx.xcodeproj/project.pbxproj的目录\"</span>\n\n<span class=\"c\"># 查找所有以ViewController.m结尾的文件并输出列表</span>\n<span class=\"c\"># 查找所有以ViewController.m结尾的文件并输出不包含后缀名的文件名</span>\n<span class=\"nv\">all_file_path</span><span class=\"o\">=</span><span class=\"si\">$(</span>find <span class=\"s2\">\"</span><span class=\"nv\">$project_directory</span><span class=\"s2\">\"</span> <span class=\"nt\">-type</span> f <span class=\"se\">\\(</span> <span class=\"nt\">-name</span> <span class=\"s2\">\"*.h\"</span> <span class=\"se\">\\)</span><span class=\"si\">)</span>\n\n<span class=\"k\">for </span>src_file <span class=\"k\">in</span> <span class=\"nv\">$all_file_path</span><span class=\"p\">;</span> <span class=\"k\">do</span>\n<span class=\"c\">#    echo $src_file</span>\n    <span class=\"nv\">filename</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">basename</span> <span class=\"s2\">\"</span><span class=\"nv\">$src_file</span><span class=\"s2\">\"</span> .h<span class=\"si\">)</span>\n    <span class=\"k\">if</span>  <span class=\"o\">!</span> <span class=\"nb\">grep</span> <span class=\"nt\">-q</span> <span class=\"s2\">\"</span><span class=\"se\">\\b</span><span class=\"nv\">$filename</span><span class=\"se\">\\b</span><span class=\"s2\">\"</span> <span class=\"s2\">\"</span><span class=\"nv\">$project_path</span><span class=\"s2\">\"</span><span class=\"p\">;</span>  <span class=\"k\">then\n        </span><span class=\"nb\">echo</span> <span class=\"s2\">\"project不包含：\"</span><span class=\"nv\">$filename</span>\n    <span class=\"k\">fi\ndone</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h3 id=\"22-未使用文件清理\">2.2 未使用文件清理</h3>\n\n<h4 id=\"221-fui工具\">2.2.1 <a href=\"https://github.com/dblock/fui\">fui工具</a></h4>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n</pre></td><td class=\"rouge-code\"><pre><span class=\"nb\">sudo </span>gem <span class=\"nb\">install </span>fui <span class=\"nt\">-n</span> /usr/local/bin\n\nfui find\t<span class=\"c\">#当前目录执行</span>\nfui <span class=\"nt\">--path</span><span class=\"o\">=</span>~/source/project/Name find\t<span class=\"c\">#指定目录执行</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>fui工具的源码，暂时还没去详细看，但是发现一个问题，他无法识别注释的取消引用：</p>\n\n<p>举个例子，A import B，但是import 当前行注释掉了:</p>\n\n<pre><code class=\"language-objective-c\">//\n//  \n//  A.m  \n//  Example\n//\n//  Created by PSC on 2023/8/15\n//  Copyright © 2023 PSC. All rights reserved.\n//\n\n#import \"A.h\"\n//#import \"B.h\"\n\n……\n</code></pre>\n\n<p>在fui的执行结果中，不会认为B没有被使用。</p>\n\n<h4 id=\"222-自建工具\">2.2.2 自建工具</h4>\n\n<p>为了解决上述fui工具的问题，并且做出一些优化，自建工具的设计思路为：</p>\n\n<ul>\n  <li>遍历工程目录的所有实现类：.m文件（不包含category）</li>\n  <li>将类名与工程内除自身以外所有文件进行进逐行匹配（包含category）</li>\n  <li>当匹配到不包含// 与 #import 开头的行，则算为有引用，否则为未引用</li>\n  <li>将未匹配到的文件路径进行输出</li>\n  <li>将上述匹配出来的文件先进行移除，再执行一遍（由于第一层被移除，可能会暴露出更多没被引用的类）</li>\n  <li>直到没有匹配到未被调用的类为止</li>\n</ul>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#!/bin/bash</span>\n\n<span class=\"c\"># [背景]</span>\n<span class=\"c\"># 基础组件拆分到一定程度时，主工程剩下的就多数与视图界面(vc、view等)相关的类文件。此时可以考虑对业务组件进行设计和规划，但是在此时，工程还存在如下问题：</span>\n<span class=\"c\">#    冗余文件：</span>\n<span class=\"c\">#​    非冗余但未被使用的文件</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># author: Chenyp34</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [目的]</span>\n<span class=\"c\"># 此脚本解决 \"非冗余但未被使用的文件\" 的清理</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [目录]</span>\n<span class=\"c\">#   - find_unused_class.sh</span>\n<span class=\"c\"># [说明]</span>\n<span class=\"c\"># 1 遍历工程目录的所有实现类：.m文件（不包含category）</span>\n<span class=\"c\"># 2 将类名与工程内除自身以外所有文件进行进逐行匹配（包含category）</span>\n<span class=\"c\"># 3 当匹配到不包含// 与 #import 开头的行，则算为有引用，否则为未引用</span>\n<span class=\"c\"># 4 将未匹配到的文件路径进行输出</span>\n<span class=\"c\"># 5 将上述匹配出来的文件先进行移除，再执行一遍（由于第一层被移除，可能会暴露出更多没被引用的类）</span>\n<span class=\"c\"># 6 直到没有匹配到未被调用的类为止</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [参数]</span>\n<span class=\"c\"># 1、参数1，指定xcode工程目录 （未指定则为当前目录）</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [调用说明]</span>\n<span class=\"c\"># 1、未指定目录，则取当前目录：sh find_unused_class.sh</span>\n<span class=\"c\"># 2、指定目录 ：sh find_unused_class.sh /Users/xxxxx/Project-IOS/Project/Project</span>\n\n\n<span class=\"c\">#!/bin/bash</span>\n\n<span class=\"c\">#是否重复执行到没有找到不可用文件</span>\n<span class=\"nb\">export </span><span class=\"nv\">cycle_deal</span><span class=\"o\">=</span>1\n<span class=\"nb\">export </span><span class=\"nv\">cycle_idx</span><span class=\"o\">=</span>1\n<span class=\"nv\">total_unused_file_name</span><span class=\"o\">=</span><span class=\"s1\">''</span>\n<span class=\"k\">function </span>main<span class=\"o\">()</span> <span class=\"o\">{</span>\n    \n    <span class=\"c\"># 设置项目目录</span>\n    <span class=\"nv\">project_directory</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$1</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then</span>\n        <span class=\"c\">#未传参为当前目录</span>\n        <span class=\"nv\">project_directory</span><span class=\"o\">=</span><span class=\"nb\">.</span>\n    <span class=\"k\">fi</span>\n\n    <span class=\"c\">#初始化参数：</span>\n    <span class=\"nv\">unused_files</span><span class=\"o\">=</span><span class=\"s1\">''</span>\n\n    <span class=\"c\"># 查找所有以ViewController.m结尾的文件并输出列表</span>\n    <span class=\"nv\">all_class_path</span><span class=\"o\">=</span><span class=\"si\">$(</span>find <span class=\"s2\">\"</span><span class=\"nv\">$project_directory</span><span class=\"s2\">\"</span> <span class=\"nt\">-type</span> f <span class=\"se\">\\(</span> <span class=\"nt\">-name</span> <span class=\"s2\">\"*.m\"</span> <span class=\"se\">\\)</span> | <span class=\"nb\">grep</span> <span class=\"nt\">-v</span> <span class=\"s1\">'+'</span><span class=\"si\">)</span>\n\n    <span class=\"nv\">all_file_path</span><span class=\"o\">=</span><span class=\"si\">$(</span>find <span class=\"s2\">\"</span><span class=\"nv\">$project_directory</span><span class=\"s2\">\"</span> <span class=\"nt\">-type</span> f <span class=\"se\">\\(</span> <span class=\"nt\">-name</span> <span class=\"s2\">\"*.m\"</span> <span class=\"nt\">-o</span> <span class=\"nt\">-name</span> <span class=\"s2\">\"*.h\"</span> <span class=\"se\">\\)</span> <span class=\"si\">)</span>\n\n    <span class=\"k\">for </span>file <span class=\"k\">in</span> <span class=\"nv\">$all_class_path</span><span class=\"p\">;</span> <span class=\"k\">do\n        </span><span class=\"nv\">filename</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">basename</span> <span class=\"s2\">\"</span><span class=\"nv\">$file</span><span class=\"s2\">\"</span> .m<span class=\"si\">)</span>\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"***********开始遍历文件名：\"</span><span class=\"nv\">$filename</span>\n        <span class=\"nv\">is_referenced</span><span class=\"o\">=</span><span class=\"nb\">false\n        </span><span class=\"k\">for </span>other_file <span class=\"k\">in</span> <span class=\"nv\">$all_file_path</span><span class=\"p\">;</span> <span class=\"k\">do\n            </span><span class=\"nv\">other_file_name</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">basename</span> <span class=\"s2\">\"</span><span class=\"nv\">$other_file</span><span class=\"s2\">\"</span><span class=\"si\">)</span>\n            <span class=\"c\">#获取除自身以外的类名：不包含拓展的名称，为了避免在自身的.h .m进行引用判断</span>\n            <span class=\"nv\">other_file_name_without_extension</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">echo</span> <span class=\"s2\">\"</span><span class=\"nv\">$other_file_name</span><span class=\"s2\">\"</span> | <span class=\"nb\">cut</span> <span class=\"nt\">-d</span><span class=\"nb\">.</span> <span class=\"nt\">-f1</span><span class=\"si\">)</span>\n            <span class=\"c\">#获取category的主类名称</span>\n            <span class=\"nv\">other_file_name_without_extension_before_plus</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">echo</span> <span class=\"s2\">\"</span><span class=\"nv\">$other_file_name_without_extension</span><span class=\"s2\">\"</span> | <span class=\"nb\">awk</span> <span class=\"nt\">-F</span><span class=\"s1\">'+'</span> <span class=\"s1\">'{print $1}'</span><span class=\"si\">)</span>\n            <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"s2\">\"</span><span class=\"nv\">$other_file_name_without_extension_before_plus</span><span class=\"s2\">\"</span> <span class=\"o\">!=</span> <span class=\"s2\">\"</span><span class=\"nv\">$filename</span><span class=\"s2\">\"</span> <span class=\"o\">]</span> <span class=\"p\">;</span> <span class=\"k\">then</span>\n            <span class=\"c\"># if [ \"$other_file\" != \"$file\" ] &amp;&amp; ([ \"${other_file##*.}\" = \"m\" ] ); then</span>\n                <span class=\"k\">if </span><span class=\"nb\">grep</span> <span class=\"nt\">-q</span> <span class=\"s2\">\"</span><span class=\"se\">\\b</span><span class=\"nv\">$filename</span><span class=\"se\">\\b</span><span class=\"s2\">\"</span> <span class=\"s2\">\"</span><span class=\"nv\">$other_file</span><span class=\"s2\">\"</span><span class=\"p\">;</span>  <span class=\"k\">then</span>\n                    <span class=\"c\"># 检查文件中是否有注释行</span>\n                    <span class=\"nv\">has_comment</span><span class=\"o\">=</span><span class=\"nb\">false\n                    </span><span class=\"k\">while </span><span class=\"nv\">IFS</span><span class=\"o\">=</span> <span class=\"nb\">read</span> <span class=\"nt\">-r</span> line<span class=\"p\">;</span> <span class=\"k\">do\n                        </span><span class=\"nb\">echo</span> <span class=\"s2\">\"逐行匹配：\"</span><span class=\"nv\">$line</span>\n                        <span class=\"k\">if</span> <span class=\"o\">!</span> <span class=\"nb\">grep</span> <span class=\"nt\">-qE</span> <span class=\"s2\">\"^[[:space:]]*//\"</span> <span class=\"o\">&lt;&lt;&lt;</span> <span class=\"s2\">\"</span><span class=\"nv\">$line</span><span class=\"s2\">\"</span><span class=\"p\">;</span> <span class=\"k\">then\n                            if</span> <span class=\"o\">[[</span> <span class=\"o\">!</span> <span class=\"nv\">$line</span> <span class=\"o\">=</span>~ ^[[:space:]]<span class=\"k\">*</span><span class=\"c\">#import ]]; then</span>\n                                <span class=\"nv\">has_comment</span><span class=\"o\">=</span><span class=\"nb\">true\n                                echo</span> <span class=\"s2\">\"在文件:\"</span><span class=\"nv\">$other_file</span><span class=\"s2\">\"匹配\"</span><span class=\"nv\">$filename</span><span class=\"s2\">\"存在 并且不是 注释代码 或者 import 的 break（\"</span><span class=\"nv\">$line</span>\n                                <span class=\"nb\">break\n                            </span><span class=\"k\">fi\n\n                        fi\n                    done</span> <span class=\"o\">&lt;&lt;&lt;</span> <span class=\"s2\">\"</span><span class=\"si\">$(</span><span class=\"nb\">grep</span> <span class=\"s2\">\"</span><span class=\"se\">\\b</span><span class=\"nv\">$filename</span><span class=\"se\">\\b</span><span class=\"s2\">\"</span> <span class=\"s2\">\"</span><span class=\"nv\">$other_file</span><span class=\"s2\">\"</span><span class=\"si\">)</span><span class=\"s2\">\"</span>\n                    \n                    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"s2\">\"</span><span class=\"nv\">$has_comment</span><span class=\"s2\">\"</span> <span class=\"o\">=</span> <span class=\"nb\">true</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n                        </span><span class=\"nv\">is_referenced</span><span class=\"o\">=</span><span class=\"nb\">true\n                        break\n                    </span><span class=\"k\">fi\n                fi\n            fi\n        done\n\n        if</span> <span class=\"o\">[</span> <span class=\"s2\">\"</span><span class=\"nv\">$is_referenced</span><span class=\"s2\">\"</span> <span class=\"o\">=</span> <span class=\"nb\">false</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n            </span><span class=\"nb\">echo</span> <span class=\"s2\">\"没有被引用到的文件:\"</span><span class=\"nv\">$file</span>\n            <span class=\"nv\">unused_files</span><span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"nv\">$unused_files$file</span><span class=\"se\">\\n</span><span class=\"s2\">\"</span>\n        <span class=\"k\">fi\n        </span><span class=\"nb\">echo</span> <span class=\"s2\">\"***********\"</span>\n    <span class=\"k\">done</span>\n\n    <span class=\"c\"># 输出未被引用的文件列表</span>\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-n</span> <span class=\"s2\">\"</span><span class=\"nv\">$unused_files</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">echo</span> <span class=\"nt\">-e</span> <span class=\"s2\">\"Unused class files:</span><span class=\"se\">\\n</span><span class=\"nv\">$unused_files</span><span class=\"s2\">\"</span>\n        <span class=\"nv\">total_unused_file_name</span><span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"nv\">$total_unused_file_name$unused_files</span><span class=\"se\">\\n</span><span class=\"s2\">\"</span>\n\n        <span class=\"c\">#将检索出来的文件 mv 出来</span>\n        <span class=\"nb\">mkdir</span> <span class=\"nt\">-p</span> ./unused_files/<span class=\"nv\">$cycle_idx</span>/\n        <span class=\"nv\">array</span><span class=\"o\">=(</span><span class=\"sb\">`</span><span class=\"nb\">echo</span> <span class=\"nv\">$unused_files</span> | <span class=\"nb\">tr</span> <span class=\"s1\">'\\n'</span> <span class=\"s1\">' '</span><span class=\"sb\">`</span><span class=\"o\">)</span>\n        <span class=\"k\">for </span>element <span class=\"k\">in</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">array</span><span class=\"p\">[@]</span><span class=\"k\">}</span><span class=\"s2\">\"</span><span class=\"p\">;</span> <span class=\"k\">do\n            </span><span class=\"nv\">element</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">echo</span> <span class=\"s2\">\"</span><span class=\"nv\">$element</span><span class=\"s2\">\"</span> | <span class=\"nb\">tr</span> <span class=\"nt\">-d</span> <span class=\"s1\">'\\n'</span><span class=\"si\">)</span>\n            <span class=\"nb\">echo</span> <span class=\"s2\">\"Unused class = \"</span><span class=\"nv\">$element</span>\n            <span class=\"nv\">element_filename</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">basename</span> <span class=\"s2\">\"</span><span class=\"nv\">$element</span><span class=\"s2\">\"</span> .m<span class=\"si\">)</span>\n            <span class=\"nv\">element_dirname</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">dirname</span> <span class=\"s2\">\"</span><span class=\"nv\">$element</span><span class=\"s2\">\"</span><span class=\"si\">)</span>\n            <span class=\"nb\">mv</span> <span class=\"nt\">-f</span> <span class=\"k\">${</span><span class=\"nv\">element_dirname</span><span class=\"k\">}</span>/<span class=\"k\">${</span><span class=\"nv\">element_filename</span><span class=\"k\">}</span>.h ./unused_files/<span class=\"nv\">$cycle_idx</span>/<span class=\"nv\">$element_filename</span>.h\n            <span class=\"nb\">mv</span> <span class=\"nt\">-f</span> <span class=\"k\">${</span><span class=\"nv\">element_dirname</span><span class=\"k\">}</span>/<span class=\"k\">${</span><span class=\"nv\">element_filename</span><span class=\"k\">}</span>.m ./unused_files/<span class=\"nv\">$cycle_idx</span>/<span class=\"nv\">$element_filename</span>.m\n        <span class=\"k\">done</span>\n        \n        <span class=\"c\">#cycle_deal参数为空则不循环执行</span>\n        <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-n</span> <span class=\"s2\">\"</span><span class=\"nv\">$cycle_deal</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n            </span><span class=\"nb\">exit\n        </span><span class=\"k\">else</span>\n            <span class=\"c\">#cycle_deal 不为空 循环执行，直到不再有新文件检出</span>\n            <span class=\"nb\">echo</span> <span class=\"nt\">-e</span> <span class=\"s2\">\"循环执行\"</span>\n            <span class=\"nv\">cycle_idx</span><span class=\"o\">=</span><span class=\"k\">$((</span>cycle_idx+1<span class=\"k\">))</span>\n            main <span class=\"nv\">$1</span>\n        <span class=\"k\">done\n\n    else\n        </span><span class=\"nb\">echo</span> <span class=\"s2\">\"No unused ViewController files found.\"</span><span class=\"nv\">$all_file_path</span>\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"**************************\"</span>\n        <span class=\"nb\">echo</span> <span class=\"nt\">-e</span> <span class=\"s2\">\"total_unused_file_name class files:</span><span class=\"se\">\\n</span><span class=\"nv\">$total_unused_file_name</span><span class=\"s2\">\"</span>\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"**************************\"</span>\n\n        <span class=\"nb\">exit </span>0\n    <span class=\"k\">fi</span>\n<span class=\"o\">}</span>\n\n\nmain <span class=\"nv\">$1</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h4 id=\"223-尚有不足之处\">2.2.3 尚有不足之处</h4>\n\n<p>当前工具只是匹配一层未引用，也可能如下情况未适配：</p>\n\n<ul>\n  <li>存在2个以上的类存在互相引用，但却未被其他类用到，但是以上脚本暂时无法识别</li>\n  <li>存在某些类存在在其他API类、通用类、工具类等方法中，但是此方法未被调用，则此方法和该类也可以被移除，但是以上脚本暂时无法识别</li>\n</ul>\n\n","name":"2023-08-17-iOS组件化-业务组件准备篇.md","previous":{"id":"/2023/08/11/Apple企业账号注册流程","tags":[],"relative_path":"_posts/2023-08-11-Apple企业账号注册流程.md","collection":"posts","content":"<h1 id=\"apple-企业账号注册流程\">Apple 企业账号注册流程</h1>\n\n<h2 id=\"1准备appleid\">1、准备AppleID</h2>\n\n<p>​\t使用非Owner账号，没有持有过Apple开发者账号的AppleID即可，即便是被添加到管理员</p>\n\n<h2 id=\"2完成实名\">2、完成实名</h2>\n\n<p>​\t使用App：Develop – 苹果官方开发者App，登录需要注册的AppleID，切到-&gt;【账户】点击【立即注册】</p>\n\n<h2 id=\"3注册\">3、注册</h2>\n\n<p>​\t注册时需要填入【个人】实名信息，非公司信息。</p>\n\n<p>​\t如果这个时候，地址校验多次失败之后，注册按钮会一直置灰，这个时候就需要通过电话联系Apple开发者，根据当下的异常进行处理，我的经验是：后台解除了我的限制之后，我又输入了公司的信息，导致再次错误，而二次错误无法继续解除，只能通过回传身份证信息进行验证，验证通过后，注册按钮再次被打开。</p>\n\n<h2 id=\"4实名认证\">4、实名认证</h2>\n\n<p>​\t点击注册，看到的是会籍资格688元/年，心存疑问，于是又联系了Apple开发者，再进行一系列的远程协助之后，通过【注册】之后的【下一步】继续【下一步】，一直到完成了身份证及人脸识别之后，完成了实名认证。</p>\n\n<h2 id=\"5企业账号注册\">5、企业账号注册</h2>\n\n<p>​\t至此，如果是个人账号，或者是一般企业账号（688元/年）可以在此进行注册，而企业账号（299美金/年）则需要回到网页端注册</p>\n\n<p>​\t回到网页端：</p>\n\n<p>​\t打开 https://developer.apple.com/cn/support/</p>\n\n<p>​\t点击【文章】</p>\n\n<p>​\t选择【会员资格】</p>\n\n<p>​\t在其他计划中选择【Apple Developer Enterprise Program】</p>\n\n<p>​\t点击【了解资格要求】</p>\n\n<p>​\t嫌麻烦直接跳转：【<a href=\"https://developer.apple.com/cn/programs/enterprise/\">了解资格要求</a>】</p>\n\n<p>​\t在【开始申请】的【你将分发何种类型的 App？】选择【仅在我的组织内部使用的专属App】</p>\n\n<p>​\t点击【开始填写申请表格】</p>\n","name":"2023-08-11-Apple企业账号注册流程.md","previous":{"id":"/2023/08/08/iOS-话外篇-构建详解","tags":[],"relative_path":"_posts/2023-08-08-iOS-话外篇-构建详解.md","collection":"posts","name":"2023-08-08-iOS-话外篇-构建详解.md","url":"/2023/08/08/iOS-%E8%AF%9D%E5%A4%96%E7%AF%87-%E6%9E%84%E5%BB%BA%E8%AF%A6%E8%A7%A3/","title":"iOS话外篇：构建详解","date":"2023-08-08 00:00:00 +0800","categories":[],"path":"_posts/2023-08-08-iOS-话外篇-构建详解.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/home-bg-geek.jpg","slug":"iOS-话外篇-构建详解","ext":".md"},"output":"<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"google-site-verification\" content=\"xBT4GhYoi5qRD5tr338pgPM5OWHHIDR6mNg1a3euekI\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, viewport-fit=cover\">\n    <meta name=\"description\" content=\"与你一起发现更大的世界。\">\n    <meta name=\"keywords\"  content=\"PaysonChen,iOS,流媒体\">\n    <meta name=\"theme-color\" content=\"#000000\">\n    \n    <!-- Open Graph -->\n    <meta property=\"og:title\" content=\"Apple 企业账号注册流程 - PaysonChen的博客 | PaysonChen Blog\">\n    \n    <meta property=\"og:type\" content=\"article\">\n    <meta property=\"og:description\" content=\"Apple 企业账号注册流程\n\">\n    \n    \n    <meta property=\"article:published_time\" content=\"2023-08-11T00:00:00Z\">\n    \n    \n    <meta property=\"article:author\" content=\"PaysonChen\">\n    \n    \n    \n    <meta property=\"og:image\" content=\"http://localhost:4000\">\n    <meta property=\"og:url\" content=\"http://localhost:4000/2023/08/11/Apple%E4%BC%81%E4%B8%9A%E8%B4%A6%E5%8F%B7%E6%B3%A8%E5%86%8C%E6%B5%81%E7%A8%8B/\">\n    <meta property=\"og:site_name\" content=\"PaysonChen的博客 | PaysonChen Blog\">\n    \n    <title>Apple 企业账号注册流程 - PaysonChen的博客 | PaysonChen Blog</title>\n\n    <!-- Web App Manifest -->\n    <link rel=\"manifest\" href=\"/pwa/manifest.json\">\n\n    <!-- Favicon -->\n    <link rel=\"shortcut icon\" href=\"/img/favicon.ico\">\n    \n    <!-- Canonical URL -->\n    <link rel=\"canonical\" href=\"http://localhost:4000/2023/08/11/Apple%E4%BC%81%E4%B8%9A%E8%B4%A6%E5%8F%B7%E6%B3%A8%E5%86%8C%E6%B5%81%E7%A8%8B/\">\n\n    <!-- Bootstrap Core CSS -->\n    <link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\">\n\n    <!-- Custom CSS -->\n    <link rel=\"stylesheet\" href=\"/css/hux-blog.min.css\">\n\n    <!-- Custom Fonts -->\n    <!-- <link href=\"http://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\"> -->\n    <!-- Hux change font-awesome CDN to qiniu -->\n    <link href=\"//cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\">\n\n\n    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->\n    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->\n    <!--[if lt IE 9]>\n        <script src=\"https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js\"></script>\n        <script src=\"https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js\"></script>\n    <![endif]-->\n\n    <!-- ga & ba script hoook -->\n    <script></script>\n</head>\n\n\n<!-- hack iOS CSS :active style -->\n<body ontouchstart=\"\">\n\n    <!-- Navigation -->\n\n    <nav class=\"navbar navbar-default navbar-custom navbar-fixed-top\">\n        \n        <div class=\"container-fluid\">\n            <!-- Brand and toggle get grouped for better mobile display -->\n            <div class=\"navbar-header page-scroll\">\n                <button type=\"button\" class=\"navbar-toggle\">\n                    <span class=\"sr-only\">Toggle navigation</span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                </button>\n                <a class=\"navbar-brand\" href=\"/\">PaysonChen Blog</a>\n            </div>\n\n            <!-- Collect the nav links, forms, and other content for toggling -->\n            <div id=\"huxblog_navbar\">\n                <div class=\"navbar-collapse\">\n                    <ul class=\"nav navbar-nav navbar-right\">\n                        <li>\n                            <a href=\"/\">Home</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        <li>\n                            <a href=\"/about/\">About</a>\n                        </li>\n                        \n                        \n                        \n                        <li>\n                            <a href=\"/archive/\">Archive</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        <li class=\"search-icon\">\n                            <a href=\"javascript:void(0)\">\n                                <i class=\"fa fa-search\"></i>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n            <!-- /.navbar-collapse -->\n        </div>\n        <!-- /.container -->\n    </nav>\n\n    <script>\n        // Drop Bootstarp low-performance Navbar\n        // Use customize navbar with high-quality material design animation\n        // in high-perf jank-free CSS3 implementation\n        var $body = document.body;\n        var $toggle = document.querySelector('.navbar-toggle');\n        var $navbar = document.querySelector('#huxblog_navbar');\n        var $collapse = document.querySelector('.navbar-collapse');\n\n        var __HuxNav__ = {\n            close: function () {\n                $navbar.className = \" \";\n                // wait until animation end.\n                setTimeout(function () {\n                    // prevent frequently toggle\n                    if ($navbar.className.indexOf('in') < 0) {\n                        $collapse.style.height = \"0px\"\n                    }\n                }, 400)\n            },\n            open: function () {\n                $collapse.style.height = \"auto\"\n                $navbar.className += \" in\";\n            }\n        }\n\n        // Bind Event\n        $toggle.addEventListener('click', function (e) {\n            if ($navbar.className.indexOf('in') > 0) {\n                __HuxNav__.close()\n            } else {\n                __HuxNav__.open()\n            }\n        })\n\n        /**\n         * Since Fastclick is used to delegate 'touchstart' globally\n         * to hack 300ms delay in iOS by performing a fake 'click',\n         * Using 'e.stopPropagation' to stop 'touchstart' event from \n         * $toggle/$collapse will break global delegation.\n         * \n         * Instead, we use a 'e.target' filter to prevent handler\n         * added to document close HuxNav.  \n         *\n         * Also, we use 'click' instead of 'touchstart' as compromise\n         */\n        document.addEventListener('click', function (e) {\n            if (e.target == $toggle) return;\n            if (e.target.className == 'icon-bar') return;\n            __HuxNav__.close();\n        })\n    </script>\n    <!-- Search -->\n<div class=\"search-page\">\n  <div class=\"search-icon-close-container\">\n    <span class=\"search-icon-close\">\n      <i class=\"fa fa-chevron-down\"></i>\n    </span>\n  </div>\n  <div class=\"search-main container\">\n    <div class=\"row\">\n      <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n        <form></form>\n        <input type=\"text\" id=\"search-input\" placeholder=\"$ grep...\">\n        </form>\n        <div id=\"search-results\" class=\"mini-post-list\"></div>\n      </div>\n    </div>\n  </div>\n</div>\n\n    <!-- Image to hack wechat -->\n<!-- <img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\"> -->\n<!-- <img src=\"/img/home-bg-geek.jpg\" width=\"0\" height=\"0\"> -->\n\n<!-- Post Header -->\n\n\n\n<style type=\"text/css\">\n    header.intro-header{\n        position: relative;\n        background-image: url('/img/home-bg-geek.jpg');\n        background: ;\n    }\n\n    \n</style>\n\n<header class=\"intro-header\" >\n\n    <div class=\"header-mask\"></div>\n    \n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <div class=\"post-heading\">\n                    <div class=\"tags\">\n                        \n                    </div>\n                    <h1>Apple 企业账号注册流程</h1>\n                    \n                    <h2 class=\"subheading\"></h2>\n                    <span class=\"meta\">Posted by PaysonChen on August 11, 2023</span>\n                </div>\n            </div>\n        </div>\n    </div>\n</header>\n\n\n\n\n\n\n<!-- Post Content -->\n<article>\n    <div class=\"container\">\n        <div class=\"row\">\n\n    <!-- Post Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                post-container\">\n\n                <!-- Multi-Lingual -->\n                \n\n\t\t\t\t<h1 id=\"apple-企业账号注册流程\">Apple 企业账号注册流程</h1>\n\n<h2 id=\"1准备appleid\">1、准备AppleID</h2>\n\n<p>​\t使用非Owner账号，没有持有过Apple开发者账号的AppleID即可，即便是被添加到管理员</p>\n\n<h2 id=\"2完成实名\">2、完成实名</h2>\n\n<p>​\t使用App：Develop – 苹果官方开发者App，登录需要注册的AppleID，切到-&gt;【账户】点击【立即注册】</p>\n\n<h2 id=\"3注册\">3、注册</h2>\n\n<p>​\t注册时需要填入【个人】实名信息，非公司信息。</p>\n\n<p>​\t如果这个时候，地址校验多次失败之后，注册按钮会一直置灰，这个时候就需要通过电话联系Apple开发者，根据当下的异常进行处理，我的经验是：后台解除了我的限制之后，我又输入了公司的信息，导致再次错误，而二次错误无法继续解除，只能通过回传身份证信息进行验证，验证通过后，注册按钮再次被打开。</p>\n\n<h2 id=\"4实名认证\">4、实名认证</h2>\n\n<p>​\t点击注册，看到的是会籍资格688元/年，心存疑问，于是又联系了Apple开发者，再进行一系列的远程协助之后，通过【注册】之后的【下一步】继续【下一步】，一直到完成了身份证及人脸识别之后，完成了实名认证。</p>\n\n<h2 id=\"5企业账号注册\">5、企业账号注册</h2>\n\n<p>​\t至此，如果是个人账号，或者是一般企业账号（688元/年）可以在此进行注册，而企业账号（299美金/年）则需要回到网页端注册</p>\n\n<p>​\t回到网页端：</p>\n\n<p>​\t打开 https://developer.apple.com/cn/support/</p>\n\n<p>​\t点击【文章】</p>\n\n<p>​\t选择【会员资格】</p>\n\n<p>​\t在其他计划中选择【Apple Developer Enterprise Program】</p>\n\n<p>​\t点击【了解资格要求】</p>\n\n<p>​\t嫌麻烦直接跳转：【<a href=\"https://developer.apple.com/cn/programs/enterprise/\">了解资格要求</a>】</p>\n\n<p>​\t在【开始申请】的【你将分发何种类型的 App？】选择【仅在我的组织内部使用的专属App】</p>\n\n<p>​\t点击【开始填写申请表格】</p>\n\n\n                <hr style=\"visibility: hidden;\">\n                <ul class=\"pager\">\n                    \n                    <li class=\"previous\">\n                        <a href=\"/2023/08/08/iOS-%E8%AF%9D%E5%A4%96%E7%AF%87-%E6%9E%84%E5%BB%BA%E8%AF%A6%E8%A7%A3/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"iOS话外篇：构建详解\">\n                        Previous<br>\n                        <span>iOS话外篇：构建详解</span>\n                        </a>\n                    </li>\n                    \n                    \n                    <li class=\"next\">\n                        <a href=\"/2023/08/17/iOS%E7%BB%84%E4%BB%B6%E5%8C%96-%E4%B8%9A%E5%8A%A1%E7%BB%84%E4%BB%B6%E5%87%86%E5%A4%87%E7%AF%87/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"iOS组件化之：业务组件准备篇\">\n                        Next<br>\n                        <span>iOS组件化之：业务组件准备篇</span>\n                        </a>\n                    </li>\n                    \n                </ul>\n                <hr style=\"visibility: hidden;\">\n\n                \n                <!-- disqus 评论框 start -->\n                <div class=\"comment\">\n                    <div id=\"disqus_thread\" class=\"disqus-thread\"></div>\n                </div>\n                <!-- disqus 评论框 end -->\n                \n\n                \n            </div>  \n\n    <!-- Side Catalog Container -->\n        \n            <div class=\"\n                col-lg-2 col-lg-offset-0\n                visible-lg-block\n                sidebar-container\n                catalog-container\">\n                <div class=\"side-catalog\">\n                    <hr class=\"hidden-sm hidden-xs\">\n                    <h5>\n                        <a class=\"catalog-toggle\" href=\"#\">CATALOG</a>\n                    </h5>\n                    <ul class=\"catalog-body\"></ul>\n                </div>\n            </div>\n        \n\n    <!-- Sidebar Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                sidebar-container\">\n\n                <!-- Featured Tags -->\n                \n\n\n<section>\n    \n        <hr class=\"hidden-sm hidden-xs\">\n    \n    <h5><a href=\"/archive/\">FEATURED TAGS</a></h5>\n    <div class=\"tags\">\n        \n        \n        \n        \n        \n    </div>\n</section>\n\n\n                <!-- Friends Blog -->\n                \n            </div>\n        </div>\n    </div>\n</article>\n\n<!-- add support for mathjax by voleking-->\n\n\n\n\n\n\n<!-- disqus 公共JS代码 start (一个网页只需插入一次) -->\n<script type=\"text/javascript\">\n    /* * * CONFIGURATION VARIABLES * * */\n    var disqus_shortname = \"Cyp\";\n    var disqus_identifier = \"/2023/08/11/Apple企业账号注册流程\";\n    var disqus_url = \"http://localhost:4000/2023/08/11/Apple%E4%BC%81%E4%B8%9A%E8%B4%A6%E5%8F%B7%E6%B3%A8%E5%86%8C%E6%B5%81%E7%A8%8B/\";\n\n    (function() {\n        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;\n        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';\n        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);\n    })();\n</script>\n<!-- disqus 公共JS代码 end -->\n\n\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n      var d = document, t = 'script',\n          o = d.createElement(t),\n          s = d.getElementsByTagName(t)[0];\n      o.src = u;\n      if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n      s.parentNode.insertBefore(o, s);\n    }\n</script>\n<!-- anchor-js, Doc:http://bryanbraun.github.io/anchorjs/ -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/anchor-js/1.1.1/anchor.min.js\",function(){\n        anchors.options = {\n          visible: 'hover',\n          placement: 'right',\n          // icon: '#'\n        };\n        anchors.add().remove('.intro-header h1').remove('.subheading').remove('.sidebar-container h5');\n    })\n</script>\n<style>\n    /* place left on bigger screen */\n    @media all and (min-width: 800px) {\n        .anchorjs-link{\n            position: absolute;\n            left: -0.75em;\n            font-size: 1.1em;\n            margin-top : -0.1em;\n        }\n    }\n</style>\n\n\n\n    <!-- Footer -->\n<footer>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <!-- SNS Link -->\n                \n\n\n<ul class=\"list-inline text-center\">\n\n\n  \n  \n  \n  \n  \n  \n  \n</ul>\n\n                <p class=\"copyright text-muted\">\n                    Copyright &copy; PaysonChen Blog 2024\n                    <br>\n                    <!-- Powered by <a href=\"http://huangxuan.me\">Hux Blog</a> | -->\n                 <!--    <iframe style=\"margin-left: 2px; margin-bottom:-5px;\" frameborder=\"0\" scrolling=\"0\" width=\"100px\"\n                        height=\"20px\"\n                        src=\"https://ghbtns.com/github-btn.html?user=huxpro&repo=huxpro.github.io&type=star&count=true\">\n                    </iframe> -->\n                </p>\n            </div>\n        </div>\n    </div>\n</footer>\n\n<!-- jQuery -->\n<script src=\"/js/jquery.min.js \"></script>\n\n<!-- Bootstrap Core JavaScript -->\n<!-- Currently, only navbar scroll-down effect at desktop still depends on this -->\n<script src=\"/js/bootstrap.min.js \"></script>\n\n<!-- Custom Theme JavaScript -->\n<script src=\"/js/hux-blog.min.js \"></script>\n\n<!-- Simple Jekyll Search -->\n<script src=\"/js/simple-jekyll-search.min.js\"></script>\n\n<!-- Service Worker -->\n\n<script src=\"/js/snackbar.js \"></script>\n<script src=\"/js/sw-registration.js \"></script>\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n        var d = document, t = 'script',\n            o = d.createElement(t),\n            s = d.getElementsByTagName(t)[0];\n        o.src = u;\n        if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n        s.parentNode.insertBefore(o, s);\n    }\n</script>\n\n<!--\n     Because of the native support for backtick-style fenced code blocks\n     right within the Markdown is landed in Github Pages,\n     From V1.6, There is no need for Highlight.js,\n     so Huxblog drops it officially.\n\n     - https://github.com/blog/2100-github-pages-now-faster-and-simpler-with-jekyll-3-0\n     - https://help.github.com/articles/creating-and-highlighting-code-blocks/\n     - https://github.com/jneen/rouge/wiki/list-of-supported-languages-and-lexers\n-->\n<!--\n    <script>\n        async(\"http://cdn.bootcss.com/highlight.js/8.6/highlight.min.js\", function(){\n            hljs.initHighlightingOnLoad();\n        })\n    </script>\n    <link href=\"http://cdn.bootcss.com/highlight.js/8.6/styles/github.min.css\" rel=\"stylesheet\">\n-->\n\n\n\n\n\n\n\n<!--fastClick.js -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/fastclick/1.0.6/fastclick.min.js\", function () {\n        var $nav = document.querySelector(\"nav\");\n        if ($nav) FastClick.attach($nav);\n    })\n</script>\n\n\n<!-- Google Analytics -->\n\n\n\n<!-- Baidu Tongji -->\n\n\n\n<!-- Side Catalog -->\n\n<script type=\"text/javascript\">\n    function generateCatalog(selector) {\n\n        // interop with multilangual \n        if ('' == 'true') {\n            _containerSelector = 'div.post-container.active'\n        } else {\n            _containerSelector = 'div.post-container'\n        }\n\n        // init\n        var P = $(_containerSelector), a, n, t, l, i, c;\n        a = P.find('h1,h2,h3,h4,h5,h6');\n\n        // clean\n        $(selector).html('')\n\n        // appending\n        a.each(function () {\n            n = $(this).prop('tagName').toLowerCase();\n            i = \"#\" + $(this).prop('id');\n            t = $(this).text();\n            c = $('<a href=\"' + i + '\" rel=\"nofollow\">' + t + '</a>');\n            l = $('<li class=\"' + n + '_nav\"></li>').append(c);\n            $(selector).append(l);\n        });\n        return true;\n    }\n\n    generateCatalog(\".catalog-body\");\n\n    // toggle side catalog\n    $(\".catalog-toggle\").click((function (e) {\n        e.preventDefault();\n        $('.side-catalog').toggleClass(\"fold\")\n    }))\n\n    /*\n     * Doc: https://github.com/davist11/jQuery-One-Page-Nav\n     * Fork by Hux to support padding\n     */\n    async(\"/js/jquery.nav.js\", function () {\n        $('.catalog-body').onePageNav({\n            currentClass: \"active\",\n            changeHash: !1,\n            easing: \"swing\",\n            filter: \"\",\n            scrollSpeed: 700,\n            scrollOffset: 0,\n            scrollThreshold: .2,\n            begin: null,\n            end: null,\n            scrollChange: null,\n            padding: 80\n        });\n    });\n</script>\n\n\n\n<!-- Multi-Lingual -->\n\n\n<!-- Simple Jekyll Search -->\n<script>\n    // https://stackoverflow.com/questions/1912501/unescape-html-entities-in-javascript\n    function htmlDecode(input) {\n        var e = document.createElement('textarea');\n        e.innerHTML = input;\n        // handle case of empty input\n        return e.childNodes.length === 0 ? \"\" : e.childNodes[0].nodeValue;\n    }\n\n    SimpleJekyllSearch({\n        searchInput: document.getElementById('search-input'),\n        resultsContainer: document.getElementById('search-results'),\n        json: '/search.json',\n        searchResultTemplate: '<div class=\"post-preview item\"><a href=\"{url}\"><h2 class=\"post-title\">{title}</h2><h3 class=\"post-subtitle\">{subtitle}</h3><hr></a></div>',\n        noResultsText: 'No results',\n        limit: 50,\n        fuzzy: false,\n        // a hack to get escaped subtitle unescaped. for some reason, \n        // post.subtitle w/o escape filter nuke entire search.\n        templateMiddleware: function (prop, value, template) {\n            if (prop === 'subtitle' || prop === 'title') {\n                if (value.indexOf(\"code\")) {\n                    return htmlDecode(value);\n                } else {\n                    return value;\n                }\n            }\n        }\n    });\n\n    $(document).ready(function () {\n        var $searchPage = $('.search-page');\n        var $searchOpen = $('.search-icon');\n        var $searchClose = $('.search-icon-close');\n        var $searchInput = $('#search-input');\n        var $body = $('body');\n\n        $searchOpen.on('click', function (e) {\n            e.preventDefault();\n            $searchPage.toggleClass('search-active');\n            var prevClasses = $body.attr('class') || '';\n            setTimeout(function () {\n                $body.addClass('no-scroll');\n            }, 400)\n\n            if ($searchPage.hasClass('search-active')) {\n                $searchClose.on('click', function (e) {\n                    e.preventDefault();\n                    $searchPage.removeClass('search-active');\n                    $body.attr('class', prevClasses);  // from closure \n                });\n                $searchInput.focus();\n            }\n        });\n    });\n</script>\n\n\n<!-- Image to hack wechat -->\n<img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\" />\n<!-- Migrate from head to bottom, no longer block render and still work -->\n\n</body>\n\n</html>\n","excerpt":"<h1 id=\"apple-企业账号注册流程\">Apple 企业账号注册流程</h1>\n","url":"/2023/08/11/Apple%E4%BC%81%E4%B8%9A%E8%B4%A6%E5%8F%B7%E6%B3%A8%E5%86%8C%E6%B5%81%E7%A8%8B/","next":{"id":"/2023/08/17/iOS组件化-业务组件准备篇","tags":[],"relative_path":"_posts/2023-08-17-iOS组件化-业务组件准备篇.md","collection":"posts","name":"2023-08-17-iOS组件化-业务组件准备篇.md","url":"/2023/08/17/iOS%E7%BB%84%E4%BB%B6%E5%8C%96-%E4%B8%9A%E5%8A%A1%E7%BB%84%E4%BB%B6%E5%87%86%E5%A4%87%E7%AF%87/","title":"iOS组件化之：业务组件准备篇","date":"2023-08-17 00:00:00 +0800","categories":[],"path":"_posts/2023-08-17-iOS组件化-业务组件准备篇.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/home-bg-geek.jpg","slug":"iOS组件化-业务组件准备篇","ext":".md"},"title":"Apple 企业账号注册流程","date":"2023-08-11 00:00:00 +0800","categories":[],"path":"_posts/2023-08-11-Apple企业账号注册流程.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/home-bg-geek.jpg","slug":"Apple企业账号注册流程","ext":".md"},"output":"<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"google-site-verification\" content=\"xBT4GhYoi5qRD5tr338pgPM5OWHHIDR6mNg1a3euekI\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, viewport-fit=cover\">\n    <meta name=\"description\" content=\"与你一起发现更大的世界。\">\n    <meta name=\"keywords\"  content=\"PaysonChen,iOS,流媒体\">\n    <meta name=\"theme-color\" content=\"#000000\">\n    \n    <!-- Open Graph -->\n    <meta property=\"og:title\" content=\"iOS组件化之：业务组件准备篇 - PaysonChen的博客 | PaysonChen Blog\">\n    \n    <meta property=\"og:type\" content=\"article\">\n    <meta property=\"og:description\" content=\"iOS组件化之：业务组件准备篇\n\">\n    \n    \n    <meta property=\"article:published_time\" content=\"2023-08-17T00:00:00Z\">\n    \n    \n    <meta property=\"article:author\" content=\"PaysonChen\">\n    \n    \n    \n    <meta property=\"og:image\" content=\"http://localhost:4000\">\n    <meta property=\"og:url\" content=\"http://localhost:4000/2023/08/17/iOS%E7%BB%84%E4%BB%B6%E5%8C%96-%E4%B8%9A%E5%8A%A1%E7%BB%84%E4%BB%B6%E5%87%86%E5%A4%87%E7%AF%87/\">\n    <meta property=\"og:site_name\" content=\"PaysonChen的博客 | PaysonChen Blog\">\n    \n    <title>iOS组件化之：业务组件准备篇 - PaysonChen的博客 | PaysonChen Blog</title>\n\n    <!-- Web App Manifest -->\n    <link rel=\"manifest\" href=\"/pwa/manifest.json\">\n\n    <!-- Favicon -->\n    <link rel=\"shortcut icon\" href=\"/img/favicon.ico\">\n    \n    <!-- Canonical URL -->\n    <link rel=\"canonical\" href=\"http://localhost:4000/2023/08/17/iOS%E7%BB%84%E4%BB%B6%E5%8C%96-%E4%B8%9A%E5%8A%A1%E7%BB%84%E4%BB%B6%E5%87%86%E5%A4%87%E7%AF%87/\">\n\n    <!-- Bootstrap Core CSS -->\n    <link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\">\n\n    <!-- Custom CSS -->\n    <link rel=\"stylesheet\" href=\"/css/hux-blog.min.css\">\n\n    <!-- Custom Fonts -->\n    <!-- <link href=\"http://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\"> -->\n    <!-- Hux change font-awesome CDN to qiniu -->\n    <link href=\"//cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\">\n\n\n    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->\n    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->\n    <!--[if lt IE 9]>\n        <script src=\"https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js\"></script>\n        <script src=\"https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js\"></script>\n    <![endif]-->\n\n    <!-- ga & ba script hoook -->\n    <script></script>\n</head>\n\n\n<!-- hack iOS CSS :active style -->\n<body ontouchstart=\"\">\n\n    <!-- Navigation -->\n\n    <nav class=\"navbar navbar-default navbar-custom navbar-fixed-top\">\n        \n        <div class=\"container-fluid\">\n            <!-- Brand and toggle get grouped for better mobile display -->\n            <div class=\"navbar-header page-scroll\">\n                <button type=\"button\" class=\"navbar-toggle\">\n                    <span class=\"sr-only\">Toggle navigation</span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                </button>\n                <a class=\"navbar-brand\" href=\"/\">PaysonChen Blog</a>\n            </div>\n\n            <!-- Collect the nav links, forms, and other content for toggling -->\n            <div id=\"huxblog_navbar\">\n                <div class=\"navbar-collapse\">\n                    <ul class=\"nav navbar-nav navbar-right\">\n                        <li>\n                            <a href=\"/\">Home</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        <li>\n                            <a href=\"/about/\">About</a>\n                        </li>\n                        \n                        \n                        \n                        <li>\n                            <a href=\"/archive/\">Archive</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        <li class=\"search-icon\">\n                            <a href=\"javascript:void(0)\">\n                                <i class=\"fa fa-search\"></i>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n            <!-- /.navbar-collapse -->\n        </div>\n        <!-- /.container -->\n    </nav>\n\n    <script>\n        // Drop Bootstarp low-performance Navbar\n        // Use customize navbar with high-quality material design animation\n        // in high-perf jank-free CSS3 implementation\n        var $body = document.body;\n        var $toggle = document.querySelector('.navbar-toggle');\n        var $navbar = document.querySelector('#huxblog_navbar');\n        var $collapse = document.querySelector('.navbar-collapse');\n\n        var __HuxNav__ = {\n            close: function () {\n                $navbar.className = \" \";\n                // wait until animation end.\n                setTimeout(function () {\n                    // prevent frequently toggle\n                    if ($navbar.className.indexOf('in') < 0) {\n                        $collapse.style.height = \"0px\"\n                    }\n                }, 400)\n            },\n            open: function () {\n                $collapse.style.height = \"auto\"\n                $navbar.className += \" in\";\n            }\n        }\n\n        // Bind Event\n        $toggle.addEventListener('click', function (e) {\n            if ($navbar.className.indexOf('in') > 0) {\n                __HuxNav__.close()\n            } else {\n                __HuxNav__.open()\n            }\n        })\n\n        /**\n         * Since Fastclick is used to delegate 'touchstart' globally\n         * to hack 300ms delay in iOS by performing a fake 'click',\n         * Using 'e.stopPropagation' to stop 'touchstart' event from \n         * $toggle/$collapse will break global delegation.\n         * \n         * Instead, we use a 'e.target' filter to prevent handler\n         * added to document close HuxNav.  \n         *\n         * Also, we use 'click' instead of 'touchstart' as compromise\n         */\n        document.addEventListener('click', function (e) {\n            if (e.target == $toggle) return;\n            if (e.target.className == 'icon-bar') return;\n            __HuxNav__.close();\n        })\n    </script>\n    <!-- Search -->\n<div class=\"search-page\">\n  <div class=\"search-icon-close-container\">\n    <span class=\"search-icon-close\">\n      <i class=\"fa fa-chevron-down\"></i>\n    </span>\n  </div>\n  <div class=\"search-main container\">\n    <div class=\"row\">\n      <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n        <form></form>\n        <input type=\"text\" id=\"search-input\" placeholder=\"$ grep...\">\n        </form>\n        <div id=\"search-results\" class=\"mini-post-list\"></div>\n      </div>\n    </div>\n  </div>\n</div>\n\n    <!-- Image to hack wechat -->\n<!-- <img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\"> -->\n<!-- <img src=\"/img/home-bg-geek.jpg\" width=\"0\" height=\"0\"> -->\n\n<!-- Post Header -->\n\n\n\n<style type=\"text/css\">\n    header.intro-header{\n        position: relative;\n        background-image: url('/img/home-bg-geek.jpg');\n        background: ;\n    }\n\n    \n</style>\n\n<header class=\"intro-header\" >\n\n    <div class=\"header-mask\"></div>\n    \n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <div class=\"post-heading\">\n                    <div class=\"tags\">\n                        \n                    </div>\n                    <h1>iOS组件化之：业务组件准备篇</h1>\n                    \n                    <h2 class=\"subheading\"></h2>\n                    <span class=\"meta\">Posted by PaysonChen on August 17, 2023</span>\n                </div>\n            </div>\n        </div>\n    </div>\n</header>\n\n\n\n\n\n\n<!-- Post Content -->\n<article>\n    <div class=\"container\">\n        <div class=\"row\">\n\n    <!-- Post Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                post-container\">\n\n                <!-- Multi-Lingual -->\n                \n\n\t\t\t\t<h1 id=\"ios组件化之业务组件准备篇\">iOS组件化之：业务组件准备篇</h1>\n\n<h2 id=\"1-背景\">1. 背景</h2>\n\n<p>基础组件拆分到一定程度时，主工程剩下的就多数与视图界面(vc、view等)相关的类文件。此时可以考虑对业务组件进行设计和规划，但是在此时，工程还存在如下问题：</p>\n\n<ul>\n  <li>​\t冗余文件：\n    <ul>\n      <li>未被引用到Project，但存在在工程目录中的冗余的类文件</li>\n    </ul>\n  </li>\n  <li>​\t非冗余但未被使用的文件\n    <ul>\n      <li>未在其他类中使用到的类文件</li>\n    </ul>\n  </li>\n</ul>\n\n<p>为了减轻业务组件的工作量和复杂度，在此之前最好能净化/清理一下工程</p>\n\n<p>具体采用人工 or 脚本 进行清理：</p>\n\n<p>根据我们进行估算，执行的时间复杂度为 n²，如果主工程（还未进行业务组件抽离）里还有1000个文件，则遍历一遍则需要进行100万次检索，m2 芯片执行一次需要2小时左右。人工检索时间更长，并且人工检索将呈现边际效用递增的问题。</p>\n\n<p>脚本解决上述问题，并能实现近乎为0的边际成本，可以沉淀具体算法，供其他项目使用</p>\n\n<h2 id=\"2-工程清理\">2. 工程清理</h2>\n\n<h3 id=\"21-冗余文件清理\">2.1 冗余文件清理</h3>\n\n<p>通过递归遍历工程目录，将遍历后的类名逐一与XXX.xcodeproj/project.pbxproj 文件内容进行匹配，匹配失败即为：</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>未被引用到Project，但存在在工程目录中的冗余的类文件\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>具体思路可以这样实现：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\"># 设置项目目录</span>\n<span class=\"nv\">project_directory</span><span class=\"o\">=</span><span class=\"s2\">\"工程项目目录\"</span>\n<span class=\"nv\">project_path</span><span class=\"o\">=</span><span class=\"s2\">\"xxx.xcodeproj/project.pbxproj的目录\"</span>\n\n<span class=\"c\"># 查找所有以ViewController.m结尾的文件并输出列表</span>\n<span class=\"c\"># 查找所有以ViewController.m结尾的文件并输出不包含后缀名的文件名</span>\n<span class=\"nv\">all_file_path</span><span class=\"o\">=</span><span class=\"si\">$(</span>find <span class=\"s2\">\"</span><span class=\"nv\">$project_directory</span><span class=\"s2\">\"</span> <span class=\"nt\">-type</span> f <span class=\"se\">\\(</span> <span class=\"nt\">-name</span> <span class=\"s2\">\"*.h\"</span> <span class=\"se\">\\)</span><span class=\"si\">)</span>\n\n<span class=\"k\">for </span>src_file <span class=\"k\">in</span> <span class=\"nv\">$all_file_path</span><span class=\"p\">;</span> <span class=\"k\">do</span>\n<span class=\"c\">#    echo $src_file</span>\n    <span class=\"nv\">filename</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">basename</span> <span class=\"s2\">\"</span><span class=\"nv\">$src_file</span><span class=\"s2\">\"</span> .h<span class=\"si\">)</span>\n    <span class=\"k\">if</span>  <span class=\"o\">!</span> <span class=\"nb\">grep</span> <span class=\"nt\">-q</span> <span class=\"s2\">\"</span><span class=\"se\">\\b</span><span class=\"nv\">$filename</span><span class=\"se\">\\b</span><span class=\"s2\">\"</span> <span class=\"s2\">\"</span><span class=\"nv\">$project_path</span><span class=\"s2\">\"</span><span class=\"p\">;</span>  <span class=\"k\">then\n        </span><span class=\"nb\">echo</span> <span class=\"s2\">\"project不包含：\"</span><span class=\"nv\">$filename</span>\n    <span class=\"k\">fi\ndone</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h3 id=\"22-未使用文件清理\">2.2 未使用文件清理</h3>\n\n<h4 id=\"221-fui工具\">2.2.1 <a href=\"https://github.com/dblock/fui\">fui工具</a></h4>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n</pre></td><td class=\"rouge-code\"><pre><span class=\"nb\">sudo </span>gem <span class=\"nb\">install </span>fui <span class=\"nt\">-n</span> /usr/local/bin\n\nfui find\t<span class=\"c\">#当前目录执行</span>\nfui <span class=\"nt\">--path</span><span class=\"o\">=</span>~/source/project/Name find\t<span class=\"c\">#指定目录执行</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>fui工具的源码，暂时还没去详细看，但是发现一个问题，他无法识别注释的取消引用：</p>\n\n<p>举个例子，A import B，但是import 当前行注释掉了:</p>\n\n<pre><code class=\"language-objective-c\">//\n//  \n//  A.m  \n//  Example\n//\n//  Created by PSC on 2023/8/15\n//  Copyright © 2023 PSC. All rights reserved.\n//\n\n#import \"A.h\"\n//#import \"B.h\"\n\n……\n</code></pre>\n\n<p>在fui的执行结果中，不会认为B没有被使用。</p>\n\n<h4 id=\"222-自建工具\">2.2.2 自建工具</h4>\n\n<p>为了解决上述fui工具的问题，并且做出一些优化，自建工具的设计思路为：</p>\n\n<ul>\n  <li>遍历工程目录的所有实现类：.m文件（不包含category）</li>\n  <li>将类名与工程内除自身以外所有文件进行进逐行匹配（包含category）</li>\n  <li>当匹配到不包含// 与 #import 开头的行，则算为有引用，否则为未引用</li>\n  <li>将未匹配到的文件路径进行输出</li>\n  <li>将上述匹配出来的文件先进行移除，再执行一遍（由于第一层被移除，可能会暴露出更多没被引用的类）</li>\n  <li>直到没有匹配到未被调用的类为止</li>\n</ul>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#!/bin/bash</span>\n\n<span class=\"c\"># [背景]</span>\n<span class=\"c\"># 基础组件拆分到一定程度时，主工程剩下的就多数与视图界面(vc、view等)相关的类文件。此时可以考虑对业务组件进行设计和规划，但是在此时，工程还存在如下问题：</span>\n<span class=\"c\">#    冗余文件：</span>\n<span class=\"c\">#​    非冗余但未被使用的文件</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># author: Chenyp34</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [目的]</span>\n<span class=\"c\"># 此脚本解决 \"非冗余但未被使用的文件\" 的清理</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [目录]</span>\n<span class=\"c\">#   - find_unused_class.sh</span>\n<span class=\"c\"># [说明]</span>\n<span class=\"c\"># 1 遍历工程目录的所有实现类：.m文件（不包含category）</span>\n<span class=\"c\"># 2 将类名与工程内除自身以外所有文件进行进逐行匹配（包含category）</span>\n<span class=\"c\"># 3 当匹配到不包含// 与 #import 开头的行，则算为有引用，否则为未引用</span>\n<span class=\"c\"># 4 将未匹配到的文件路径进行输出</span>\n<span class=\"c\"># 5 将上述匹配出来的文件先进行移除，再执行一遍（由于第一层被移除，可能会暴露出更多没被引用的类）</span>\n<span class=\"c\"># 6 直到没有匹配到未被调用的类为止</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [参数]</span>\n<span class=\"c\"># 1、参数1，指定xcode工程目录 （未指定则为当前目录）</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [调用说明]</span>\n<span class=\"c\"># 1、未指定目录，则取当前目录：sh find_unused_class.sh</span>\n<span class=\"c\"># 2、指定目录 ：sh find_unused_class.sh /Users/xxxxx/Project-IOS/Project/Project</span>\n\n\n<span class=\"c\">#!/bin/bash</span>\n\n<span class=\"c\">#是否重复执行到没有找到不可用文件</span>\n<span class=\"nb\">export </span><span class=\"nv\">cycle_deal</span><span class=\"o\">=</span>1\n<span class=\"nb\">export </span><span class=\"nv\">cycle_idx</span><span class=\"o\">=</span>1\n<span class=\"nv\">total_unused_file_name</span><span class=\"o\">=</span><span class=\"s1\">''</span>\n<span class=\"k\">function </span>main<span class=\"o\">()</span> <span class=\"o\">{</span>\n    \n    <span class=\"c\"># 设置项目目录</span>\n    <span class=\"nv\">project_directory</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$1</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then</span>\n        <span class=\"c\">#未传参为当前目录</span>\n        <span class=\"nv\">project_directory</span><span class=\"o\">=</span><span class=\"nb\">.</span>\n    <span class=\"k\">fi</span>\n\n    <span class=\"c\">#初始化参数：</span>\n    <span class=\"nv\">unused_files</span><span class=\"o\">=</span><span class=\"s1\">''</span>\n\n    <span class=\"c\"># 查找所有以ViewController.m结尾的文件并输出列表</span>\n    <span class=\"nv\">all_class_path</span><span class=\"o\">=</span><span class=\"si\">$(</span>find <span class=\"s2\">\"</span><span class=\"nv\">$project_directory</span><span class=\"s2\">\"</span> <span class=\"nt\">-type</span> f <span class=\"se\">\\(</span> <span class=\"nt\">-name</span> <span class=\"s2\">\"*.m\"</span> <span class=\"se\">\\)</span> | <span class=\"nb\">grep</span> <span class=\"nt\">-v</span> <span class=\"s1\">'+'</span><span class=\"si\">)</span>\n\n    <span class=\"nv\">all_file_path</span><span class=\"o\">=</span><span class=\"si\">$(</span>find <span class=\"s2\">\"</span><span class=\"nv\">$project_directory</span><span class=\"s2\">\"</span> <span class=\"nt\">-type</span> f <span class=\"se\">\\(</span> <span class=\"nt\">-name</span> <span class=\"s2\">\"*.m\"</span> <span class=\"nt\">-o</span> <span class=\"nt\">-name</span> <span class=\"s2\">\"*.h\"</span> <span class=\"se\">\\)</span> <span class=\"si\">)</span>\n\n    <span class=\"k\">for </span>file <span class=\"k\">in</span> <span class=\"nv\">$all_class_path</span><span class=\"p\">;</span> <span class=\"k\">do\n        </span><span class=\"nv\">filename</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">basename</span> <span class=\"s2\">\"</span><span class=\"nv\">$file</span><span class=\"s2\">\"</span> .m<span class=\"si\">)</span>\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"***********开始遍历文件名：\"</span><span class=\"nv\">$filename</span>\n        <span class=\"nv\">is_referenced</span><span class=\"o\">=</span><span class=\"nb\">false\n        </span><span class=\"k\">for </span>other_file <span class=\"k\">in</span> <span class=\"nv\">$all_file_path</span><span class=\"p\">;</span> <span class=\"k\">do\n            </span><span class=\"nv\">other_file_name</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">basename</span> <span class=\"s2\">\"</span><span class=\"nv\">$other_file</span><span class=\"s2\">\"</span><span class=\"si\">)</span>\n            <span class=\"c\">#获取除自身以外的类名：不包含拓展的名称，为了避免在自身的.h .m进行引用判断</span>\n            <span class=\"nv\">other_file_name_without_extension</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">echo</span> <span class=\"s2\">\"</span><span class=\"nv\">$other_file_name</span><span class=\"s2\">\"</span> | <span class=\"nb\">cut</span> <span class=\"nt\">-d</span><span class=\"nb\">.</span> <span class=\"nt\">-f1</span><span class=\"si\">)</span>\n            <span class=\"c\">#获取category的主类名称</span>\n            <span class=\"nv\">other_file_name_without_extension_before_plus</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">echo</span> <span class=\"s2\">\"</span><span class=\"nv\">$other_file_name_without_extension</span><span class=\"s2\">\"</span> | <span class=\"nb\">awk</span> <span class=\"nt\">-F</span><span class=\"s1\">'+'</span> <span class=\"s1\">'{print $1}'</span><span class=\"si\">)</span>\n            <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"s2\">\"</span><span class=\"nv\">$other_file_name_without_extension_before_plus</span><span class=\"s2\">\"</span> <span class=\"o\">!=</span> <span class=\"s2\">\"</span><span class=\"nv\">$filename</span><span class=\"s2\">\"</span> <span class=\"o\">]</span> <span class=\"p\">;</span> <span class=\"k\">then</span>\n            <span class=\"c\"># if [ \"$other_file\" != \"$file\" ] &amp;&amp; ([ \"${other_file##*.}\" = \"m\" ] ); then</span>\n                <span class=\"k\">if </span><span class=\"nb\">grep</span> <span class=\"nt\">-q</span> <span class=\"s2\">\"</span><span class=\"se\">\\b</span><span class=\"nv\">$filename</span><span class=\"se\">\\b</span><span class=\"s2\">\"</span> <span class=\"s2\">\"</span><span class=\"nv\">$other_file</span><span class=\"s2\">\"</span><span class=\"p\">;</span>  <span class=\"k\">then</span>\n                    <span class=\"c\"># 检查文件中是否有注释行</span>\n                    <span class=\"nv\">has_comment</span><span class=\"o\">=</span><span class=\"nb\">false\n                    </span><span class=\"k\">while </span><span class=\"nv\">IFS</span><span class=\"o\">=</span> <span class=\"nb\">read</span> <span class=\"nt\">-r</span> line<span class=\"p\">;</span> <span class=\"k\">do\n                        </span><span class=\"nb\">echo</span> <span class=\"s2\">\"逐行匹配：\"</span><span class=\"nv\">$line</span>\n                        <span class=\"k\">if</span> <span class=\"o\">!</span> <span class=\"nb\">grep</span> <span class=\"nt\">-qE</span> <span class=\"s2\">\"^[[:space:]]*//\"</span> <span class=\"o\">&lt;&lt;&lt;</span> <span class=\"s2\">\"</span><span class=\"nv\">$line</span><span class=\"s2\">\"</span><span class=\"p\">;</span> <span class=\"k\">then\n                            if</span> <span class=\"o\">[[</span> <span class=\"o\">!</span> <span class=\"nv\">$line</span> <span class=\"o\">=</span>~ ^[[:space:]]<span class=\"k\">*</span><span class=\"c\">#import ]]; then</span>\n                                <span class=\"nv\">has_comment</span><span class=\"o\">=</span><span class=\"nb\">true\n                                echo</span> <span class=\"s2\">\"在文件:\"</span><span class=\"nv\">$other_file</span><span class=\"s2\">\"匹配\"</span><span class=\"nv\">$filename</span><span class=\"s2\">\"存在 并且不是 注释代码 或者 import 的 break（\"</span><span class=\"nv\">$line</span>\n                                <span class=\"nb\">break\n                            </span><span class=\"k\">fi\n\n                        fi\n                    done</span> <span class=\"o\">&lt;&lt;&lt;</span> <span class=\"s2\">\"</span><span class=\"si\">$(</span><span class=\"nb\">grep</span> <span class=\"s2\">\"</span><span class=\"se\">\\b</span><span class=\"nv\">$filename</span><span class=\"se\">\\b</span><span class=\"s2\">\"</span> <span class=\"s2\">\"</span><span class=\"nv\">$other_file</span><span class=\"s2\">\"</span><span class=\"si\">)</span><span class=\"s2\">\"</span>\n                    \n                    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"s2\">\"</span><span class=\"nv\">$has_comment</span><span class=\"s2\">\"</span> <span class=\"o\">=</span> <span class=\"nb\">true</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n                        </span><span class=\"nv\">is_referenced</span><span class=\"o\">=</span><span class=\"nb\">true\n                        break\n                    </span><span class=\"k\">fi\n                fi\n            fi\n        done\n\n        if</span> <span class=\"o\">[</span> <span class=\"s2\">\"</span><span class=\"nv\">$is_referenced</span><span class=\"s2\">\"</span> <span class=\"o\">=</span> <span class=\"nb\">false</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n            </span><span class=\"nb\">echo</span> <span class=\"s2\">\"没有被引用到的文件:\"</span><span class=\"nv\">$file</span>\n            <span class=\"nv\">unused_files</span><span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"nv\">$unused_files$file</span><span class=\"se\">\\n</span><span class=\"s2\">\"</span>\n        <span class=\"k\">fi\n        </span><span class=\"nb\">echo</span> <span class=\"s2\">\"***********\"</span>\n    <span class=\"k\">done</span>\n\n    <span class=\"c\"># 输出未被引用的文件列表</span>\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-n</span> <span class=\"s2\">\"</span><span class=\"nv\">$unused_files</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">echo</span> <span class=\"nt\">-e</span> <span class=\"s2\">\"Unused class files:</span><span class=\"se\">\\n</span><span class=\"nv\">$unused_files</span><span class=\"s2\">\"</span>\n        <span class=\"nv\">total_unused_file_name</span><span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"nv\">$total_unused_file_name$unused_files</span><span class=\"se\">\\n</span><span class=\"s2\">\"</span>\n\n        <span class=\"c\">#将检索出来的文件 mv 出来</span>\n        <span class=\"nb\">mkdir</span> <span class=\"nt\">-p</span> ./unused_files/<span class=\"nv\">$cycle_idx</span>/\n        <span class=\"nv\">array</span><span class=\"o\">=(</span><span class=\"sb\">`</span><span class=\"nb\">echo</span> <span class=\"nv\">$unused_files</span> | <span class=\"nb\">tr</span> <span class=\"s1\">'\\n'</span> <span class=\"s1\">' '</span><span class=\"sb\">`</span><span class=\"o\">)</span>\n        <span class=\"k\">for </span>element <span class=\"k\">in</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">array</span><span class=\"p\">[@]</span><span class=\"k\">}</span><span class=\"s2\">\"</span><span class=\"p\">;</span> <span class=\"k\">do\n            </span><span class=\"nv\">element</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">echo</span> <span class=\"s2\">\"</span><span class=\"nv\">$element</span><span class=\"s2\">\"</span> | <span class=\"nb\">tr</span> <span class=\"nt\">-d</span> <span class=\"s1\">'\\n'</span><span class=\"si\">)</span>\n            <span class=\"nb\">echo</span> <span class=\"s2\">\"Unused class = \"</span><span class=\"nv\">$element</span>\n            <span class=\"nv\">element_filename</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">basename</span> <span class=\"s2\">\"</span><span class=\"nv\">$element</span><span class=\"s2\">\"</span> .m<span class=\"si\">)</span>\n            <span class=\"nv\">element_dirname</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">dirname</span> <span class=\"s2\">\"</span><span class=\"nv\">$element</span><span class=\"s2\">\"</span><span class=\"si\">)</span>\n            <span class=\"nb\">mv</span> <span class=\"nt\">-f</span> <span class=\"k\">${</span><span class=\"nv\">element_dirname</span><span class=\"k\">}</span>/<span class=\"k\">${</span><span class=\"nv\">element_filename</span><span class=\"k\">}</span>.h ./unused_files/<span class=\"nv\">$cycle_idx</span>/<span class=\"nv\">$element_filename</span>.h\n            <span class=\"nb\">mv</span> <span class=\"nt\">-f</span> <span class=\"k\">${</span><span class=\"nv\">element_dirname</span><span class=\"k\">}</span>/<span class=\"k\">${</span><span class=\"nv\">element_filename</span><span class=\"k\">}</span>.m ./unused_files/<span class=\"nv\">$cycle_idx</span>/<span class=\"nv\">$element_filename</span>.m\n        <span class=\"k\">done</span>\n        \n        <span class=\"c\">#cycle_deal参数为空则不循环执行</span>\n        <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-n</span> <span class=\"s2\">\"</span><span class=\"nv\">$cycle_deal</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n            </span><span class=\"nb\">exit\n        </span><span class=\"k\">else</span>\n            <span class=\"c\">#cycle_deal 不为空 循环执行，直到不再有新文件检出</span>\n            <span class=\"nb\">echo</span> <span class=\"nt\">-e</span> <span class=\"s2\">\"循环执行\"</span>\n            <span class=\"nv\">cycle_idx</span><span class=\"o\">=</span><span class=\"k\">$((</span>cycle_idx+1<span class=\"k\">))</span>\n            main <span class=\"nv\">$1</span>\n        <span class=\"k\">done\n\n    else\n        </span><span class=\"nb\">echo</span> <span class=\"s2\">\"No unused ViewController files found.\"</span><span class=\"nv\">$all_file_path</span>\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"**************************\"</span>\n        <span class=\"nb\">echo</span> <span class=\"nt\">-e</span> <span class=\"s2\">\"total_unused_file_name class files:</span><span class=\"se\">\\n</span><span class=\"nv\">$total_unused_file_name</span><span class=\"s2\">\"</span>\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"**************************\"</span>\n\n        <span class=\"nb\">exit </span>0\n    <span class=\"k\">fi</span>\n<span class=\"o\">}</span>\n\n\nmain <span class=\"nv\">$1</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h4 id=\"223-尚有不足之处\">2.2.3 尚有不足之处</h4>\n\n<p>当前工具只是匹配一层未引用，也可能如下情况未适配：</p>\n\n<ul>\n  <li>存在2个以上的类存在互相引用，但却未被其他类用到，但是以上脚本暂时无法识别</li>\n  <li>存在某些类存在在其他API类、通用类、工具类等方法中，但是此方法未被调用，则此方法和该类也可以被移除，但是以上脚本暂时无法识别</li>\n</ul>\n\n\n\n                <hr style=\"visibility: hidden;\">\n                <ul class=\"pager\">\n                    \n                    <li class=\"previous\">\n                        <a href=\"/2023/08/11/Apple%E4%BC%81%E4%B8%9A%E8%B4%A6%E5%8F%B7%E6%B3%A8%E5%86%8C%E6%B5%81%E7%A8%8B/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Apple 企业账号注册流程\">\n                        Previous<br>\n                        <span>Apple 企业账号注册流程</span>\n                        </a>\n                    </li>\n                    \n                    \n                    <li class=\"next\">\n                        <a href=\"/2023/09/12/iOS-OC-Swift%E6%B7%B7%E7%BC%96/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Pod仓库内OC与Swift调用\">\n                        Next<br>\n                        <span>Pod仓库内OC与Swift调用</span>\n                        </a>\n                    </li>\n                    \n                </ul>\n                <hr style=\"visibility: hidden;\">\n\n                \n                <!-- disqus 评论框 start -->\n                <div class=\"comment\">\n                    <div id=\"disqus_thread\" class=\"disqus-thread\"></div>\n                </div>\n                <!-- disqus 评论框 end -->\n                \n\n                \n            </div>  \n\n    <!-- Side Catalog Container -->\n        \n            <div class=\"\n                col-lg-2 col-lg-offset-0\n                visible-lg-block\n                sidebar-container\n                catalog-container\">\n                <div class=\"side-catalog\">\n                    <hr class=\"hidden-sm hidden-xs\">\n                    <h5>\n                        <a class=\"catalog-toggle\" href=\"#\">CATALOG</a>\n                    </h5>\n                    <ul class=\"catalog-body\"></ul>\n                </div>\n            </div>\n        \n\n    <!-- Sidebar Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                sidebar-container\">\n\n                <!-- Featured Tags -->\n                \n\n\n<section>\n    \n        <hr class=\"hidden-sm hidden-xs\">\n    \n    <h5><a href=\"/archive/\">FEATURED TAGS</a></h5>\n    <div class=\"tags\">\n        \n        \n        \n        \n        \n    </div>\n</section>\n\n\n                <!-- Friends Blog -->\n                \n            </div>\n        </div>\n    </div>\n</article>\n\n<!-- add support for mathjax by voleking-->\n\n\n\n\n\n\n<!-- disqus 公共JS代码 start (一个网页只需插入一次) -->\n<script type=\"text/javascript\">\n    /* * * CONFIGURATION VARIABLES * * */\n    var disqus_shortname = \"Cyp\";\n    var disqus_identifier = \"/2023/08/17/iOS组件化-业务组件准备篇\";\n    var disqus_url = \"http://localhost:4000/2023/08/17/iOS%E7%BB%84%E4%BB%B6%E5%8C%96-%E4%B8%9A%E5%8A%A1%E7%BB%84%E4%BB%B6%E5%87%86%E5%A4%87%E7%AF%87/\";\n\n    (function() {\n        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;\n        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';\n        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);\n    })();\n</script>\n<!-- disqus 公共JS代码 end -->\n\n\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n      var d = document, t = 'script',\n          o = d.createElement(t),\n          s = d.getElementsByTagName(t)[0];\n      o.src = u;\n      if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n      s.parentNode.insertBefore(o, s);\n    }\n</script>\n<!-- anchor-js, Doc:http://bryanbraun.github.io/anchorjs/ -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/anchor-js/1.1.1/anchor.min.js\",function(){\n        anchors.options = {\n          visible: 'hover',\n          placement: 'right',\n          // icon: '#'\n        };\n        anchors.add().remove('.intro-header h1').remove('.subheading').remove('.sidebar-container h5');\n    })\n</script>\n<style>\n    /* place left on bigger screen */\n    @media all and (min-width: 800px) {\n        .anchorjs-link{\n            position: absolute;\n            left: -0.75em;\n            font-size: 1.1em;\n            margin-top : -0.1em;\n        }\n    }\n</style>\n\n\n\n    <!-- Footer -->\n<footer>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <!-- SNS Link -->\n                \n\n\n<ul class=\"list-inline text-center\">\n\n\n  \n  \n  \n  \n  \n  \n  \n</ul>\n\n                <p class=\"copyright text-muted\">\n                    Copyright &copy; PaysonChen Blog 2024\n                    <br>\n                    <!-- Powered by <a href=\"http://huangxuan.me\">Hux Blog</a> | -->\n                 <!--    <iframe style=\"margin-left: 2px; margin-bottom:-5px;\" frameborder=\"0\" scrolling=\"0\" width=\"100px\"\n                        height=\"20px\"\n                        src=\"https://ghbtns.com/github-btn.html?user=huxpro&repo=huxpro.github.io&type=star&count=true\">\n                    </iframe> -->\n                </p>\n            </div>\n        </div>\n    </div>\n</footer>\n\n<!-- jQuery -->\n<script src=\"/js/jquery.min.js \"></script>\n\n<!-- Bootstrap Core JavaScript -->\n<!-- Currently, only navbar scroll-down effect at desktop still depends on this -->\n<script src=\"/js/bootstrap.min.js \"></script>\n\n<!-- Custom Theme JavaScript -->\n<script src=\"/js/hux-blog.min.js \"></script>\n\n<!-- Simple Jekyll Search -->\n<script src=\"/js/simple-jekyll-search.min.js\"></script>\n\n<!-- Service Worker -->\n\n<script src=\"/js/snackbar.js \"></script>\n<script src=\"/js/sw-registration.js \"></script>\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n        var d = document, t = 'script',\n            o = d.createElement(t),\n            s = d.getElementsByTagName(t)[0];\n        o.src = u;\n        if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n        s.parentNode.insertBefore(o, s);\n    }\n</script>\n\n<!--\n     Because of the native support for backtick-style fenced code blocks\n     right within the Markdown is landed in Github Pages,\n     From V1.6, There is no need for Highlight.js,\n     so Huxblog drops it officially.\n\n     - https://github.com/blog/2100-github-pages-now-faster-and-simpler-with-jekyll-3-0\n     - https://help.github.com/articles/creating-and-highlighting-code-blocks/\n     - https://github.com/jneen/rouge/wiki/list-of-supported-languages-and-lexers\n-->\n<!--\n    <script>\n        async(\"http://cdn.bootcss.com/highlight.js/8.6/highlight.min.js\", function(){\n            hljs.initHighlightingOnLoad();\n        })\n    </script>\n    <link href=\"http://cdn.bootcss.com/highlight.js/8.6/styles/github.min.css\" rel=\"stylesheet\">\n-->\n\n\n\n\n\n\n\n<!--fastClick.js -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/fastclick/1.0.6/fastclick.min.js\", function () {\n        var $nav = document.querySelector(\"nav\");\n        if ($nav) FastClick.attach($nav);\n    })\n</script>\n\n\n<!-- Google Analytics -->\n\n\n\n<!-- Baidu Tongji -->\n\n\n\n<!-- Side Catalog -->\n\n<script type=\"text/javascript\">\n    function generateCatalog(selector) {\n\n        // interop with multilangual \n        if ('' == 'true') {\n            _containerSelector = 'div.post-container.active'\n        } else {\n            _containerSelector = 'div.post-container'\n        }\n\n        // init\n        var P = $(_containerSelector), a, n, t, l, i, c;\n        a = P.find('h1,h2,h3,h4,h5,h6');\n\n        // clean\n        $(selector).html('')\n\n        // appending\n        a.each(function () {\n            n = $(this).prop('tagName').toLowerCase();\n            i = \"#\" + $(this).prop('id');\n            t = $(this).text();\n            c = $('<a href=\"' + i + '\" rel=\"nofollow\">' + t + '</a>');\n            l = $('<li class=\"' + n + '_nav\"></li>').append(c);\n            $(selector).append(l);\n        });\n        return true;\n    }\n\n    generateCatalog(\".catalog-body\");\n\n    // toggle side catalog\n    $(\".catalog-toggle\").click((function (e) {\n        e.preventDefault();\n        $('.side-catalog').toggleClass(\"fold\")\n    }))\n\n    /*\n     * Doc: https://github.com/davist11/jQuery-One-Page-Nav\n     * Fork by Hux to support padding\n     */\n    async(\"/js/jquery.nav.js\", function () {\n        $('.catalog-body').onePageNav({\n            currentClass: \"active\",\n            changeHash: !1,\n            easing: \"swing\",\n            filter: \"\",\n            scrollSpeed: 700,\n            scrollOffset: 0,\n            scrollThreshold: .2,\n            begin: null,\n            end: null,\n            scrollChange: null,\n            padding: 80\n        });\n    });\n</script>\n\n\n\n<!-- Multi-Lingual -->\n\n\n<!-- Simple Jekyll Search -->\n<script>\n    // https://stackoverflow.com/questions/1912501/unescape-html-entities-in-javascript\n    function htmlDecode(input) {\n        var e = document.createElement('textarea');\n        e.innerHTML = input;\n        // handle case of empty input\n        return e.childNodes.length === 0 ? \"\" : e.childNodes[0].nodeValue;\n    }\n\n    SimpleJekyllSearch({\n        searchInput: document.getElementById('search-input'),\n        resultsContainer: document.getElementById('search-results'),\n        json: '/search.json',\n        searchResultTemplate: '<div class=\"post-preview item\"><a href=\"{url}\"><h2 class=\"post-title\">{title}</h2><h3 class=\"post-subtitle\">{subtitle}</h3><hr></a></div>',\n        noResultsText: 'No results',\n        limit: 50,\n        fuzzy: false,\n        // a hack to get escaped subtitle unescaped. for some reason, \n        // post.subtitle w/o escape filter nuke entire search.\n        templateMiddleware: function (prop, value, template) {\n            if (prop === 'subtitle' || prop === 'title') {\n                if (value.indexOf(\"code\")) {\n                    return htmlDecode(value);\n                } else {\n                    return value;\n                }\n            }\n        }\n    });\n\n    $(document).ready(function () {\n        var $searchPage = $('.search-page');\n        var $searchOpen = $('.search-icon');\n        var $searchClose = $('.search-icon-close');\n        var $searchInput = $('#search-input');\n        var $body = $('body');\n\n        $searchOpen.on('click', function (e) {\n            e.preventDefault();\n            $searchPage.toggleClass('search-active');\n            var prevClasses = $body.attr('class') || '';\n            setTimeout(function () {\n                $body.addClass('no-scroll');\n            }, 400)\n\n            if ($searchPage.hasClass('search-active')) {\n                $searchClose.on('click', function (e) {\n                    e.preventDefault();\n                    $searchPage.removeClass('search-active');\n                    $body.attr('class', prevClasses);  // from closure \n                });\n                $searchInput.focus();\n            }\n        });\n    });\n</script>\n\n\n<!-- Image to hack wechat -->\n<img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\" />\n<!-- Migrate from head to bottom, no longer block render and still work -->\n\n</body>\n\n</html>\n","excerpt":"<h1 id=\"ios组件化之业务组件准备篇\">iOS组件化之：业务组件准备篇</h1>\n","url":"/2023/08/17/iOS%E7%BB%84%E4%BB%B6%E5%8C%96-%E4%B8%9A%E5%8A%A1%E7%BB%84%E4%BB%B6%E5%87%86%E5%A4%87%E7%AF%87/","next":{"id":"/2023/09/12/iOS-OC-Swift混编","tags":[],"relative_path":"_posts/2023-09-12-iOS-OC-Swift混编.md","collection":"posts","content":"<h1 id=\"pod仓库内oc与swift调用\">Pod仓库内OC与Swift调用</h1>\n\n<h2 id=\"1pod内oc调swift\">1、Pod内OC调Swift</h2>\n\n<p>Pod内Swift类的声明需加上</p>\n\n<div class=\"language-swift highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre><span class=\"kd\">@objcMembers</span> <span class=\"kd\">open</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>例如：</p>\n\n<div class=\"language-swift highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n</pre></td><td class=\"rouge-code\"><pre><span class=\"kd\">import</span> <span class=\"kt\">Foundation</span>\n\n<span class=\"kd\">@objcMembers</span> <span class=\"kd\">open</span> <span class=\"kd\">class</span> <span class=\"kt\">SwiftBridge</span> <span class=\"p\">:</span> <span class=\"kt\">UIViewController</span> <span class=\"p\">{</span>\n    <span class=\"kd\">open</span> <span class=\"k\">override</span> <span class=\"kd\">func</span> <span class=\"nf\">viewDidLoad</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n        <span class=\"k\">self</span><span class=\"o\">.</span><span class=\"n\">view</span><span class=\"o\">.</span><span class=\"n\">backgroundColor</span> <span class=\"o\">=</span> <span class=\"kt\">UIColor</span><span class=\"o\">.</span><span class=\"n\">red</span>        \n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>在需要使用的类上 import</p>\n\n<pre><code class=\"language-objective-c\">  #import \"YourPodName/YourPodName-Swift.h\"\n</code></pre>\n\n<p>如果需要在多处调用也可以在podspec中添加</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n</pre></td><td class=\"rouge-code\"><pre>  <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">prefix_header_contents</span> <span class=\"o\">=</span> <span class=\"o\">&lt;&lt;-</span><span class=\"no\">EOS</span><span class=\"sh\">\n  #if __has_include(&lt;xxxModule/xxxModule-Swift.h&gt;)\n  #import &lt;xxxModule/xxxModule-Swift.h&gt;\n  #else\n  #import \"xxxModule/xxxModule-Swift.h\"\n  #endif\n</span><span class=\"no\">  EOS</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>XXX-Swift.h 机制可以参考Build Setting里的key value</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>Objective-C Generated Interface Header Name=$(SWIFT_MODULE_NAME)-Swift.h\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p><img src=\"/img/iosswiift/image1.png\" alt=\"1\" /></p>\n\n<h2 id=\"2pod内swift调oc\">2、Pod内Swift调OC</h2>\n\n<p>Pod指定了source_files，其中.h文件会被加载到xxxModule-umbrella 中，在Pod内部可以直接访问</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre><span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">source_files</span> <span class=\"o\">=</span> <span class=\"s1\">'xxxModule/Classes/**/*'</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>xxxModule-umbrella.h</p>\n\n<div class=\"language-objc highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n</pre></td><td class=\"rouge-code\"><pre><span class=\"cp\">#ifdef __OBJC__\n#import &lt;UIKit/UIKit.h&gt;\n#else\n#ifndef FOUNDATION_EXPORT\n#if defined(__cplusplus)\n#define FOUNDATION_EXPORT extern \"C\"\n#else\n#define FOUNDATION_EXPORT extern\n#endif\n#endif\n#endif\n</span>\n<span class=\"cp\">#import \"OCForSwiftUse.h\"\n#import \"xxxModule.h\"\n</span>\n<span class=\"n\">FOUNDATION_EXPORT</span> <span class=\"kt\">double</span> <span class=\"n\">xxxModuleVersionNumber</span><span class=\"p\">;</span>\n<span class=\"n\">FOUNDATION_EXPORT</span> <span class=\"k\">const</span> <span class=\"kt\">unsigned</span> <span class=\"kt\">char</span> <span class=\"n\">xxxModuleVersionString</span><span class=\"p\">[];</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>swift文件:</p>\n\n<div class=\"language-swift highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n</pre></td><td class=\"rouge-code\"><pre><span class=\"kd\">import</span> <span class=\"kt\">Foundation</span>\n\n<span class=\"kd\">@objcMembers</span> <span class=\"kd\">open</span> <span class=\"kd\">class</span> <span class=\"kt\">SwiftBridge</span> <span class=\"p\">:</span> <span class=\"kt\">UIViewController</span> <span class=\"p\">{</span>\n    <span class=\"kd\">open</span> <span class=\"k\">override</span> <span class=\"kd\">func</span> <span class=\"nf\">viewDidLoad</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n        <span class=\"k\">self</span><span class=\"o\">.</span><span class=\"n\">view</span><span class=\"o\">.</span><span class=\"n\">backgroundColor</span> <span class=\"o\">=</span> <span class=\"kt\">UIColor</span><span class=\"o\">.</span><span class=\"n\">red</span>\n        <span class=\"k\">let</span> <span class=\"nv\">ocs</span> <span class=\"o\">=</span> <span class=\"kt\">OCForSwiftUse</span><span class=\"p\">()</span>\n        <span class=\"c1\">// other codes</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n","name":"2023-09-12-iOS-OC-Swift混编.md","previous":{"id":"/2023/08/17/iOS组件化-业务组件准备篇","tags":[],"relative_path":"_posts/2023-08-17-iOS组件化-业务组件准备篇.md","collection":"posts","name":"2023-08-17-iOS组件化-业务组件准备篇.md","url":"/2023/08/17/iOS%E7%BB%84%E4%BB%B6%E5%8C%96-%E4%B8%9A%E5%8A%A1%E7%BB%84%E4%BB%B6%E5%87%86%E5%A4%87%E7%AF%87/","title":"iOS组件化之：业务组件准备篇","date":"2023-08-17 00:00:00 +0800","categories":[],"path":"_posts/2023-08-17-iOS组件化-业务组件准备篇.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/home-bg-geek.jpg","slug":"iOS组件化-业务组件准备篇","ext":".md"},"output":"<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"google-site-verification\" content=\"xBT4GhYoi5qRD5tr338pgPM5OWHHIDR6mNg1a3euekI\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, viewport-fit=cover\">\n    <meta name=\"description\" content=\"与你一起发现更大的世界。\">\n    <meta name=\"keywords\"  content=\"PaysonChen,iOS,流媒体\">\n    <meta name=\"theme-color\" content=\"#000000\">\n    \n    <!-- Open Graph -->\n    <meta property=\"og:title\" content=\"Pod仓库内OC与Swift调用 - PaysonChen的博客 | PaysonChen Blog\">\n    \n    <meta property=\"og:type\" content=\"article\">\n    <meta property=\"og:description\" content=\"Pod仓库内OC与Swift调用\n\">\n    \n    \n    <meta property=\"article:published_time\" content=\"2023-09-12T00:00:00Z\">\n    \n    \n    <meta property=\"article:author\" content=\"PaysonChen\">\n    \n    \n    \n    <meta property=\"og:image\" content=\"http://localhost:4000\">\n    <meta property=\"og:url\" content=\"http://localhost:4000/2023/09/12/iOS-OC-Swift%E6%B7%B7%E7%BC%96/\">\n    <meta property=\"og:site_name\" content=\"PaysonChen的博客 | PaysonChen Blog\">\n    \n    <title>Pod仓库内OC与Swift调用 - PaysonChen的博客 | PaysonChen Blog</title>\n\n    <!-- Web App Manifest -->\n    <link rel=\"manifest\" href=\"/pwa/manifest.json\">\n\n    <!-- Favicon -->\n    <link rel=\"shortcut icon\" href=\"/img/favicon.ico\">\n    \n    <!-- Canonical URL -->\n    <link rel=\"canonical\" href=\"http://localhost:4000/2023/09/12/iOS-OC-Swift%E6%B7%B7%E7%BC%96/\">\n\n    <!-- Bootstrap Core CSS -->\n    <link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\">\n\n    <!-- Custom CSS -->\n    <link rel=\"stylesheet\" href=\"/css/hux-blog.min.css\">\n\n    <!-- Custom Fonts -->\n    <!-- <link href=\"http://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\"> -->\n    <!-- Hux change font-awesome CDN to qiniu -->\n    <link href=\"//cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\">\n\n\n    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->\n    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->\n    <!--[if lt IE 9]>\n        <script src=\"https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js\"></script>\n        <script src=\"https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js\"></script>\n    <![endif]-->\n\n    <!-- ga & ba script hoook -->\n    <script></script>\n</head>\n\n\n<!-- hack iOS CSS :active style -->\n<body ontouchstart=\"\">\n\n    <!-- Navigation -->\n\n    <nav class=\"navbar navbar-default navbar-custom navbar-fixed-top\">\n        \n        <div class=\"container-fluid\">\n            <!-- Brand and toggle get grouped for better mobile display -->\n            <div class=\"navbar-header page-scroll\">\n                <button type=\"button\" class=\"navbar-toggle\">\n                    <span class=\"sr-only\">Toggle navigation</span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                </button>\n                <a class=\"navbar-brand\" href=\"/\">PaysonChen Blog</a>\n            </div>\n\n            <!-- Collect the nav links, forms, and other content for toggling -->\n            <div id=\"huxblog_navbar\">\n                <div class=\"navbar-collapse\">\n                    <ul class=\"nav navbar-nav navbar-right\">\n                        <li>\n                            <a href=\"/\">Home</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        <li>\n                            <a href=\"/about/\">About</a>\n                        </li>\n                        \n                        \n                        \n                        <li>\n                            <a href=\"/archive/\">Archive</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        <li class=\"search-icon\">\n                            <a href=\"javascript:void(0)\">\n                                <i class=\"fa fa-search\"></i>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n            <!-- /.navbar-collapse -->\n        </div>\n        <!-- /.container -->\n    </nav>\n\n    <script>\n        // Drop Bootstarp low-performance Navbar\n        // Use customize navbar with high-quality material design animation\n        // in high-perf jank-free CSS3 implementation\n        var $body = document.body;\n        var $toggle = document.querySelector('.navbar-toggle');\n        var $navbar = document.querySelector('#huxblog_navbar');\n        var $collapse = document.querySelector('.navbar-collapse');\n\n        var __HuxNav__ = {\n            close: function () {\n                $navbar.className = \" \";\n                // wait until animation end.\n                setTimeout(function () {\n                    // prevent frequently toggle\n                    if ($navbar.className.indexOf('in') < 0) {\n                        $collapse.style.height = \"0px\"\n                    }\n                }, 400)\n            },\n            open: function () {\n                $collapse.style.height = \"auto\"\n                $navbar.className += \" in\";\n            }\n        }\n\n        // Bind Event\n        $toggle.addEventListener('click', function (e) {\n            if ($navbar.className.indexOf('in') > 0) {\n                __HuxNav__.close()\n            } else {\n                __HuxNav__.open()\n            }\n        })\n\n        /**\n         * Since Fastclick is used to delegate 'touchstart' globally\n         * to hack 300ms delay in iOS by performing a fake 'click',\n         * Using 'e.stopPropagation' to stop 'touchstart' event from \n         * $toggle/$collapse will break global delegation.\n         * \n         * Instead, we use a 'e.target' filter to prevent handler\n         * added to document close HuxNav.  \n         *\n         * Also, we use 'click' instead of 'touchstart' as compromise\n         */\n        document.addEventListener('click', function (e) {\n            if (e.target == $toggle) return;\n            if (e.target.className == 'icon-bar') return;\n            __HuxNav__.close();\n        })\n    </script>\n    <!-- Search -->\n<div class=\"search-page\">\n  <div class=\"search-icon-close-container\">\n    <span class=\"search-icon-close\">\n      <i class=\"fa fa-chevron-down\"></i>\n    </span>\n  </div>\n  <div class=\"search-main container\">\n    <div class=\"row\">\n      <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n        <form></form>\n        <input type=\"text\" id=\"search-input\" placeholder=\"$ grep...\">\n        </form>\n        <div id=\"search-results\" class=\"mini-post-list\"></div>\n      </div>\n    </div>\n  </div>\n</div>\n\n    <!-- Image to hack wechat -->\n<!-- <img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\"> -->\n<!-- <img src=\"/img/home-bg-geek.jpg\" width=\"0\" height=\"0\"> -->\n\n<!-- Post Header -->\n\n\n\n<style type=\"text/css\">\n    header.intro-header{\n        position: relative;\n        background-image: url('/img/home-bg-geek.jpg');\n        background: ;\n    }\n\n    \n</style>\n\n<header class=\"intro-header\" >\n\n    <div class=\"header-mask\"></div>\n    \n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <div class=\"post-heading\">\n                    <div class=\"tags\">\n                        \n                    </div>\n                    <h1>Pod仓库内OC与Swift调用</h1>\n                    \n                    <h2 class=\"subheading\"></h2>\n                    <span class=\"meta\">Posted by PaysonChen on September 12, 2023</span>\n                </div>\n            </div>\n        </div>\n    </div>\n</header>\n\n\n\n\n\n\n<!-- Post Content -->\n<article>\n    <div class=\"container\">\n        <div class=\"row\">\n\n    <!-- Post Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                post-container\">\n\n                <!-- Multi-Lingual -->\n                \n\n\t\t\t\t<h1 id=\"pod仓库内oc与swift调用\">Pod仓库内OC与Swift调用</h1>\n\n<h2 id=\"1pod内oc调swift\">1、Pod内OC调Swift</h2>\n\n<p>Pod内Swift类的声明需加上</p>\n\n<div class=\"language-swift highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre><span class=\"kd\">@objcMembers</span> <span class=\"kd\">open</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>例如：</p>\n\n<div class=\"language-swift highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n</pre></td><td class=\"rouge-code\"><pre><span class=\"kd\">import</span> <span class=\"kt\">Foundation</span>\n\n<span class=\"kd\">@objcMembers</span> <span class=\"kd\">open</span> <span class=\"kd\">class</span> <span class=\"kt\">SwiftBridge</span> <span class=\"p\">:</span> <span class=\"kt\">UIViewController</span> <span class=\"p\">{</span>\n    <span class=\"kd\">open</span> <span class=\"k\">override</span> <span class=\"kd\">func</span> <span class=\"nf\">viewDidLoad</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n        <span class=\"k\">self</span><span class=\"o\">.</span><span class=\"n\">view</span><span class=\"o\">.</span><span class=\"n\">backgroundColor</span> <span class=\"o\">=</span> <span class=\"kt\">UIColor</span><span class=\"o\">.</span><span class=\"n\">red</span>        \n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>在需要使用的类上 import</p>\n\n<pre><code class=\"language-objective-c\">  #import \"YourPodName/YourPodName-Swift.h\"\n</code></pre>\n\n<p>如果需要在多处调用也可以在podspec中添加</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n</pre></td><td class=\"rouge-code\"><pre>  <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">prefix_header_contents</span> <span class=\"o\">=</span> <span class=\"o\">&lt;&lt;-</span><span class=\"no\">EOS</span><span class=\"sh\">\n  #if __has_include(&lt;xxxModule/xxxModule-Swift.h&gt;)\n  #import &lt;xxxModule/xxxModule-Swift.h&gt;\n  #else\n  #import \"xxxModule/xxxModule-Swift.h\"\n  #endif\n</span><span class=\"no\">  EOS</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>XXX-Swift.h 机制可以参考Build Setting里的key value</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>Objective-C Generated Interface Header Name=$(SWIFT_MODULE_NAME)-Swift.h\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p><img src=\"/img/iosswiift/image1.png\" alt=\"1\" /></p>\n\n<h2 id=\"2pod内swift调oc\">2、Pod内Swift调OC</h2>\n\n<p>Pod指定了source_files，其中.h文件会被加载到xxxModule-umbrella 中，在Pod内部可以直接访问</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre><span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">source_files</span> <span class=\"o\">=</span> <span class=\"s1\">'xxxModule/Classes/**/*'</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>xxxModule-umbrella.h</p>\n\n<div class=\"language-objc highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n</pre></td><td class=\"rouge-code\"><pre><span class=\"cp\">#ifdef __OBJC__\n#import &lt;UIKit/UIKit.h&gt;\n#else\n#ifndef FOUNDATION_EXPORT\n#if defined(__cplusplus)\n#define FOUNDATION_EXPORT extern \"C\"\n#else\n#define FOUNDATION_EXPORT extern\n#endif\n#endif\n#endif\n</span>\n<span class=\"cp\">#import \"OCForSwiftUse.h\"\n#import \"xxxModule.h\"\n</span>\n<span class=\"n\">FOUNDATION_EXPORT</span> <span class=\"kt\">double</span> <span class=\"n\">xxxModuleVersionNumber</span><span class=\"p\">;</span>\n<span class=\"n\">FOUNDATION_EXPORT</span> <span class=\"k\">const</span> <span class=\"kt\">unsigned</span> <span class=\"kt\">char</span> <span class=\"n\">xxxModuleVersionString</span><span class=\"p\">[];</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>swift文件:</p>\n\n<div class=\"language-swift highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n</pre></td><td class=\"rouge-code\"><pre><span class=\"kd\">import</span> <span class=\"kt\">Foundation</span>\n\n<span class=\"kd\">@objcMembers</span> <span class=\"kd\">open</span> <span class=\"kd\">class</span> <span class=\"kt\">SwiftBridge</span> <span class=\"p\">:</span> <span class=\"kt\">UIViewController</span> <span class=\"p\">{</span>\n    <span class=\"kd\">open</span> <span class=\"k\">override</span> <span class=\"kd\">func</span> <span class=\"nf\">viewDidLoad</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n        <span class=\"k\">self</span><span class=\"o\">.</span><span class=\"n\">view</span><span class=\"o\">.</span><span class=\"n\">backgroundColor</span> <span class=\"o\">=</span> <span class=\"kt\">UIColor</span><span class=\"o\">.</span><span class=\"n\">red</span>\n        <span class=\"k\">let</span> <span class=\"nv\">ocs</span> <span class=\"o\">=</span> <span class=\"kt\">OCForSwiftUse</span><span class=\"p\">()</span>\n        <span class=\"c1\">// other codes</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n\n\n                <hr style=\"visibility: hidden;\">\n                <ul class=\"pager\">\n                    \n                    <li class=\"previous\">\n                        <a href=\"/2023/08/17/iOS%E7%BB%84%E4%BB%B6%E5%8C%96-%E4%B8%9A%E5%8A%A1%E7%BB%84%E4%BB%B6%E5%87%86%E5%A4%87%E7%AF%87/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"iOS组件化之：业务组件准备篇\">\n                        Previous<br>\n                        <span>iOS组件化之：业务组件准备篇</span>\n                        </a>\n                    </li>\n                    \n                    \n                    <li class=\"next\">\n                        <a href=\"/2023/10/07/%E7%BB%84%E4%BB%B6%E5%8C%96%E4%B9%8B%E5%88%86%E6%94%AF%E5%90%88%E5%B9%B6/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"组件化实践之：主工程抽离代码分支合并用\">\n                        Next<br>\n                        <span>组件化实践之：主工程抽离代码分支合并用</span>\n                        </a>\n                    </li>\n                    \n                </ul>\n                <hr style=\"visibility: hidden;\">\n\n                \n                <!-- disqus 评论框 start -->\n                <div class=\"comment\">\n                    <div id=\"disqus_thread\" class=\"disqus-thread\"></div>\n                </div>\n                <!-- disqus 评论框 end -->\n                \n\n                \n            </div>  \n\n    <!-- Side Catalog Container -->\n        \n            <div class=\"\n                col-lg-2 col-lg-offset-0\n                visible-lg-block\n                sidebar-container\n                catalog-container\">\n                <div class=\"side-catalog\">\n                    <hr class=\"hidden-sm hidden-xs\">\n                    <h5>\n                        <a class=\"catalog-toggle\" href=\"#\">CATALOG</a>\n                    </h5>\n                    <ul class=\"catalog-body\"></ul>\n                </div>\n            </div>\n        \n\n    <!-- Sidebar Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                sidebar-container\">\n\n                <!-- Featured Tags -->\n                \n\n\n<section>\n    \n        <hr class=\"hidden-sm hidden-xs\">\n    \n    <h5><a href=\"/archive/\">FEATURED TAGS</a></h5>\n    <div class=\"tags\">\n        \n        \n        \n        \n        \n    </div>\n</section>\n\n\n                <!-- Friends Blog -->\n                \n            </div>\n        </div>\n    </div>\n</article>\n\n<!-- add support for mathjax by voleking-->\n\n\n\n\n\n\n<!-- disqus 公共JS代码 start (一个网页只需插入一次) -->\n<script type=\"text/javascript\">\n    /* * * CONFIGURATION VARIABLES * * */\n    var disqus_shortname = \"Cyp\";\n    var disqus_identifier = \"/2023/09/12/iOS-OC-Swift混编\";\n    var disqus_url = \"http://localhost:4000/2023/09/12/iOS-OC-Swift%E6%B7%B7%E7%BC%96/\";\n\n    (function() {\n        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;\n        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';\n        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);\n    })();\n</script>\n<!-- disqus 公共JS代码 end -->\n\n\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n      var d = document, t = 'script',\n          o = d.createElement(t),\n          s = d.getElementsByTagName(t)[0];\n      o.src = u;\n      if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n      s.parentNode.insertBefore(o, s);\n    }\n</script>\n<!-- anchor-js, Doc:http://bryanbraun.github.io/anchorjs/ -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/anchor-js/1.1.1/anchor.min.js\",function(){\n        anchors.options = {\n          visible: 'hover',\n          placement: 'right',\n          // icon: '#'\n        };\n        anchors.add().remove('.intro-header h1').remove('.subheading').remove('.sidebar-container h5');\n    })\n</script>\n<style>\n    /* place left on bigger screen */\n    @media all and (min-width: 800px) {\n        .anchorjs-link{\n            position: absolute;\n            left: -0.75em;\n            font-size: 1.1em;\n            margin-top : -0.1em;\n        }\n    }\n</style>\n\n\n\n    <!-- Footer -->\n<footer>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <!-- SNS Link -->\n                \n\n\n<ul class=\"list-inline text-center\">\n\n\n  \n  \n  \n  \n  \n  \n  \n</ul>\n\n                <p class=\"copyright text-muted\">\n                    Copyright &copy; PaysonChen Blog 2024\n                    <br>\n                    <!-- Powered by <a href=\"http://huangxuan.me\">Hux Blog</a> | -->\n                 <!--    <iframe style=\"margin-left: 2px; margin-bottom:-5px;\" frameborder=\"0\" scrolling=\"0\" width=\"100px\"\n                        height=\"20px\"\n                        src=\"https://ghbtns.com/github-btn.html?user=huxpro&repo=huxpro.github.io&type=star&count=true\">\n                    </iframe> -->\n                </p>\n            </div>\n        </div>\n    </div>\n</footer>\n\n<!-- jQuery -->\n<script src=\"/js/jquery.min.js \"></script>\n\n<!-- Bootstrap Core JavaScript -->\n<!-- Currently, only navbar scroll-down effect at desktop still depends on this -->\n<script src=\"/js/bootstrap.min.js \"></script>\n\n<!-- Custom Theme JavaScript -->\n<script src=\"/js/hux-blog.min.js \"></script>\n\n<!-- Simple Jekyll Search -->\n<script src=\"/js/simple-jekyll-search.min.js\"></script>\n\n<!-- Service Worker -->\n\n<script src=\"/js/snackbar.js \"></script>\n<script src=\"/js/sw-registration.js \"></script>\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n        var d = document, t = 'script',\n            o = d.createElement(t),\n            s = d.getElementsByTagName(t)[0];\n        o.src = u;\n        if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n        s.parentNode.insertBefore(o, s);\n    }\n</script>\n\n<!--\n     Because of the native support for backtick-style fenced code blocks\n     right within the Markdown is landed in Github Pages,\n     From V1.6, There is no need for Highlight.js,\n     so Huxblog drops it officially.\n\n     - https://github.com/blog/2100-github-pages-now-faster-and-simpler-with-jekyll-3-0\n     - https://help.github.com/articles/creating-and-highlighting-code-blocks/\n     - https://github.com/jneen/rouge/wiki/list-of-supported-languages-and-lexers\n-->\n<!--\n    <script>\n        async(\"http://cdn.bootcss.com/highlight.js/8.6/highlight.min.js\", function(){\n            hljs.initHighlightingOnLoad();\n        })\n    </script>\n    <link href=\"http://cdn.bootcss.com/highlight.js/8.6/styles/github.min.css\" rel=\"stylesheet\">\n-->\n\n\n\n\n\n\n\n<!--fastClick.js -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/fastclick/1.0.6/fastclick.min.js\", function () {\n        var $nav = document.querySelector(\"nav\");\n        if ($nav) FastClick.attach($nav);\n    })\n</script>\n\n\n<!-- Google Analytics -->\n\n\n\n<!-- Baidu Tongji -->\n\n\n\n<!-- Side Catalog -->\n\n<script type=\"text/javascript\">\n    function generateCatalog(selector) {\n\n        // interop with multilangual \n        if ('' == 'true') {\n            _containerSelector = 'div.post-container.active'\n        } else {\n            _containerSelector = 'div.post-container'\n        }\n\n        // init\n        var P = $(_containerSelector), a, n, t, l, i, c;\n        a = P.find('h1,h2,h3,h4,h5,h6');\n\n        // clean\n        $(selector).html('')\n\n        // appending\n        a.each(function () {\n            n = $(this).prop('tagName').toLowerCase();\n            i = \"#\" + $(this).prop('id');\n            t = $(this).text();\n            c = $('<a href=\"' + i + '\" rel=\"nofollow\">' + t + '</a>');\n            l = $('<li class=\"' + n + '_nav\"></li>').append(c);\n            $(selector).append(l);\n        });\n        return true;\n    }\n\n    generateCatalog(\".catalog-body\");\n\n    // toggle side catalog\n    $(\".catalog-toggle\").click((function (e) {\n        e.preventDefault();\n        $('.side-catalog').toggleClass(\"fold\")\n    }))\n\n    /*\n     * Doc: https://github.com/davist11/jQuery-One-Page-Nav\n     * Fork by Hux to support padding\n     */\n    async(\"/js/jquery.nav.js\", function () {\n        $('.catalog-body').onePageNav({\n            currentClass: \"active\",\n            changeHash: !1,\n            easing: \"swing\",\n            filter: \"\",\n            scrollSpeed: 700,\n            scrollOffset: 0,\n            scrollThreshold: .2,\n            begin: null,\n            end: null,\n            scrollChange: null,\n            padding: 80\n        });\n    });\n</script>\n\n\n\n<!-- Multi-Lingual -->\n\n\n<!-- Simple Jekyll Search -->\n<script>\n    // https://stackoverflow.com/questions/1912501/unescape-html-entities-in-javascript\n    function htmlDecode(input) {\n        var e = document.createElement('textarea');\n        e.innerHTML = input;\n        // handle case of empty input\n        return e.childNodes.length === 0 ? \"\" : e.childNodes[0].nodeValue;\n    }\n\n    SimpleJekyllSearch({\n        searchInput: document.getElementById('search-input'),\n        resultsContainer: document.getElementById('search-results'),\n        json: '/search.json',\n        searchResultTemplate: '<div class=\"post-preview item\"><a href=\"{url}\"><h2 class=\"post-title\">{title}</h2><h3 class=\"post-subtitle\">{subtitle}</h3><hr></a></div>',\n        noResultsText: 'No results',\n        limit: 50,\n        fuzzy: false,\n        // a hack to get escaped subtitle unescaped. for some reason, \n        // post.subtitle w/o escape filter nuke entire search.\n        templateMiddleware: function (prop, value, template) {\n            if (prop === 'subtitle' || prop === 'title') {\n                if (value.indexOf(\"code\")) {\n                    return htmlDecode(value);\n                } else {\n                    return value;\n                }\n            }\n        }\n    });\n\n    $(document).ready(function () {\n        var $searchPage = $('.search-page');\n        var $searchOpen = $('.search-icon');\n        var $searchClose = $('.search-icon-close');\n        var $searchInput = $('#search-input');\n        var $body = $('body');\n\n        $searchOpen.on('click', function (e) {\n            e.preventDefault();\n            $searchPage.toggleClass('search-active');\n            var prevClasses = $body.attr('class') || '';\n            setTimeout(function () {\n                $body.addClass('no-scroll');\n            }, 400)\n\n            if ($searchPage.hasClass('search-active')) {\n                $searchClose.on('click', function (e) {\n                    e.preventDefault();\n                    $searchPage.removeClass('search-active');\n                    $body.attr('class', prevClasses);  // from closure \n                });\n                $searchInput.focus();\n            }\n        });\n    });\n</script>\n\n\n<!-- Image to hack wechat -->\n<img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\" />\n<!-- Migrate from head to bottom, no longer block render and still work -->\n\n</body>\n\n</html>\n","excerpt":"<h1 id=\"pod仓库内oc与swift调用\">Pod仓库内OC与Swift调用</h1>\n","url":"/2023/09/12/iOS-OC-Swift%E6%B7%B7%E7%BC%96/","next":{"id":"/2023/10/07/组件化之分支合并","tags":[],"relative_path":"_posts/2023-10-07-组件化之分支合并.md","collection":"posts","name":"2023-10-07-组件化之分支合并.md","url":"/2023/10/07/%E7%BB%84%E4%BB%B6%E5%8C%96%E4%B9%8B%E5%88%86%E6%94%AF%E5%90%88%E5%B9%B6/","title":"组件化实践之：主工程抽离代码分支合并用","date":"2023-10-07 00:00:00 +0800","categories":[],"path":"_posts/2023-10-07-组件化之分支合并.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/home-bg-geek.jpg","slug":"组件化之分支合并","ext":".md"},"title":"Pod仓库内OC与Swift调用","date":"2023-09-12 00:00:00 +0800","categories":[],"path":"_posts/2023-09-12-iOS-OC-Swift混编.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/home-bg-geek.jpg","slug":"iOS-OC-Swift混编","ext":".md"},"title":"iOS组件化之：业务组件准备篇","date":"2023-08-17 00:00:00 +0800","categories":[],"path":"_posts/2023-08-17-iOS组件化-业务组件准备篇.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/home-bg-geek.jpg","slug":"iOS组件化-业务组件准备篇","ext":".md"},{"id":"/2023/08/11/Apple企业账号注册流程","tags":[],"relative_path":"_posts/2023-08-11-Apple企业账号注册流程.md","collection":"posts","content":"<h1 id=\"apple-企业账号注册流程\">Apple 企业账号注册流程</h1>\n\n<h2 id=\"1准备appleid\">1、准备AppleID</h2>\n\n<p>​\t使用非Owner账号，没有持有过Apple开发者账号的AppleID即可，即便是被添加到管理员</p>\n\n<h2 id=\"2完成实名\">2、完成实名</h2>\n\n<p>​\t使用App：Develop – 苹果官方开发者App，登录需要注册的AppleID，切到-&gt;【账户】点击【立即注册】</p>\n\n<h2 id=\"3注册\">3、注册</h2>\n\n<p>​\t注册时需要填入【个人】实名信息，非公司信息。</p>\n\n<p>​\t如果这个时候，地址校验多次失败之后，注册按钮会一直置灰，这个时候就需要通过电话联系Apple开发者，根据当下的异常进行处理，我的经验是：后台解除了我的限制之后，我又输入了公司的信息，导致再次错误，而二次错误无法继续解除，只能通过回传身份证信息进行验证，验证通过后，注册按钮再次被打开。</p>\n\n<h2 id=\"4实名认证\">4、实名认证</h2>\n\n<p>​\t点击注册，看到的是会籍资格688元/年，心存疑问，于是又联系了Apple开发者，再进行一系列的远程协助之后，通过【注册】之后的【下一步】继续【下一步】，一直到完成了身份证及人脸识别之后，完成了实名认证。</p>\n\n<h2 id=\"5企业账号注册\">5、企业账号注册</h2>\n\n<p>​\t至此，如果是个人账号，或者是一般企业账号（688元/年）可以在此进行注册，而企业账号（299美金/年）则需要回到网页端注册</p>\n\n<p>​\t回到网页端：</p>\n\n<p>​\t打开 https://developer.apple.com/cn/support/</p>\n\n<p>​\t点击【文章】</p>\n\n<p>​\t选择【会员资格】</p>\n\n<p>​\t在其他计划中选择【Apple Developer Enterprise Program】</p>\n\n<p>​\t点击【了解资格要求】</p>\n\n<p>​\t嫌麻烦直接跳转：【<a href=\"https://developer.apple.com/cn/programs/enterprise/\">了解资格要求</a>】</p>\n\n<p>​\t在【开始申请】的【你将分发何种类型的 App？】选择【仅在我的组织内部使用的专属App】</p>\n\n<p>​\t点击【开始填写申请表格】</p>\n","name":"2023-08-11-Apple企业账号注册流程.md","previous":{"id":"/2023/08/08/iOS-话外篇-构建详解","tags":[],"relative_path":"_posts/2023-08-08-iOS-话外篇-构建详解.md","collection":"posts","content":"<h1 id=\"ios话外篇构建详解\">iOS话外篇：构建详解</h1>\n\n<h2 id=\"1背景\">1.背景</h2>\n\n<p>想必大多数iOS开发者不陌生，通过xcode 自带的 archive 打包，习惯GUI的同学，可能更倾向于archive打包，虽然archive打包有很多优点：包括可视化、学习门槛低、报错清晰等，但是在团队协作与日常构建中，他的弊端就显现出来了：</p>\n\n<ul>\n  <li>步骤多</li>\n</ul>\n\n<p>​\t\t打包前需要同步代码、打包过程中需要选择签名、打包后要归档、并选择上传包的地方（分发渠道orAppStore）</p>\n\n<ul>\n  <li>时间长</li>\n</ul>\n\n<p>​\t\t构建时间随着工程迭代越来越漫长，大型全量打包可能到数十分钟，archive会阻断当前研发进程，无法利用本机算力之外的其他计算集群资源，影响研效</p>\n\n<ul>\n  <li>灵活不佳</li>\n</ul>\n\n<p>​\t\t构建过程中可能需要对版本的build号进行自增、归档dsym文件、构建通知等，采用archive这些都可能需要手动执行</p>\n\n<ul>\n  <li>可靠性不佳</li>\n</ul>\n\n<p>​\t\t对于分支、代码、签名、构建方式等匹配均需靠人工维护，流程步骤多，容易造成错误，不可靠</p>\n\n<h2 id=\"2构建设计\">2.构建设计</h2>\n\n<p>为了设计一个通用的构建脚本，需要将核心构建流程分层与归类，设计入参、使用构建环境等。程序入口如下：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#通过外部传参 读取自定义参数 2:target_name</span>\n<span class=\"c\"># 2 必须</span>\ncoustomSettings <span class=\"nv\">$2</span>\n\n<span class=\"c\"># 3 (可选) 蒲公英渠道号，拼接url</span>\npublishSettings <span class=\"nv\">$3</span>\n\n<span class=\"c\"># 4 (可选)是否静默通知，有值 则不发通知</span>\nnotificationSettings <span class=\"nv\">$4</span>\n\n<span class=\"c\">#开始构建 1:configuration(0:DailyBuild|1:TestFlight|2:Release|3:TFInner)</span>\n<span class=\"c\">#1 必须</span>\nbuild <span class=\"nv\">$1</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h3 id=\"21入参设计\">2.1入参设计：</h3>\n\n<h4 id=\"211参数1构建方式\">2.1.1参数1：构建方式</h4>\n\n<table>\n  <tbody>\n    <tr>\n      <td>对应工程中的Configuration ，枚举值：0:DailyBuild</td>\n      <td>1:TestFlight</td>\n      <td>2:Release</td>\n      <td>3:TFInner</td>\n    </tr>\n  </tbody>\n</table>\n\n<ul>\n  <li>\n    <p>DailyBuild：用于日常构建，CI/CD</p>\n  </li>\n  <li>\n    <p>TestFlight：用于打灰度包</p>\n  </li>\n  <li>\n    <p>Release：用于打生产包</p>\n  </li>\n  <li>\n    <p>TFInner：用于打内部TF包</p>\n\n    <p>特别说明：由于，Apple的Enterprise证书($299/年)账号申请条件苛刻，通过此方案可以临时解决100台测试设备不足的问题</p>\n  </li>\n</ul>\n\n<h4 id=\"212-参数2target名称\">2.1.2 参数2：Target名称</h4>\n\n<p>工程的TargetName：</p>\n\n<p><img src=\"/img/ios-build/iOS_Build1.png\" alt=\"iOS_Build1\" /></p>\n\n<p><a name=\"2.1.3\"></a></p>\n\n<h4 id=\"213-参数3可选渠道号\">2.1.3 参数3(可选)：渠道号</h4>\n\n<p>​\t在没有使用支持iOS app分发的流水线（类似于腾讯蓝鲸（蓝盾流水线））情况下：本文例子使用蒲公英进行应用分发，为了兼容多渠道并行，用于拼接分发下载地址的url。</p>\n\n<p><img src=\"/img/ios-build/iOS_Build2.png\" alt=\"iOS_Build2\" /></p>\n\n<h5 id=\"2131-第三方分发蒲公英\">2.1.3.1 第三方分发：蒲公英</h5>\n\n<p>​\t流水线通过API进行应用分发，下面说明，渠道号为空与非空的情况：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n</pre></td><td class=\"rouge-code\"><pre>  <span class=\"c\">#其他构建包上传到pgy</span>\n        <span class=\"nb\">echo</span> <span class=\"s1\">'/// 上传 PGY 开始 IPA_PATH='</span><span class=\"k\">${</span><span class=\"nv\">IPA_PATH</span><span class=\"k\">}</span>\n        <span class=\"nb\">echo</span> <span class=\"s1\">'/// 上传 PGY 开始 渠道='</span><span class=\"k\">${</span><span class=\"nv\">pgyChannel</span><span class=\"k\">}</span>\n        <span class=\"nv\">compileEnvironment</span><span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">buildName</span><span class=\"k\">}</span><span class=\"s2\">:</span><span class=\"k\">${</span><span class=\"nv\">git_log</span><span class=\"k\">}</span><span class=\"s2\">\"</span>\n        \n        <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$pgyChannel</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then</span>\n            <span class=\"c\"># 渠道空，则走默认 不指定渠道号的上传</span>\n            curl <span class=\"nt\">-F</span> <span class=\"s1\">'file=@'</span><span class=\"k\">${</span><span class=\"nv\">IPA_PATH</span><span class=\"k\">}</span> <span class=\"nt\">-F</span> <span class=\"s1\">'_api_key='</span><span class=\"k\">${</span><span class=\"nv\">pgyAPIKey</span><span class=\"k\">}</span> <span class=\"nt\">-F</span> <span class=\"s1\">'buildUpdateDescription='</span><span class=\"k\">${</span><span class=\"nv\">compileEnvironment</span><span class=\"k\">}</span> https://www.pgyer.com/apiv2/app/upload\n        <span class=\"k\">else</span>\n            <span class=\"c\"># 渠道非空，走下载地址关联 渠道</span>\n            curl <span class=\"nt\">-F</span> <span class=\"s1\">'file=@'</span><span class=\"k\">${</span><span class=\"nv\">IPA_PATH</span><span class=\"k\">}</span> <span class=\"nt\">-F</span> <span class=\"s1\">'_api_key='</span><span class=\"k\">${</span><span class=\"nv\">pgyAPIKey</span><span class=\"k\">}</span> <span class=\"nt\">-F</span> <span class=\"s1\">'buildUpdateDescription='</span><span class=\"k\">${</span><span class=\"nv\">compileEnvironment</span><span class=\"k\">}</span>  <span class=\"nt\">-F</span> <span class=\"s1\">'buildChannelShortcut='</span><span class=\"k\">${</span><span class=\"nv\">pgyDownloadUrlSubfix</span><span class=\"k\">}</span> https://www.pgyer.com/apiv2/app/upload\n        <span class=\"k\">fi\n                \n        </span><span class=\"nb\">echo</span> <span class=\"s1\">'/// 上传 PGY 结束'</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h5 id=\"2132-扩展阿里云oss云存储分发\">2.1.3.2 扩展：阿里云OSS云存储分发</h5>\n\n<p>基于蒲公英的分发受限于蒲公英上行带宽与收费阈值，探索一种容灾分发方式，避免蒲公英未来服务出现异常时的健壮性。</p>\n\n<p>自行分发需要用Ad-Hoc方式，遵循Apple协议：itms-services://?action=download-manifest&amp;url=</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#添加commit信息到二维码图片上</span>\n<span class=\"k\">function </span>add_log_commit_title_msg_to_qrcode <span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"c\">#二维码打上版本信息</span>\n    <span class=\"c\">#TODO: 这里需要安装下工具 ImageMgick [brew install ImageMgick]</span>\n    <span class=\"nv\">title</span><span class=\"o\">=</span><span class=\"nv\">$xcodeVersion3number</span>.<span class=\"k\">${</span><span class=\"nv\">channel_name</span><span class=\"k\">}</span>.<span class=\"nv\">$configurationName</span>.<span class=\"k\">${</span><span class=\"nv\">BuildNo</span><span class=\"k\">}</span>\n\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nv\">$1</span> <span class=\"o\">=</span> <span class=\"s2\">\"1\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nv\">dst_line_cnt</span><span class=\"o\">=</span>0\n        <span class=\"nb\">export </span><span class=\"nv\">oss_source_log_arr</span><span class=\"o\">=(</span><span class=\"sb\">`</span><span class=\"nb\">echo</span> <span class=\"nv\">$source_log_str</span> | <span class=\"nb\">tr</span> <span class=\"s1\">']['</span> <span class=\"s1\">' '</span><span class=\"sb\">`</span><span class=\"o\">)</span>\n        <span class=\"nb\">export </span><span class=\"nv\">oss_log_line_count</span><span class=\"o\">=</span><span class=\"k\">${#</span><span class=\"nv\">oss_source_log_arr</span><span class=\"p\">[@]</span><span class=\"k\">}</span>\n        <span class=\"nb\">echo</span> <span class=\"s1\">'/// oss 分发： 添加 二维码msg log_line_count='</span><span class=\"nv\">$oss_log_line_count</span>\n\n        <span class=\"k\">for</span><span class=\"o\">((</span> <span class=\"nv\">i</span><span class=\"o\">=</span>0<span class=\"p\">;</span>i&lt;<span class=\"k\">${</span><span class=\"nv\">oss_log_line_count</span><span class=\"k\">}</span><span class=\"p\">;</span>i++<span class=\"o\">))</span>\n        <span class=\"k\">do\n            </span><span class=\"nv\">single_len</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">echo</span> <span class=\"nt\">-n</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">oss_source_log_arr</span><span class=\"p\">[i]</span><span class=\"k\">}</span><span class=\"s2\">\"</span> | <span class=\"nb\">wc</span> <span class=\"nt\">-m</span><span class=\"si\">)</span>\n            <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">oss_source_log_arr</span><span class=\"p\">[i]</span><span class=\"k\">}</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n                </span><span class=\"nv\">oss_singleStr</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">oss_source_log_arr</span><span class=\"p\">[i]</span><span class=\"k\">}</span><span class=\"p\">;</span>\n                <span class=\"nb\">echo</span> <span class=\"s1\">'///--遍历'</span><span class=\"k\">${</span><span class=\"nv\">oss_source_log_arr</span><span class=\"p\">[i]</span><span class=\"k\">}</span><span class=\"s1\">'为空文字长度：'</span><span class=\"nv\">$single_len</span>\n                <span class=\"nv\">dst_line_cnt</span><span class=\"o\">=</span><span class=\"k\">$((</span>dst_line_cnt+1<span class=\"k\">))</span>\n            <span class=\"k\">else\n                </span><span class=\"nv\">line_max_len</span><span class=\"o\">=</span>30\n                <span class=\"nv\">ingle_cnt</span><span class=\"o\">=</span><span class=\"k\">$((</span>single_len <span class=\"o\">/</span> line_max_len<span class=\"k\">))</span>\n\n\n                <span class=\"k\">if</span> <span class=\"o\">((</span>ingle_cnt <span class=\"o\">&gt;</span> 0<span class=\"o\">))</span><span class=\"p\">;</span> <span class=\"k\">then\n                    for</span><span class=\"o\">((</span> <span class=\"nv\">j</span><span class=\"o\">=</span>0<span class=\"p\">;</span>j&lt;<span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">ingle_cnt</span><span class=\"k\">}</span><span class=\"p\">;</span>j++<span class=\"o\">))</span>\n                    <span class=\"k\">do\n                        </span><span class=\"nv\">string</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">oss_source_log_arr</span><span class=\"p\">[i]</span><span class=\"k\">}</span>\n                        <span class=\"nv\">single_line1</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">string</span>:<span class=\"p\">(line_max_len * j)</span>:line_max_len<span class=\"k\">}</span>\n                        <span class=\"nb\">echo</span> <span class=\"s1\">'///--遍历'</span> <span class=\"k\">${</span><span class=\"nv\">oss_source_log_arr</span><span class=\"p\">[i]</span><span class=\"k\">}</span><span class=\"s1\">'文字长度：'</span><span class=\"nv\">$single_len</span><span class=\"s1\">'超阈值阶段：第'</span><span class=\"nv\">$j</span><span class=\"s1\">'行:'</span><span class=\"nv\">$single_line1</span>\n                        oss_singleStr+<span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"se\">\\n</span><span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">single_line1</span><span class=\"k\">}</span><span class=\"p\">;</span>\n                        <span class=\"nv\">dst_line_cnt</span><span class=\"o\">=</span><span class=\"k\">$((</span>dst_line_cnt+1<span class=\"k\">))</span>\n                    <span class=\"k\">done</span><span class=\"p\">;</span>\n                <span class=\"k\">else\n                    </span><span class=\"nb\">echo</span> <span class=\"s1\">'///--遍历'</span> <span class=\"k\">${</span><span class=\"nv\">oss_source_log_arr</span><span class=\"p\">[i]</span><span class=\"k\">}</span><span class=\"s1\">' 文字长度：'</span><span class=\"nv\">$single_len</span>\n                    <span class=\"nv\">dst_line_cnt</span><span class=\"o\">=</span><span class=\"k\">$((</span>dst_line_cnt+1<span class=\"k\">))</span>\n                    oss_singleStr+<span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"se\">\\n</span><span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">oss_source_log_arr</span><span class=\"p\">[i]</span><span class=\"k\">}</span><span class=\"p\">;</span>\n                <span class=\"k\">fi\n            fi\n        done</span><span class=\"p\">;</span>\n        <span class=\"nv\">msg</span><span class=\"o\">=</span><span class=\"nv\">$oss_singleStr</span>\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"/// oss render msg=\"</span><span class=\"nv\">$msg</span>\n        \n        <span class=\"nv\">contentsize_width</span><span class=\"o\">=</span>600\n        <span class=\"nv\">contentsize_height</span><span class=\"o\">=</span><span class=\"k\">$((</span>contentsize_width <span class=\"o\">+</span> <span class=\"nv\">$dst_line_cnt</span> <span class=\"o\">*</span> <span class=\"m\">25</span> <span class=\"o\">+</span> <span class=\"m\">40</span> <span class=\"o\">+</span> <span class=\"m\">40</span><span class=\"k\">))</span> <span class=\"c\">#第一个40是title的高度 第二个40是距离底部空间</span>\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"contentsize_height=\"</span><span class=\"nv\">$contentsize_height</span>\n        <span class=\"c\">#改变原图大小</span>\n        convert <span class=\"nv\">$qrcode_path</span> <span class=\"nt\">-resize</span> <span class=\"k\">${</span><span class=\"nv\">contentsize_width</span><span class=\"k\">}</span>x<span class=\"k\">${</span><span class=\"nv\">contentsize_width</span><span class=\"k\">}</span>^ <span class=\"nt\">-gravity</span> center <span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span>_1.png\n\n        <span class=\"c\">#变高，兼容msg</span>\n        convert <span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span>_1.png <span class=\"nt\">-gravity</span> north <span class=\"nt\">-extent</span> <span class=\"k\">${</span><span class=\"nv\">contentsize_width</span><span class=\"k\">}</span>x<span class=\"k\">${</span><span class=\"nv\">contentsize_height</span><span class=\"k\">}</span> <span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span>_2.png\n\n        <span class=\"c\">#汉字字体</span>\n        <span class=\"nv\">chn_tff_path</span><span class=\"o\">=</span><span class=\"nv\">$build_ext_path</span>/publish_res/chn.ttf\n        \n        <span class=\"c\">#渲染title</span>\n        convert <span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span>_2.png <span class=\"nt\">-gravity</span> north <span class=\"nt\">-pointsize</span> 30 <span class=\"nt\">-font</span> <span class=\"nv\">$chn_tff_path</span> <span class=\"nt\">-fill</span> black <span class=\"nt\">-annotate</span> +0+<span class=\"k\">${</span><span class=\"nv\">contentsize_width</span><span class=\"k\">}</span> <span class=\"nv\">$title</span> <span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span>_3.png\n\n        <span class=\"c\">#渲染msg</span>\n        convert <span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span>_3.png <span class=\"nt\">-gravity</span> north <span class=\"nt\">-pointsize</span> 20 <span class=\"nt\">-font</span> <span class=\"nv\">$chn_tff_path</span> <span class=\"nt\">-fill</span> black <span class=\"nt\">-annotate</span> +0+<span class=\"k\">$((${</span><span class=\"nv\">contentsize_width</span><span class=\"k\">}</span><span class=\"o\">+</span><span class=\"m\">40</span><span class=\"k\">))</span> <span class=\"nv\">$msg</span> <span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span>_4.png\n        <span class=\"nv\">qrcode_path_with_msg</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span>_4.png\n    <span class=\"k\">else</span>\n        <span class=\"c\">#没有传 1 不需要msg，只给title</span>\n        convert <span class=\"nv\">$qrcode_path</span> <span class=\"nt\">-gravity</span> south <span class=\"nt\">-pointsize</span> 10 <span class=\"nt\">-fill</span> gray <span class=\"nt\">-annotate</span> +0+0 <span class=\"nv\">$qrcode_print_msg</span>  <span class=\"nv\">$qrcode_path_with_msg</span>\n        <span class=\"nb\">echo</span> <span class=\"s1\">'/// oss 分发： 添加 二维码title='</span><span class=\"k\">${</span><span class=\"nv\">title</span><span class=\"k\">}</span>\n    <span class=\"k\">fi</span>\n\n<span class=\"o\">}</span>\n\n<span class=\"c\">#发布到阿里云OSS</span>\n<span class=\"k\">function </span>upload_ipa_to_aliyunOSS <span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"c\">#更新plist的键值对：</span>\n    <span class=\"nv\">manifest_path</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">exportPath</span><span class=\"k\">}</span>/manifest.plist\n    <span class=\"nb\">echo</span> <span class=\"s1\">'/// oss 分发： manifest_path='</span><span class=\"k\">${</span><span class=\"nv\">manifest_path</span><span class=\"k\">}</span>\n    \n    <span class=\"nv\">oss_bucket</span><span class=\"o\">=</span><span class=\"s2\">\"cbs-apps-test\"</span>\n    <span class=\"nv\">oss_platform</span><span class=\"o\">=</span><span class=\"s2\">\"iOS\"</span>\n    <span class=\"nv\">oss_bucket_path</span><span class=\"o\">=</span><span class=\"nv\">$oss_platform</span>/<span class=\"k\">${</span><span class=\"nv\">TARGET_NAME</span><span class=\"k\">}</span>/<span class=\"nv\">$configurationName</span>/<span class=\"k\">${</span><span class=\"nv\">channel_name</span><span class=\"k\">}</span>/<span class=\"k\">${</span><span class=\"nv\">BuildNo</span><span class=\"k\">}</span>/<span class=\"k\">${</span><span class=\"nv\">TARGET_NAME</span><span class=\"k\">}</span>_<span class=\"k\">${</span><span class=\"nv\">channel_name</span><span class=\"k\">}</span>_<span class=\"nv\">$configurationName_</span><span class=\"k\">${</span><span class=\"nv\">BuildNo</span><span class=\"k\">}</span>\n    <span class=\"nv\">oss_path</span><span class=\"o\">=</span><span class=\"s2\">\"oss://</span><span class=\"nv\">$oss_bucket</span><span class=\"s2\">/</span><span class=\"nv\">$oss_bucket_path</span><span class=\"s2\">\"</span>\n    <span class=\"nv\">oss_url</span><span class=\"o\">=</span><span class=\"s2\">\"https://</span><span class=\"nv\">$oss_bucket</span><span class=\"s2\">.oss-cn-beijing.aliyuncs.com/</span><span class=\"nv\">$oss_bucket_path</span><span class=\"s2\">\"</span>\n\n    <span class=\"nv\">oss_ipa_upload_url</span><span class=\"o\">=</span><span class=\"nv\">$oss_path</span><span class=\"s2\">\".ipa\"</span>\n    <span class=\"nv\">oss_ipa_url</span><span class=\"o\">=</span><span class=\"nv\">$oss_url</span><span class=\"s2\">\".ipa\"</span>\n\n    <span class=\"c\">#icon下载地址配置</span>\n    <span class=\"nv\">oss_icon_url</span><span class=\"o\">=</span><span class=\"s2\">\"https://cbs-apps-test.oss-cn-beijing.aliyuncs.com/iOS/</span><span class=\"k\">${</span><span class=\"nv\">TARGET_NAME</span><span class=\"k\">}</span><span class=\"s2\">/icon/icon.png\"</span>\n    <span class=\"nv\">oss_icon_fs_url</span><span class=\"o\">=</span><span class=\"s2\">\"https://cbs-apps-test.oss-cn-beijing.aliyuncs.com/iOS/</span><span class=\"k\">${</span><span class=\"nv\">TARGET_NAME</span><span class=\"k\">}</span><span class=\"s2\">/icon/icon_fs.png\"</span>\n\n    \n    <span class=\"c\">#修改ipa下载地址</span>\n    /usr/libexec/PlistBuddy <span class=\"nt\">-c</span> <span class=\"s2\">\"Set :items:0:assets:0:url </span><span class=\"nv\">$oss_ipa_url</span><span class=\"s2\">\"</span> <span class=\"nv\">$manifest_path</span>\n\n    <span class=\"c\">#修改icon地址</span>\n    /usr/libexec/PlistBuddy <span class=\"nt\">-c</span> <span class=\"s2\">\"Set :items:0:assets:1:url </span><span class=\"nv\">$oss_icon_url</span><span class=\"s2\">\"</span> <span class=\"nv\">$manifest_path</span>\n\n    <span class=\"c\">#修改icon full size地址</span>\n    /usr/libexec/PlistBuddy <span class=\"nt\">-c</span> <span class=\"s2\">\"Set :items:0:assets:2:url </span><span class=\"nv\">$oss_icon_fs_url</span><span class=\"s2\">\"</span> <span class=\"nv\">$manifest_path</span>\n\n\n    <span class=\"c\">#传ipa</span>\n    ossutil <span class=\"nb\">cp</span> <span class=\"k\">${</span><span class=\"nv\">IPA_PATH</span><span class=\"k\">}</span> <span class=\"nv\">$oss_ipa_upload_url</span> <span class=\"nt\">-f</span>\n    \n    <span class=\"c\">#传manifest</span>\n    <span class=\"nv\">oss_manifest_extension</span><span class=\"o\">=</span><span class=\"s2\">\"plist\"</span>\n    <span class=\"nv\">oss_manifest_upload_url</span><span class=\"o\">=</span><span class=\"nv\">$oss_path</span><span class=\"s2\">\".\"</span><span class=\"nv\">$oss_manifest_extension</span>\n    <span class=\"nv\">oss_manifest_url</span><span class=\"o\">=</span><span class=\"nv\">$oss_url</span><span class=\"s2\">\".\"</span><span class=\"nv\">$oss_manifest_extension</span>\n    ossutil <span class=\"nb\">cp</span> <span class=\"k\">${</span><span class=\"nv\">manifest_path</span><span class=\"k\">}</span> <span class=\"nv\">$oss_manifest_upload_url</span> <span class=\"nt\">-f</span>\n    \n    <span class=\"c\">#上述做归档后，生成下载二维码</span>\n    <span class=\"nv\">download_url</span><span class=\"o\">=</span><span class=\"s2\">\"itms-services://?action=download-manifest&amp;url=\"</span><span class=\"nv\">$oss_manifest_url</span>\n    <span class=\"nv\">qrcode_path</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">exportPath</span><span class=\"k\">}</span>/<span class=\"k\">${</span><span class=\"nv\">TARGET_NAME</span><span class=\"k\">}</span>_<span class=\"k\">${</span><span class=\"nv\">BuildNo</span><span class=\"k\">}</span>.png\n    \n    <span class=\"c\">#TODO: 这里需要安装下工具 qrencode [brew install qrencode]</span>\n    qrencode <span class=\"nt\">-o</span> <span class=\"nv\">$qrcode_path</span> <span class=\"nv\">$download_url</span>\n    \n    <span class=\"c\">#将二维码上传到oss</span>\n    <span class=\"nv\">oss_qrencode_extension</span><span class=\"o\">=</span><span class=\"s2\">\"png\"</span>\n    <span class=\"nv\">oss_qrencode_upload_url</span><span class=\"o\">=</span><span class=\"nv\">$oss_path</span><span class=\"s2\">\".\"</span><span class=\"nv\">$oss_qrencode_extension</span>\n    <span class=\"nv\">qrcode_path_with_msg</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span>_with_msg\n        \n    <span class=\"c\">#如果需要二维码打上log信息则调用</span>\n    <span class=\"nv\">need_msg</span><span class=\"o\">=</span>1\n    add_log_commit_title_msg_to_qrcode <span class=\"nv\">$need_msg</span>\n        \n    <span class=\"c\">#上传到阿里云oss</span>\n    ossutil <span class=\"nb\">cp</span> <span class=\"k\">${</span><span class=\"nv\">qrcode_path_with_msg</span><span class=\"k\">}</span> <span class=\"nv\">$oss_qrencode_upload_url</span> <span class=\"nt\">-f</span>\n    \n    <span class=\"c\">#二维码的url 通知出来</span>\n    <span class=\"nb\">export </span><span class=\"nv\">oss_app_download_qrcode_url</span><span class=\"o\">=</span><span class=\"nv\">$oss_url</span><span class=\"s2\">\".\"</span><span class=\"nv\">$oss_qrencode_extension</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'/// oss 分发： 二维码的oss_app_download_qrcode_url='</span><span class=\"k\">${</span><span class=\"nv\">oss_app_download_qrcode_url</span><span class=\"k\">}</span>\n<span class=\"o\">}</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p><a name=\"2.1.4\"></a></p>\n\n<h4 id=\"214-参数4可选是否静默通知\">2.1.4 参数4(可选)：是否静默通知</h4>\n\n<p>​\t本文例子通过钉钉API发送通知到钉钉群，默认不填发送，有值则不发通知，通知内容整合双分发方案：</p>\n\n<p>​\t下面代码为发送通知的逻辑，请将相应的变量替换成自己的参数</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n</pre></td><td class=\"rouge-code\"><pre>    <span class=\"nv\">modify_msg</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">git_log</span><span class=\"k\">}</span>\n    <span class=\"nv\">ProductName</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">xcodeProductName</span><span class=\"k\">}</span>\n    <span class=\"nv\">downloadPrefix</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">PrefixID</span><span class=\"k\">}</span>\n    <span class=\"nv\">channel</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">pgyChannel</span><span class=\"k\">}</span>\n    <span class=\"nv\">title</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">buildName</span><span class=\"k\">}</span>\n\n    <span class=\"c\">#采用直接 拼 channel后缀</span>\n    <span class=\"nv\">shortUrl</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">downloadPrefix</span><span class=\"k\">}${</span><span class=\"nv\">ProductName</span><span class=\"k\">}${</span><span class=\"nv\">channel</span><span class=\"k\">}</span>\n\n    <span class=\"c\">#蒲公英下载地址</span>\n    <span class=\"nv\">pgy_app_donwnload_url</span><span class=\"o\">=</span><span class=\"s2\">\"https://www.pgyer.com/</span><span class=\"k\">${</span><span class=\"nv\">shortUrl</span><span class=\"k\">}</span><span class=\"s2\">\"</span>\n    \n   <span class=\"c\">#oss下载地址</span>\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$oss_app_download_qrcode_url</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then</span>\n        <span class=\"c\">#为空则使用pgy</span>\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"通知：oss_app_download_qrcode_url 为空则使用pgy：'</span><span class=\"k\">${</span><span class=\"nv\">app_donwnload_url</span><span class=\"k\">}</span><span class=\"s2\">'\"</span>\n        <span class=\"nv\">app_donwnload_url</span><span class=\"o\">=</span><span class=\"nv\">$pgy_app_donwnload_url</span>\n    <span class=\"k\">else</span>\n        <span class=\"c\">#不为空使用 pgy + oss</span>\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"通知：oss_app_download_qrcode_url 不为空使用 pgy + oss则使用pgy + oss：'</span><span class=\"k\">${</span><span class=\"nv\">app_donwnload_url</span><span class=\"k\">}</span><span class=\"s2\">' and '</span><span class=\"nv\">$oss_app_download_qrcode_url</span><span class=\"s2\">'\"</span>\n        <span class=\"nv\">app_donwnload_url</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">pgy_app_donwnload_url</span><span class=\"k\">}</span><span class=\"s1\">'\\n'</span>oss下载地址:<span class=\"nv\">$oss_app_download_qrcode_url</span>\n    <span class=\"k\">fi</span>\n<span class=\"c\">#    app_donwnload_url=$oss_app_download_qrcode_url</span>\n    \n    <span class=\"nb\">echo</span> <span class=\"s2\">\"通知 COME下载地址：'</span><span class=\"k\">${</span><span class=\"nv\">app_donwnload_url</span><span class=\"k\">}</span><span class=\"s2\">'\"</span>\n\n    \n    curl <span class=\"s1\">'https://oapi.dingtalk.com/robot/send?access_token='</span><span class=\"k\">${</span><span class=\"nv\">access_token</span><span class=\"k\">}</span> <span class=\"se\">\\</span>\n        <span class=\"nt\">-H</span> <span class=\"s1\">'Content-Type: application/json'</span> <span class=\"se\">\\</span>\n        <span class=\"nt\">-d</span> <span class=\"s1\">'{\"msgtype\": \"text\",\n            \"at\": {\n            \"atMobiles\":[\n                \"这\"\n                \"里\"\n                \"是\"\n                \"钉\"\n                \"钉\"\n                \"账\"\n                \"号\"\n            ],\n            \"isAtAll\": false\n            },\n             \"text\": {\n                  \"content\": \"'</span><span class=\"k\">${</span><span class=\"nv\">ProductName</span><span class=\"k\">}</span><span class=\"s1\">' App更新：'</span><span class=\"k\">${</span><span class=\"nv\">title</span><span class=\"k\">}</span><span class=\"s1\">'\\n'</span><span class=\"k\">${</span><span class=\"nv\">modify_msg</span><span class=\"k\">}</span><span class=\"s1\">'\\n下载地址：https://www.pgyer.com/'</span><span class=\"k\">${</span><span class=\"nv\">app_donwnload_url</span><span class=\"k\">}</span><span class=\"s1\">'\"            }\n           }'</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'///-------------------------------------------------------'</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'/// 发送通知 '</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'///-------------------------------------------------------'</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h3 id=\"22-流程设计\">2.2 流程设计：</h3>\n\n<h4 id=\"221-构建前\">2.2.1 构建前：</h4>\n\n<ul>\n  <li>入参设置</li>\n</ul>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#入参设置</span>\n<span class=\"k\">function </span>coustomSettings<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"c\">#需要打包的target</span>\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$1</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">echo</span> <span class=\"s2\">\"error: TARGET_NAME 不能为空 退出\"</span>\n        <span class=\"nb\">exit </span>1\n    <span class=\"k\">else\n        </span><span class=\"nb\">export </span><span class=\"nv\">TARGET_NAME</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n    <span class=\"k\">fi</span>\n\n    <span class=\"c\">#工程所在目录，如果在根目录则为${WORKSPACE}</span>\n    \n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$2</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">export </span><span class=\"nv\">projectDir</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">TARGET_NAME</span><span class=\"k\">}</span>\n    <span class=\"k\">else\n        </span><span class=\"nb\">export </span><span class=\"nv\">projectDir</span><span class=\"o\">=</span><span class=\"nv\">$2</span>\n    <span class=\"k\">fi</span>\n<span class=\"c\">#    export projectDir=YPCProject</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"TARGET_NAME=\"</span><span class=\"nv\">$TARGET_NAME</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"projectDir=\"</span><span class=\"nv\">$projectDir</span>\n\n<span class=\"o\">}</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<ul>\n  <li>发布设置：</li>\n</ul>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#发布及归档的相关的设置</span>\n<span class=\"k\">function </span>publishSettings<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$1</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">echo</span> <span class=\"s1\">'///渠道号入参 为空'</span>\n        <span class=\"nb\">export </span><span class=\"nv\">pgyChannel</span><span class=\"o\">=</span>Dev\n    <span class=\"k\">else\n        </span><span class=\"nb\">echo</span> <span class=\"s1\">'///渠道号入参 不为空'</span>\n        <span class=\"nb\">export </span><span class=\"nv\">pgyChannel</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n    <span class=\"k\">fi\n    \n    </span><span class=\"nb\">echo</span> <span class=\"s2\">\"////渠道号\"</span><span class=\"k\">${</span><span class=\"nv\">pgyChannel</span><span class=\"k\">}</span>\n    \n    <span class=\"c\">#声明蒲公英分发调用APi的pgyAPIKey</span>\n    <span class=\"nb\">export </span><span class=\"nv\">pgyAPIKey</span><span class=\"o\">=</span><span class=\"s2\">\"pgyAPIKey\"</span>\n    \n    <span class=\"c\">#钉钉发送通知机器人的access_token</span>\n    <span class=\"nb\">export </span><span class=\"nv\">access_token</span><span class=\"o\">=</span><span class=\"s2\">\"access_token\"</span>\n\n    <span class=\"c\">#AppStore的token</span>\n    <span class=\"nb\">export </span><span class=\"nv\">appStore_apiIssuer</span><span class=\"o\">=</span><span class=\"s2\">\"appStore_apiIssuer\"</span>\n    <span class=\"nb\">export </span><span class=\"nv\">appStore_apikey</span><span class=\"o\">=</span><span class=\"s2\">\"appStore_apikey\"</span>\n            \n    <span class=\"c\">#bugly的token</span>\n    <span class=\"nb\">export </span><span class=\"nv\">bugly_appid</span><span class=\"o\">=</span><span class=\"s2\">\"bugly_appid\"</span>\n    <span class=\"nb\">export </span><span class=\"nv\">bugly_appkey</span><span class=\"o\">=</span><span class=\"s2\">\"bugly_appkey\"</span>\n<span class=\"o\">}</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<ul>\n  <li>通知设置</li>\n</ul>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#通知相关的设置（pgy渠道及apikey）</span>\n<span class=\"k\">function </span>notificationSettings<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"nv\">notificationSettings</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"k\">${</span><span class=\"nv\">notificationSettings</span><span class=\"k\">}</span> <span class=\"o\">=</span> <span class=\"s2\">\"1\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">echo</span> <span class=\"s1\">'///静默入参 不为空'</span>\n        <span class=\"nb\">export </span><span class=\"nv\">notificationSilent</span><span class=\"o\">=</span><span class=\"nv\">$notificationSettings</span>\n    <span class=\"k\">else\n        </span><span class=\"nb\">echo</span> <span class=\"s1\">'///静默入参 为空 或者不为1 不发通知'</span>\n    <span class=\"k\">fi\n    \n    </span><span class=\"nb\">echo</span> <span class=\"s2\">\"////静默通知=\"</span><span class=\"k\">${</span><span class=\"nv\">notificationSilent</span><span class=\"k\">}</span>\n<span class=\"o\">}</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<ul>\n  <li>\n    <p>参数获取:</p>\n\n    <p>通过xcode工具获取工程项目自带的参数</p>\n  </li>\n</ul>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#获取工程配置信息</span>\n<span class=\"k\">function </span>initInfoPlistParms<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"c\">#Plist先写死。后续可考虑改成搜索</span>\n    <span class=\"nb\">cd</span> <span class=\"k\">${</span><span class=\"nv\">CurDir</span><span class=\"k\">}</span>/<span class=\"k\">${</span><span class=\"nv\">projectDir</span><span class=\"k\">}</span>\n    <span class=\"nv\">versionKey</span><span class=\"o\">=</span><span class=\"s2\">\"MARKETING_VERSION\"</span>\n    <span class=\"nv\">bundleID</span><span class=\"o\">=</span><span class=\"s2\">\"PRODUCT_BUNDLE_IDENTIFIER\"</span>\n    <span class=\"nv\">bundleNo</span><span class=\"o\">=</span><span class=\"s2\">\"CURRENT_PROJECT_VERSION\"</span>\n    <span class=\"nv\">platformName</span><span class=\"o\">=</span><span class=\"s2\">\"PLATFORM_NAME\"</span>\n    <span class=\"nv\">productName</span><span class=\"o\">=</span><span class=\"s2\">\"PRODUCT_NAME\"</span>\n    <span class=\"c\">#将要获取的key设置成数组</span>\n    <span class=\"nv\">buildSettingsGrepKeyArray</span><span class=\"o\">=(</span><span class=\"nv\">$versionKey</span> <span class=\"nv\">$bundleID</span> <span class=\"nv\">$bundleNo</span> <span class=\"nv\">$platformName</span> <span class=\"nv\">$productName</span><span class=\"o\">)</span>\n    <span class=\"nv\">buildSettingsGrepKey</span><span class=\"o\">=</span><span class=\"s2\">\"\"</span>\n    <span class=\"k\">for</span><span class=\"o\">((</span> <span class=\"nv\">i</span><span class=\"o\">=</span>0<span class=\"p\">;</span>i&lt;<span class=\"k\">${#</span><span class=\"nv\">buildSettingsGrepKeyArray</span><span class=\"p\">[@]</span><span class=\"k\">}</span><span class=\"p\">;</span>i++<span class=\"o\">))</span>\n    <span class=\"k\">do\n        </span><span class=\"nb\">echo</span> <span class=\"s2\">\"【获取Plist参数】遍历 idx=\"</span><span class=\"nv\">$i</span> <span class=\"s2\">\"value=\"</span> <span class=\"k\">${</span><span class=\"nv\">buildSettingsGrepKeyArray</span><span class=\"p\">[i]</span><span class=\"k\">}</span>\n        <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$buildSettingsGrepKey</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n            </span><span class=\"nv\">buildSettingsGrepKey</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">buildSettingsGrepKeyArray</span><span class=\"p\">[i]</span><span class=\"k\">}</span><span class=\"p\">;</span>\n        <span class=\"k\">else\n            </span>buildSettingsGrepKey+<span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"se\">\\|</span><span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">buildSettingsGrepKeyArray</span><span class=\"p\">[i]</span><span class=\"k\">}</span><span class=\"p\">;</span>\n        <span class=\"k\">fi\n    done</span><span class=\"p\">;</span>\n    <span class=\"c\">#将数组拼接成 grep 参数</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"【获取Plist参数】key：\"</span><span class=\"nv\">$buildSettingsGrepKey</span>\n\n    <span class=\"c\">#-w 防止模糊匹配 比如  PRODUCT_NAME 和 FULL_PRODUCT_NAME</span>\n    <span class=\"nv\">buildSettings</span><span class=\"o\">=</span><span class=\"sb\">`</span>xcodebuild <span class=\"nt\">-showBuildSettings</span> <span class=\"nt\">-target</span> <span class=\"k\">${</span><span class=\"nv\">TARGET_NAME</span><span class=\"k\">}</span> | <span class=\"nb\">grep</span> <span class=\"nt\">-w</span> <span class=\"nv\">$buildSettingsGrepKey</span><span class=\"sb\">`</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"【获取Plist参数】result：\"</span><span class=\"nv\">$buildSettings</span>\n    \n    <span class=\"c\">#取值数组</span>\n    <span class=\"nv\">buildSettingsGrepValueArray</span><span class=\"o\">=[]</span>\n    <span class=\"k\">for</span><span class=\"o\">((</span> <span class=\"nv\">i</span><span class=\"o\">=</span>0<span class=\"p\">;</span>i&lt;<span class=\"k\">${#</span><span class=\"nv\">buildSettingsGrepKeyArray</span><span class=\"p\">[@]</span><span class=\"k\">}</span><span class=\"p\">;</span>i++<span class=\"o\">))</span>\n    <span class=\"k\">do</span>\n        <span class=\"c\">#右截断</span>\n        <span class=\"nv\">value</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">buildSettings</span><span class=\"p\">#*</span><span class=\"k\">${</span><span class=\"nv\">buildSettingsGrepKeyArray</span><span class=\"p\">[i]</span><span class=\"k\">}</span><span class=\"p\"> = </span><span class=\"k\">}</span>\n        <span class=\"k\">for</span><span class=\"o\">((</span> <span class=\"nv\">j</span><span class=\"o\">=</span>0<span class=\"p\">;</span>j&lt;<span class=\"k\">${#</span><span class=\"nv\">buildSettingsGrepKeyArray</span><span class=\"p\">[@]</span><span class=\"k\">}</span><span class=\"p\">;</span>j++<span class=\"o\">))</span>\n        <span class=\"k\">do</span>\n            <span class=\"c\">#由于grep顺序不保证，遍历所有key进行右截断</span>\n            <span class=\"nv\">value</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">value</span><span class=\"p\">%</span><span class=\"k\">${</span><span class=\"nv\">buildSettingsGrepKeyArray</span><span class=\"p\">[j]</span><span class=\"k\">}</span><span class=\"p\">*</span><span class=\"k\">}</span>\n        <span class=\"k\">done</span><span class=\"p\">;</span>\n        <span class=\"nv\">value</span><span class=\"o\">=</span><span class=\"sb\">`</span><span class=\"nb\">echo</span> <span class=\"k\">${</span><span class=\"nv\">value</span><span class=\"k\">}</span> | <span class=\"nb\">sed</span> <span class=\"s1\">'s/\\ //g'</span><span class=\"sb\">`</span>\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"【获取Plist参数】i=\"</span><span class=\"nv\">$i</span> <span class=\"s2\">\"value=\"</span><span class=\"nv\">$value</span><span class=\"s2\">\"。\"</span>\n        <span class=\"c\">#填回取值数组</span>\n        buildSettingsGrepValueArray[i]<span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">value</span><span class=\"k\">}</span>\n    <span class=\"k\">done</span><span class=\"p\">;</span>\n    \n    <span class=\"c\">#定义全部变量</span>\n    <span class=\"nb\">export </span><span class=\"nv\">xcodeVersion3number</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">buildSettingsGrepValueArray</span><span class=\"p\">[0]</span><span class=\"k\">}</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"【获取Plist参数】版本号：\"</span><span class=\"nv\">$xcodeVersion3number</span><span class=\"s2\">\"。\"</span>\n\n    <span class=\"nb\">export </span><span class=\"nv\">xcodeBundleID</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">buildSettingsGrepValueArray</span><span class=\"p\">[1]</span><span class=\"k\">}</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"【获取Plist参数】包名：\"</span><span class=\"nv\">$xcodeBundleID</span><span class=\"s2\">\"。\"</span>\n\n    <span class=\"nb\">export </span><span class=\"nv\">xcodebundleNo</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">buildSettingsGrepValueArray</span><span class=\"p\">[2]</span><span class=\"k\">}</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"【获取Plist参数】build号：\"</span><span class=\"nv\">$xcodebundleNo</span><span class=\"s2\">\"。\"</span>\n    \n    <span class=\"nb\">export </span><span class=\"nv\">xcodePlatformName</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">buildSettingsGrepValueArray</span><span class=\"p\">[3]</span><span class=\"k\">}</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"【获取Plist参数】PlatformName：\"</span><span class=\"nv\">$xcodePlatformName</span><span class=\"s2\">\"。\"</span>\n    \n    <span class=\"nb\">export </span><span class=\"nv\">xcodeProductName</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">buildSettingsGrepValueArray</span><span class=\"p\">[4]</span><span class=\"k\">}</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"【获取Plist参数】ProductName：\"</span><span class=\"nv\">$xcodeProductName</span><span class=\"s2\">\"。\"</span>\n    <span class=\"nb\">cd</span> ..\n<span class=\"o\">}</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<ul>\n  <li>构建号设置：</li>\n</ul>\n\n<p>​\t设置构建号，可以避免每次构建的build重复，导致在appstore后台管理构建时的紊乱，也便于追溯构建代码版本等，而如果可以通过自动化的方式进行构建号的设置就更好了，这里提供一种设置思路：获取当前日期+流水线构建号(自增)，可以构建流水线内保证全局唯一：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#自动(自增)修改构建号</span>\n<span class=\"k\">function </span>modify_build_no<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"nb\">cd</span> <span class=\"k\">${</span><span class=\"nv\">CurDir</span><span class=\"k\">}</span>/<span class=\"k\">${</span><span class=\"nv\">projectDir</span><span class=\"k\">}</span>\n    <span class=\"nb\">export </span><span class=\"nv\">BuildNo</span><span class=\"o\">=</span><span class=\"sb\">`</span><span class=\"nb\">date</span> +%Y%m%d<span class=\"sb\">`</span>\n    <span class=\"c\">#BuildNo，可以采用拼接日期+构建方式+流水线自增号来识别构建包的来源（构建方式：dailybuild、TestFlight、Release、TFInner）</span>\n    <span class=\"nv\">BuildNo</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">BuildNo</span><span class=\"k\">}</span>.<span class=\"nv\">$1</span>.<span class=\"k\">${</span><span class=\"nv\">SYS_PIPELINE_BUILD_NUMBER</span><span class=\"k\">}</span>\n<span class=\"c\">#    plist_path=${CurDir}/${projectDir}/${projectDir}/Info.plist</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"【获取Plist参数】路径：\"</span><span class=\"nv\">$plist_path</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"【设置Plist参数】build：\"</span><span class=\"nv\">$BuildNo</span>    \n<span class=\"c\">#    /usr/libexec/PlistBuddy -c \"Set :CFBundleVersion ${BuildNo}\" ${plist_path}</span>\n    agvtool new-version <span class=\"nt\">-all</span> <span class=\"k\">${</span><span class=\"nv\">BuildNo</span><span class=\"k\">}</span>\n    <span class=\"nb\">cd</span> -\n<span class=\"o\">}</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h4 id=\"222-构建中\">2.2.2 构建中：</h4>\n\n<ul>\n  <li>\n    <p>执行构建：</p>\n\n    <p>在完成了所有必要的构建前的设置之后，可以进行构建流程：</p>\n  </li>\n</ul>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#执行构建</span>\n<span class=\"k\">function </span>build<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$1</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">echo</span> <span class=\"s2\">\"error: configurationName 不能为空 退出\"</span>\n        <span class=\"nb\">exit </span>1\n    <span class=\"k\">fi</span>\n    <span class=\"c\">#定义项目前缀,生成文件时使用</span>\n    <span class=\"nb\">export </span><span class=\"nv\">PrefixID</span><span class=\"o\">=</span>PSC_\n\n    <span class=\"c\">#设置根目录</span>\n    <span class=\"nb\">export </span><span class=\"nv\">CurDir</span><span class=\"o\">=</span><span class=\"sb\">`</span><span class=\"nb\">pwd</span><span class=\"sb\">`</span>\n    \n    <span class=\"c\">#进行打包的schemeName</span>\n    <span class=\"nb\">export </span><span class=\"nv\">schemeName</span><span class=\"o\">=</span>dailybuildipa\n    \n    <span class=\"c\">#指定编译 配置 configuration</span>\n    <span class=\"nv\">configurationNameArray</span><span class=\"o\">=(</span>DailyBuild TestFlight Release TFInner<span class=\"o\">)</span>\n    <span class=\"nb\">export </span><span class=\"nv\">configurationName</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">configurationNameArray</span><span class=\"p\">[</span><span class=\"nv\">$1</span><span class=\"p\">]</span><span class=\"k\">}</span>\n\n    <span class=\"c\">#指定编译脚本路径</span>\n    <span class=\"c\">#TODO: 这里需要匹配下当前脚本所在的目录</span>\n    <span class=\"nb\">export </span><span class=\"nv\">buildsh_dir</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">CurDir</span><span class=\"k\">}</span>/PSC_iOS_Build_SH\n\n    <span class=\"c\">#设置plist参数</span>\n    modify_build_no <span class=\"nv\">$1</span>\n\n    <span class=\"c\">#读取plist参数</span>\n    initInfoPlistParms\n    \n    <span class=\"c\">#执行构建</span>\n    bash <span class=\"nv\">$buildsh_dir</span>/build_sh.sh\n<span class=\"o\">}</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>构建流程设计包括：</p>\n\n<ul>\n  <li>设置环境变量</li>\n  <li>\n    <p>设置内部变量</p>\n  </li>\n  <li>\n    <p>初始化环境</p>\n  </li>\n  <li>\n    <p>mPaas设置（可选）</p>\n  </li>\n  <li>\n    <p>执行pod</p>\n  </li>\n  <li>\n    <p>构建工具适配（可选）</p>\n  </li>\n  <li>执行构建</li>\n</ul>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n</pre></td><td class=\"rouge-code\"><pre><span class=\"k\">function </span>build<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"c\">#设置内部环境变量</span>\n    initDevopsEnv\n \n    <span class=\"c\">#设置内部环境变量</span>\n    createInternalEnv\n        \n    <span class=\"c\">#初始化环境</span>\n    init_env\n\n    <span class=\"c\">#执行pod之前，先配置mPaas在当前环境下的配置文件</span>\n    mPaaSConfigSet\n    \n    <span class=\"c\">#执行pod</span>\n    pod_install\n\n    <span class=\"c\">#fix xcode 14.3 cocoapods bug</span>\n    fiXCode143\n\n    <span class=\"c\">#执行构建</span>\n    buildProject\n\n    <span class=\"c\">#执行构建归档操作</span>\n    collection\n    \n    <span class=\"c\">#上传（发布）安装包，供下载安装</span>\n    bash <span class=\"nv\">$buildsh_dir</span>/<span class=\"nv\">$build_ext_fold</span>/<span class=\"nv\">$publish_sh</span>\n\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"k\">${</span><span class=\"nv\">configurationName</span><span class=\"k\">}</span> <span class=\"o\">=</span> <span class=\"s2\">\"DailyBuild\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then</span>\n        <span class=\"c\">#通知</span>\n        bash <span class=\"nv\">$buildsh_dir</span>/<span class=\"nv\">$build_ext_fold</span>/<span class=\"nv\">$notification_sh</span>\n    <span class=\"k\">fi</span>\n<span class=\"o\">}</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>​\t构建具体的思路可以参考源码，这里不再赘述</p>\n\n<h4 id=\"223-构建后\">2.2.3 构建后：</h4>\n\n<ul>\n  <li>归档</li>\n</ul>\n\n<p>为什么要归档：</p>\n\n<p>归档主要是为了对构建的安装包IPA及dSYM进行一一对应，由于dailybuild都是在团队内分发，因此这边考虑只有在testflight及appstore时才进行归档。</p>\n\n<p>此外；如果使用bugly进行崩溃收集，bugly已经不支持手动传dSYM，需要在构建时一并实现。</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n</pre></td><td class=\"rouge-code\"><pre><span class=\"k\">function </span>upload_dSYM<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n\t\t<span class=\"c\">#这里可以根据各自情况，存在dSYM文件</span>\n<span class=\"o\">}</span>\n\n<span class=\"k\">function </span>upload_dSYM_to_bugly<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"nb\">export </span><span class=\"nv\">p</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">dSYM_dict_PATH</span><span class=\"k\">}</span>\n    \n    <span class=\"c\">#根据不同的应用进行设置</span>\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"k\">${</span><span class=\"nv\">TARGET_NAME</span><span class=\"k\">}</span> <span class=\"o\">=</span> <span class=\"s2\">\"PSCiOS\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nv\">bugly_appid</span><span class=\"o\">=</span>xxx\n        <span class=\"nv\">bugly_appkey</span><span class=\"o\">=</span>yyy\n    <span class=\"k\">fi\n    \n    </span><span class=\"nb\">echo</span> <span class=\"s1\">'/// 上传 dsym bugly '</span><span class=\"k\">${</span><span class=\"nv\">v</span><span class=\"k\">}</span><span class=\"s1\">'pkgName='</span><span class=\"k\">${</span><span class=\"nv\">pkgName</span><span class=\"k\">}</span>\n    \n    <span class=\"c\">#切换java 版本</span>\n    java <span class=\"nt\">-version</span>\n    jdk8\n    java <span class=\"nt\">-version</span>\n    \n    <span class=\"nv\">bugly_jar_path</span><span class=\"o\">=</span><span class=\"nv\">$buildsh_dir</span>/<span class=\"nv\">$build_ext_fold</span>/collection_res/buglyqq-upload-symbol/buglyqq-upload-symbol.jar\n    \n    java <span class=\"nt\">-jar</span> <span class=\"k\">${</span><span class=\"nv\">bugly_jar_path</span><span class=\"k\">}</span> <span class=\"nt\">-appid</span> <span class=\"k\">${</span><span class=\"nv\">bugly_appid</span><span class=\"k\">}</span> <span class=\"nt\">-appkey</span> <span class=\"k\">${</span><span class=\"nv\">bugly_appkey</span><span class=\"k\">}</span> <span class=\"nt\">-bundleid</span> <span class=\"k\">${</span><span class=\"nv\">pkgName</span><span class=\"k\">}</span> <span class=\"nt\">-version</span> <span class=\"k\">${</span><span class=\"nv\">v</span><span class=\"k\">}</span> <span class=\"nt\">-platform</span> IOS <span class=\"nt\">-inputSymbol</span> <span class=\"k\">${</span><span class=\"nv\">p</span><span class=\"k\">}</span>\n<span class=\"o\">}</span>\n\n<span class=\"k\">function </span>collection<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"nb\">export </span><span class=\"nv\">v</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">xcodeVersion3number</span><span class=\"k\">}</span>.<span class=\"k\">${</span><span class=\"nv\">BuildNo</span><span class=\"k\">}</span>\n    <span class=\"nb\">export </span><span class=\"nv\">pkgName</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">xcodeBundleID</span><span class=\"k\">}</span>\n\n    <span class=\"c\">#上传到bugly符号表</span>\n    upload_dSYM_to_bugly\n\n    <span class=\"c\">#上传dSYM</span>\n    upload_dSYM\n<span class=\"o\">}</span>\n\n<span class=\"c\">#归档</span>\ncollection\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<ul>\n  <li>发布</li>\n</ul>\n\n<p>归档后，对安装包进行分发，分发也分dailybuild与release：</p>\n\n<p>dailybuild:目前采用发布到蒲公英渠道：<a href=\"#2.1.3\">2.1.3 参数3(可选)：渠道号</a></p>\n\n<p>Release:发布到AppStore</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n</pre></td><td class=\"rouge-code\"><pre>    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"k\">${</span><span class=\"nv\">configurationName</span><span class=\"k\">}</span> <span class=\"o\">=</span> <span class=\"s2\">\"Release\"</span> <span class=\"o\">]</span> <span class=\"o\">||</span> <span class=\"o\">[</span> <span class=\"k\">${</span><span class=\"nv\">configurationName</span><span class=\"k\">}</span> <span class=\"o\">=</span> <span class=\"s2\">\"TestFlight\"</span> <span class=\"o\">]</span> <span class=\"o\">||</span> <span class=\"o\">[</span> <span class=\"k\">${</span><span class=\"nv\">configurationName</span><span class=\"k\">}</span> <span class=\"o\">=</span> <span class=\"s2\">\"TFInner\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then</span>\n           <span class=\"c\">#TFInner 、TestFlight &amp; appstore 上传到appstore</span>\n        <span class=\"nb\">echo</span> <span class=\"s1\">'/// 上传App Store 开始'</span>\n        xcrun altool <span class=\"nt\">--validate-app</span> <span class=\"nt\">-f</span>  <span class=\"nv\">$IPA_PATH</span> <span class=\"nt\">--type</span>  ios  <span class=\"nt\">--apiKey</span> <span class=\"nv\">$appStore_apikey</span> <span class=\"nt\">--apiIssuer</span> <span class=\"nv\">$appStore_apiIssuer</span>\n        xcrun altool <span class=\"nt\">--upload-app</span> <span class=\"nt\">-f</span>  <span class=\"nv\">$IPA_PATH</span> <span class=\"nt\">--type</span>  ios  <span class=\"nt\">--apiKey</span> <span class=\"nv\">$appStore_apikey</span> <span class=\"nt\">--apiIssuer</span> <span class=\"nv\">$appStore_apiIssuer</span>\n        <span class=\"nb\">echo</span> <span class=\"s1\">'/// 上传App Store 结束'</span>\n\t\t<span class=\"k\">fi</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<ul>\n  <li>通知</li>\n</ul>\n\n<p>通知可以有很多种方式，由于笔者团队使用钉钉，所以这里举个钉钉机器人例子：<a href=\"#2.1.4\">2.1.4 参数4(可选)：是否静默通知</a></p>\n\n","name":"2023-08-08-iOS-话外篇-构建详解.md","previous":{"id":"/2023/08/03/iOS-客户端在内网联调时的解决方案","tags":[],"relative_path":"_posts/2023-08-03-iOS-客户端在内网联调时的解决方案.md","collection":"posts","name":"2023-08-03-iOS-客户端在内网联调时的解决方案.md","url":"/2023/08/03/iOS-%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%9C%A8%E5%86%85%E7%BD%91%E8%81%94%E8%B0%83%E6%97%B6%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/","title":"iOS客户端在内网联调时的解决方案","date":"2023-08-03 00:00:00 +0800","categories":[],"path":"_posts/2023-08-03-iOS-客户端在内网联调时的解决方案.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/home-bg-geek.jpg","slug":"iOS-客户端在内网联调时的解决方案","ext":".md"},"output":"<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"google-site-verification\" content=\"xBT4GhYoi5qRD5tr338pgPM5OWHHIDR6mNg1a3euekI\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, viewport-fit=cover\">\n    <meta name=\"description\" content=\"与你一起发现更大的世界。\">\n    <meta name=\"keywords\"  content=\"PaysonChen,iOS,流媒体\">\n    <meta name=\"theme-color\" content=\"#000000\">\n    \n    <!-- Open Graph -->\n    <meta property=\"og:title\" content=\"iOS话外篇：构建详解 - PaysonChen的博客 | PaysonChen Blog\">\n    \n    <meta property=\"og:type\" content=\"article\">\n    <meta property=\"og:description\" content=\"iOS话外篇：构建详解\n\">\n    \n    \n    <meta property=\"article:published_time\" content=\"2023-08-08T00:00:00Z\">\n    \n    \n    <meta property=\"article:author\" content=\"PaysonChen\">\n    \n    \n    \n    <meta property=\"og:image\" content=\"http://localhost:4000\">\n    <meta property=\"og:url\" content=\"http://localhost:4000/2023/08/08/iOS-%E8%AF%9D%E5%A4%96%E7%AF%87-%E6%9E%84%E5%BB%BA%E8%AF%A6%E8%A7%A3/\">\n    <meta property=\"og:site_name\" content=\"PaysonChen的博客 | PaysonChen Blog\">\n    \n    <title>iOS话外篇：构建详解 - PaysonChen的博客 | PaysonChen Blog</title>\n\n    <!-- Web App Manifest -->\n    <link rel=\"manifest\" href=\"/pwa/manifest.json\">\n\n    <!-- Favicon -->\n    <link rel=\"shortcut icon\" href=\"/img/favicon.ico\">\n    \n    <!-- Canonical URL -->\n    <link rel=\"canonical\" href=\"http://localhost:4000/2023/08/08/iOS-%E8%AF%9D%E5%A4%96%E7%AF%87-%E6%9E%84%E5%BB%BA%E8%AF%A6%E8%A7%A3/\">\n\n    <!-- Bootstrap Core CSS -->\n    <link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\">\n\n    <!-- Custom CSS -->\n    <link rel=\"stylesheet\" href=\"/css/hux-blog.min.css\">\n\n    <!-- Custom Fonts -->\n    <!-- <link href=\"http://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\"> -->\n    <!-- Hux change font-awesome CDN to qiniu -->\n    <link href=\"//cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\">\n\n\n    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->\n    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->\n    <!--[if lt IE 9]>\n        <script src=\"https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js\"></script>\n        <script src=\"https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js\"></script>\n    <![endif]-->\n\n    <!-- ga & ba script hoook -->\n    <script></script>\n</head>\n\n\n<!-- hack iOS CSS :active style -->\n<body ontouchstart=\"\">\n\n    <!-- Navigation -->\n\n    <nav class=\"navbar navbar-default navbar-custom navbar-fixed-top\">\n        \n        <div class=\"container-fluid\">\n            <!-- Brand and toggle get grouped for better mobile display -->\n            <div class=\"navbar-header page-scroll\">\n                <button type=\"button\" class=\"navbar-toggle\">\n                    <span class=\"sr-only\">Toggle navigation</span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                </button>\n                <a class=\"navbar-brand\" href=\"/\">PaysonChen Blog</a>\n            </div>\n\n            <!-- Collect the nav links, forms, and other content for toggling -->\n            <div id=\"huxblog_navbar\">\n                <div class=\"navbar-collapse\">\n                    <ul class=\"nav navbar-nav navbar-right\">\n                        <li>\n                            <a href=\"/\">Home</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        <li>\n                            <a href=\"/about/\">About</a>\n                        </li>\n                        \n                        \n                        \n                        <li>\n                            <a href=\"/archive/\">Archive</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        <li class=\"search-icon\">\n                            <a href=\"javascript:void(0)\">\n                                <i class=\"fa fa-search\"></i>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n            <!-- /.navbar-collapse -->\n        </div>\n        <!-- /.container -->\n    </nav>\n\n    <script>\n        // Drop Bootstarp low-performance Navbar\n        // Use customize navbar with high-quality material design animation\n        // in high-perf jank-free CSS3 implementation\n        var $body = document.body;\n        var $toggle = document.querySelector('.navbar-toggle');\n        var $navbar = document.querySelector('#huxblog_navbar');\n        var $collapse = document.querySelector('.navbar-collapse');\n\n        var __HuxNav__ = {\n            close: function () {\n                $navbar.className = \" \";\n                // wait until animation end.\n                setTimeout(function () {\n                    // prevent frequently toggle\n                    if ($navbar.className.indexOf('in') < 0) {\n                        $collapse.style.height = \"0px\"\n                    }\n                }, 400)\n            },\n            open: function () {\n                $collapse.style.height = \"auto\"\n                $navbar.className += \" in\";\n            }\n        }\n\n        // Bind Event\n        $toggle.addEventListener('click', function (e) {\n            if ($navbar.className.indexOf('in') > 0) {\n                __HuxNav__.close()\n            } else {\n                __HuxNav__.open()\n            }\n        })\n\n        /**\n         * Since Fastclick is used to delegate 'touchstart' globally\n         * to hack 300ms delay in iOS by performing a fake 'click',\n         * Using 'e.stopPropagation' to stop 'touchstart' event from \n         * $toggle/$collapse will break global delegation.\n         * \n         * Instead, we use a 'e.target' filter to prevent handler\n         * added to document close HuxNav.  \n         *\n         * Also, we use 'click' instead of 'touchstart' as compromise\n         */\n        document.addEventListener('click', function (e) {\n            if (e.target == $toggle) return;\n            if (e.target.className == 'icon-bar') return;\n            __HuxNav__.close();\n        })\n    </script>\n    <!-- Search -->\n<div class=\"search-page\">\n  <div class=\"search-icon-close-container\">\n    <span class=\"search-icon-close\">\n      <i class=\"fa fa-chevron-down\"></i>\n    </span>\n  </div>\n  <div class=\"search-main container\">\n    <div class=\"row\">\n      <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n        <form></form>\n        <input type=\"text\" id=\"search-input\" placeholder=\"$ grep...\">\n        </form>\n        <div id=\"search-results\" class=\"mini-post-list\"></div>\n      </div>\n    </div>\n  </div>\n</div>\n\n    <!-- Image to hack wechat -->\n<!-- <img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\"> -->\n<!-- <img src=\"/img/home-bg-geek.jpg\" width=\"0\" height=\"0\"> -->\n\n<!-- Post Header -->\n\n\n\n<style type=\"text/css\">\n    header.intro-header{\n        position: relative;\n        background-image: url('/img/home-bg-geek.jpg');\n        background: ;\n    }\n\n    \n</style>\n\n<header class=\"intro-header\" >\n\n    <div class=\"header-mask\"></div>\n    \n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <div class=\"post-heading\">\n                    <div class=\"tags\">\n                        \n                    </div>\n                    <h1>iOS话外篇：构建详解</h1>\n                    \n                    <h2 class=\"subheading\"></h2>\n                    <span class=\"meta\">Posted by PaysonChen on August 8, 2023</span>\n                </div>\n            </div>\n        </div>\n    </div>\n</header>\n\n\n\n\n\n\n<!-- Post Content -->\n<article>\n    <div class=\"container\">\n        <div class=\"row\">\n\n    <!-- Post Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                post-container\">\n\n                <!-- Multi-Lingual -->\n                \n\n\t\t\t\t<h1 id=\"ios话外篇构建详解\">iOS话外篇：构建详解</h1>\n\n<h2 id=\"1背景\">1.背景</h2>\n\n<p>想必大多数iOS开发者不陌生，通过xcode 自带的 archive 打包，习惯GUI的同学，可能更倾向于archive打包，虽然archive打包有很多优点：包括可视化、学习门槛低、报错清晰等，但是在团队协作与日常构建中，他的弊端就显现出来了：</p>\n\n<ul>\n  <li>步骤多</li>\n</ul>\n\n<p>​\t\t打包前需要同步代码、打包过程中需要选择签名、打包后要归档、并选择上传包的地方（分发渠道orAppStore）</p>\n\n<ul>\n  <li>时间长</li>\n</ul>\n\n<p>​\t\t构建时间随着工程迭代越来越漫长，大型全量打包可能到数十分钟，archive会阻断当前研发进程，无法利用本机算力之外的其他计算集群资源，影响研效</p>\n\n<ul>\n  <li>灵活不佳</li>\n</ul>\n\n<p>​\t\t构建过程中可能需要对版本的build号进行自增、归档dsym文件、构建通知等，采用archive这些都可能需要手动执行</p>\n\n<ul>\n  <li>可靠性不佳</li>\n</ul>\n\n<p>​\t\t对于分支、代码、签名、构建方式等匹配均需靠人工维护，流程步骤多，容易造成错误，不可靠</p>\n\n<h2 id=\"2构建设计\">2.构建设计</h2>\n\n<p>为了设计一个通用的构建脚本，需要将核心构建流程分层与归类，设计入参、使用构建环境等。程序入口如下：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#通过外部传参 读取自定义参数 2:target_name</span>\n<span class=\"c\"># 2 必须</span>\ncoustomSettings <span class=\"nv\">$2</span>\n\n<span class=\"c\"># 3 (可选) 蒲公英渠道号，拼接url</span>\npublishSettings <span class=\"nv\">$3</span>\n\n<span class=\"c\"># 4 (可选)是否静默通知，有值 则不发通知</span>\nnotificationSettings <span class=\"nv\">$4</span>\n\n<span class=\"c\">#开始构建 1:configuration(0:DailyBuild|1:TestFlight|2:Release|3:TFInner)</span>\n<span class=\"c\">#1 必须</span>\nbuild <span class=\"nv\">$1</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h3 id=\"21入参设计\">2.1入参设计：</h3>\n\n<h4 id=\"211参数1构建方式\">2.1.1参数1：构建方式</h4>\n\n<table>\n  <tbody>\n    <tr>\n      <td>对应工程中的Configuration ，枚举值：0:DailyBuild</td>\n      <td>1:TestFlight</td>\n      <td>2:Release</td>\n      <td>3:TFInner</td>\n    </tr>\n  </tbody>\n</table>\n\n<ul>\n  <li>\n    <p>DailyBuild：用于日常构建，CI/CD</p>\n  </li>\n  <li>\n    <p>TestFlight：用于打灰度包</p>\n  </li>\n  <li>\n    <p>Release：用于打生产包</p>\n  </li>\n  <li>\n    <p>TFInner：用于打内部TF包</p>\n\n    <p>特别说明：由于，Apple的Enterprise证书($299/年)账号申请条件苛刻，通过此方案可以临时解决100台测试设备不足的问题</p>\n  </li>\n</ul>\n\n<h4 id=\"212-参数2target名称\">2.1.2 参数2：Target名称</h4>\n\n<p>工程的TargetName：</p>\n\n<p><img src=\"/img/ios-build/iOS_Build1.png\" alt=\"iOS_Build1\" /></p>\n\n<p><a name=\"2.1.3\"></a></p>\n\n<h4 id=\"213-参数3可选渠道号\">2.1.3 参数3(可选)：渠道号</h4>\n\n<p>​\t在没有使用支持iOS app分发的流水线（类似于腾讯蓝鲸（蓝盾流水线））情况下：本文例子使用蒲公英进行应用分发，为了兼容多渠道并行，用于拼接分发下载地址的url。</p>\n\n<p><img src=\"/img/ios-build/iOS_Build2.png\" alt=\"iOS_Build2\" /></p>\n\n<h5 id=\"2131-第三方分发蒲公英\">2.1.3.1 第三方分发：蒲公英</h5>\n\n<p>​\t流水线通过API进行应用分发，下面说明，渠道号为空与非空的情况：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n</pre></td><td class=\"rouge-code\"><pre>  <span class=\"c\">#其他构建包上传到pgy</span>\n        <span class=\"nb\">echo</span> <span class=\"s1\">'/// 上传 PGY 开始 IPA_PATH='</span><span class=\"k\">${</span><span class=\"nv\">IPA_PATH</span><span class=\"k\">}</span>\n        <span class=\"nb\">echo</span> <span class=\"s1\">'/// 上传 PGY 开始 渠道='</span><span class=\"k\">${</span><span class=\"nv\">pgyChannel</span><span class=\"k\">}</span>\n        <span class=\"nv\">compileEnvironment</span><span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">buildName</span><span class=\"k\">}</span><span class=\"s2\">:</span><span class=\"k\">${</span><span class=\"nv\">git_log</span><span class=\"k\">}</span><span class=\"s2\">\"</span>\n        \n        <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$pgyChannel</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then</span>\n            <span class=\"c\"># 渠道空，则走默认 不指定渠道号的上传</span>\n            curl <span class=\"nt\">-F</span> <span class=\"s1\">'file=@'</span><span class=\"k\">${</span><span class=\"nv\">IPA_PATH</span><span class=\"k\">}</span> <span class=\"nt\">-F</span> <span class=\"s1\">'_api_key='</span><span class=\"k\">${</span><span class=\"nv\">pgyAPIKey</span><span class=\"k\">}</span> <span class=\"nt\">-F</span> <span class=\"s1\">'buildUpdateDescription='</span><span class=\"k\">${</span><span class=\"nv\">compileEnvironment</span><span class=\"k\">}</span> https://www.pgyer.com/apiv2/app/upload\n        <span class=\"k\">else</span>\n            <span class=\"c\"># 渠道非空，走下载地址关联 渠道</span>\n            curl <span class=\"nt\">-F</span> <span class=\"s1\">'file=@'</span><span class=\"k\">${</span><span class=\"nv\">IPA_PATH</span><span class=\"k\">}</span> <span class=\"nt\">-F</span> <span class=\"s1\">'_api_key='</span><span class=\"k\">${</span><span class=\"nv\">pgyAPIKey</span><span class=\"k\">}</span> <span class=\"nt\">-F</span> <span class=\"s1\">'buildUpdateDescription='</span><span class=\"k\">${</span><span class=\"nv\">compileEnvironment</span><span class=\"k\">}</span>  <span class=\"nt\">-F</span> <span class=\"s1\">'buildChannelShortcut='</span><span class=\"k\">${</span><span class=\"nv\">pgyDownloadUrlSubfix</span><span class=\"k\">}</span> https://www.pgyer.com/apiv2/app/upload\n        <span class=\"k\">fi\n                \n        </span><span class=\"nb\">echo</span> <span class=\"s1\">'/// 上传 PGY 结束'</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h5 id=\"2132-扩展阿里云oss云存储分发\">2.1.3.2 扩展：阿里云OSS云存储分发</h5>\n\n<p>基于蒲公英的分发受限于蒲公英上行带宽与收费阈值，探索一种容灾分发方式，避免蒲公英未来服务出现异常时的健壮性。</p>\n\n<p>自行分发需要用Ad-Hoc方式，遵循Apple协议：itms-services://?action=download-manifest&amp;url=</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#添加commit信息到二维码图片上</span>\n<span class=\"k\">function </span>add_log_commit_title_msg_to_qrcode <span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"c\">#二维码打上版本信息</span>\n    <span class=\"c\">#TODO: 这里需要安装下工具 ImageMgick [brew install ImageMgick]</span>\n    <span class=\"nv\">title</span><span class=\"o\">=</span><span class=\"nv\">$xcodeVersion3number</span>.<span class=\"k\">${</span><span class=\"nv\">channel_name</span><span class=\"k\">}</span>.<span class=\"nv\">$configurationName</span>.<span class=\"k\">${</span><span class=\"nv\">BuildNo</span><span class=\"k\">}</span>\n\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nv\">$1</span> <span class=\"o\">=</span> <span class=\"s2\">\"1\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nv\">dst_line_cnt</span><span class=\"o\">=</span>0\n        <span class=\"nb\">export </span><span class=\"nv\">oss_source_log_arr</span><span class=\"o\">=(</span><span class=\"sb\">`</span><span class=\"nb\">echo</span> <span class=\"nv\">$source_log_str</span> | <span class=\"nb\">tr</span> <span class=\"s1\">']['</span> <span class=\"s1\">' '</span><span class=\"sb\">`</span><span class=\"o\">)</span>\n        <span class=\"nb\">export </span><span class=\"nv\">oss_log_line_count</span><span class=\"o\">=</span><span class=\"k\">${#</span><span class=\"nv\">oss_source_log_arr</span><span class=\"p\">[@]</span><span class=\"k\">}</span>\n        <span class=\"nb\">echo</span> <span class=\"s1\">'/// oss 分发： 添加 二维码msg log_line_count='</span><span class=\"nv\">$oss_log_line_count</span>\n\n        <span class=\"k\">for</span><span class=\"o\">((</span> <span class=\"nv\">i</span><span class=\"o\">=</span>0<span class=\"p\">;</span>i&lt;<span class=\"k\">${</span><span class=\"nv\">oss_log_line_count</span><span class=\"k\">}</span><span class=\"p\">;</span>i++<span class=\"o\">))</span>\n        <span class=\"k\">do\n            </span><span class=\"nv\">single_len</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">echo</span> <span class=\"nt\">-n</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">oss_source_log_arr</span><span class=\"p\">[i]</span><span class=\"k\">}</span><span class=\"s2\">\"</span> | <span class=\"nb\">wc</span> <span class=\"nt\">-m</span><span class=\"si\">)</span>\n            <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">oss_source_log_arr</span><span class=\"p\">[i]</span><span class=\"k\">}</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n                </span><span class=\"nv\">oss_singleStr</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">oss_source_log_arr</span><span class=\"p\">[i]</span><span class=\"k\">}</span><span class=\"p\">;</span>\n                <span class=\"nb\">echo</span> <span class=\"s1\">'///--遍历'</span><span class=\"k\">${</span><span class=\"nv\">oss_source_log_arr</span><span class=\"p\">[i]</span><span class=\"k\">}</span><span class=\"s1\">'为空文字长度：'</span><span class=\"nv\">$single_len</span>\n                <span class=\"nv\">dst_line_cnt</span><span class=\"o\">=</span><span class=\"k\">$((</span>dst_line_cnt+1<span class=\"k\">))</span>\n            <span class=\"k\">else\n                </span><span class=\"nv\">line_max_len</span><span class=\"o\">=</span>30\n                <span class=\"nv\">ingle_cnt</span><span class=\"o\">=</span><span class=\"k\">$((</span>single_len <span class=\"o\">/</span> line_max_len<span class=\"k\">))</span>\n\n\n                <span class=\"k\">if</span> <span class=\"o\">((</span>ingle_cnt <span class=\"o\">&gt;</span> 0<span class=\"o\">))</span><span class=\"p\">;</span> <span class=\"k\">then\n                    for</span><span class=\"o\">((</span> <span class=\"nv\">j</span><span class=\"o\">=</span>0<span class=\"p\">;</span>j&lt;<span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">ingle_cnt</span><span class=\"k\">}</span><span class=\"p\">;</span>j++<span class=\"o\">))</span>\n                    <span class=\"k\">do\n                        </span><span class=\"nv\">string</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">oss_source_log_arr</span><span class=\"p\">[i]</span><span class=\"k\">}</span>\n                        <span class=\"nv\">single_line1</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">string</span>:<span class=\"p\">(line_max_len * j)</span>:line_max_len<span class=\"k\">}</span>\n                        <span class=\"nb\">echo</span> <span class=\"s1\">'///--遍历'</span> <span class=\"k\">${</span><span class=\"nv\">oss_source_log_arr</span><span class=\"p\">[i]</span><span class=\"k\">}</span><span class=\"s1\">'文字长度：'</span><span class=\"nv\">$single_len</span><span class=\"s1\">'超阈值阶段：第'</span><span class=\"nv\">$j</span><span class=\"s1\">'行:'</span><span class=\"nv\">$single_line1</span>\n                        oss_singleStr+<span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"se\">\\n</span><span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">single_line1</span><span class=\"k\">}</span><span class=\"p\">;</span>\n                        <span class=\"nv\">dst_line_cnt</span><span class=\"o\">=</span><span class=\"k\">$((</span>dst_line_cnt+1<span class=\"k\">))</span>\n                    <span class=\"k\">done</span><span class=\"p\">;</span>\n                <span class=\"k\">else\n                    </span><span class=\"nb\">echo</span> <span class=\"s1\">'///--遍历'</span> <span class=\"k\">${</span><span class=\"nv\">oss_source_log_arr</span><span class=\"p\">[i]</span><span class=\"k\">}</span><span class=\"s1\">' 文字长度：'</span><span class=\"nv\">$single_len</span>\n                    <span class=\"nv\">dst_line_cnt</span><span class=\"o\">=</span><span class=\"k\">$((</span>dst_line_cnt+1<span class=\"k\">))</span>\n                    oss_singleStr+<span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"se\">\\n</span><span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">oss_source_log_arr</span><span class=\"p\">[i]</span><span class=\"k\">}</span><span class=\"p\">;</span>\n                <span class=\"k\">fi\n            fi\n        done</span><span class=\"p\">;</span>\n        <span class=\"nv\">msg</span><span class=\"o\">=</span><span class=\"nv\">$oss_singleStr</span>\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"/// oss render msg=\"</span><span class=\"nv\">$msg</span>\n        \n        <span class=\"nv\">contentsize_width</span><span class=\"o\">=</span>600\n        <span class=\"nv\">contentsize_height</span><span class=\"o\">=</span><span class=\"k\">$((</span>contentsize_width <span class=\"o\">+</span> <span class=\"nv\">$dst_line_cnt</span> <span class=\"o\">*</span> <span class=\"m\">25</span> <span class=\"o\">+</span> <span class=\"m\">40</span> <span class=\"o\">+</span> <span class=\"m\">40</span><span class=\"k\">))</span> <span class=\"c\">#第一个40是title的高度 第二个40是距离底部空间</span>\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"contentsize_height=\"</span><span class=\"nv\">$contentsize_height</span>\n        <span class=\"c\">#改变原图大小</span>\n        convert <span class=\"nv\">$qrcode_path</span> <span class=\"nt\">-resize</span> <span class=\"k\">${</span><span class=\"nv\">contentsize_width</span><span class=\"k\">}</span>x<span class=\"k\">${</span><span class=\"nv\">contentsize_width</span><span class=\"k\">}</span>^ <span class=\"nt\">-gravity</span> center <span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span>_1.png\n\n        <span class=\"c\">#变高，兼容msg</span>\n        convert <span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span>_1.png <span class=\"nt\">-gravity</span> north <span class=\"nt\">-extent</span> <span class=\"k\">${</span><span class=\"nv\">contentsize_width</span><span class=\"k\">}</span>x<span class=\"k\">${</span><span class=\"nv\">contentsize_height</span><span class=\"k\">}</span> <span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span>_2.png\n\n        <span class=\"c\">#汉字字体</span>\n        <span class=\"nv\">chn_tff_path</span><span class=\"o\">=</span><span class=\"nv\">$build_ext_path</span>/publish_res/chn.ttf\n        \n        <span class=\"c\">#渲染title</span>\n        convert <span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span>_2.png <span class=\"nt\">-gravity</span> north <span class=\"nt\">-pointsize</span> 30 <span class=\"nt\">-font</span> <span class=\"nv\">$chn_tff_path</span> <span class=\"nt\">-fill</span> black <span class=\"nt\">-annotate</span> +0+<span class=\"k\">${</span><span class=\"nv\">contentsize_width</span><span class=\"k\">}</span> <span class=\"nv\">$title</span> <span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span>_3.png\n\n        <span class=\"c\">#渲染msg</span>\n        convert <span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span>_3.png <span class=\"nt\">-gravity</span> north <span class=\"nt\">-pointsize</span> 20 <span class=\"nt\">-font</span> <span class=\"nv\">$chn_tff_path</span> <span class=\"nt\">-fill</span> black <span class=\"nt\">-annotate</span> +0+<span class=\"k\">$((${</span><span class=\"nv\">contentsize_width</span><span class=\"k\">}</span><span class=\"o\">+</span><span class=\"m\">40</span><span class=\"k\">))</span> <span class=\"nv\">$msg</span> <span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span>_4.png\n        <span class=\"nv\">qrcode_path_with_msg</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span>_4.png\n    <span class=\"k\">else</span>\n        <span class=\"c\">#没有传 1 不需要msg，只给title</span>\n        convert <span class=\"nv\">$qrcode_path</span> <span class=\"nt\">-gravity</span> south <span class=\"nt\">-pointsize</span> 10 <span class=\"nt\">-fill</span> gray <span class=\"nt\">-annotate</span> +0+0 <span class=\"nv\">$qrcode_print_msg</span>  <span class=\"nv\">$qrcode_path_with_msg</span>\n        <span class=\"nb\">echo</span> <span class=\"s1\">'/// oss 分发： 添加 二维码title='</span><span class=\"k\">${</span><span class=\"nv\">title</span><span class=\"k\">}</span>\n    <span class=\"k\">fi</span>\n\n<span class=\"o\">}</span>\n\n<span class=\"c\">#发布到阿里云OSS</span>\n<span class=\"k\">function </span>upload_ipa_to_aliyunOSS <span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"c\">#更新plist的键值对：</span>\n    <span class=\"nv\">manifest_path</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">exportPath</span><span class=\"k\">}</span>/manifest.plist\n    <span class=\"nb\">echo</span> <span class=\"s1\">'/// oss 分发： manifest_path='</span><span class=\"k\">${</span><span class=\"nv\">manifest_path</span><span class=\"k\">}</span>\n    \n    <span class=\"nv\">oss_bucket</span><span class=\"o\">=</span><span class=\"s2\">\"cbs-apps-test\"</span>\n    <span class=\"nv\">oss_platform</span><span class=\"o\">=</span><span class=\"s2\">\"iOS\"</span>\n    <span class=\"nv\">oss_bucket_path</span><span class=\"o\">=</span><span class=\"nv\">$oss_platform</span>/<span class=\"k\">${</span><span class=\"nv\">TARGET_NAME</span><span class=\"k\">}</span>/<span class=\"nv\">$configurationName</span>/<span class=\"k\">${</span><span class=\"nv\">channel_name</span><span class=\"k\">}</span>/<span class=\"k\">${</span><span class=\"nv\">BuildNo</span><span class=\"k\">}</span>/<span class=\"k\">${</span><span class=\"nv\">TARGET_NAME</span><span class=\"k\">}</span>_<span class=\"k\">${</span><span class=\"nv\">channel_name</span><span class=\"k\">}</span>_<span class=\"nv\">$configurationName_</span><span class=\"k\">${</span><span class=\"nv\">BuildNo</span><span class=\"k\">}</span>\n    <span class=\"nv\">oss_path</span><span class=\"o\">=</span><span class=\"s2\">\"oss://</span><span class=\"nv\">$oss_bucket</span><span class=\"s2\">/</span><span class=\"nv\">$oss_bucket_path</span><span class=\"s2\">\"</span>\n    <span class=\"nv\">oss_url</span><span class=\"o\">=</span><span class=\"s2\">\"https://</span><span class=\"nv\">$oss_bucket</span><span class=\"s2\">.oss-cn-beijing.aliyuncs.com/</span><span class=\"nv\">$oss_bucket_path</span><span class=\"s2\">\"</span>\n\n    <span class=\"nv\">oss_ipa_upload_url</span><span class=\"o\">=</span><span class=\"nv\">$oss_path</span><span class=\"s2\">\".ipa\"</span>\n    <span class=\"nv\">oss_ipa_url</span><span class=\"o\">=</span><span class=\"nv\">$oss_url</span><span class=\"s2\">\".ipa\"</span>\n\n    <span class=\"c\">#icon下载地址配置</span>\n    <span class=\"nv\">oss_icon_url</span><span class=\"o\">=</span><span class=\"s2\">\"https://cbs-apps-test.oss-cn-beijing.aliyuncs.com/iOS/</span><span class=\"k\">${</span><span class=\"nv\">TARGET_NAME</span><span class=\"k\">}</span><span class=\"s2\">/icon/icon.png\"</span>\n    <span class=\"nv\">oss_icon_fs_url</span><span class=\"o\">=</span><span class=\"s2\">\"https://cbs-apps-test.oss-cn-beijing.aliyuncs.com/iOS/</span><span class=\"k\">${</span><span class=\"nv\">TARGET_NAME</span><span class=\"k\">}</span><span class=\"s2\">/icon/icon_fs.png\"</span>\n\n    \n    <span class=\"c\">#修改ipa下载地址</span>\n    /usr/libexec/PlistBuddy <span class=\"nt\">-c</span> <span class=\"s2\">\"Set :items:0:assets:0:url </span><span class=\"nv\">$oss_ipa_url</span><span class=\"s2\">\"</span> <span class=\"nv\">$manifest_path</span>\n\n    <span class=\"c\">#修改icon地址</span>\n    /usr/libexec/PlistBuddy <span class=\"nt\">-c</span> <span class=\"s2\">\"Set :items:0:assets:1:url </span><span class=\"nv\">$oss_icon_url</span><span class=\"s2\">\"</span> <span class=\"nv\">$manifest_path</span>\n\n    <span class=\"c\">#修改icon full size地址</span>\n    /usr/libexec/PlistBuddy <span class=\"nt\">-c</span> <span class=\"s2\">\"Set :items:0:assets:2:url </span><span class=\"nv\">$oss_icon_fs_url</span><span class=\"s2\">\"</span> <span class=\"nv\">$manifest_path</span>\n\n\n    <span class=\"c\">#传ipa</span>\n    ossutil <span class=\"nb\">cp</span> <span class=\"k\">${</span><span class=\"nv\">IPA_PATH</span><span class=\"k\">}</span> <span class=\"nv\">$oss_ipa_upload_url</span> <span class=\"nt\">-f</span>\n    \n    <span class=\"c\">#传manifest</span>\n    <span class=\"nv\">oss_manifest_extension</span><span class=\"o\">=</span><span class=\"s2\">\"plist\"</span>\n    <span class=\"nv\">oss_manifest_upload_url</span><span class=\"o\">=</span><span class=\"nv\">$oss_path</span><span class=\"s2\">\".\"</span><span class=\"nv\">$oss_manifest_extension</span>\n    <span class=\"nv\">oss_manifest_url</span><span class=\"o\">=</span><span class=\"nv\">$oss_url</span><span class=\"s2\">\".\"</span><span class=\"nv\">$oss_manifest_extension</span>\n    ossutil <span class=\"nb\">cp</span> <span class=\"k\">${</span><span class=\"nv\">manifest_path</span><span class=\"k\">}</span> <span class=\"nv\">$oss_manifest_upload_url</span> <span class=\"nt\">-f</span>\n    \n    <span class=\"c\">#上述做归档后，生成下载二维码</span>\n    <span class=\"nv\">download_url</span><span class=\"o\">=</span><span class=\"s2\">\"itms-services://?action=download-manifest&amp;url=\"</span><span class=\"nv\">$oss_manifest_url</span>\n    <span class=\"nv\">qrcode_path</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">exportPath</span><span class=\"k\">}</span>/<span class=\"k\">${</span><span class=\"nv\">TARGET_NAME</span><span class=\"k\">}</span>_<span class=\"k\">${</span><span class=\"nv\">BuildNo</span><span class=\"k\">}</span>.png\n    \n    <span class=\"c\">#TODO: 这里需要安装下工具 qrencode [brew install qrencode]</span>\n    qrencode <span class=\"nt\">-o</span> <span class=\"nv\">$qrcode_path</span> <span class=\"nv\">$download_url</span>\n    \n    <span class=\"c\">#将二维码上传到oss</span>\n    <span class=\"nv\">oss_qrencode_extension</span><span class=\"o\">=</span><span class=\"s2\">\"png\"</span>\n    <span class=\"nv\">oss_qrencode_upload_url</span><span class=\"o\">=</span><span class=\"nv\">$oss_path</span><span class=\"s2\">\".\"</span><span class=\"nv\">$oss_qrencode_extension</span>\n    <span class=\"nv\">qrcode_path_with_msg</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span>_with_msg\n        \n    <span class=\"c\">#如果需要二维码打上log信息则调用</span>\n    <span class=\"nv\">need_msg</span><span class=\"o\">=</span>1\n    add_log_commit_title_msg_to_qrcode <span class=\"nv\">$need_msg</span>\n        \n    <span class=\"c\">#上传到阿里云oss</span>\n    ossutil <span class=\"nb\">cp</span> <span class=\"k\">${</span><span class=\"nv\">qrcode_path_with_msg</span><span class=\"k\">}</span> <span class=\"nv\">$oss_qrencode_upload_url</span> <span class=\"nt\">-f</span>\n    \n    <span class=\"c\">#二维码的url 通知出来</span>\n    <span class=\"nb\">export </span><span class=\"nv\">oss_app_download_qrcode_url</span><span class=\"o\">=</span><span class=\"nv\">$oss_url</span><span class=\"s2\">\".\"</span><span class=\"nv\">$oss_qrencode_extension</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'/// oss 分发： 二维码的oss_app_download_qrcode_url='</span><span class=\"k\">${</span><span class=\"nv\">oss_app_download_qrcode_url</span><span class=\"k\">}</span>\n<span class=\"o\">}</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p><a name=\"2.1.4\"></a></p>\n\n<h4 id=\"214-参数4可选是否静默通知\">2.1.4 参数4(可选)：是否静默通知</h4>\n\n<p>​\t本文例子通过钉钉API发送通知到钉钉群，默认不填发送，有值则不发通知，通知内容整合双分发方案：</p>\n\n<p>​\t下面代码为发送通知的逻辑，请将相应的变量替换成自己的参数</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n</pre></td><td class=\"rouge-code\"><pre>    <span class=\"nv\">modify_msg</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">git_log</span><span class=\"k\">}</span>\n    <span class=\"nv\">ProductName</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">xcodeProductName</span><span class=\"k\">}</span>\n    <span class=\"nv\">downloadPrefix</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">PrefixID</span><span class=\"k\">}</span>\n    <span class=\"nv\">channel</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">pgyChannel</span><span class=\"k\">}</span>\n    <span class=\"nv\">title</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">buildName</span><span class=\"k\">}</span>\n\n    <span class=\"c\">#采用直接 拼 channel后缀</span>\n    <span class=\"nv\">shortUrl</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">downloadPrefix</span><span class=\"k\">}${</span><span class=\"nv\">ProductName</span><span class=\"k\">}${</span><span class=\"nv\">channel</span><span class=\"k\">}</span>\n\n    <span class=\"c\">#蒲公英下载地址</span>\n    <span class=\"nv\">pgy_app_donwnload_url</span><span class=\"o\">=</span><span class=\"s2\">\"https://www.pgyer.com/</span><span class=\"k\">${</span><span class=\"nv\">shortUrl</span><span class=\"k\">}</span><span class=\"s2\">\"</span>\n    \n   <span class=\"c\">#oss下载地址</span>\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$oss_app_download_qrcode_url</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then</span>\n        <span class=\"c\">#为空则使用pgy</span>\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"通知：oss_app_download_qrcode_url 为空则使用pgy：'</span><span class=\"k\">${</span><span class=\"nv\">app_donwnload_url</span><span class=\"k\">}</span><span class=\"s2\">'\"</span>\n        <span class=\"nv\">app_donwnload_url</span><span class=\"o\">=</span><span class=\"nv\">$pgy_app_donwnload_url</span>\n    <span class=\"k\">else</span>\n        <span class=\"c\">#不为空使用 pgy + oss</span>\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"通知：oss_app_download_qrcode_url 不为空使用 pgy + oss则使用pgy + oss：'</span><span class=\"k\">${</span><span class=\"nv\">app_donwnload_url</span><span class=\"k\">}</span><span class=\"s2\">' and '</span><span class=\"nv\">$oss_app_download_qrcode_url</span><span class=\"s2\">'\"</span>\n        <span class=\"nv\">app_donwnload_url</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">pgy_app_donwnload_url</span><span class=\"k\">}</span><span class=\"s1\">'\\n'</span>oss下载地址:<span class=\"nv\">$oss_app_download_qrcode_url</span>\n    <span class=\"k\">fi</span>\n<span class=\"c\">#    app_donwnload_url=$oss_app_download_qrcode_url</span>\n    \n    <span class=\"nb\">echo</span> <span class=\"s2\">\"通知 COME下载地址：'</span><span class=\"k\">${</span><span class=\"nv\">app_donwnload_url</span><span class=\"k\">}</span><span class=\"s2\">'\"</span>\n\n    \n    curl <span class=\"s1\">'https://oapi.dingtalk.com/robot/send?access_token='</span><span class=\"k\">${</span><span class=\"nv\">access_token</span><span class=\"k\">}</span> <span class=\"se\">\\</span>\n        <span class=\"nt\">-H</span> <span class=\"s1\">'Content-Type: application/json'</span> <span class=\"se\">\\</span>\n        <span class=\"nt\">-d</span> <span class=\"s1\">'{\"msgtype\": \"text\",\n            \"at\": {\n            \"atMobiles\":[\n                \"这\"\n                \"里\"\n                \"是\"\n                \"钉\"\n                \"钉\"\n                \"账\"\n                \"号\"\n            ],\n            \"isAtAll\": false\n            },\n             \"text\": {\n                  \"content\": \"'</span><span class=\"k\">${</span><span class=\"nv\">ProductName</span><span class=\"k\">}</span><span class=\"s1\">' App更新：'</span><span class=\"k\">${</span><span class=\"nv\">title</span><span class=\"k\">}</span><span class=\"s1\">'\\n'</span><span class=\"k\">${</span><span class=\"nv\">modify_msg</span><span class=\"k\">}</span><span class=\"s1\">'\\n下载地址：https://www.pgyer.com/'</span><span class=\"k\">${</span><span class=\"nv\">app_donwnload_url</span><span class=\"k\">}</span><span class=\"s1\">'\"            }\n           }'</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'///-------------------------------------------------------'</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'/// 发送通知 '</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'///-------------------------------------------------------'</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h3 id=\"22-流程设计\">2.2 流程设计：</h3>\n\n<h4 id=\"221-构建前\">2.2.1 构建前：</h4>\n\n<ul>\n  <li>入参设置</li>\n</ul>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#入参设置</span>\n<span class=\"k\">function </span>coustomSettings<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"c\">#需要打包的target</span>\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$1</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">echo</span> <span class=\"s2\">\"error: TARGET_NAME 不能为空 退出\"</span>\n        <span class=\"nb\">exit </span>1\n    <span class=\"k\">else\n        </span><span class=\"nb\">export </span><span class=\"nv\">TARGET_NAME</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n    <span class=\"k\">fi</span>\n\n    <span class=\"c\">#工程所在目录，如果在根目录则为${WORKSPACE}</span>\n    \n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$2</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">export </span><span class=\"nv\">projectDir</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">TARGET_NAME</span><span class=\"k\">}</span>\n    <span class=\"k\">else\n        </span><span class=\"nb\">export </span><span class=\"nv\">projectDir</span><span class=\"o\">=</span><span class=\"nv\">$2</span>\n    <span class=\"k\">fi</span>\n<span class=\"c\">#    export projectDir=YPCProject</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"TARGET_NAME=\"</span><span class=\"nv\">$TARGET_NAME</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"projectDir=\"</span><span class=\"nv\">$projectDir</span>\n\n<span class=\"o\">}</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<ul>\n  <li>发布设置：</li>\n</ul>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#发布及归档的相关的设置</span>\n<span class=\"k\">function </span>publishSettings<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$1</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">echo</span> <span class=\"s1\">'///渠道号入参 为空'</span>\n        <span class=\"nb\">export </span><span class=\"nv\">pgyChannel</span><span class=\"o\">=</span>Dev\n    <span class=\"k\">else\n        </span><span class=\"nb\">echo</span> <span class=\"s1\">'///渠道号入参 不为空'</span>\n        <span class=\"nb\">export </span><span class=\"nv\">pgyChannel</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n    <span class=\"k\">fi\n    \n    </span><span class=\"nb\">echo</span> <span class=\"s2\">\"////渠道号\"</span><span class=\"k\">${</span><span class=\"nv\">pgyChannel</span><span class=\"k\">}</span>\n    \n    <span class=\"c\">#声明蒲公英分发调用APi的pgyAPIKey</span>\n    <span class=\"nb\">export </span><span class=\"nv\">pgyAPIKey</span><span class=\"o\">=</span><span class=\"s2\">\"pgyAPIKey\"</span>\n    \n    <span class=\"c\">#钉钉发送通知机器人的access_token</span>\n    <span class=\"nb\">export </span><span class=\"nv\">access_token</span><span class=\"o\">=</span><span class=\"s2\">\"access_token\"</span>\n\n    <span class=\"c\">#AppStore的token</span>\n    <span class=\"nb\">export </span><span class=\"nv\">appStore_apiIssuer</span><span class=\"o\">=</span><span class=\"s2\">\"appStore_apiIssuer\"</span>\n    <span class=\"nb\">export </span><span class=\"nv\">appStore_apikey</span><span class=\"o\">=</span><span class=\"s2\">\"appStore_apikey\"</span>\n            \n    <span class=\"c\">#bugly的token</span>\n    <span class=\"nb\">export </span><span class=\"nv\">bugly_appid</span><span class=\"o\">=</span><span class=\"s2\">\"bugly_appid\"</span>\n    <span class=\"nb\">export </span><span class=\"nv\">bugly_appkey</span><span class=\"o\">=</span><span class=\"s2\">\"bugly_appkey\"</span>\n<span class=\"o\">}</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<ul>\n  <li>通知设置</li>\n</ul>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#通知相关的设置（pgy渠道及apikey）</span>\n<span class=\"k\">function </span>notificationSettings<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"nv\">notificationSettings</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"k\">${</span><span class=\"nv\">notificationSettings</span><span class=\"k\">}</span> <span class=\"o\">=</span> <span class=\"s2\">\"1\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">echo</span> <span class=\"s1\">'///静默入参 不为空'</span>\n        <span class=\"nb\">export </span><span class=\"nv\">notificationSilent</span><span class=\"o\">=</span><span class=\"nv\">$notificationSettings</span>\n    <span class=\"k\">else\n        </span><span class=\"nb\">echo</span> <span class=\"s1\">'///静默入参 为空 或者不为1 不发通知'</span>\n    <span class=\"k\">fi\n    \n    </span><span class=\"nb\">echo</span> <span class=\"s2\">\"////静默通知=\"</span><span class=\"k\">${</span><span class=\"nv\">notificationSilent</span><span class=\"k\">}</span>\n<span class=\"o\">}</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<ul>\n  <li>\n    <p>参数获取:</p>\n\n    <p>通过xcode工具获取工程项目自带的参数</p>\n  </li>\n</ul>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#获取工程配置信息</span>\n<span class=\"k\">function </span>initInfoPlistParms<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"c\">#Plist先写死。后续可考虑改成搜索</span>\n    <span class=\"nb\">cd</span> <span class=\"k\">${</span><span class=\"nv\">CurDir</span><span class=\"k\">}</span>/<span class=\"k\">${</span><span class=\"nv\">projectDir</span><span class=\"k\">}</span>\n    <span class=\"nv\">versionKey</span><span class=\"o\">=</span><span class=\"s2\">\"MARKETING_VERSION\"</span>\n    <span class=\"nv\">bundleID</span><span class=\"o\">=</span><span class=\"s2\">\"PRODUCT_BUNDLE_IDENTIFIER\"</span>\n    <span class=\"nv\">bundleNo</span><span class=\"o\">=</span><span class=\"s2\">\"CURRENT_PROJECT_VERSION\"</span>\n    <span class=\"nv\">platformName</span><span class=\"o\">=</span><span class=\"s2\">\"PLATFORM_NAME\"</span>\n    <span class=\"nv\">productName</span><span class=\"o\">=</span><span class=\"s2\">\"PRODUCT_NAME\"</span>\n    <span class=\"c\">#将要获取的key设置成数组</span>\n    <span class=\"nv\">buildSettingsGrepKeyArray</span><span class=\"o\">=(</span><span class=\"nv\">$versionKey</span> <span class=\"nv\">$bundleID</span> <span class=\"nv\">$bundleNo</span> <span class=\"nv\">$platformName</span> <span class=\"nv\">$productName</span><span class=\"o\">)</span>\n    <span class=\"nv\">buildSettingsGrepKey</span><span class=\"o\">=</span><span class=\"s2\">\"\"</span>\n    <span class=\"k\">for</span><span class=\"o\">((</span> <span class=\"nv\">i</span><span class=\"o\">=</span>0<span class=\"p\">;</span>i&lt;<span class=\"k\">${#</span><span class=\"nv\">buildSettingsGrepKeyArray</span><span class=\"p\">[@]</span><span class=\"k\">}</span><span class=\"p\">;</span>i++<span class=\"o\">))</span>\n    <span class=\"k\">do\n        </span><span class=\"nb\">echo</span> <span class=\"s2\">\"【获取Plist参数】遍历 idx=\"</span><span class=\"nv\">$i</span> <span class=\"s2\">\"value=\"</span> <span class=\"k\">${</span><span class=\"nv\">buildSettingsGrepKeyArray</span><span class=\"p\">[i]</span><span class=\"k\">}</span>\n        <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$buildSettingsGrepKey</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n            </span><span class=\"nv\">buildSettingsGrepKey</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">buildSettingsGrepKeyArray</span><span class=\"p\">[i]</span><span class=\"k\">}</span><span class=\"p\">;</span>\n        <span class=\"k\">else\n            </span>buildSettingsGrepKey+<span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"se\">\\|</span><span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">buildSettingsGrepKeyArray</span><span class=\"p\">[i]</span><span class=\"k\">}</span><span class=\"p\">;</span>\n        <span class=\"k\">fi\n    done</span><span class=\"p\">;</span>\n    <span class=\"c\">#将数组拼接成 grep 参数</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"【获取Plist参数】key：\"</span><span class=\"nv\">$buildSettingsGrepKey</span>\n\n    <span class=\"c\">#-w 防止模糊匹配 比如  PRODUCT_NAME 和 FULL_PRODUCT_NAME</span>\n    <span class=\"nv\">buildSettings</span><span class=\"o\">=</span><span class=\"sb\">`</span>xcodebuild <span class=\"nt\">-showBuildSettings</span> <span class=\"nt\">-target</span> <span class=\"k\">${</span><span class=\"nv\">TARGET_NAME</span><span class=\"k\">}</span> | <span class=\"nb\">grep</span> <span class=\"nt\">-w</span> <span class=\"nv\">$buildSettingsGrepKey</span><span class=\"sb\">`</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"【获取Plist参数】result：\"</span><span class=\"nv\">$buildSettings</span>\n    \n    <span class=\"c\">#取值数组</span>\n    <span class=\"nv\">buildSettingsGrepValueArray</span><span class=\"o\">=[]</span>\n    <span class=\"k\">for</span><span class=\"o\">((</span> <span class=\"nv\">i</span><span class=\"o\">=</span>0<span class=\"p\">;</span>i&lt;<span class=\"k\">${#</span><span class=\"nv\">buildSettingsGrepKeyArray</span><span class=\"p\">[@]</span><span class=\"k\">}</span><span class=\"p\">;</span>i++<span class=\"o\">))</span>\n    <span class=\"k\">do</span>\n        <span class=\"c\">#右截断</span>\n        <span class=\"nv\">value</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">buildSettings</span><span class=\"p\">#*</span><span class=\"k\">${</span><span class=\"nv\">buildSettingsGrepKeyArray</span><span class=\"p\">[i]</span><span class=\"k\">}</span><span class=\"p\"> = </span><span class=\"k\">}</span>\n        <span class=\"k\">for</span><span class=\"o\">((</span> <span class=\"nv\">j</span><span class=\"o\">=</span>0<span class=\"p\">;</span>j&lt;<span class=\"k\">${#</span><span class=\"nv\">buildSettingsGrepKeyArray</span><span class=\"p\">[@]</span><span class=\"k\">}</span><span class=\"p\">;</span>j++<span class=\"o\">))</span>\n        <span class=\"k\">do</span>\n            <span class=\"c\">#由于grep顺序不保证，遍历所有key进行右截断</span>\n            <span class=\"nv\">value</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">value</span><span class=\"p\">%</span><span class=\"k\">${</span><span class=\"nv\">buildSettingsGrepKeyArray</span><span class=\"p\">[j]</span><span class=\"k\">}</span><span class=\"p\">*</span><span class=\"k\">}</span>\n        <span class=\"k\">done</span><span class=\"p\">;</span>\n        <span class=\"nv\">value</span><span class=\"o\">=</span><span class=\"sb\">`</span><span class=\"nb\">echo</span> <span class=\"k\">${</span><span class=\"nv\">value</span><span class=\"k\">}</span> | <span class=\"nb\">sed</span> <span class=\"s1\">'s/\\ //g'</span><span class=\"sb\">`</span>\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"【获取Plist参数】i=\"</span><span class=\"nv\">$i</span> <span class=\"s2\">\"value=\"</span><span class=\"nv\">$value</span><span class=\"s2\">\"。\"</span>\n        <span class=\"c\">#填回取值数组</span>\n        buildSettingsGrepValueArray[i]<span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">value</span><span class=\"k\">}</span>\n    <span class=\"k\">done</span><span class=\"p\">;</span>\n    \n    <span class=\"c\">#定义全部变量</span>\n    <span class=\"nb\">export </span><span class=\"nv\">xcodeVersion3number</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">buildSettingsGrepValueArray</span><span class=\"p\">[0]</span><span class=\"k\">}</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"【获取Plist参数】版本号：\"</span><span class=\"nv\">$xcodeVersion3number</span><span class=\"s2\">\"。\"</span>\n\n    <span class=\"nb\">export </span><span class=\"nv\">xcodeBundleID</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">buildSettingsGrepValueArray</span><span class=\"p\">[1]</span><span class=\"k\">}</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"【获取Plist参数】包名：\"</span><span class=\"nv\">$xcodeBundleID</span><span class=\"s2\">\"。\"</span>\n\n    <span class=\"nb\">export </span><span class=\"nv\">xcodebundleNo</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">buildSettingsGrepValueArray</span><span class=\"p\">[2]</span><span class=\"k\">}</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"【获取Plist参数】build号：\"</span><span class=\"nv\">$xcodebundleNo</span><span class=\"s2\">\"。\"</span>\n    \n    <span class=\"nb\">export </span><span class=\"nv\">xcodePlatformName</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">buildSettingsGrepValueArray</span><span class=\"p\">[3]</span><span class=\"k\">}</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"【获取Plist参数】PlatformName：\"</span><span class=\"nv\">$xcodePlatformName</span><span class=\"s2\">\"。\"</span>\n    \n    <span class=\"nb\">export </span><span class=\"nv\">xcodeProductName</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">buildSettingsGrepValueArray</span><span class=\"p\">[4]</span><span class=\"k\">}</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"【获取Plist参数】ProductName：\"</span><span class=\"nv\">$xcodeProductName</span><span class=\"s2\">\"。\"</span>\n    <span class=\"nb\">cd</span> ..\n<span class=\"o\">}</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<ul>\n  <li>构建号设置：</li>\n</ul>\n\n<p>​\t设置构建号，可以避免每次构建的build重复，导致在appstore后台管理构建时的紊乱，也便于追溯构建代码版本等，而如果可以通过自动化的方式进行构建号的设置就更好了，这里提供一种设置思路：获取当前日期+流水线构建号(自增)，可以构建流水线内保证全局唯一：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#自动(自增)修改构建号</span>\n<span class=\"k\">function </span>modify_build_no<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"nb\">cd</span> <span class=\"k\">${</span><span class=\"nv\">CurDir</span><span class=\"k\">}</span>/<span class=\"k\">${</span><span class=\"nv\">projectDir</span><span class=\"k\">}</span>\n    <span class=\"nb\">export </span><span class=\"nv\">BuildNo</span><span class=\"o\">=</span><span class=\"sb\">`</span><span class=\"nb\">date</span> +%Y%m%d<span class=\"sb\">`</span>\n    <span class=\"c\">#BuildNo，可以采用拼接日期+构建方式+流水线自增号来识别构建包的来源（构建方式：dailybuild、TestFlight、Release、TFInner）</span>\n    <span class=\"nv\">BuildNo</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">BuildNo</span><span class=\"k\">}</span>.<span class=\"nv\">$1</span>.<span class=\"k\">${</span><span class=\"nv\">SYS_PIPELINE_BUILD_NUMBER</span><span class=\"k\">}</span>\n<span class=\"c\">#    plist_path=${CurDir}/${projectDir}/${projectDir}/Info.plist</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"【获取Plist参数】路径：\"</span><span class=\"nv\">$plist_path</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"【设置Plist参数】build：\"</span><span class=\"nv\">$BuildNo</span>    \n<span class=\"c\">#    /usr/libexec/PlistBuddy -c \"Set :CFBundleVersion ${BuildNo}\" ${plist_path}</span>\n    agvtool new-version <span class=\"nt\">-all</span> <span class=\"k\">${</span><span class=\"nv\">BuildNo</span><span class=\"k\">}</span>\n    <span class=\"nb\">cd</span> -\n<span class=\"o\">}</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h4 id=\"222-构建中\">2.2.2 构建中：</h4>\n\n<ul>\n  <li>\n    <p>执行构建：</p>\n\n    <p>在完成了所有必要的构建前的设置之后，可以进行构建流程：</p>\n  </li>\n</ul>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#执行构建</span>\n<span class=\"k\">function </span>build<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$1</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">echo</span> <span class=\"s2\">\"error: configurationName 不能为空 退出\"</span>\n        <span class=\"nb\">exit </span>1\n    <span class=\"k\">fi</span>\n    <span class=\"c\">#定义项目前缀,生成文件时使用</span>\n    <span class=\"nb\">export </span><span class=\"nv\">PrefixID</span><span class=\"o\">=</span>PSC_\n\n    <span class=\"c\">#设置根目录</span>\n    <span class=\"nb\">export </span><span class=\"nv\">CurDir</span><span class=\"o\">=</span><span class=\"sb\">`</span><span class=\"nb\">pwd</span><span class=\"sb\">`</span>\n    \n    <span class=\"c\">#进行打包的schemeName</span>\n    <span class=\"nb\">export </span><span class=\"nv\">schemeName</span><span class=\"o\">=</span>dailybuildipa\n    \n    <span class=\"c\">#指定编译 配置 configuration</span>\n    <span class=\"nv\">configurationNameArray</span><span class=\"o\">=(</span>DailyBuild TestFlight Release TFInner<span class=\"o\">)</span>\n    <span class=\"nb\">export </span><span class=\"nv\">configurationName</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">configurationNameArray</span><span class=\"p\">[</span><span class=\"nv\">$1</span><span class=\"p\">]</span><span class=\"k\">}</span>\n\n    <span class=\"c\">#指定编译脚本路径</span>\n    <span class=\"c\">#TODO: 这里需要匹配下当前脚本所在的目录</span>\n    <span class=\"nb\">export </span><span class=\"nv\">buildsh_dir</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">CurDir</span><span class=\"k\">}</span>/PSC_iOS_Build_SH\n\n    <span class=\"c\">#设置plist参数</span>\n    modify_build_no <span class=\"nv\">$1</span>\n\n    <span class=\"c\">#读取plist参数</span>\n    initInfoPlistParms\n    \n    <span class=\"c\">#执行构建</span>\n    bash <span class=\"nv\">$buildsh_dir</span>/build_sh.sh\n<span class=\"o\">}</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>构建流程设计包括：</p>\n\n<ul>\n  <li>设置环境变量</li>\n  <li>\n    <p>设置内部变量</p>\n  </li>\n  <li>\n    <p>初始化环境</p>\n  </li>\n  <li>\n    <p>mPaas设置（可选）</p>\n  </li>\n  <li>\n    <p>执行pod</p>\n  </li>\n  <li>\n    <p>构建工具适配（可选）</p>\n  </li>\n  <li>执行构建</li>\n</ul>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n</pre></td><td class=\"rouge-code\"><pre><span class=\"k\">function </span>build<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"c\">#设置内部环境变量</span>\n    initDevopsEnv\n \n    <span class=\"c\">#设置内部环境变量</span>\n    createInternalEnv\n        \n    <span class=\"c\">#初始化环境</span>\n    init_env\n\n    <span class=\"c\">#执行pod之前，先配置mPaas在当前环境下的配置文件</span>\n    mPaaSConfigSet\n    \n    <span class=\"c\">#执行pod</span>\n    pod_install\n\n    <span class=\"c\">#fix xcode 14.3 cocoapods bug</span>\n    fiXCode143\n\n    <span class=\"c\">#执行构建</span>\n    buildProject\n\n    <span class=\"c\">#执行构建归档操作</span>\n    collection\n    \n    <span class=\"c\">#上传（发布）安装包，供下载安装</span>\n    bash <span class=\"nv\">$buildsh_dir</span>/<span class=\"nv\">$build_ext_fold</span>/<span class=\"nv\">$publish_sh</span>\n\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"k\">${</span><span class=\"nv\">configurationName</span><span class=\"k\">}</span> <span class=\"o\">=</span> <span class=\"s2\">\"DailyBuild\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then</span>\n        <span class=\"c\">#通知</span>\n        bash <span class=\"nv\">$buildsh_dir</span>/<span class=\"nv\">$build_ext_fold</span>/<span class=\"nv\">$notification_sh</span>\n    <span class=\"k\">fi</span>\n<span class=\"o\">}</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>​\t构建具体的思路可以参考源码，这里不再赘述</p>\n\n<h4 id=\"223-构建后\">2.2.3 构建后：</h4>\n\n<ul>\n  <li>归档</li>\n</ul>\n\n<p>为什么要归档：</p>\n\n<p>归档主要是为了对构建的安装包IPA及dSYM进行一一对应，由于dailybuild都是在团队内分发，因此这边考虑只有在testflight及appstore时才进行归档。</p>\n\n<p>此外；如果使用bugly进行崩溃收集，bugly已经不支持手动传dSYM，需要在构建时一并实现。</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n</pre></td><td class=\"rouge-code\"><pre><span class=\"k\">function </span>upload_dSYM<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n\t\t<span class=\"c\">#这里可以根据各自情况，存在dSYM文件</span>\n<span class=\"o\">}</span>\n\n<span class=\"k\">function </span>upload_dSYM_to_bugly<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"nb\">export </span><span class=\"nv\">p</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">dSYM_dict_PATH</span><span class=\"k\">}</span>\n    \n    <span class=\"c\">#根据不同的应用进行设置</span>\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"k\">${</span><span class=\"nv\">TARGET_NAME</span><span class=\"k\">}</span> <span class=\"o\">=</span> <span class=\"s2\">\"PSCiOS\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nv\">bugly_appid</span><span class=\"o\">=</span>xxx\n        <span class=\"nv\">bugly_appkey</span><span class=\"o\">=</span>yyy\n    <span class=\"k\">fi\n    \n    </span><span class=\"nb\">echo</span> <span class=\"s1\">'/// 上传 dsym bugly '</span><span class=\"k\">${</span><span class=\"nv\">v</span><span class=\"k\">}</span><span class=\"s1\">'pkgName='</span><span class=\"k\">${</span><span class=\"nv\">pkgName</span><span class=\"k\">}</span>\n    \n    <span class=\"c\">#切换java 版本</span>\n    java <span class=\"nt\">-version</span>\n    jdk8\n    java <span class=\"nt\">-version</span>\n    \n    <span class=\"nv\">bugly_jar_path</span><span class=\"o\">=</span><span class=\"nv\">$buildsh_dir</span>/<span class=\"nv\">$build_ext_fold</span>/collection_res/buglyqq-upload-symbol/buglyqq-upload-symbol.jar\n    \n    java <span class=\"nt\">-jar</span> <span class=\"k\">${</span><span class=\"nv\">bugly_jar_path</span><span class=\"k\">}</span> <span class=\"nt\">-appid</span> <span class=\"k\">${</span><span class=\"nv\">bugly_appid</span><span class=\"k\">}</span> <span class=\"nt\">-appkey</span> <span class=\"k\">${</span><span class=\"nv\">bugly_appkey</span><span class=\"k\">}</span> <span class=\"nt\">-bundleid</span> <span class=\"k\">${</span><span class=\"nv\">pkgName</span><span class=\"k\">}</span> <span class=\"nt\">-version</span> <span class=\"k\">${</span><span class=\"nv\">v</span><span class=\"k\">}</span> <span class=\"nt\">-platform</span> IOS <span class=\"nt\">-inputSymbol</span> <span class=\"k\">${</span><span class=\"nv\">p</span><span class=\"k\">}</span>\n<span class=\"o\">}</span>\n\n<span class=\"k\">function </span>collection<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"nb\">export </span><span class=\"nv\">v</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">xcodeVersion3number</span><span class=\"k\">}</span>.<span class=\"k\">${</span><span class=\"nv\">BuildNo</span><span class=\"k\">}</span>\n    <span class=\"nb\">export </span><span class=\"nv\">pkgName</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">xcodeBundleID</span><span class=\"k\">}</span>\n\n    <span class=\"c\">#上传到bugly符号表</span>\n    upload_dSYM_to_bugly\n\n    <span class=\"c\">#上传dSYM</span>\n    upload_dSYM\n<span class=\"o\">}</span>\n\n<span class=\"c\">#归档</span>\ncollection\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<ul>\n  <li>发布</li>\n</ul>\n\n<p>归档后，对安装包进行分发，分发也分dailybuild与release：</p>\n\n<p>dailybuild:目前采用发布到蒲公英渠道：<a href=\"#2.1.3\">2.1.3 参数3(可选)：渠道号</a></p>\n\n<p>Release:发布到AppStore</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n</pre></td><td class=\"rouge-code\"><pre>    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"k\">${</span><span class=\"nv\">configurationName</span><span class=\"k\">}</span> <span class=\"o\">=</span> <span class=\"s2\">\"Release\"</span> <span class=\"o\">]</span> <span class=\"o\">||</span> <span class=\"o\">[</span> <span class=\"k\">${</span><span class=\"nv\">configurationName</span><span class=\"k\">}</span> <span class=\"o\">=</span> <span class=\"s2\">\"TestFlight\"</span> <span class=\"o\">]</span> <span class=\"o\">||</span> <span class=\"o\">[</span> <span class=\"k\">${</span><span class=\"nv\">configurationName</span><span class=\"k\">}</span> <span class=\"o\">=</span> <span class=\"s2\">\"TFInner\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then</span>\n           <span class=\"c\">#TFInner 、TestFlight &amp; appstore 上传到appstore</span>\n        <span class=\"nb\">echo</span> <span class=\"s1\">'/// 上传App Store 开始'</span>\n        xcrun altool <span class=\"nt\">--validate-app</span> <span class=\"nt\">-f</span>  <span class=\"nv\">$IPA_PATH</span> <span class=\"nt\">--type</span>  ios  <span class=\"nt\">--apiKey</span> <span class=\"nv\">$appStore_apikey</span> <span class=\"nt\">--apiIssuer</span> <span class=\"nv\">$appStore_apiIssuer</span>\n        xcrun altool <span class=\"nt\">--upload-app</span> <span class=\"nt\">-f</span>  <span class=\"nv\">$IPA_PATH</span> <span class=\"nt\">--type</span>  ios  <span class=\"nt\">--apiKey</span> <span class=\"nv\">$appStore_apikey</span> <span class=\"nt\">--apiIssuer</span> <span class=\"nv\">$appStore_apiIssuer</span>\n        <span class=\"nb\">echo</span> <span class=\"s1\">'/// 上传App Store 结束'</span>\n\t\t<span class=\"k\">fi</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<ul>\n  <li>通知</li>\n</ul>\n\n<p>通知可以有很多种方式，由于笔者团队使用钉钉，所以这里举个钉钉机器人例子：<a href=\"#2.1.4\">2.1.4 参数4(可选)：是否静默通知</a></p>\n\n\n\n                <hr style=\"visibility: hidden;\">\n                <ul class=\"pager\">\n                    \n                    <li class=\"previous\">\n                        <a href=\"/2023/08/03/iOS-%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%9C%A8%E5%86%85%E7%BD%91%E8%81%94%E8%B0%83%E6%97%B6%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"iOS客户端在内网联调时的解决方案\">\n                        Previous<br>\n                        <span>iOS客户端在内网联调时的解决方案</span>\n                        </a>\n                    </li>\n                    \n                    \n                    <li class=\"next\">\n                        <a href=\"/2023/08/11/Apple%E4%BC%81%E4%B8%9A%E8%B4%A6%E5%8F%B7%E6%B3%A8%E5%86%8C%E6%B5%81%E7%A8%8B/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Apple 企业账号注册流程\">\n                        Next<br>\n                        <span>Apple 企业账号注册流程</span>\n                        </a>\n                    </li>\n                    \n                </ul>\n                <hr style=\"visibility: hidden;\">\n\n                \n                <!-- disqus 评论框 start -->\n                <div class=\"comment\">\n                    <div id=\"disqus_thread\" class=\"disqus-thread\"></div>\n                </div>\n                <!-- disqus 评论框 end -->\n                \n\n                \n            </div>  \n\n    <!-- Side Catalog Container -->\n        \n            <div class=\"\n                col-lg-2 col-lg-offset-0\n                visible-lg-block\n                sidebar-container\n                catalog-container\">\n                <div class=\"side-catalog\">\n                    <hr class=\"hidden-sm hidden-xs\">\n                    <h5>\n                        <a class=\"catalog-toggle\" href=\"#\">CATALOG</a>\n                    </h5>\n                    <ul class=\"catalog-body\"></ul>\n                </div>\n            </div>\n        \n\n    <!-- Sidebar Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                sidebar-container\">\n\n                <!-- Featured Tags -->\n                \n\n\n<section>\n    \n        <hr class=\"hidden-sm hidden-xs\">\n    \n    <h5><a href=\"/archive/\">FEATURED TAGS</a></h5>\n    <div class=\"tags\">\n        \n        \n        \n        \n        \n    </div>\n</section>\n\n\n                <!-- Friends Blog -->\n                \n            </div>\n        </div>\n    </div>\n</article>\n\n<!-- add support for mathjax by voleking-->\n\n\n\n\n\n\n<!-- disqus 公共JS代码 start (一个网页只需插入一次) -->\n<script type=\"text/javascript\">\n    /* * * CONFIGURATION VARIABLES * * */\n    var disqus_shortname = \"Cyp\";\n    var disqus_identifier = \"/2023/08/08/iOS-话外篇-构建详解\";\n    var disqus_url = \"http://localhost:4000/2023/08/08/iOS-%E8%AF%9D%E5%A4%96%E7%AF%87-%E6%9E%84%E5%BB%BA%E8%AF%A6%E8%A7%A3/\";\n\n    (function() {\n        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;\n        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';\n        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);\n    })();\n</script>\n<!-- disqus 公共JS代码 end -->\n\n\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n      var d = document, t = 'script',\n          o = d.createElement(t),\n          s = d.getElementsByTagName(t)[0];\n      o.src = u;\n      if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n      s.parentNode.insertBefore(o, s);\n    }\n</script>\n<!-- anchor-js, Doc:http://bryanbraun.github.io/anchorjs/ -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/anchor-js/1.1.1/anchor.min.js\",function(){\n        anchors.options = {\n          visible: 'hover',\n          placement: 'right',\n          // icon: '#'\n        };\n        anchors.add().remove('.intro-header h1').remove('.subheading').remove('.sidebar-container h5');\n    })\n</script>\n<style>\n    /* place left on bigger screen */\n    @media all and (min-width: 800px) {\n        .anchorjs-link{\n            position: absolute;\n            left: -0.75em;\n            font-size: 1.1em;\n            margin-top : -0.1em;\n        }\n    }\n</style>\n\n\n\n    <!-- Footer -->\n<footer>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <!-- SNS Link -->\n                \n\n\n<ul class=\"list-inline text-center\">\n\n\n  \n  \n  \n  \n  \n  \n  \n</ul>\n\n                <p class=\"copyright text-muted\">\n                    Copyright &copy; PaysonChen Blog 2024\n                    <br>\n                    <!-- Powered by <a href=\"http://huangxuan.me\">Hux Blog</a> | -->\n                 <!--    <iframe style=\"margin-left: 2px; margin-bottom:-5px;\" frameborder=\"0\" scrolling=\"0\" width=\"100px\"\n                        height=\"20px\"\n                        src=\"https://ghbtns.com/github-btn.html?user=huxpro&repo=huxpro.github.io&type=star&count=true\">\n                    </iframe> -->\n                </p>\n            </div>\n        </div>\n    </div>\n</footer>\n\n<!-- jQuery -->\n<script src=\"/js/jquery.min.js \"></script>\n\n<!-- Bootstrap Core JavaScript -->\n<!-- Currently, only navbar scroll-down effect at desktop still depends on this -->\n<script src=\"/js/bootstrap.min.js \"></script>\n\n<!-- Custom Theme JavaScript -->\n<script src=\"/js/hux-blog.min.js \"></script>\n\n<!-- Simple Jekyll Search -->\n<script src=\"/js/simple-jekyll-search.min.js\"></script>\n\n<!-- Service Worker -->\n\n<script src=\"/js/snackbar.js \"></script>\n<script src=\"/js/sw-registration.js \"></script>\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n        var d = document, t = 'script',\n            o = d.createElement(t),\n            s = d.getElementsByTagName(t)[0];\n        o.src = u;\n        if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n        s.parentNode.insertBefore(o, s);\n    }\n</script>\n\n<!--\n     Because of the native support for backtick-style fenced code blocks\n     right within the Markdown is landed in Github Pages,\n     From V1.6, There is no need for Highlight.js,\n     so Huxblog drops it officially.\n\n     - https://github.com/blog/2100-github-pages-now-faster-and-simpler-with-jekyll-3-0\n     - https://help.github.com/articles/creating-and-highlighting-code-blocks/\n     - https://github.com/jneen/rouge/wiki/list-of-supported-languages-and-lexers\n-->\n<!--\n    <script>\n        async(\"http://cdn.bootcss.com/highlight.js/8.6/highlight.min.js\", function(){\n            hljs.initHighlightingOnLoad();\n        })\n    </script>\n    <link href=\"http://cdn.bootcss.com/highlight.js/8.6/styles/github.min.css\" rel=\"stylesheet\">\n-->\n\n\n\n\n\n\n\n<!--fastClick.js -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/fastclick/1.0.6/fastclick.min.js\", function () {\n        var $nav = document.querySelector(\"nav\");\n        if ($nav) FastClick.attach($nav);\n    })\n</script>\n\n\n<!-- Google Analytics -->\n\n\n\n<!-- Baidu Tongji -->\n\n\n\n<!-- Side Catalog -->\n\n<script type=\"text/javascript\">\n    function generateCatalog(selector) {\n\n        // interop with multilangual \n        if ('' == 'true') {\n            _containerSelector = 'div.post-container.active'\n        } else {\n            _containerSelector = 'div.post-container'\n        }\n\n        // init\n        var P = $(_containerSelector), a, n, t, l, i, c;\n        a = P.find('h1,h2,h3,h4,h5,h6');\n\n        // clean\n        $(selector).html('')\n\n        // appending\n        a.each(function () {\n            n = $(this).prop('tagName').toLowerCase();\n            i = \"#\" + $(this).prop('id');\n            t = $(this).text();\n            c = $('<a href=\"' + i + '\" rel=\"nofollow\">' + t + '</a>');\n            l = $('<li class=\"' + n + '_nav\"></li>').append(c);\n            $(selector).append(l);\n        });\n        return true;\n    }\n\n    generateCatalog(\".catalog-body\");\n\n    // toggle side catalog\n    $(\".catalog-toggle\").click((function (e) {\n        e.preventDefault();\n        $('.side-catalog').toggleClass(\"fold\")\n    }))\n\n    /*\n     * Doc: https://github.com/davist11/jQuery-One-Page-Nav\n     * Fork by Hux to support padding\n     */\n    async(\"/js/jquery.nav.js\", function () {\n        $('.catalog-body').onePageNav({\n            currentClass: \"active\",\n            changeHash: !1,\n            easing: \"swing\",\n            filter: \"\",\n            scrollSpeed: 700,\n            scrollOffset: 0,\n            scrollThreshold: .2,\n            begin: null,\n            end: null,\n            scrollChange: null,\n            padding: 80\n        });\n    });\n</script>\n\n\n\n<!-- Multi-Lingual -->\n\n\n<!-- Simple Jekyll Search -->\n<script>\n    // https://stackoverflow.com/questions/1912501/unescape-html-entities-in-javascript\n    function htmlDecode(input) {\n        var e = document.createElement('textarea');\n        e.innerHTML = input;\n        // handle case of empty input\n        return e.childNodes.length === 0 ? \"\" : e.childNodes[0].nodeValue;\n    }\n\n    SimpleJekyllSearch({\n        searchInput: document.getElementById('search-input'),\n        resultsContainer: document.getElementById('search-results'),\n        json: '/search.json',\n        searchResultTemplate: '<div class=\"post-preview item\"><a href=\"{url}\"><h2 class=\"post-title\">{title}</h2><h3 class=\"post-subtitle\">{subtitle}</h3><hr></a></div>',\n        noResultsText: 'No results',\n        limit: 50,\n        fuzzy: false,\n        // a hack to get escaped subtitle unescaped. for some reason, \n        // post.subtitle w/o escape filter nuke entire search.\n        templateMiddleware: function (prop, value, template) {\n            if (prop === 'subtitle' || prop === 'title') {\n                if (value.indexOf(\"code\")) {\n                    return htmlDecode(value);\n                } else {\n                    return value;\n                }\n            }\n        }\n    });\n\n    $(document).ready(function () {\n        var $searchPage = $('.search-page');\n        var $searchOpen = $('.search-icon');\n        var $searchClose = $('.search-icon-close');\n        var $searchInput = $('#search-input');\n        var $body = $('body');\n\n        $searchOpen.on('click', function (e) {\n            e.preventDefault();\n            $searchPage.toggleClass('search-active');\n            var prevClasses = $body.attr('class') || '';\n            setTimeout(function () {\n                $body.addClass('no-scroll');\n            }, 400)\n\n            if ($searchPage.hasClass('search-active')) {\n                $searchClose.on('click', function (e) {\n                    e.preventDefault();\n                    $searchPage.removeClass('search-active');\n                    $body.attr('class', prevClasses);  // from closure \n                });\n                $searchInput.focus();\n            }\n        });\n    });\n</script>\n\n\n<!-- Image to hack wechat -->\n<img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\" />\n<!-- Migrate from head to bottom, no longer block render and still work -->\n\n</body>\n\n</html>\n","excerpt":"<h1 id=\"ios话外篇构建详解\">iOS话外篇：构建详解</h1>\n","url":"/2023/08/08/iOS-%E8%AF%9D%E5%A4%96%E7%AF%87-%E6%9E%84%E5%BB%BA%E8%AF%A6%E8%A7%A3/","next":{"id":"/2023/08/11/Apple企业账号注册流程","tags":[],"relative_path":"_posts/2023-08-11-Apple企业账号注册流程.md","collection":"posts","name":"2023-08-11-Apple企业账号注册流程.md","url":"/2023/08/11/Apple%E4%BC%81%E4%B8%9A%E8%B4%A6%E5%8F%B7%E6%B3%A8%E5%86%8C%E6%B5%81%E7%A8%8B/","title":"Apple 企业账号注册流程","date":"2023-08-11 00:00:00 +0800","categories":[],"path":"_posts/2023-08-11-Apple企业账号注册流程.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/home-bg-geek.jpg","slug":"Apple企业账号注册流程","ext":".md"},"title":"iOS话外篇：构建详解","date":"2023-08-08 00:00:00 +0800","categories":[],"path":"_posts/2023-08-08-iOS-话外篇-构建详解.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/home-bg-geek.jpg","slug":"iOS-话外篇-构建详解","ext":".md"},"output":"<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"google-site-verification\" content=\"xBT4GhYoi5qRD5tr338pgPM5OWHHIDR6mNg1a3euekI\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, viewport-fit=cover\">\n    <meta name=\"description\" content=\"与你一起发现更大的世界。\">\n    <meta name=\"keywords\"  content=\"PaysonChen,iOS,流媒体\">\n    <meta name=\"theme-color\" content=\"#000000\">\n    \n    <!-- Open Graph -->\n    <meta property=\"og:title\" content=\"Apple 企业账号注册流程 - PaysonChen的博客 | PaysonChen Blog\">\n    \n    <meta property=\"og:type\" content=\"article\">\n    <meta property=\"og:description\" content=\"Apple 企业账号注册流程\n\">\n    \n    \n    <meta property=\"article:published_time\" content=\"2023-08-11T00:00:00Z\">\n    \n    \n    <meta property=\"article:author\" content=\"PaysonChen\">\n    \n    \n    \n    <meta property=\"og:image\" content=\"http://localhost:4000\">\n    <meta property=\"og:url\" content=\"http://localhost:4000/2023/08/11/Apple%E4%BC%81%E4%B8%9A%E8%B4%A6%E5%8F%B7%E6%B3%A8%E5%86%8C%E6%B5%81%E7%A8%8B/\">\n    <meta property=\"og:site_name\" content=\"PaysonChen的博客 | PaysonChen Blog\">\n    \n    <title>Apple 企业账号注册流程 - PaysonChen的博客 | PaysonChen Blog</title>\n\n    <!-- Web App Manifest -->\n    <link rel=\"manifest\" href=\"/pwa/manifest.json\">\n\n    <!-- Favicon -->\n    <link rel=\"shortcut icon\" href=\"/img/favicon.ico\">\n    \n    <!-- Canonical URL -->\n    <link rel=\"canonical\" href=\"http://localhost:4000/2023/08/11/Apple%E4%BC%81%E4%B8%9A%E8%B4%A6%E5%8F%B7%E6%B3%A8%E5%86%8C%E6%B5%81%E7%A8%8B/\">\n\n    <!-- Bootstrap Core CSS -->\n    <link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\">\n\n    <!-- Custom CSS -->\n    <link rel=\"stylesheet\" href=\"/css/hux-blog.min.css\">\n\n    <!-- Custom Fonts -->\n    <!-- <link href=\"http://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\"> -->\n    <!-- Hux change font-awesome CDN to qiniu -->\n    <link href=\"//cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\">\n\n\n    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->\n    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->\n    <!--[if lt IE 9]>\n        <script src=\"https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js\"></script>\n        <script src=\"https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js\"></script>\n    <![endif]-->\n\n    <!-- ga & ba script hoook -->\n    <script></script>\n</head>\n\n\n<!-- hack iOS CSS :active style -->\n<body ontouchstart=\"\">\n\n    <!-- Navigation -->\n\n    <nav class=\"navbar navbar-default navbar-custom navbar-fixed-top\">\n        \n        <div class=\"container-fluid\">\n            <!-- Brand and toggle get grouped for better mobile display -->\n            <div class=\"navbar-header page-scroll\">\n                <button type=\"button\" class=\"navbar-toggle\">\n                    <span class=\"sr-only\">Toggle navigation</span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                </button>\n                <a class=\"navbar-brand\" href=\"/\">PaysonChen Blog</a>\n            </div>\n\n            <!-- Collect the nav links, forms, and other content for toggling -->\n            <div id=\"huxblog_navbar\">\n                <div class=\"navbar-collapse\">\n                    <ul class=\"nav navbar-nav navbar-right\">\n                        <li>\n                            <a href=\"/\">Home</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        <li>\n                            <a href=\"/about/\">About</a>\n                        </li>\n                        \n                        \n                        \n                        <li>\n                            <a href=\"/archive/\">Archive</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        <li class=\"search-icon\">\n                            <a href=\"javascript:void(0)\">\n                                <i class=\"fa fa-search\"></i>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n            <!-- /.navbar-collapse -->\n        </div>\n        <!-- /.container -->\n    </nav>\n\n    <script>\n        // Drop Bootstarp low-performance Navbar\n        // Use customize navbar with high-quality material design animation\n        // in high-perf jank-free CSS3 implementation\n        var $body = document.body;\n        var $toggle = document.querySelector('.navbar-toggle');\n        var $navbar = document.querySelector('#huxblog_navbar');\n        var $collapse = document.querySelector('.navbar-collapse');\n\n        var __HuxNav__ = {\n            close: function () {\n                $navbar.className = \" \";\n                // wait until animation end.\n                setTimeout(function () {\n                    // prevent frequently toggle\n                    if ($navbar.className.indexOf('in') < 0) {\n                        $collapse.style.height = \"0px\"\n                    }\n                }, 400)\n            },\n            open: function () {\n                $collapse.style.height = \"auto\"\n                $navbar.className += \" in\";\n            }\n        }\n\n        // Bind Event\n        $toggle.addEventListener('click', function (e) {\n            if ($navbar.className.indexOf('in') > 0) {\n                __HuxNav__.close()\n            } else {\n                __HuxNav__.open()\n            }\n        })\n\n        /**\n         * Since Fastclick is used to delegate 'touchstart' globally\n         * to hack 300ms delay in iOS by performing a fake 'click',\n         * Using 'e.stopPropagation' to stop 'touchstart' event from \n         * $toggle/$collapse will break global delegation.\n         * \n         * Instead, we use a 'e.target' filter to prevent handler\n         * added to document close HuxNav.  \n         *\n         * Also, we use 'click' instead of 'touchstart' as compromise\n         */\n        document.addEventListener('click', function (e) {\n            if (e.target == $toggle) return;\n            if (e.target.className == 'icon-bar') return;\n            __HuxNav__.close();\n        })\n    </script>\n    <!-- Search -->\n<div class=\"search-page\">\n  <div class=\"search-icon-close-container\">\n    <span class=\"search-icon-close\">\n      <i class=\"fa fa-chevron-down\"></i>\n    </span>\n  </div>\n  <div class=\"search-main container\">\n    <div class=\"row\">\n      <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n        <form></form>\n        <input type=\"text\" id=\"search-input\" placeholder=\"$ grep...\">\n        </form>\n        <div id=\"search-results\" class=\"mini-post-list\"></div>\n      </div>\n    </div>\n  </div>\n</div>\n\n    <!-- Image to hack wechat -->\n<!-- <img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\"> -->\n<!-- <img src=\"/img/home-bg-geek.jpg\" width=\"0\" height=\"0\"> -->\n\n<!-- Post Header -->\n\n\n\n<style type=\"text/css\">\n    header.intro-header{\n        position: relative;\n        background-image: url('/img/home-bg-geek.jpg');\n        background: ;\n    }\n\n    \n</style>\n\n<header class=\"intro-header\" >\n\n    <div class=\"header-mask\"></div>\n    \n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <div class=\"post-heading\">\n                    <div class=\"tags\">\n                        \n                    </div>\n                    <h1>Apple 企业账号注册流程</h1>\n                    \n                    <h2 class=\"subheading\"></h2>\n                    <span class=\"meta\">Posted by PaysonChen on August 11, 2023</span>\n                </div>\n            </div>\n        </div>\n    </div>\n</header>\n\n\n\n\n\n\n<!-- Post Content -->\n<article>\n    <div class=\"container\">\n        <div class=\"row\">\n\n    <!-- Post Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                post-container\">\n\n                <!-- Multi-Lingual -->\n                \n\n\t\t\t\t<h1 id=\"apple-企业账号注册流程\">Apple 企业账号注册流程</h1>\n\n<h2 id=\"1准备appleid\">1、准备AppleID</h2>\n\n<p>​\t使用非Owner账号，没有持有过Apple开发者账号的AppleID即可，即便是被添加到管理员</p>\n\n<h2 id=\"2完成实名\">2、完成实名</h2>\n\n<p>​\t使用App：Develop – 苹果官方开发者App，登录需要注册的AppleID，切到-&gt;【账户】点击【立即注册】</p>\n\n<h2 id=\"3注册\">3、注册</h2>\n\n<p>​\t注册时需要填入【个人】实名信息，非公司信息。</p>\n\n<p>​\t如果这个时候，地址校验多次失败之后，注册按钮会一直置灰，这个时候就需要通过电话联系Apple开发者，根据当下的异常进行处理，我的经验是：后台解除了我的限制之后，我又输入了公司的信息，导致再次错误，而二次错误无法继续解除，只能通过回传身份证信息进行验证，验证通过后，注册按钮再次被打开。</p>\n\n<h2 id=\"4实名认证\">4、实名认证</h2>\n\n<p>​\t点击注册，看到的是会籍资格688元/年，心存疑问，于是又联系了Apple开发者，再进行一系列的远程协助之后，通过【注册】之后的【下一步】继续【下一步】，一直到完成了身份证及人脸识别之后，完成了实名认证。</p>\n\n<h2 id=\"5企业账号注册\">5、企业账号注册</h2>\n\n<p>​\t至此，如果是个人账号，或者是一般企业账号（688元/年）可以在此进行注册，而企业账号（299美金/年）则需要回到网页端注册</p>\n\n<p>​\t回到网页端：</p>\n\n<p>​\t打开 https://developer.apple.com/cn/support/</p>\n\n<p>​\t点击【文章】</p>\n\n<p>​\t选择【会员资格】</p>\n\n<p>​\t在其他计划中选择【Apple Developer Enterprise Program】</p>\n\n<p>​\t点击【了解资格要求】</p>\n\n<p>​\t嫌麻烦直接跳转：【<a href=\"https://developer.apple.com/cn/programs/enterprise/\">了解资格要求</a>】</p>\n\n<p>​\t在【开始申请】的【你将分发何种类型的 App？】选择【仅在我的组织内部使用的专属App】</p>\n\n<p>​\t点击【开始填写申请表格】</p>\n\n\n                <hr style=\"visibility: hidden;\">\n                <ul class=\"pager\">\n                    \n                    <li class=\"previous\">\n                        <a href=\"/2023/08/08/iOS-%E8%AF%9D%E5%A4%96%E7%AF%87-%E6%9E%84%E5%BB%BA%E8%AF%A6%E8%A7%A3/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"iOS话外篇：构建详解\">\n                        Previous<br>\n                        <span>iOS话外篇：构建详解</span>\n                        </a>\n                    </li>\n                    \n                    \n                    <li class=\"next\">\n                        <a href=\"/2023/08/17/iOS%E7%BB%84%E4%BB%B6%E5%8C%96-%E4%B8%9A%E5%8A%A1%E7%BB%84%E4%BB%B6%E5%87%86%E5%A4%87%E7%AF%87/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"iOS组件化之：业务组件准备篇\">\n                        Next<br>\n                        <span>iOS组件化之：业务组件准备篇</span>\n                        </a>\n                    </li>\n                    \n                </ul>\n                <hr style=\"visibility: hidden;\">\n\n                \n                <!-- disqus 评论框 start -->\n                <div class=\"comment\">\n                    <div id=\"disqus_thread\" class=\"disqus-thread\"></div>\n                </div>\n                <!-- disqus 评论框 end -->\n                \n\n                \n            </div>  \n\n    <!-- Side Catalog Container -->\n        \n            <div class=\"\n                col-lg-2 col-lg-offset-0\n                visible-lg-block\n                sidebar-container\n                catalog-container\">\n                <div class=\"side-catalog\">\n                    <hr class=\"hidden-sm hidden-xs\">\n                    <h5>\n                        <a class=\"catalog-toggle\" href=\"#\">CATALOG</a>\n                    </h5>\n                    <ul class=\"catalog-body\"></ul>\n                </div>\n            </div>\n        \n\n    <!-- Sidebar Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                sidebar-container\">\n\n                <!-- Featured Tags -->\n                \n\n\n<section>\n    \n        <hr class=\"hidden-sm hidden-xs\">\n    \n    <h5><a href=\"/archive/\">FEATURED TAGS</a></h5>\n    <div class=\"tags\">\n        \n        \n        \n        \n        \n    </div>\n</section>\n\n\n                <!-- Friends Blog -->\n                \n            </div>\n        </div>\n    </div>\n</article>\n\n<!-- add support for mathjax by voleking-->\n\n\n\n\n\n\n<!-- disqus 公共JS代码 start (一个网页只需插入一次) -->\n<script type=\"text/javascript\">\n    /* * * CONFIGURATION VARIABLES * * */\n    var disqus_shortname = \"Cyp\";\n    var disqus_identifier = \"/2023/08/11/Apple企业账号注册流程\";\n    var disqus_url = \"http://localhost:4000/2023/08/11/Apple%E4%BC%81%E4%B8%9A%E8%B4%A6%E5%8F%B7%E6%B3%A8%E5%86%8C%E6%B5%81%E7%A8%8B/\";\n\n    (function() {\n        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;\n        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';\n        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);\n    })();\n</script>\n<!-- disqus 公共JS代码 end -->\n\n\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n      var d = document, t = 'script',\n          o = d.createElement(t),\n          s = d.getElementsByTagName(t)[0];\n      o.src = u;\n      if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n      s.parentNode.insertBefore(o, s);\n    }\n</script>\n<!-- anchor-js, Doc:http://bryanbraun.github.io/anchorjs/ -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/anchor-js/1.1.1/anchor.min.js\",function(){\n        anchors.options = {\n          visible: 'hover',\n          placement: 'right',\n          // icon: '#'\n        };\n        anchors.add().remove('.intro-header h1').remove('.subheading').remove('.sidebar-container h5');\n    })\n</script>\n<style>\n    /* place left on bigger screen */\n    @media all and (min-width: 800px) {\n        .anchorjs-link{\n            position: absolute;\n            left: -0.75em;\n            font-size: 1.1em;\n            margin-top : -0.1em;\n        }\n    }\n</style>\n\n\n\n    <!-- Footer -->\n<footer>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <!-- SNS Link -->\n                \n\n\n<ul class=\"list-inline text-center\">\n\n\n  \n  \n  \n  \n  \n  \n  \n</ul>\n\n                <p class=\"copyright text-muted\">\n                    Copyright &copy; PaysonChen Blog 2024\n                    <br>\n                    <!-- Powered by <a href=\"http://huangxuan.me\">Hux Blog</a> | -->\n                 <!--    <iframe style=\"margin-left: 2px; margin-bottom:-5px;\" frameborder=\"0\" scrolling=\"0\" width=\"100px\"\n                        height=\"20px\"\n                        src=\"https://ghbtns.com/github-btn.html?user=huxpro&repo=huxpro.github.io&type=star&count=true\">\n                    </iframe> -->\n                </p>\n            </div>\n        </div>\n    </div>\n</footer>\n\n<!-- jQuery -->\n<script src=\"/js/jquery.min.js \"></script>\n\n<!-- Bootstrap Core JavaScript -->\n<!-- Currently, only navbar scroll-down effect at desktop still depends on this -->\n<script src=\"/js/bootstrap.min.js \"></script>\n\n<!-- Custom Theme JavaScript -->\n<script src=\"/js/hux-blog.min.js \"></script>\n\n<!-- Simple Jekyll Search -->\n<script src=\"/js/simple-jekyll-search.min.js\"></script>\n\n<!-- Service Worker -->\n\n<script src=\"/js/snackbar.js \"></script>\n<script src=\"/js/sw-registration.js \"></script>\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n        var d = document, t = 'script',\n            o = d.createElement(t),\n            s = d.getElementsByTagName(t)[0];\n        o.src = u;\n        if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n        s.parentNode.insertBefore(o, s);\n    }\n</script>\n\n<!--\n     Because of the native support for backtick-style fenced code blocks\n     right within the Markdown is landed in Github Pages,\n     From V1.6, There is no need for Highlight.js,\n     so Huxblog drops it officially.\n\n     - https://github.com/blog/2100-github-pages-now-faster-and-simpler-with-jekyll-3-0\n     - https://help.github.com/articles/creating-and-highlighting-code-blocks/\n     - https://github.com/jneen/rouge/wiki/list-of-supported-languages-and-lexers\n-->\n<!--\n    <script>\n        async(\"http://cdn.bootcss.com/highlight.js/8.6/highlight.min.js\", function(){\n            hljs.initHighlightingOnLoad();\n        })\n    </script>\n    <link href=\"http://cdn.bootcss.com/highlight.js/8.6/styles/github.min.css\" rel=\"stylesheet\">\n-->\n\n\n\n\n\n\n\n<!--fastClick.js -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/fastclick/1.0.6/fastclick.min.js\", function () {\n        var $nav = document.querySelector(\"nav\");\n        if ($nav) FastClick.attach($nav);\n    })\n</script>\n\n\n<!-- Google Analytics -->\n\n\n\n<!-- Baidu Tongji -->\n\n\n\n<!-- Side Catalog -->\n\n<script type=\"text/javascript\">\n    function generateCatalog(selector) {\n\n        // interop with multilangual \n        if ('' == 'true') {\n            _containerSelector = 'div.post-container.active'\n        } else {\n            _containerSelector = 'div.post-container'\n        }\n\n        // init\n        var P = $(_containerSelector), a, n, t, l, i, c;\n        a = P.find('h1,h2,h3,h4,h5,h6');\n\n        // clean\n        $(selector).html('')\n\n        // appending\n        a.each(function () {\n            n = $(this).prop('tagName').toLowerCase();\n            i = \"#\" + $(this).prop('id');\n            t = $(this).text();\n            c = $('<a href=\"' + i + '\" rel=\"nofollow\">' + t + '</a>');\n            l = $('<li class=\"' + n + '_nav\"></li>').append(c);\n            $(selector).append(l);\n        });\n        return true;\n    }\n\n    generateCatalog(\".catalog-body\");\n\n    // toggle side catalog\n    $(\".catalog-toggle\").click((function (e) {\n        e.preventDefault();\n        $('.side-catalog').toggleClass(\"fold\")\n    }))\n\n    /*\n     * Doc: https://github.com/davist11/jQuery-One-Page-Nav\n     * Fork by Hux to support padding\n     */\n    async(\"/js/jquery.nav.js\", function () {\n        $('.catalog-body').onePageNav({\n            currentClass: \"active\",\n            changeHash: !1,\n            easing: \"swing\",\n            filter: \"\",\n            scrollSpeed: 700,\n            scrollOffset: 0,\n            scrollThreshold: .2,\n            begin: null,\n            end: null,\n            scrollChange: null,\n            padding: 80\n        });\n    });\n</script>\n\n\n\n<!-- Multi-Lingual -->\n\n\n<!-- Simple Jekyll Search -->\n<script>\n    // https://stackoverflow.com/questions/1912501/unescape-html-entities-in-javascript\n    function htmlDecode(input) {\n        var e = document.createElement('textarea');\n        e.innerHTML = input;\n        // handle case of empty input\n        return e.childNodes.length === 0 ? \"\" : e.childNodes[0].nodeValue;\n    }\n\n    SimpleJekyllSearch({\n        searchInput: document.getElementById('search-input'),\n        resultsContainer: document.getElementById('search-results'),\n        json: '/search.json',\n        searchResultTemplate: '<div class=\"post-preview item\"><a href=\"{url}\"><h2 class=\"post-title\">{title}</h2><h3 class=\"post-subtitle\">{subtitle}</h3><hr></a></div>',\n        noResultsText: 'No results',\n        limit: 50,\n        fuzzy: false,\n        // a hack to get escaped subtitle unescaped. for some reason, \n        // post.subtitle w/o escape filter nuke entire search.\n        templateMiddleware: function (prop, value, template) {\n            if (prop === 'subtitle' || prop === 'title') {\n                if (value.indexOf(\"code\")) {\n                    return htmlDecode(value);\n                } else {\n                    return value;\n                }\n            }\n        }\n    });\n\n    $(document).ready(function () {\n        var $searchPage = $('.search-page');\n        var $searchOpen = $('.search-icon');\n        var $searchClose = $('.search-icon-close');\n        var $searchInput = $('#search-input');\n        var $body = $('body');\n\n        $searchOpen.on('click', function (e) {\n            e.preventDefault();\n            $searchPage.toggleClass('search-active');\n            var prevClasses = $body.attr('class') || '';\n            setTimeout(function () {\n                $body.addClass('no-scroll');\n            }, 400)\n\n            if ($searchPage.hasClass('search-active')) {\n                $searchClose.on('click', function (e) {\n                    e.preventDefault();\n                    $searchPage.removeClass('search-active');\n                    $body.attr('class', prevClasses);  // from closure \n                });\n                $searchInput.focus();\n            }\n        });\n    });\n</script>\n\n\n<!-- Image to hack wechat -->\n<img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\" />\n<!-- Migrate from head to bottom, no longer block render and still work -->\n\n</body>\n\n</html>\n","excerpt":"<h1 id=\"apple-企业账号注册流程\">Apple 企业账号注册流程</h1>\n","url":"/2023/08/11/Apple%E4%BC%81%E4%B8%9A%E8%B4%A6%E5%8F%B7%E6%B3%A8%E5%86%8C%E6%B5%81%E7%A8%8B/","next":{"id":"/2023/08/17/iOS组件化-业务组件准备篇","tags":[],"relative_path":"_posts/2023-08-17-iOS组件化-业务组件准备篇.md","collection":"posts","content":"<h1 id=\"ios组件化之业务组件准备篇\">iOS组件化之：业务组件准备篇</h1>\n\n<h2 id=\"1-背景\">1. 背景</h2>\n\n<p>基础组件拆分到一定程度时，主工程剩下的就多数与视图界面(vc、view等)相关的类文件。此时可以考虑对业务组件进行设计和规划，但是在此时，工程还存在如下问题：</p>\n\n<ul>\n  <li>​\t冗余文件：\n    <ul>\n      <li>未被引用到Project，但存在在工程目录中的冗余的类文件</li>\n    </ul>\n  </li>\n  <li>​\t非冗余但未被使用的文件\n    <ul>\n      <li>未在其他类中使用到的类文件</li>\n    </ul>\n  </li>\n</ul>\n\n<p>为了减轻业务组件的工作量和复杂度，在此之前最好能净化/清理一下工程</p>\n\n<p>具体采用人工 or 脚本 进行清理：</p>\n\n<p>根据我们进行估算，执行的时间复杂度为 n²，如果主工程（还未进行业务组件抽离）里还有1000个文件，则遍历一遍则需要进行100万次检索，m2 芯片执行一次需要2小时左右。人工检索时间更长，并且人工检索将呈现边际效用递增的问题。</p>\n\n<p>脚本解决上述问题，并能实现近乎为0的边际成本，可以沉淀具体算法，供其他项目使用</p>\n\n<h2 id=\"2-工程清理\">2. 工程清理</h2>\n\n<h3 id=\"21-冗余文件清理\">2.1 冗余文件清理</h3>\n\n<p>通过递归遍历工程目录，将遍历后的类名逐一与XXX.xcodeproj/project.pbxproj 文件内容进行匹配，匹配失败即为：</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>未被引用到Project，但存在在工程目录中的冗余的类文件\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>具体思路可以这样实现：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\"># 设置项目目录</span>\n<span class=\"nv\">project_directory</span><span class=\"o\">=</span><span class=\"s2\">\"工程项目目录\"</span>\n<span class=\"nv\">project_path</span><span class=\"o\">=</span><span class=\"s2\">\"xxx.xcodeproj/project.pbxproj的目录\"</span>\n\n<span class=\"c\"># 查找所有以ViewController.m结尾的文件并输出列表</span>\n<span class=\"c\"># 查找所有以ViewController.m结尾的文件并输出不包含后缀名的文件名</span>\n<span class=\"nv\">all_file_path</span><span class=\"o\">=</span><span class=\"si\">$(</span>find <span class=\"s2\">\"</span><span class=\"nv\">$project_directory</span><span class=\"s2\">\"</span> <span class=\"nt\">-type</span> f <span class=\"se\">\\(</span> <span class=\"nt\">-name</span> <span class=\"s2\">\"*.h\"</span> <span class=\"se\">\\)</span><span class=\"si\">)</span>\n\n<span class=\"k\">for </span>src_file <span class=\"k\">in</span> <span class=\"nv\">$all_file_path</span><span class=\"p\">;</span> <span class=\"k\">do</span>\n<span class=\"c\">#    echo $src_file</span>\n    <span class=\"nv\">filename</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">basename</span> <span class=\"s2\">\"</span><span class=\"nv\">$src_file</span><span class=\"s2\">\"</span> .h<span class=\"si\">)</span>\n    <span class=\"k\">if</span>  <span class=\"o\">!</span> <span class=\"nb\">grep</span> <span class=\"nt\">-q</span> <span class=\"s2\">\"</span><span class=\"se\">\\b</span><span class=\"nv\">$filename</span><span class=\"se\">\\b</span><span class=\"s2\">\"</span> <span class=\"s2\">\"</span><span class=\"nv\">$project_path</span><span class=\"s2\">\"</span><span class=\"p\">;</span>  <span class=\"k\">then\n        </span><span class=\"nb\">echo</span> <span class=\"s2\">\"project不包含：\"</span><span class=\"nv\">$filename</span>\n    <span class=\"k\">fi\ndone</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h3 id=\"22-未使用文件清理\">2.2 未使用文件清理</h3>\n\n<h4 id=\"221-fui工具\">2.2.1 <a href=\"https://github.com/dblock/fui\">fui工具</a></h4>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n</pre></td><td class=\"rouge-code\"><pre><span class=\"nb\">sudo </span>gem <span class=\"nb\">install </span>fui <span class=\"nt\">-n</span> /usr/local/bin\n\nfui find\t<span class=\"c\">#当前目录执行</span>\nfui <span class=\"nt\">--path</span><span class=\"o\">=</span>~/source/project/Name find\t<span class=\"c\">#指定目录执行</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>fui工具的源码，暂时还没去详细看，但是发现一个问题，他无法识别注释的取消引用：</p>\n\n<p>举个例子，A import B，但是import 当前行注释掉了:</p>\n\n<pre><code class=\"language-objective-c\">//\n//  \n//  A.m  \n//  Example\n//\n//  Created by PSC on 2023/8/15\n//  Copyright © 2023 PSC. All rights reserved.\n//\n\n#import \"A.h\"\n//#import \"B.h\"\n\n……\n</code></pre>\n\n<p>在fui的执行结果中，不会认为B没有被使用。</p>\n\n<h4 id=\"222-自建工具\">2.2.2 自建工具</h4>\n\n<p>为了解决上述fui工具的问题，并且做出一些优化，自建工具的设计思路为：</p>\n\n<ul>\n  <li>遍历工程目录的所有实现类：.m文件（不包含category）</li>\n  <li>将类名与工程内除自身以外所有文件进行进逐行匹配（包含category）</li>\n  <li>当匹配到不包含// 与 #import 开头的行，则算为有引用，否则为未引用</li>\n  <li>将未匹配到的文件路径进行输出</li>\n  <li>将上述匹配出来的文件先进行移除，再执行一遍（由于第一层被移除，可能会暴露出更多没被引用的类）</li>\n  <li>直到没有匹配到未被调用的类为止</li>\n</ul>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#!/bin/bash</span>\n\n<span class=\"c\"># [背景]</span>\n<span class=\"c\"># 基础组件拆分到一定程度时，主工程剩下的就多数与视图界面(vc、view等)相关的类文件。此时可以考虑对业务组件进行设计和规划，但是在此时，工程还存在如下问题：</span>\n<span class=\"c\">#    冗余文件：</span>\n<span class=\"c\">#​    非冗余但未被使用的文件</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># author: Chenyp34</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [目的]</span>\n<span class=\"c\"># 此脚本解决 \"非冗余但未被使用的文件\" 的清理</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [目录]</span>\n<span class=\"c\">#   - find_unused_class.sh</span>\n<span class=\"c\"># [说明]</span>\n<span class=\"c\"># 1 遍历工程目录的所有实现类：.m文件（不包含category）</span>\n<span class=\"c\"># 2 将类名与工程内除自身以外所有文件进行进逐行匹配（包含category）</span>\n<span class=\"c\"># 3 当匹配到不包含// 与 #import 开头的行，则算为有引用，否则为未引用</span>\n<span class=\"c\"># 4 将未匹配到的文件路径进行输出</span>\n<span class=\"c\"># 5 将上述匹配出来的文件先进行移除，再执行一遍（由于第一层被移除，可能会暴露出更多没被引用的类）</span>\n<span class=\"c\"># 6 直到没有匹配到未被调用的类为止</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [参数]</span>\n<span class=\"c\"># 1、参数1，指定xcode工程目录 （未指定则为当前目录）</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [调用说明]</span>\n<span class=\"c\"># 1、未指定目录，则取当前目录：sh find_unused_class.sh</span>\n<span class=\"c\"># 2、指定目录 ：sh find_unused_class.sh /Users/xxxxx/Project-IOS/Project/Project</span>\n\n\n<span class=\"c\">#!/bin/bash</span>\n\n<span class=\"c\">#是否重复执行到没有找到不可用文件</span>\n<span class=\"nb\">export </span><span class=\"nv\">cycle_deal</span><span class=\"o\">=</span>1\n<span class=\"nb\">export </span><span class=\"nv\">cycle_idx</span><span class=\"o\">=</span>1\n<span class=\"nv\">total_unused_file_name</span><span class=\"o\">=</span><span class=\"s1\">''</span>\n<span class=\"k\">function </span>main<span class=\"o\">()</span> <span class=\"o\">{</span>\n    \n    <span class=\"c\"># 设置项目目录</span>\n    <span class=\"nv\">project_directory</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$1</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then</span>\n        <span class=\"c\">#未传参为当前目录</span>\n        <span class=\"nv\">project_directory</span><span class=\"o\">=</span><span class=\"nb\">.</span>\n    <span class=\"k\">fi</span>\n\n    <span class=\"c\">#初始化参数：</span>\n    <span class=\"nv\">unused_files</span><span class=\"o\">=</span><span class=\"s1\">''</span>\n\n    <span class=\"c\"># 查找所有以ViewController.m结尾的文件并输出列表</span>\n    <span class=\"nv\">all_class_path</span><span class=\"o\">=</span><span class=\"si\">$(</span>find <span class=\"s2\">\"</span><span class=\"nv\">$project_directory</span><span class=\"s2\">\"</span> <span class=\"nt\">-type</span> f <span class=\"se\">\\(</span> <span class=\"nt\">-name</span> <span class=\"s2\">\"*.m\"</span> <span class=\"se\">\\)</span> | <span class=\"nb\">grep</span> <span class=\"nt\">-v</span> <span class=\"s1\">'+'</span><span class=\"si\">)</span>\n\n    <span class=\"nv\">all_file_path</span><span class=\"o\">=</span><span class=\"si\">$(</span>find <span class=\"s2\">\"</span><span class=\"nv\">$project_directory</span><span class=\"s2\">\"</span> <span class=\"nt\">-type</span> f <span class=\"se\">\\(</span> <span class=\"nt\">-name</span> <span class=\"s2\">\"*.m\"</span> <span class=\"nt\">-o</span> <span class=\"nt\">-name</span> <span class=\"s2\">\"*.h\"</span> <span class=\"se\">\\)</span> <span class=\"si\">)</span>\n\n    <span class=\"k\">for </span>file <span class=\"k\">in</span> <span class=\"nv\">$all_class_path</span><span class=\"p\">;</span> <span class=\"k\">do\n        </span><span class=\"nv\">filename</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">basename</span> <span class=\"s2\">\"</span><span class=\"nv\">$file</span><span class=\"s2\">\"</span> .m<span class=\"si\">)</span>\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"***********开始遍历文件名：\"</span><span class=\"nv\">$filename</span>\n        <span class=\"nv\">is_referenced</span><span class=\"o\">=</span><span class=\"nb\">false\n        </span><span class=\"k\">for </span>other_file <span class=\"k\">in</span> <span class=\"nv\">$all_file_path</span><span class=\"p\">;</span> <span class=\"k\">do\n            </span><span class=\"nv\">other_file_name</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">basename</span> <span class=\"s2\">\"</span><span class=\"nv\">$other_file</span><span class=\"s2\">\"</span><span class=\"si\">)</span>\n            <span class=\"c\">#获取除自身以外的类名：不包含拓展的名称，为了避免在自身的.h .m进行引用判断</span>\n            <span class=\"nv\">other_file_name_without_extension</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">echo</span> <span class=\"s2\">\"</span><span class=\"nv\">$other_file_name</span><span class=\"s2\">\"</span> | <span class=\"nb\">cut</span> <span class=\"nt\">-d</span><span class=\"nb\">.</span> <span class=\"nt\">-f1</span><span class=\"si\">)</span>\n            <span class=\"c\">#获取category的主类名称</span>\n            <span class=\"nv\">other_file_name_without_extension_before_plus</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">echo</span> <span class=\"s2\">\"</span><span class=\"nv\">$other_file_name_without_extension</span><span class=\"s2\">\"</span> | <span class=\"nb\">awk</span> <span class=\"nt\">-F</span><span class=\"s1\">'+'</span> <span class=\"s1\">'{print $1}'</span><span class=\"si\">)</span>\n            <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"s2\">\"</span><span class=\"nv\">$other_file_name_without_extension_before_plus</span><span class=\"s2\">\"</span> <span class=\"o\">!=</span> <span class=\"s2\">\"</span><span class=\"nv\">$filename</span><span class=\"s2\">\"</span> <span class=\"o\">]</span> <span class=\"p\">;</span> <span class=\"k\">then</span>\n            <span class=\"c\"># if [ \"$other_file\" != \"$file\" ] &amp;&amp; ([ \"${other_file##*.}\" = \"m\" ] ); then</span>\n                <span class=\"k\">if </span><span class=\"nb\">grep</span> <span class=\"nt\">-q</span> <span class=\"s2\">\"</span><span class=\"se\">\\b</span><span class=\"nv\">$filename</span><span class=\"se\">\\b</span><span class=\"s2\">\"</span> <span class=\"s2\">\"</span><span class=\"nv\">$other_file</span><span class=\"s2\">\"</span><span class=\"p\">;</span>  <span class=\"k\">then</span>\n                    <span class=\"c\"># 检查文件中是否有注释行</span>\n                    <span class=\"nv\">has_comment</span><span class=\"o\">=</span><span class=\"nb\">false\n                    </span><span class=\"k\">while </span><span class=\"nv\">IFS</span><span class=\"o\">=</span> <span class=\"nb\">read</span> <span class=\"nt\">-r</span> line<span class=\"p\">;</span> <span class=\"k\">do\n                        </span><span class=\"nb\">echo</span> <span class=\"s2\">\"逐行匹配：\"</span><span class=\"nv\">$line</span>\n                        <span class=\"k\">if</span> <span class=\"o\">!</span> <span class=\"nb\">grep</span> <span class=\"nt\">-qE</span> <span class=\"s2\">\"^[[:space:]]*//\"</span> <span class=\"o\">&lt;&lt;&lt;</span> <span class=\"s2\">\"</span><span class=\"nv\">$line</span><span class=\"s2\">\"</span><span class=\"p\">;</span> <span class=\"k\">then\n                            if</span> <span class=\"o\">[[</span> <span class=\"o\">!</span> <span class=\"nv\">$line</span> <span class=\"o\">=</span>~ ^[[:space:]]<span class=\"k\">*</span><span class=\"c\">#import ]]; then</span>\n                                <span class=\"nv\">has_comment</span><span class=\"o\">=</span><span class=\"nb\">true\n                                echo</span> <span class=\"s2\">\"在文件:\"</span><span class=\"nv\">$other_file</span><span class=\"s2\">\"匹配\"</span><span class=\"nv\">$filename</span><span class=\"s2\">\"存在 并且不是 注释代码 或者 import 的 break（\"</span><span class=\"nv\">$line</span>\n                                <span class=\"nb\">break\n                            </span><span class=\"k\">fi\n\n                        fi\n                    done</span> <span class=\"o\">&lt;&lt;&lt;</span> <span class=\"s2\">\"</span><span class=\"si\">$(</span><span class=\"nb\">grep</span> <span class=\"s2\">\"</span><span class=\"se\">\\b</span><span class=\"nv\">$filename</span><span class=\"se\">\\b</span><span class=\"s2\">\"</span> <span class=\"s2\">\"</span><span class=\"nv\">$other_file</span><span class=\"s2\">\"</span><span class=\"si\">)</span><span class=\"s2\">\"</span>\n                    \n                    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"s2\">\"</span><span class=\"nv\">$has_comment</span><span class=\"s2\">\"</span> <span class=\"o\">=</span> <span class=\"nb\">true</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n                        </span><span class=\"nv\">is_referenced</span><span class=\"o\">=</span><span class=\"nb\">true\n                        break\n                    </span><span class=\"k\">fi\n                fi\n            fi\n        done\n\n        if</span> <span class=\"o\">[</span> <span class=\"s2\">\"</span><span class=\"nv\">$is_referenced</span><span class=\"s2\">\"</span> <span class=\"o\">=</span> <span class=\"nb\">false</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n            </span><span class=\"nb\">echo</span> <span class=\"s2\">\"没有被引用到的文件:\"</span><span class=\"nv\">$file</span>\n            <span class=\"nv\">unused_files</span><span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"nv\">$unused_files$file</span><span class=\"se\">\\n</span><span class=\"s2\">\"</span>\n        <span class=\"k\">fi\n        </span><span class=\"nb\">echo</span> <span class=\"s2\">\"***********\"</span>\n    <span class=\"k\">done</span>\n\n    <span class=\"c\"># 输出未被引用的文件列表</span>\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-n</span> <span class=\"s2\">\"</span><span class=\"nv\">$unused_files</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">echo</span> <span class=\"nt\">-e</span> <span class=\"s2\">\"Unused class files:</span><span class=\"se\">\\n</span><span class=\"nv\">$unused_files</span><span class=\"s2\">\"</span>\n        <span class=\"nv\">total_unused_file_name</span><span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"nv\">$total_unused_file_name$unused_files</span><span class=\"se\">\\n</span><span class=\"s2\">\"</span>\n\n        <span class=\"c\">#将检索出来的文件 mv 出来</span>\n        <span class=\"nb\">mkdir</span> <span class=\"nt\">-p</span> ./unused_files/<span class=\"nv\">$cycle_idx</span>/\n        <span class=\"nv\">array</span><span class=\"o\">=(</span><span class=\"sb\">`</span><span class=\"nb\">echo</span> <span class=\"nv\">$unused_files</span> | <span class=\"nb\">tr</span> <span class=\"s1\">'\\n'</span> <span class=\"s1\">' '</span><span class=\"sb\">`</span><span class=\"o\">)</span>\n        <span class=\"k\">for </span>element <span class=\"k\">in</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">array</span><span class=\"p\">[@]</span><span class=\"k\">}</span><span class=\"s2\">\"</span><span class=\"p\">;</span> <span class=\"k\">do\n            </span><span class=\"nv\">element</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">echo</span> <span class=\"s2\">\"</span><span class=\"nv\">$element</span><span class=\"s2\">\"</span> | <span class=\"nb\">tr</span> <span class=\"nt\">-d</span> <span class=\"s1\">'\\n'</span><span class=\"si\">)</span>\n            <span class=\"nb\">echo</span> <span class=\"s2\">\"Unused class = \"</span><span class=\"nv\">$element</span>\n            <span class=\"nv\">element_filename</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">basename</span> <span class=\"s2\">\"</span><span class=\"nv\">$element</span><span class=\"s2\">\"</span> .m<span class=\"si\">)</span>\n            <span class=\"nv\">element_dirname</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">dirname</span> <span class=\"s2\">\"</span><span class=\"nv\">$element</span><span class=\"s2\">\"</span><span class=\"si\">)</span>\n            <span class=\"nb\">mv</span> <span class=\"nt\">-f</span> <span class=\"k\">${</span><span class=\"nv\">element_dirname</span><span class=\"k\">}</span>/<span class=\"k\">${</span><span class=\"nv\">element_filename</span><span class=\"k\">}</span>.h ./unused_files/<span class=\"nv\">$cycle_idx</span>/<span class=\"nv\">$element_filename</span>.h\n            <span class=\"nb\">mv</span> <span class=\"nt\">-f</span> <span class=\"k\">${</span><span class=\"nv\">element_dirname</span><span class=\"k\">}</span>/<span class=\"k\">${</span><span class=\"nv\">element_filename</span><span class=\"k\">}</span>.m ./unused_files/<span class=\"nv\">$cycle_idx</span>/<span class=\"nv\">$element_filename</span>.m\n        <span class=\"k\">done</span>\n        \n        <span class=\"c\">#cycle_deal参数为空则不循环执行</span>\n        <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-n</span> <span class=\"s2\">\"</span><span class=\"nv\">$cycle_deal</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n            </span><span class=\"nb\">exit\n        </span><span class=\"k\">else</span>\n            <span class=\"c\">#cycle_deal 不为空 循环执行，直到不再有新文件检出</span>\n            <span class=\"nb\">echo</span> <span class=\"nt\">-e</span> <span class=\"s2\">\"循环执行\"</span>\n            <span class=\"nv\">cycle_idx</span><span class=\"o\">=</span><span class=\"k\">$((</span>cycle_idx+1<span class=\"k\">))</span>\n            main <span class=\"nv\">$1</span>\n        <span class=\"k\">done\n\n    else\n        </span><span class=\"nb\">echo</span> <span class=\"s2\">\"No unused ViewController files found.\"</span><span class=\"nv\">$all_file_path</span>\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"**************************\"</span>\n        <span class=\"nb\">echo</span> <span class=\"nt\">-e</span> <span class=\"s2\">\"total_unused_file_name class files:</span><span class=\"se\">\\n</span><span class=\"nv\">$total_unused_file_name</span><span class=\"s2\">\"</span>\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"**************************\"</span>\n\n        <span class=\"nb\">exit </span>0\n    <span class=\"k\">fi</span>\n<span class=\"o\">}</span>\n\n\nmain <span class=\"nv\">$1</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h4 id=\"223-尚有不足之处\">2.2.3 尚有不足之处</h4>\n\n<p>当前工具只是匹配一层未引用，也可能如下情况未适配：</p>\n\n<ul>\n  <li>存在2个以上的类存在互相引用，但却未被其他类用到，但是以上脚本暂时无法识别</li>\n  <li>存在某些类存在在其他API类、通用类、工具类等方法中，但是此方法未被调用，则此方法和该类也可以被移除，但是以上脚本暂时无法识别</li>\n</ul>\n\n","name":"2023-08-17-iOS组件化-业务组件准备篇.md","previous":{"id":"/2023/08/11/Apple企业账号注册流程","tags":[],"relative_path":"_posts/2023-08-11-Apple企业账号注册流程.md","collection":"posts","name":"2023-08-11-Apple企业账号注册流程.md","url":"/2023/08/11/Apple%E4%BC%81%E4%B8%9A%E8%B4%A6%E5%8F%B7%E6%B3%A8%E5%86%8C%E6%B5%81%E7%A8%8B/","title":"Apple 企业账号注册流程","date":"2023-08-11 00:00:00 +0800","categories":[],"path":"_posts/2023-08-11-Apple企业账号注册流程.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/home-bg-geek.jpg","slug":"Apple企业账号注册流程","ext":".md"},"output":"<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"google-site-verification\" content=\"xBT4GhYoi5qRD5tr338pgPM5OWHHIDR6mNg1a3euekI\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, viewport-fit=cover\">\n    <meta name=\"description\" content=\"与你一起发现更大的世界。\">\n    <meta name=\"keywords\"  content=\"PaysonChen,iOS,流媒体\">\n    <meta name=\"theme-color\" content=\"#000000\">\n    \n    <!-- Open Graph -->\n    <meta property=\"og:title\" content=\"iOS组件化之：业务组件准备篇 - PaysonChen的博客 | PaysonChen Blog\">\n    \n    <meta property=\"og:type\" content=\"article\">\n    <meta property=\"og:description\" content=\"iOS组件化之：业务组件准备篇\n\">\n    \n    \n    <meta property=\"article:published_time\" content=\"2023-08-17T00:00:00Z\">\n    \n    \n    <meta property=\"article:author\" content=\"PaysonChen\">\n    \n    \n    \n    <meta property=\"og:image\" content=\"http://localhost:4000\">\n    <meta property=\"og:url\" content=\"http://localhost:4000/2023/08/17/iOS%E7%BB%84%E4%BB%B6%E5%8C%96-%E4%B8%9A%E5%8A%A1%E7%BB%84%E4%BB%B6%E5%87%86%E5%A4%87%E7%AF%87/\">\n    <meta property=\"og:site_name\" content=\"PaysonChen的博客 | PaysonChen Blog\">\n    \n    <title>iOS组件化之：业务组件准备篇 - PaysonChen的博客 | PaysonChen Blog</title>\n\n    <!-- Web App Manifest -->\n    <link rel=\"manifest\" href=\"/pwa/manifest.json\">\n\n    <!-- Favicon -->\n    <link rel=\"shortcut icon\" href=\"/img/favicon.ico\">\n    \n    <!-- Canonical URL -->\n    <link rel=\"canonical\" href=\"http://localhost:4000/2023/08/17/iOS%E7%BB%84%E4%BB%B6%E5%8C%96-%E4%B8%9A%E5%8A%A1%E7%BB%84%E4%BB%B6%E5%87%86%E5%A4%87%E7%AF%87/\">\n\n    <!-- Bootstrap Core CSS -->\n    <link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\">\n\n    <!-- Custom CSS -->\n    <link rel=\"stylesheet\" href=\"/css/hux-blog.min.css\">\n\n    <!-- Custom Fonts -->\n    <!-- <link href=\"http://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\"> -->\n    <!-- Hux change font-awesome CDN to qiniu -->\n    <link href=\"//cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\">\n\n\n    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->\n    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->\n    <!--[if lt IE 9]>\n        <script src=\"https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js\"></script>\n        <script src=\"https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js\"></script>\n    <![endif]-->\n\n    <!-- ga & ba script hoook -->\n    <script></script>\n</head>\n\n\n<!-- hack iOS CSS :active style -->\n<body ontouchstart=\"\">\n\n    <!-- Navigation -->\n\n    <nav class=\"navbar navbar-default navbar-custom navbar-fixed-top\">\n        \n        <div class=\"container-fluid\">\n            <!-- Brand and toggle get grouped for better mobile display -->\n            <div class=\"navbar-header page-scroll\">\n                <button type=\"button\" class=\"navbar-toggle\">\n                    <span class=\"sr-only\">Toggle navigation</span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                </button>\n                <a class=\"navbar-brand\" href=\"/\">PaysonChen Blog</a>\n            </div>\n\n            <!-- Collect the nav links, forms, and other content for toggling -->\n            <div id=\"huxblog_navbar\">\n                <div class=\"navbar-collapse\">\n                    <ul class=\"nav navbar-nav navbar-right\">\n                        <li>\n                            <a href=\"/\">Home</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        <li>\n                            <a href=\"/about/\">About</a>\n                        </li>\n                        \n                        \n                        \n                        <li>\n                            <a href=\"/archive/\">Archive</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        <li class=\"search-icon\">\n                            <a href=\"javascript:void(0)\">\n                                <i class=\"fa fa-search\"></i>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n            <!-- /.navbar-collapse -->\n        </div>\n        <!-- /.container -->\n    </nav>\n\n    <script>\n        // Drop Bootstarp low-performance Navbar\n        // Use customize navbar with high-quality material design animation\n        // in high-perf jank-free CSS3 implementation\n        var $body = document.body;\n        var $toggle = document.querySelector('.navbar-toggle');\n        var $navbar = document.querySelector('#huxblog_navbar');\n        var $collapse = document.querySelector('.navbar-collapse');\n\n        var __HuxNav__ = {\n            close: function () {\n                $navbar.className = \" \";\n                // wait until animation end.\n                setTimeout(function () {\n                    // prevent frequently toggle\n                    if ($navbar.className.indexOf('in') < 0) {\n                        $collapse.style.height = \"0px\"\n                    }\n                }, 400)\n            },\n            open: function () {\n                $collapse.style.height = \"auto\"\n                $navbar.className += \" in\";\n            }\n        }\n\n        // Bind Event\n        $toggle.addEventListener('click', function (e) {\n            if ($navbar.className.indexOf('in') > 0) {\n                __HuxNav__.close()\n            } else {\n                __HuxNav__.open()\n            }\n        })\n\n        /**\n         * Since Fastclick is used to delegate 'touchstart' globally\n         * to hack 300ms delay in iOS by performing a fake 'click',\n         * Using 'e.stopPropagation' to stop 'touchstart' event from \n         * $toggle/$collapse will break global delegation.\n         * \n         * Instead, we use a 'e.target' filter to prevent handler\n         * added to document close HuxNav.  \n         *\n         * Also, we use 'click' instead of 'touchstart' as compromise\n         */\n        document.addEventListener('click', function (e) {\n            if (e.target == $toggle) return;\n            if (e.target.className == 'icon-bar') return;\n            __HuxNav__.close();\n        })\n    </script>\n    <!-- Search -->\n<div class=\"search-page\">\n  <div class=\"search-icon-close-container\">\n    <span class=\"search-icon-close\">\n      <i class=\"fa fa-chevron-down\"></i>\n    </span>\n  </div>\n  <div class=\"search-main container\">\n    <div class=\"row\">\n      <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n        <form></form>\n        <input type=\"text\" id=\"search-input\" placeholder=\"$ grep...\">\n        </form>\n        <div id=\"search-results\" class=\"mini-post-list\"></div>\n      </div>\n    </div>\n  </div>\n</div>\n\n    <!-- Image to hack wechat -->\n<!-- <img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\"> -->\n<!-- <img src=\"/img/home-bg-geek.jpg\" width=\"0\" height=\"0\"> -->\n\n<!-- Post Header -->\n\n\n\n<style type=\"text/css\">\n    header.intro-header{\n        position: relative;\n        background-image: url('/img/home-bg-geek.jpg');\n        background: ;\n    }\n\n    \n</style>\n\n<header class=\"intro-header\" >\n\n    <div class=\"header-mask\"></div>\n    \n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <div class=\"post-heading\">\n                    <div class=\"tags\">\n                        \n                    </div>\n                    <h1>iOS组件化之：业务组件准备篇</h1>\n                    \n                    <h2 class=\"subheading\"></h2>\n                    <span class=\"meta\">Posted by PaysonChen on August 17, 2023</span>\n                </div>\n            </div>\n        </div>\n    </div>\n</header>\n\n\n\n\n\n\n<!-- Post Content -->\n<article>\n    <div class=\"container\">\n        <div class=\"row\">\n\n    <!-- Post Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                post-container\">\n\n                <!-- Multi-Lingual -->\n                \n\n\t\t\t\t<h1 id=\"ios组件化之业务组件准备篇\">iOS组件化之：业务组件准备篇</h1>\n\n<h2 id=\"1-背景\">1. 背景</h2>\n\n<p>基础组件拆分到一定程度时，主工程剩下的就多数与视图界面(vc、view等)相关的类文件。此时可以考虑对业务组件进行设计和规划，但是在此时，工程还存在如下问题：</p>\n\n<ul>\n  <li>​\t冗余文件：\n    <ul>\n      <li>未被引用到Project，但存在在工程目录中的冗余的类文件</li>\n    </ul>\n  </li>\n  <li>​\t非冗余但未被使用的文件\n    <ul>\n      <li>未在其他类中使用到的类文件</li>\n    </ul>\n  </li>\n</ul>\n\n<p>为了减轻业务组件的工作量和复杂度，在此之前最好能净化/清理一下工程</p>\n\n<p>具体采用人工 or 脚本 进行清理：</p>\n\n<p>根据我们进行估算，执行的时间复杂度为 n²，如果主工程（还未进行业务组件抽离）里还有1000个文件，则遍历一遍则需要进行100万次检索，m2 芯片执行一次需要2小时左右。人工检索时间更长，并且人工检索将呈现边际效用递增的问题。</p>\n\n<p>脚本解决上述问题，并能实现近乎为0的边际成本，可以沉淀具体算法，供其他项目使用</p>\n\n<h2 id=\"2-工程清理\">2. 工程清理</h2>\n\n<h3 id=\"21-冗余文件清理\">2.1 冗余文件清理</h3>\n\n<p>通过递归遍历工程目录，将遍历后的类名逐一与XXX.xcodeproj/project.pbxproj 文件内容进行匹配，匹配失败即为：</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>未被引用到Project，但存在在工程目录中的冗余的类文件\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>具体思路可以这样实现：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\"># 设置项目目录</span>\n<span class=\"nv\">project_directory</span><span class=\"o\">=</span><span class=\"s2\">\"工程项目目录\"</span>\n<span class=\"nv\">project_path</span><span class=\"o\">=</span><span class=\"s2\">\"xxx.xcodeproj/project.pbxproj的目录\"</span>\n\n<span class=\"c\"># 查找所有以ViewController.m结尾的文件并输出列表</span>\n<span class=\"c\"># 查找所有以ViewController.m结尾的文件并输出不包含后缀名的文件名</span>\n<span class=\"nv\">all_file_path</span><span class=\"o\">=</span><span class=\"si\">$(</span>find <span class=\"s2\">\"</span><span class=\"nv\">$project_directory</span><span class=\"s2\">\"</span> <span class=\"nt\">-type</span> f <span class=\"se\">\\(</span> <span class=\"nt\">-name</span> <span class=\"s2\">\"*.h\"</span> <span class=\"se\">\\)</span><span class=\"si\">)</span>\n\n<span class=\"k\">for </span>src_file <span class=\"k\">in</span> <span class=\"nv\">$all_file_path</span><span class=\"p\">;</span> <span class=\"k\">do</span>\n<span class=\"c\">#    echo $src_file</span>\n    <span class=\"nv\">filename</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">basename</span> <span class=\"s2\">\"</span><span class=\"nv\">$src_file</span><span class=\"s2\">\"</span> .h<span class=\"si\">)</span>\n    <span class=\"k\">if</span>  <span class=\"o\">!</span> <span class=\"nb\">grep</span> <span class=\"nt\">-q</span> <span class=\"s2\">\"</span><span class=\"se\">\\b</span><span class=\"nv\">$filename</span><span class=\"se\">\\b</span><span class=\"s2\">\"</span> <span class=\"s2\">\"</span><span class=\"nv\">$project_path</span><span class=\"s2\">\"</span><span class=\"p\">;</span>  <span class=\"k\">then\n        </span><span class=\"nb\">echo</span> <span class=\"s2\">\"project不包含：\"</span><span class=\"nv\">$filename</span>\n    <span class=\"k\">fi\ndone</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h3 id=\"22-未使用文件清理\">2.2 未使用文件清理</h3>\n\n<h4 id=\"221-fui工具\">2.2.1 <a href=\"https://github.com/dblock/fui\">fui工具</a></h4>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n</pre></td><td class=\"rouge-code\"><pre><span class=\"nb\">sudo </span>gem <span class=\"nb\">install </span>fui <span class=\"nt\">-n</span> /usr/local/bin\n\nfui find\t<span class=\"c\">#当前目录执行</span>\nfui <span class=\"nt\">--path</span><span class=\"o\">=</span>~/source/project/Name find\t<span class=\"c\">#指定目录执行</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>fui工具的源码，暂时还没去详细看，但是发现一个问题，他无法识别注释的取消引用：</p>\n\n<p>举个例子，A import B，但是import 当前行注释掉了:</p>\n\n<pre><code class=\"language-objective-c\">//\n//  \n//  A.m  \n//  Example\n//\n//  Created by PSC on 2023/8/15\n//  Copyright © 2023 PSC. All rights reserved.\n//\n\n#import \"A.h\"\n//#import \"B.h\"\n\n……\n</code></pre>\n\n<p>在fui的执行结果中，不会认为B没有被使用。</p>\n\n<h4 id=\"222-自建工具\">2.2.2 自建工具</h4>\n\n<p>为了解决上述fui工具的问题，并且做出一些优化，自建工具的设计思路为：</p>\n\n<ul>\n  <li>遍历工程目录的所有实现类：.m文件（不包含category）</li>\n  <li>将类名与工程内除自身以外所有文件进行进逐行匹配（包含category）</li>\n  <li>当匹配到不包含// 与 #import 开头的行，则算为有引用，否则为未引用</li>\n  <li>将未匹配到的文件路径进行输出</li>\n  <li>将上述匹配出来的文件先进行移除，再执行一遍（由于第一层被移除，可能会暴露出更多没被引用的类）</li>\n  <li>直到没有匹配到未被调用的类为止</li>\n</ul>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#!/bin/bash</span>\n\n<span class=\"c\"># [背景]</span>\n<span class=\"c\"># 基础组件拆分到一定程度时，主工程剩下的就多数与视图界面(vc、view等)相关的类文件。此时可以考虑对业务组件进行设计和规划，但是在此时，工程还存在如下问题：</span>\n<span class=\"c\">#    冗余文件：</span>\n<span class=\"c\">#​    非冗余但未被使用的文件</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># author: Chenyp34</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [目的]</span>\n<span class=\"c\"># 此脚本解决 \"非冗余但未被使用的文件\" 的清理</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [目录]</span>\n<span class=\"c\">#   - find_unused_class.sh</span>\n<span class=\"c\"># [说明]</span>\n<span class=\"c\"># 1 遍历工程目录的所有实现类：.m文件（不包含category）</span>\n<span class=\"c\"># 2 将类名与工程内除自身以外所有文件进行进逐行匹配（包含category）</span>\n<span class=\"c\"># 3 当匹配到不包含// 与 #import 开头的行，则算为有引用，否则为未引用</span>\n<span class=\"c\"># 4 将未匹配到的文件路径进行输出</span>\n<span class=\"c\"># 5 将上述匹配出来的文件先进行移除，再执行一遍（由于第一层被移除，可能会暴露出更多没被引用的类）</span>\n<span class=\"c\"># 6 直到没有匹配到未被调用的类为止</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [参数]</span>\n<span class=\"c\"># 1、参数1，指定xcode工程目录 （未指定则为当前目录）</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [调用说明]</span>\n<span class=\"c\"># 1、未指定目录，则取当前目录：sh find_unused_class.sh</span>\n<span class=\"c\"># 2、指定目录 ：sh find_unused_class.sh /Users/xxxxx/Project-IOS/Project/Project</span>\n\n\n<span class=\"c\">#!/bin/bash</span>\n\n<span class=\"c\">#是否重复执行到没有找到不可用文件</span>\n<span class=\"nb\">export </span><span class=\"nv\">cycle_deal</span><span class=\"o\">=</span>1\n<span class=\"nb\">export </span><span class=\"nv\">cycle_idx</span><span class=\"o\">=</span>1\n<span class=\"nv\">total_unused_file_name</span><span class=\"o\">=</span><span class=\"s1\">''</span>\n<span class=\"k\">function </span>main<span class=\"o\">()</span> <span class=\"o\">{</span>\n    \n    <span class=\"c\"># 设置项目目录</span>\n    <span class=\"nv\">project_directory</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$1</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then</span>\n        <span class=\"c\">#未传参为当前目录</span>\n        <span class=\"nv\">project_directory</span><span class=\"o\">=</span><span class=\"nb\">.</span>\n    <span class=\"k\">fi</span>\n\n    <span class=\"c\">#初始化参数：</span>\n    <span class=\"nv\">unused_files</span><span class=\"o\">=</span><span class=\"s1\">''</span>\n\n    <span class=\"c\"># 查找所有以ViewController.m结尾的文件并输出列表</span>\n    <span class=\"nv\">all_class_path</span><span class=\"o\">=</span><span class=\"si\">$(</span>find <span class=\"s2\">\"</span><span class=\"nv\">$project_directory</span><span class=\"s2\">\"</span> <span class=\"nt\">-type</span> f <span class=\"se\">\\(</span> <span class=\"nt\">-name</span> <span class=\"s2\">\"*.m\"</span> <span class=\"se\">\\)</span> | <span class=\"nb\">grep</span> <span class=\"nt\">-v</span> <span class=\"s1\">'+'</span><span class=\"si\">)</span>\n\n    <span class=\"nv\">all_file_path</span><span class=\"o\">=</span><span class=\"si\">$(</span>find <span class=\"s2\">\"</span><span class=\"nv\">$project_directory</span><span class=\"s2\">\"</span> <span class=\"nt\">-type</span> f <span class=\"se\">\\(</span> <span class=\"nt\">-name</span> <span class=\"s2\">\"*.m\"</span> <span class=\"nt\">-o</span> <span class=\"nt\">-name</span> <span class=\"s2\">\"*.h\"</span> <span class=\"se\">\\)</span> <span class=\"si\">)</span>\n\n    <span class=\"k\">for </span>file <span class=\"k\">in</span> <span class=\"nv\">$all_class_path</span><span class=\"p\">;</span> <span class=\"k\">do\n        </span><span class=\"nv\">filename</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">basename</span> <span class=\"s2\">\"</span><span class=\"nv\">$file</span><span class=\"s2\">\"</span> .m<span class=\"si\">)</span>\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"***********开始遍历文件名：\"</span><span class=\"nv\">$filename</span>\n        <span class=\"nv\">is_referenced</span><span class=\"o\">=</span><span class=\"nb\">false\n        </span><span class=\"k\">for </span>other_file <span class=\"k\">in</span> <span class=\"nv\">$all_file_path</span><span class=\"p\">;</span> <span class=\"k\">do\n            </span><span class=\"nv\">other_file_name</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">basename</span> <span class=\"s2\">\"</span><span class=\"nv\">$other_file</span><span class=\"s2\">\"</span><span class=\"si\">)</span>\n            <span class=\"c\">#获取除自身以外的类名：不包含拓展的名称，为了避免在自身的.h .m进行引用判断</span>\n            <span class=\"nv\">other_file_name_without_extension</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">echo</span> <span class=\"s2\">\"</span><span class=\"nv\">$other_file_name</span><span class=\"s2\">\"</span> | <span class=\"nb\">cut</span> <span class=\"nt\">-d</span><span class=\"nb\">.</span> <span class=\"nt\">-f1</span><span class=\"si\">)</span>\n            <span class=\"c\">#获取category的主类名称</span>\n            <span class=\"nv\">other_file_name_without_extension_before_plus</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">echo</span> <span class=\"s2\">\"</span><span class=\"nv\">$other_file_name_without_extension</span><span class=\"s2\">\"</span> | <span class=\"nb\">awk</span> <span class=\"nt\">-F</span><span class=\"s1\">'+'</span> <span class=\"s1\">'{print $1}'</span><span class=\"si\">)</span>\n            <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"s2\">\"</span><span class=\"nv\">$other_file_name_without_extension_before_plus</span><span class=\"s2\">\"</span> <span class=\"o\">!=</span> <span class=\"s2\">\"</span><span class=\"nv\">$filename</span><span class=\"s2\">\"</span> <span class=\"o\">]</span> <span class=\"p\">;</span> <span class=\"k\">then</span>\n            <span class=\"c\"># if [ \"$other_file\" != \"$file\" ] &amp;&amp; ([ \"${other_file##*.}\" = \"m\" ] ); then</span>\n                <span class=\"k\">if </span><span class=\"nb\">grep</span> <span class=\"nt\">-q</span> <span class=\"s2\">\"</span><span class=\"se\">\\b</span><span class=\"nv\">$filename</span><span class=\"se\">\\b</span><span class=\"s2\">\"</span> <span class=\"s2\">\"</span><span class=\"nv\">$other_file</span><span class=\"s2\">\"</span><span class=\"p\">;</span>  <span class=\"k\">then</span>\n                    <span class=\"c\"># 检查文件中是否有注释行</span>\n                    <span class=\"nv\">has_comment</span><span class=\"o\">=</span><span class=\"nb\">false\n                    </span><span class=\"k\">while </span><span class=\"nv\">IFS</span><span class=\"o\">=</span> <span class=\"nb\">read</span> <span class=\"nt\">-r</span> line<span class=\"p\">;</span> <span class=\"k\">do\n                        </span><span class=\"nb\">echo</span> <span class=\"s2\">\"逐行匹配：\"</span><span class=\"nv\">$line</span>\n                        <span class=\"k\">if</span> <span class=\"o\">!</span> <span class=\"nb\">grep</span> <span class=\"nt\">-qE</span> <span class=\"s2\">\"^[[:space:]]*//\"</span> <span class=\"o\">&lt;&lt;&lt;</span> <span class=\"s2\">\"</span><span class=\"nv\">$line</span><span class=\"s2\">\"</span><span class=\"p\">;</span> <span class=\"k\">then\n                            if</span> <span class=\"o\">[[</span> <span class=\"o\">!</span> <span class=\"nv\">$line</span> <span class=\"o\">=</span>~ ^[[:space:]]<span class=\"k\">*</span><span class=\"c\">#import ]]; then</span>\n                                <span class=\"nv\">has_comment</span><span class=\"o\">=</span><span class=\"nb\">true\n                                echo</span> <span class=\"s2\">\"在文件:\"</span><span class=\"nv\">$other_file</span><span class=\"s2\">\"匹配\"</span><span class=\"nv\">$filename</span><span class=\"s2\">\"存在 并且不是 注释代码 或者 import 的 break（\"</span><span class=\"nv\">$line</span>\n                                <span class=\"nb\">break\n                            </span><span class=\"k\">fi\n\n                        fi\n                    done</span> <span class=\"o\">&lt;&lt;&lt;</span> <span class=\"s2\">\"</span><span class=\"si\">$(</span><span class=\"nb\">grep</span> <span class=\"s2\">\"</span><span class=\"se\">\\b</span><span class=\"nv\">$filename</span><span class=\"se\">\\b</span><span class=\"s2\">\"</span> <span class=\"s2\">\"</span><span class=\"nv\">$other_file</span><span class=\"s2\">\"</span><span class=\"si\">)</span><span class=\"s2\">\"</span>\n                    \n                    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"s2\">\"</span><span class=\"nv\">$has_comment</span><span class=\"s2\">\"</span> <span class=\"o\">=</span> <span class=\"nb\">true</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n                        </span><span class=\"nv\">is_referenced</span><span class=\"o\">=</span><span class=\"nb\">true\n                        break\n                    </span><span class=\"k\">fi\n                fi\n            fi\n        done\n\n        if</span> <span class=\"o\">[</span> <span class=\"s2\">\"</span><span class=\"nv\">$is_referenced</span><span class=\"s2\">\"</span> <span class=\"o\">=</span> <span class=\"nb\">false</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n            </span><span class=\"nb\">echo</span> <span class=\"s2\">\"没有被引用到的文件:\"</span><span class=\"nv\">$file</span>\n            <span class=\"nv\">unused_files</span><span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"nv\">$unused_files$file</span><span class=\"se\">\\n</span><span class=\"s2\">\"</span>\n        <span class=\"k\">fi\n        </span><span class=\"nb\">echo</span> <span class=\"s2\">\"***********\"</span>\n    <span class=\"k\">done</span>\n\n    <span class=\"c\"># 输出未被引用的文件列表</span>\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-n</span> <span class=\"s2\">\"</span><span class=\"nv\">$unused_files</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">echo</span> <span class=\"nt\">-e</span> <span class=\"s2\">\"Unused class files:</span><span class=\"se\">\\n</span><span class=\"nv\">$unused_files</span><span class=\"s2\">\"</span>\n        <span class=\"nv\">total_unused_file_name</span><span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"nv\">$total_unused_file_name$unused_files</span><span class=\"se\">\\n</span><span class=\"s2\">\"</span>\n\n        <span class=\"c\">#将检索出来的文件 mv 出来</span>\n        <span class=\"nb\">mkdir</span> <span class=\"nt\">-p</span> ./unused_files/<span class=\"nv\">$cycle_idx</span>/\n        <span class=\"nv\">array</span><span class=\"o\">=(</span><span class=\"sb\">`</span><span class=\"nb\">echo</span> <span class=\"nv\">$unused_files</span> | <span class=\"nb\">tr</span> <span class=\"s1\">'\\n'</span> <span class=\"s1\">' '</span><span class=\"sb\">`</span><span class=\"o\">)</span>\n        <span class=\"k\">for </span>element <span class=\"k\">in</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">array</span><span class=\"p\">[@]</span><span class=\"k\">}</span><span class=\"s2\">\"</span><span class=\"p\">;</span> <span class=\"k\">do\n            </span><span class=\"nv\">element</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">echo</span> <span class=\"s2\">\"</span><span class=\"nv\">$element</span><span class=\"s2\">\"</span> | <span class=\"nb\">tr</span> <span class=\"nt\">-d</span> <span class=\"s1\">'\\n'</span><span class=\"si\">)</span>\n            <span class=\"nb\">echo</span> <span class=\"s2\">\"Unused class = \"</span><span class=\"nv\">$element</span>\n            <span class=\"nv\">element_filename</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">basename</span> <span class=\"s2\">\"</span><span class=\"nv\">$element</span><span class=\"s2\">\"</span> .m<span class=\"si\">)</span>\n            <span class=\"nv\">element_dirname</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">dirname</span> <span class=\"s2\">\"</span><span class=\"nv\">$element</span><span class=\"s2\">\"</span><span class=\"si\">)</span>\n            <span class=\"nb\">mv</span> <span class=\"nt\">-f</span> <span class=\"k\">${</span><span class=\"nv\">element_dirname</span><span class=\"k\">}</span>/<span class=\"k\">${</span><span class=\"nv\">element_filename</span><span class=\"k\">}</span>.h ./unused_files/<span class=\"nv\">$cycle_idx</span>/<span class=\"nv\">$element_filename</span>.h\n            <span class=\"nb\">mv</span> <span class=\"nt\">-f</span> <span class=\"k\">${</span><span class=\"nv\">element_dirname</span><span class=\"k\">}</span>/<span class=\"k\">${</span><span class=\"nv\">element_filename</span><span class=\"k\">}</span>.m ./unused_files/<span class=\"nv\">$cycle_idx</span>/<span class=\"nv\">$element_filename</span>.m\n        <span class=\"k\">done</span>\n        \n        <span class=\"c\">#cycle_deal参数为空则不循环执行</span>\n        <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-n</span> <span class=\"s2\">\"</span><span class=\"nv\">$cycle_deal</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n            </span><span class=\"nb\">exit\n        </span><span class=\"k\">else</span>\n            <span class=\"c\">#cycle_deal 不为空 循环执行，直到不再有新文件检出</span>\n            <span class=\"nb\">echo</span> <span class=\"nt\">-e</span> <span class=\"s2\">\"循环执行\"</span>\n            <span class=\"nv\">cycle_idx</span><span class=\"o\">=</span><span class=\"k\">$((</span>cycle_idx+1<span class=\"k\">))</span>\n            main <span class=\"nv\">$1</span>\n        <span class=\"k\">done\n\n    else\n        </span><span class=\"nb\">echo</span> <span class=\"s2\">\"No unused ViewController files found.\"</span><span class=\"nv\">$all_file_path</span>\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"**************************\"</span>\n        <span class=\"nb\">echo</span> <span class=\"nt\">-e</span> <span class=\"s2\">\"total_unused_file_name class files:</span><span class=\"se\">\\n</span><span class=\"nv\">$total_unused_file_name</span><span class=\"s2\">\"</span>\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"**************************\"</span>\n\n        <span class=\"nb\">exit </span>0\n    <span class=\"k\">fi</span>\n<span class=\"o\">}</span>\n\n\nmain <span class=\"nv\">$1</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h4 id=\"223-尚有不足之处\">2.2.3 尚有不足之处</h4>\n\n<p>当前工具只是匹配一层未引用，也可能如下情况未适配：</p>\n\n<ul>\n  <li>存在2个以上的类存在互相引用，但却未被其他类用到，但是以上脚本暂时无法识别</li>\n  <li>存在某些类存在在其他API类、通用类、工具类等方法中，但是此方法未被调用，则此方法和该类也可以被移除，但是以上脚本暂时无法识别</li>\n</ul>\n\n\n\n                <hr style=\"visibility: hidden;\">\n                <ul class=\"pager\">\n                    \n                    <li class=\"previous\">\n                        <a href=\"/2023/08/11/Apple%E4%BC%81%E4%B8%9A%E8%B4%A6%E5%8F%B7%E6%B3%A8%E5%86%8C%E6%B5%81%E7%A8%8B/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Apple 企业账号注册流程\">\n                        Previous<br>\n                        <span>Apple 企业账号注册流程</span>\n                        </a>\n                    </li>\n                    \n                    \n                    <li class=\"next\">\n                        <a href=\"/2023/09/12/iOS-OC-Swift%E6%B7%B7%E7%BC%96/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Pod仓库内OC与Swift调用\">\n                        Next<br>\n                        <span>Pod仓库内OC与Swift调用</span>\n                        </a>\n                    </li>\n                    \n                </ul>\n                <hr style=\"visibility: hidden;\">\n\n                \n                <!-- disqus 评论框 start -->\n                <div class=\"comment\">\n                    <div id=\"disqus_thread\" class=\"disqus-thread\"></div>\n                </div>\n                <!-- disqus 评论框 end -->\n                \n\n                \n            </div>  \n\n    <!-- Side Catalog Container -->\n        \n            <div class=\"\n                col-lg-2 col-lg-offset-0\n                visible-lg-block\n                sidebar-container\n                catalog-container\">\n                <div class=\"side-catalog\">\n                    <hr class=\"hidden-sm hidden-xs\">\n                    <h5>\n                        <a class=\"catalog-toggle\" href=\"#\">CATALOG</a>\n                    </h5>\n                    <ul class=\"catalog-body\"></ul>\n                </div>\n            </div>\n        \n\n    <!-- Sidebar Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                sidebar-container\">\n\n                <!-- Featured Tags -->\n                \n\n\n<section>\n    \n        <hr class=\"hidden-sm hidden-xs\">\n    \n    <h5><a href=\"/archive/\">FEATURED TAGS</a></h5>\n    <div class=\"tags\">\n        \n        \n        \n        \n        \n    </div>\n</section>\n\n\n                <!-- Friends Blog -->\n                \n            </div>\n        </div>\n    </div>\n</article>\n\n<!-- add support for mathjax by voleking-->\n\n\n\n\n\n\n<!-- disqus 公共JS代码 start (一个网页只需插入一次) -->\n<script type=\"text/javascript\">\n    /* * * CONFIGURATION VARIABLES * * */\n    var disqus_shortname = \"Cyp\";\n    var disqus_identifier = \"/2023/08/17/iOS组件化-业务组件准备篇\";\n    var disqus_url = \"http://localhost:4000/2023/08/17/iOS%E7%BB%84%E4%BB%B6%E5%8C%96-%E4%B8%9A%E5%8A%A1%E7%BB%84%E4%BB%B6%E5%87%86%E5%A4%87%E7%AF%87/\";\n\n    (function() {\n        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;\n        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';\n        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);\n    })();\n</script>\n<!-- disqus 公共JS代码 end -->\n\n\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n      var d = document, t = 'script',\n          o = d.createElement(t),\n          s = d.getElementsByTagName(t)[0];\n      o.src = u;\n      if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n      s.parentNode.insertBefore(o, s);\n    }\n</script>\n<!-- anchor-js, Doc:http://bryanbraun.github.io/anchorjs/ -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/anchor-js/1.1.1/anchor.min.js\",function(){\n        anchors.options = {\n          visible: 'hover',\n          placement: 'right',\n          // icon: '#'\n        };\n        anchors.add().remove('.intro-header h1').remove('.subheading').remove('.sidebar-container h5');\n    })\n</script>\n<style>\n    /* place left on bigger screen */\n    @media all and (min-width: 800px) {\n        .anchorjs-link{\n            position: absolute;\n            left: -0.75em;\n            font-size: 1.1em;\n            margin-top : -0.1em;\n        }\n    }\n</style>\n\n\n\n    <!-- Footer -->\n<footer>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <!-- SNS Link -->\n                \n\n\n<ul class=\"list-inline text-center\">\n\n\n  \n  \n  \n  \n  \n  \n  \n</ul>\n\n                <p class=\"copyright text-muted\">\n                    Copyright &copy; PaysonChen Blog 2024\n                    <br>\n                    <!-- Powered by <a href=\"http://huangxuan.me\">Hux Blog</a> | -->\n                 <!--    <iframe style=\"margin-left: 2px; margin-bottom:-5px;\" frameborder=\"0\" scrolling=\"0\" width=\"100px\"\n                        height=\"20px\"\n                        src=\"https://ghbtns.com/github-btn.html?user=huxpro&repo=huxpro.github.io&type=star&count=true\">\n                    </iframe> -->\n                </p>\n            </div>\n        </div>\n    </div>\n</footer>\n\n<!-- jQuery -->\n<script src=\"/js/jquery.min.js \"></script>\n\n<!-- Bootstrap Core JavaScript -->\n<!-- Currently, only navbar scroll-down effect at desktop still depends on this -->\n<script src=\"/js/bootstrap.min.js \"></script>\n\n<!-- Custom Theme JavaScript -->\n<script src=\"/js/hux-blog.min.js \"></script>\n\n<!-- Simple Jekyll Search -->\n<script src=\"/js/simple-jekyll-search.min.js\"></script>\n\n<!-- Service Worker -->\n\n<script src=\"/js/snackbar.js \"></script>\n<script src=\"/js/sw-registration.js \"></script>\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n        var d = document, t = 'script',\n            o = d.createElement(t),\n            s = d.getElementsByTagName(t)[0];\n        o.src = u;\n        if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n        s.parentNode.insertBefore(o, s);\n    }\n</script>\n\n<!--\n     Because of the native support for backtick-style fenced code blocks\n     right within the Markdown is landed in Github Pages,\n     From V1.6, There is no need for Highlight.js,\n     so Huxblog drops it officially.\n\n     - https://github.com/blog/2100-github-pages-now-faster-and-simpler-with-jekyll-3-0\n     - https://help.github.com/articles/creating-and-highlighting-code-blocks/\n     - https://github.com/jneen/rouge/wiki/list-of-supported-languages-and-lexers\n-->\n<!--\n    <script>\n        async(\"http://cdn.bootcss.com/highlight.js/8.6/highlight.min.js\", function(){\n            hljs.initHighlightingOnLoad();\n        })\n    </script>\n    <link href=\"http://cdn.bootcss.com/highlight.js/8.6/styles/github.min.css\" rel=\"stylesheet\">\n-->\n\n\n\n\n\n\n\n<!--fastClick.js -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/fastclick/1.0.6/fastclick.min.js\", function () {\n        var $nav = document.querySelector(\"nav\");\n        if ($nav) FastClick.attach($nav);\n    })\n</script>\n\n\n<!-- Google Analytics -->\n\n\n\n<!-- Baidu Tongji -->\n\n\n\n<!-- Side Catalog -->\n\n<script type=\"text/javascript\">\n    function generateCatalog(selector) {\n\n        // interop with multilangual \n        if ('' == 'true') {\n            _containerSelector = 'div.post-container.active'\n        } else {\n            _containerSelector = 'div.post-container'\n        }\n\n        // init\n        var P = $(_containerSelector), a, n, t, l, i, c;\n        a = P.find('h1,h2,h3,h4,h5,h6');\n\n        // clean\n        $(selector).html('')\n\n        // appending\n        a.each(function () {\n            n = $(this).prop('tagName').toLowerCase();\n            i = \"#\" + $(this).prop('id');\n            t = $(this).text();\n            c = $('<a href=\"' + i + '\" rel=\"nofollow\">' + t + '</a>');\n            l = $('<li class=\"' + n + '_nav\"></li>').append(c);\n            $(selector).append(l);\n        });\n        return true;\n    }\n\n    generateCatalog(\".catalog-body\");\n\n    // toggle side catalog\n    $(\".catalog-toggle\").click((function (e) {\n        e.preventDefault();\n        $('.side-catalog').toggleClass(\"fold\")\n    }))\n\n    /*\n     * Doc: https://github.com/davist11/jQuery-One-Page-Nav\n     * Fork by Hux to support padding\n     */\n    async(\"/js/jquery.nav.js\", function () {\n        $('.catalog-body').onePageNav({\n            currentClass: \"active\",\n            changeHash: !1,\n            easing: \"swing\",\n            filter: \"\",\n            scrollSpeed: 700,\n            scrollOffset: 0,\n            scrollThreshold: .2,\n            begin: null,\n            end: null,\n            scrollChange: null,\n            padding: 80\n        });\n    });\n</script>\n\n\n\n<!-- Multi-Lingual -->\n\n\n<!-- Simple Jekyll Search -->\n<script>\n    // https://stackoverflow.com/questions/1912501/unescape-html-entities-in-javascript\n    function htmlDecode(input) {\n        var e = document.createElement('textarea');\n        e.innerHTML = input;\n        // handle case of empty input\n        return e.childNodes.length === 0 ? \"\" : e.childNodes[0].nodeValue;\n    }\n\n    SimpleJekyllSearch({\n        searchInput: document.getElementById('search-input'),\n        resultsContainer: document.getElementById('search-results'),\n        json: '/search.json',\n        searchResultTemplate: '<div class=\"post-preview item\"><a href=\"{url}\"><h2 class=\"post-title\">{title}</h2><h3 class=\"post-subtitle\">{subtitle}</h3><hr></a></div>',\n        noResultsText: 'No results',\n        limit: 50,\n        fuzzy: false,\n        // a hack to get escaped subtitle unescaped. for some reason, \n        // post.subtitle w/o escape filter nuke entire search.\n        templateMiddleware: function (prop, value, template) {\n            if (prop === 'subtitle' || prop === 'title') {\n                if (value.indexOf(\"code\")) {\n                    return htmlDecode(value);\n                } else {\n                    return value;\n                }\n            }\n        }\n    });\n\n    $(document).ready(function () {\n        var $searchPage = $('.search-page');\n        var $searchOpen = $('.search-icon');\n        var $searchClose = $('.search-icon-close');\n        var $searchInput = $('#search-input');\n        var $body = $('body');\n\n        $searchOpen.on('click', function (e) {\n            e.preventDefault();\n            $searchPage.toggleClass('search-active');\n            var prevClasses = $body.attr('class') || '';\n            setTimeout(function () {\n                $body.addClass('no-scroll');\n            }, 400)\n\n            if ($searchPage.hasClass('search-active')) {\n                $searchClose.on('click', function (e) {\n                    e.preventDefault();\n                    $searchPage.removeClass('search-active');\n                    $body.attr('class', prevClasses);  // from closure \n                });\n                $searchInput.focus();\n            }\n        });\n    });\n</script>\n\n\n<!-- Image to hack wechat -->\n<img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\" />\n<!-- Migrate from head to bottom, no longer block render and still work -->\n\n</body>\n\n</html>\n","excerpt":"<h1 id=\"ios组件化之业务组件准备篇\">iOS组件化之：业务组件准备篇</h1>\n","url":"/2023/08/17/iOS%E7%BB%84%E4%BB%B6%E5%8C%96-%E4%B8%9A%E5%8A%A1%E7%BB%84%E4%BB%B6%E5%87%86%E5%A4%87%E7%AF%87/","next":{"id":"/2023/09/12/iOS-OC-Swift混编","tags":[],"relative_path":"_posts/2023-09-12-iOS-OC-Swift混编.md","collection":"posts","name":"2023-09-12-iOS-OC-Swift混编.md","url":"/2023/09/12/iOS-OC-Swift%E6%B7%B7%E7%BC%96/","title":"Pod仓库内OC与Swift调用","date":"2023-09-12 00:00:00 +0800","categories":[],"path":"_posts/2023-09-12-iOS-OC-Swift混编.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/home-bg-geek.jpg","slug":"iOS-OC-Swift混编","ext":".md"},"title":"iOS组件化之：业务组件准备篇","date":"2023-08-17 00:00:00 +0800","categories":[],"path":"_posts/2023-08-17-iOS组件化-业务组件准备篇.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/home-bg-geek.jpg","slug":"iOS组件化-业务组件准备篇","ext":".md"},"title":"Apple 企业账号注册流程","date":"2023-08-11 00:00:00 +0800","categories":[],"path":"_posts/2023-08-11-Apple企业账号注册流程.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/home-bg-geek.jpg","slug":"Apple企业账号注册流程","ext":".md"},{"id":"/2023/08/08/iOS-话外篇-构建详解","tags":[],"relative_path":"_posts/2023-08-08-iOS-话外篇-构建详解.md","collection":"posts","content":"<h1 id=\"ios话外篇构建详解\">iOS话外篇：构建详解</h1>\n\n<h2 id=\"1背景\">1.背景</h2>\n\n<p>想必大多数iOS开发者不陌生，通过xcode 自带的 archive 打包，习惯GUI的同学，可能更倾向于archive打包，虽然archive打包有很多优点：包括可视化、学习门槛低、报错清晰等，但是在团队协作与日常构建中，他的弊端就显现出来了：</p>\n\n<ul>\n  <li>步骤多</li>\n</ul>\n\n<p>​\t\t打包前需要同步代码、打包过程中需要选择签名、打包后要归档、并选择上传包的地方（分发渠道orAppStore）</p>\n\n<ul>\n  <li>时间长</li>\n</ul>\n\n<p>​\t\t构建时间随着工程迭代越来越漫长，大型全量打包可能到数十分钟，archive会阻断当前研发进程，无法利用本机算力之外的其他计算集群资源，影响研效</p>\n\n<ul>\n  <li>灵活不佳</li>\n</ul>\n\n<p>​\t\t构建过程中可能需要对版本的build号进行自增、归档dsym文件、构建通知等，采用archive这些都可能需要手动执行</p>\n\n<ul>\n  <li>可靠性不佳</li>\n</ul>\n\n<p>​\t\t对于分支、代码、签名、构建方式等匹配均需靠人工维护，流程步骤多，容易造成错误，不可靠</p>\n\n<h2 id=\"2构建设计\">2.构建设计</h2>\n\n<p>为了设计一个通用的构建脚本，需要将核心构建流程分层与归类，设计入参、使用构建环境等。程序入口如下：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#通过外部传参 读取自定义参数 2:target_name</span>\n<span class=\"c\"># 2 必须</span>\ncoustomSettings <span class=\"nv\">$2</span>\n\n<span class=\"c\"># 3 (可选) 蒲公英渠道号，拼接url</span>\npublishSettings <span class=\"nv\">$3</span>\n\n<span class=\"c\"># 4 (可选)是否静默通知，有值 则不发通知</span>\nnotificationSettings <span class=\"nv\">$4</span>\n\n<span class=\"c\">#开始构建 1:configuration(0:DailyBuild|1:TestFlight|2:Release|3:TFInner)</span>\n<span class=\"c\">#1 必须</span>\nbuild <span class=\"nv\">$1</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h3 id=\"21入参设计\">2.1入参设计：</h3>\n\n<h4 id=\"211参数1构建方式\">2.1.1参数1：构建方式</h4>\n\n<table>\n  <tbody>\n    <tr>\n      <td>对应工程中的Configuration ，枚举值：0:DailyBuild</td>\n      <td>1:TestFlight</td>\n      <td>2:Release</td>\n      <td>3:TFInner</td>\n    </tr>\n  </tbody>\n</table>\n\n<ul>\n  <li>\n    <p>DailyBuild：用于日常构建，CI/CD</p>\n  </li>\n  <li>\n    <p>TestFlight：用于打灰度包</p>\n  </li>\n  <li>\n    <p>Release：用于打生产包</p>\n  </li>\n  <li>\n    <p>TFInner：用于打内部TF包</p>\n\n    <p>特别说明：由于，Apple的Enterprise证书($299/年)账号申请条件苛刻，通过此方案可以临时解决100台测试设备不足的问题</p>\n  </li>\n</ul>\n\n<h4 id=\"212-参数2target名称\">2.1.2 参数2：Target名称</h4>\n\n<p>工程的TargetName：</p>\n\n<p><img src=\"/img/ios-build/iOS_Build1.png\" alt=\"iOS_Build1\" /></p>\n\n<p><a name=\"2.1.3\"></a></p>\n\n<h4 id=\"213-参数3可选渠道号\">2.1.3 参数3(可选)：渠道号</h4>\n\n<p>​\t在没有使用支持iOS app分发的流水线（类似于腾讯蓝鲸（蓝盾流水线））情况下：本文例子使用蒲公英进行应用分发，为了兼容多渠道并行，用于拼接分发下载地址的url。</p>\n\n<p><img src=\"/img/ios-build/iOS_Build2.png\" alt=\"iOS_Build2\" /></p>\n\n<h5 id=\"2131-第三方分发蒲公英\">2.1.3.1 第三方分发：蒲公英</h5>\n\n<p>​\t流水线通过API进行应用分发，下面说明，渠道号为空与非空的情况：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n</pre></td><td class=\"rouge-code\"><pre>  <span class=\"c\">#其他构建包上传到pgy</span>\n        <span class=\"nb\">echo</span> <span class=\"s1\">'/// 上传 PGY 开始 IPA_PATH='</span><span class=\"k\">${</span><span class=\"nv\">IPA_PATH</span><span class=\"k\">}</span>\n        <span class=\"nb\">echo</span> <span class=\"s1\">'/// 上传 PGY 开始 渠道='</span><span class=\"k\">${</span><span class=\"nv\">pgyChannel</span><span class=\"k\">}</span>\n        <span class=\"nv\">compileEnvironment</span><span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">buildName</span><span class=\"k\">}</span><span class=\"s2\">:</span><span class=\"k\">${</span><span class=\"nv\">git_log</span><span class=\"k\">}</span><span class=\"s2\">\"</span>\n        \n        <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$pgyChannel</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then</span>\n            <span class=\"c\"># 渠道空，则走默认 不指定渠道号的上传</span>\n            curl <span class=\"nt\">-F</span> <span class=\"s1\">'file=@'</span><span class=\"k\">${</span><span class=\"nv\">IPA_PATH</span><span class=\"k\">}</span> <span class=\"nt\">-F</span> <span class=\"s1\">'_api_key='</span><span class=\"k\">${</span><span class=\"nv\">pgyAPIKey</span><span class=\"k\">}</span> <span class=\"nt\">-F</span> <span class=\"s1\">'buildUpdateDescription='</span><span class=\"k\">${</span><span class=\"nv\">compileEnvironment</span><span class=\"k\">}</span> https://www.pgyer.com/apiv2/app/upload\n        <span class=\"k\">else</span>\n            <span class=\"c\"># 渠道非空，走下载地址关联 渠道</span>\n            curl <span class=\"nt\">-F</span> <span class=\"s1\">'file=@'</span><span class=\"k\">${</span><span class=\"nv\">IPA_PATH</span><span class=\"k\">}</span> <span class=\"nt\">-F</span> <span class=\"s1\">'_api_key='</span><span class=\"k\">${</span><span class=\"nv\">pgyAPIKey</span><span class=\"k\">}</span> <span class=\"nt\">-F</span> <span class=\"s1\">'buildUpdateDescription='</span><span class=\"k\">${</span><span class=\"nv\">compileEnvironment</span><span class=\"k\">}</span>  <span class=\"nt\">-F</span> <span class=\"s1\">'buildChannelShortcut='</span><span class=\"k\">${</span><span class=\"nv\">pgyDownloadUrlSubfix</span><span class=\"k\">}</span> https://www.pgyer.com/apiv2/app/upload\n        <span class=\"k\">fi\n                \n        </span><span class=\"nb\">echo</span> <span class=\"s1\">'/// 上传 PGY 结束'</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h5 id=\"2132-扩展阿里云oss云存储分发\">2.1.3.2 扩展：阿里云OSS云存储分发</h5>\n\n<p>基于蒲公英的分发受限于蒲公英上行带宽与收费阈值，探索一种容灾分发方式，避免蒲公英未来服务出现异常时的健壮性。</p>\n\n<p>自行分发需要用Ad-Hoc方式，遵循Apple协议：itms-services://?action=download-manifest&amp;url=</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#添加commit信息到二维码图片上</span>\n<span class=\"k\">function </span>add_log_commit_title_msg_to_qrcode <span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"c\">#二维码打上版本信息</span>\n    <span class=\"c\">#TODO: 这里需要安装下工具 ImageMgick [brew install ImageMgick]</span>\n    <span class=\"nv\">title</span><span class=\"o\">=</span><span class=\"nv\">$xcodeVersion3number</span>.<span class=\"k\">${</span><span class=\"nv\">channel_name</span><span class=\"k\">}</span>.<span class=\"nv\">$configurationName</span>.<span class=\"k\">${</span><span class=\"nv\">BuildNo</span><span class=\"k\">}</span>\n\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nv\">$1</span> <span class=\"o\">=</span> <span class=\"s2\">\"1\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nv\">dst_line_cnt</span><span class=\"o\">=</span>0\n        <span class=\"nb\">export </span><span class=\"nv\">oss_source_log_arr</span><span class=\"o\">=(</span><span class=\"sb\">`</span><span class=\"nb\">echo</span> <span class=\"nv\">$source_log_str</span> | <span class=\"nb\">tr</span> <span class=\"s1\">']['</span> <span class=\"s1\">' '</span><span class=\"sb\">`</span><span class=\"o\">)</span>\n        <span class=\"nb\">export </span><span class=\"nv\">oss_log_line_count</span><span class=\"o\">=</span><span class=\"k\">${#</span><span class=\"nv\">oss_source_log_arr</span><span class=\"p\">[@]</span><span class=\"k\">}</span>\n        <span class=\"nb\">echo</span> <span class=\"s1\">'/// oss 分发： 添加 二维码msg log_line_count='</span><span class=\"nv\">$oss_log_line_count</span>\n\n        <span class=\"k\">for</span><span class=\"o\">((</span> <span class=\"nv\">i</span><span class=\"o\">=</span>0<span class=\"p\">;</span>i&lt;<span class=\"k\">${</span><span class=\"nv\">oss_log_line_count</span><span class=\"k\">}</span><span class=\"p\">;</span>i++<span class=\"o\">))</span>\n        <span class=\"k\">do\n            </span><span class=\"nv\">single_len</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">echo</span> <span class=\"nt\">-n</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">oss_source_log_arr</span><span class=\"p\">[i]</span><span class=\"k\">}</span><span class=\"s2\">\"</span> | <span class=\"nb\">wc</span> <span class=\"nt\">-m</span><span class=\"si\">)</span>\n            <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">oss_source_log_arr</span><span class=\"p\">[i]</span><span class=\"k\">}</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n                </span><span class=\"nv\">oss_singleStr</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">oss_source_log_arr</span><span class=\"p\">[i]</span><span class=\"k\">}</span><span class=\"p\">;</span>\n                <span class=\"nb\">echo</span> <span class=\"s1\">'///--遍历'</span><span class=\"k\">${</span><span class=\"nv\">oss_source_log_arr</span><span class=\"p\">[i]</span><span class=\"k\">}</span><span class=\"s1\">'为空文字长度：'</span><span class=\"nv\">$single_len</span>\n                <span class=\"nv\">dst_line_cnt</span><span class=\"o\">=</span><span class=\"k\">$((</span>dst_line_cnt+1<span class=\"k\">))</span>\n            <span class=\"k\">else\n                </span><span class=\"nv\">line_max_len</span><span class=\"o\">=</span>30\n                <span class=\"nv\">ingle_cnt</span><span class=\"o\">=</span><span class=\"k\">$((</span>single_len <span class=\"o\">/</span> line_max_len<span class=\"k\">))</span>\n\n\n                <span class=\"k\">if</span> <span class=\"o\">((</span>ingle_cnt <span class=\"o\">&gt;</span> 0<span class=\"o\">))</span><span class=\"p\">;</span> <span class=\"k\">then\n                    for</span><span class=\"o\">((</span> <span class=\"nv\">j</span><span class=\"o\">=</span>0<span class=\"p\">;</span>j&lt;<span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">ingle_cnt</span><span class=\"k\">}</span><span class=\"p\">;</span>j++<span class=\"o\">))</span>\n                    <span class=\"k\">do\n                        </span><span class=\"nv\">string</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">oss_source_log_arr</span><span class=\"p\">[i]</span><span class=\"k\">}</span>\n                        <span class=\"nv\">single_line1</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">string</span>:<span class=\"p\">(line_max_len * j)</span>:line_max_len<span class=\"k\">}</span>\n                        <span class=\"nb\">echo</span> <span class=\"s1\">'///--遍历'</span> <span class=\"k\">${</span><span class=\"nv\">oss_source_log_arr</span><span class=\"p\">[i]</span><span class=\"k\">}</span><span class=\"s1\">'文字长度：'</span><span class=\"nv\">$single_len</span><span class=\"s1\">'超阈值阶段：第'</span><span class=\"nv\">$j</span><span class=\"s1\">'行:'</span><span class=\"nv\">$single_line1</span>\n                        oss_singleStr+<span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"se\">\\n</span><span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">single_line1</span><span class=\"k\">}</span><span class=\"p\">;</span>\n                        <span class=\"nv\">dst_line_cnt</span><span class=\"o\">=</span><span class=\"k\">$((</span>dst_line_cnt+1<span class=\"k\">))</span>\n                    <span class=\"k\">done</span><span class=\"p\">;</span>\n                <span class=\"k\">else\n                    </span><span class=\"nb\">echo</span> <span class=\"s1\">'///--遍历'</span> <span class=\"k\">${</span><span class=\"nv\">oss_source_log_arr</span><span class=\"p\">[i]</span><span class=\"k\">}</span><span class=\"s1\">' 文字长度：'</span><span class=\"nv\">$single_len</span>\n                    <span class=\"nv\">dst_line_cnt</span><span class=\"o\">=</span><span class=\"k\">$((</span>dst_line_cnt+1<span class=\"k\">))</span>\n                    oss_singleStr+<span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"se\">\\n</span><span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">oss_source_log_arr</span><span class=\"p\">[i]</span><span class=\"k\">}</span><span class=\"p\">;</span>\n                <span class=\"k\">fi\n            fi\n        done</span><span class=\"p\">;</span>\n        <span class=\"nv\">msg</span><span class=\"o\">=</span><span class=\"nv\">$oss_singleStr</span>\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"/// oss render msg=\"</span><span class=\"nv\">$msg</span>\n        \n        <span class=\"nv\">contentsize_width</span><span class=\"o\">=</span>600\n        <span class=\"nv\">contentsize_height</span><span class=\"o\">=</span><span class=\"k\">$((</span>contentsize_width <span class=\"o\">+</span> <span class=\"nv\">$dst_line_cnt</span> <span class=\"o\">*</span> <span class=\"m\">25</span> <span class=\"o\">+</span> <span class=\"m\">40</span> <span class=\"o\">+</span> <span class=\"m\">40</span><span class=\"k\">))</span> <span class=\"c\">#第一个40是title的高度 第二个40是距离底部空间</span>\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"contentsize_height=\"</span><span class=\"nv\">$contentsize_height</span>\n        <span class=\"c\">#改变原图大小</span>\n        convert <span class=\"nv\">$qrcode_path</span> <span class=\"nt\">-resize</span> <span class=\"k\">${</span><span class=\"nv\">contentsize_width</span><span class=\"k\">}</span>x<span class=\"k\">${</span><span class=\"nv\">contentsize_width</span><span class=\"k\">}</span>^ <span class=\"nt\">-gravity</span> center <span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span>_1.png\n\n        <span class=\"c\">#变高，兼容msg</span>\n        convert <span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span>_1.png <span class=\"nt\">-gravity</span> north <span class=\"nt\">-extent</span> <span class=\"k\">${</span><span class=\"nv\">contentsize_width</span><span class=\"k\">}</span>x<span class=\"k\">${</span><span class=\"nv\">contentsize_height</span><span class=\"k\">}</span> <span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span>_2.png\n\n        <span class=\"c\">#汉字字体</span>\n        <span class=\"nv\">chn_tff_path</span><span class=\"o\">=</span><span class=\"nv\">$build_ext_path</span>/publish_res/chn.ttf\n        \n        <span class=\"c\">#渲染title</span>\n        convert <span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span>_2.png <span class=\"nt\">-gravity</span> north <span class=\"nt\">-pointsize</span> 30 <span class=\"nt\">-font</span> <span class=\"nv\">$chn_tff_path</span> <span class=\"nt\">-fill</span> black <span class=\"nt\">-annotate</span> +0+<span class=\"k\">${</span><span class=\"nv\">contentsize_width</span><span class=\"k\">}</span> <span class=\"nv\">$title</span> <span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span>_3.png\n\n        <span class=\"c\">#渲染msg</span>\n        convert <span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span>_3.png <span class=\"nt\">-gravity</span> north <span class=\"nt\">-pointsize</span> 20 <span class=\"nt\">-font</span> <span class=\"nv\">$chn_tff_path</span> <span class=\"nt\">-fill</span> black <span class=\"nt\">-annotate</span> +0+<span class=\"k\">$((${</span><span class=\"nv\">contentsize_width</span><span class=\"k\">}</span><span class=\"o\">+</span><span class=\"m\">40</span><span class=\"k\">))</span> <span class=\"nv\">$msg</span> <span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span>_4.png\n        <span class=\"nv\">qrcode_path_with_msg</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span>_4.png\n    <span class=\"k\">else</span>\n        <span class=\"c\">#没有传 1 不需要msg，只给title</span>\n        convert <span class=\"nv\">$qrcode_path</span> <span class=\"nt\">-gravity</span> south <span class=\"nt\">-pointsize</span> 10 <span class=\"nt\">-fill</span> gray <span class=\"nt\">-annotate</span> +0+0 <span class=\"nv\">$qrcode_print_msg</span>  <span class=\"nv\">$qrcode_path_with_msg</span>\n        <span class=\"nb\">echo</span> <span class=\"s1\">'/// oss 分发： 添加 二维码title='</span><span class=\"k\">${</span><span class=\"nv\">title</span><span class=\"k\">}</span>\n    <span class=\"k\">fi</span>\n\n<span class=\"o\">}</span>\n\n<span class=\"c\">#发布到阿里云OSS</span>\n<span class=\"k\">function </span>upload_ipa_to_aliyunOSS <span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"c\">#更新plist的键值对：</span>\n    <span class=\"nv\">manifest_path</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">exportPath</span><span class=\"k\">}</span>/manifest.plist\n    <span class=\"nb\">echo</span> <span class=\"s1\">'/// oss 分发： manifest_path='</span><span class=\"k\">${</span><span class=\"nv\">manifest_path</span><span class=\"k\">}</span>\n    \n    <span class=\"nv\">oss_bucket</span><span class=\"o\">=</span><span class=\"s2\">\"cbs-apps-test\"</span>\n    <span class=\"nv\">oss_platform</span><span class=\"o\">=</span><span class=\"s2\">\"iOS\"</span>\n    <span class=\"nv\">oss_bucket_path</span><span class=\"o\">=</span><span class=\"nv\">$oss_platform</span>/<span class=\"k\">${</span><span class=\"nv\">TARGET_NAME</span><span class=\"k\">}</span>/<span class=\"nv\">$configurationName</span>/<span class=\"k\">${</span><span class=\"nv\">channel_name</span><span class=\"k\">}</span>/<span class=\"k\">${</span><span class=\"nv\">BuildNo</span><span class=\"k\">}</span>/<span class=\"k\">${</span><span class=\"nv\">TARGET_NAME</span><span class=\"k\">}</span>_<span class=\"k\">${</span><span class=\"nv\">channel_name</span><span class=\"k\">}</span>_<span class=\"nv\">$configurationName_</span><span class=\"k\">${</span><span class=\"nv\">BuildNo</span><span class=\"k\">}</span>\n    <span class=\"nv\">oss_path</span><span class=\"o\">=</span><span class=\"s2\">\"oss://</span><span class=\"nv\">$oss_bucket</span><span class=\"s2\">/</span><span class=\"nv\">$oss_bucket_path</span><span class=\"s2\">\"</span>\n    <span class=\"nv\">oss_url</span><span class=\"o\">=</span><span class=\"s2\">\"https://</span><span class=\"nv\">$oss_bucket</span><span class=\"s2\">.oss-cn-beijing.aliyuncs.com/</span><span class=\"nv\">$oss_bucket_path</span><span class=\"s2\">\"</span>\n\n    <span class=\"nv\">oss_ipa_upload_url</span><span class=\"o\">=</span><span class=\"nv\">$oss_path</span><span class=\"s2\">\".ipa\"</span>\n    <span class=\"nv\">oss_ipa_url</span><span class=\"o\">=</span><span class=\"nv\">$oss_url</span><span class=\"s2\">\".ipa\"</span>\n\n    <span class=\"c\">#icon下载地址配置</span>\n    <span class=\"nv\">oss_icon_url</span><span class=\"o\">=</span><span class=\"s2\">\"https://cbs-apps-test.oss-cn-beijing.aliyuncs.com/iOS/</span><span class=\"k\">${</span><span class=\"nv\">TARGET_NAME</span><span class=\"k\">}</span><span class=\"s2\">/icon/icon.png\"</span>\n    <span class=\"nv\">oss_icon_fs_url</span><span class=\"o\">=</span><span class=\"s2\">\"https://cbs-apps-test.oss-cn-beijing.aliyuncs.com/iOS/</span><span class=\"k\">${</span><span class=\"nv\">TARGET_NAME</span><span class=\"k\">}</span><span class=\"s2\">/icon/icon_fs.png\"</span>\n\n    \n    <span class=\"c\">#修改ipa下载地址</span>\n    /usr/libexec/PlistBuddy <span class=\"nt\">-c</span> <span class=\"s2\">\"Set :items:0:assets:0:url </span><span class=\"nv\">$oss_ipa_url</span><span class=\"s2\">\"</span> <span class=\"nv\">$manifest_path</span>\n\n    <span class=\"c\">#修改icon地址</span>\n    /usr/libexec/PlistBuddy <span class=\"nt\">-c</span> <span class=\"s2\">\"Set :items:0:assets:1:url </span><span class=\"nv\">$oss_icon_url</span><span class=\"s2\">\"</span> <span class=\"nv\">$manifest_path</span>\n\n    <span class=\"c\">#修改icon full size地址</span>\n    /usr/libexec/PlistBuddy <span class=\"nt\">-c</span> <span class=\"s2\">\"Set :items:0:assets:2:url </span><span class=\"nv\">$oss_icon_fs_url</span><span class=\"s2\">\"</span> <span class=\"nv\">$manifest_path</span>\n\n\n    <span class=\"c\">#传ipa</span>\n    ossutil <span class=\"nb\">cp</span> <span class=\"k\">${</span><span class=\"nv\">IPA_PATH</span><span class=\"k\">}</span> <span class=\"nv\">$oss_ipa_upload_url</span> <span class=\"nt\">-f</span>\n    \n    <span class=\"c\">#传manifest</span>\n    <span class=\"nv\">oss_manifest_extension</span><span class=\"o\">=</span><span class=\"s2\">\"plist\"</span>\n    <span class=\"nv\">oss_manifest_upload_url</span><span class=\"o\">=</span><span class=\"nv\">$oss_path</span><span class=\"s2\">\".\"</span><span class=\"nv\">$oss_manifest_extension</span>\n    <span class=\"nv\">oss_manifest_url</span><span class=\"o\">=</span><span class=\"nv\">$oss_url</span><span class=\"s2\">\".\"</span><span class=\"nv\">$oss_manifest_extension</span>\n    ossutil <span class=\"nb\">cp</span> <span class=\"k\">${</span><span class=\"nv\">manifest_path</span><span class=\"k\">}</span> <span class=\"nv\">$oss_manifest_upload_url</span> <span class=\"nt\">-f</span>\n    \n    <span class=\"c\">#上述做归档后，生成下载二维码</span>\n    <span class=\"nv\">download_url</span><span class=\"o\">=</span><span class=\"s2\">\"itms-services://?action=download-manifest&amp;url=\"</span><span class=\"nv\">$oss_manifest_url</span>\n    <span class=\"nv\">qrcode_path</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">exportPath</span><span class=\"k\">}</span>/<span class=\"k\">${</span><span class=\"nv\">TARGET_NAME</span><span class=\"k\">}</span>_<span class=\"k\">${</span><span class=\"nv\">BuildNo</span><span class=\"k\">}</span>.png\n    \n    <span class=\"c\">#TODO: 这里需要安装下工具 qrencode [brew install qrencode]</span>\n    qrencode <span class=\"nt\">-o</span> <span class=\"nv\">$qrcode_path</span> <span class=\"nv\">$download_url</span>\n    \n    <span class=\"c\">#将二维码上传到oss</span>\n    <span class=\"nv\">oss_qrencode_extension</span><span class=\"o\">=</span><span class=\"s2\">\"png\"</span>\n    <span class=\"nv\">oss_qrencode_upload_url</span><span class=\"o\">=</span><span class=\"nv\">$oss_path</span><span class=\"s2\">\".\"</span><span class=\"nv\">$oss_qrencode_extension</span>\n    <span class=\"nv\">qrcode_path_with_msg</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span>_with_msg\n        \n    <span class=\"c\">#如果需要二维码打上log信息则调用</span>\n    <span class=\"nv\">need_msg</span><span class=\"o\">=</span>1\n    add_log_commit_title_msg_to_qrcode <span class=\"nv\">$need_msg</span>\n        \n    <span class=\"c\">#上传到阿里云oss</span>\n    ossutil <span class=\"nb\">cp</span> <span class=\"k\">${</span><span class=\"nv\">qrcode_path_with_msg</span><span class=\"k\">}</span> <span class=\"nv\">$oss_qrencode_upload_url</span> <span class=\"nt\">-f</span>\n    \n    <span class=\"c\">#二维码的url 通知出来</span>\n    <span class=\"nb\">export </span><span class=\"nv\">oss_app_download_qrcode_url</span><span class=\"o\">=</span><span class=\"nv\">$oss_url</span><span class=\"s2\">\".\"</span><span class=\"nv\">$oss_qrencode_extension</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'/// oss 分发： 二维码的oss_app_download_qrcode_url='</span><span class=\"k\">${</span><span class=\"nv\">oss_app_download_qrcode_url</span><span class=\"k\">}</span>\n<span class=\"o\">}</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p><a name=\"2.1.4\"></a></p>\n\n<h4 id=\"214-参数4可选是否静默通知\">2.1.4 参数4(可选)：是否静默通知</h4>\n\n<p>​\t本文例子通过钉钉API发送通知到钉钉群，默认不填发送，有值则不发通知，通知内容整合双分发方案：</p>\n\n<p>​\t下面代码为发送通知的逻辑，请将相应的变量替换成自己的参数</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n</pre></td><td class=\"rouge-code\"><pre>    <span class=\"nv\">modify_msg</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">git_log</span><span class=\"k\">}</span>\n    <span class=\"nv\">ProductName</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">xcodeProductName</span><span class=\"k\">}</span>\n    <span class=\"nv\">downloadPrefix</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">PrefixID</span><span class=\"k\">}</span>\n    <span class=\"nv\">channel</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">pgyChannel</span><span class=\"k\">}</span>\n    <span class=\"nv\">title</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">buildName</span><span class=\"k\">}</span>\n\n    <span class=\"c\">#采用直接 拼 channel后缀</span>\n    <span class=\"nv\">shortUrl</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">downloadPrefix</span><span class=\"k\">}${</span><span class=\"nv\">ProductName</span><span class=\"k\">}${</span><span class=\"nv\">channel</span><span class=\"k\">}</span>\n\n    <span class=\"c\">#蒲公英下载地址</span>\n    <span class=\"nv\">pgy_app_donwnload_url</span><span class=\"o\">=</span><span class=\"s2\">\"https://www.pgyer.com/</span><span class=\"k\">${</span><span class=\"nv\">shortUrl</span><span class=\"k\">}</span><span class=\"s2\">\"</span>\n    \n   <span class=\"c\">#oss下载地址</span>\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$oss_app_download_qrcode_url</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then</span>\n        <span class=\"c\">#为空则使用pgy</span>\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"通知：oss_app_download_qrcode_url 为空则使用pgy：'</span><span class=\"k\">${</span><span class=\"nv\">app_donwnload_url</span><span class=\"k\">}</span><span class=\"s2\">'\"</span>\n        <span class=\"nv\">app_donwnload_url</span><span class=\"o\">=</span><span class=\"nv\">$pgy_app_donwnload_url</span>\n    <span class=\"k\">else</span>\n        <span class=\"c\">#不为空使用 pgy + oss</span>\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"通知：oss_app_download_qrcode_url 不为空使用 pgy + oss则使用pgy + oss：'</span><span class=\"k\">${</span><span class=\"nv\">app_donwnload_url</span><span class=\"k\">}</span><span class=\"s2\">' and '</span><span class=\"nv\">$oss_app_download_qrcode_url</span><span class=\"s2\">'\"</span>\n        <span class=\"nv\">app_donwnload_url</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">pgy_app_donwnload_url</span><span class=\"k\">}</span><span class=\"s1\">'\\n'</span>oss下载地址:<span class=\"nv\">$oss_app_download_qrcode_url</span>\n    <span class=\"k\">fi</span>\n<span class=\"c\">#    app_donwnload_url=$oss_app_download_qrcode_url</span>\n    \n    <span class=\"nb\">echo</span> <span class=\"s2\">\"通知 COME下载地址：'</span><span class=\"k\">${</span><span class=\"nv\">app_donwnload_url</span><span class=\"k\">}</span><span class=\"s2\">'\"</span>\n\n    \n    curl <span class=\"s1\">'https://oapi.dingtalk.com/robot/send?access_token='</span><span class=\"k\">${</span><span class=\"nv\">access_token</span><span class=\"k\">}</span> <span class=\"se\">\\</span>\n        <span class=\"nt\">-H</span> <span class=\"s1\">'Content-Type: application/json'</span> <span class=\"se\">\\</span>\n        <span class=\"nt\">-d</span> <span class=\"s1\">'{\"msgtype\": \"text\",\n            \"at\": {\n            \"atMobiles\":[\n                \"这\"\n                \"里\"\n                \"是\"\n                \"钉\"\n                \"钉\"\n                \"账\"\n                \"号\"\n            ],\n            \"isAtAll\": false\n            },\n             \"text\": {\n                  \"content\": \"'</span><span class=\"k\">${</span><span class=\"nv\">ProductName</span><span class=\"k\">}</span><span class=\"s1\">' App更新：'</span><span class=\"k\">${</span><span class=\"nv\">title</span><span class=\"k\">}</span><span class=\"s1\">'\\n'</span><span class=\"k\">${</span><span class=\"nv\">modify_msg</span><span class=\"k\">}</span><span class=\"s1\">'\\n下载地址：https://www.pgyer.com/'</span><span class=\"k\">${</span><span class=\"nv\">app_donwnload_url</span><span class=\"k\">}</span><span class=\"s1\">'\"            }\n           }'</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'///-------------------------------------------------------'</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'/// 发送通知 '</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'///-------------------------------------------------------'</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h3 id=\"22-流程设计\">2.2 流程设计：</h3>\n\n<h4 id=\"221-构建前\">2.2.1 构建前：</h4>\n\n<ul>\n  <li>入参设置</li>\n</ul>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#入参设置</span>\n<span class=\"k\">function </span>coustomSettings<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"c\">#需要打包的target</span>\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$1</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">echo</span> <span class=\"s2\">\"error: TARGET_NAME 不能为空 退出\"</span>\n        <span class=\"nb\">exit </span>1\n    <span class=\"k\">else\n        </span><span class=\"nb\">export </span><span class=\"nv\">TARGET_NAME</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n    <span class=\"k\">fi</span>\n\n    <span class=\"c\">#工程所在目录，如果在根目录则为${WORKSPACE}</span>\n    \n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$2</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">export </span><span class=\"nv\">projectDir</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">TARGET_NAME</span><span class=\"k\">}</span>\n    <span class=\"k\">else\n        </span><span class=\"nb\">export </span><span class=\"nv\">projectDir</span><span class=\"o\">=</span><span class=\"nv\">$2</span>\n    <span class=\"k\">fi</span>\n<span class=\"c\">#    export projectDir=YPCProject</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"TARGET_NAME=\"</span><span class=\"nv\">$TARGET_NAME</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"projectDir=\"</span><span class=\"nv\">$projectDir</span>\n\n<span class=\"o\">}</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<ul>\n  <li>发布设置：</li>\n</ul>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#发布及归档的相关的设置</span>\n<span class=\"k\">function </span>publishSettings<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$1</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">echo</span> <span class=\"s1\">'///渠道号入参 为空'</span>\n        <span class=\"nb\">export </span><span class=\"nv\">pgyChannel</span><span class=\"o\">=</span>Dev\n    <span class=\"k\">else\n        </span><span class=\"nb\">echo</span> <span class=\"s1\">'///渠道号入参 不为空'</span>\n        <span class=\"nb\">export </span><span class=\"nv\">pgyChannel</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n    <span class=\"k\">fi\n    \n    </span><span class=\"nb\">echo</span> <span class=\"s2\">\"////渠道号\"</span><span class=\"k\">${</span><span class=\"nv\">pgyChannel</span><span class=\"k\">}</span>\n    \n    <span class=\"c\">#声明蒲公英分发调用APi的pgyAPIKey</span>\n    <span class=\"nb\">export </span><span class=\"nv\">pgyAPIKey</span><span class=\"o\">=</span><span class=\"s2\">\"pgyAPIKey\"</span>\n    \n    <span class=\"c\">#钉钉发送通知机器人的access_token</span>\n    <span class=\"nb\">export </span><span class=\"nv\">access_token</span><span class=\"o\">=</span><span class=\"s2\">\"access_token\"</span>\n\n    <span class=\"c\">#AppStore的token</span>\n    <span class=\"nb\">export </span><span class=\"nv\">appStore_apiIssuer</span><span class=\"o\">=</span><span class=\"s2\">\"appStore_apiIssuer\"</span>\n    <span class=\"nb\">export </span><span class=\"nv\">appStore_apikey</span><span class=\"o\">=</span><span class=\"s2\">\"appStore_apikey\"</span>\n            \n    <span class=\"c\">#bugly的token</span>\n    <span class=\"nb\">export </span><span class=\"nv\">bugly_appid</span><span class=\"o\">=</span><span class=\"s2\">\"bugly_appid\"</span>\n    <span class=\"nb\">export </span><span class=\"nv\">bugly_appkey</span><span class=\"o\">=</span><span class=\"s2\">\"bugly_appkey\"</span>\n<span class=\"o\">}</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<ul>\n  <li>通知设置</li>\n</ul>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#通知相关的设置（pgy渠道及apikey）</span>\n<span class=\"k\">function </span>notificationSettings<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"nv\">notificationSettings</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"k\">${</span><span class=\"nv\">notificationSettings</span><span class=\"k\">}</span> <span class=\"o\">=</span> <span class=\"s2\">\"1\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">echo</span> <span class=\"s1\">'///静默入参 不为空'</span>\n        <span class=\"nb\">export </span><span class=\"nv\">notificationSilent</span><span class=\"o\">=</span><span class=\"nv\">$notificationSettings</span>\n    <span class=\"k\">else\n        </span><span class=\"nb\">echo</span> <span class=\"s1\">'///静默入参 为空 或者不为1 不发通知'</span>\n    <span class=\"k\">fi\n    \n    </span><span class=\"nb\">echo</span> <span class=\"s2\">\"////静默通知=\"</span><span class=\"k\">${</span><span class=\"nv\">notificationSilent</span><span class=\"k\">}</span>\n<span class=\"o\">}</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<ul>\n  <li>\n    <p>参数获取:</p>\n\n    <p>通过xcode工具获取工程项目自带的参数</p>\n  </li>\n</ul>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#获取工程配置信息</span>\n<span class=\"k\">function </span>initInfoPlistParms<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"c\">#Plist先写死。后续可考虑改成搜索</span>\n    <span class=\"nb\">cd</span> <span class=\"k\">${</span><span class=\"nv\">CurDir</span><span class=\"k\">}</span>/<span class=\"k\">${</span><span class=\"nv\">projectDir</span><span class=\"k\">}</span>\n    <span class=\"nv\">versionKey</span><span class=\"o\">=</span><span class=\"s2\">\"MARKETING_VERSION\"</span>\n    <span class=\"nv\">bundleID</span><span class=\"o\">=</span><span class=\"s2\">\"PRODUCT_BUNDLE_IDENTIFIER\"</span>\n    <span class=\"nv\">bundleNo</span><span class=\"o\">=</span><span class=\"s2\">\"CURRENT_PROJECT_VERSION\"</span>\n    <span class=\"nv\">platformName</span><span class=\"o\">=</span><span class=\"s2\">\"PLATFORM_NAME\"</span>\n    <span class=\"nv\">productName</span><span class=\"o\">=</span><span class=\"s2\">\"PRODUCT_NAME\"</span>\n    <span class=\"c\">#将要获取的key设置成数组</span>\n    <span class=\"nv\">buildSettingsGrepKeyArray</span><span class=\"o\">=(</span><span class=\"nv\">$versionKey</span> <span class=\"nv\">$bundleID</span> <span class=\"nv\">$bundleNo</span> <span class=\"nv\">$platformName</span> <span class=\"nv\">$productName</span><span class=\"o\">)</span>\n    <span class=\"nv\">buildSettingsGrepKey</span><span class=\"o\">=</span><span class=\"s2\">\"\"</span>\n    <span class=\"k\">for</span><span class=\"o\">((</span> <span class=\"nv\">i</span><span class=\"o\">=</span>0<span class=\"p\">;</span>i&lt;<span class=\"k\">${#</span><span class=\"nv\">buildSettingsGrepKeyArray</span><span class=\"p\">[@]</span><span class=\"k\">}</span><span class=\"p\">;</span>i++<span class=\"o\">))</span>\n    <span class=\"k\">do\n        </span><span class=\"nb\">echo</span> <span class=\"s2\">\"【获取Plist参数】遍历 idx=\"</span><span class=\"nv\">$i</span> <span class=\"s2\">\"value=\"</span> <span class=\"k\">${</span><span class=\"nv\">buildSettingsGrepKeyArray</span><span class=\"p\">[i]</span><span class=\"k\">}</span>\n        <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$buildSettingsGrepKey</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n            </span><span class=\"nv\">buildSettingsGrepKey</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">buildSettingsGrepKeyArray</span><span class=\"p\">[i]</span><span class=\"k\">}</span><span class=\"p\">;</span>\n        <span class=\"k\">else\n            </span>buildSettingsGrepKey+<span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"se\">\\|</span><span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">buildSettingsGrepKeyArray</span><span class=\"p\">[i]</span><span class=\"k\">}</span><span class=\"p\">;</span>\n        <span class=\"k\">fi\n    done</span><span class=\"p\">;</span>\n    <span class=\"c\">#将数组拼接成 grep 参数</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"【获取Plist参数】key：\"</span><span class=\"nv\">$buildSettingsGrepKey</span>\n\n    <span class=\"c\">#-w 防止模糊匹配 比如  PRODUCT_NAME 和 FULL_PRODUCT_NAME</span>\n    <span class=\"nv\">buildSettings</span><span class=\"o\">=</span><span class=\"sb\">`</span>xcodebuild <span class=\"nt\">-showBuildSettings</span> <span class=\"nt\">-target</span> <span class=\"k\">${</span><span class=\"nv\">TARGET_NAME</span><span class=\"k\">}</span> | <span class=\"nb\">grep</span> <span class=\"nt\">-w</span> <span class=\"nv\">$buildSettingsGrepKey</span><span class=\"sb\">`</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"【获取Plist参数】result：\"</span><span class=\"nv\">$buildSettings</span>\n    \n    <span class=\"c\">#取值数组</span>\n    <span class=\"nv\">buildSettingsGrepValueArray</span><span class=\"o\">=[]</span>\n    <span class=\"k\">for</span><span class=\"o\">((</span> <span class=\"nv\">i</span><span class=\"o\">=</span>0<span class=\"p\">;</span>i&lt;<span class=\"k\">${#</span><span class=\"nv\">buildSettingsGrepKeyArray</span><span class=\"p\">[@]</span><span class=\"k\">}</span><span class=\"p\">;</span>i++<span class=\"o\">))</span>\n    <span class=\"k\">do</span>\n        <span class=\"c\">#右截断</span>\n        <span class=\"nv\">value</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">buildSettings</span><span class=\"p\">#*</span><span class=\"k\">${</span><span class=\"nv\">buildSettingsGrepKeyArray</span><span class=\"p\">[i]</span><span class=\"k\">}</span><span class=\"p\"> = </span><span class=\"k\">}</span>\n        <span class=\"k\">for</span><span class=\"o\">((</span> <span class=\"nv\">j</span><span class=\"o\">=</span>0<span class=\"p\">;</span>j&lt;<span class=\"k\">${#</span><span class=\"nv\">buildSettingsGrepKeyArray</span><span class=\"p\">[@]</span><span class=\"k\">}</span><span class=\"p\">;</span>j++<span class=\"o\">))</span>\n        <span class=\"k\">do</span>\n            <span class=\"c\">#由于grep顺序不保证，遍历所有key进行右截断</span>\n            <span class=\"nv\">value</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">value</span><span class=\"p\">%</span><span class=\"k\">${</span><span class=\"nv\">buildSettingsGrepKeyArray</span><span class=\"p\">[j]</span><span class=\"k\">}</span><span class=\"p\">*</span><span class=\"k\">}</span>\n        <span class=\"k\">done</span><span class=\"p\">;</span>\n        <span class=\"nv\">value</span><span class=\"o\">=</span><span class=\"sb\">`</span><span class=\"nb\">echo</span> <span class=\"k\">${</span><span class=\"nv\">value</span><span class=\"k\">}</span> | <span class=\"nb\">sed</span> <span class=\"s1\">'s/\\ //g'</span><span class=\"sb\">`</span>\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"【获取Plist参数】i=\"</span><span class=\"nv\">$i</span> <span class=\"s2\">\"value=\"</span><span class=\"nv\">$value</span><span class=\"s2\">\"。\"</span>\n        <span class=\"c\">#填回取值数组</span>\n        buildSettingsGrepValueArray[i]<span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">value</span><span class=\"k\">}</span>\n    <span class=\"k\">done</span><span class=\"p\">;</span>\n    \n    <span class=\"c\">#定义全部变量</span>\n    <span class=\"nb\">export </span><span class=\"nv\">xcodeVersion3number</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">buildSettingsGrepValueArray</span><span class=\"p\">[0]</span><span class=\"k\">}</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"【获取Plist参数】版本号：\"</span><span class=\"nv\">$xcodeVersion3number</span><span class=\"s2\">\"。\"</span>\n\n    <span class=\"nb\">export </span><span class=\"nv\">xcodeBundleID</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">buildSettingsGrepValueArray</span><span class=\"p\">[1]</span><span class=\"k\">}</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"【获取Plist参数】包名：\"</span><span class=\"nv\">$xcodeBundleID</span><span class=\"s2\">\"。\"</span>\n\n    <span class=\"nb\">export </span><span class=\"nv\">xcodebundleNo</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">buildSettingsGrepValueArray</span><span class=\"p\">[2]</span><span class=\"k\">}</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"【获取Plist参数】build号：\"</span><span class=\"nv\">$xcodebundleNo</span><span class=\"s2\">\"。\"</span>\n    \n    <span class=\"nb\">export </span><span class=\"nv\">xcodePlatformName</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">buildSettingsGrepValueArray</span><span class=\"p\">[3]</span><span class=\"k\">}</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"【获取Plist参数】PlatformName：\"</span><span class=\"nv\">$xcodePlatformName</span><span class=\"s2\">\"。\"</span>\n    \n    <span class=\"nb\">export </span><span class=\"nv\">xcodeProductName</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">buildSettingsGrepValueArray</span><span class=\"p\">[4]</span><span class=\"k\">}</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"【获取Plist参数】ProductName：\"</span><span class=\"nv\">$xcodeProductName</span><span class=\"s2\">\"。\"</span>\n    <span class=\"nb\">cd</span> ..\n<span class=\"o\">}</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<ul>\n  <li>构建号设置：</li>\n</ul>\n\n<p>​\t设置构建号，可以避免每次构建的build重复，导致在appstore后台管理构建时的紊乱，也便于追溯构建代码版本等，而如果可以通过自动化的方式进行构建号的设置就更好了，这里提供一种设置思路：获取当前日期+流水线构建号(自增)，可以构建流水线内保证全局唯一：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#自动(自增)修改构建号</span>\n<span class=\"k\">function </span>modify_build_no<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"nb\">cd</span> <span class=\"k\">${</span><span class=\"nv\">CurDir</span><span class=\"k\">}</span>/<span class=\"k\">${</span><span class=\"nv\">projectDir</span><span class=\"k\">}</span>\n    <span class=\"nb\">export </span><span class=\"nv\">BuildNo</span><span class=\"o\">=</span><span class=\"sb\">`</span><span class=\"nb\">date</span> +%Y%m%d<span class=\"sb\">`</span>\n    <span class=\"c\">#BuildNo，可以采用拼接日期+构建方式+流水线自增号来识别构建包的来源（构建方式：dailybuild、TestFlight、Release、TFInner）</span>\n    <span class=\"nv\">BuildNo</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">BuildNo</span><span class=\"k\">}</span>.<span class=\"nv\">$1</span>.<span class=\"k\">${</span><span class=\"nv\">SYS_PIPELINE_BUILD_NUMBER</span><span class=\"k\">}</span>\n<span class=\"c\">#    plist_path=${CurDir}/${projectDir}/${projectDir}/Info.plist</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"【获取Plist参数】路径：\"</span><span class=\"nv\">$plist_path</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"【设置Plist参数】build：\"</span><span class=\"nv\">$BuildNo</span>    \n<span class=\"c\">#    /usr/libexec/PlistBuddy -c \"Set :CFBundleVersion ${BuildNo}\" ${plist_path}</span>\n    agvtool new-version <span class=\"nt\">-all</span> <span class=\"k\">${</span><span class=\"nv\">BuildNo</span><span class=\"k\">}</span>\n    <span class=\"nb\">cd</span> -\n<span class=\"o\">}</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h4 id=\"222-构建中\">2.2.2 构建中：</h4>\n\n<ul>\n  <li>\n    <p>执行构建：</p>\n\n    <p>在完成了所有必要的构建前的设置之后，可以进行构建流程：</p>\n  </li>\n</ul>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#执行构建</span>\n<span class=\"k\">function </span>build<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$1</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">echo</span> <span class=\"s2\">\"error: configurationName 不能为空 退出\"</span>\n        <span class=\"nb\">exit </span>1\n    <span class=\"k\">fi</span>\n    <span class=\"c\">#定义项目前缀,生成文件时使用</span>\n    <span class=\"nb\">export </span><span class=\"nv\">PrefixID</span><span class=\"o\">=</span>PSC_\n\n    <span class=\"c\">#设置根目录</span>\n    <span class=\"nb\">export </span><span class=\"nv\">CurDir</span><span class=\"o\">=</span><span class=\"sb\">`</span><span class=\"nb\">pwd</span><span class=\"sb\">`</span>\n    \n    <span class=\"c\">#进行打包的schemeName</span>\n    <span class=\"nb\">export </span><span class=\"nv\">schemeName</span><span class=\"o\">=</span>dailybuildipa\n    \n    <span class=\"c\">#指定编译 配置 configuration</span>\n    <span class=\"nv\">configurationNameArray</span><span class=\"o\">=(</span>DailyBuild TestFlight Release TFInner<span class=\"o\">)</span>\n    <span class=\"nb\">export </span><span class=\"nv\">configurationName</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">configurationNameArray</span><span class=\"p\">[</span><span class=\"nv\">$1</span><span class=\"p\">]</span><span class=\"k\">}</span>\n\n    <span class=\"c\">#指定编译脚本路径</span>\n    <span class=\"c\">#TODO: 这里需要匹配下当前脚本所在的目录</span>\n    <span class=\"nb\">export </span><span class=\"nv\">buildsh_dir</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">CurDir</span><span class=\"k\">}</span>/PSC_iOS_Build_SH\n\n    <span class=\"c\">#设置plist参数</span>\n    modify_build_no <span class=\"nv\">$1</span>\n\n    <span class=\"c\">#读取plist参数</span>\n    initInfoPlistParms\n    \n    <span class=\"c\">#执行构建</span>\n    bash <span class=\"nv\">$buildsh_dir</span>/build_sh.sh\n<span class=\"o\">}</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>构建流程设计包括：</p>\n\n<ul>\n  <li>设置环境变量</li>\n  <li>\n    <p>设置内部变量</p>\n  </li>\n  <li>\n    <p>初始化环境</p>\n  </li>\n  <li>\n    <p>mPaas设置（可选）</p>\n  </li>\n  <li>\n    <p>执行pod</p>\n  </li>\n  <li>\n    <p>构建工具适配（可选）</p>\n  </li>\n  <li>执行构建</li>\n</ul>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n</pre></td><td class=\"rouge-code\"><pre><span class=\"k\">function </span>build<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"c\">#设置内部环境变量</span>\n    initDevopsEnv\n \n    <span class=\"c\">#设置内部环境变量</span>\n    createInternalEnv\n        \n    <span class=\"c\">#初始化环境</span>\n    init_env\n\n    <span class=\"c\">#执行pod之前，先配置mPaas在当前环境下的配置文件</span>\n    mPaaSConfigSet\n    \n    <span class=\"c\">#执行pod</span>\n    pod_install\n\n    <span class=\"c\">#fix xcode 14.3 cocoapods bug</span>\n    fiXCode143\n\n    <span class=\"c\">#执行构建</span>\n    buildProject\n\n    <span class=\"c\">#执行构建归档操作</span>\n    collection\n    \n    <span class=\"c\">#上传（发布）安装包，供下载安装</span>\n    bash <span class=\"nv\">$buildsh_dir</span>/<span class=\"nv\">$build_ext_fold</span>/<span class=\"nv\">$publish_sh</span>\n\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"k\">${</span><span class=\"nv\">configurationName</span><span class=\"k\">}</span> <span class=\"o\">=</span> <span class=\"s2\">\"DailyBuild\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then</span>\n        <span class=\"c\">#通知</span>\n        bash <span class=\"nv\">$buildsh_dir</span>/<span class=\"nv\">$build_ext_fold</span>/<span class=\"nv\">$notification_sh</span>\n    <span class=\"k\">fi</span>\n<span class=\"o\">}</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>​\t构建具体的思路可以参考源码，这里不再赘述</p>\n\n<h4 id=\"223-构建后\">2.2.3 构建后：</h4>\n\n<ul>\n  <li>归档</li>\n</ul>\n\n<p>为什么要归档：</p>\n\n<p>归档主要是为了对构建的安装包IPA及dSYM进行一一对应，由于dailybuild都是在团队内分发，因此这边考虑只有在testflight及appstore时才进行归档。</p>\n\n<p>此外；如果使用bugly进行崩溃收集，bugly已经不支持手动传dSYM，需要在构建时一并实现。</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n</pre></td><td class=\"rouge-code\"><pre><span class=\"k\">function </span>upload_dSYM<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n\t\t<span class=\"c\">#这里可以根据各自情况，存在dSYM文件</span>\n<span class=\"o\">}</span>\n\n<span class=\"k\">function </span>upload_dSYM_to_bugly<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"nb\">export </span><span class=\"nv\">p</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">dSYM_dict_PATH</span><span class=\"k\">}</span>\n    \n    <span class=\"c\">#根据不同的应用进行设置</span>\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"k\">${</span><span class=\"nv\">TARGET_NAME</span><span class=\"k\">}</span> <span class=\"o\">=</span> <span class=\"s2\">\"PSCiOS\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nv\">bugly_appid</span><span class=\"o\">=</span>xxx\n        <span class=\"nv\">bugly_appkey</span><span class=\"o\">=</span>yyy\n    <span class=\"k\">fi\n    \n    </span><span class=\"nb\">echo</span> <span class=\"s1\">'/// 上传 dsym bugly '</span><span class=\"k\">${</span><span class=\"nv\">v</span><span class=\"k\">}</span><span class=\"s1\">'pkgName='</span><span class=\"k\">${</span><span class=\"nv\">pkgName</span><span class=\"k\">}</span>\n    \n    <span class=\"c\">#切换java 版本</span>\n    java <span class=\"nt\">-version</span>\n    jdk8\n    java <span class=\"nt\">-version</span>\n    \n    <span class=\"nv\">bugly_jar_path</span><span class=\"o\">=</span><span class=\"nv\">$buildsh_dir</span>/<span class=\"nv\">$build_ext_fold</span>/collection_res/buglyqq-upload-symbol/buglyqq-upload-symbol.jar\n    \n    java <span class=\"nt\">-jar</span> <span class=\"k\">${</span><span class=\"nv\">bugly_jar_path</span><span class=\"k\">}</span> <span class=\"nt\">-appid</span> <span class=\"k\">${</span><span class=\"nv\">bugly_appid</span><span class=\"k\">}</span> <span class=\"nt\">-appkey</span> <span class=\"k\">${</span><span class=\"nv\">bugly_appkey</span><span class=\"k\">}</span> <span class=\"nt\">-bundleid</span> <span class=\"k\">${</span><span class=\"nv\">pkgName</span><span class=\"k\">}</span> <span class=\"nt\">-version</span> <span class=\"k\">${</span><span class=\"nv\">v</span><span class=\"k\">}</span> <span class=\"nt\">-platform</span> IOS <span class=\"nt\">-inputSymbol</span> <span class=\"k\">${</span><span class=\"nv\">p</span><span class=\"k\">}</span>\n<span class=\"o\">}</span>\n\n<span class=\"k\">function </span>collection<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"nb\">export </span><span class=\"nv\">v</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">xcodeVersion3number</span><span class=\"k\">}</span>.<span class=\"k\">${</span><span class=\"nv\">BuildNo</span><span class=\"k\">}</span>\n    <span class=\"nb\">export </span><span class=\"nv\">pkgName</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">xcodeBundleID</span><span class=\"k\">}</span>\n\n    <span class=\"c\">#上传到bugly符号表</span>\n    upload_dSYM_to_bugly\n\n    <span class=\"c\">#上传dSYM</span>\n    upload_dSYM\n<span class=\"o\">}</span>\n\n<span class=\"c\">#归档</span>\ncollection\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<ul>\n  <li>发布</li>\n</ul>\n\n<p>归档后，对安装包进行分发，分发也分dailybuild与release：</p>\n\n<p>dailybuild:目前采用发布到蒲公英渠道：<a href=\"#2.1.3\">2.1.3 参数3(可选)：渠道号</a></p>\n\n<p>Release:发布到AppStore</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n</pre></td><td class=\"rouge-code\"><pre>    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"k\">${</span><span class=\"nv\">configurationName</span><span class=\"k\">}</span> <span class=\"o\">=</span> <span class=\"s2\">\"Release\"</span> <span class=\"o\">]</span> <span class=\"o\">||</span> <span class=\"o\">[</span> <span class=\"k\">${</span><span class=\"nv\">configurationName</span><span class=\"k\">}</span> <span class=\"o\">=</span> <span class=\"s2\">\"TestFlight\"</span> <span class=\"o\">]</span> <span class=\"o\">||</span> <span class=\"o\">[</span> <span class=\"k\">${</span><span class=\"nv\">configurationName</span><span class=\"k\">}</span> <span class=\"o\">=</span> <span class=\"s2\">\"TFInner\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then</span>\n           <span class=\"c\">#TFInner 、TestFlight &amp; appstore 上传到appstore</span>\n        <span class=\"nb\">echo</span> <span class=\"s1\">'/// 上传App Store 开始'</span>\n        xcrun altool <span class=\"nt\">--validate-app</span> <span class=\"nt\">-f</span>  <span class=\"nv\">$IPA_PATH</span> <span class=\"nt\">--type</span>  ios  <span class=\"nt\">--apiKey</span> <span class=\"nv\">$appStore_apikey</span> <span class=\"nt\">--apiIssuer</span> <span class=\"nv\">$appStore_apiIssuer</span>\n        xcrun altool <span class=\"nt\">--upload-app</span> <span class=\"nt\">-f</span>  <span class=\"nv\">$IPA_PATH</span> <span class=\"nt\">--type</span>  ios  <span class=\"nt\">--apiKey</span> <span class=\"nv\">$appStore_apikey</span> <span class=\"nt\">--apiIssuer</span> <span class=\"nv\">$appStore_apiIssuer</span>\n        <span class=\"nb\">echo</span> <span class=\"s1\">'/// 上传App Store 结束'</span>\n\t\t<span class=\"k\">fi</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<ul>\n  <li>通知</li>\n</ul>\n\n<p>通知可以有很多种方式，由于笔者团队使用钉钉，所以这里举个钉钉机器人例子：<a href=\"#2.1.4\">2.1.4 参数4(可选)：是否静默通知</a></p>\n\n","name":"2023-08-08-iOS-话外篇-构建详解.md","previous":{"id":"/2023/08/03/iOS-客户端在内网联调时的解决方案","tags":[],"relative_path":"_posts/2023-08-03-iOS-客户端在内网联调时的解决方案.md","collection":"posts","content":"<h1 id=\"ios客户端在内网联调时的解决方案\">iOS客户端在内网联调时的解决方案</h1>\n\n<h2 id=\"1背景\">1.背景</h2>\n\n<p>在做某个需求的时候，如果后台接口部署在研发内网，此时的联调可能存在以下问题：</p>\n\n<h2 id=\"2问题描述\">2.问题描述：</h2>\n\n<p>内网调试证书校验失败：</p>\n\n<p>需要测试设备连接WiFi：XXX_DEV，此WiFi不能访问外网，会存在证书校验失败的问题</p>\n\n<p>因此需要每次编译都需要：</p>\n\n<ul>\n  <li>编译前切换外网环境</li>\n  <li>编译后切换内网环境</li>\n</ul>\n\n<p>导致非常影响研发效率。</p>\n\n<h2 id=\"3解决方案\">3.解决方案：</h2>\n\n<h3 id=\"31-方案1测试机\">3.1 方案1：测试机</h3>\n\n<p>通过iPhone的快捷指令实现自动化：</p>\n\n<ul>\n  <li>通过一张sim卡</li>\n  <li>添加一条自动化：实现App关闭时关掉Wi-Fi打开蜂窝，编译时能访问到外网校验证书</li>\n  <li>再添加一条自动化：运行App时执行关闭蜂窝，打开Wi-Fi，Wi-Fi设置只自动加入WiFi：XXX_DEV</li>\n</ul>\n\n<p>暂时解决上述问题，未来需要彻底解决时，如果安全管控无法绕开，则需要推动后端将dev环境部署到外网</p>\n\n<h3 id=\"32-方案2模拟器调试\">3.2 方案2：模拟器调试</h3>\n\n<p>模拟器调试不需要通过联网校验证书，因此可以将Mac连接到WiFi：XXX_DEV，进行模拟器调试</p>\n\n<h3 id=\"33-方案3部署研发外网\">3.3 方案3：部署研发外网</h3>\n\n<p>推动与后台开发同学协商，尽量开发期间，选择外网部署</p>\n","name":"2023-08-03-iOS-客户端在内网联调时的解决方案.md","previous":{"id":"/2023/08/02/iOS-组件化实践之-遇到的问题及解决过程纪要-持续更新中","tags":[],"relative_path":"_posts/2023-08-02-iOS-组件化实践之-遇到的问题及解决过程纪要-持续更新中.md","collection":"posts","name":"2023-08-02-iOS-组件化实践之-遇到的问题及解决过程纪要-持续更新中.md","url":"/2023/08/02/iOS-%E7%BB%84%E4%BB%B6%E5%8C%96%E5%AE%9E%E8%B7%B5%E4%B9%8B-%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98%E5%8F%8A%E8%A7%A3%E5%86%B3%E8%BF%87%E7%A8%8B%E7%BA%AA%E8%A6%81-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0%E4%B8%AD/","title":"iOS组件化实践之：遇到的问题及解决过程纪要(持续更新中)","date":"2023-08-02 00:00:00 +0800","categories":[],"path":"_posts/2023-08-02-iOS-组件化实践之-遇到的问题及解决过程纪要-持续更新中.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/home-bg-geek.jpg","slug":"iOS-组件化实践之-遇到的问题及解决过程纪要-持续更新中","ext":".md"},"output":"<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"google-site-verification\" content=\"xBT4GhYoi5qRD5tr338pgPM5OWHHIDR6mNg1a3euekI\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, viewport-fit=cover\">\n    <meta name=\"description\" content=\"与你一起发现更大的世界。\">\n    <meta name=\"keywords\"  content=\"PaysonChen,iOS,流媒体\">\n    <meta name=\"theme-color\" content=\"#000000\">\n    \n    <!-- Open Graph -->\n    <meta property=\"og:title\" content=\"iOS客户端在内网联调时的解决方案 - PaysonChen的博客 | PaysonChen Blog\">\n    \n    <meta property=\"og:type\" content=\"article\">\n    <meta property=\"og:description\" content=\"iOS客户端在内网联调时的解决方案\n\">\n    \n    \n    <meta property=\"article:published_time\" content=\"2023-08-03T00:00:00Z\">\n    \n    \n    <meta property=\"article:author\" content=\"PaysonChen\">\n    \n    \n    \n    <meta property=\"og:image\" content=\"http://localhost:4000\">\n    <meta property=\"og:url\" content=\"http://localhost:4000/2023/08/03/iOS-%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%9C%A8%E5%86%85%E7%BD%91%E8%81%94%E8%B0%83%E6%97%B6%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/\">\n    <meta property=\"og:site_name\" content=\"PaysonChen的博客 | PaysonChen Blog\">\n    \n    <title>iOS客户端在内网联调时的解决方案 - PaysonChen的博客 | PaysonChen Blog</title>\n\n    <!-- Web App Manifest -->\n    <link rel=\"manifest\" href=\"/pwa/manifest.json\">\n\n    <!-- Favicon -->\n    <link rel=\"shortcut icon\" href=\"/img/favicon.ico\">\n    \n    <!-- Canonical URL -->\n    <link rel=\"canonical\" href=\"http://localhost:4000/2023/08/03/iOS-%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%9C%A8%E5%86%85%E7%BD%91%E8%81%94%E8%B0%83%E6%97%B6%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/\">\n\n    <!-- Bootstrap Core CSS -->\n    <link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\">\n\n    <!-- Custom CSS -->\n    <link rel=\"stylesheet\" href=\"/css/hux-blog.min.css\">\n\n    <!-- Custom Fonts -->\n    <!-- <link href=\"http://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\"> -->\n    <!-- Hux change font-awesome CDN to qiniu -->\n    <link href=\"//cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\">\n\n\n    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->\n    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->\n    <!--[if lt IE 9]>\n        <script src=\"https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js\"></script>\n        <script src=\"https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js\"></script>\n    <![endif]-->\n\n    <!-- ga & ba script hoook -->\n    <script></script>\n</head>\n\n\n<!-- hack iOS CSS :active style -->\n<body ontouchstart=\"\">\n\n    <!-- Navigation -->\n\n    <nav class=\"navbar navbar-default navbar-custom navbar-fixed-top\">\n        \n        <div class=\"container-fluid\">\n            <!-- Brand and toggle get grouped for better mobile display -->\n            <div class=\"navbar-header page-scroll\">\n                <button type=\"button\" class=\"navbar-toggle\">\n                    <span class=\"sr-only\">Toggle navigation</span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                </button>\n                <a class=\"navbar-brand\" href=\"/\">PaysonChen Blog</a>\n            </div>\n\n            <!-- Collect the nav links, forms, and other content for toggling -->\n            <div id=\"huxblog_navbar\">\n                <div class=\"navbar-collapse\">\n                    <ul class=\"nav navbar-nav navbar-right\">\n                        <li>\n                            <a href=\"/\">Home</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        <li>\n                            <a href=\"/about/\">About</a>\n                        </li>\n                        \n                        \n                        \n                        <li>\n                            <a href=\"/archive/\">Archive</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        <li class=\"search-icon\">\n                            <a href=\"javascript:void(0)\">\n                                <i class=\"fa fa-search\"></i>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n            <!-- /.navbar-collapse -->\n        </div>\n        <!-- /.container -->\n    </nav>\n\n    <script>\n        // Drop Bootstarp low-performance Navbar\n        // Use customize navbar with high-quality material design animation\n        // in high-perf jank-free CSS3 implementation\n        var $body = document.body;\n        var $toggle = document.querySelector('.navbar-toggle');\n        var $navbar = document.querySelector('#huxblog_navbar');\n        var $collapse = document.querySelector('.navbar-collapse');\n\n        var __HuxNav__ = {\n            close: function () {\n                $navbar.className = \" \";\n                // wait until animation end.\n                setTimeout(function () {\n                    // prevent frequently toggle\n                    if ($navbar.className.indexOf('in') < 0) {\n                        $collapse.style.height = \"0px\"\n                    }\n                }, 400)\n            },\n            open: function () {\n                $collapse.style.height = \"auto\"\n                $navbar.className += \" in\";\n            }\n        }\n\n        // Bind Event\n        $toggle.addEventListener('click', function (e) {\n            if ($navbar.className.indexOf('in') > 0) {\n                __HuxNav__.close()\n            } else {\n                __HuxNav__.open()\n            }\n        })\n\n        /**\n         * Since Fastclick is used to delegate 'touchstart' globally\n         * to hack 300ms delay in iOS by performing a fake 'click',\n         * Using 'e.stopPropagation' to stop 'touchstart' event from \n         * $toggle/$collapse will break global delegation.\n         * \n         * Instead, we use a 'e.target' filter to prevent handler\n         * added to document close HuxNav.  \n         *\n         * Also, we use 'click' instead of 'touchstart' as compromise\n         */\n        document.addEventListener('click', function (e) {\n            if (e.target == $toggle) return;\n            if (e.target.className == 'icon-bar') return;\n            __HuxNav__.close();\n        })\n    </script>\n    <!-- Search -->\n<div class=\"search-page\">\n  <div class=\"search-icon-close-container\">\n    <span class=\"search-icon-close\">\n      <i class=\"fa fa-chevron-down\"></i>\n    </span>\n  </div>\n  <div class=\"search-main container\">\n    <div class=\"row\">\n      <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n        <form></form>\n        <input type=\"text\" id=\"search-input\" placeholder=\"$ grep...\">\n        </form>\n        <div id=\"search-results\" class=\"mini-post-list\"></div>\n      </div>\n    </div>\n  </div>\n</div>\n\n    <!-- Image to hack wechat -->\n<!-- <img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\"> -->\n<!-- <img src=\"/img/home-bg-geek.jpg\" width=\"0\" height=\"0\"> -->\n\n<!-- Post Header -->\n\n\n\n<style type=\"text/css\">\n    header.intro-header{\n        position: relative;\n        background-image: url('/img/home-bg-geek.jpg');\n        background: ;\n    }\n\n    \n</style>\n\n<header class=\"intro-header\" >\n\n    <div class=\"header-mask\"></div>\n    \n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <div class=\"post-heading\">\n                    <div class=\"tags\">\n                        \n                    </div>\n                    <h1>iOS客户端在内网联调时的解决方案</h1>\n                    \n                    <h2 class=\"subheading\"></h2>\n                    <span class=\"meta\">Posted by PaysonChen on August 3, 2023</span>\n                </div>\n            </div>\n        </div>\n    </div>\n</header>\n\n\n\n\n\n\n<!-- Post Content -->\n<article>\n    <div class=\"container\">\n        <div class=\"row\">\n\n    <!-- Post Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                post-container\">\n\n                <!-- Multi-Lingual -->\n                \n\n\t\t\t\t<h1 id=\"ios客户端在内网联调时的解决方案\">iOS客户端在内网联调时的解决方案</h1>\n\n<h2 id=\"1背景\">1.背景</h2>\n\n<p>在做某个需求的时候，如果后台接口部署在研发内网，此时的联调可能存在以下问题：</p>\n\n<h2 id=\"2问题描述\">2.问题描述：</h2>\n\n<p>内网调试证书校验失败：</p>\n\n<p>需要测试设备连接WiFi：XXX_DEV，此WiFi不能访问外网，会存在证书校验失败的问题</p>\n\n<p>因此需要每次编译都需要：</p>\n\n<ul>\n  <li>编译前切换外网环境</li>\n  <li>编译后切换内网环境</li>\n</ul>\n\n<p>导致非常影响研发效率。</p>\n\n<h2 id=\"3解决方案\">3.解决方案：</h2>\n\n<h3 id=\"31-方案1测试机\">3.1 方案1：测试机</h3>\n\n<p>通过iPhone的快捷指令实现自动化：</p>\n\n<ul>\n  <li>通过一张sim卡</li>\n  <li>添加一条自动化：实现App关闭时关掉Wi-Fi打开蜂窝，编译时能访问到外网校验证书</li>\n  <li>再添加一条自动化：运行App时执行关闭蜂窝，打开Wi-Fi，Wi-Fi设置只自动加入WiFi：XXX_DEV</li>\n</ul>\n\n<p>暂时解决上述问题，未来需要彻底解决时，如果安全管控无法绕开，则需要推动后端将dev环境部署到外网</p>\n\n<h3 id=\"32-方案2模拟器调试\">3.2 方案2：模拟器调试</h3>\n\n<p>模拟器调试不需要通过联网校验证书，因此可以将Mac连接到WiFi：XXX_DEV，进行模拟器调试</p>\n\n<h3 id=\"33-方案3部署研发外网\">3.3 方案3：部署研发外网</h3>\n\n<p>推动与后台开发同学协商，尽量开发期间，选择外网部署</p>\n\n\n                <hr style=\"visibility: hidden;\">\n                <ul class=\"pager\">\n                    \n                    <li class=\"previous\">\n                        <a href=\"/2023/08/02/iOS-%E7%BB%84%E4%BB%B6%E5%8C%96%E5%AE%9E%E8%B7%B5%E4%B9%8B-%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98%E5%8F%8A%E8%A7%A3%E5%86%B3%E8%BF%87%E7%A8%8B%E7%BA%AA%E8%A6%81-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0%E4%B8%AD/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"iOS组件化实践之：遇到的问题及解决过程纪要(持续更新中)\">\n                        Previous<br>\n                        <span>iOS组件化实践之：遇到的问题及解决过程纪要(持续更新中)</span>\n                        </a>\n                    </li>\n                    \n                    \n                    <li class=\"next\">\n                        <a href=\"/2023/08/08/iOS-%E8%AF%9D%E5%A4%96%E7%AF%87-%E6%9E%84%E5%BB%BA%E8%AF%A6%E8%A7%A3/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"iOS话外篇：构建详解\">\n                        Next<br>\n                        <span>iOS话外篇：构建详解</span>\n                        </a>\n                    </li>\n                    \n                </ul>\n                <hr style=\"visibility: hidden;\">\n\n                \n                <!-- disqus 评论框 start -->\n                <div class=\"comment\">\n                    <div id=\"disqus_thread\" class=\"disqus-thread\"></div>\n                </div>\n                <!-- disqus 评论框 end -->\n                \n\n                \n            </div>  \n\n    <!-- Side Catalog Container -->\n        \n            <div class=\"\n                col-lg-2 col-lg-offset-0\n                visible-lg-block\n                sidebar-container\n                catalog-container\">\n                <div class=\"side-catalog\">\n                    <hr class=\"hidden-sm hidden-xs\">\n                    <h5>\n                        <a class=\"catalog-toggle\" href=\"#\">CATALOG</a>\n                    </h5>\n                    <ul class=\"catalog-body\"></ul>\n                </div>\n            </div>\n        \n\n    <!-- Sidebar Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                sidebar-container\">\n\n                <!-- Featured Tags -->\n                \n\n\n<section>\n    \n        <hr class=\"hidden-sm hidden-xs\">\n    \n    <h5><a href=\"/archive/\">FEATURED TAGS</a></h5>\n    <div class=\"tags\">\n        \n        \n        \n        \n        \n    </div>\n</section>\n\n\n                <!-- Friends Blog -->\n                \n            </div>\n        </div>\n    </div>\n</article>\n\n<!-- add support for mathjax by voleking-->\n\n\n\n\n\n\n<!-- disqus 公共JS代码 start (一个网页只需插入一次) -->\n<script type=\"text/javascript\">\n    /* * * CONFIGURATION VARIABLES * * */\n    var disqus_shortname = \"Cyp\";\n    var disqus_identifier = \"/2023/08/03/iOS-客户端在内网联调时的解决方案\";\n    var disqus_url = \"http://localhost:4000/2023/08/03/iOS-%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%9C%A8%E5%86%85%E7%BD%91%E8%81%94%E8%B0%83%E6%97%B6%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/\";\n\n    (function() {\n        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;\n        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';\n        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);\n    })();\n</script>\n<!-- disqus 公共JS代码 end -->\n\n\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n      var d = document, t = 'script',\n          o = d.createElement(t),\n          s = d.getElementsByTagName(t)[0];\n      o.src = u;\n      if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n      s.parentNode.insertBefore(o, s);\n    }\n</script>\n<!-- anchor-js, Doc:http://bryanbraun.github.io/anchorjs/ -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/anchor-js/1.1.1/anchor.min.js\",function(){\n        anchors.options = {\n          visible: 'hover',\n          placement: 'right',\n          // icon: '#'\n        };\n        anchors.add().remove('.intro-header h1').remove('.subheading').remove('.sidebar-container h5');\n    })\n</script>\n<style>\n    /* place left on bigger screen */\n    @media all and (min-width: 800px) {\n        .anchorjs-link{\n            position: absolute;\n            left: -0.75em;\n            font-size: 1.1em;\n            margin-top : -0.1em;\n        }\n    }\n</style>\n\n\n\n    <!-- Footer -->\n<footer>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <!-- SNS Link -->\n                \n\n\n<ul class=\"list-inline text-center\">\n\n\n  \n  \n  \n  \n  \n  \n  \n</ul>\n\n                <p class=\"copyright text-muted\">\n                    Copyright &copy; PaysonChen Blog 2024\n                    <br>\n                    <!-- Powered by <a href=\"http://huangxuan.me\">Hux Blog</a> | -->\n                 <!--    <iframe style=\"margin-left: 2px; margin-bottom:-5px;\" frameborder=\"0\" scrolling=\"0\" width=\"100px\"\n                        height=\"20px\"\n                        src=\"https://ghbtns.com/github-btn.html?user=huxpro&repo=huxpro.github.io&type=star&count=true\">\n                    </iframe> -->\n                </p>\n            </div>\n        </div>\n    </div>\n</footer>\n\n<!-- jQuery -->\n<script src=\"/js/jquery.min.js \"></script>\n\n<!-- Bootstrap Core JavaScript -->\n<!-- Currently, only navbar scroll-down effect at desktop still depends on this -->\n<script src=\"/js/bootstrap.min.js \"></script>\n\n<!-- Custom Theme JavaScript -->\n<script src=\"/js/hux-blog.min.js \"></script>\n\n<!-- Simple Jekyll Search -->\n<script src=\"/js/simple-jekyll-search.min.js\"></script>\n\n<!-- Service Worker -->\n\n<script src=\"/js/snackbar.js \"></script>\n<script src=\"/js/sw-registration.js \"></script>\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n        var d = document, t = 'script',\n            o = d.createElement(t),\n            s = d.getElementsByTagName(t)[0];\n        o.src = u;\n        if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n        s.parentNode.insertBefore(o, s);\n    }\n</script>\n\n<!--\n     Because of the native support for backtick-style fenced code blocks\n     right within the Markdown is landed in Github Pages,\n     From V1.6, There is no need for Highlight.js,\n     so Huxblog drops it officially.\n\n     - https://github.com/blog/2100-github-pages-now-faster-and-simpler-with-jekyll-3-0\n     - https://help.github.com/articles/creating-and-highlighting-code-blocks/\n     - https://github.com/jneen/rouge/wiki/list-of-supported-languages-and-lexers\n-->\n<!--\n    <script>\n        async(\"http://cdn.bootcss.com/highlight.js/8.6/highlight.min.js\", function(){\n            hljs.initHighlightingOnLoad();\n        })\n    </script>\n    <link href=\"http://cdn.bootcss.com/highlight.js/8.6/styles/github.min.css\" rel=\"stylesheet\">\n-->\n\n\n\n\n\n\n\n<!--fastClick.js -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/fastclick/1.0.6/fastclick.min.js\", function () {\n        var $nav = document.querySelector(\"nav\");\n        if ($nav) FastClick.attach($nav);\n    })\n</script>\n\n\n<!-- Google Analytics -->\n\n\n\n<!-- Baidu Tongji -->\n\n\n\n<!-- Side Catalog -->\n\n<script type=\"text/javascript\">\n    function generateCatalog(selector) {\n\n        // interop with multilangual \n        if ('' == 'true') {\n            _containerSelector = 'div.post-container.active'\n        } else {\n            _containerSelector = 'div.post-container'\n        }\n\n        // init\n        var P = $(_containerSelector), a, n, t, l, i, c;\n        a = P.find('h1,h2,h3,h4,h5,h6');\n\n        // clean\n        $(selector).html('')\n\n        // appending\n        a.each(function () {\n            n = $(this).prop('tagName').toLowerCase();\n            i = \"#\" + $(this).prop('id');\n            t = $(this).text();\n            c = $('<a href=\"' + i + '\" rel=\"nofollow\">' + t + '</a>');\n            l = $('<li class=\"' + n + '_nav\"></li>').append(c);\n            $(selector).append(l);\n        });\n        return true;\n    }\n\n    generateCatalog(\".catalog-body\");\n\n    // toggle side catalog\n    $(\".catalog-toggle\").click((function (e) {\n        e.preventDefault();\n        $('.side-catalog').toggleClass(\"fold\")\n    }))\n\n    /*\n     * Doc: https://github.com/davist11/jQuery-One-Page-Nav\n     * Fork by Hux to support padding\n     */\n    async(\"/js/jquery.nav.js\", function () {\n        $('.catalog-body').onePageNav({\n            currentClass: \"active\",\n            changeHash: !1,\n            easing: \"swing\",\n            filter: \"\",\n            scrollSpeed: 700,\n            scrollOffset: 0,\n            scrollThreshold: .2,\n            begin: null,\n            end: null,\n            scrollChange: null,\n            padding: 80\n        });\n    });\n</script>\n\n\n\n<!-- Multi-Lingual -->\n\n\n<!-- Simple Jekyll Search -->\n<script>\n    // https://stackoverflow.com/questions/1912501/unescape-html-entities-in-javascript\n    function htmlDecode(input) {\n        var e = document.createElement('textarea');\n        e.innerHTML = input;\n        // handle case of empty input\n        return e.childNodes.length === 0 ? \"\" : e.childNodes[0].nodeValue;\n    }\n\n    SimpleJekyllSearch({\n        searchInput: document.getElementById('search-input'),\n        resultsContainer: document.getElementById('search-results'),\n        json: '/search.json',\n        searchResultTemplate: '<div class=\"post-preview item\"><a href=\"{url}\"><h2 class=\"post-title\">{title}</h2><h3 class=\"post-subtitle\">{subtitle}</h3><hr></a></div>',\n        noResultsText: 'No results',\n        limit: 50,\n        fuzzy: false,\n        // a hack to get escaped subtitle unescaped. for some reason, \n        // post.subtitle w/o escape filter nuke entire search.\n        templateMiddleware: function (prop, value, template) {\n            if (prop === 'subtitle' || prop === 'title') {\n                if (value.indexOf(\"code\")) {\n                    return htmlDecode(value);\n                } else {\n                    return value;\n                }\n            }\n        }\n    });\n\n    $(document).ready(function () {\n        var $searchPage = $('.search-page');\n        var $searchOpen = $('.search-icon');\n        var $searchClose = $('.search-icon-close');\n        var $searchInput = $('#search-input');\n        var $body = $('body');\n\n        $searchOpen.on('click', function (e) {\n            e.preventDefault();\n            $searchPage.toggleClass('search-active');\n            var prevClasses = $body.attr('class') || '';\n            setTimeout(function () {\n                $body.addClass('no-scroll');\n            }, 400)\n\n            if ($searchPage.hasClass('search-active')) {\n                $searchClose.on('click', function (e) {\n                    e.preventDefault();\n                    $searchPage.removeClass('search-active');\n                    $body.attr('class', prevClasses);  // from closure \n                });\n                $searchInput.focus();\n            }\n        });\n    });\n</script>\n\n\n<!-- Image to hack wechat -->\n<img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\" />\n<!-- Migrate from head to bottom, no longer block render and still work -->\n\n</body>\n\n</html>\n","excerpt":"<h1 id=\"ios客户端在内网联调时的解决方案\">iOS客户端在内网联调时的解决方案</h1>\n","url":"/2023/08/03/iOS-%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%9C%A8%E5%86%85%E7%BD%91%E8%81%94%E8%B0%83%E6%97%B6%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/","next":{"id":"/2023/08/08/iOS-话外篇-构建详解","tags":[],"relative_path":"_posts/2023-08-08-iOS-话外篇-构建详解.md","collection":"posts","name":"2023-08-08-iOS-话外篇-构建详解.md","url":"/2023/08/08/iOS-%E8%AF%9D%E5%A4%96%E7%AF%87-%E6%9E%84%E5%BB%BA%E8%AF%A6%E8%A7%A3/","title":"iOS话外篇：构建详解","date":"2023-08-08 00:00:00 +0800","categories":[],"path":"_posts/2023-08-08-iOS-话外篇-构建详解.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/home-bg-geek.jpg","slug":"iOS-话外篇-构建详解","ext":".md"},"title":"iOS客户端在内网联调时的解决方案","date":"2023-08-03 00:00:00 +0800","categories":[],"path":"_posts/2023-08-03-iOS-客户端在内网联调时的解决方案.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/home-bg-geek.jpg","slug":"iOS-客户端在内网联调时的解决方案","ext":".md"},"output":"<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"google-site-verification\" content=\"xBT4GhYoi5qRD5tr338pgPM5OWHHIDR6mNg1a3euekI\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, viewport-fit=cover\">\n    <meta name=\"description\" content=\"与你一起发现更大的世界。\">\n    <meta name=\"keywords\"  content=\"PaysonChen,iOS,流媒体\">\n    <meta name=\"theme-color\" content=\"#000000\">\n    \n    <!-- Open Graph -->\n    <meta property=\"og:title\" content=\"iOS话外篇：构建详解 - PaysonChen的博客 | PaysonChen Blog\">\n    \n    <meta property=\"og:type\" content=\"article\">\n    <meta property=\"og:description\" content=\"iOS话外篇：构建详解\n\">\n    \n    \n    <meta property=\"article:published_time\" content=\"2023-08-08T00:00:00Z\">\n    \n    \n    <meta property=\"article:author\" content=\"PaysonChen\">\n    \n    \n    \n    <meta property=\"og:image\" content=\"http://localhost:4000\">\n    <meta property=\"og:url\" content=\"http://localhost:4000/2023/08/08/iOS-%E8%AF%9D%E5%A4%96%E7%AF%87-%E6%9E%84%E5%BB%BA%E8%AF%A6%E8%A7%A3/\">\n    <meta property=\"og:site_name\" content=\"PaysonChen的博客 | PaysonChen Blog\">\n    \n    <title>iOS话外篇：构建详解 - PaysonChen的博客 | PaysonChen Blog</title>\n\n    <!-- Web App Manifest -->\n    <link rel=\"manifest\" href=\"/pwa/manifest.json\">\n\n    <!-- Favicon -->\n    <link rel=\"shortcut icon\" href=\"/img/favicon.ico\">\n    \n    <!-- Canonical URL -->\n    <link rel=\"canonical\" href=\"http://localhost:4000/2023/08/08/iOS-%E8%AF%9D%E5%A4%96%E7%AF%87-%E6%9E%84%E5%BB%BA%E8%AF%A6%E8%A7%A3/\">\n\n    <!-- Bootstrap Core CSS -->\n    <link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\">\n\n    <!-- Custom CSS -->\n    <link rel=\"stylesheet\" href=\"/css/hux-blog.min.css\">\n\n    <!-- Custom Fonts -->\n    <!-- <link href=\"http://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\"> -->\n    <!-- Hux change font-awesome CDN to qiniu -->\n    <link href=\"//cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\">\n\n\n    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->\n    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->\n    <!--[if lt IE 9]>\n        <script src=\"https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js\"></script>\n        <script src=\"https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js\"></script>\n    <![endif]-->\n\n    <!-- ga & ba script hoook -->\n    <script></script>\n</head>\n\n\n<!-- hack iOS CSS :active style -->\n<body ontouchstart=\"\">\n\n    <!-- Navigation -->\n\n    <nav class=\"navbar navbar-default navbar-custom navbar-fixed-top\">\n        \n        <div class=\"container-fluid\">\n            <!-- Brand and toggle get grouped for better mobile display -->\n            <div class=\"navbar-header page-scroll\">\n                <button type=\"button\" class=\"navbar-toggle\">\n                    <span class=\"sr-only\">Toggle navigation</span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                </button>\n                <a class=\"navbar-brand\" href=\"/\">PaysonChen Blog</a>\n            </div>\n\n            <!-- Collect the nav links, forms, and other content for toggling -->\n            <div id=\"huxblog_navbar\">\n                <div class=\"navbar-collapse\">\n                    <ul class=\"nav navbar-nav navbar-right\">\n                        <li>\n                            <a href=\"/\">Home</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        <li>\n                            <a href=\"/about/\">About</a>\n                        </li>\n                        \n                        \n                        \n                        <li>\n                            <a href=\"/archive/\">Archive</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        <li class=\"search-icon\">\n                            <a href=\"javascript:void(0)\">\n                                <i class=\"fa fa-search\"></i>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n            <!-- /.navbar-collapse -->\n        </div>\n        <!-- /.container -->\n    </nav>\n\n    <script>\n        // Drop Bootstarp low-performance Navbar\n        // Use customize navbar with high-quality material design animation\n        // in high-perf jank-free CSS3 implementation\n        var $body = document.body;\n        var $toggle = document.querySelector('.navbar-toggle');\n        var $navbar = document.querySelector('#huxblog_navbar');\n        var $collapse = document.querySelector('.navbar-collapse');\n\n        var __HuxNav__ = {\n            close: function () {\n                $navbar.className = \" \";\n                // wait until animation end.\n                setTimeout(function () {\n                    // prevent frequently toggle\n                    if ($navbar.className.indexOf('in') < 0) {\n                        $collapse.style.height = \"0px\"\n                    }\n                }, 400)\n            },\n            open: function () {\n                $collapse.style.height = \"auto\"\n                $navbar.className += \" in\";\n            }\n        }\n\n        // Bind Event\n        $toggle.addEventListener('click', function (e) {\n            if ($navbar.className.indexOf('in') > 0) {\n                __HuxNav__.close()\n            } else {\n                __HuxNav__.open()\n            }\n        })\n\n        /**\n         * Since Fastclick is used to delegate 'touchstart' globally\n         * to hack 300ms delay in iOS by performing a fake 'click',\n         * Using 'e.stopPropagation' to stop 'touchstart' event from \n         * $toggle/$collapse will break global delegation.\n         * \n         * Instead, we use a 'e.target' filter to prevent handler\n         * added to document close HuxNav.  \n         *\n         * Also, we use 'click' instead of 'touchstart' as compromise\n         */\n        document.addEventListener('click', function (e) {\n            if (e.target == $toggle) return;\n            if (e.target.className == 'icon-bar') return;\n            __HuxNav__.close();\n        })\n    </script>\n    <!-- Search -->\n<div class=\"search-page\">\n  <div class=\"search-icon-close-container\">\n    <span class=\"search-icon-close\">\n      <i class=\"fa fa-chevron-down\"></i>\n    </span>\n  </div>\n  <div class=\"search-main container\">\n    <div class=\"row\">\n      <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n        <form></form>\n        <input type=\"text\" id=\"search-input\" placeholder=\"$ grep...\">\n        </form>\n        <div id=\"search-results\" class=\"mini-post-list\"></div>\n      </div>\n    </div>\n  </div>\n</div>\n\n    <!-- Image to hack wechat -->\n<!-- <img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\"> -->\n<!-- <img src=\"/img/home-bg-geek.jpg\" width=\"0\" height=\"0\"> -->\n\n<!-- Post Header -->\n\n\n\n<style type=\"text/css\">\n    header.intro-header{\n        position: relative;\n        background-image: url('/img/home-bg-geek.jpg');\n        background: ;\n    }\n\n    \n</style>\n\n<header class=\"intro-header\" >\n\n    <div class=\"header-mask\"></div>\n    \n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <div class=\"post-heading\">\n                    <div class=\"tags\">\n                        \n                    </div>\n                    <h1>iOS话外篇：构建详解</h1>\n                    \n                    <h2 class=\"subheading\"></h2>\n                    <span class=\"meta\">Posted by PaysonChen on August 8, 2023</span>\n                </div>\n            </div>\n        </div>\n    </div>\n</header>\n\n\n\n\n\n\n<!-- Post Content -->\n<article>\n    <div class=\"container\">\n        <div class=\"row\">\n\n    <!-- Post Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                post-container\">\n\n                <!-- Multi-Lingual -->\n                \n\n\t\t\t\t<h1 id=\"ios话外篇构建详解\">iOS话外篇：构建详解</h1>\n\n<h2 id=\"1背景\">1.背景</h2>\n\n<p>想必大多数iOS开发者不陌生，通过xcode 自带的 archive 打包，习惯GUI的同学，可能更倾向于archive打包，虽然archive打包有很多优点：包括可视化、学习门槛低、报错清晰等，但是在团队协作与日常构建中，他的弊端就显现出来了：</p>\n\n<ul>\n  <li>步骤多</li>\n</ul>\n\n<p>​\t\t打包前需要同步代码、打包过程中需要选择签名、打包后要归档、并选择上传包的地方（分发渠道orAppStore）</p>\n\n<ul>\n  <li>时间长</li>\n</ul>\n\n<p>​\t\t构建时间随着工程迭代越来越漫长，大型全量打包可能到数十分钟，archive会阻断当前研发进程，无法利用本机算力之外的其他计算集群资源，影响研效</p>\n\n<ul>\n  <li>灵活不佳</li>\n</ul>\n\n<p>​\t\t构建过程中可能需要对版本的build号进行自增、归档dsym文件、构建通知等，采用archive这些都可能需要手动执行</p>\n\n<ul>\n  <li>可靠性不佳</li>\n</ul>\n\n<p>​\t\t对于分支、代码、签名、构建方式等匹配均需靠人工维护，流程步骤多，容易造成错误，不可靠</p>\n\n<h2 id=\"2构建设计\">2.构建设计</h2>\n\n<p>为了设计一个通用的构建脚本，需要将核心构建流程分层与归类，设计入参、使用构建环境等。程序入口如下：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#通过外部传参 读取自定义参数 2:target_name</span>\n<span class=\"c\"># 2 必须</span>\ncoustomSettings <span class=\"nv\">$2</span>\n\n<span class=\"c\"># 3 (可选) 蒲公英渠道号，拼接url</span>\npublishSettings <span class=\"nv\">$3</span>\n\n<span class=\"c\"># 4 (可选)是否静默通知，有值 则不发通知</span>\nnotificationSettings <span class=\"nv\">$4</span>\n\n<span class=\"c\">#开始构建 1:configuration(0:DailyBuild|1:TestFlight|2:Release|3:TFInner)</span>\n<span class=\"c\">#1 必须</span>\nbuild <span class=\"nv\">$1</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h3 id=\"21入参设计\">2.1入参设计：</h3>\n\n<h4 id=\"211参数1构建方式\">2.1.1参数1：构建方式</h4>\n\n<table>\n  <tbody>\n    <tr>\n      <td>对应工程中的Configuration ，枚举值：0:DailyBuild</td>\n      <td>1:TestFlight</td>\n      <td>2:Release</td>\n      <td>3:TFInner</td>\n    </tr>\n  </tbody>\n</table>\n\n<ul>\n  <li>\n    <p>DailyBuild：用于日常构建，CI/CD</p>\n  </li>\n  <li>\n    <p>TestFlight：用于打灰度包</p>\n  </li>\n  <li>\n    <p>Release：用于打生产包</p>\n  </li>\n  <li>\n    <p>TFInner：用于打内部TF包</p>\n\n    <p>特别说明：由于，Apple的Enterprise证书($299/年)账号申请条件苛刻，通过此方案可以临时解决100台测试设备不足的问题</p>\n  </li>\n</ul>\n\n<h4 id=\"212-参数2target名称\">2.1.2 参数2：Target名称</h4>\n\n<p>工程的TargetName：</p>\n\n<p><img src=\"/img/ios-build/iOS_Build1.png\" alt=\"iOS_Build1\" /></p>\n\n<p><a name=\"2.1.3\"></a></p>\n\n<h4 id=\"213-参数3可选渠道号\">2.1.3 参数3(可选)：渠道号</h4>\n\n<p>​\t在没有使用支持iOS app分发的流水线（类似于腾讯蓝鲸（蓝盾流水线））情况下：本文例子使用蒲公英进行应用分发，为了兼容多渠道并行，用于拼接分发下载地址的url。</p>\n\n<p><img src=\"/img/ios-build/iOS_Build2.png\" alt=\"iOS_Build2\" /></p>\n\n<h5 id=\"2131-第三方分发蒲公英\">2.1.3.1 第三方分发：蒲公英</h5>\n\n<p>​\t流水线通过API进行应用分发，下面说明，渠道号为空与非空的情况：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n</pre></td><td class=\"rouge-code\"><pre>  <span class=\"c\">#其他构建包上传到pgy</span>\n        <span class=\"nb\">echo</span> <span class=\"s1\">'/// 上传 PGY 开始 IPA_PATH='</span><span class=\"k\">${</span><span class=\"nv\">IPA_PATH</span><span class=\"k\">}</span>\n        <span class=\"nb\">echo</span> <span class=\"s1\">'/// 上传 PGY 开始 渠道='</span><span class=\"k\">${</span><span class=\"nv\">pgyChannel</span><span class=\"k\">}</span>\n        <span class=\"nv\">compileEnvironment</span><span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">buildName</span><span class=\"k\">}</span><span class=\"s2\">:</span><span class=\"k\">${</span><span class=\"nv\">git_log</span><span class=\"k\">}</span><span class=\"s2\">\"</span>\n        \n        <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$pgyChannel</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then</span>\n            <span class=\"c\"># 渠道空，则走默认 不指定渠道号的上传</span>\n            curl <span class=\"nt\">-F</span> <span class=\"s1\">'file=@'</span><span class=\"k\">${</span><span class=\"nv\">IPA_PATH</span><span class=\"k\">}</span> <span class=\"nt\">-F</span> <span class=\"s1\">'_api_key='</span><span class=\"k\">${</span><span class=\"nv\">pgyAPIKey</span><span class=\"k\">}</span> <span class=\"nt\">-F</span> <span class=\"s1\">'buildUpdateDescription='</span><span class=\"k\">${</span><span class=\"nv\">compileEnvironment</span><span class=\"k\">}</span> https://www.pgyer.com/apiv2/app/upload\n        <span class=\"k\">else</span>\n            <span class=\"c\"># 渠道非空，走下载地址关联 渠道</span>\n            curl <span class=\"nt\">-F</span> <span class=\"s1\">'file=@'</span><span class=\"k\">${</span><span class=\"nv\">IPA_PATH</span><span class=\"k\">}</span> <span class=\"nt\">-F</span> <span class=\"s1\">'_api_key='</span><span class=\"k\">${</span><span class=\"nv\">pgyAPIKey</span><span class=\"k\">}</span> <span class=\"nt\">-F</span> <span class=\"s1\">'buildUpdateDescription='</span><span class=\"k\">${</span><span class=\"nv\">compileEnvironment</span><span class=\"k\">}</span>  <span class=\"nt\">-F</span> <span class=\"s1\">'buildChannelShortcut='</span><span class=\"k\">${</span><span class=\"nv\">pgyDownloadUrlSubfix</span><span class=\"k\">}</span> https://www.pgyer.com/apiv2/app/upload\n        <span class=\"k\">fi\n                \n        </span><span class=\"nb\">echo</span> <span class=\"s1\">'/// 上传 PGY 结束'</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h5 id=\"2132-扩展阿里云oss云存储分发\">2.1.3.2 扩展：阿里云OSS云存储分发</h5>\n\n<p>基于蒲公英的分发受限于蒲公英上行带宽与收费阈值，探索一种容灾分发方式，避免蒲公英未来服务出现异常时的健壮性。</p>\n\n<p>自行分发需要用Ad-Hoc方式，遵循Apple协议：itms-services://?action=download-manifest&amp;url=</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#添加commit信息到二维码图片上</span>\n<span class=\"k\">function </span>add_log_commit_title_msg_to_qrcode <span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"c\">#二维码打上版本信息</span>\n    <span class=\"c\">#TODO: 这里需要安装下工具 ImageMgick [brew install ImageMgick]</span>\n    <span class=\"nv\">title</span><span class=\"o\">=</span><span class=\"nv\">$xcodeVersion3number</span>.<span class=\"k\">${</span><span class=\"nv\">channel_name</span><span class=\"k\">}</span>.<span class=\"nv\">$configurationName</span>.<span class=\"k\">${</span><span class=\"nv\">BuildNo</span><span class=\"k\">}</span>\n\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nv\">$1</span> <span class=\"o\">=</span> <span class=\"s2\">\"1\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nv\">dst_line_cnt</span><span class=\"o\">=</span>0\n        <span class=\"nb\">export </span><span class=\"nv\">oss_source_log_arr</span><span class=\"o\">=(</span><span class=\"sb\">`</span><span class=\"nb\">echo</span> <span class=\"nv\">$source_log_str</span> | <span class=\"nb\">tr</span> <span class=\"s1\">']['</span> <span class=\"s1\">' '</span><span class=\"sb\">`</span><span class=\"o\">)</span>\n        <span class=\"nb\">export </span><span class=\"nv\">oss_log_line_count</span><span class=\"o\">=</span><span class=\"k\">${#</span><span class=\"nv\">oss_source_log_arr</span><span class=\"p\">[@]</span><span class=\"k\">}</span>\n        <span class=\"nb\">echo</span> <span class=\"s1\">'/// oss 分发： 添加 二维码msg log_line_count='</span><span class=\"nv\">$oss_log_line_count</span>\n\n        <span class=\"k\">for</span><span class=\"o\">((</span> <span class=\"nv\">i</span><span class=\"o\">=</span>0<span class=\"p\">;</span>i&lt;<span class=\"k\">${</span><span class=\"nv\">oss_log_line_count</span><span class=\"k\">}</span><span class=\"p\">;</span>i++<span class=\"o\">))</span>\n        <span class=\"k\">do\n            </span><span class=\"nv\">single_len</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">echo</span> <span class=\"nt\">-n</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">oss_source_log_arr</span><span class=\"p\">[i]</span><span class=\"k\">}</span><span class=\"s2\">\"</span> | <span class=\"nb\">wc</span> <span class=\"nt\">-m</span><span class=\"si\">)</span>\n            <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">oss_source_log_arr</span><span class=\"p\">[i]</span><span class=\"k\">}</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n                </span><span class=\"nv\">oss_singleStr</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">oss_source_log_arr</span><span class=\"p\">[i]</span><span class=\"k\">}</span><span class=\"p\">;</span>\n                <span class=\"nb\">echo</span> <span class=\"s1\">'///--遍历'</span><span class=\"k\">${</span><span class=\"nv\">oss_source_log_arr</span><span class=\"p\">[i]</span><span class=\"k\">}</span><span class=\"s1\">'为空文字长度：'</span><span class=\"nv\">$single_len</span>\n                <span class=\"nv\">dst_line_cnt</span><span class=\"o\">=</span><span class=\"k\">$((</span>dst_line_cnt+1<span class=\"k\">))</span>\n            <span class=\"k\">else\n                </span><span class=\"nv\">line_max_len</span><span class=\"o\">=</span>30\n                <span class=\"nv\">ingle_cnt</span><span class=\"o\">=</span><span class=\"k\">$((</span>single_len <span class=\"o\">/</span> line_max_len<span class=\"k\">))</span>\n\n\n                <span class=\"k\">if</span> <span class=\"o\">((</span>ingle_cnt <span class=\"o\">&gt;</span> 0<span class=\"o\">))</span><span class=\"p\">;</span> <span class=\"k\">then\n                    for</span><span class=\"o\">((</span> <span class=\"nv\">j</span><span class=\"o\">=</span>0<span class=\"p\">;</span>j&lt;<span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">ingle_cnt</span><span class=\"k\">}</span><span class=\"p\">;</span>j++<span class=\"o\">))</span>\n                    <span class=\"k\">do\n                        </span><span class=\"nv\">string</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">oss_source_log_arr</span><span class=\"p\">[i]</span><span class=\"k\">}</span>\n                        <span class=\"nv\">single_line1</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">string</span>:<span class=\"p\">(line_max_len * j)</span>:line_max_len<span class=\"k\">}</span>\n                        <span class=\"nb\">echo</span> <span class=\"s1\">'///--遍历'</span> <span class=\"k\">${</span><span class=\"nv\">oss_source_log_arr</span><span class=\"p\">[i]</span><span class=\"k\">}</span><span class=\"s1\">'文字长度：'</span><span class=\"nv\">$single_len</span><span class=\"s1\">'超阈值阶段：第'</span><span class=\"nv\">$j</span><span class=\"s1\">'行:'</span><span class=\"nv\">$single_line1</span>\n                        oss_singleStr+<span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"se\">\\n</span><span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">single_line1</span><span class=\"k\">}</span><span class=\"p\">;</span>\n                        <span class=\"nv\">dst_line_cnt</span><span class=\"o\">=</span><span class=\"k\">$((</span>dst_line_cnt+1<span class=\"k\">))</span>\n                    <span class=\"k\">done</span><span class=\"p\">;</span>\n                <span class=\"k\">else\n                    </span><span class=\"nb\">echo</span> <span class=\"s1\">'///--遍历'</span> <span class=\"k\">${</span><span class=\"nv\">oss_source_log_arr</span><span class=\"p\">[i]</span><span class=\"k\">}</span><span class=\"s1\">' 文字长度：'</span><span class=\"nv\">$single_len</span>\n                    <span class=\"nv\">dst_line_cnt</span><span class=\"o\">=</span><span class=\"k\">$((</span>dst_line_cnt+1<span class=\"k\">))</span>\n                    oss_singleStr+<span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"se\">\\n</span><span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">oss_source_log_arr</span><span class=\"p\">[i]</span><span class=\"k\">}</span><span class=\"p\">;</span>\n                <span class=\"k\">fi\n            fi\n        done</span><span class=\"p\">;</span>\n        <span class=\"nv\">msg</span><span class=\"o\">=</span><span class=\"nv\">$oss_singleStr</span>\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"/// oss render msg=\"</span><span class=\"nv\">$msg</span>\n        \n        <span class=\"nv\">contentsize_width</span><span class=\"o\">=</span>600\n        <span class=\"nv\">contentsize_height</span><span class=\"o\">=</span><span class=\"k\">$((</span>contentsize_width <span class=\"o\">+</span> <span class=\"nv\">$dst_line_cnt</span> <span class=\"o\">*</span> <span class=\"m\">25</span> <span class=\"o\">+</span> <span class=\"m\">40</span> <span class=\"o\">+</span> <span class=\"m\">40</span><span class=\"k\">))</span> <span class=\"c\">#第一个40是title的高度 第二个40是距离底部空间</span>\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"contentsize_height=\"</span><span class=\"nv\">$contentsize_height</span>\n        <span class=\"c\">#改变原图大小</span>\n        convert <span class=\"nv\">$qrcode_path</span> <span class=\"nt\">-resize</span> <span class=\"k\">${</span><span class=\"nv\">contentsize_width</span><span class=\"k\">}</span>x<span class=\"k\">${</span><span class=\"nv\">contentsize_width</span><span class=\"k\">}</span>^ <span class=\"nt\">-gravity</span> center <span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span>_1.png\n\n        <span class=\"c\">#变高，兼容msg</span>\n        convert <span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span>_1.png <span class=\"nt\">-gravity</span> north <span class=\"nt\">-extent</span> <span class=\"k\">${</span><span class=\"nv\">contentsize_width</span><span class=\"k\">}</span>x<span class=\"k\">${</span><span class=\"nv\">contentsize_height</span><span class=\"k\">}</span> <span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span>_2.png\n\n        <span class=\"c\">#汉字字体</span>\n        <span class=\"nv\">chn_tff_path</span><span class=\"o\">=</span><span class=\"nv\">$build_ext_path</span>/publish_res/chn.ttf\n        \n        <span class=\"c\">#渲染title</span>\n        convert <span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span>_2.png <span class=\"nt\">-gravity</span> north <span class=\"nt\">-pointsize</span> 30 <span class=\"nt\">-font</span> <span class=\"nv\">$chn_tff_path</span> <span class=\"nt\">-fill</span> black <span class=\"nt\">-annotate</span> +0+<span class=\"k\">${</span><span class=\"nv\">contentsize_width</span><span class=\"k\">}</span> <span class=\"nv\">$title</span> <span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span>_3.png\n\n        <span class=\"c\">#渲染msg</span>\n        convert <span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span>_3.png <span class=\"nt\">-gravity</span> north <span class=\"nt\">-pointsize</span> 20 <span class=\"nt\">-font</span> <span class=\"nv\">$chn_tff_path</span> <span class=\"nt\">-fill</span> black <span class=\"nt\">-annotate</span> +0+<span class=\"k\">$((${</span><span class=\"nv\">contentsize_width</span><span class=\"k\">}</span><span class=\"o\">+</span><span class=\"m\">40</span><span class=\"k\">))</span> <span class=\"nv\">$msg</span> <span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span>_4.png\n        <span class=\"nv\">qrcode_path_with_msg</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span>_4.png\n    <span class=\"k\">else</span>\n        <span class=\"c\">#没有传 1 不需要msg，只给title</span>\n        convert <span class=\"nv\">$qrcode_path</span> <span class=\"nt\">-gravity</span> south <span class=\"nt\">-pointsize</span> 10 <span class=\"nt\">-fill</span> gray <span class=\"nt\">-annotate</span> +0+0 <span class=\"nv\">$qrcode_print_msg</span>  <span class=\"nv\">$qrcode_path_with_msg</span>\n        <span class=\"nb\">echo</span> <span class=\"s1\">'/// oss 分发： 添加 二维码title='</span><span class=\"k\">${</span><span class=\"nv\">title</span><span class=\"k\">}</span>\n    <span class=\"k\">fi</span>\n\n<span class=\"o\">}</span>\n\n<span class=\"c\">#发布到阿里云OSS</span>\n<span class=\"k\">function </span>upload_ipa_to_aliyunOSS <span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"c\">#更新plist的键值对：</span>\n    <span class=\"nv\">manifest_path</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">exportPath</span><span class=\"k\">}</span>/manifest.plist\n    <span class=\"nb\">echo</span> <span class=\"s1\">'/// oss 分发： manifest_path='</span><span class=\"k\">${</span><span class=\"nv\">manifest_path</span><span class=\"k\">}</span>\n    \n    <span class=\"nv\">oss_bucket</span><span class=\"o\">=</span><span class=\"s2\">\"cbs-apps-test\"</span>\n    <span class=\"nv\">oss_platform</span><span class=\"o\">=</span><span class=\"s2\">\"iOS\"</span>\n    <span class=\"nv\">oss_bucket_path</span><span class=\"o\">=</span><span class=\"nv\">$oss_platform</span>/<span class=\"k\">${</span><span class=\"nv\">TARGET_NAME</span><span class=\"k\">}</span>/<span class=\"nv\">$configurationName</span>/<span class=\"k\">${</span><span class=\"nv\">channel_name</span><span class=\"k\">}</span>/<span class=\"k\">${</span><span class=\"nv\">BuildNo</span><span class=\"k\">}</span>/<span class=\"k\">${</span><span class=\"nv\">TARGET_NAME</span><span class=\"k\">}</span>_<span class=\"k\">${</span><span class=\"nv\">channel_name</span><span class=\"k\">}</span>_<span class=\"nv\">$configurationName_</span><span class=\"k\">${</span><span class=\"nv\">BuildNo</span><span class=\"k\">}</span>\n    <span class=\"nv\">oss_path</span><span class=\"o\">=</span><span class=\"s2\">\"oss://</span><span class=\"nv\">$oss_bucket</span><span class=\"s2\">/</span><span class=\"nv\">$oss_bucket_path</span><span class=\"s2\">\"</span>\n    <span class=\"nv\">oss_url</span><span class=\"o\">=</span><span class=\"s2\">\"https://</span><span class=\"nv\">$oss_bucket</span><span class=\"s2\">.oss-cn-beijing.aliyuncs.com/</span><span class=\"nv\">$oss_bucket_path</span><span class=\"s2\">\"</span>\n\n    <span class=\"nv\">oss_ipa_upload_url</span><span class=\"o\">=</span><span class=\"nv\">$oss_path</span><span class=\"s2\">\".ipa\"</span>\n    <span class=\"nv\">oss_ipa_url</span><span class=\"o\">=</span><span class=\"nv\">$oss_url</span><span class=\"s2\">\".ipa\"</span>\n\n    <span class=\"c\">#icon下载地址配置</span>\n    <span class=\"nv\">oss_icon_url</span><span class=\"o\">=</span><span class=\"s2\">\"https://cbs-apps-test.oss-cn-beijing.aliyuncs.com/iOS/</span><span class=\"k\">${</span><span class=\"nv\">TARGET_NAME</span><span class=\"k\">}</span><span class=\"s2\">/icon/icon.png\"</span>\n    <span class=\"nv\">oss_icon_fs_url</span><span class=\"o\">=</span><span class=\"s2\">\"https://cbs-apps-test.oss-cn-beijing.aliyuncs.com/iOS/</span><span class=\"k\">${</span><span class=\"nv\">TARGET_NAME</span><span class=\"k\">}</span><span class=\"s2\">/icon/icon_fs.png\"</span>\n\n    \n    <span class=\"c\">#修改ipa下载地址</span>\n    /usr/libexec/PlistBuddy <span class=\"nt\">-c</span> <span class=\"s2\">\"Set :items:0:assets:0:url </span><span class=\"nv\">$oss_ipa_url</span><span class=\"s2\">\"</span> <span class=\"nv\">$manifest_path</span>\n\n    <span class=\"c\">#修改icon地址</span>\n    /usr/libexec/PlistBuddy <span class=\"nt\">-c</span> <span class=\"s2\">\"Set :items:0:assets:1:url </span><span class=\"nv\">$oss_icon_url</span><span class=\"s2\">\"</span> <span class=\"nv\">$manifest_path</span>\n\n    <span class=\"c\">#修改icon full size地址</span>\n    /usr/libexec/PlistBuddy <span class=\"nt\">-c</span> <span class=\"s2\">\"Set :items:0:assets:2:url </span><span class=\"nv\">$oss_icon_fs_url</span><span class=\"s2\">\"</span> <span class=\"nv\">$manifest_path</span>\n\n\n    <span class=\"c\">#传ipa</span>\n    ossutil <span class=\"nb\">cp</span> <span class=\"k\">${</span><span class=\"nv\">IPA_PATH</span><span class=\"k\">}</span> <span class=\"nv\">$oss_ipa_upload_url</span> <span class=\"nt\">-f</span>\n    \n    <span class=\"c\">#传manifest</span>\n    <span class=\"nv\">oss_manifest_extension</span><span class=\"o\">=</span><span class=\"s2\">\"plist\"</span>\n    <span class=\"nv\">oss_manifest_upload_url</span><span class=\"o\">=</span><span class=\"nv\">$oss_path</span><span class=\"s2\">\".\"</span><span class=\"nv\">$oss_manifest_extension</span>\n    <span class=\"nv\">oss_manifest_url</span><span class=\"o\">=</span><span class=\"nv\">$oss_url</span><span class=\"s2\">\".\"</span><span class=\"nv\">$oss_manifest_extension</span>\n    ossutil <span class=\"nb\">cp</span> <span class=\"k\">${</span><span class=\"nv\">manifest_path</span><span class=\"k\">}</span> <span class=\"nv\">$oss_manifest_upload_url</span> <span class=\"nt\">-f</span>\n    \n    <span class=\"c\">#上述做归档后，生成下载二维码</span>\n    <span class=\"nv\">download_url</span><span class=\"o\">=</span><span class=\"s2\">\"itms-services://?action=download-manifest&amp;url=\"</span><span class=\"nv\">$oss_manifest_url</span>\n    <span class=\"nv\">qrcode_path</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">exportPath</span><span class=\"k\">}</span>/<span class=\"k\">${</span><span class=\"nv\">TARGET_NAME</span><span class=\"k\">}</span>_<span class=\"k\">${</span><span class=\"nv\">BuildNo</span><span class=\"k\">}</span>.png\n    \n    <span class=\"c\">#TODO: 这里需要安装下工具 qrencode [brew install qrencode]</span>\n    qrencode <span class=\"nt\">-o</span> <span class=\"nv\">$qrcode_path</span> <span class=\"nv\">$download_url</span>\n    \n    <span class=\"c\">#将二维码上传到oss</span>\n    <span class=\"nv\">oss_qrencode_extension</span><span class=\"o\">=</span><span class=\"s2\">\"png\"</span>\n    <span class=\"nv\">oss_qrencode_upload_url</span><span class=\"o\">=</span><span class=\"nv\">$oss_path</span><span class=\"s2\">\".\"</span><span class=\"nv\">$oss_qrencode_extension</span>\n    <span class=\"nv\">qrcode_path_with_msg</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span>_with_msg\n        \n    <span class=\"c\">#如果需要二维码打上log信息则调用</span>\n    <span class=\"nv\">need_msg</span><span class=\"o\">=</span>1\n    add_log_commit_title_msg_to_qrcode <span class=\"nv\">$need_msg</span>\n        \n    <span class=\"c\">#上传到阿里云oss</span>\n    ossutil <span class=\"nb\">cp</span> <span class=\"k\">${</span><span class=\"nv\">qrcode_path_with_msg</span><span class=\"k\">}</span> <span class=\"nv\">$oss_qrencode_upload_url</span> <span class=\"nt\">-f</span>\n    \n    <span class=\"c\">#二维码的url 通知出来</span>\n    <span class=\"nb\">export </span><span class=\"nv\">oss_app_download_qrcode_url</span><span class=\"o\">=</span><span class=\"nv\">$oss_url</span><span class=\"s2\">\".\"</span><span class=\"nv\">$oss_qrencode_extension</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'/// oss 分发： 二维码的oss_app_download_qrcode_url='</span><span class=\"k\">${</span><span class=\"nv\">oss_app_download_qrcode_url</span><span class=\"k\">}</span>\n<span class=\"o\">}</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p><a name=\"2.1.4\"></a></p>\n\n<h4 id=\"214-参数4可选是否静默通知\">2.1.4 参数4(可选)：是否静默通知</h4>\n\n<p>​\t本文例子通过钉钉API发送通知到钉钉群，默认不填发送，有值则不发通知，通知内容整合双分发方案：</p>\n\n<p>​\t下面代码为发送通知的逻辑，请将相应的变量替换成自己的参数</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n</pre></td><td class=\"rouge-code\"><pre>    <span class=\"nv\">modify_msg</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">git_log</span><span class=\"k\">}</span>\n    <span class=\"nv\">ProductName</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">xcodeProductName</span><span class=\"k\">}</span>\n    <span class=\"nv\">downloadPrefix</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">PrefixID</span><span class=\"k\">}</span>\n    <span class=\"nv\">channel</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">pgyChannel</span><span class=\"k\">}</span>\n    <span class=\"nv\">title</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">buildName</span><span class=\"k\">}</span>\n\n    <span class=\"c\">#采用直接 拼 channel后缀</span>\n    <span class=\"nv\">shortUrl</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">downloadPrefix</span><span class=\"k\">}${</span><span class=\"nv\">ProductName</span><span class=\"k\">}${</span><span class=\"nv\">channel</span><span class=\"k\">}</span>\n\n    <span class=\"c\">#蒲公英下载地址</span>\n    <span class=\"nv\">pgy_app_donwnload_url</span><span class=\"o\">=</span><span class=\"s2\">\"https://www.pgyer.com/</span><span class=\"k\">${</span><span class=\"nv\">shortUrl</span><span class=\"k\">}</span><span class=\"s2\">\"</span>\n    \n   <span class=\"c\">#oss下载地址</span>\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$oss_app_download_qrcode_url</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then</span>\n        <span class=\"c\">#为空则使用pgy</span>\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"通知：oss_app_download_qrcode_url 为空则使用pgy：'</span><span class=\"k\">${</span><span class=\"nv\">app_donwnload_url</span><span class=\"k\">}</span><span class=\"s2\">'\"</span>\n        <span class=\"nv\">app_donwnload_url</span><span class=\"o\">=</span><span class=\"nv\">$pgy_app_donwnload_url</span>\n    <span class=\"k\">else</span>\n        <span class=\"c\">#不为空使用 pgy + oss</span>\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"通知：oss_app_download_qrcode_url 不为空使用 pgy + oss则使用pgy + oss：'</span><span class=\"k\">${</span><span class=\"nv\">app_donwnload_url</span><span class=\"k\">}</span><span class=\"s2\">' and '</span><span class=\"nv\">$oss_app_download_qrcode_url</span><span class=\"s2\">'\"</span>\n        <span class=\"nv\">app_donwnload_url</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">pgy_app_donwnload_url</span><span class=\"k\">}</span><span class=\"s1\">'\\n'</span>oss下载地址:<span class=\"nv\">$oss_app_download_qrcode_url</span>\n    <span class=\"k\">fi</span>\n<span class=\"c\">#    app_donwnload_url=$oss_app_download_qrcode_url</span>\n    \n    <span class=\"nb\">echo</span> <span class=\"s2\">\"通知 COME下载地址：'</span><span class=\"k\">${</span><span class=\"nv\">app_donwnload_url</span><span class=\"k\">}</span><span class=\"s2\">'\"</span>\n\n    \n    curl <span class=\"s1\">'https://oapi.dingtalk.com/robot/send?access_token='</span><span class=\"k\">${</span><span class=\"nv\">access_token</span><span class=\"k\">}</span> <span class=\"se\">\\</span>\n        <span class=\"nt\">-H</span> <span class=\"s1\">'Content-Type: application/json'</span> <span class=\"se\">\\</span>\n        <span class=\"nt\">-d</span> <span class=\"s1\">'{\"msgtype\": \"text\",\n            \"at\": {\n            \"atMobiles\":[\n                \"这\"\n                \"里\"\n                \"是\"\n                \"钉\"\n                \"钉\"\n                \"账\"\n                \"号\"\n            ],\n            \"isAtAll\": false\n            },\n             \"text\": {\n                  \"content\": \"'</span><span class=\"k\">${</span><span class=\"nv\">ProductName</span><span class=\"k\">}</span><span class=\"s1\">' App更新：'</span><span class=\"k\">${</span><span class=\"nv\">title</span><span class=\"k\">}</span><span class=\"s1\">'\\n'</span><span class=\"k\">${</span><span class=\"nv\">modify_msg</span><span class=\"k\">}</span><span class=\"s1\">'\\n下载地址：https://www.pgyer.com/'</span><span class=\"k\">${</span><span class=\"nv\">app_donwnload_url</span><span class=\"k\">}</span><span class=\"s1\">'\"            }\n           }'</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'///-------------------------------------------------------'</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'/// 发送通知 '</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'///-------------------------------------------------------'</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h3 id=\"22-流程设计\">2.2 流程设计：</h3>\n\n<h4 id=\"221-构建前\">2.2.1 构建前：</h4>\n\n<ul>\n  <li>入参设置</li>\n</ul>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#入参设置</span>\n<span class=\"k\">function </span>coustomSettings<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"c\">#需要打包的target</span>\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$1</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">echo</span> <span class=\"s2\">\"error: TARGET_NAME 不能为空 退出\"</span>\n        <span class=\"nb\">exit </span>1\n    <span class=\"k\">else\n        </span><span class=\"nb\">export </span><span class=\"nv\">TARGET_NAME</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n    <span class=\"k\">fi</span>\n\n    <span class=\"c\">#工程所在目录，如果在根目录则为${WORKSPACE}</span>\n    \n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$2</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">export </span><span class=\"nv\">projectDir</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">TARGET_NAME</span><span class=\"k\">}</span>\n    <span class=\"k\">else\n        </span><span class=\"nb\">export </span><span class=\"nv\">projectDir</span><span class=\"o\">=</span><span class=\"nv\">$2</span>\n    <span class=\"k\">fi</span>\n<span class=\"c\">#    export projectDir=YPCProject</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"TARGET_NAME=\"</span><span class=\"nv\">$TARGET_NAME</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"projectDir=\"</span><span class=\"nv\">$projectDir</span>\n\n<span class=\"o\">}</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<ul>\n  <li>发布设置：</li>\n</ul>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#发布及归档的相关的设置</span>\n<span class=\"k\">function </span>publishSettings<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$1</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">echo</span> <span class=\"s1\">'///渠道号入参 为空'</span>\n        <span class=\"nb\">export </span><span class=\"nv\">pgyChannel</span><span class=\"o\">=</span>Dev\n    <span class=\"k\">else\n        </span><span class=\"nb\">echo</span> <span class=\"s1\">'///渠道号入参 不为空'</span>\n        <span class=\"nb\">export </span><span class=\"nv\">pgyChannel</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n    <span class=\"k\">fi\n    \n    </span><span class=\"nb\">echo</span> <span class=\"s2\">\"////渠道号\"</span><span class=\"k\">${</span><span class=\"nv\">pgyChannel</span><span class=\"k\">}</span>\n    \n    <span class=\"c\">#声明蒲公英分发调用APi的pgyAPIKey</span>\n    <span class=\"nb\">export </span><span class=\"nv\">pgyAPIKey</span><span class=\"o\">=</span><span class=\"s2\">\"pgyAPIKey\"</span>\n    \n    <span class=\"c\">#钉钉发送通知机器人的access_token</span>\n    <span class=\"nb\">export </span><span class=\"nv\">access_token</span><span class=\"o\">=</span><span class=\"s2\">\"access_token\"</span>\n\n    <span class=\"c\">#AppStore的token</span>\n    <span class=\"nb\">export </span><span class=\"nv\">appStore_apiIssuer</span><span class=\"o\">=</span><span class=\"s2\">\"appStore_apiIssuer\"</span>\n    <span class=\"nb\">export </span><span class=\"nv\">appStore_apikey</span><span class=\"o\">=</span><span class=\"s2\">\"appStore_apikey\"</span>\n            \n    <span class=\"c\">#bugly的token</span>\n    <span class=\"nb\">export </span><span class=\"nv\">bugly_appid</span><span class=\"o\">=</span><span class=\"s2\">\"bugly_appid\"</span>\n    <span class=\"nb\">export </span><span class=\"nv\">bugly_appkey</span><span class=\"o\">=</span><span class=\"s2\">\"bugly_appkey\"</span>\n<span class=\"o\">}</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<ul>\n  <li>通知设置</li>\n</ul>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#通知相关的设置（pgy渠道及apikey）</span>\n<span class=\"k\">function </span>notificationSettings<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"nv\">notificationSettings</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"k\">${</span><span class=\"nv\">notificationSettings</span><span class=\"k\">}</span> <span class=\"o\">=</span> <span class=\"s2\">\"1\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">echo</span> <span class=\"s1\">'///静默入参 不为空'</span>\n        <span class=\"nb\">export </span><span class=\"nv\">notificationSilent</span><span class=\"o\">=</span><span class=\"nv\">$notificationSettings</span>\n    <span class=\"k\">else\n        </span><span class=\"nb\">echo</span> <span class=\"s1\">'///静默入参 为空 或者不为1 不发通知'</span>\n    <span class=\"k\">fi\n    \n    </span><span class=\"nb\">echo</span> <span class=\"s2\">\"////静默通知=\"</span><span class=\"k\">${</span><span class=\"nv\">notificationSilent</span><span class=\"k\">}</span>\n<span class=\"o\">}</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<ul>\n  <li>\n    <p>参数获取:</p>\n\n    <p>通过xcode工具获取工程项目自带的参数</p>\n  </li>\n</ul>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#获取工程配置信息</span>\n<span class=\"k\">function </span>initInfoPlistParms<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"c\">#Plist先写死。后续可考虑改成搜索</span>\n    <span class=\"nb\">cd</span> <span class=\"k\">${</span><span class=\"nv\">CurDir</span><span class=\"k\">}</span>/<span class=\"k\">${</span><span class=\"nv\">projectDir</span><span class=\"k\">}</span>\n    <span class=\"nv\">versionKey</span><span class=\"o\">=</span><span class=\"s2\">\"MARKETING_VERSION\"</span>\n    <span class=\"nv\">bundleID</span><span class=\"o\">=</span><span class=\"s2\">\"PRODUCT_BUNDLE_IDENTIFIER\"</span>\n    <span class=\"nv\">bundleNo</span><span class=\"o\">=</span><span class=\"s2\">\"CURRENT_PROJECT_VERSION\"</span>\n    <span class=\"nv\">platformName</span><span class=\"o\">=</span><span class=\"s2\">\"PLATFORM_NAME\"</span>\n    <span class=\"nv\">productName</span><span class=\"o\">=</span><span class=\"s2\">\"PRODUCT_NAME\"</span>\n    <span class=\"c\">#将要获取的key设置成数组</span>\n    <span class=\"nv\">buildSettingsGrepKeyArray</span><span class=\"o\">=(</span><span class=\"nv\">$versionKey</span> <span class=\"nv\">$bundleID</span> <span class=\"nv\">$bundleNo</span> <span class=\"nv\">$platformName</span> <span class=\"nv\">$productName</span><span class=\"o\">)</span>\n    <span class=\"nv\">buildSettingsGrepKey</span><span class=\"o\">=</span><span class=\"s2\">\"\"</span>\n    <span class=\"k\">for</span><span class=\"o\">((</span> <span class=\"nv\">i</span><span class=\"o\">=</span>0<span class=\"p\">;</span>i&lt;<span class=\"k\">${#</span><span class=\"nv\">buildSettingsGrepKeyArray</span><span class=\"p\">[@]</span><span class=\"k\">}</span><span class=\"p\">;</span>i++<span class=\"o\">))</span>\n    <span class=\"k\">do\n        </span><span class=\"nb\">echo</span> <span class=\"s2\">\"【获取Plist参数】遍历 idx=\"</span><span class=\"nv\">$i</span> <span class=\"s2\">\"value=\"</span> <span class=\"k\">${</span><span class=\"nv\">buildSettingsGrepKeyArray</span><span class=\"p\">[i]</span><span class=\"k\">}</span>\n        <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$buildSettingsGrepKey</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n            </span><span class=\"nv\">buildSettingsGrepKey</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">buildSettingsGrepKeyArray</span><span class=\"p\">[i]</span><span class=\"k\">}</span><span class=\"p\">;</span>\n        <span class=\"k\">else\n            </span>buildSettingsGrepKey+<span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"se\">\\|</span><span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">buildSettingsGrepKeyArray</span><span class=\"p\">[i]</span><span class=\"k\">}</span><span class=\"p\">;</span>\n        <span class=\"k\">fi\n    done</span><span class=\"p\">;</span>\n    <span class=\"c\">#将数组拼接成 grep 参数</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"【获取Plist参数】key：\"</span><span class=\"nv\">$buildSettingsGrepKey</span>\n\n    <span class=\"c\">#-w 防止模糊匹配 比如  PRODUCT_NAME 和 FULL_PRODUCT_NAME</span>\n    <span class=\"nv\">buildSettings</span><span class=\"o\">=</span><span class=\"sb\">`</span>xcodebuild <span class=\"nt\">-showBuildSettings</span> <span class=\"nt\">-target</span> <span class=\"k\">${</span><span class=\"nv\">TARGET_NAME</span><span class=\"k\">}</span> | <span class=\"nb\">grep</span> <span class=\"nt\">-w</span> <span class=\"nv\">$buildSettingsGrepKey</span><span class=\"sb\">`</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"【获取Plist参数】result：\"</span><span class=\"nv\">$buildSettings</span>\n    \n    <span class=\"c\">#取值数组</span>\n    <span class=\"nv\">buildSettingsGrepValueArray</span><span class=\"o\">=[]</span>\n    <span class=\"k\">for</span><span class=\"o\">((</span> <span class=\"nv\">i</span><span class=\"o\">=</span>0<span class=\"p\">;</span>i&lt;<span class=\"k\">${#</span><span class=\"nv\">buildSettingsGrepKeyArray</span><span class=\"p\">[@]</span><span class=\"k\">}</span><span class=\"p\">;</span>i++<span class=\"o\">))</span>\n    <span class=\"k\">do</span>\n        <span class=\"c\">#右截断</span>\n        <span class=\"nv\">value</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">buildSettings</span><span class=\"p\">#*</span><span class=\"k\">${</span><span class=\"nv\">buildSettingsGrepKeyArray</span><span class=\"p\">[i]</span><span class=\"k\">}</span><span class=\"p\"> = </span><span class=\"k\">}</span>\n        <span class=\"k\">for</span><span class=\"o\">((</span> <span class=\"nv\">j</span><span class=\"o\">=</span>0<span class=\"p\">;</span>j&lt;<span class=\"k\">${#</span><span class=\"nv\">buildSettingsGrepKeyArray</span><span class=\"p\">[@]</span><span class=\"k\">}</span><span class=\"p\">;</span>j++<span class=\"o\">))</span>\n        <span class=\"k\">do</span>\n            <span class=\"c\">#由于grep顺序不保证，遍历所有key进行右截断</span>\n            <span class=\"nv\">value</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">value</span><span class=\"p\">%</span><span class=\"k\">${</span><span class=\"nv\">buildSettingsGrepKeyArray</span><span class=\"p\">[j]</span><span class=\"k\">}</span><span class=\"p\">*</span><span class=\"k\">}</span>\n        <span class=\"k\">done</span><span class=\"p\">;</span>\n        <span class=\"nv\">value</span><span class=\"o\">=</span><span class=\"sb\">`</span><span class=\"nb\">echo</span> <span class=\"k\">${</span><span class=\"nv\">value</span><span class=\"k\">}</span> | <span class=\"nb\">sed</span> <span class=\"s1\">'s/\\ //g'</span><span class=\"sb\">`</span>\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"【获取Plist参数】i=\"</span><span class=\"nv\">$i</span> <span class=\"s2\">\"value=\"</span><span class=\"nv\">$value</span><span class=\"s2\">\"。\"</span>\n        <span class=\"c\">#填回取值数组</span>\n        buildSettingsGrepValueArray[i]<span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">value</span><span class=\"k\">}</span>\n    <span class=\"k\">done</span><span class=\"p\">;</span>\n    \n    <span class=\"c\">#定义全部变量</span>\n    <span class=\"nb\">export </span><span class=\"nv\">xcodeVersion3number</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">buildSettingsGrepValueArray</span><span class=\"p\">[0]</span><span class=\"k\">}</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"【获取Plist参数】版本号：\"</span><span class=\"nv\">$xcodeVersion3number</span><span class=\"s2\">\"。\"</span>\n\n    <span class=\"nb\">export </span><span class=\"nv\">xcodeBundleID</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">buildSettingsGrepValueArray</span><span class=\"p\">[1]</span><span class=\"k\">}</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"【获取Plist参数】包名：\"</span><span class=\"nv\">$xcodeBundleID</span><span class=\"s2\">\"。\"</span>\n\n    <span class=\"nb\">export </span><span class=\"nv\">xcodebundleNo</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">buildSettingsGrepValueArray</span><span class=\"p\">[2]</span><span class=\"k\">}</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"【获取Plist参数】build号：\"</span><span class=\"nv\">$xcodebundleNo</span><span class=\"s2\">\"。\"</span>\n    \n    <span class=\"nb\">export </span><span class=\"nv\">xcodePlatformName</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">buildSettingsGrepValueArray</span><span class=\"p\">[3]</span><span class=\"k\">}</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"【获取Plist参数】PlatformName：\"</span><span class=\"nv\">$xcodePlatformName</span><span class=\"s2\">\"。\"</span>\n    \n    <span class=\"nb\">export </span><span class=\"nv\">xcodeProductName</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">buildSettingsGrepValueArray</span><span class=\"p\">[4]</span><span class=\"k\">}</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"【获取Plist参数】ProductName：\"</span><span class=\"nv\">$xcodeProductName</span><span class=\"s2\">\"。\"</span>\n    <span class=\"nb\">cd</span> ..\n<span class=\"o\">}</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<ul>\n  <li>构建号设置：</li>\n</ul>\n\n<p>​\t设置构建号，可以避免每次构建的build重复，导致在appstore后台管理构建时的紊乱，也便于追溯构建代码版本等，而如果可以通过自动化的方式进行构建号的设置就更好了，这里提供一种设置思路：获取当前日期+流水线构建号(自增)，可以构建流水线内保证全局唯一：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#自动(自增)修改构建号</span>\n<span class=\"k\">function </span>modify_build_no<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"nb\">cd</span> <span class=\"k\">${</span><span class=\"nv\">CurDir</span><span class=\"k\">}</span>/<span class=\"k\">${</span><span class=\"nv\">projectDir</span><span class=\"k\">}</span>\n    <span class=\"nb\">export </span><span class=\"nv\">BuildNo</span><span class=\"o\">=</span><span class=\"sb\">`</span><span class=\"nb\">date</span> +%Y%m%d<span class=\"sb\">`</span>\n    <span class=\"c\">#BuildNo，可以采用拼接日期+构建方式+流水线自增号来识别构建包的来源（构建方式：dailybuild、TestFlight、Release、TFInner）</span>\n    <span class=\"nv\">BuildNo</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">BuildNo</span><span class=\"k\">}</span>.<span class=\"nv\">$1</span>.<span class=\"k\">${</span><span class=\"nv\">SYS_PIPELINE_BUILD_NUMBER</span><span class=\"k\">}</span>\n<span class=\"c\">#    plist_path=${CurDir}/${projectDir}/${projectDir}/Info.plist</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"【获取Plist参数】路径：\"</span><span class=\"nv\">$plist_path</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"【设置Plist参数】build：\"</span><span class=\"nv\">$BuildNo</span>    \n<span class=\"c\">#    /usr/libexec/PlistBuddy -c \"Set :CFBundleVersion ${BuildNo}\" ${plist_path}</span>\n    agvtool new-version <span class=\"nt\">-all</span> <span class=\"k\">${</span><span class=\"nv\">BuildNo</span><span class=\"k\">}</span>\n    <span class=\"nb\">cd</span> -\n<span class=\"o\">}</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h4 id=\"222-构建中\">2.2.2 构建中：</h4>\n\n<ul>\n  <li>\n    <p>执行构建：</p>\n\n    <p>在完成了所有必要的构建前的设置之后，可以进行构建流程：</p>\n  </li>\n</ul>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#执行构建</span>\n<span class=\"k\">function </span>build<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$1</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">echo</span> <span class=\"s2\">\"error: configurationName 不能为空 退出\"</span>\n        <span class=\"nb\">exit </span>1\n    <span class=\"k\">fi</span>\n    <span class=\"c\">#定义项目前缀,生成文件时使用</span>\n    <span class=\"nb\">export </span><span class=\"nv\">PrefixID</span><span class=\"o\">=</span>PSC_\n\n    <span class=\"c\">#设置根目录</span>\n    <span class=\"nb\">export </span><span class=\"nv\">CurDir</span><span class=\"o\">=</span><span class=\"sb\">`</span><span class=\"nb\">pwd</span><span class=\"sb\">`</span>\n    \n    <span class=\"c\">#进行打包的schemeName</span>\n    <span class=\"nb\">export </span><span class=\"nv\">schemeName</span><span class=\"o\">=</span>dailybuildipa\n    \n    <span class=\"c\">#指定编译 配置 configuration</span>\n    <span class=\"nv\">configurationNameArray</span><span class=\"o\">=(</span>DailyBuild TestFlight Release TFInner<span class=\"o\">)</span>\n    <span class=\"nb\">export </span><span class=\"nv\">configurationName</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">configurationNameArray</span><span class=\"p\">[</span><span class=\"nv\">$1</span><span class=\"p\">]</span><span class=\"k\">}</span>\n\n    <span class=\"c\">#指定编译脚本路径</span>\n    <span class=\"c\">#TODO: 这里需要匹配下当前脚本所在的目录</span>\n    <span class=\"nb\">export </span><span class=\"nv\">buildsh_dir</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">CurDir</span><span class=\"k\">}</span>/PSC_iOS_Build_SH\n\n    <span class=\"c\">#设置plist参数</span>\n    modify_build_no <span class=\"nv\">$1</span>\n\n    <span class=\"c\">#读取plist参数</span>\n    initInfoPlistParms\n    \n    <span class=\"c\">#执行构建</span>\n    bash <span class=\"nv\">$buildsh_dir</span>/build_sh.sh\n<span class=\"o\">}</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>构建流程设计包括：</p>\n\n<ul>\n  <li>设置环境变量</li>\n  <li>\n    <p>设置内部变量</p>\n  </li>\n  <li>\n    <p>初始化环境</p>\n  </li>\n  <li>\n    <p>mPaas设置（可选）</p>\n  </li>\n  <li>\n    <p>执行pod</p>\n  </li>\n  <li>\n    <p>构建工具适配（可选）</p>\n  </li>\n  <li>执行构建</li>\n</ul>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n</pre></td><td class=\"rouge-code\"><pre><span class=\"k\">function </span>build<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"c\">#设置内部环境变量</span>\n    initDevopsEnv\n \n    <span class=\"c\">#设置内部环境变量</span>\n    createInternalEnv\n        \n    <span class=\"c\">#初始化环境</span>\n    init_env\n\n    <span class=\"c\">#执行pod之前，先配置mPaas在当前环境下的配置文件</span>\n    mPaaSConfigSet\n    \n    <span class=\"c\">#执行pod</span>\n    pod_install\n\n    <span class=\"c\">#fix xcode 14.3 cocoapods bug</span>\n    fiXCode143\n\n    <span class=\"c\">#执行构建</span>\n    buildProject\n\n    <span class=\"c\">#执行构建归档操作</span>\n    collection\n    \n    <span class=\"c\">#上传（发布）安装包，供下载安装</span>\n    bash <span class=\"nv\">$buildsh_dir</span>/<span class=\"nv\">$build_ext_fold</span>/<span class=\"nv\">$publish_sh</span>\n\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"k\">${</span><span class=\"nv\">configurationName</span><span class=\"k\">}</span> <span class=\"o\">=</span> <span class=\"s2\">\"DailyBuild\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then</span>\n        <span class=\"c\">#通知</span>\n        bash <span class=\"nv\">$buildsh_dir</span>/<span class=\"nv\">$build_ext_fold</span>/<span class=\"nv\">$notification_sh</span>\n    <span class=\"k\">fi</span>\n<span class=\"o\">}</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>​\t构建具体的思路可以参考源码，这里不再赘述</p>\n\n<h4 id=\"223-构建后\">2.2.3 构建后：</h4>\n\n<ul>\n  <li>归档</li>\n</ul>\n\n<p>为什么要归档：</p>\n\n<p>归档主要是为了对构建的安装包IPA及dSYM进行一一对应，由于dailybuild都是在团队内分发，因此这边考虑只有在testflight及appstore时才进行归档。</p>\n\n<p>此外；如果使用bugly进行崩溃收集，bugly已经不支持手动传dSYM，需要在构建时一并实现。</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n</pre></td><td class=\"rouge-code\"><pre><span class=\"k\">function </span>upload_dSYM<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n\t\t<span class=\"c\">#这里可以根据各自情况，存在dSYM文件</span>\n<span class=\"o\">}</span>\n\n<span class=\"k\">function </span>upload_dSYM_to_bugly<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"nb\">export </span><span class=\"nv\">p</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">dSYM_dict_PATH</span><span class=\"k\">}</span>\n    \n    <span class=\"c\">#根据不同的应用进行设置</span>\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"k\">${</span><span class=\"nv\">TARGET_NAME</span><span class=\"k\">}</span> <span class=\"o\">=</span> <span class=\"s2\">\"PSCiOS\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nv\">bugly_appid</span><span class=\"o\">=</span>xxx\n        <span class=\"nv\">bugly_appkey</span><span class=\"o\">=</span>yyy\n    <span class=\"k\">fi\n    \n    </span><span class=\"nb\">echo</span> <span class=\"s1\">'/// 上传 dsym bugly '</span><span class=\"k\">${</span><span class=\"nv\">v</span><span class=\"k\">}</span><span class=\"s1\">'pkgName='</span><span class=\"k\">${</span><span class=\"nv\">pkgName</span><span class=\"k\">}</span>\n    \n    <span class=\"c\">#切换java 版本</span>\n    java <span class=\"nt\">-version</span>\n    jdk8\n    java <span class=\"nt\">-version</span>\n    \n    <span class=\"nv\">bugly_jar_path</span><span class=\"o\">=</span><span class=\"nv\">$buildsh_dir</span>/<span class=\"nv\">$build_ext_fold</span>/collection_res/buglyqq-upload-symbol/buglyqq-upload-symbol.jar\n    \n    java <span class=\"nt\">-jar</span> <span class=\"k\">${</span><span class=\"nv\">bugly_jar_path</span><span class=\"k\">}</span> <span class=\"nt\">-appid</span> <span class=\"k\">${</span><span class=\"nv\">bugly_appid</span><span class=\"k\">}</span> <span class=\"nt\">-appkey</span> <span class=\"k\">${</span><span class=\"nv\">bugly_appkey</span><span class=\"k\">}</span> <span class=\"nt\">-bundleid</span> <span class=\"k\">${</span><span class=\"nv\">pkgName</span><span class=\"k\">}</span> <span class=\"nt\">-version</span> <span class=\"k\">${</span><span class=\"nv\">v</span><span class=\"k\">}</span> <span class=\"nt\">-platform</span> IOS <span class=\"nt\">-inputSymbol</span> <span class=\"k\">${</span><span class=\"nv\">p</span><span class=\"k\">}</span>\n<span class=\"o\">}</span>\n\n<span class=\"k\">function </span>collection<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"nb\">export </span><span class=\"nv\">v</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">xcodeVersion3number</span><span class=\"k\">}</span>.<span class=\"k\">${</span><span class=\"nv\">BuildNo</span><span class=\"k\">}</span>\n    <span class=\"nb\">export </span><span class=\"nv\">pkgName</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">xcodeBundleID</span><span class=\"k\">}</span>\n\n    <span class=\"c\">#上传到bugly符号表</span>\n    upload_dSYM_to_bugly\n\n    <span class=\"c\">#上传dSYM</span>\n    upload_dSYM\n<span class=\"o\">}</span>\n\n<span class=\"c\">#归档</span>\ncollection\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<ul>\n  <li>发布</li>\n</ul>\n\n<p>归档后，对安装包进行分发，分发也分dailybuild与release：</p>\n\n<p>dailybuild:目前采用发布到蒲公英渠道：<a href=\"#2.1.3\">2.1.3 参数3(可选)：渠道号</a></p>\n\n<p>Release:发布到AppStore</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n</pre></td><td class=\"rouge-code\"><pre>    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"k\">${</span><span class=\"nv\">configurationName</span><span class=\"k\">}</span> <span class=\"o\">=</span> <span class=\"s2\">\"Release\"</span> <span class=\"o\">]</span> <span class=\"o\">||</span> <span class=\"o\">[</span> <span class=\"k\">${</span><span class=\"nv\">configurationName</span><span class=\"k\">}</span> <span class=\"o\">=</span> <span class=\"s2\">\"TestFlight\"</span> <span class=\"o\">]</span> <span class=\"o\">||</span> <span class=\"o\">[</span> <span class=\"k\">${</span><span class=\"nv\">configurationName</span><span class=\"k\">}</span> <span class=\"o\">=</span> <span class=\"s2\">\"TFInner\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then</span>\n           <span class=\"c\">#TFInner 、TestFlight &amp; appstore 上传到appstore</span>\n        <span class=\"nb\">echo</span> <span class=\"s1\">'/// 上传App Store 开始'</span>\n        xcrun altool <span class=\"nt\">--validate-app</span> <span class=\"nt\">-f</span>  <span class=\"nv\">$IPA_PATH</span> <span class=\"nt\">--type</span>  ios  <span class=\"nt\">--apiKey</span> <span class=\"nv\">$appStore_apikey</span> <span class=\"nt\">--apiIssuer</span> <span class=\"nv\">$appStore_apiIssuer</span>\n        xcrun altool <span class=\"nt\">--upload-app</span> <span class=\"nt\">-f</span>  <span class=\"nv\">$IPA_PATH</span> <span class=\"nt\">--type</span>  ios  <span class=\"nt\">--apiKey</span> <span class=\"nv\">$appStore_apikey</span> <span class=\"nt\">--apiIssuer</span> <span class=\"nv\">$appStore_apiIssuer</span>\n        <span class=\"nb\">echo</span> <span class=\"s1\">'/// 上传App Store 结束'</span>\n\t\t<span class=\"k\">fi</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<ul>\n  <li>通知</li>\n</ul>\n\n<p>通知可以有很多种方式，由于笔者团队使用钉钉，所以这里举个钉钉机器人例子：<a href=\"#2.1.4\">2.1.4 参数4(可选)：是否静默通知</a></p>\n\n\n\n                <hr style=\"visibility: hidden;\">\n                <ul class=\"pager\">\n                    \n                    <li class=\"previous\">\n                        <a href=\"/2023/08/03/iOS-%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%9C%A8%E5%86%85%E7%BD%91%E8%81%94%E8%B0%83%E6%97%B6%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"iOS客户端在内网联调时的解决方案\">\n                        Previous<br>\n                        <span>iOS客户端在内网联调时的解决方案</span>\n                        </a>\n                    </li>\n                    \n                    \n                    <li class=\"next\">\n                        <a href=\"/2023/08/11/Apple%E4%BC%81%E4%B8%9A%E8%B4%A6%E5%8F%B7%E6%B3%A8%E5%86%8C%E6%B5%81%E7%A8%8B/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Apple 企业账号注册流程\">\n                        Next<br>\n                        <span>Apple 企业账号注册流程</span>\n                        </a>\n                    </li>\n                    \n                </ul>\n                <hr style=\"visibility: hidden;\">\n\n                \n                <!-- disqus 评论框 start -->\n                <div class=\"comment\">\n                    <div id=\"disqus_thread\" class=\"disqus-thread\"></div>\n                </div>\n                <!-- disqus 评论框 end -->\n                \n\n                \n            </div>  \n\n    <!-- Side Catalog Container -->\n        \n            <div class=\"\n                col-lg-2 col-lg-offset-0\n                visible-lg-block\n                sidebar-container\n                catalog-container\">\n                <div class=\"side-catalog\">\n                    <hr class=\"hidden-sm hidden-xs\">\n                    <h5>\n                        <a class=\"catalog-toggle\" href=\"#\">CATALOG</a>\n                    </h5>\n                    <ul class=\"catalog-body\"></ul>\n                </div>\n            </div>\n        \n\n    <!-- Sidebar Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                sidebar-container\">\n\n                <!-- Featured Tags -->\n                \n\n\n<section>\n    \n        <hr class=\"hidden-sm hidden-xs\">\n    \n    <h5><a href=\"/archive/\">FEATURED TAGS</a></h5>\n    <div class=\"tags\">\n        \n        \n        \n        \n        \n    </div>\n</section>\n\n\n                <!-- Friends Blog -->\n                \n            </div>\n        </div>\n    </div>\n</article>\n\n<!-- add support for mathjax by voleking-->\n\n\n\n\n\n\n<!-- disqus 公共JS代码 start (一个网页只需插入一次) -->\n<script type=\"text/javascript\">\n    /* * * CONFIGURATION VARIABLES * * */\n    var disqus_shortname = \"Cyp\";\n    var disqus_identifier = \"/2023/08/08/iOS-话外篇-构建详解\";\n    var disqus_url = \"http://localhost:4000/2023/08/08/iOS-%E8%AF%9D%E5%A4%96%E7%AF%87-%E6%9E%84%E5%BB%BA%E8%AF%A6%E8%A7%A3/\";\n\n    (function() {\n        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;\n        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';\n        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);\n    })();\n</script>\n<!-- disqus 公共JS代码 end -->\n\n\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n      var d = document, t = 'script',\n          o = d.createElement(t),\n          s = d.getElementsByTagName(t)[0];\n      o.src = u;\n      if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n      s.parentNode.insertBefore(o, s);\n    }\n</script>\n<!-- anchor-js, Doc:http://bryanbraun.github.io/anchorjs/ -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/anchor-js/1.1.1/anchor.min.js\",function(){\n        anchors.options = {\n          visible: 'hover',\n          placement: 'right',\n          // icon: '#'\n        };\n        anchors.add().remove('.intro-header h1').remove('.subheading').remove('.sidebar-container h5');\n    })\n</script>\n<style>\n    /* place left on bigger screen */\n    @media all and (min-width: 800px) {\n        .anchorjs-link{\n            position: absolute;\n            left: -0.75em;\n            font-size: 1.1em;\n            margin-top : -0.1em;\n        }\n    }\n</style>\n\n\n\n    <!-- Footer -->\n<footer>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <!-- SNS Link -->\n                \n\n\n<ul class=\"list-inline text-center\">\n\n\n  \n  \n  \n  \n  \n  \n  \n</ul>\n\n                <p class=\"copyright text-muted\">\n                    Copyright &copy; PaysonChen Blog 2024\n                    <br>\n                    <!-- Powered by <a href=\"http://huangxuan.me\">Hux Blog</a> | -->\n                 <!--    <iframe style=\"margin-left: 2px; margin-bottom:-5px;\" frameborder=\"0\" scrolling=\"0\" width=\"100px\"\n                        height=\"20px\"\n                        src=\"https://ghbtns.com/github-btn.html?user=huxpro&repo=huxpro.github.io&type=star&count=true\">\n                    </iframe> -->\n                </p>\n            </div>\n        </div>\n    </div>\n</footer>\n\n<!-- jQuery -->\n<script src=\"/js/jquery.min.js \"></script>\n\n<!-- Bootstrap Core JavaScript -->\n<!-- Currently, only navbar scroll-down effect at desktop still depends on this -->\n<script src=\"/js/bootstrap.min.js \"></script>\n\n<!-- Custom Theme JavaScript -->\n<script src=\"/js/hux-blog.min.js \"></script>\n\n<!-- Simple Jekyll Search -->\n<script src=\"/js/simple-jekyll-search.min.js\"></script>\n\n<!-- Service Worker -->\n\n<script src=\"/js/snackbar.js \"></script>\n<script src=\"/js/sw-registration.js \"></script>\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n        var d = document, t = 'script',\n            o = d.createElement(t),\n            s = d.getElementsByTagName(t)[0];\n        o.src = u;\n        if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n        s.parentNode.insertBefore(o, s);\n    }\n</script>\n\n<!--\n     Because of the native support for backtick-style fenced code blocks\n     right within the Markdown is landed in Github Pages,\n     From V1.6, There is no need for Highlight.js,\n     so Huxblog drops it officially.\n\n     - https://github.com/blog/2100-github-pages-now-faster-and-simpler-with-jekyll-3-0\n     - https://help.github.com/articles/creating-and-highlighting-code-blocks/\n     - https://github.com/jneen/rouge/wiki/list-of-supported-languages-and-lexers\n-->\n<!--\n    <script>\n        async(\"http://cdn.bootcss.com/highlight.js/8.6/highlight.min.js\", function(){\n            hljs.initHighlightingOnLoad();\n        })\n    </script>\n    <link href=\"http://cdn.bootcss.com/highlight.js/8.6/styles/github.min.css\" rel=\"stylesheet\">\n-->\n\n\n\n\n\n\n\n<!--fastClick.js -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/fastclick/1.0.6/fastclick.min.js\", function () {\n        var $nav = document.querySelector(\"nav\");\n        if ($nav) FastClick.attach($nav);\n    })\n</script>\n\n\n<!-- Google Analytics -->\n\n\n\n<!-- Baidu Tongji -->\n\n\n\n<!-- Side Catalog -->\n\n<script type=\"text/javascript\">\n    function generateCatalog(selector) {\n\n        // interop with multilangual \n        if ('' == 'true') {\n            _containerSelector = 'div.post-container.active'\n        } else {\n            _containerSelector = 'div.post-container'\n        }\n\n        // init\n        var P = $(_containerSelector), a, n, t, l, i, c;\n        a = P.find('h1,h2,h3,h4,h5,h6');\n\n        // clean\n        $(selector).html('')\n\n        // appending\n        a.each(function () {\n            n = $(this).prop('tagName').toLowerCase();\n            i = \"#\" + $(this).prop('id');\n            t = $(this).text();\n            c = $('<a href=\"' + i + '\" rel=\"nofollow\">' + t + '</a>');\n            l = $('<li class=\"' + n + '_nav\"></li>').append(c);\n            $(selector).append(l);\n        });\n        return true;\n    }\n\n    generateCatalog(\".catalog-body\");\n\n    // toggle side catalog\n    $(\".catalog-toggle\").click((function (e) {\n        e.preventDefault();\n        $('.side-catalog').toggleClass(\"fold\")\n    }))\n\n    /*\n     * Doc: https://github.com/davist11/jQuery-One-Page-Nav\n     * Fork by Hux to support padding\n     */\n    async(\"/js/jquery.nav.js\", function () {\n        $('.catalog-body').onePageNav({\n            currentClass: \"active\",\n            changeHash: !1,\n            easing: \"swing\",\n            filter: \"\",\n            scrollSpeed: 700,\n            scrollOffset: 0,\n            scrollThreshold: .2,\n            begin: null,\n            end: null,\n            scrollChange: null,\n            padding: 80\n        });\n    });\n</script>\n\n\n\n<!-- Multi-Lingual -->\n\n\n<!-- Simple Jekyll Search -->\n<script>\n    // https://stackoverflow.com/questions/1912501/unescape-html-entities-in-javascript\n    function htmlDecode(input) {\n        var e = document.createElement('textarea');\n        e.innerHTML = input;\n        // handle case of empty input\n        return e.childNodes.length === 0 ? \"\" : e.childNodes[0].nodeValue;\n    }\n\n    SimpleJekyllSearch({\n        searchInput: document.getElementById('search-input'),\n        resultsContainer: document.getElementById('search-results'),\n        json: '/search.json',\n        searchResultTemplate: '<div class=\"post-preview item\"><a href=\"{url}\"><h2 class=\"post-title\">{title}</h2><h3 class=\"post-subtitle\">{subtitle}</h3><hr></a></div>',\n        noResultsText: 'No results',\n        limit: 50,\n        fuzzy: false,\n        // a hack to get escaped subtitle unescaped. for some reason, \n        // post.subtitle w/o escape filter nuke entire search.\n        templateMiddleware: function (prop, value, template) {\n            if (prop === 'subtitle' || prop === 'title') {\n                if (value.indexOf(\"code\")) {\n                    return htmlDecode(value);\n                } else {\n                    return value;\n                }\n            }\n        }\n    });\n\n    $(document).ready(function () {\n        var $searchPage = $('.search-page');\n        var $searchOpen = $('.search-icon');\n        var $searchClose = $('.search-icon-close');\n        var $searchInput = $('#search-input');\n        var $body = $('body');\n\n        $searchOpen.on('click', function (e) {\n            e.preventDefault();\n            $searchPage.toggleClass('search-active');\n            var prevClasses = $body.attr('class') || '';\n            setTimeout(function () {\n                $body.addClass('no-scroll');\n            }, 400)\n\n            if ($searchPage.hasClass('search-active')) {\n                $searchClose.on('click', function (e) {\n                    e.preventDefault();\n                    $searchPage.removeClass('search-active');\n                    $body.attr('class', prevClasses);  // from closure \n                });\n                $searchInput.focus();\n            }\n        });\n    });\n</script>\n\n\n<!-- Image to hack wechat -->\n<img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\" />\n<!-- Migrate from head to bottom, no longer block render and still work -->\n\n</body>\n\n</html>\n","excerpt":"<h1 id=\"ios话外篇构建详解\">iOS话外篇：构建详解</h1>\n","url":"/2023/08/08/iOS-%E8%AF%9D%E5%A4%96%E7%AF%87-%E6%9E%84%E5%BB%BA%E8%AF%A6%E8%A7%A3/","next":{"id":"/2023/08/11/Apple企业账号注册流程","tags":[],"relative_path":"_posts/2023-08-11-Apple企业账号注册流程.md","collection":"posts","content":"<h1 id=\"apple-企业账号注册流程\">Apple 企业账号注册流程</h1>\n\n<h2 id=\"1准备appleid\">1、准备AppleID</h2>\n\n<p>​\t使用非Owner账号，没有持有过Apple开发者账号的AppleID即可，即便是被添加到管理员</p>\n\n<h2 id=\"2完成实名\">2、完成实名</h2>\n\n<p>​\t使用App：Develop – 苹果官方开发者App，登录需要注册的AppleID，切到-&gt;【账户】点击【立即注册】</p>\n\n<h2 id=\"3注册\">3、注册</h2>\n\n<p>​\t注册时需要填入【个人】实名信息，非公司信息。</p>\n\n<p>​\t如果这个时候，地址校验多次失败之后，注册按钮会一直置灰，这个时候就需要通过电话联系Apple开发者，根据当下的异常进行处理，我的经验是：后台解除了我的限制之后，我又输入了公司的信息，导致再次错误，而二次错误无法继续解除，只能通过回传身份证信息进行验证，验证通过后，注册按钮再次被打开。</p>\n\n<h2 id=\"4实名认证\">4、实名认证</h2>\n\n<p>​\t点击注册，看到的是会籍资格688元/年，心存疑问，于是又联系了Apple开发者，再进行一系列的远程协助之后，通过【注册】之后的【下一步】继续【下一步】，一直到完成了身份证及人脸识别之后，完成了实名认证。</p>\n\n<h2 id=\"5企业账号注册\">5、企业账号注册</h2>\n\n<p>​\t至此，如果是个人账号，或者是一般企业账号（688元/年）可以在此进行注册，而企业账号（299美金/年）则需要回到网页端注册</p>\n\n<p>​\t回到网页端：</p>\n\n<p>​\t打开 https://developer.apple.com/cn/support/</p>\n\n<p>​\t点击【文章】</p>\n\n<p>​\t选择【会员资格】</p>\n\n<p>​\t在其他计划中选择【Apple Developer Enterprise Program】</p>\n\n<p>​\t点击【了解资格要求】</p>\n\n<p>​\t嫌麻烦直接跳转：【<a href=\"https://developer.apple.com/cn/programs/enterprise/\">了解资格要求</a>】</p>\n\n<p>​\t在【开始申请】的【你将分发何种类型的 App？】选择【仅在我的组织内部使用的专属App】</p>\n\n<p>​\t点击【开始填写申请表格】</p>\n","name":"2023-08-11-Apple企业账号注册流程.md","previous":{"id":"/2023/08/08/iOS-话外篇-构建详解","tags":[],"relative_path":"_posts/2023-08-08-iOS-话外篇-构建详解.md","collection":"posts","name":"2023-08-08-iOS-话外篇-构建详解.md","url":"/2023/08/08/iOS-%E8%AF%9D%E5%A4%96%E7%AF%87-%E6%9E%84%E5%BB%BA%E8%AF%A6%E8%A7%A3/","title":"iOS话外篇：构建详解","date":"2023-08-08 00:00:00 +0800","categories":[],"path":"_posts/2023-08-08-iOS-话外篇-构建详解.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/home-bg-geek.jpg","slug":"iOS-话外篇-构建详解","ext":".md"},"output":"<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"google-site-verification\" content=\"xBT4GhYoi5qRD5tr338pgPM5OWHHIDR6mNg1a3euekI\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, viewport-fit=cover\">\n    <meta name=\"description\" content=\"与你一起发现更大的世界。\">\n    <meta name=\"keywords\"  content=\"PaysonChen,iOS,流媒体\">\n    <meta name=\"theme-color\" content=\"#000000\">\n    \n    <!-- Open Graph -->\n    <meta property=\"og:title\" content=\"Apple 企业账号注册流程 - PaysonChen的博客 | PaysonChen Blog\">\n    \n    <meta property=\"og:type\" content=\"article\">\n    <meta property=\"og:description\" content=\"Apple 企业账号注册流程\n\">\n    \n    \n    <meta property=\"article:published_time\" content=\"2023-08-11T00:00:00Z\">\n    \n    \n    <meta property=\"article:author\" content=\"PaysonChen\">\n    \n    \n    \n    <meta property=\"og:image\" content=\"http://localhost:4000\">\n    <meta property=\"og:url\" content=\"http://localhost:4000/2023/08/11/Apple%E4%BC%81%E4%B8%9A%E8%B4%A6%E5%8F%B7%E6%B3%A8%E5%86%8C%E6%B5%81%E7%A8%8B/\">\n    <meta property=\"og:site_name\" content=\"PaysonChen的博客 | PaysonChen Blog\">\n    \n    <title>Apple 企业账号注册流程 - PaysonChen的博客 | PaysonChen Blog</title>\n\n    <!-- Web App Manifest -->\n    <link rel=\"manifest\" href=\"/pwa/manifest.json\">\n\n    <!-- Favicon -->\n    <link rel=\"shortcut icon\" href=\"/img/favicon.ico\">\n    \n    <!-- Canonical URL -->\n    <link rel=\"canonical\" href=\"http://localhost:4000/2023/08/11/Apple%E4%BC%81%E4%B8%9A%E8%B4%A6%E5%8F%B7%E6%B3%A8%E5%86%8C%E6%B5%81%E7%A8%8B/\">\n\n    <!-- Bootstrap Core CSS -->\n    <link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\">\n\n    <!-- Custom CSS -->\n    <link rel=\"stylesheet\" href=\"/css/hux-blog.min.css\">\n\n    <!-- Custom Fonts -->\n    <!-- <link href=\"http://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\"> -->\n    <!-- Hux change font-awesome CDN to qiniu -->\n    <link href=\"//cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\">\n\n\n    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->\n    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->\n    <!--[if lt IE 9]>\n        <script src=\"https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js\"></script>\n        <script src=\"https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js\"></script>\n    <![endif]-->\n\n    <!-- ga & ba script hoook -->\n    <script></script>\n</head>\n\n\n<!-- hack iOS CSS :active style -->\n<body ontouchstart=\"\">\n\n    <!-- Navigation -->\n\n    <nav class=\"navbar navbar-default navbar-custom navbar-fixed-top\">\n        \n        <div class=\"container-fluid\">\n            <!-- Brand and toggle get grouped for better mobile display -->\n            <div class=\"navbar-header page-scroll\">\n                <button type=\"button\" class=\"navbar-toggle\">\n                    <span class=\"sr-only\">Toggle navigation</span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                </button>\n                <a class=\"navbar-brand\" href=\"/\">PaysonChen Blog</a>\n            </div>\n\n            <!-- Collect the nav links, forms, and other content for toggling -->\n            <div id=\"huxblog_navbar\">\n                <div class=\"navbar-collapse\">\n                    <ul class=\"nav navbar-nav navbar-right\">\n                        <li>\n                            <a href=\"/\">Home</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        <li>\n                            <a href=\"/about/\">About</a>\n                        </li>\n                        \n                        \n                        \n                        <li>\n                            <a href=\"/archive/\">Archive</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        <li class=\"search-icon\">\n                            <a href=\"javascript:void(0)\">\n                                <i class=\"fa fa-search\"></i>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n            <!-- /.navbar-collapse -->\n        </div>\n        <!-- /.container -->\n    </nav>\n\n    <script>\n        // Drop Bootstarp low-performance Navbar\n        // Use customize navbar with high-quality material design animation\n        // in high-perf jank-free CSS3 implementation\n        var $body = document.body;\n        var $toggle = document.querySelector('.navbar-toggle');\n        var $navbar = document.querySelector('#huxblog_navbar');\n        var $collapse = document.querySelector('.navbar-collapse');\n\n        var __HuxNav__ = {\n            close: function () {\n                $navbar.className = \" \";\n                // wait until animation end.\n                setTimeout(function () {\n                    // prevent frequently toggle\n                    if ($navbar.className.indexOf('in') < 0) {\n                        $collapse.style.height = \"0px\"\n                    }\n                }, 400)\n            },\n            open: function () {\n                $collapse.style.height = \"auto\"\n                $navbar.className += \" in\";\n            }\n        }\n\n        // Bind Event\n        $toggle.addEventListener('click', function (e) {\n            if ($navbar.className.indexOf('in') > 0) {\n                __HuxNav__.close()\n            } else {\n                __HuxNav__.open()\n            }\n        })\n\n        /**\n         * Since Fastclick is used to delegate 'touchstart' globally\n         * to hack 300ms delay in iOS by performing a fake 'click',\n         * Using 'e.stopPropagation' to stop 'touchstart' event from \n         * $toggle/$collapse will break global delegation.\n         * \n         * Instead, we use a 'e.target' filter to prevent handler\n         * added to document close HuxNav.  \n         *\n         * Also, we use 'click' instead of 'touchstart' as compromise\n         */\n        document.addEventListener('click', function (e) {\n            if (e.target == $toggle) return;\n            if (e.target.className == 'icon-bar') return;\n            __HuxNav__.close();\n        })\n    </script>\n    <!-- Search -->\n<div class=\"search-page\">\n  <div class=\"search-icon-close-container\">\n    <span class=\"search-icon-close\">\n      <i class=\"fa fa-chevron-down\"></i>\n    </span>\n  </div>\n  <div class=\"search-main container\">\n    <div class=\"row\">\n      <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n        <form></form>\n        <input type=\"text\" id=\"search-input\" placeholder=\"$ grep...\">\n        </form>\n        <div id=\"search-results\" class=\"mini-post-list\"></div>\n      </div>\n    </div>\n  </div>\n</div>\n\n    <!-- Image to hack wechat -->\n<!-- <img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\"> -->\n<!-- <img src=\"/img/home-bg-geek.jpg\" width=\"0\" height=\"0\"> -->\n\n<!-- Post Header -->\n\n\n\n<style type=\"text/css\">\n    header.intro-header{\n        position: relative;\n        background-image: url('/img/home-bg-geek.jpg');\n        background: ;\n    }\n\n    \n</style>\n\n<header class=\"intro-header\" >\n\n    <div class=\"header-mask\"></div>\n    \n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <div class=\"post-heading\">\n                    <div class=\"tags\">\n                        \n                    </div>\n                    <h1>Apple 企业账号注册流程</h1>\n                    \n                    <h2 class=\"subheading\"></h2>\n                    <span class=\"meta\">Posted by PaysonChen on August 11, 2023</span>\n                </div>\n            </div>\n        </div>\n    </div>\n</header>\n\n\n\n\n\n\n<!-- Post Content -->\n<article>\n    <div class=\"container\">\n        <div class=\"row\">\n\n    <!-- Post Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                post-container\">\n\n                <!-- Multi-Lingual -->\n                \n\n\t\t\t\t<h1 id=\"apple-企业账号注册流程\">Apple 企业账号注册流程</h1>\n\n<h2 id=\"1准备appleid\">1、准备AppleID</h2>\n\n<p>​\t使用非Owner账号，没有持有过Apple开发者账号的AppleID即可，即便是被添加到管理员</p>\n\n<h2 id=\"2完成实名\">2、完成实名</h2>\n\n<p>​\t使用App：Develop – 苹果官方开发者App，登录需要注册的AppleID，切到-&gt;【账户】点击【立即注册】</p>\n\n<h2 id=\"3注册\">3、注册</h2>\n\n<p>​\t注册时需要填入【个人】实名信息，非公司信息。</p>\n\n<p>​\t如果这个时候，地址校验多次失败之后，注册按钮会一直置灰，这个时候就需要通过电话联系Apple开发者，根据当下的异常进行处理，我的经验是：后台解除了我的限制之后，我又输入了公司的信息，导致再次错误，而二次错误无法继续解除，只能通过回传身份证信息进行验证，验证通过后，注册按钮再次被打开。</p>\n\n<h2 id=\"4实名认证\">4、实名认证</h2>\n\n<p>​\t点击注册，看到的是会籍资格688元/年，心存疑问，于是又联系了Apple开发者，再进行一系列的远程协助之后，通过【注册】之后的【下一步】继续【下一步】，一直到完成了身份证及人脸识别之后，完成了实名认证。</p>\n\n<h2 id=\"5企业账号注册\">5、企业账号注册</h2>\n\n<p>​\t至此，如果是个人账号，或者是一般企业账号（688元/年）可以在此进行注册，而企业账号（299美金/年）则需要回到网页端注册</p>\n\n<p>​\t回到网页端：</p>\n\n<p>​\t打开 https://developer.apple.com/cn/support/</p>\n\n<p>​\t点击【文章】</p>\n\n<p>​\t选择【会员资格】</p>\n\n<p>​\t在其他计划中选择【Apple Developer Enterprise Program】</p>\n\n<p>​\t点击【了解资格要求】</p>\n\n<p>​\t嫌麻烦直接跳转：【<a href=\"https://developer.apple.com/cn/programs/enterprise/\">了解资格要求</a>】</p>\n\n<p>​\t在【开始申请】的【你将分发何种类型的 App？】选择【仅在我的组织内部使用的专属App】</p>\n\n<p>​\t点击【开始填写申请表格】</p>\n\n\n                <hr style=\"visibility: hidden;\">\n                <ul class=\"pager\">\n                    \n                    <li class=\"previous\">\n                        <a href=\"/2023/08/08/iOS-%E8%AF%9D%E5%A4%96%E7%AF%87-%E6%9E%84%E5%BB%BA%E8%AF%A6%E8%A7%A3/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"iOS话外篇：构建详解\">\n                        Previous<br>\n                        <span>iOS话外篇：构建详解</span>\n                        </a>\n                    </li>\n                    \n                    \n                    <li class=\"next\">\n                        <a href=\"/2023/08/17/iOS%E7%BB%84%E4%BB%B6%E5%8C%96-%E4%B8%9A%E5%8A%A1%E7%BB%84%E4%BB%B6%E5%87%86%E5%A4%87%E7%AF%87/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"iOS组件化之：业务组件准备篇\">\n                        Next<br>\n                        <span>iOS组件化之：业务组件准备篇</span>\n                        </a>\n                    </li>\n                    \n                </ul>\n                <hr style=\"visibility: hidden;\">\n\n                \n                <!-- disqus 评论框 start -->\n                <div class=\"comment\">\n                    <div id=\"disqus_thread\" class=\"disqus-thread\"></div>\n                </div>\n                <!-- disqus 评论框 end -->\n                \n\n                \n            </div>  \n\n    <!-- Side Catalog Container -->\n        \n            <div class=\"\n                col-lg-2 col-lg-offset-0\n                visible-lg-block\n                sidebar-container\n                catalog-container\">\n                <div class=\"side-catalog\">\n                    <hr class=\"hidden-sm hidden-xs\">\n                    <h5>\n                        <a class=\"catalog-toggle\" href=\"#\">CATALOG</a>\n                    </h5>\n                    <ul class=\"catalog-body\"></ul>\n                </div>\n            </div>\n        \n\n    <!-- Sidebar Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                sidebar-container\">\n\n                <!-- Featured Tags -->\n                \n\n\n<section>\n    \n        <hr class=\"hidden-sm hidden-xs\">\n    \n    <h5><a href=\"/archive/\">FEATURED TAGS</a></h5>\n    <div class=\"tags\">\n        \n        \n        \n        \n        \n    </div>\n</section>\n\n\n                <!-- Friends Blog -->\n                \n            </div>\n        </div>\n    </div>\n</article>\n\n<!-- add support for mathjax by voleking-->\n\n\n\n\n\n\n<!-- disqus 公共JS代码 start (一个网页只需插入一次) -->\n<script type=\"text/javascript\">\n    /* * * CONFIGURATION VARIABLES * * */\n    var disqus_shortname = \"Cyp\";\n    var disqus_identifier = \"/2023/08/11/Apple企业账号注册流程\";\n    var disqus_url = \"http://localhost:4000/2023/08/11/Apple%E4%BC%81%E4%B8%9A%E8%B4%A6%E5%8F%B7%E6%B3%A8%E5%86%8C%E6%B5%81%E7%A8%8B/\";\n\n    (function() {\n        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;\n        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';\n        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);\n    })();\n</script>\n<!-- disqus 公共JS代码 end -->\n\n\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n      var d = document, t = 'script',\n          o = d.createElement(t),\n          s = d.getElementsByTagName(t)[0];\n      o.src = u;\n      if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n      s.parentNode.insertBefore(o, s);\n    }\n</script>\n<!-- anchor-js, Doc:http://bryanbraun.github.io/anchorjs/ -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/anchor-js/1.1.1/anchor.min.js\",function(){\n        anchors.options = {\n          visible: 'hover',\n          placement: 'right',\n          // icon: '#'\n        };\n        anchors.add().remove('.intro-header h1').remove('.subheading').remove('.sidebar-container h5');\n    })\n</script>\n<style>\n    /* place left on bigger screen */\n    @media all and (min-width: 800px) {\n        .anchorjs-link{\n            position: absolute;\n            left: -0.75em;\n            font-size: 1.1em;\n            margin-top : -0.1em;\n        }\n    }\n</style>\n\n\n\n    <!-- Footer -->\n<footer>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <!-- SNS Link -->\n                \n\n\n<ul class=\"list-inline text-center\">\n\n\n  \n  \n  \n  \n  \n  \n  \n</ul>\n\n                <p class=\"copyright text-muted\">\n                    Copyright &copy; PaysonChen Blog 2024\n                    <br>\n                    <!-- Powered by <a href=\"http://huangxuan.me\">Hux Blog</a> | -->\n                 <!--    <iframe style=\"margin-left: 2px; margin-bottom:-5px;\" frameborder=\"0\" scrolling=\"0\" width=\"100px\"\n                        height=\"20px\"\n                        src=\"https://ghbtns.com/github-btn.html?user=huxpro&repo=huxpro.github.io&type=star&count=true\">\n                    </iframe> -->\n                </p>\n            </div>\n        </div>\n    </div>\n</footer>\n\n<!-- jQuery -->\n<script src=\"/js/jquery.min.js \"></script>\n\n<!-- Bootstrap Core JavaScript -->\n<!-- Currently, only navbar scroll-down effect at desktop still depends on this -->\n<script src=\"/js/bootstrap.min.js \"></script>\n\n<!-- Custom Theme JavaScript -->\n<script src=\"/js/hux-blog.min.js \"></script>\n\n<!-- Simple Jekyll Search -->\n<script src=\"/js/simple-jekyll-search.min.js\"></script>\n\n<!-- Service Worker -->\n\n<script src=\"/js/snackbar.js \"></script>\n<script src=\"/js/sw-registration.js \"></script>\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n        var d = document, t = 'script',\n            o = d.createElement(t),\n            s = d.getElementsByTagName(t)[0];\n        o.src = u;\n        if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n        s.parentNode.insertBefore(o, s);\n    }\n</script>\n\n<!--\n     Because of the native support for backtick-style fenced code blocks\n     right within the Markdown is landed in Github Pages,\n     From V1.6, There is no need for Highlight.js,\n     so Huxblog drops it officially.\n\n     - https://github.com/blog/2100-github-pages-now-faster-and-simpler-with-jekyll-3-0\n     - https://help.github.com/articles/creating-and-highlighting-code-blocks/\n     - https://github.com/jneen/rouge/wiki/list-of-supported-languages-and-lexers\n-->\n<!--\n    <script>\n        async(\"http://cdn.bootcss.com/highlight.js/8.6/highlight.min.js\", function(){\n            hljs.initHighlightingOnLoad();\n        })\n    </script>\n    <link href=\"http://cdn.bootcss.com/highlight.js/8.6/styles/github.min.css\" rel=\"stylesheet\">\n-->\n\n\n\n\n\n\n\n<!--fastClick.js -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/fastclick/1.0.6/fastclick.min.js\", function () {\n        var $nav = document.querySelector(\"nav\");\n        if ($nav) FastClick.attach($nav);\n    })\n</script>\n\n\n<!-- Google Analytics -->\n\n\n\n<!-- Baidu Tongji -->\n\n\n\n<!-- Side Catalog -->\n\n<script type=\"text/javascript\">\n    function generateCatalog(selector) {\n\n        // interop with multilangual \n        if ('' == 'true') {\n            _containerSelector = 'div.post-container.active'\n        } else {\n            _containerSelector = 'div.post-container'\n        }\n\n        // init\n        var P = $(_containerSelector), a, n, t, l, i, c;\n        a = P.find('h1,h2,h3,h4,h5,h6');\n\n        // clean\n        $(selector).html('')\n\n        // appending\n        a.each(function () {\n            n = $(this).prop('tagName').toLowerCase();\n            i = \"#\" + $(this).prop('id');\n            t = $(this).text();\n            c = $('<a href=\"' + i + '\" rel=\"nofollow\">' + t + '</a>');\n            l = $('<li class=\"' + n + '_nav\"></li>').append(c);\n            $(selector).append(l);\n        });\n        return true;\n    }\n\n    generateCatalog(\".catalog-body\");\n\n    // toggle side catalog\n    $(\".catalog-toggle\").click((function (e) {\n        e.preventDefault();\n        $('.side-catalog').toggleClass(\"fold\")\n    }))\n\n    /*\n     * Doc: https://github.com/davist11/jQuery-One-Page-Nav\n     * Fork by Hux to support padding\n     */\n    async(\"/js/jquery.nav.js\", function () {\n        $('.catalog-body').onePageNav({\n            currentClass: \"active\",\n            changeHash: !1,\n            easing: \"swing\",\n            filter: \"\",\n            scrollSpeed: 700,\n            scrollOffset: 0,\n            scrollThreshold: .2,\n            begin: null,\n            end: null,\n            scrollChange: null,\n            padding: 80\n        });\n    });\n</script>\n\n\n\n<!-- Multi-Lingual -->\n\n\n<!-- Simple Jekyll Search -->\n<script>\n    // https://stackoverflow.com/questions/1912501/unescape-html-entities-in-javascript\n    function htmlDecode(input) {\n        var e = document.createElement('textarea');\n        e.innerHTML = input;\n        // handle case of empty input\n        return e.childNodes.length === 0 ? \"\" : e.childNodes[0].nodeValue;\n    }\n\n    SimpleJekyllSearch({\n        searchInput: document.getElementById('search-input'),\n        resultsContainer: document.getElementById('search-results'),\n        json: '/search.json',\n        searchResultTemplate: '<div class=\"post-preview item\"><a href=\"{url}\"><h2 class=\"post-title\">{title}</h2><h3 class=\"post-subtitle\">{subtitle}</h3><hr></a></div>',\n        noResultsText: 'No results',\n        limit: 50,\n        fuzzy: false,\n        // a hack to get escaped subtitle unescaped. for some reason, \n        // post.subtitle w/o escape filter nuke entire search.\n        templateMiddleware: function (prop, value, template) {\n            if (prop === 'subtitle' || prop === 'title') {\n                if (value.indexOf(\"code\")) {\n                    return htmlDecode(value);\n                } else {\n                    return value;\n                }\n            }\n        }\n    });\n\n    $(document).ready(function () {\n        var $searchPage = $('.search-page');\n        var $searchOpen = $('.search-icon');\n        var $searchClose = $('.search-icon-close');\n        var $searchInput = $('#search-input');\n        var $body = $('body');\n\n        $searchOpen.on('click', function (e) {\n            e.preventDefault();\n            $searchPage.toggleClass('search-active');\n            var prevClasses = $body.attr('class') || '';\n            setTimeout(function () {\n                $body.addClass('no-scroll');\n            }, 400)\n\n            if ($searchPage.hasClass('search-active')) {\n                $searchClose.on('click', function (e) {\n                    e.preventDefault();\n                    $searchPage.removeClass('search-active');\n                    $body.attr('class', prevClasses);  // from closure \n                });\n                $searchInput.focus();\n            }\n        });\n    });\n</script>\n\n\n<!-- Image to hack wechat -->\n<img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\" />\n<!-- Migrate from head to bottom, no longer block render and still work -->\n\n</body>\n\n</html>\n","excerpt":"<h1 id=\"apple-企业账号注册流程\">Apple 企业账号注册流程</h1>\n","url":"/2023/08/11/Apple%E4%BC%81%E4%B8%9A%E8%B4%A6%E5%8F%B7%E6%B3%A8%E5%86%8C%E6%B5%81%E7%A8%8B/","next":{"id":"/2023/08/17/iOS组件化-业务组件准备篇","tags":[],"relative_path":"_posts/2023-08-17-iOS组件化-业务组件准备篇.md","collection":"posts","name":"2023-08-17-iOS组件化-业务组件准备篇.md","url":"/2023/08/17/iOS%E7%BB%84%E4%BB%B6%E5%8C%96-%E4%B8%9A%E5%8A%A1%E7%BB%84%E4%BB%B6%E5%87%86%E5%A4%87%E7%AF%87/","title":"iOS组件化之：业务组件准备篇","date":"2023-08-17 00:00:00 +0800","categories":[],"path":"_posts/2023-08-17-iOS组件化-业务组件准备篇.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/home-bg-geek.jpg","slug":"iOS组件化-业务组件准备篇","ext":".md"},"title":"Apple 企业账号注册流程","date":"2023-08-11 00:00:00 +0800","categories":[],"path":"_posts/2023-08-11-Apple企业账号注册流程.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/home-bg-geek.jpg","slug":"Apple企业账号注册流程","ext":".md"},"title":"iOS话外篇：构建详解","date":"2023-08-08 00:00:00 +0800","categories":[],"path":"_posts/2023-08-08-iOS-话外篇-构建详解.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/home-bg-geek.jpg","slug":"iOS-话外篇-构建详解","ext":".md"},{"id":"/2023/08/03/iOS-客户端在内网联调时的解决方案","tags":[],"relative_path":"_posts/2023-08-03-iOS-客户端在内网联调时的解决方案.md","collection":"posts","content":"<h1 id=\"ios客户端在内网联调时的解决方案\">iOS客户端在内网联调时的解决方案</h1>\n\n<h2 id=\"1背景\">1.背景</h2>\n\n<p>在做某个需求的时候，如果后台接口部署在研发内网，此时的联调可能存在以下问题：</p>\n\n<h2 id=\"2问题描述\">2.问题描述：</h2>\n\n<p>内网调试证书校验失败：</p>\n\n<p>需要测试设备连接WiFi：XXX_DEV，此WiFi不能访问外网，会存在证书校验失败的问题</p>\n\n<p>因此需要每次编译都需要：</p>\n\n<ul>\n  <li>编译前切换外网环境</li>\n  <li>编译后切换内网环境</li>\n</ul>\n\n<p>导致非常影响研发效率。</p>\n\n<h2 id=\"3解决方案\">3.解决方案：</h2>\n\n<h3 id=\"31-方案1测试机\">3.1 方案1：测试机</h3>\n\n<p>通过iPhone的快捷指令实现自动化：</p>\n\n<ul>\n  <li>通过一张sim卡</li>\n  <li>添加一条自动化：实现App关闭时关掉Wi-Fi打开蜂窝，编译时能访问到外网校验证书</li>\n  <li>再添加一条自动化：运行App时执行关闭蜂窝，打开Wi-Fi，Wi-Fi设置只自动加入WiFi：XXX_DEV</li>\n</ul>\n\n<p>暂时解决上述问题，未来需要彻底解决时，如果安全管控无法绕开，则需要推动后端将dev环境部署到外网</p>\n\n<h3 id=\"32-方案2模拟器调试\">3.2 方案2：模拟器调试</h3>\n\n<p>模拟器调试不需要通过联网校验证书，因此可以将Mac连接到WiFi：XXX_DEV，进行模拟器调试</p>\n\n<h3 id=\"33-方案3部署研发外网\">3.3 方案3：部署研发外网</h3>\n\n<p>推动与后台开发同学协商，尽量开发期间，选择外网部署</p>\n","name":"2023-08-03-iOS-客户端在内网联调时的解决方案.md","previous":{"id":"/2023/08/02/iOS-组件化实践之-遇到的问题及解决过程纪要-持续更新中","tags":[],"relative_path":"_posts/2023-08-02-iOS-组件化实践之-遇到的问题及解决过程纪要-持续更新中.md","collection":"posts","content":"<h1 id=\"ios组件化实践之遇到的问题及解决过程纪要持续更新中\">iOS组件化实践之：遇到的问题及解决过程纪要(持续更新中)</h1>\n\n<h2 id=\"一编译错误\">一、编译错误</h2>\n\n<h3 id=\"11-msghandlingerror\">1.1 MsgHandlingError</h3>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n</pre></td><td class=\"rouge-code\"><pre>Build service could not create build operation: unknown error <span class=\"k\">while </span>handling message: MsgHandlingError<span class=\"o\">(</span>message: <span class=\"s2\">\"unable to initiate PIF transfer session (operation in progress?)\"</span><span class=\"o\">)</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>经Google之后，解决方案是要清楚编译构建索引，由于还是比较频繁出现，于是写了个脚本：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#!/bin/bash</span>\n\n<span class=\"c\"># [背景]</span>\n<span class=\"c\"># 组件化过程中，经常出现以下编译错误：</span>\n<span class=\"c\"># Build service could not create build operation: unknown error while handling message: MsgHandlingError(message: \"unable to initiate PIF transfer session (operation in progress?)\")</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># author: Chenyp34</span>\n<span class=\"c\"># [目的]</span>\n<span class=\"c\"># 为解决上述错误，需要清理构建索引目录并重启xcode，由于操作重复，考虑抽出shell脚本</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [目录]</span>\n<span class=\"c\">#   - auto_clean.sh</span>\n<span class=\"c\"># [说明]</span>\n<span class=\"c\"># 1、CD[指定xcode构建索引目录]目录</span>\n<span class=\"c\"># 2、递归删除当前文件下所有文件</span>\n<span class=\"c\"># 3、重启xcode</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [参数]</span>\n<span class=\"c\"># 1、参数1，指定xcode构建索引目录</span>\n<span class=\"c\"># 1、参数2，指定要打开的Xcode项目目</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [调用说明]</span>\n<span class=\"c\"># 1、未指定目录，则取当前目录：sh auto_clean.sh</span>\n<span class=\"c\"># 2、指定目录：sh auto_clean.sh /xcode构建索引目录/ /要打开的Xcode项目目录/</span>\n\n\n<span class=\"nb\">export </span><span class=\"nv\">XcodeDerivedDataPath</span><span class=\"o\">=</span>/Users/YourMacName/Library/Developer/Xcode/DerivedData\n<span class=\"nb\">export </span><span class=\"nv\">XcodeWorkspacePath</span><span class=\"o\">=</span>/Users/YourMacName/Documents/PCS/git/Project/xxx.xcworkspace\n\n<span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$1</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n    </span><span class=\"nb\">echo</span> <span class=\"s1\">'///入参1为空，使用默认xcode构建索引目录:'</span><span class=\"k\">${</span><span class=\"nv\">XcodeDerivedDataPath</span><span class=\"k\">}</span>\n<span class=\"k\">else\n    </span><span class=\"nv\">XcodeDerivedDataPath</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'///入参1不为空，xcode构建索引目录:'</span><span class=\"k\">${</span><span class=\"nv\">XcodeDerivedDataPath</span><span class=\"k\">}</span>\n<span class=\"k\">fi\n\nif</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$2</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n    </span><span class=\"nb\">echo</span> <span class=\"s1\">'///入参2为空，使用默认xcode项目目录:'</span><span class=\"k\">${</span><span class=\"nv\">XcodeWorkspacePath</span><span class=\"k\">}</span>\n<span class=\"k\">else\n    </span><span class=\"nv\">XcodeWorkspacePath</span><span class=\"o\">=</span><span class=\"nv\">$2</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'///入参2不为空，xcode项目目录:'</span><span class=\"k\">${</span><span class=\"nv\">XcodeWorkspacePath</span><span class=\"k\">}</span>\n<span class=\"k\">fi</span>\n\n<span class=\"c\">#cd到xcode构建索引目录</span>\n<span class=\"nb\">cd</span>  <span class=\"nv\">$XcodeDerivedDataPath</span>\n\n<span class=\"c\">#删除当前目录所有构件索引</span>\n<span class=\"nb\">rm</span> <span class=\"nt\">-rf</span> <span class=\"k\">*</span>\n\n<span class=\"c\">#重启xcode</span>\nkillall Xcode\n\n<span class=\"c\">#休眠一下，否则额可能直接打开会报错</span>\n<span class=\"nb\">sleep </span>0.1\n\n<span class=\"c\">#打开工程</span>\nopen <span class=\"nv\">$XcodeWorkspacePath</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h3 id=\"12--duplicate-interface-definition-for-class\">1.2  duplicate interface definition for class</h3>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>duplicate interface definition for class XXX\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>排除了报错明面上的重复定义的可能性之后，后来查资料发现是import 问题，删除掉原先的import “xxx.h”，改成 import &lt;PSCXXModule/xxx.h&gt;</p>\n\n<h2 id=\"二运行时错误\">二、运行时错误</h2>\n\n<h3 id=\"21-voidload方法交换导致死循环\">2.1 +(void)load方法交换导致死循环</h3>\n\n<h4 id=\"211-问题说明\">2.1.1 问题说明：</h4>\n\n<p>在实施组件化过程之中，一个UIControl的Category与UIButton的Category，由于后者的耦合度较大，将前者先拆进组件库，编译没有问题，运行没有问题，只有在UIButton点击事件时造成了死循环。</p>\n\n<h4 id=\"212-问题分析\">2.1.2 问题分析：</h4>\n\n<p>通过Craash堆栈看出是以下这个方法递归调用造成死循环</p>\n\n<pre><code class=\"language-objective-c\">- (void)mySendAction:(SEL)action to:(id)target forEvent:(UIEvent *)event\n</code></pre>\n\n<p>详细排查代码，看到UIControl的Category与UIButton的Category写了一模一样的 load方法交换：</p>\n\n<div class=\"language-objc highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n</pre></td><td class=\"rouge-code\"><pre><span class=\"k\">+</span> <span class=\"p\">(</span><span class=\"kt\">void</span><span class=\"p\">)</span><span class=\"n\">load</span><span class=\"p\">{</span>\n    <span class=\"k\">static</span> <span class=\"n\">dispatch_once_t</span> <span class=\"n\">onceToken</span><span class=\"p\">;</span>\n    <span class=\"n\">dispatch_once</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">onceToken</span><span class=\"p\">,</span> <span class=\"o\">^</span><span class=\"p\">{</span>\n        <span class=\"n\">SEL</span> <span class=\"n\">selA</span> <span class=\"o\">=</span> <span class=\"k\">@selector</span><span class=\"p\">(</span><span class=\"n\">sendAction</span><span class=\"o\">:</span><span class=\"n\">to</span><span class=\"o\">:</span><span class=\"n\">forEvent</span><span class=\"o\">:</span><span class=\"p\">);</span>\n        <span class=\"n\">SEL</span> <span class=\"n\">selB</span> <span class=\"o\">=</span> <span class=\"k\">@selector</span><span class=\"p\">(</span><span class=\"n\">mySendAction</span><span class=\"o\">:</span><span class=\"n\">to</span><span class=\"o\">:</span><span class=\"n\">forEvent</span><span class=\"o\">:</span><span class=\"p\">);</span>\n        <span class=\"n\">Method</span> <span class=\"n\">methodA</span> <span class=\"o\">=</span>   <span class=\"n\">class_getInstanceMethod</span><span class=\"p\">(</span><span class=\"n\">self</span><span class=\"p\">,</span><span class=\"n\">selA</span><span class=\"p\">);</span>\n        <span class=\"n\">Method</span> <span class=\"n\">methodB</span> <span class=\"o\">=</span> <span class=\"n\">class_getInstanceMethod</span><span class=\"p\">(</span><span class=\"n\">self</span><span class=\"p\">,</span> <span class=\"n\">selB</span><span class=\"p\">);</span>\n        <span class=\"c1\">//将 methodB的实现 添加到系统方法中 也就是说 将 methodA方法指针添加成 方法methodB的  返回值表示是否添加成功</span>\n        <span class=\"n\">BOOL</span> <span class=\"n\">isAdd</span> <span class=\"o\">=</span> <span class=\"n\">class_addMethod</span><span class=\"p\">(</span><span class=\"n\">self</span><span class=\"p\">,</span> <span class=\"n\">selA</span><span class=\"p\">,</span> <span class=\"n\">method_getImplementation</span><span class=\"p\">(</span><span class=\"n\">methodB</span><span class=\"p\">),</span> <span class=\"n\">method_getTypeEncoding</span><span class=\"p\">(</span><span class=\"n\">methodB</span><span class=\"p\">));</span>\n        <span class=\"c1\">//添加成功了 说明 本类中不存在methodB 所以此时必须将方法b的实现指针换成方法A的，否则 b方法将没有实现。</span>\n        <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">isAdd</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n            <span class=\"n\">class_replaceMethod</span><span class=\"p\">(</span><span class=\"n\">self</span><span class=\"p\">,</span> <span class=\"n\">selB</span><span class=\"p\">,</span> <span class=\"n\">method_getImplementation</span><span class=\"p\">(</span><span class=\"n\">methodA</span><span class=\"p\">),</span> <span class=\"n\">method_getTypeEncoding</span><span class=\"p\">(</span><span class=\"n\">methodA</span><span class=\"p\">));</span>\n        <span class=\"p\">}</span><span class=\"k\">else</span><span class=\"p\">{</span>\n            <span class=\"c1\">//添加失败了 说明本类中 有methodB的实现，此时只需要将 methodA和methodB的IMP互换一下即可。</span>\n            <span class=\"n\">method_exchangeImplementations</span><span class=\"p\">(</span><span class=\"n\">methodA</span><span class=\"p\">,</span> <span class=\"n\">methodB</span><span class=\"p\">);</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">});</span>\n<span class=\"p\">}</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>(姑且先不吐槽cv大法)</p>\n\n<p><strong>为何在组件化之前不会死循环，在组件化之后造成了死循环？</strong></p>\n\n<h4 id=\"213-问题定位\">2.1.3 问题定位：</h4>\n\n<p>通过控制变量法可以初步判断：<strong>由于Pod集成方式改变造成的crash</strong></p>\n\n<p>load方法，是类加载时的调用，怀疑是加载时序发生了变化，导致crash暴露出来</p>\n\n<p>随即展开类加载实验：主工程及Pod的类加载探索：</p>\n\n<p>存在Pod库的类加载：</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n</pre></td><td class=\"rouge-code\"><pre>2023-06-28 09:19:26.104245+0800 TestUI[2809:1230318] [+ (void)load]:[Pod] UIControl (ClickTimeSpace) load\n2023-06-28 09:19:26.108615+0800 TestUI[2809:1230318] [+ (void)load]:[Pod] UIImage (Bundle) load\n2023-06-28 09:19:26.108626+0800 TestUI[2809:1230318] [+ (void)load]:[Pod] UIImage (Custom) load\n2023-06-28 09:19:26.108637+0800 TestUI[2809:1230318] [+ (void)load]:[Pod] UIImageView (YPCCreateQRCode) load\n2023-06-28 09:19:26.108647+0800 TestUI[2809:1230318] [+ (void)load]:[Pod] UILabel (YPCSpaceLabel) load\n2023-06-28 09:19:26.108670+0800 TestUI[2809:1230318] [+ (void)load]:[Pod] UIResponder (KTRouter) load\n2023-06-28 09:19:26.110711+0800 TestUI[2809:1230318] [+ (void)load]:[Project]NSObject (Sb) load\n2023-06-28 09:19:26.110743+0800 TestUI[2809:1230318] [+ (void)load]:[Project]UITextField (Sub) load\n2023-06-28 09:19:26.110777+0800 TestUI[2809:1230318] [+ (void)load]:[Project]UIResponder (Super) load\n2023-06-28 09:19:26.110787+0800 TestUI[2809:1230318] [+ (void)load]:[Project]UIControl (Test) load\n2023-06-28 09:19:26.114212+0800 TestUI[2809:1230318] [+ (void)load]:[Project]UIView (Base) load\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>只有主工程的类加载：</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n</pre></td><td class=\"rouge-code\"><pre>2023-06-28 09:25:27.432494+0800 TestUI[2821:1235269] [+ (void)load]:[Project]UIImageView (SubImgV) load\n2023-06-28 09:25:27.432528+0800 TestUI[2821:1235269] [+ (void)load]:[Project]NSObject (Sb) load\n2023-06-28 09:25:27.432559+0800 TestUI[2821:1235269] [+ (void)load]:[Project]UITextField (Sub) load\n2023-06-28 09:25:27.432570+0800 TestUI[2821:1235269] [+ (void)load]:[Project]UITextView (SubTv) load\n2023-06-28 09:25:27.432580+0800 TestUI[2821:1235269] [+ (void)load]:[Project]UIButton (Test) load\n2023-06-28 09:25:27.432592+0800 TestUI[2821:1235269] [+ (void)load]:[Project]UIResponder (Super) load\n2023-06-28 09:25:27.432602+0800 TestUI[2821:1235269] [+ (void)load]:[Project]UIControl (Test) load\n2023-06-28 09:25:27.435639+0800 TestUI[2821:1235269] [+ (void)load]:[Project]UIView (Base) load\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>通过上述日志打印得出：<strong>Pod库里的类加载先于主工程</strong></p>\n\n<p>因此结论：在主工程时，先加载了UIButton的load方法，而UIButton无此方法：</p>\n\n<div class=\"language-objc highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c1\">//在UIControl存在此方法,而UIButton无此方法：</span>\n<span class=\"k\">-</span> <span class=\"p\">(</span><span class=\"kt\">void</span><span class=\"p\">)</span><span class=\"nf\">sendAction</span><span class=\"p\">:(</span><span class=\"n\">SEL</span><span class=\"p\">)</span><span class=\"nv\">action</span> <span class=\"nf\">to</span><span class=\"p\">:(</span><span class=\"n\">nullable</span> <span class=\"n\">id</span><span class=\"p\">)</span><span class=\"nv\">target</span> <span class=\"nf\">forEvent</span><span class=\"p\">:(</span><span class=\"n\">nullable</span> <span class=\"n\">UIEvent</span> <span class=\"o\">*</span><span class=\"p\">)</span><span class=\"nv\">event</span><span class=\"p\">;</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>在先交换UIButton中的sendAction之后，再交换UIControl中的sendAction，sendAction方法能被正常交换</p>\n\n<p>反之：在Pod工程中，先交换了UIControl中的sendAction之后，再交换UIButton中的sendAction，执行两次相同交换等于恢复了没有交换，当方法调用时：</p>\n\n<div class=\"language-objc highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c1\">//当我们按钮点击事件 sendAction 时  将会执行  mySendAction</span>\n<span class=\"k\">-</span> <span class=\"p\">(</span><span class=\"kt\">void</span><span class=\"p\">)</span><span class=\"nf\">mySendAction</span><span class=\"p\">:(</span><span class=\"n\">SEL</span><span class=\"p\">)</span><span class=\"nv\">action</span> <span class=\"nf\">to</span><span class=\"p\">:(</span><span class=\"n\">id</span><span class=\"p\">)</span><span class=\"nv\">target</span> <span class=\"nf\">forEvent</span><span class=\"p\">:(</span><span class=\"n\">UIEvent</span> <span class=\"o\">*</span><span class=\"p\">)</span><span class=\"nv\">event</span>\n<span class=\"p\">{</span>\n  \t<span class=\"c1\">//xxx</span>\n    <span class=\"c1\">//此处 methodA和methodB方法IMP互换了，实际上执行 sendAction；所以不会死循环</span>\n    <span class=\"p\">[</span><span class=\"n\">self</span> <span class=\"nf\">mySendAction</span><span class=\"p\">:</span><span class=\"n\">action</span> <span class=\"nf\">to</span><span class=\"p\">:</span><span class=\"n\">target</span> <span class=\"n\">forEvent</span><span class=\"o\">:</span><span class=\"n\">event</span><span class=\"p\">];</span>\n<span class=\"p\">}</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>无法回到sendAction，造成了死循环详细排查代码，看到UIControl的Category与UIButton的Category写了一模一样的 load方法交换：</p>\n\n","name":"2023-08-02-iOS-组件化实践之-遇到的问题及解决过程纪要-持续更新中.md","previous":{"id":"/2023/07/31/6-iOS-组件化-命名注释篇","tags":[],"relative_path":"_posts/2023-07-31-6-iOS-组件化-命名注释篇.md","collection":"posts","name":"2023-07-31-6-iOS-组件化-命名注释篇.md","url":"/2023/07/31/6-iOS-%E7%BB%84%E4%BB%B6%E5%8C%96-%E5%91%BD%E5%90%8D%E6%B3%A8%E9%87%8A%E7%AF%87/","title":"iOS组件化实践之：类命名注释篇","date":"2023-07-31 00:00:00 +0800","categories":[],"path":"_posts/2023-07-31-6-iOS-组件化-命名注释篇.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/home-bg-geek.jpg","slug":"6-iOS-组件化-命名注释篇","ext":".md"},"output":"<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"google-site-verification\" content=\"xBT4GhYoi5qRD5tr338pgPM5OWHHIDR6mNg1a3euekI\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, viewport-fit=cover\">\n    <meta name=\"description\" content=\"与你一起发现更大的世界。\">\n    <meta name=\"keywords\"  content=\"PaysonChen,iOS,流媒体\">\n    <meta name=\"theme-color\" content=\"#000000\">\n    \n    <!-- Open Graph -->\n    <meta property=\"og:title\" content=\"iOS组件化实践之：遇到的问题及解决过程纪要(持续更新中) - PaysonChen的博客 | PaysonChen Blog\">\n    \n    <meta property=\"og:type\" content=\"article\">\n    <meta property=\"og:description\" content=\"iOS组件化实践之：遇到的问题及解决过程纪要(持续更新中)\n\">\n    \n    \n    <meta property=\"article:published_time\" content=\"2023-08-02T00:00:00Z\">\n    \n    \n    <meta property=\"article:author\" content=\"PaysonChen\">\n    \n    \n    \n    <meta property=\"og:image\" content=\"http://localhost:4000\">\n    <meta property=\"og:url\" content=\"http://localhost:4000/2023/08/02/iOS-%E7%BB%84%E4%BB%B6%E5%8C%96%E5%AE%9E%E8%B7%B5%E4%B9%8B-%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98%E5%8F%8A%E8%A7%A3%E5%86%B3%E8%BF%87%E7%A8%8B%E7%BA%AA%E8%A6%81-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0%E4%B8%AD/\">\n    <meta property=\"og:site_name\" content=\"PaysonChen的博客 | PaysonChen Blog\">\n    \n    <title>iOS组件化实践之：遇到的问题及解决过程纪要(持续更新中) - PaysonChen的博客 | PaysonChen Blog</title>\n\n    <!-- Web App Manifest -->\n    <link rel=\"manifest\" href=\"/pwa/manifest.json\">\n\n    <!-- Favicon -->\n    <link rel=\"shortcut icon\" href=\"/img/favicon.ico\">\n    \n    <!-- Canonical URL -->\n    <link rel=\"canonical\" href=\"http://localhost:4000/2023/08/02/iOS-%E7%BB%84%E4%BB%B6%E5%8C%96%E5%AE%9E%E8%B7%B5%E4%B9%8B-%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98%E5%8F%8A%E8%A7%A3%E5%86%B3%E8%BF%87%E7%A8%8B%E7%BA%AA%E8%A6%81-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0%E4%B8%AD/\">\n\n    <!-- Bootstrap Core CSS -->\n    <link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\">\n\n    <!-- Custom CSS -->\n    <link rel=\"stylesheet\" href=\"/css/hux-blog.min.css\">\n\n    <!-- Custom Fonts -->\n    <!-- <link href=\"http://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\"> -->\n    <!-- Hux change font-awesome CDN to qiniu -->\n    <link href=\"//cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\">\n\n\n    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->\n    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->\n    <!--[if lt IE 9]>\n        <script src=\"https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js\"></script>\n        <script src=\"https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js\"></script>\n    <![endif]-->\n\n    <!-- ga & ba script hoook -->\n    <script></script>\n</head>\n\n\n<!-- hack iOS CSS :active style -->\n<body ontouchstart=\"\">\n\n    <!-- Navigation -->\n\n    <nav class=\"navbar navbar-default navbar-custom navbar-fixed-top\">\n        \n        <div class=\"container-fluid\">\n            <!-- Brand and toggle get grouped for better mobile display -->\n            <div class=\"navbar-header page-scroll\">\n                <button type=\"button\" class=\"navbar-toggle\">\n                    <span class=\"sr-only\">Toggle navigation</span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                </button>\n                <a class=\"navbar-brand\" href=\"/\">PaysonChen Blog</a>\n            </div>\n\n            <!-- Collect the nav links, forms, and other content for toggling -->\n            <div id=\"huxblog_navbar\">\n                <div class=\"navbar-collapse\">\n                    <ul class=\"nav navbar-nav navbar-right\">\n                        <li>\n                            <a href=\"/\">Home</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        <li>\n                            <a href=\"/about/\">About</a>\n                        </li>\n                        \n                        \n                        \n                        <li>\n                            <a href=\"/archive/\">Archive</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        <li class=\"search-icon\">\n                            <a href=\"javascript:void(0)\">\n                                <i class=\"fa fa-search\"></i>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n            <!-- /.navbar-collapse -->\n        </div>\n        <!-- /.container -->\n    </nav>\n\n    <script>\n        // Drop Bootstarp low-performance Navbar\n        // Use customize navbar with high-quality material design animation\n        // in high-perf jank-free CSS3 implementation\n        var $body = document.body;\n        var $toggle = document.querySelector('.navbar-toggle');\n        var $navbar = document.querySelector('#huxblog_navbar');\n        var $collapse = document.querySelector('.navbar-collapse');\n\n        var __HuxNav__ = {\n            close: function () {\n                $navbar.className = \" \";\n                // wait until animation end.\n                setTimeout(function () {\n                    // prevent frequently toggle\n                    if ($navbar.className.indexOf('in') < 0) {\n                        $collapse.style.height = \"0px\"\n                    }\n                }, 400)\n            },\n            open: function () {\n                $collapse.style.height = \"auto\"\n                $navbar.className += \" in\";\n            }\n        }\n\n        // Bind Event\n        $toggle.addEventListener('click', function (e) {\n            if ($navbar.className.indexOf('in') > 0) {\n                __HuxNav__.close()\n            } else {\n                __HuxNav__.open()\n            }\n        })\n\n        /**\n         * Since Fastclick is used to delegate 'touchstart' globally\n         * to hack 300ms delay in iOS by performing a fake 'click',\n         * Using 'e.stopPropagation' to stop 'touchstart' event from \n         * $toggle/$collapse will break global delegation.\n         * \n         * Instead, we use a 'e.target' filter to prevent handler\n         * added to document close HuxNav.  \n         *\n         * Also, we use 'click' instead of 'touchstart' as compromise\n         */\n        document.addEventListener('click', function (e) {\n            if (e.target == $toggle) return;\n            if (e.target.className == 'icon-bar') return;\n            __HuxNav__.close();\n        })\n    </script>\n    <!-- Search -->\n<div class=\"search-page\">\n  <div class=\"search-icon-close-container\">\n    <span class=\"search-icon-close\">\n      <i class=\"fa fa-chevron-down\"></i>\n    </span>\n  </div>\n  <div class=\"search-main container\">\n    <div class=\"row\">\n      <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n        <form></form>\n        <input type=\"text\" id=\"search-input\" placeholder=\"$ grep...\">\n        </form>\n        <div id=\"search-results\" class=\"mini-post-list\"></div>\n      </div>\n    </div>\n  </div>\n</div>\n\n    <!-- Image to hack wechat -->\n<!-- <img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\"> -->\n<!-- <img src=\"/img/home-bg-geek.jpg\" width=\"0\" height=\"0\"> -->\n\n<!-- Post Header -->\n\n\n\n<style type=\"text/css\">\n    header.intro-header{\n        position: relative;\n        background-image: url('/img/home-bg-geek.jpg');\n        background: ;\n    }\n\n    \n</style>\n\n<header class=\"intro-header\" >\n\n    <div class=\"header-mask\"></div>\n    \n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <div class=\"post-heading\">\n                    <div class=\"tags\">\n                        \n                    </div>\n                    <h1>iOS组件化实践之：遇到的问题及解决过程纪要(持续更新中)</h1>\n                    \n                    <h2 class=\"subheading\"></h2>\n                    <span class=\"meta\">Posted by PaysonChen on August 2, 2023</span>\n                </div>\n            </div>\n        </div>\n    </div>\n</header>\n\n\n\n\n\n\n<!-- Post Content -->\n<article>\n    <div class=\"container\">\n        <div class=\"row\">\n\n    <!-- Post Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                post-container\">\n\n                <!-- Multi-Lingual -->\n                \n\n\t\t\t\t<h1 id=\"ios组件化实践之遇到的问题及解决过程纪要持续更新中\">iOS组件化实践之：遇到的问题及解决过程纪要(持续更新中)</h1>\n\n<h2 id=\"一编译错误\">一、编译错误</h2>\n\n<h3 id=\"11-msghandlingerror\">1.1 MsgHandlingError</h3>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n</pre></td><td class=\"rouge-code\"><pre>Build service could not create build operation: unknown error <span class=\"k\">while </span>handling message: MsgHandlingError<span class=\"o\">(</span>message: <span class=\"s2\">\"unable to initiate PIF transfer session (operation in progress?)\"</span><span class=\"o\">)</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>经Google之后，解决方案是要清楚编译构建索引，由于还是比较频繁出现，于是写了个脚本：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#!/bin/bash</span>\n\n<span class=\"c\"># [背景]</span>\n<span class=\"c\"># 组件化过程中，经常出现以下编译错误：</span>\n<span class=\"c\"># Build service could not create build operation: unknown error while handling message: MsgHandlingError(message: \"unable to initiate PIF transfer session (operation in progress?)\")</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># author: Chenyp34</span>\n<span class=\"c\"># [目的]</span>\n<span class=\"c\"># 为解决上述错误，需要清理构建索引目录并重启xcode，由于操作重复，考虑抽出shell脚本</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [目录]</span>\n<span class=\"c\">#   - auto_clean.sh</span>\n<span class=\"c\"># [说明]</span>\n<span class=\"c\"># 1、CD[指定xcode构建索引目录]目录</span>\n<span class=\"c\"># 2、递归删除当前文件下所有文件</span>\n<span class=\"c\"># 3、重启xcode</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [参数]</span>\n<span class=\"c\"># 1、参数1，指定xcode构建索引目录</span>\n<span class=\"c\"># 1、参数2，指定要打开的Xcode项目目</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [调用说明]</span>\n<span class=\"c\"># 1、未指定目录，则取当前目录：sh auto_clean.sh</span>\n<span class=\"c\"># 2、指定目录：sh auto_clean.sh /xcode构建索引目录/ /要打开的Xcode项目目录/</span>\n\n\n<span class=\"nb\">export </span><span class=\"nv\">XcodeDerivedDataPath</span><span class=\"o\">=</span>/Users/YourMacName/Library/Developer/Xcode/DerivedData\n<span class=\"nb\">export </span><span class=\"nv\">XcodeWorkspacePath</span><span class=\"o\">=</span>/Users/YourMacName/Documents/PCS/git/Project/xxx.xcworkspace\n\n<span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$1</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n    </span><span class=\"nb\">echo</span> <span class=\"s1\">'///入参1为空，使用默认xcode构建索引目录:'</span><span class=\"k\">${</span><span class=\"nv\">XcodeDerivedDataPath</span><span class=\"k\">}</span>\n<span class=\"k\">else\n    </span><span class=\"nv\">XcodeDerivedDataPath</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'///入参1不为空，xcode构建索引目录:'</span><span class=\"k\">${</span><span class=\"nv\">XcodeDerivedDataPath</span><span class=\"k\">}</span>\n<span class=\"k\">fi\n\nif</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$2</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n    </span><span class=\"nb\">echo</span> <span class=\"s1\">'///入参2为空，使用默认xcode项目目录:'</span><span class=\"k\">${</span><span class=\"nv\">XcodeWorkspacePath</span><span class=\"k\">}</span>\n<span class=\"k\">else\n    </span><span class=\"nv\">XcodeWorkspacePath</span><span class=\"o\">=</span><span class=\"nv\">$2</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'///入参2不为空，xcode项目目录:'</span><span class=\"k\">${</span><span class=\"nv\">XcodeWorkspacePath</span><span class=\"k\">}</span>\n<span class=\"k\">fi</span>\n\n<span class=\"c\">#cd到xcode构建索引目录</span>\n<span class=\"nb\">cd</span>  <span class=\"nv\">$XcodeDerivedDataPath</span>\n\n<span class=\"c\">#删除当前目录所有构件索引</span>\n<span class=\"nb\">rm</span> <span class=\"nt\">-rf</span> <span class=\"k\">*</span>\n\n<span class=\"c\">#重启xcode</span>\nkillall Xcode\n\n<span class=\"c\">#休眠一下，否则额可能直接打开会报错</span>\n<span class=\"nb\">sleep </span>0.1\n\n<span class=\"c\">#打开工程</span>\nopen <span class=\"nv\">$XcodeWorkspacePath</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h3 id=\"12--duplicate-interface-definition-for-class\">1.2  duplicate interface definition for class</h3>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>duplicate interface definition for class XXX\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>排除了报错明面上的重复定义的可能性之后，后来查资料发现是import 问题，删除掉原先的import “xxx.h”，改成 import &lt;PSCXXModule/xxx.h&gt;</p>\n\n<h2 id=\"二运行时错误\">二、运行时错误</h2>\n\n<h3 id=\"21-voidload方法交换导致死循环\">2.1 +(void)load方法交换导致死循环</h3>\n\n<h4 id=\"211-问题说明\">2.1.1 问题说明：</h4>\n\n<p>在实施组件化过程之中，一个UIControl的Category与UIButton的Category，由于后者的耦合度较大，将前者先拆进组件库，编译没有问题，运行没有问题，只有在UIButton点击事件时造成了死循环。</p>\n\n<h4 id=\"212-问题分析\">2.1.2 问题分析：</h4>\n\n<p>通过Craash堆栈看出是以下这个方法递归调用造成死循环</p>\n\n<pre><code class=\"language-objective-c\">- (void)mySendAction:(SEL)action to:(id)target forEvent:(UIEvent *)event\n</code></pre>\n\n<p>详细排查代码，看到UIControl的Category与UIButton的Category写了一模一样的 load方法交换：</p>\n\n<div class=\"language-objc highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n</pre></td><td class=\"rouge-code\"><pre><span class=\"k\">+</span> <span class=\"p\">(</span><span class=\"kt\">void</span><span class=\"p\">)</span><span class=\"n\">load</span><span class=\"p\">{</span>\n    <span class=\"k\">static</span> <span class=\"n\">dispatch_once_t</span> <span class=\"n\">onceToken</span><span class=\"p\">;</span>\n    <span class=\"n\">dispatch_once</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">onceToken</span><span class=\"p\">,</span> <span class=\"o\">^</span><span class=\"p\">{</span>\n        <span class=\"n\">SEL</span> <span class=\"n\">selA</span> <span class=\"o\">=</span> <span class=\"k\">@selector</span><span class=\"p\">(</span><span class=\"n\">sendAction</span><span class=\"o\">:</span><span class=\"n\">to</span><span class=\"o\">:</span><span class=\"n\">forEvent</span><span class=\"o\">:</span><span class=\"p\">);</span>\n        <span class=\"n\">SEL</span> <span class=\"n\">selB</span> <span class=\"o\">=</span> <span class=\"k\">@selector</span><span class=\"p\">(</span><span class=\"n\">mySendAction</span><span class=\"o\">:</span><span class=\"n\">to</span><span class=\"o\">:</span><span class=\"n\">forEvent</span><span class=\"o\">:</span><span class=\"p\">);</span>\n        <span class=\"n\">Method</span> <span class=\"n\">methodA</span> <span class=\"o\">=</span>   <span class=\"n\">class_getInstanceMethod</span><span class=\"p\">(</span><span class=\"n\">self</span><span class=\"p\">,</span><span class=\"n\">selA</span><span class=\"p\">);</span>\n        <span class=\"n\">Method</span> <span class=\"n\">methodB</span> <span class=\"o\">=</span> <span class=\"n\">class_getInstanceMethod</span><span class=\"p\">(</span><span class=\"n\">self</span><span class=\"p\">,</span> <span class=\"n\">selB</span><span class=\"p\">);</span>\n        <span class=\"c1\">//将 methodB的实现 添加到系统方法中 也就是说 将 methodA方法指针添加成 方法methodB的  返回值表示是否添加成功</span>\n        <span class=\"n\">BOOL</span> <span class=\"n\">isAdd</span> <span class=\"o\">=</span> <span class=\"n\">class_addMethod</span><span class=\"p\">(</span><span class=\"n\">self</span><span class=\"p\">,</span> <span class=\"n\">selA</span><span class=\"p\">,</span> <span class=\"n\">method_getImplementation</span><span class=\"p\">(</span><span class=\"n\">methodB</span><span class=\"p\">),</span> <span class=\"n\">method_getTypeEncoding</span><span class=\"p\">(</span><span class=\"n\">methodB</span><span class=\"p\">));</span>\n        <span class=\"c1\">//添加成功了 说明 本类中不存在methodB 所以此时必须将方法b的实现指针换成方法A的，否则 b方法将没有实现。</span>\n        <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">isAdd</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n            <span class=\"n\">class_replaceMethod</span><span class=\"p\">(</span><span class=\"n\">self</span><span class=\"p\">,</span> <span class=\"n\">selB</span><span class=\"p\">,</span> <span class=\"n\">method_getImplementation</span><span class=\"p\">(</span><span class=\"n\">methodA</span><span class=\"p\">),</span> <span class=\"n\">method_getTypeEncoding</span><span class=\"p\">(</span><span class=\"n\">methodA</span><span class=\"p\">));</span>\n        <span class=\"p\">}</span><span class=\"k\">else</span><span class=\"p\">{</span>\n            <span class=\"c1\">//添加失败了 说明本类中 有methodB的实现，此时只需要将 methodA和methodB的IMP互换一下即可。</span>\n            <span class=\"n\">method_exchangeImplementations</span><span class=\"p\">(</span><span class=\"n\">methodA</span><span class=\"p\">,</span> <span class=\"n\">methodB</span><span class=\"p\">);</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">});</span>\n<span class=\"p\">}</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>(姑且先不吐槽cv大法)</p>\n\n<p><strong>为何在组件化之前不会死循环，在组件化之后造成了死循环？</strong></p>\n\n<h4 id=\"213-问题定位\">2.1.3 问题定位：</h4>\n\n<p>通过控制变量法可以初步判断：<strong>由于Pod集成方式改变造成的crash</strong></p>\n\n<p>load方法，是类加载时的调用，怀疑是加载时序发生了变化，导致crash暴露出来</p>\n\n<p>随即展开类加载实验：主工程及Pod的类加载探索：</p>\n\n<p>存在Pod库的类加载：</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n</pre></td><td class=\"rouge-code\"><pre>2023-06-28 09:19:26.104245+0800 TestUI[2809:1230318] [+ (void)load]:[Pod] UIControl (ClickTimeSpace) load\n2023-06-28 09:19:26.108615+0800 TestUI[2809:1230318] [+ (void)load]:[Pod] UIImage (Bundle) load\n2023-06-28 09:19:26.108626+0800 TestUI[2809:1230318] [+ (void)load]:[Pod] UIImage (Custom) load\n2023-06-28 09:19:26.108637+0800 TestUI[2809:1230318] [+ (void)load]:[Pod] UIImageView (YPCCreateQRCode) load\n2023-06-28 09:19:26.108647+0800 TestUI[2809:1230318] [+ (void)load]:[Pod] UILabel (YPCSpaceLabel) load\n2023-06-28 09:19:26.108670+0800 TestUI[2809:1230318] [+ (void)load]:[Pod] UIResponder (KTRouter) load\n2023-06-28 09:19:26.110711+0800 TestUI[2809:1230318] [+ (void)load]:[Project]NSObject (Sb) load\n2023-06-28 09:19:26.110743+0800 TestUI[2809:1230318] [+ (void)load]:[Project]UITextField (Sub) load\n2023-06-28 09:19:26.110777+0800 TestUI[2809:1230318] [+ (void)load]:[Project]UIResponder (Super) load\n2023-06-28 09:19:26.110787+0800 TestUI[2809:1230318] [+ (void)load]:[Project]UIControl (Test) load\n2023-06-28 09:19:26.114212+0800 TestUI[2809:1230318] [+ (void)load]:[Project]UIView (Base) load\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>只有主工程的类加载：</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n</pre></td><td class=\"rouge-code\"><pre>2023-06-28 09:25:27.432494+0800 TestUI[2821:1235269] [+ (void)load]:[Project]UIImageView (SubImgV) load\n2023-06-28 09:25:27.432528+0800 TestUI[2821:1235269] [+ (void)load]:[Project]NSObject (Sb) load\n2023-06-28 09:25:27.432559+0800 TestUI[2821:1235269] [+ (void)load]:[Project]UITextField (Sub) load\n2023-06-28 09:25:27.432570+0800 TestUI[2821:1235269] [+ (void)load]:[Project]UITextView (SubTv) load\n2023-06-28 09:25:27.432580+0800 TestUI[2821:1235269] [+ (void)load]:[Project]UIButton (Test) load\n2023-06-28 09:25:27.432592+0800 TestUI[2821:1235269] [+ (void)load]:[Project]UIResponder (Super) load\n2023-06-28 09:25:27.432602+0800 TestUI[2821:1235269] [+ (void)load]:[Project]UIControl (Test) load\n2023-06-28 09:25:27.435639+0800 TestUI[2821:1235269] [+ (void)load]:[Project]UIView (Base) load\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>通过上述日志打印得出：<strong>Pod库里的类加载先于主工程</strong></p>\n\n<p>因此结论：在主工程时，先加载了UIButton的load方法，而UIButton无此方法：</p>\n\n<div class=\"language-objc highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c1\">//在UIControl存在此方法,而UIButton无此方法：</span>\n<span class=\"k\">-</span> <span class=\"p\">(</span><span class=\"kt\">void</span><span class=\"p\">)</span><span class=\"nf\">sendAction</span><span class=\"p\">:(</span><span class=\"n\">SEL</span><span class=\"p\">)</span><span class=\"nv\">action</span> <span class=\"nf\">to</span><span class=\"p\">:(</span><span class=\"n\">nullable</span> <span class=\"n\">id</span><span class=\"p\">)</span><span class=\"nv\">target</span> <span class=\"nf\">forEvent</span><span class=\"p\">:(</span><span class=\"n\">nullable</span> <span class=\"n\">UIEvent</span> <span class=\"o\">*</span><span class=\"p\">)</span><span class=\"nv\">event</span><span class=\"p\">;</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>在先交换UIButton中的sendAction之后，再交换UIControl中的sendAction，sendAction方法能被正常交换</p>\n\n<p>反之：在Pod工程中，先交换了UIControl中的sendAction之后，再交换UIButton中的sendAction，执行两次相同交换等于恢复了没有交换，当方法调用时：</p>\n\n<div class=\"language-objc highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c1\">//当我们按钮点击事件 sendAction 时  将会执行  mySendAction</span>\n<span class=\"k\">-</span> <span class=\"p\">(</span><span class=\"kt\">void</span><span class=\"p\">)</span><span class=\"nf\">mySendAction</span><span class=\"p\">:(</span><span class=\"n\">SEL</span><span class=\"p\">)</span><span class=\"nv\">action</span> <span class=\"nf\">to</span><span class=\"p\">:(</span><span class=\"n\">id</span><span class=\"p\">)</span><span class=\"nv\">target</span> <span class=\"nf\">forEvent</span><span class=\"p\">:(</span><span class=\"n\">UIEvent</span> <span class=\"o\">*</span><span class=\"p\">)</span><span class=\"nv\">event</span>\n<span class=\"p\">{</span>\n  \t<span class=\"c1\">//xxx</span>\n    <span class=\"c1\">//此处 methodA和methodB方法IMP互换了，实际上执行 sendAction；所以不会死循环</span>\n    <span class=\"p\">[</span><span class=\"n\">self</span> <span class=\"nf\">mySendAction</span><span class=\"p\">:</span><span class=\"n\">action</span> <span class=\"nf\">to</span><span class=\"p\">:</span><span class=\"n\">target</span> <span class=\"n\">forEvent</span><span class=\"o\">:</span><span class=\"n\">event</span><span class=\"p\">];</span>\n<span class=\"p\">}</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>无法回到sendAction，造成了死循环详细排查代码，看到UIControl的Category与UIButton的Category写了一模一样的 load方法交换：</p>\n\n\n\n                <hr style=\"visibility: hidden;\">\n                <ul class=\"pager\">\n                    \n                    <li class=\"previous\">\n                        <a href=\"/2023/07/31/6-iOS-%E7%BB%84%E4%BB%B6%E5%8C%96-%E5%91%BD%E5%90%8D%E6%B3%A8%E9%87%8A%E7%AF%87/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"iOS组件化实践之：类命名注释篇\">\n                        Previous<br>\n                        <span>iOS组件化实践之：类命名注释篇</span>\n                        </a>\n                    </li>\n                    \n                    \n                    <li class=\"next\">\n                        <a href=\"/2023/08/03/iOS-%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%9C%A8%E5%86%85%E7%BD%91%E8%81%94%E8%B0%83%E6%97%B6%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"iOS客户端在内网联调时的解决方案\">\n                        Next<br>\n                        <span>iOS客户端在内网联调时的解决方案</span>\n                        </a>\n                    </li>\n                    \n                </ul>\n                <hr style=\"visibility: hidden;\">\n\n                \n                <!-- disqus 评论框 start -->\n                <div class=\"comment\">\n                    <div id=\"disqus_thread\" class=\"disqus-thread\"></div>\n                </div>\n                <!-- disqus 评论框 end -->\n                \n\n                \n            </div>  \n\n    <!-- Side Catalog Container -->\n        \n            <div class=\"\n                col-lg-2 col-lg-offset-0\n                visible-lg-block\n                sidebar-container\n                catalog-container\">\n                <div class=\"side-catalog\">\n                    <hr class=\"hidden-sm hidden-xs\">\n                    <h5>\n                        <a class=\"catalog-toggle\" href=\"#\">CATALOG</a>\n                    </h5>\n                    <ul class=\"catalog-body\"></ul>\n                </div>\n            </div>\n        \n\n    <!-- Sidebar Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                sidebar-container\">\n\n                <!-- Featured Tags -->\n                \n\n\n<section>\n    \n        <hr class=\"hidden-sm hidden-xs\">\n    \n    <h5><a href=\"/archive/\">FEATURED TAGS</a></h5>\n    <div class=\"tags\">\n        \n        \n        \n        \n        \n    </div>\n</section>\n\n\n                <!-- Friends Blog -->\n                \n            </div>\n        </div>\n    </div>\n</article>\n\n<!-- add support for mathjax by voleking-->\n\n\n\n\n\n\n<!-- disqus 公共JS代码 start (一个网页只需插入一次) -->\n<script type=\"text/javascript\">\n    /* * * CONFIGURATION VARIABLES * * */\n    var disqus_shortname = \"Cyp\";\n    var disqus_identifier = \"/2023/08/02/iOS-组件化实践之-遇到的问题及解决过程纪要-持续更新中\";\n    var disqus_url = \"http://localhost:4000/2023/08/02/iOS-%E7%BB%84%E4%BB%B6%E5%8C%96%E5%AE%9E%E8%B7%B5%E4%B9%8B-%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98%E5%8F%8A%E8%A7%A3%E5%86%B3%E8%BF%87%E7%A8%8B%E7%BA%AA%E8%A6%81-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0%E4%B8%AD/\";\n\n    (function() {\n        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;\n        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';\n        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);\n    })();\n</script>\n<!-- disqus 公共JS代码 end -->\n\n\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n      var d = document, t = 'script',\n          o = d.createElement(t),\n          s = d.getElementsByTagName(t)[0];\n      o.src = u;\n      if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n      s.parentNode.insertBefore(o, s);\n    }\n</script>\n<!-- anchor-js, Doc:http://bryanbraun.github.io/anchorjs/ -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/anchor-js/1.1.1/anchor.min.js\",function(){\n        anchors.options = {\n          visible: 'hover',\n          placement: 'right',\n          // icon: '#'\n        };\n        anchors.add().remove('.intro-header h1').remove('.subheading').remove('.sidebar-container h5');\n    })\n</script>\n<style>\n    /* place left on bigger screen */\n    @media all and (min-width: 800px) {\n        .anchorjs-link{\n            position: absolute;\n            left: -0.75em;\n            font-size: 1.1em;\n            margin-top : -0.1em;\n        }\n    }\n</style>\n\n\n\n    <!-- Footer -->\n<footer>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <!-- SNS Link -->\n                \n\n\n<ul class=\"list-inline text-center\">\n\n\n  \n  \n  \n  \n  \n  \n  \n</ul>\n\n                <p class=\"copyright text-muted\">\n                    Copyright &copy; PaysonChen Blog 2024\n                    <br>\n                    <!-- Powered by <a href=\"http://huangxuan.me\">Hux Blog</a> | -->\n                 <!--    <iframe style=\"margin-left: 2px; margin-bottom:-5px;\" frameborder=\"0\" scrolling=\"0\" width=\"100px\"\n                        height=\"20px\"\n                        src=\"https://ghbtns.com/github-btn.html?user=huxpro&repo=huxpro.github.io&type=star&count=true\">\n                    </iframe> -->\n                </p>\n            </div>\n        </div>\n    </div>\n</footer>\n\n<!-- jQuery -->\n<script src=\"/js/jquery.min.js \"></script>\n\n<!-- Bootstrap Core JavaScript -->\n<!-- Currently, only navbar scroll-down effect at desktop still depends on this -->\n<script src=\"/js/bootstrap.min.js \"></script>\n\n<!-- Custom Theme JavaScript -->\n<script src=\"/js/hux-blog.min.js \"></script>\n\n<!-- Simple Jekyll Search -->\n<script src=\"/js/simple-jekyll-search.min.js\"></script>\n\n<!-- Service Worker -->\n\n<script src=\"/js/snackbar.js \"></script>\n<script src=\"/js/sw-registration.js \"></script>\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n        var d = document, t = 'script',\n            o = d.createElement(t),\n            s = d.getElementsByTagName(t)[0];\n        o.src = u;\n        if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n        s.parentNode.insertBefore(o, s);\n    }\n</script>\n\n<!--\n     Because of the native support for backtick-style fenced code blocks\n     right within the Markdown is landed in Github Pages,\n     From V1.6, There is no need for Highlight.js,\n     so Huxblog drops it officially.\n\n     - https://github.com/blog/2100-github-pages-now-faster-and-simpler-with-jekyll-3-0\n     - https://help.github.com/articles/creating-and-highlighting-code-blocks/\n     - https://github.com/jneen/rouge/wiki/list-of-supported-languages-and-lexers\n-->\n<!--\n    <script>\n        async(\"http://cdn.bootcss.com/highlight.js/8.6/highlight.min.js\", function(){\n            hljs.initHighlightingOnLoad();\n        })\n    </script>\n    <link href=\"http://cdn.bootcss.com/highlight.js/8.6/styles/github.min.css\" rel=\"stylesheet\">\n-->\n\n\n\n\n\n\n\n<!--fastClick.js -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/fastclick/1.0.6/fastclick.min.js\", function () {\n        var $nav = document.querySelector(\"nav\");\n        if ($nav) FastClick.attach($nav);\n    })\n</script>\n\n\n<!-- Google Analytics -->\n\n\n\n<!-- Baidu Tongji -->\n\n\n\n<!-- Side Catalog -->\n\n<script type=\"text/javascript\">\n    function generateCatalog(selector) {\n\n        // interop with multilangual \n        if ('' == 'true') {\n            _containerSelector = 'div.post-container.active'\n        } else {\n            _containerSelector = 'div.post-container'\n        }\n\n        // init\n        var P = $(_containerSelector), a, n, t, l, i, c;\n        a = P.find('h1,h2,h3,h4,h5,h6');\n\n        // clean\n        $(selector).html('')\n\n        // appending\n        a.each(function () {\n            n = $(this).prop('tagName').toLowerCase();\n            i = \"#\" + $(this).prop('id');\n            t = $(this).text();\n            c = $('<a href=\"' + i + '\" rel=\"nofollow\">' + t + '</a>');\n            l = $('<li class=\"' + n + '_nav\"></li>').append(c);\n            $(selector).append(l);\n        });\n        return true;\n    }\n\n    generateCatalog(\".catalog-body\");\n\n    // toggle side catalog\n    $(\".catalog-toggle\").click((function (e) {\n        e.preventDefault();\n        $('.side-catalog').toggleClass(\"fold\")\n    }))\n\n    /*\n     * Doc: https://github.com/davist11/jQuery-One-Page-Nav\n     * Fork by Hux to support padding\n     */\n    async(\"/js/jquery.nav.js\", function () {\n        $('.catalog-body').onePageNav({\n            currentClass: \"active\",\n            changeHash: !1,\n            easing: \"swing\",\n            filter: \"\",\n            scrollSpeed: 700,\n            scrollOffset: 0,\n            scrollThreshold: .2,\n            begin: null,\n            end: null,\n            scrollChange: null,\n            padding: 80\n        });\n    });\n</script>\n\n\n\n<!-- Multi-Lingual -->\n\n\n<!-- Simple Jekyll Search -->\n<script>\n    // https://stackoverflow.com/questions/1912501/unescape-html-entities-in-javascript\n    function htmlDecode(input) {\n        var e = document.createElement('textarea');\n        e.innerHTML = input;\n        // handle case of empty input\n        return e.childNodes.length === 0 ? \"\" : e.childNodes[0].nodeValue;\n    }\n\n    SimpleJekyllSearch({\n        searchInput: document.getElementById('search-input'),\n        resultsContainer: document.getElementById('search-results'),\n        json: '/search.json',\n        searchResultTemplate: '<div class=\"post-preview item\"><a href=\"{url}\"><h2 class=\"post-title\">{title}</h2><h3 class=\"post-subtitle\">{subtitle}</h3><hr></a></div>',\n        noResultsText: 'No results',\n        limit: 50,\n        fuzzy: false,\n        // a hack to get escaped subtitle unescaped. for some reason, \n        // post.subtitle w/o escape filter nuke entire search.\n        templateMiddleware: function (prop, value, template) {\n            if (prop === 'subtitle' || prop === 'title') {\n                if (value.indexOf(\"code\")) {\n                    return htmlDecode(value);\n                } else {\n                    return value;\n                }\n            }\n        }\n    });\n\n    $(document).ready(function () {\n        var $searchPage = $('.search-page');\n        var $searchOpen = $('.search-icon');\n        var $searchClose = $('.search-icon-close');\n        var $searchInput = $('#search-input');\n        var $body = $('body');\n\n        $searchOpen.on('click', function (e) {\n            e.preventDefault();\n            $searchPage.toggleClass('search-active');\n            var prevClasses = $body.attr('class') || '';\n            setTimeout(function () {\n                $body.addClass('no-scroll');\n            }, 400)\n\n            if ($searchPage.hasClass('search-active')) {\n                $searchClose.on('click', function (e) {\n                    e.preventDefault();\n                    $searchPage.removeClass('search-active');\n                    $body.attr('class', prevClasses);  // from closure \n                });\n                $searchInput.focus();\n            }\n        });\n    });\n</script>\n\n\n<!-- Image to hack wechat -->\n<img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\" />\n<!-- Migrate from head to bottom, no longer block render and still work -->\n\n</body>\n\n</html>\n","excerpt":"<h1 id=\"ios组件化实践之遇到的问题及解决过程纪要持续更新中\">iOS组件化实践之：遇到的问题及解决过程纪要(持续更新中)</h1>\n","url":"/2023/08/02/iOS-%E7%BB%84%E4%BB%B6%E5%8C%96%E5%AE%9E%E8%B7%B5%E4%B9%8B-%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98%E5%8F%8A%E8%A7%A3%E5%86%B3%E8%BF%87%E7%A8%8B%E7%BA%AA%E8%A6%81-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0%E4%B8%AD/","next":{"id":"/2023/08/03/iOS-客户端在内网联调时的解决方案","tags":[],"relative_path":"_posts/2023-08-03-iOS-客户端在内网联调时的解决方案.md","collection":"posts","name":"2023-08-03-iOS-客户端在内网联调时的解决方案.md","url":"/2023/08/03/iOS-%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%9C%A8%E5%86%85%E7%BD%91%E8%81%94%E8%B0%83%E6%97%B6%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/","title":"iOS客户端在内网联调时的解决方案","date":"2023-08-03 00:00:00 +0800","categories":[],"path":"_posts/2023-08-03-iOS-客户端在内网联调时的解决方案.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/home-bg-geek.jpg","slug":"iOS-客户端在内网联调时的解决方案","ext":".md"},"title":"iOS组件化实践之：遇到的问题及解决过程纪要(持续更新中)","date":"2023-08-02 00:00:00 +0800","categories":[],"path":"_posts/2023-08-02-iOS-组件化实践之-遇到的问题及解决过程纪要-持续更新中.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/home-bg-geek.jpg","slug":"iOS-组件化实践之-遇到的问题及解决过程纪要-持续更新中","ext":".md"},"output":"<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"google-site-verification\" content=\"xBT4GhYoi5qRD5tr338pgPM5OWHHIDR6mNg1a3euekI\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, viewport-fit=cover\">\n    <meta name=\"description\" content=\"与你一起发现更大的世界。\">\n    <meta name=\"keywords\"  content=\"PaysonChen,iOS,流媒体\">\n    <meta name=\"theme-color\" content=\"#000000\">\n    \n    <!-- Open Graph -->\n    <meta property=\"og:title\" content=\"iOS客户端在内网联调时的解决方案 - PaysonChen的博客 | PaysonChen Blog\">\n    \n    <meta property=\"og:type\" content=\"article\">\n    <meta property=\"og:description\" content=\"iOS客户端在内网联调时的解决方案\n\">\n    \n    \n    <meta property=\"article:published_time\" content=\"2023-08-03T00:00:00Z\">\n    \n    \n    <meta property=\"article:author\" content=\"PaysonChen\">\n    \n    \n    \n    <meta property=\"og:image\" content=\"http://localhost:4000\">\n    <meta property=\"og:url\" content=\"http://localhost:4000/2023/08/03/iOS-%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%9C%A8%E5%86%85%E7%BD%91%E8%81%94%E8%B0%83%E6%97%B6%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/\">\n    <meta property=\"og:site_name\" content=\"PaysonChen的博客 | PaysonChen Blog\">\n    \n    <title>iOS客户端在内网联调时的解决方案 - PaysonChen的博客 | PaysonChen Blog</title>\n\n    <!-- Web App Manifest -->\n    <link rel=\"manifest\" href=\"/pwa/manifest.json\">\n\n    <!-- Favicon -->\n    <link rel=\"shortcut icon\" href=\"/img/favicon.ico\">\n    \n    <!-- Canonical URL -->\n    <link rel=\"canonical\" href=\"http://localhost:4000/2023/08/03/iOS-%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%9C%A8%E5%86%85%E7%BD%91%E8%81%94%E8%B0%83%E6%97%B6%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/\">\n\n    <!-- Bootstrap Core CSS -->\n    <link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\">\n\n    <!-- Custom CSS -->\n    <link rel=\"stylesheet\" href=\"/css/hux-blog.min.css\">\n\n    <!-- Custom Fonts -->\n    <!-- <link href=\"http://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\"> -->\n    <!-- Hux change font-awesome CDN to qiniu -->\n    <link href=\"//cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\">\n\n\n    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->\n    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->\n    <!--[if lt IE 9]>\n        <script src=\"https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js\"></script>\n        <script src=\"https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js\"></script>\n    <![endif]-->\n\n    <!-- ga & ba script hoook -->\n    <script></script>\n</head>\n\n\n<!-- hack iOS CSS :active style -->\n<body ontouchstart=\"\">\n\n    <!-- Navigation -->\n\n    <nav class=\"navbar navbar-default navbar-custom navbar-fixed-top\">\n        \n        <div class=\"container-fluid\">\n            <!-- Brand and toggle get grouped for better mobile display -->\n            <div class=\"navbar-header page-scroll\">\n                <button type=\"button\" class=\"navbar-toggle\">\n                    <span class=\"sr-only\">Toggle navigation</span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                </button>\n                <a class=\"navbar-brand\" href=\"/\">PaysonChen Blog</a>\n            </div>\n\n            <!-- Collect the nav links, forms, and other content for toggling -->\n            <div id=\"huxblog_navbar\">\n                <div class=\"navbar-collapse\">\n                    <ul class=\"nav navbar-nav navbar-right\">\n                        <li>\n                            <a href=\"/\">Home</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        <li>\n                            <a href=\"/about/\">About</a>\n                        </li>\n                        \n                        \n                        \n                        <li>\n                            <a href=\"/archive/\">Archive</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        <li class=\"search-icon\">\n                            <a href=\"javascript:void(0)\">\n                                <i class=\"fa fa-search\"></i>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n            <!-- /.navbar-collapse -->\n        </div>\n        <!-- /.container -->\n    </nav>\n\n    <script>\n        // Drop Bootstarp low-performance Navbar\n        // Use customize navbar with high-quality material design animation\n        // in high-perf jank-free CSS3 implementation\n        var $body = document.body;\n        var $toggle = document.querySelector('.navbar-toggle');\n        var $navbar = document.querySelector('#huxblog_navbar');\n        var $collapse = document.querySelector('.navbar-collapse');\n\n        var __HuxNav__ = {\n            close: function () {\n                $navbar.className = \" \";\n                // wait until animation end.\n                setTimeout(function () {\n                    // prevent frequently toggle\n                    if ($navbar.className.indexOf('in') < 0) {\n                        $collapse.style.height = \"0px\"\n                    }\n                }, 400)\n            },\n            open: function () {\n                $collapse.style.height = \"auto\"\n                $navbar.className += \" in\";\n            }\n        }\n\n        // Bind Event\n        $toggle.addEventListener('click', function (e) {\n            if ($navbar.className.indexOf('in') > 0) {\n                __HuxNav__.close()\n            } else {\n                __HuxNav__.open()\n            }\n        })\n\n        /**\n         * Since Fastclick is used to delegate 'touchstart' globally\n         * to hack 300ms delay in iOS by performing a fake 'click',\n         * Using 'e.stopPropagation' to stop 'touchstart' event from \n         * $toggle/$collapse will break global delegation.\n         * \n         * Instead, we use a 'e.target' filter to prevent handler\n         * added to document close HuxNav.  \n         *\n         * Also, we use 'click' instead of 'touchstart' as compromise\n         */\n        document.addEventListener('click', function (e) {\n            if (e.target == $toggle) return;\n            if (e.target.className == 'icon-bar') return;\n            __HuxNav__.close();\n        })\n    </script>\n    <!-- Search -->\n<div class=\"search-page\">\n  <div class=\"search-icon-close-container\">\n    <span class=\"search-icon-close\">\n      <i class=\"fa fa-chevron-down\"></i>\n    </span>\n  </div>\n  <div class=\"search-main container\">\n    <div class=\"row\">\n      <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n        <form></form>\n        <input type=\"text\" id=\"search-input\" placeholder=\"$ grep...\">\n        </form>\n        <div id=\"search-results\" class=\"mini-post-list\"></div>\n      </div>\n    </div>\n  </div>\n</div>\n\n    <!-- Image to hack wechat -->\n<!-- <img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\"> -->\n<!-- <img src=\"/img/home-bg-geek.jpg\" width=\"0\" height=\"0\"> -->\n\n<!-- Post Header -->\n\n\n\n<style type=\"text/css\">\n    header.intro-header{\n        position: relative;\n        background-image: url('/img/home-bg-geek.jpg');\n        background: ;\n    }\n\n    \n</style>\n\n<header class=\"intro-header\" >\n\n    <div class=\"header-mask\"></div>\n    \n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <div class=\"post-heading\">\n                    <div class=\"tags\">\n                        \n                    </div>\n                    <h1>iOS客户端在内网联调时的解决方案</h1>\n                    \n                    <h2 class=\"subheading\"></h2>\n                    <span class=\"meta\">Posted by PaysonChen on August 3, 2023</span>\n                </div>\n            </div>\n        </div>\n    </div>\n</header>\n\n\n\n\n\n\n<!-- Post Content -->\n<article>\n    <div class=\"container\">\n        <div class=\"row\">\n\n    <!-- Post Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                post-container\">\n\n                <!-- Multi-Lingual -->\n                \n\n\t\t\t\t<h1 id=\"ios客户端在内网联调时的解决方案\">iOS客户端在内网联调时的解决方案</h1>\n\n<h2 id=\"1背景\">1.背景</h2>\n\n<p>在做某个需求的时候，如果后台接口部署在研发内网，此时的联调可能存在以下问题：</p>\n\n<h2 id=\"2问题描述\">2.问题描述：</h2>\n\n<p>内网调试证书校验失败：</p>\n\n<p>需要测试设备连接WiFi：XXX_DEV，此WiFi不能访问外网，会存在证书校验失败的问题</p>\n\n<p>因此需要每次编译都需要：</p>\n\n<ul>\n  <li>编译前切换外网环境</li>\n  <li>编译后切换内网环境</li>\n</ul>\n\n<p>导致非常影响研发效率。</p>\n\n<h2 id=\"3解决方案\">3.解决方案：</h2>\n\n<h3 id=\"31-方案1测试机\">3.1 方案1：测试机</h3>\n\n<p>通过iPhone的快捷指令实现自动化：</p>\n\n<ul>\n  <li>通过一张sim卡</li>\n  <li>添加一条自动化：实现App关闭时关掉Wi-Fi打开蜂窝，编译时能访问到外网校验证书</li>\n  <li>再添加一条自动化：运行App时执行关闭蜂窝，打开Wi-Fi，Wi-Fi设置只自动加入WiFi：XXX_DEV</li>\n</ul>\n\n<p>暂时解决上述问题，未来需要彻底解决时，如果安全管控无法绕开，则需要推动后端将dev环境部署到外网</p>\n\n<h3 id=\"32-方案2模拟器调试\">3.2 方案2：模拟器调试</h3>\n\n<p>模拟器调试不需要通过联网校验证书，因此可以将Mac连接到WiFi：XXX_DEV，进行模拟器调试</p>\n\n<h3 id=\"33-方案3部署研发外网\">3.3 方案3：部署研发外网</h3>\n\n<p>推动与后台开发同学协商，尽量开发期间，选择外网部署</p>\n\n\n                <hr style=\"visibility: hidden;\">\n                <ul class=\"pager\">\n                    \n                    <li class=\"previous\">\n                        <a href=\"/2023/08/02/iOS-%E7%BB%84%E4%BB%B6%E5%8C%96%E5%AE%9E%E8%B7%B5%E4%B9%8B-%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98%E5%8F%8A%E8%A7%A3%E5%86%B3%E8%BF%87%E7%A8%8B%E7%BA%AA%E8%A6%81-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0%E4%B8%AD/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"iOS组件化实践之：遇到的问题及解决过程纪要(持续更新中)\">\n                        Previous<br>\n                        <span>iOS组件化实践之：遇到的问题及解决过程纪要(持续更新中)</span>\n                        </a>\n                    </li>\n                    \n                    \n                    <li class=\"next\">\n                        <a href=\"/2023/08/08/iOS-%E8%AF%9D%E5%A4%96%E7%AF%87-%E6%9E%84%E5%BB%BA%E8%AF%A6%E8%A7%A3/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"iOS话外篇：构建详解\">\n                        Next<br>\n                        <span>iOS话外篇：构建详解</span>\n                        </a>\n                    </li>\n                    \n                </ul>\n                <hr style=\"visibility: hidden;\">\n\n                \n                <!-- disqus 评论框 start -->\n                <div class=\"comment\">\n                    <div id=\"disqus_thread\" class=\"disqus-thread\"></div>\n                </div>\n                <!-- disqus 评论框 end -->\n                \n\n                \n            </div>  \n\n    <!-- Side Catalog Container -->\n        \n            <div class=\"\n                col-lg-2 col-lg-offset-0\n                visible-lg-block\n                sidebar-container\n                catalog-container\">\n                <div class=\"side-catalog\">\n                    <hr class=\"hidden-sm hidden-xs\">\n                    <h5>\n                        <a class=\"catalog-toggle\" href=\"#\">CATALOG</a>\n                    </h5>\n                    <ul class=\"catalog-body\"></ul>\n                </div>\n            </div>\n        \n\n    <!-- Sidebar Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                sidebar-container\">\n\n                <!-- Featured Tags -->\n                \n\n\n<section>\n    \n        <hr class=\"hidden-sm hidden-xs\">\n    \n    <h5><a href=\"/archive/\">FEATURED TAGS</a></h5>\n    <div class=\"tags\">\n        \n        \n        \n        \n        \n    </div>\n</section>\n\n\n                <!-- Friends Blog -->\n                \n            </div>\n        </div>\n    </div>\n</article>\n\n<!-- add support for mathjax by voleking-->\n\n\n\n\n\n\n<!-- disqus 公共JS代码 start (一个网页只需插入一次) -->\n<script type=\"text/javascript\">\n    /* * * CONFIGURATION VARIABLES * * */\n    var disqus_shortname = \"Cyp\";\n    var disqus_identifier = \"/2023/08/03/iOS-客户端在内网联调时的解决方案\";\n    var disqus_url = \"http://localhost:4000/2023/08/03/iOS-%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%9C%A8%E5%86%85%E7%BD%91%E8%81%94%E8%B0%83%E6%97%B6%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/\";\n\n    (function() {\n        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;\n        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';\n        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);\n    })();\n</script>\n<!-- disqus 公共JS代码 end -->\n\n\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n      var d = document, t = 'script',\n          o = d.createElement(t),\n          s = d.getElementsByTagName(t)[0];\n      o.src = u;\n      if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n      s.parentNode.insertBefore(o, s);\n    }\n</script>\n<!-- anchor-js, Doc:http://bryanbraun.github.io/anchorjs/ -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/anchor-js/1.1.1/anchor.min.js\",function(){\n        anchors.options = {\n          visible: 'hover',\n          placement: 'right',\n          // icon: '#'\n        };\n        anchors.add().remove('.intro-header h1').remove('.subheading').remove('.sidebar-container h5');\n    })\n</script>\n<style>\n    /* place left on bigger screen */\n    @media all and (min-width: 800px) {\n        .anchorjs-link{\n            position: absolute;\n            left: -0.75em;\n            font-size: 1.1em;\n            margin-top : -0.1em;\n        }\n    }\n</style>\n\n\n\n    <!-- Footer -->\n<footer>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <!-- SNS Link -->\n                \n\n\n<ul class=\"list-inline text-center\">\n\n\n  \n  \n  \n  \n  \n  \n  \n</ul>\n\n                <p class=\"copyright text-muted\">\n                    Copyright &copy; PaysonChen Blog 2024\n                    <br>\n                    <!-- Powered by <a href=\"http://huangxuan.me\">Hux Blog</a> | -->\n                 <!--    <iframe style=\"margin-left: 2px; margin-bottom:-5px;\" frameborder=\"0\" scrolling=\"0\" width=\"100px\"\n                        height=\"20px\"\n                        src=\"https://ghbtns.com/github-btn.html?user=huxpro&repo=huxpro.github.io&type=star&count=true\">\n                    </iframe> -->\n                </p>\n            </div>\n        </div>\n    </div>\n</footer>\n\n<!-- jQuery -->\n<script src=\"/js/jquery.min.js \"></script>\n\n<!-- Bootstrap Core JavaScript -->\n<!-- Currently, only navbar scroll-down effect at desktop still depends on this -->\n<script src=\"/js/bootstrap.min.js \"></script>\n\n<!-- Custom Theme JavaScript -->\n<script src=\"/js/hux-blog.min.js \"></script>\n\n<!-- Simple Jekyll Search -->\n<script src=\"/js/simple-jekyll-search.min.js\"></script>\n\n<!-- Service Worker -->\n\n<script src=\"/js/snackbar.js \"></script>\n<script src=\"/js/sw-registration.js \"></script>\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n        var d = document, t = 'script',\n            o = d.createElement(t),\n            s = d.getElementsByTagName(t)[0];\n        o.src = u;\n        if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n        s.parentNode.insertBefore(o, s);\n    }\n</script>\n\n<!--\n     Because of the native support for backtick-style fenced code blocks\n     right within the Markdown is landed in Github Pages,\n     From V1.6, There is no need for Highlight.js,\n     so Huxblog drops it officially.\n\n     - https://github.com/blog/2100-github-pages-now-faster-and-simpler-with-jekyll-3-0\n     - https://help.github.com/articles/creating-and-highlighting-code-blocks/\n     - https://github.com/jneen/rouge/wiki/list-of-supported-languages-and-lexers\n-->\n<!--\n    <script>\n        async(\"http://cdn.bootcss.com/highlight.js/8.6/highlight.min.js\", function(){\n            hljs.initHighlightingOnLoad();\n        })\n    </script>\n    <link href=\"http://cdn.bootcss.com/highlight.js/8.6/styles/github.min.css\" rel=\"stylesheet\">\n-->\n\n\n\n\n\n\n\n<!--fastClick.js -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/fastclick/1.0.6/fastclick.min.js\", function () {\n        var $nav = document.querySelector(\"nav\");\n        if ($nav) FastClick.attach($nav);\n    })\n</script>\n\n\n<!-- Google Analytics -->\n\n\n\n<!-- Baidu Tongji -->\n\n\n\n<!-- Side Catalog -->\n\n<script type=\"text/javascript\">\n    function generateCatalog(selector) {\n\n        // interop with multilangual \n        if ('' == 'true') {\n            _containerSelector = 'div.post-container.active'\n        } else {\n            _containerSelector = 'div.post-container'\n        }\n\n        // init\n        var P = $(_containerSelector), a, n, t, l, i, c;\n        a = P.find('h1,h2,h3,h4,h5,h6');\n\n        // clean\n        $(selector).html('')\n\n        // appending\n        a.each(function () {\n            n = $(this).prop('tagName').toLowerCase();\n            i = \"#\" + $(this).prop('id');\n            t = $(this).text();\n            c = $('<a href=\"' + i + '\" rel=\"nofollow\">' + t + '</a>');\n            l = $('<li class=\"' + n + '_nav\"></li>').append(c);\n            $(selector).append(l);\n        });\n        return true;\n    }\n\n    generateCatalog(\".catalog-body\");\n\n    // toggle side catalog\n    $(\".catalog-toggle\").click((function (e) {\n        e.preventDefault();\n        $('.side-catalog').toggleClass(\"fold\")\n    }))\n\n    /*\n     * Doc: https://github.com/davist11/jQuery-One-Page-Nav\n     * Fork by Hux to support padding\n     */\n    async(\"/js/jquery.nav.js\", function () {\n        $('.catalog-body').onePageNav({\n            currentClass: \"active\",\n            changeHash: !1,\n            easing: \"swing\",\n            filter: \"\",\n            scrollSpeed: 700,\n            scrollOffset: 0,\n            scrollThreshold: .2,\n            begin: null,\n            end: null,\n            scrollChange: null,\n            padding: 80\n        });\n    });\n</script>\n\n\n\n<!-- Multi-Lingual -->\n\n\n<!-- Simple Jekyll Search -->\n<script>\n    // https://stackoverflow.com/questions/1912501/unescape-html-entities-in-javascript\n    function htmlDecode(input) {\n        var e = document.createElement('textarea');\n        e.innerHTML = input;\n        // handle case of empty input\n        return e.childNodes.length === 0 ? \"\" : e.childNodes[0].nodeValue;\n    }\n\n    SimpleJekyllSearch({\n        searchInput: document.getElementById('search-input'),\n        resultsContainer: document.getElementById('search-results'),\n        json: '/search.json',\n        searchResultTemplate: '<div class=\"post-preview item\"><a href=\"{url}\"><h2 class=\"post-title\">{title}</h2><h3 class=\"post-subtitle\">{subtitle}</h3><hr></a></div>',\n        noResultsText: 'No results',\n        limit: 50,\n        fuzzy: false,\n        // a hack to get escaped subtitle unescaped. for some reason, \n        // post.subtitle w/o escape filter nuke entire search.\n        templateMiddleware: function (prop, value, template) {\n            if (prop === 'subtitle' || prop === 'title') {\n                if (value.indexOf(\"code\")) {\n                    return htmlDecode(value);\n                } else {\n                    return value;\n                }\n            }\n        }\n    });\n\n    $(document).ready(function () {\n        var $searchPage = $('.search-page');\n        var $searchOpen = $('.search-icon');\n        var $searchClose = $('.search-icon-close');\n        var $searchInput = $('#search-input');\n        var $body = $('body');\n\n        $searchOpen.on('click', function (e) {\n            e.preventDefault();\n            $searchPage.toggleClass('search-active');\n            var prevClasses = $body.attr('class') || '';\n            setTimeout(function () {\n                $body.addClass('no-scroll');\n            }, 400)\n\n            if ($searchPage.hasClass('search-active')) {\n                $searchClose.on('click', function (e) {\n                    e.preventDefault();\n                    $searchPage.removeClass('search-active');\n                    $body.attr('class', prevClasses);  // from closure \n                });\n                $searchInput.focus();\n            }\n        });\n    });\n</script>\n\n\n<!-- Image to hack wechat -->\n<img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\" />\n<!-- Migrate from head to bottom, no longer block render and still work -->\n\n</body>\n\n</html>\n","excerpt":"<h1 id=\"ios客户端在内网联调时的解决方案\">iOS客户端在内网联调时的解决方案</h1>\n","url":"/2023/08/03/iOS-%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%9C%A8%E5%86%85%E7%BD%91%E8%81%94%E8%B0%83%E6%97%B6%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/","next":{"id":"/2023/08/08/iOS-话外篇-构建详解","tags":[],"relative_path":"_posts/2023-08-08-iOS-话外篇-构建详解.md","collection":"posts","content":"<h1 id=\"ios话外篇构建详解\">iOS话外篇：构建详解</h1>\n\n<h2 id=\"1背景\">1.背景</h2>\n\n<p>想必大多数iOS开发者不陌生，通过xcode 自带的 archive 打包，习惯GUI的同学，可能更倾向于archive打包，虽然archive打包有很多优点：包括可视化、学习门槛低、报错清晰等，但是在团队协作与日常构建中，他的弊端就显现出来了：</p>\n\n<ul>\n  <li>步骤多</li>\n</ul>\n\n<p>​\t\t打包前需要同步代码、打包过程中需要选择签名、打包后要归档、并选择上传包的地方（分发渠道orAppStore）</p>\n\n<ul>\n  <li>时间长</li>\n</ul>\n\n<p>​\t\t构建时间随着工程迭代越来越漫长，大型全量打包可能到数十分钟，archive会阻断当前研发进程，无法利用本机算力之外的其他计算集群资源，影响研效</p>\n\n<ul>\n  <li>灵活不佳</li>\n</ul>\n\n<p>​\t\t构建过程中可能需要对版本的build号进行自增、归档dsym文件、构建通知等，采用archive这些都可能需要手动执行</p>\n\n<ul>\n  <li>可靠性不佳</li>\n</ul>\n\n<p>​\t\t对于分支、代码、签名、构建方式等匹配均需靠人工维护，流程步骤多，容易造成错误，不可靠</p>\n\n<h2 id=\"2构建设计\">2.构建设计</h2>\n\n<p>为了设计一个通用的构建脚本，需要将核心构建流程分层与归类，设计入参、使用构建环境等。程序入口如下：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#通过外部传参 读取自定义参数 2:target_name</span>\n<span class=\"c\"># 2 必须</span>\ncoustomSettings <span class=\"nv\">$2</span>\n\n<span class=\"c\"># 3 (可选) 蒲公英渠道号，拼接url</span>\npublishSettings <span class=\"nv\">$3</span>\n\n<span class=\"c\"># 4 (可选)是否静默通知，有值 则不发通知</span>\nnotificationSettings <span class=\"nv\">$4</span>\n\n<span class=\"c\">#开始构建 1:configuration(0:DailyBuild|1:TestFlight|2:Release|3:TFInner)</span>\n<span class=\"c\">#1 必须</span>\nbuild <span class=\"nv\">$1</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h3 id=\"21入参设计\">2.1入参设计：</h3>\n\n<h4 id=\"211参数1构建方式\">2.1.1参数1：构建方式</h4>\n\n<table>\n  <tbody>\n    <tr>\n      <td>对应工程中的Configuration ，枚举值：0:DailyBuild</td>\n      <td>1:TestFlight</td>\n      <td>2:Release</td>\n      <td>3:TFInner</td>\n    </tr>\n  </tbody>\n</table>\n\n<ul>\n  <li>\n    <p>DailyBuild：用于日常构建，CI/CD</p>\n  </li>\n  <li>\n    <p>TestFlight：用于打灰度包</p>\n  </li>\n  <li>\n    <p>Release：用于打生产包</p>\n  </li>\n  <li>\n    <p>TFInner：用于打内部TF包</p>\n\n    <p>特别说明：由于，Apple的Enterprise证书($299/年)账号申请条件苛刻，通过此方案可以临时解决100台测试设备不足的问题</p>\n  </li>\n</ul>\n\n<h4 id=\"212-参数2target名称\">2.1.2 参数2：Target名称</h4>\n\n<p>工程的TargetName：</p>\n\n<p><img src=\"/img/ios-build/iOS_Build1.png\" alt=\"iOS_Build1\" /></p>\n\n<p><a name=\"2.1.3\"></a></p>\n\n<h4 id=\"213-参数3可选渠道号\">2.1.3 参数3(可选)：渠道号</h4>\n\n<p>​\t在没有使用支持iOS app分发的流水线（类似于腾讯蓝鲸（蓝盾流水线））情况下：本文例子使用蒲公英进行应用分发，为了兼容多渠道并行，用于拼接分发下载地址的url。</p>\n\n<p><img src=\"/img/ios-build/iOS_Build2.png\" alt=\"iOS_Build2\" /></p>\n\n<h5 id=\"2131-第三方分发蒲公英\">2.1.3.1 第三方分发：蒲公英</h5>\n\n<p>​\t流水线通过API进行应用分发，下面说明，渠道号为空与非空的情况：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n</pre></td><td class=\"rouge-code\"><pre>  <span class=\"c\">#其他构建包上传到pgy</span>\n        <span class=\"nb\">echo</span> <span class=\"s1\">'/// 上传 PGY 开始 IPA_PATH='</span><span class=\"k\">${</span><span class=\"nv\">IPA_PATH</span><span class=\"k\">}</span>\n        <span class=\"nb\">echo</span> <span class=\"s1\">'/// 上传 PGY 开始 渠道='</span><span class=\"k\">${</span><span class=\"nv\">pgyChannel</span><span class=\"k\">}</span>\n        <span class=\"nv\">compileEnvironment</span><span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">buildName</span><span class=\"k\">}</span><span class=\"s2\">:</span><span class=\"k\">${</span><span class=\"nv\">git_log</span><span class=\"k\">}</span><span class=\"s2\">\"</span>\n        \n        <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$pgyChannel</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then</span>\n            <span class=\"c\"># 渠道空，则走默认 不指定渠道号的上传</span>\n            curl <span class=\"nt\">-F</span> <span class=\"s1\">'file=@'</span><span class=\"k\">${</span><span class=\"nv\">IPA_PATH</span><span class=\"k\">}</span> <span class=\"nt\">-F</span> <span class=\"s1\">'_api_key='</span><span class=\"k\">${</span><span class=\"nv\">pgyAPIKey</span><span class=\"k\">}</span> <span class=\"nt\">-F</span> <span class=\"s1\">'buildUpdateDescription='</span><span class=\"k\">${</span><span class=\"nv\">compileEnvironment</span><span class=\"k\">}</span> https://www.pgyer.com/apiv2/app/upload\n        <span class=\"k\">else</span>\n            <span class=\"c\"># 渠道非空，走下载地址关联 渠道</span>\n            curl <span class=\"nt\">-F</span> <span class=\"s1\">'file=@'</span><span class=\"k\">${</span><span class=\"nv\">IPA_PATH</span><span class=\"k\">}</span> <span class=\"nt\">-F</span> <span class=\"s1\">'_api_key='</span><span class=\"k\">${</span><span class=\"nv\">pgyAPIKey</span><span class=\"k\">}</span> <span class=\"nt\">-F</span> <span class=\"s1\">'buildUpdateDescription='</span><span class=\"k\">${</span><span class=\"nv\">compileEnvironment</span><span class=\"k\">}</span>  <span class=\"nt\">-F</span> <span class=\"s1\">'buildChannelShortcut='</span><span class=\"k\">${</span><span class=\"nv\">pgyDownloadUrlSubfix</span><span class=\"k\">}</span> https://www.pgyer.com/apiv2/app/upload\n        <span class=\"k\">fi\n                \n        </span><span class=\"nb\">echo</span> <span class=\"s1\">'/// 上传 PGY 结束'</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h5 id=\"2132-扩展阿里云oss云存储分发\">2.1.3.2 扩展：阿里云OSS云存储分发</h5>\n\n<p>基于蒲公英的分发受限于蒲公英上行带宽与收费阈值，探索一种容灾分发方式，避免蒲公英未来服务出现异常时的健壮性。</p>\n\n<p>自行分发需要用Ad-Hoc方式，遵循Apple协议：itms-services://?action=download-manifest&amp;url=</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#添加commit信息到二维码图片上</span>\n<span class=\"k\">function </span>add_log_commit_title_msg_to_qrcode <span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"c\">#二维码打上版本信息</span>\n    <span class=\"c\">#TODO: 这里需要安装下工具 ImageMgick [brew install ImageMgick]</span>\n    <span class=\"nv\">title</span><span class=\"o\">=</span><span class=\"nv\">$xcodeVersion3number</span>.<span class=\"k\">${</span><span class=\"nv\">channel_name</span><span class=\"k\">}</span>.<span class=\"nv\">$configurationName</span>.<span class=\"k\">${</span><span class=\"nv\">BuildNo</span><span class=\"k\">}</span>\n\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nv\">$1</span> <span class=\"o\">=</span> <span class=\"s2\">\"1\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nv\">dst_line_cnt</span><span class=\"o\">=</span>0\n        <span class=\"nb\">export </span><span class=\"nv\">oss_source_log_arr</span><span class=\"o\">=(</span><span class=\"sb\">`</span><span class=\"nb\">echo</span> <span class=\"nv\">$source_log_str</span> | <span class=\"nb\">tr</span> <span class=\"s1\">']['</span> <span class=\"s1\">' '</span><span class=\"sb\">`</span><span class=\"o\">)</span>\n        <span class=\"nb\">export </span><span class=\"nv\">oss_log_line_count</span><span class=\"o\">=</span><span class=\"k\">${#</span><span class=\"nv\">oss_source_log_arr</span><span class=\"p\">[@]</span><span class=\"k\">}</span>\n        <span class=\"nb\">echo</span> <span class=\"s1\">'/// oss 分发： 添加 二维码msg log_line_count='</span><span class=\"nv\">$oss_log_line_count</span>\n\n        <span class=\"k\">for</span><span class=\"o\">((</span> <span class=\"nv\">i</span><span class=\"o\">=</span>0<span class=\"p\">;</span>i&lt;<span class=\"k\">${</span><span class=\"nv\">oss_log_line_count</span><span class=\"k\">}</span><span class=\"p\">;</span>i++<span class=\"o\">))</span>\n        <span class=\"k\">do\n            </span><span class=\"nv\">single_len</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">echo</span> <span class=\"nt\">-n</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">oss_source_log_arr</span><span class=\"p\">[i]</span><span class=\"k\">}</span><span class=\"s2\">\"</span> | <span class=\"nb\">wc</span> <span class=\"nt\">-m</span><span class=\"si\">)</span>\n            <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">oss_source_log_arr</span><span class=\"p\">[i]</span><span class=\"k\">}</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n                </span><span class=\"nv\">oss_singleStr</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">oss_source_log_arr</span><span class=\"p\">[i]</span><span class=\"k\">}</span><span class=\"p\">;</span>\n                <span class=\"nb\">echo</span> <span class=\"s1\">'///--遍历'</span><span class=\"k\">${</span><span class=\"nv\">oss_source_log_arr</span><span class=\"p\">[i]</span><span class=\"k\">}</span><span class=\"s1\">'为空文字长度：'</span><span class=\"nv\">$single_len</span>\n                <span class=\"nv\">dst_line_cnt</span><span class=\"o\">=</span><span class=\"k\">$((</span>dst_line_cnt+1<span class=\"k\">))</span>\n            <span class=\"k\">else\n                </span><span class=\"nv\">line_max_len</span><span class=\"o\">=</span>30\n                <span class=\"nv\">ingle_cnt</span><span class=\"o\">=</span><span class=\"k\">$((</span>single_len <span class=\"o\">/</span> line_max_len<span class=\"k\">))</span>\n\n\n                <span class=\"k\">if</span> <span class=\"o\">((</span>ingle_cnt <span class=\"o\">&gt;</span> 0<span class=\"o\">))</span><span class=\"p\">;</span> <span class=\"k\">then\n                    for</span><span class=\"o\">((</span> <span class=\"nv\">j</span><span class=\"o\">=</span>0<span class=\"p\">;</span>j&lt;<span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">ingle_cnt</span><span class=\"k\">}</span><span class=\"p\">;</span>j++<span class=\"o\">))</span>\n                    <span class=\"k\">do\n                        </span><span class=\"nv\">string</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">oss_source_log_arr</span><span class=\"p\">[i]</span><span class=\"k\">}</span>\n                        <span class=\"nv\">single_line1</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">string</span>:<span class=\"p\">(line_max_len * j)</span>:line_max_len<span class=\"k\">}</span>\n                        <span class=\"nb\">echo</span> <span class=\"s1\">'///--遍历'</span> <span class=\"k\">${</span><span class=\"nv\">oss_source_log_arr</span><span class=\"p\">[i]</span><span class=\"k\">}</span><span class=\"s1\">'文字长度：'</span><span class=\"nv\">$single_len</span><span class=\"s1\">'超阈值阶段：第'</span><span class=\"nv\">$j</span><span class=\"s1\">'行:'</span><span class=\"nv\">$single_line1</span>\n                        oss_singleStr+<span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"se\">\\n</span><span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">single_line1</span><span class=\"k\">}</span><span class=\"p\">;</span>\n                        <span class=\"nv\">dst_line_cnt</span><span class=\"o\">=</span><span class=\"k\">$((</span>dst_line_cnt+1<span class=\"k\">))</span>\n                    <span class=\"k\">done</span><span class=\"p\">;</span>\n                <span class=\"k\">else\n                    </span><span class=\"nb\">echo</span> <span class=\"s1\">'///--遍历'</span> <span class=\"k\">${</span><span class=\"nv\">oss_source_log_arr</span><span class=\"p\">[i]</span><span class=\"k\">}</span><span class=\"s1\">' 文字长度：'</span><span class=\"nv\">$single_len</span>\n                    <span class=\"nv\">dst_line_cnt</span><span class=\"o\">=</span><span class=\"k\">$((</span>dst_line_cnt+1<span class=\"k\">))</span>\n                    oss_singleStr+<span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"se\">\\n</span><span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">oss_source_log_arr</span><span class=\"p\">[i]</span><span class=\"k\">}</span><span class=\"p\">;</span>\n                <span class=\"k\">fi\n            fi\n        done</span><span class=\"p\">;</span>\n        <span class=\"nv\">msg</span><span class=\"o\">=</span><span class=\"nv\">$oss_singleStr</span>\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"/// oss render msg=\"</span><span class=\"nv\">$msg</span>\n        \n        <span class=\"nv\">contentsize_width</span><span class=\"o\">=</span>600\n        <span class=\"nv\">contentsize_height</span><span class=\"o\">=</span><span class=\"k\">$((</span>contentsize_width <span class=\"o\">+</span> <span class=\"nv\">$dst_line_cnt</span> <span class=\"o\">*</span> <span class=\"m\">25</span> <span class=\"o\">+</span> <span class=\"m\">40</span> <span class=\"o\">+</span> <span class=\"m\">40</span><span class=\"k\">))</span> <span class=\"c\">#第一个40是title的高度 第二个40是距离底部空间</span>\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"contentsize_height=\"</span><span class=\"nv\">$contentsize_height</span>\n        <span class=\"c\">#改变原图大小</span>\n        convert <span class=\"nv\">$qrcode_path</span> <span class=\"nt\">-resize</span> <span class=\"k\">${</span><span class=\"nv\">contentsize_width</span><span class=\"k\">}</span>x<span class=\"k\">${</span><span class=\"nv\">contentsize_width</span><span class=\"k\">}</span>^ <span class=\"nt\">-gravity</span> center <span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span>_1.png\n\n        <span class=\"c\">#变高，兼容msg</span>\n        convert <span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span>_1.png <span class=\"nt\">-gravity</span> north <span class=\"nt\">-extent</span> <span class=\"k\">${</span><span class=\"nv\">contentsize_width</span><span class=\"k\">}</span>x<span class=\"k\">${</span><span class=\"nv\">contentsize_height</span><span class=\"k\">}</span> <span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span>_2.png\n\n        <span class=\"c\">#汉字字体</span>\n        <span class=\"nv\">chn_tff_path</span><span class=\"o\">=</span><span class=\"nv\">$build_ext_path</span>/publish_res/chn.ttf\n        \n        <span class=\"c\">#渲染title</span>\n        convert <span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span>_2.png <span class=\"nt\">-gravity</span> north <span class=\"nt\">-pointsize</span> 30 <span class=\"nt\">-font</span> <span class=\"nv\">$chn_tff_path</span> <span class=\"nt\">-fill</span> black <span class=\"nt\">-annotate</span> +0+<span class=\"k\">${</span><span class=\"nv\">contentsize_width</span><span class=\"k\">}</span> <span class=\"nv\">$title</span> <span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span>_3.png\n\n        <span class=\"c\">#渲染msg</span>\n        convert <span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span>_3.png <span class=\"nt\">-gravity</span> north <span class=\"nt\">-pointsize</span> 20 <span class=\"nt\">-font</span> <span class=\"nv\">$chn_tff_path</span> <span class=\"nt\">-fill</span> black <span class=\"nt\">-annotate</span> +0+<span class=\"k\">$((${</span><span class=\"nv\">contentsize_width</span><span class=\"k\">}</span><span class=\"o\">+</span><span class=\"m\">40</span><span class=\"k\">))</span> <span class=\"nv\">$msg</span> <span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span>_4.png\n        <span class=\"nv\">qrcode_path_with_msg</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span>_4.png\n    <span class=\"k\">else</span>\n        <span class=\"c\">#没有传 1 不需要msg，只给title</span>\n        convert <span class=\"nv\">$qrcode_path</span> <span class=\"nt\">-gravity</span> south <span class=\"nt\">-pointsize</span> 10 <span class=\"nt\">-fill</span> gray <span class=\"nt\">-annotate</span> +0+0 <span class=\"nv\">$qrcode_print_msg</span>  <span class=\"nv\">$qrcode_path_with_msg</span>\n        <span class=\"nb\">echo</span> <span class=\"s1\">'/// oss 分发： 添加 二维码title='</span><span class=\"k\">${</span><span class=\"nv\">title</span><span class=\"k\">}</span>\n    <span class=\"k\">fi</span>\n\n<span class=\"o\">}</span>\n\n<span class=\"c\">#发布到阿里云OSS</span>\n<span class=\"k\">function </span>upload_ipa_to_aliyunOSS <span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"c\">#更新plist的键值对：</span>\n    <span class=\"nv\">manifest_path</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">exportPath</span><span class=\"k\">}</span>/manifest.plist\n    <span class=\"nb\">echo</span> <span class=\"s1\">'/// oss 分发： manifest_path='</span><span class=\"k\">${</span><span class=\"nv\">manifest_path</span><span class=\"k\">}</span>\n    \n    <span class=\"nv\">oss_bucket</span><span class=\"o\">=</span><span class=\"s2\">\"cbs-apps-test\"</span>\n    <span class=\"nv\">oss_platform</span><span class=\"o\">=</span><span class=\"s2\">\"iOS\"</span>\n    <span class=\"nv\">oss_bucket_path</span><span class=\"o\">=</span><span class=\"nv\">$oss_platform</span>/<span class=\"k\">${</span><span class=\"nv\">TARGET_NAME</span><span class=\"k\">}</span>/<span class=\"nv\">$configurationName</span>/<span class=\"k\">${</span><span class=\"nv\">channel_name</span><span class=\"k\">}</span>/<span class=\"k\">${</span><span class=\"nv\">BuildNo</span><span class=\"k\">}</span>/<span class=\"k\">${</span><span class=\"nv\">TARGET_NAME</span><span class=\"k\">}</span>_<span class=\"k\">${</span><span class=\"nv\">channel_name</span><span class=\"k\">}</span>_<span class=\"nv\">$configurationName_</span><span class=\"k\">${</span><span class=\"nv\">BuildNo</span><span class=\"k\">}</span>\n    <span class=\"nv\">oss_path</span><span class=\"o\">=</span><span class=\"s2\">\"oss://</span><span class=\"nv\">$oss_bucket</span><span class=\"s2\">/</span><span class=\"nv\">$oss_bucket_path</span><span class=\"s2\">\"</span>\n    <span class=\"nv\">oss_url</span><span class=\"o\">=</span><span class=\"s2\">\"https://</span><span class=\"nv\">$oss_bucket</span><span class=\"s2\">.oss-cn-beijing.aliyuncs.com/</span><span class=\"nv\">$oss_bucket_path</span><span class=\"s2\">\"</span>\n\n    <span class=\"nv\">oss_ipa_upload_url</span><span class=\"o\">=</span><span class=\"nv\">$oss_path</span><span class=\"s2\">\".ipa\"</span>\n    <span class=\"nv\">oss_ipa_url</span><span class=\"o\">=</span><span class=\"nv\">$oss_url</span><span class=\"s2\">\".ipa\"</span>\n\n    <span class=\"c\">#icon下载地址配置</span>\n    <span class=\"nv\">oss_icon_url</span><span class=\"o\">=</span><span class=\"s2\">\"https://cbs-apps-test.oss-cn-beijing.aliyuncs.com/iOS/</span><span class=\"k\">${</span><span class=\"nv\">TARGET_NAME</span><span class=\"k\">}</span><span class=\"s2\">/icon/icon.png\"</span>\n    <span class=\"nv\">oss_icon_fs_url</span><span class=\"o\">=</span><span class=\"s2\">\"https://cbs-apps-test.oss-cn-beijing.aliyuncs.com/iOS/</span><span class=\"k\">${</span><span class=\"nv\">TARGET_NAME</span><span class=\"k\">}</span><span class=\"s2\">/icon/icon_fs.png\"</span>\n\n    \n    <span class=\"c\">#修改ipa下载地址</span>\n    /usr/libexec/PlistBuddy <span class=\"nt\">-c</span> <span class=\"s2\">\"Set :items:0:assets:0:url </span><span class=\"nv\">$oss_ipa_url</span><span class=\"s2\">\"</span> <span class=\"nv\">$manifest_path</span>\n\n    <span class=\"c\">#修改icon地址</span>\n    /usr/libexec/PlistBuddy <span class=\"nt\">-c</span> <span class=\"s2\">\"Set :items:0:assets:1:url </span><span class=\"nv\">$oss_icon_url</span><span class=\"s2\">\"</span> <span class=\"nv\">$manifest_path</span>\n\n    <span class=\"c\">#修改icon full size地址</span>\n    /usr/libexec/PlistBuddy <span class=\"nt\">-c</span> <span class=\"s2\">\"Set :items:0:assets:2:url </span><span class=\"nv\">$oss_icon_fs_url</span><span class=\"s2\">\"</span> <span class=\"nv\">$manifest_path</span>\n\n\n    <span class=\"c\">#传ipa</span>\n    ossutil <span class=\"nb\">cp</span> <span class=\"k\">${</span><span class=\"nv\">IPA_PATH</span><span class=\"k\">}</span> <span class=\"nv\">$oss_ipa_upload_url</span> <span class=\"nt\">-f</span>\n    \n    <span class=\"c\">#传manifest</span>\n    <span class=\"nv\">oss_manifest_extension</span><span class=\"o\">=</span><span class=\"s2\">\"plist\"</span>\n    <span class=\"nv\">oss_manifest_upload_url</span><span class=\"o\">=</span><span class=\"nv\">$oss_path</span><span class=\"s2\">\".\"</span><span class=\"nv\">$oss_manifest_extension</span>\n    <span class=\"nv\">oss_manifest_url</span><span class=\"o\">=</span><span class=\"nv\">$oss_url</span><span class=\"s2\">\".\"</span><span class=\"nv\">$oss_manifest_extension</span>\n    ossutil <span class=\"nb\">cp</span> <span class=\"k\">${</span><span class=\"nv\">manifest_path</span><span class=\"k\">}</span> <span class=\"nv\">$oss_manifest_upload_url</span> <span class=\"nt\">-f</span>\n    \n    <span class=\"c\">#上述做归档后，生成下载二维码</span>\n    <span class=\"nv\">download_url</span><span class=\"o\">=</span><span class=\"s2\">\"itms-services://?action=download-manifest&amp;url=\"</span><span class=\"nv\">$oss_manifest_url</span>\n    <span class=\"nv\">qrcode_path</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">exportPath</span><span class=\"k\">}</span>/<span class=\"k\">${</span><span class=\"nv\">TARGET_NAME</span><span class=\"k\">}</span>_<span class=\"k\">${</span><span class=\"nv\">BuildNo</span><span class=\"k\">}</span>.png\n    \n    <span class=\"c\">#TODO: 这里需要安装下工具 qrencode [brew install qrencode]</span>\n    qrencode <span class=\"nt\">-o</span> <span class=\"nv\">$qrcode_path</span> <span class=\"nv\">$download_url</span>\n    \n    <span class=\"c\">#将二维码上传到oss</span>\n    <span class=\"nv\">oss_qrencode_extension</span><span class=\"o\">=</span><span class=\"s2\">\"png\"</span>\n    <span class=\"nv\">oss_qrencode_upload_url</span><span class=\"o\">=</span><span class=\"nv\">$oss_path</span><span class=\"s2\">\".\"</span><span class=\"nv\">$oss_qrencode_extension</span>\n    <span class=\"nv\">qrcode_path_with_msg</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span>_with_msg\n        \n    <span class=\"c\">#如果需要二维码打上log信息则调用</span>\n    <span class=\"nv\">need_msg</span><span class=\"o\">=</span>1\n    add_log_commit_title_msg_to_qrcode <span class=\"nv\">$need_msg</span>\n        \n    <span class=\"c\">#上传到阿里云oss</span>\n    ossutil <span class=\"nb\">cp</span> <span class=\"k\">${</span><span class=\"nv\">qrcode_path_with_msg</span><span class=\"k\">}</span> <span class=\"nv\">$oss_qrencode_upload_url</span> <span class=\"nt\">-f</span>\n    \n    <span class=\"c\">#二维码的url 通知出来</span>\n    <span class=\"nb\">export </span><span class=\"nv\">oss_app_download_qrcode_url</span><span class=\"o\">=</span><span class=\"nv\">$oss_url</span><span class=\"s2\">\".\"</span><span class=\"nv\">$oss_qrencode_extension</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'/// oss 分发： 二维码的oss_app_download_qrcode_url='</span><span class=\"k\">${</span><span class=\"nv\">oss_app_download_qrcode_url</span><span class=\"k\">}</span>\n<span class=\"o\">}</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p><a name=\"2.1.4\"></a></p>\n\n<h4 id=\"214-参数4可选是否静默通知\">2.1.4 参数4(可选)：是否静默通知</h4>\n\n<p>​\t本文例子通过钉钉API发送通知到钉钉群，默认不填发送，有值则不发通知，通知内容整合双分发方案：</p>\n\n<p>​\t下面代码为发送通知的逻辑，请将相应的变量替换成自己的参数</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n</pre></td><td class=\"rouge-code\"><pre>    <span class=\"nv\">modify_msg</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">git_log</span><span class=\"k\">}</span>\n    <span class=\"nv\">ProductName</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">xcodeProductName</span><span class=\"k\">}</span>\n    <span class=\"nv\">downloadPrefix</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">PrefixID</span><span class=\"k\">}</span>\n    <span class=\"nv\">channel</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">pgyChannel</span><span class=\"k\">}</span>\n    <span class=\"nv\">title</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">buildName</span><span class=\"k\">}</span>\n\n    <span class=\"c\">#采用直接 拼 channel后缀</span>\n    <span class=\"nv\">shortUrl</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">downloadPrefix</span><span class=\"k\">}${</span><span class=\"nv\">ProductName</span><span class=\"k\">}${</span><span class=\"nv\">channel</span><span class=\"k\">}</span>\n\n    <span class=\"c\">#蒲公英下载地址</span>\n    <span class=\"nv\">pgy_app_donwnload_url</span><span class=\"o\">=</span><span class=\"s2\">\"https://www.pgyer.com/</span><span class=\"k\">${</span><span class=\"nv\">shortUrl</span><span class=\"k\">}</span><span class=\"s2\">\"</span>\n    \n   <span class=\"c\">#oss下载地址</span>\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$oss_app_download_qrcode_url</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then</span>\n        <span class=\"c\">#为空则使用pgy</span>\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"通知：oss_app_download_qrcode_url 为空则使用pgy：'</span><span class=\"k\">${</span><span class=\"nv\">app_donwnload_url</span><span class=\"k\">}</span><span class=\"s2\">'\"</span>\n        <span class=\"nv\">app_donwnload_url</span><span class=\"o\">=</span><span class=\"nv\">$pgy_app_donwnload_url</span>\n    <span class=\"k\">else</span>\n        <span class=\"c\">#不为空使用 pgy + oss</span>\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"通知：oss_app_download_qrcode_url 不为空使用 pgy + oss则使用pgy + oss：'</span><span class=\"k\">${</span><span class=\"nv\">app_donwnload_url</span><span class=\"k\">}</span><span class=\"s2\">' and '</span><span class=\"nv\">$oss_app_download_qrcode_url</span><span class=\"s2\">'\"</span>\n        <span class=\"nv\">app_donwnload_url</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">pgy_app_donwnload_url</span><span class=\"k\">}</span><span class=\"s1\">'\\n'</span>oss下载地址:<span class=\"nv\">$oss_app_download_qrcode_url</span>\n    <span class=\"k\">fi</span>\n<span class=\"c\">#    app_donwnload_url=$oss_app_download_qrcode_url</span>\n    \n    <span class=\"nb\">echo</span> <span class=\"s2\">\"通知 COME下载地址：'</span><span class=\"k\">${</span><span class=\"nv\">app_donwnload_url</span><span class=\"k\">}</span><span class=\"s2\">'\"</span>\n\n    \n    curl <span class=\"s1\">'https://oapi.dingtalk.com/robot/send?access_token='</span><span class=\"k\">${</span><span class=\"nv\">access_token</span><span class=\"k\">}</span> <span class=\"se\">\\</span>\n        <span class=\"nt\">-H</span> <span class=\"s1\">'Content-Type: application/json'</span> <span class=\"se\">\\</span>\n        <span class=\"nt\">-d</span> <span class=\"s1\">'{\"msgtype\": \"text\",\n            \"at\": {\n            \"atMobiles\":[\n                \"这\"\n                \"里\"\n                \"是\"\n                \"钉\"\n                \"钉\"\n                \"账\"\n                \"号\"\n            ],\n            \"isAtAll\": false\n            },\n             \"text\": {\n                  \"content\": \"'</span><span class=\"k\">${</span><span class=\"nv\">ProductName</span><span class=\"k\">}</span><span class=\"s1\">' App更新：'</span><span class=\"k\">${</span><span class=\"nv\">title</span><span class=\"k\">}</span><span class=\"s1\">'\\n'</span><span class=\"k\">${</span><span class=\"nv\">modify_msg</span><span class=\"k\">}</span><span class=\"s1\">'\\n下载地址：https://www.pgyer.com/'</span><span class=\"k\">${</span><span class=\"nv\">app_donwnload_url</span><span class=\"k\">}</span><span class=\"s1\">'\"            }\n           }'</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'///-------------------------------------------------------'</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'/// 发送通知 '</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'///-------------------------------------------------------'</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h3 id=\"22-流程设计\">2.2 流程设计：</h3>\n\n<h4 id=\"221-构建前\">2.2.1 构建前：</h4>\n\n<ul>\n  <li>入参设置</li>\n</ul>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#入参设置</span>\n<span class=\"k\">function </span>coustomSettings<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"c\">#需要打包的target</span>\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$1</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">echo</span> <span class=\"s2\">\"error: TARGET_NAME 不能为空 退出\"</span>\n        <span class=\"nb\">exit </span>1\n    <span class=\"k\">else\n        </span><span class=\"nb\">export </span><span class=\"nv\">TARGET_NAME</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n    <span class=\"k\">fi</span>\n\n    <span class=\"c\">#工程所在目录，如果在根目录则为${WORKSPACE}</span>\n    \n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$2</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">export </span><span class=\"nv\">projectDir</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">TARGET_NAME</span><span class=\"k\">}</span>\n    <span class=\"k\">else\n        </span><span class=\"nb\">export </span><span class=\"nv\">projectDir</span><span class=\"o\">=</span><span class=\"nv\">$2</span>\n    <span class=\"k\">fi</span>\n<span class=\"c\">#    export projectDir=YPCProject</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"TARGET_NAME=\"</span><span class=\"nv\">$TARGET_NAME</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"projectDir=\"</span><span class=\"nv\">$projectDir</span>\n\n<span class=\"o\">}</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<ul>\n  <li>发布设置：</li>\n</ul>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#发布及归档的相关的设置</span>\n<span class=\"k\">function </span>publishSettings<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$1</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">echo</span> <span class=\"s1\">'///渠道号入参 为空'</span>\n        <span class=\"nb\">export </span><span class=\"nv\">pgyChannel</span><span class=\"o\">=</span>Dev\n    <span class=\"k\">else\n        </span><span class=\"nb\">echo</span> <span class=\"s1\">'///渠道号入参 不为空'</span>\n        <span class=\"nb\">export </span><span class=\"nv\">pgyChannel</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n    <span class=\"k\">fi\n    \n    </span><span class=\"nb\">echo</span> <span class=\"s2\">\"////渠道号\"</span><span class=\"k\">${</span><span class=\"nv\">pgyChannel</span><span class=\"k\">}</span>\n    \n    <span class=\"c\">#声明蒲公英分发调用APi的pgyAPIKey</span>\n    <span class=\"nb\">export </span><span class=\"nv\">pgyAPIKey</span><span class=\"o\">=</span><span class=\"s2\">\"pgyAPIKey\"</span>\n    \n    <span class=\"c\">#钉钉发送通知机器人的access_token</span>\n    <span class=\"nb\">export </span><span class=\"nv\">access_token</span><span class=\"o\">=</span><span class=\"s2\">\"access_token\"</span>\n\n    <span class=\"c\">#AppStore的token</span>\n    <span class=\"nb\">export </span><span class=\"nv\">appStore_apiIssuer</span><span class=\"o\">=</span><span class=\"s2\">\"appStore_apiIssuer\"</span>\n    <span class=\"nb\">export </span><span class=\"nv\">appStore_apikey</span><span class=\"o\">=</span><span class=\"s2\">\"appStore_apikey\"</span>\n            \n    <span class=\"c\">#bugly的token</span>\n    <span class=\"nb\">export </span><span class=\"nv\">bugly_appid</span><span class=\"o\">=</span><span class=\"s2\">\"bugly_appid\"</span>\n    <span class=\"nb\">export </span><span class=\"nv\">bugly_appkey</span><span class=\"o\">=</span><span class=\"s2\">\"bugly_appkey\"</span>\n<span class=\"o\">}</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<ul>\n  <li>通知设置</li>\n</ul>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#通知相关的设置（pgy渠道及apikey）</span>\n<span class=\"k\">function </span>notificationSettings<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"nv\">notificationSettings</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"k\">${</span><span class=\"nv\">notificationSettings</span><span class=\"k\">}</span> <span class=\"o\">=</span> <span class=\"s2\">\"1\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">echo</span> <span class=\"s1\">'///静默入参 不为空'</span>\n        <span class=\"nb\">export </span><span class=\"nv\">notificationSilent</span><span class=\"o\">=</span><span class=\"nv\">$notificationSettings</span>\n    <span class=\"k\">else\n        </span><span class=\"nb\">echo</span> <span class=\"s1\">'///静默入参 为空 或者不为1 不发通知'</span>\n    <span class=\"k\">fi\n    \n    </span><span class=\"nb\">echo</span> <span class=\"s2\">\"////静默通知=\"</span><span class=\"k\">${</span><span class=\"nv\">notificationSilent</span><span class=\"k\">}</span>\n<span class=\"o\">}</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<ul>\n  <li>\n    <p>参数获取:</p>\n\n    <p>通过xcode工具获取工程项目自带的参数</p>\n  </li>\n</ul>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#获取工程配置信息</span>\n<span class=\"k\">function </span>initInfoPlistParms<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"c\">#Plist先写死。后续可考虑改成搜索</span>\n    <span class=\"nb\">cd</span> <span class=\"k\">${</span><span class=\"nv\">CurDir</span><span class=\"k\">}</span>/<span class=\"k\">${</span><span class=\"nv\">projectDir</span><span class=\"k\">}</span>\n    <span class=\"nv\">versionKey</span><span class=\"o\">=</span><span class=\"s2\">\"MARKETING_VERSION\"</span>\n    <span class=\"nv\">bundleID</span><span class=\"o\">=</span><span class=\"s2\">\"PRODUCT_BUNDLE_IDENTIFIER\"</span>\n    <span class=\"nv\">bundleNo</span><span class=\"o\">=</span><span class=\"s2\">\"CURRENT_PROJECT_VERSION\"</span>\n    <span class=\"nv\">platformName</span><span class=\"o\">=</span><span class=\"s2\">\"PLATFORM_NAME\"</span>\n    <span class=\"nv\">productName</span><span class=\"o\">=</span><span class=\"s2\">\"PRODUCT_NAME\"</span>\n    <span class=\"c\">#将要获取的key设置成数组</span>\n    <span class=\"nv\">buildSettingsGrepKeyArray</span><span class=\"o\">=(</span><span class=\"nv\">$versionKey</span> <span class=\"nv\">$bundleID</span> <span class=\"nv\">$bundleNo</span> <span class=\"nv\">$platformName</span> <span class=\"nv\">$productName</span><span class=\"o\">)</span>\n    <span class=\"nv\">buildSettingsGrepKey</span><span class=\"o\">=</span><span class=\"s2\">\"\"</span>\n    <span class=\"k\">for</span><span class=\"o\">((</span> <span class=\"nv\">i</span><span class=\"o\">=</span>0<span class=\"p\">;</span>i&lt;<span class=\"k\">${#</span><span class=\"nv\">buildSettingsGrepKeyArray</span><span class=\"p\">[@]</span><span class=\"k\">}</span><span class=\"p\">;</span>i++<span class=\"o\">))</span>\n    <span class=\"k\">do\n        </span><span class=\"nb\">echo</span> <span class=\"s2\">\"【获取Plist参数】遍历 idx=\"</span><span class=\"nv\">$i</span> <span class=\"s2\">\"value=\"</span> <span class=\"k\">${</span><span class=\"nv\">buildSettingsGrepKeyArray</span><span class=\"p\">[i]</span><span class=\"k\">}</span>\n        <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$buildSettingsGrepKey</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n            </span><span class=\"nv\">buildSettingsGrepKey</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">buildSettingsGrepKeyArray</span><span class=\"p\">[i]</span><span class=\"k\">}</span><span class=\"p\">;</span>\n        <span class=\"k\">else\n            </span>buildSettingsGrepKey+<span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"se\">\\|</span><span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">buildSettingsGrepKeyArray</span><span class=\"p\">[i]</span><span class=\"k\">}</span><span class=\"p\">;</span>\n        <span class=\"k\">fi\n    done</span><span class=\"p\">;</span>\n    <span class=\"c\">#将数组拼接成 grep 参数</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"【获取Plist参数】key：\"</span><span class=\"nv\">$buildSettingsGrepKey</span>\n\n    <span class=\"c\">#-w 防止模糊匹配 比如  PRODUCT_NAME 和 FULL_PRODUCT_NAME</span>\n    <span class=\"nv\">buildSettings</span><span class=\"o\">=</span><span class=\"sb\">`</span>xcodebuild <span class=\"nt\">-showBuildSettings</span> <span class=\"nt\">-target</span> <span class=\"k\">${</span><span class=\"nv\">TARGET_NAME</span><span class=\"k\">}</span> | <span class=\"nb\">grep</span> <span class=\"nt\">-w</span> <span class=\"nv\">$buildSettingsGrepKey</span><span class=\"sb\">`</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"【获取Plist参数】result：\"</span><span class=\"nv\">$buildSettings</span>\n    \n    <span class=\"c\">#取值数组</span>\n    <span class=\"nv\">buildSettingsGrepValueArray</span><span class=\"o\">=[]</span>\n    <span class=\"k\">for</span><span class=\"o\">((</span> <span class=\"nv\">i</span><span class=\"o\">=</span>0<span class=\"p\">;</span>i&lt;<span class=\"k\">${#</span><span class=\"nv\">buildSettingsGrepKeyArray</span><span class=\"p\">[@]</span><span class=\"k\">}</span><span class=\"p\">;</span>i++<span class=\"o\">))</span>\n    <span class=\"k\">do</span>\n        <span class=\"c\">#右截断</span>\n        <span class=\"nv\">value</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">buildSettings</span><span class=\"p\">#*</span><span class=\"k\">${</span><span class=\"nv\">buildSettingsGrepKeyArray</span><span class=\"p\">[i]</span><span class=\"k\">}</span><span class=\"p\"> = </span><span class=\"k\">}</span>\n        <span class=\"k\">for</span><span class=\"o\">((</span> <span class=\"nv\">j</span><span class=\"o\">=</span>0<span class=\"p\">;</span>j&lt;<span class=\"k\">${#</span><span class=\"nv\">buildSettingsGrepKeyArray</span><span class=\"p\">[@]</span><span class=\"k\">}</span><span class=\"p\">;</span>j++<span class=\"o\">))</span>\n        <span class=\"k\">do</span>\n            <span class=\"c\">#由于grep顺序不保证，遍历所有key进行右截断</span>\n            <span class=\"nv\">value</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">value</span><span class=\"p\">%</span><span class=\"k\">${</span><span class=\"nv\">buildSettingsGrepKeyArray</span><span class=\"p\">[j]</span><span class=\"k\">}</span><span class=\"p\">*</span><span class=\"k\">}</span>\n        <span class=\"k\">done</span><span class=\"p\">;</span>\n        <span class=\"nv\">value</span><span class=\"o\">=</span><span class=\"sb\">`</span><span class=\"nb\">echo</span> <span class=\"k\">${</span><span class=\"nv\">value</span><span class=\"k\">}</span> | <span class=\"nb\">sed</span> <span class=\"s1\">'s/\\ //g'</span><span class=\"sb\">`</span>\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"【获取Plist参数】i=\"</span><span class=\"nv\">$i</span> <span class=\"s2\">\"value=\"</span><span class=\"nv\">$value</span><span class=\"s2\">\"。\"</span>\n        <span class=\"c\">#填回取值数组</span>\n        buildSettingsGrepValueArray[i]<span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">value</span><span class=\"k\">}</span>\n    <span class=\"k\">done</span><span class=\"p\">;</span>\n    \n    <span class=\"c\">#定义全部变量</span>\n    <span class=\"nb\">export </span><span class=\"nv\">xcodeVersion3number</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">buildSettingsGrepValueArray</span><span class=\"p\">[0]</span><span class=\"k\">}</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"【获取Plist参数】版本号：\"</span><span class=\"nv\">$xcodeVersion3number</span><span class=\"s2\">\"。\"</span>\n\n    <span class=\"nb\">export </span><span class=\"nv\">xcodeBundleID</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">buildSettingsGrepValueArray</span><span class=\"p\">[1]</span><span class=\"k\">}</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"【获取Plist参数】包名：\"</span><span class=\"nv\">$xcodeBundleID</span><span class=\"s2\">\"。\"</span>\n\n    <span class=\"nb\">export </span><span class=\"nv\">xcodebundleNo</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">buildSettingsGrepValueArray</span><span class=\"p\">[2]</span><span class=\"k\">}</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"【获取Plist参数】build号：\"</span><span class=\"nv\">$xcodebundleNo</span><span class=\"s2\">\"。\"</span>\n    \n    <span class=\"nb\">export </span><span class=\"nv\">xcodePlatformName</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">buildSettingsGrepValueArray</span><span class=\"p\">[3]</span><span class=\"k\">}</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"【获取Plist参数】PlatformName：\"</span><span class=\"nv\">$xcodePlatformName</span><span class=\"s2\">\"。\"</span>\n    \n    <span class=\"nb\">export </span><span class=\"nv\">xcodeProductName</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">buildSettingsGrepValueArray</span><span class=\"p\">[4]</span><span class=\"k\">}</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"【获取Plist参数】ProductName：\"</span><span class=\"nv\">$xcodeProductName</span><span class=\"s2\">\"。\"</span>\n    <span class=\"nb\">cd</span> ..\n<span class=\"o\">}</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<ul>\n  <li>构建号设置：</li>\n</ul>\n\n<p>​\t设置构建号，可以避免每次构建的build重复，导致在appstore后台管理构建时的紊乱，也便于追溯构建代码版本等，而如果可以通过自动化的方式进行构建号的设置就更好了，这里提供一种设置思路：获取当前日期+流水线构建号(自增)，可以构建流水线内保证全局唯一：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#自动(自增)修改构建号</span>\n<span class=\"k\">function </span>modify_build_no<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"nb\">cd</span> <span class=\"k\">${</span><span class=\"nv\">CurDir</span><span class=\"k\">}</span>/<span class=\"k\">${</span><span class=\"nv\">projectDir</span><span class=\"k\">}</span>\n    <span class=\"nb\">export </span><span class=\"nv\">BuildNo</span><span class=\"o\">=</span><span class=\"sb\">`</span><span class=\"nb\">date</span> +%Y%m%d<span class=\"sb\">`</span>\n    <span class=\"c\">#BuildNo，可以采用拼接日期+构建方式+流水线自增号来识别构建包的来源（构建方式：dailybuild、TestFlight、Release、TFInner）</span>\n    <span class=\"nv\">BuildNo</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">BuildNo</span><span class=\"k\">}</span>.<span class=\"nv\">$1</span>.<span class=\"k\">${</span><span class=\"nv\">SYS_PIPELINE_BUILD_NUMBER</span><span class=\"k\">}</span>\n<span class=\"c\">#    plist_path=${CurDir}/${projectDir}/${projectDir}/Info.plist</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"【获取Plist参数】路径：\"</span><span class=\"nv\">$plist_path</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"【设置Plist参数】build：\"</span><span class=\"nv\">$BuildNo</span>    \n<span class=\"c\">#    /usr/libexec/PlistBuddy -c \"Set :CFBundleVersion ${BuildNo}\" ${plist_path}</span>\n    agvtool new-version <span class=\"nt\">-all</span> <span class=\"k\">${</span><span class=\"nv\">BuildNo</span><span class=\"k\">}</span>\n    <span class=\"nb\">cd</span> -\n<span class=\"o\">}</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h4 id=\"222-构建中\">2.2.2 构建中：</h4>\n\n<ul>\n  <li>\n    <p>执行构建：</p>\n\n    <p>在完成了所有必要的构建前的设置之后，可以进行构建流程：</p>\n  </li>\n</ul>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#执行构建</span>\n<span class=\"k\">function </span>build<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$1</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">echo</span> <span class=\"s2\">\"error: configurationName 不能为空 退出\"</span>\n        <span class=\"nb\">exit </span>1\n    <span class=\"k\">fi</span>\n    <span class=\"c\">#定义项目前缀,生成文件时使用</span>\n    <span class=\"nb\">export </span><span class=\"nv\">PrefixID</span><span class=\"o\">=</span>PSC_\n\n    <span class=\"c\">#设置根目录</span>\n    <span class=\"nb\">export </span><span class=\"nv\">CurDir</span><span class=\"o\">=</span><span class=\"sb\">`</span><span class=\"nb\">pwd</span><span class=\"sb\">`</span>\n    \n    <span class=\"c\">#进行打包的schemeName</span>\n    <span class=\"nb\">export </span><span class=\"nv\">schemeName</span><span class=\"o\">=</span>dailybuildipa\n    \n    <span class=\"c\">#指定编译 配置 configuration</span>\n    <span class=\"nv\">configurationNameArray</span><span class=\"o\">=(</span>DailyBuild TestFlight Release TFInner<span class=\"o\">)</span>\n    <span class=\"nb\">export </span><span class=\"nv\">configurationName</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">configurationNameArray</span><span class=\"p\">[</span><span class=\"nv\">$1</span><span class=\"p\">]</span><span class=\"k\">}</span>\n\n    <span class=\"c\">#指定编译脚本路径</span>\n    <span class=\"c\">#TODO: 这里需要匹配下当前脚本所在的目录</span>\n    <span class=\"nb\">export </span><span class=\"nv\">buildsh_dir</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">CurDir</span><span class=\"k\">}</span>/PSC_iOS_Build_SH\n\n    <span class=\"c\">#设置plist参数</span>\n    modify_build_no <span class=\"nv\">$1</span>\n\n    <span class=\"c\">#读取plist参数</span>\n    initInfoPlistParms\n    \n    <span class=\"c\">#执行构建</span>\n    bash <span class=\"nv\">$buildsh_dir</span>/build_sh.sh\n<span class=\"o\">}</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>构建流程设计包括：</p>\n\n<ul>\n  <li>设置环境变量</li>\n  <li>\n    <p>设置内部变量</p>\n  </li>\n  <li>\n    <p>初始化环境</p>\n  </li>\n  <li>\n    <p>mPaas设置（可选）</p>\n  </li>\n  <li>\n    <p>执行pod</p>\n  </li>\n  <li>\n    <p>构建工具适配（可选）</p>\n  </li>\n  <li>执行构建</li>\n</ul>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n</pre></td><td class=\"rouge-code\"><pre><span class=\"k\">function </span>build<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"c\">#设置内部环境变量</span>\n    initDevopsEnv\n \n    <span class=\"c\">#设置内部环境变量</span>\n    createInternalEnv\n        \n    <span class=\"c\">#初始化环境</span>\n    init_env\n\n    <span class=\"c\">#执行pod之前，先配置mPaas在当前环境下的配置文件</span>\n    mPaaSConfigSet\n    \n    <span class=\"c\">#执行pod</span>\n    pod_install\n\n    <span class=\"c\">#fix xcode 14.3 cocoapods bug</span>\n    fiXCode143\n\n    <span class=\"c\">#执行构建</span>\n    buildProject\n\n    <span class=\"c\">#执行构建归档操作</span>\n    collection\n    \n    <span class=\"c\">#上传（发布）安装包，供下载安装</span>\n    bash <span class=\"nv\">$buildsh_dir</span>/<span class=\"nv\">$build_ext_fold</span>/<span class=\"nv\">$publish_sh</span>\n\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"k\">${</span><span class=\"nv\">configurationName</span><span class=\"k\">}</span> <span class=\"o\">=</span> <span class=\"s2\">\"DailyBuild\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then</span>\n        <span class=\"c\">#通知</span>\n        bash <span class=\"nv\">$buildsh_dir</span>/<span class=\"nv\">$build_ext_fold</span>/<span class=\"nv\">$notification_sh</span>\n    <span class=\"k\">fi</span>\n<span class=\"o\">}</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>​\t构建具体的思路可以参考源码，这里不再赘述</p>\n\n<h4 id=\"223-构建后\">2.2.3 构建后：</h4>\n\n<ul>\n  <li>归档</li>\n</ul>\n\n<p>为什么要归档：</p>\n\n<p>归档主要是为了对构建的安装包IPA及dSYM进行一一对应，由于dailybuild都是在团队内分发，因此这边考虑只有在testflight及appstore时才进行归档。</p>\n\n<p>此外；如果使用bugly进行崩溃收集，bugly已经不支持手动传dSYM，需要在构建时一并实现。</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n</pre></td><td class=\"rouge-code\"><pre><span class=\"k\">function </span>upload_dSYM<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n\t\t<span class=\"c\">#这里可以根据各自情况，存在dSYM文件</span>\n<span class=\"o\">}</span>\n\n<span class=\"k\">function </span>upload_dSYM_to_bugly<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"nb\">export </span><span class=\"nv\">p</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">dSYM_dict_PATH</span><span class=\"k\">}</span>\n    \n    <span class=\"c\">#根据不同的应用进行设置</span>\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"k\">${</span><span class=\"nv\">TARGET_NAME</span><span class=\"k\">}</span> <span class=\"o\">=</span> <span class=\"s2\">\"PSCiOS\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nv\">bugly_appid</span><span class=\"o\">=</span>xxx\n        <span class=\"nv\">bugly_appkey</span><span class=\"o\">=</span>yyy\n    <span class=\"k\">fi\n    \n    </span><span class=\"nb\">echo</span> <span class=\"s1\">'/// 上传 dsym bugly '</span><span class=\"k\">${</span><span class=\"nv\">v</span><span class=\"k\">}</span><span class=\"s1\">'pkgName='</span><span class=\"k\">${</span><span class=\"nv\">pkgName</span><span class=\"k\">}</span>\n    \n    <span class=\"c\">#切换java 版本</span>\n    java <span class=\"nt\">-version</span>\n    jdk8\n    java <span class=\"nt\">-version</span>\n    \n    <span class=\"nv\">bugly_jar_path</span><span class=\"o\">=</span><span class=\"nv\">$buildsh_dir</span>/<span class=\"nv\">$build_ext_fold</span>/collection_res/buglyqq-upload-symbol/buglyqq-upload-symbol.jar\n    \n    java <span class=\"nt\">-jar</span> <span class=\"k\">${</span><span class=\"nv\">bugly_jar_path</span><span class=\"k\">}</span> <span class=\"nt\">-appid</span> <span class=\"k\">${</span><span class=\"nv\">bugly_appid</span><span class=\"k\">}</span> <span class=\"nt\">-appkey</span> <span class=\"k\">${</span><span class=\"nv\">bugly_appkey</span><span class=\"k\">}</span> <span class=\"nt\">-bundleid</span> <span class=\"k\">${</span><span class=\"nv\">pkgName</span><span class=\"k\">}</span> <span class=\"nt\">-version</span> <span class=\"k\">${</span><span class=\"nv\">v</span><span class=\"k\">}</span> <span class=\"nt\">-platform</span> IOS <span class=\"nt\">-inputSymbol</span> <span class=\"k\">${</span><span class=\"nv\">p</span><span class=\"k\">}</span>\n<span class=\"o\">}</span>\n\n<span class=\"k\">function </span>collection<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"nb\">export </span><span class=\"nv\">v</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">xcodeVersion3number</span><span class=\"k\">}</span>.<span class=\"k\">${</span><span class=\"nv\">BuildNo</span><span class=\"k\">}</span>\n    <span class=\"nb\">export </span><span class=\"nv\">pkgName</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">xcodeBundleID</span><span class=\"k\">}</span>\n\n    <span class=\"c\">#上传到bugly符号表</span>\n    upload_dSYM_to_bugly\n\n    <span class=\"c\">#上传dSYM</span>\n    upload_dSYM\n<span class=\"o\">}</span>\n\n<span class=\"c\">#归档</span>\ncollection\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<ul>\n  <li>发布</li>\n</ul>\n\n<p>归档后，对安装包进行分发，分发也分dailybuild与release：</p>\n\n<p>dailybuild:目前采用发布到蒲公英渠道：<a href=\"#2.1.3\">2.1.3 参数3(可选)：渠道号</a></p>\n\n<p>Release:发布到AppStore</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n</pre></td><td class=\"rouge-code\"><pre>    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"k\">${</span><span class=\"nv\">configurationName</span><span class=\"k\">}</span> <span class=\"o\">=</span> <span class=\"s2\">\"Release\"</span> <span class=\"o\">]</span> <span class=\"o\">||</span> <span class=\"o\">[</span> <span class=\"k\">${</span><span class=\"nv\">configurationName</span><span class=\"k\">}</span> <span class=\"o\">=</span> <span class=\"s2\">\"TestFlight\"</span> <span class=\"o\">]</span> <span class=\"o\">||</span> <span class=\"o\">[</span> <span class=\"k\">${</span><span class=\"nv\">configurationName</span><span class=\"k\">}</span> <span class=\"o\">=</span> <span class=\"s2\">\"TFInner\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then</span>\n           <span class=\"c\">#TFInner 、TestFlight &amp; appstore 上传到appstore</span>\n        <span class=\"nb\">echo</span> <span class=\"s1\">'/// 上传App Store 开始'</span>\n        xcrun altool <span class=\"nt\">--validate-app</span> <span class=\"nt\">-f</span>  <span class=\"nv\">$IPA_PATH</span> <span class=\"nt\">--type</span>  ios  <span class=\"nt\">--apiKey</span> <span class=\"nv\">$appStore_apikey</span> <span class=\"nt\">--apiIssuer</span> <span class=\"nv\">$appStore_apiIssuer</span>\n        xcrun altool <span class=\"nt\">--upload-app</span> <span class=\"nt\">-f</span>  <span class=\"nv\">$IPA_PATH</span> <span class=\"nt\">--type</span>  ios  <span class=\"nt\">--apiKey</span> <span class=\"nv\">$appStore_apikey</span> <span class=\"nt\">--apiIssuer</span> <span class=\"nv\">$appStore_apiIssuer</span>\n        <span class=\"nb\">echo</span> <span class=\"s1\">'/// 上传App Store 结束'</span>\n\t\t<span class=\"k\">fi</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<ul>\n  <li>通知</li>\n</ul>\n\n<p>通知可以有很多种方式，由于笔者团队使用钉钉，所以这里举个钉钉机器人例子：<a href=\"#2.1.4\">2.1.4 参数4(可选)：是否静默通知</a></p>\n\n","name":"2023-08-08-iOS-话外篇-构建详解.md","previous":{"id":"/2023/08/03/iOS-客户端在内网联调时的解决方案","tags":[],"relative_path":"_posts/2023-08-03-iOS-客户端在内网联调时的解决方案.md","collection":"posts","name":"2023-08-03-iOS-客户端在内网联调时的解决方案.md","url":"/2023/08/03/iOS-%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%9C%A8%E5%86%85%E7%BD%91%E8%81%94%E8%B0%83%E6%97%B6%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/","title":"iOS客户端在内网联调时的解决方案","date":"2023-08-03 00:00:00 +0800","categories":[],"path":"_posts/2023-08-03-iOS-客户端在内网联调时的解决方案.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/home-bg-geek.jpg","slug":"iOS-客户端在内网联调时的解决方案","ext":".md"},"output":"<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"google-site-verification\" content=\"xBT4GhYoi5qRD5tr338pgPM5OWHHIDR6mNg1a3euekI\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, viewport-fit=cover\">\n    <meta name=\"description\" content=\"与你一起发现更大的世界。\">\n    <meta name=\"keywords\"  content=\"PaysonChen,iOS,流媒体\">\n    <meta name=\"theme-color\" content=\"#000000\">\n    \n    <!-- Open Graph -->\n    <meta property=\"og:title\" content=\"iOS话外篇：构建详解 - PaysonChen的博客 | PaysonChen Blog\">\n    \n    <meta property=\"og:type\" content=\"article\">\n    <meta property=\"og:description\" content=\"iOS话外篇：构建详解\n\">\n    \n    \n    <meta property=\"article:published_time\" content=\"2023-08-08T00:00:00Z\">\n    \n    \n    <meta property=\"article:author\" content=\"PaysonChen\">\n    \n    \n    \n    <meta property=\"og:image\" content=\"http://localhost:4000\">\n    <meta property=\"og:url\" content=\"http://localhost:4000/2023/08/08/iOS-%E8%AF%9D%E5%A4%96%E7%AF%87-%E6%9E%84%E5%BB%BA%E8%AF%A6%E8%A7%A3/\">\n    <meta property=\"og:site_name\" content=\"PaysonChen的博客 | PaysonChen Blog\">\n    \n    <title>iOS话外篇：构建详解 - PaysonChen的博客 | PaysonChen Blog</title>\n\n    <!-- Web App Manifest -->\n    <link rel=\"manifest\" href=\"/pwa/manifest.json\">\n\n    <!-- Favicon -->\n    <link rel=\"shortcut icon\" href=\"/img/favicon.ico\">\n    \n    <!-- Canonical URL -->\n    <link rel=\"canonical\" href=\"http://localhost:4000/2023/08/08/iOS-%E8%AF%9D%E5%A4%96%E7%AF%87-%E6%9E%84%E5%BB%BA%E8%AF%A6%E8%A7%A3/\">\n\n    <!-- Bootstrap Core CSS -->\n    <link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\">\n\n    <!-- Custom CSS -->\n    <link rel=\"stylesheet\" href=\"/css/hux-blog.min.css\">\n\n    <!-- Custom Fonts -->\n    <!-- <link href=\"http://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\"> -->\n    <!-- Hux change font-awesome CDN to qiniu -->\n    <link href=\"//cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\">\n\n\n    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->\n    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->\n    <!--[if lt IE 9]>\n        <script src=\"https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js\"></script>\n        <script src=\"https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js\"></script>\n    <![endif]-->\n\n    <!-- ga & ba script hoook -->\n    <script></script>\n</head>\n\n\n<!-- hack iOS CSS :active style -->\n<body ontouchstart=\"\">\n\n    <!-- Navigation -->\n\n    <nav class=\"navbar navbar-default navbar-custom navbar-fixed-top\">\n        \n        <div class=\"container-fluid\">\n            <!-- Brand and toggle get grouped for better mobile display -->\n            <div class=\"navbar-header page-scroll\">\n                <button type=\"button\" class=\"navbar-toggle\">\n                    <span class=\"sr-only\">Toggle navigation</span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                </button>\n                <a class=\"navbar-brand\" href=\"/\">PaysonChen Blog</a>\n            </div>\n\n            <!-- Collect the nav links, forms, and other content for toggling -->\n            <div id=\"huxblog_navbar\">\n                <div class=\"navbar-collapse\">\n                    <ul class=\"nav navbar-nav navbar-right\">\n                        <li>\n                            <a href=\"/\">Home</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        <li>\n                            <a href=\"/about/\">About</a>\n                        </li>\n                        \n                        \n                        \n                        <li>\n                            <a href=\"/archive/\">Archive</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        <li class=\"search-icon\">\n                            <a href=\"javascript:void(0)\">\n                                <i class=\"fa fa-search\"></i>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n            <!-- /.navbar-collapse -->\n        </div>\n        <!-- /.container -->\n    </nav>\n\n    <script>\n        // Drop Bootstarp low-performance Navbar\n        // Use customize navbar with high-quality material design animation\n        // in high-perf jank-free CSS3 implementation\n        var $body = document.body;\n        var $toggle = document.querySelector('.navbar-toggle');\n        var $navbar = document.querySelector('#huxblog_navbar');\n        var $collapse = document.querySelector('.navbar-collapse');\n\n        var __HuxNav__ = {\n            close: function () {\n                $navbar.className = \" \";\n                // wait until animation end.\n                setTimeout(function () {\n                    // prevent frequently toggle\n                    if ($navbar.className.indexOf('in') < 0) {\n                        $collapse.style.height = \"0px\"\n                    }\n                }, 400)\n            },\n            open: function () {\n                $collapse.style.height = \"auto\"\n                $navbar.className += \" in\";\n            }\n        }\n\n        // Bind Event\n        $toggle.addEventListener('click', function (e) {\n            if ($navbar.className.indexOf('in') > 0) {\n                __HuxNav__.close()\n            } else {\n                __HuxNav__.open()\n            }\n        })\n\n        /**\n         * Since Fastclick is used to delegate 'touchstart' globally\n         * to hack 300ms delay in iOS by performing a fake 'click',\n         * Using 'e.stopPropagation' to stop 'touchstart' event from \n         * $toggle/$collapse will break global delegation.\n         * \n         * Instead, we use a 'e.target' filter to prevent handler\n         * added to document close HuxNav.  \n         *\n         * Also, we use 'click' instead of 'touchstart' as compromise\n         */\n        document.addEventListener('click', function (e) {\n            if (e.target == $toggle) return;\n            if (e.target.className == 'icon-bar') return;\n            __HuxNav__.close();\n        })\n    </script>\n    <!-- Search -->\n<div class=\"search-page\">\n  <div class=\"search-icon-close-container\">\n    <span class=\"search-icon-close\">\n      <i class=\"fa fa-chevron-down\"></i>\n    </span>\n  </div>\n  <div class=\"search-main container\">\n    <div class=\"row\">\n      <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n        <form></form>\n        <input type=\"text\" id=\"search-input\" placeholder=\"$ grep...\">\n        </form>\n        <div id=\"search-results\" class=\"mini-post-list\"></div>\n      </div>\n    </div>\n  </div>\n</div>\n\n    <!-- Image to hack wechat -->\n<!-- <img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\"> -->\n<!-- <img src=\"/img/home-bg-geek.jpg\" width=\"0\" height=\"0\"> -->\n\n<!-- Post Header -->\n\n\n\n<style type=\"text/css\">\n    header.intro-header{\n        position: relative;\n        background-image: url('/img/home-bg-geek.jpg');\n        background: ;\n    }\n\n    \n</style>\n\n<header class=\"intro-header\" >\n\n    <div class=\"header-mask\"></div>\n    \n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <div class=\"post-heading\">\n                    <div class=\"tags\">\n                        \n                    </div>\n                    <h1>iOS话外篇：构建详解</h1>\n                    \n                    <h2 class=\"subheading\"></h2>\n                    <span class=\"meta\">Posted by PaysonChen on August 8, 2023</span>\n                </div>\n            </div>\n        </div>\n    </div>\n</header>\n\n\n\n\n\n\n<!-- Post Content -->\n<article>\n    <div class=\"container\">\n        <div class=\"row\">\n\n    <!-- Post Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                post-container\">\n\n                <!-- Multi-Lingual -->\n                \n\n\t\t\t\t<h1 id=\"ios话外篇构建详解\">iOS话外篇：构建详解</h1>\n\n<h2 id=\"1背景\">1.背景</h2>\n\n<p>想必大多数iOS开发者不陌生，通过xcode 自带的 archive 打包，习惯GUI的同学，可能更倾向于archive打包，虽然archive打包有很多优点：包括可视化、学习门槛低、报错清晰等，但是在团队协作与日常构建中，他的弊端就显现出来了：</p>\n\n<ul>\n  <li>步骤多</li>\n</ul>\n\n<p>​\t\t打包前需要同步代码、打包过程中需要选择签名、打包后要归档、并选择上传包的地方（分发渠道orAppStore）</p>\n\n<ul>\n  <li>时间长</li>\n</ul>\n\n<p>​\t\t构建时间随着工程迭代越来越漫长，大型全量打包可能到数十分钟，archive会阻断当前研发进程，无法利用本机算力之外的其他计算集群资源，影响研效</p>\n\n<ul>\n  <li>灵活不佳</li>\n</ul>\n\n<p>​\t\t构建过程中可能需要对版本的build号进行自增、归档dsym文件、构建通知等，采用archive这些都可能需要手动执行</p>\n\n<ul>\n  <li>可靠性不佳</li>\n</ul>\n\n<p>​\t\t对于分支、代码、签名、构建方式等匹配均需靠人工维护，流程步骤多，容易造成错误，不可靠</p>\n\n<h2 id=\"2构建设计\">2.构建设计</h2>\n\n<p>为了设计一个通用的构建脚本，需要将核心构建流程分层与归类，设计入参、使用构建环境等。程序入口如下：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#通过外部传参 读取自定义参数 2:target_name</span>\n<span class=\"c\"># 2 必须</span>\ncoustomSettings <span class=\"nv\">$2</span>\n\n<span class=\"c\"># 3 (可选) 蒲公英渠道号，拼接url</span>\npublishSettings <span class=\"nv\">$3</span>\n\n<span class=\"c\"># 4 (可选)是否静默通知，有值 则不发通知</span>\nnotificationSettings <span class=\"nv\">$4</span>\n\n<span class=\"c\">#开始构建 1:configuration(0:DailyBuild|1:TestFlight|2:Release|3:TFInner)</span>\n<span class=\"c\">#1 必须</span>\nbuild <span class=\"nv\">$1</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h3 id=\"21入参设计\">2.1入参设计：</h3>\n\n<h4 id=\"211参数1构建方式\">2.1.1参数1：构建方式</h4>\n\n<table>\n  <tbody>\n    <tr>\n      <td>对应工程中的Configuration ，枚举值：0:DailyBuild</td>\n      <td>1:TestFlight</td>\n      <td>2:Release</td>\n      <td>3:TFInner</td>\n    </tr>\n  </tbody>\n</table>\n\n<ul>\n  <li>\n    <p>DailyBuild：用于日常构建，CI/CD</p>\n  </li>\n  <li>\n    <p>TestFlight：用于打灰度包</p>\n  </li>\n  <li>\n    <p>Release：用于打生产包</p>\n  </li>\n  <li>\n    <p>TFInner：用于打内部TF包</p>\n\n    <p>特别说明：由于，Apple的Enterprise证书($299/年)账号申请条件苛刻，通过此方案可以临时解决100台测试设备不足的问题</p>\n  </li>\n</ul>\n\n<h4 id=\"212-参数2target名称\">2.1.2 参数2：Target名称</h4>\n\n<p>工程的TargetName：</p>\n\n<p><img src=\"/img/ios-build/iOS_Build1.png\" alt=\"iOS_Build1\" /></p>\n\n<p><a name=\"2.1.3\"></a></p>\n\n<h4 id=\"213-参数3可选渠道号\">2.1.3 参数3(可选)：渠道号</h4>\n\n<p>​\t在没有使用支持iOS app分发的流水线（类似于腾讯蓝鲸（蓝盾流水线））情况下：本文例子使用蒲公英进行应用分发，为了兼容多渠道并行，用于拼接分发下载地址的url。</p>\n\n<p><img src=\"/img/ios-build/iOS_Build2.png\" alt=\"iOS_Build2\" /></p>\n\n<h5 id=\"2131-第三方分发蒲公英\">2.1.3.1 第三方分发：蒲公英</h5>\n\n<p>​\t流水线通过API进行应用分发，下面说明，渠道号为空与非空的情况：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n</pre></td><td class=\"rouge-code\"><pre>  <span class=\"c\">#其他构建包上传到pgy</span>\n        <span class=\"nb\">echo</span> <span class=\"s1\">'/// 上传 PGY 开始 IPA_PATH='</span><span class=\"k\">${</span><span class=\"nv\">IPA_PATH</span><span class=\"k\">}</span>\n        <span class=\"nb\">echo</span> <span class=\"s1\">'/// 上传 PGY 开始 渠道='</span><span class=\"k\">${</span><span class=\"nv\">pgyChannel</span><span class=\"k\">}</span>\n        <span class=\"nv\">compileEnvironment</span><span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">buildName</span><span class=\"k\">}</span><span class=\"s2\">:</span><span class=\"k\">${</span><span class=\"nv\">git_log</span><span class=\"k\">}</span><span class=\"s2\">\"</span>\n        \n        <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$pgyChannel</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then</span>\n            <span class=\"c\"># 渠道空，则走默认 不指定渠道号的上传</span>\n            curl <span class=\"nt\">-F</span> <span class=\"s1\">'file=@'</span><span class=\"k\">${</span><span class=\"nv\">IPA_PATH</span><span class=\"k\">}</span> <span class=\"nt\">-F</span> <span class=\"s1\">'_api_key='</span><span class=\"k\">${</span><span class=\"nv\">pgyAPIKey</span><span class=\"k\">}</span> <span class=\"nt\">-F</span> <span class=\"s1\">'buildUpdateDescription='</span><span class=\"k\">${</span><span class=\"nv\">compileEnvironment</span><span class=\"k\">}</span> https://www.pgyer.com/apiv2/app/upload\n        <span class=\"k\">else</span>\n            <span class=\"c\"># 渠道非空，走下载地址关联 渠道</span>\n            curl <span class=\"nt\">-F</span> <span class=\"s1\">'file=@'</span><span class=\"k\">${</span><span class=\"nv\">IPA_PATH</span><span class=\"k\">}</span> <span class=\"nt\">-F</span> <span class=\"s1\">'_api_key='</span><span class=\"k\">${</span><span class=\"nv\">pgyAPIKey</span><span class=\"k\">}</span> <span class=\"nt\">-F</span> <span class=\"s1\">'buildUpdateDescription='</span><span class=\"k\">${</span><span class=\"nv\">compileEnvironment</span><span class=\"k\">}</span>  <span class=\"nt\">-F</span> <span class=\"s1\">'buildChannelShortcut='</span><span class=\"k\">${</span><span class=\"nv\">pgyDownloadUrlSubfix</span><span class=\"k\">}</span> https://www.pgyer.com/apiv2/app/upload\n        <span class=\"k\">fi\n                \n        </span><span class=\"nb\">echo</span> <span class=\"s1\">'/// 上传 PGY 结束'</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h5 id=\"2132-扩展阿里云oss云存储分发\">2.1.3.2 扩展：阿里云OSS云存储分发</h5>\n\n<p>基于蒲公英的分发受限于蒲公英上行带宽与收费阈值，探索一种容灾分发方式，避免蒲公英未来服务出现异常时的健壮性。</p>\n\n<p>自行分发需要用Ad-Hoc方式，遵循Apple协议：itms-services://?action=download-manifest&amp;url=</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#添加commit信息到二维码图片上</span>\n<span class=\"k\">function </span>add_log_commit_title_msg_to_qrcode <span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"c\">#二维码打上版本信息</span>\n    <span class=\"c\">#TODO: 这里需要安装下工具 ImageMgick [brew install ImageMgick]</span>\n    <span class=\"nv\">title</span><span class=\"o\">=</span><span class=\"nv\">$xcodeVersion3number</span>.<span class=\"k\">${</span><span class=\"nv\">channel_name</span><span class=\"k\">}</span>.<span class=\"nv\">$configurationName</span>.<span class=\"k\">${</span><span class=\"nv\">BuildNo</span><span class=\"k\">}</span>\n\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nv\">$1</span> <span class=\"o\">=</span> <span class=\"s2\">\"1\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nv\">dst_line_cnt</span><span class=\"o\">=</span>0\n        <span class=\"nb\">export </span><span class=\"nv\">oss_source_log_arr</span><span class=\"o\">=(</span><span class=\"sb\">`</span><span class=\"nb\">echo</span> <span class=\"nv\">$source_log_str</span> | <span class=\"nb\">tr</span> <span class=\"s1\">']['</span> <span class=\"s1\">' '</span><span class=\"sb\">`</span><span class=\"o\">)</span>\n        <span class=\"nb\">export </span><span class=\"nv\">oss_log_line_count</span><span class=\"o\">=</span><span class=\"k\">${#</span><span class=\"nv\">oss_source_log_arr</span><span class=\"p\">[@]</span><span class=\"k\">}</span>\n        <span class=\"nb\">echo</span> <span class=\"s1\">'/// oss 分发： 添加 二维码msg log_line_count='</span><span class=\"nv\">$oss_log_line_count</span>\n\n        <span class=\"k\">for</span><span class=\"o\">((</span> <span class=\"nv\">i</span><span class=\"o\">=</span>0<span class=\"p\">;</span>i&lt;<span class=\"k\">${</span><span class=\"nv\">oss_log_line_count</span><span class=\"k\">}</span><span class=\"p\">;</span>i++<span class=\"o\">))</span>\n        <span class=\"k\">do\n            </span><span class=\"nv\">single_len</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">echo</span> <span class=\"nt\">-n</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">oss_source_log_arr</span><span class=\"p\">[i]</span><span class=\"k\">}</span><span class=\"s2\">\"</span> | <span class=\"nb\">wc</span> <span class=\"nt\">-m</span><span class=\"si\">)</span>\n            <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">oss_source_log_arr</span><span class=\"p\">[i]</span><span class=\"k\">}</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n                </span><span class=\"nv\">oss_singleStr</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">oss_source_log_arr</span><span class=\"p\">[i]</span><span class=\"k\">}</span><span class=\"p\">;</span>\n                <span class=\"nb\">echo</span> <span class=\"s1\">'///--遍历'</span><span class=\"k\">${</span><span class=\"nv\">oss_source_log_arr</span><span class=\"p\">[i]</span><span class=\"k\">}</span><span class=\"s1\">'为空文字长度：'</span><span class=\"nv\">$single_len</span>\n                <span class=\"nv\">dst_line_cnt</span><span class=\"o\">=</span><span class=\"k\">$((</span>dst_line_cnt+1<span class=\"k\">))</span>\n            <span class=\"k\">else\n                </span><span class=\"nv\">line_max_len</span><span class=\"o\">=</span>30\n                <span class=\"nv\">ingle_cnt</span><span class=\"o\">=</span><span class=\"k\">$((</span>single_len <span class=\"o\">/</span> line_max_len<span class=\"k\">))</span>\n\n\n                <span class=\"k\">if</span> <span class=\"o\">((</span>ingle_cnt <span class=\"o\">&gt;</span> 0<span class=\"o\">))</span><span class=\"p\">;</span> <span class=\"k\">then\n                    for</span><span class=\"o\">((</span> <span class=\"nv\">j</span><span class=\"o\">=</span>0<span class=\"p\">;</span>j&lt;<span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">ingle_cnt</span><span class=\"k\">}</span><span class=\"p\">;</span>j++<span class=\"o\">))</span>\n                    <span class=\"k\">do\n                        </span><span class=\"nv\">string</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">oss_source_log_arr</span><span class=\"p\">[i]</span><span class=\"k\">}</span>\n                        <span class=\"nv\">single_line1</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">string</span>:<span class=\"p\">(line_max_len * j)</span>:line_max_len<span class=\"k\">}</span>\n                        <span class=\"nb\">echo</span> <span class=\"s1\">'///--遍历'</span> <span class=\"k\">${</span><span class=\"nv\">oss_source_log_arr</span><span class=\"p\">[i]</span><span class=\"k\">}</span><span class=\"s1\">'文字长度：'</span><span class=\"nv\">$single_len</span><span class=\"s1\">'超阈值阶段：第'</span><span class=\"nv\">$j</span><span class=\"s1\">'行:'</span><span class=\"nv\">$single_line1</span>\n                        oss_singleStr+<span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"se\">\\n</span><span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">single_line1</span><span class=\"k\">}</span><span class=\"p\">;</span>\n                        <span class=\"nv\">dst_line_cnt</span><span class=\"o\">=</span><span class=\"k\">$((</span>dst_line_cnt+1<span class=\"k\">))</span>\n                    <span class=\"k\">done</span><span class=\"p\">;</span>\n                <span class=\"k\">else\n                    </span><span class=\"nb\">echo</span> <span class=\"s1\">'///--遍历'</span> <span class=\"k\">${</span><span class=\"nv\">oss_source_log_arr</span><span class=\"p\">[i]</span><span class=\"k\">}</span><span class=\"s1\">' 文字长度：'</span><span class=\"nv\">$single_len</span>\n                    <span class=\"nv\">dst_line_cnt</span><span class=\"o\">=</span><span class=\"k\">$((</span>dst_line_cnt+1<span class=\"k\">))</span>\n                    oss_singleStr+<span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"se\">\\n</span><span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">oss_source_log_arr</span><span class=\"p\">[i]</span><span class=\"k\">}</span><span class=\"p\">;</span>\n                <span class=\"k\">fi\n            fi\n        done</span><span class=\"p\">;</span>\n        <span class=\"nv\">msg</span><span class=\"o\">=</span><span class=\"nv\">$oss_singleStr</span>\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"/// oss render msg=\"</span><span class=\"nv\">$msg</span>\n        \n        <span class=\"nv\">contentsize_width</span><span class=\"o\">=</span>600\n        <span class=\"nv\">contentsize_height</span><span class=\"o\">=</span><span class=\"k\">$((</span>contentsize_width <span class=\"o\">+</span> <span class=\"nv\">$dst_line_cnt</span> <span class=\"o\">*</span> <span class=\"m\">25</span> <span class=\"o\">+</span> <span class=\"m\">40</span> <span class=\"o\">+</span> <span class=\"m\">40</span><span class=\"k\">))</span> <span class=\"c\">#第一个40是title的高度 第二个40是距离底部空间</span>\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"contentsize_height=\"</span><span class=\"nv\">$contentsize_height</span>\n        <span class=\"c\">#改变原图大小</span>\n        convert <span class=\"nv\">$qrcode_path</span> <span class=\"nt\">-resize</span> <span class=\"k\">${</span><span class=\"nv\">contentsize_width</span><span class=\"k\">}</span>x<span class=\"k\">${</span><span class=\"nv\">contentsize_width</span><span class=\"k\">}</span>^ <span class=\"nt\">-gravity</span> center <span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span>_1.png\n\n        <span class=\"c\">#变高，兼容msg</span>\n        convert <span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span>_1.png <span class=\"nt\">-gravity</span> north <span class=\"nt\">-extent</span> <span class=\"k\">${</span><span class=\"nv\">contentsize_width</span><span class=\"k\">}</span>x<span class=\"k\">${</span><span class=\"nv\">contentsize_height</span><span class=\"k\">}</span> <span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span>_2.png\n\n        <span class=\"c\">#汉字字体</span>\n        <span class=\"nv\">chn_tff_path</span><span class=\"o\">=</span><span class=\"nv\">$build_ext_path</span>/publish_res/chn.ttf\n        \n        <span class=\"c\">#渲染title</span>\n        convert <span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span>_2.png <span class=\"nt\">-gravity</span> north <span class=\"nt\">-pointsize</span> 30 <span class=\"nt\">-font</span> <span class=\"nv\">$chn_tff_path</span> <span class=\"nt\">-fill</span> black <span class=\"nt\">-annotate</span> +0+<span class=\"k\">${</span><span class=\"nv\">contentsize_width</span><span class=\"k\">}</span> <span class=\"nv\">$title</span> <span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span>_3.png\n\n        <span class=\"c\">#渲染msg</span>\n        convert <span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span>_3.png <span class=\"nt\">-gravity</span> north <span class=\"nt\">-pointsize</span> 20 <span class=\"nt\">-font</span> <span class=\"nv\">$chn_tff_path</span> <span class=\"nt\">-fill</span> black <span class=\"nt\">-annotate</span> +0+<span class=\"k\">$((${</span><span class=\"nv\">contentsize_width</span><span class=\"k\">}</span><span class=\"o\">+</span><span class=\"m\">40</span><span class=\"k\">))</span> <span class=\"nv\">$msg</span> <span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span>_4.png\n        <span class=\"nv\">qrcode_path_with_msg</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span>_4.png\n    <span class=\"k\">else</span>\n        <span class=\"c\">#没有传 1 不需要msg，只给title</span>\n        convert <span class=\"nv\">$qrcode_path</span> <span class=\"nt\">-gravity</span> south <span class=\"nt\">-pointsize</span> 10 <span class=\"nt\">-fill</span> gray <span class=\"nt\">-annotate</span> +0+0 <span class=\"nv\">$qrcode_print_msg</span>  <span class=\"nv\">$qrcode_path_with_msg</span>\n        <span class=\"nb\">echo</span> <span class=\"s1\">'/// oss 分发： 添加 二维码title='</span><span class=\"k\">${</span><span class=\"nv\">title</span><span class=\"k\">}</span>\n    <span class=\"k\">fi</span>\n\n<span class=\"o\">}</span>\n\n<span class=\"c\">#发布到阿里云OSS</span>\n<span class=\"k\">function </span>upload_ipa_to_aliyunOSS <span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"c\">#更新plist的键值对：</span>\n    <span class=\"nv\">manifest_path</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">exportPath</span><span class=\"k\">}</span>/manifest.plist\n    <span class=\"nb\">echo</span> <span class=\"s1\">'/// oss 分发： manifest_path='</span><span class=\"k\">${</span><span class=\"nv\">manifest_path</span><span class=\"k\">}</span>\n    \n    <span class=\"nv\">oss_bucket</span><span class=\"o\">=</span><span class=\"s2\">\"cbs-apps-test\"</span>\n    <span class=\"nv\">oss_platform</span><span class=\"o\">=</span><span class=\"s2\">\"iOS\"</span>\n    <span class=\"nv\">oss_bucket_path</span><span class=\"o\">=</span><span class=\"nv\">$oss_platform</span>/<span class=\"k\">${</span><span class=\"nv\">TARGET_NAME</span><span class=\"k\">}</span>/<span class=\"nv\">$configurationName</span>/<span class=\"k\">${</span><span class=\"nv\">channel_name</span><span class=\"k\">}</span>/<span class=\"k\">${</span><span class=\"nv\">BuildNo</span><span class=\"k\">}</span>/<span class=\"k\">${</span><span class=\"nv\">TARGET_NAME</span><span class=\"k\">}</span>_<span class=\"k\">${</span><span class=\"nv\">channel_name</span><span class=\"k\">}</span>_<span class=\"nv\">$configurationName_</span><span class=\"k\">${</span><span class=\"nv\">BuildNo</span><span class=\"k\">}</span>\n    <span class=\"nv\">oss_path</span><span class=\"o\">=</span><span class=\"s2\">\"oss://</span><span class=\"nv\">$oss_bucket</span><span class=\"s2\">/</span><span class=\"nv\">$oss_bucket_path</span><span class=\"s2\">\"</span>\n    <span class=\"nv\">oss_url</span><span class=\"o\">=</span><span class=\"s2\">\"https://</span><span class=\"nv\">$oss_bucket</span><span class=\"s2\">.oss-cn-beijing.aliyuncs.com/</span><span class=\"nv\">$oss_bucket_path</span><span class=\"s2\">\"</span>\n\n    <span class=\"nv\">oss_ipa_upload_url</span><span class=\"o\">=</span><span class=\"nv\">$oss_path</span><span class=\"s2\">\".ipa\"</span>\n    <span class=\"nv\">oss_ipa_url</span><span class=\"o\">=</span><span class=\"nv\">$oss_url</span><span class=\"s2\">\".ipa\"</span>\n\n    <span class=\"c\">#icon下载地址配置</span>\n    <span class=\"nv\">oss_icon_url</span><span class=\"o\">=</span><span class=\"s2\">\"https://cbs-apps-test.oss-cn-beijing.aliyuncs.com/iOS/</span><span class=\"k\">${</span><span class=\"nv\">TARGET_NAME</span><span class=\"k\">}</span><span class=\"s2\">/icon/icon.png\"</span>\n    <span class=\"nv\">oss_icon_fs_url</span><span class=\"o\">=</span><span class=\"s2\">\"https://cbs-apps-test.oss-cn-beijing.aliyuncs.com/iOS/</span><span class=\"k\">${</span><span class=\"nv\">TARGET_NAME</span><span class=\"k\">}</span><span class=\"s2\">/icon/icon_fs.png\"</span>\n\n    \n    <span class=\"c\">#修改ipa下载地址</span>\n    /usr/libexec/PlistBuddy <span class=\"nt\">-c</span> <span class=\"s2\">\"Set :items:0:assets:0:url </span><span class=\"nv\">$oss_ipa_url</span><span class=\"s2\">\"</span> <span class=\"nv\">$manifest_path</span>\n\n    <span class=\"c\">#修改icon地址</span>\n    /usr/libexec/PlistBuddy <span class=\"nt\">-c</span> <span class=\"s2\">\"Set :items:0:assets:1:url </span><span class=\"nv\">$oss_icon_url</span><span class=\"s2\">\"</span> <span class=\"nv\">$manifest_path</span>\n\n    <span class=\"c\">#修改icon full size地址</span>\n    /usr/libexec/PlistBuddy <span class=\"nt\">-c</span> <span class=\"s2\">\"Set :items:0:assets:2:url </span><span class=\"nv\">$oss_icon_fs_url</span><span class=\"s2\">\"</span> <span class=\"nv\">$manifest_path</span>\n\n\n    <span class=\"c\">#传ipa</span>\n    ossutil <span class=\"nb\">cp</span> <span class=\"k\">${</span><span class=\"nv\">IPA_PATH</span><span class=\"k\">}</span> <span class=\"nv\">$oss_ipa_upload_url</span> <span class=\"nt\">-f</span>\n    \n    <span class=\"c\">#传manifest</span>\n    <span class=\"nv\">oss_manifest_extension</span><span class=\"o\">=</span><span class=\"s2\">\"plist\"</span>\n    <span class=\"nv\">oss_manifest_upload_url</span><span class=\"o\">=</span><span class=\"nv\">$oss_path</span><span class=\"s2\">\".\"</span><span class=\"nv\">$oss_manifest_extension</span>\n    <span class=\"nv\">oss_manifest_url</span><span class=\"o\">=</span><span class=\"nv\">$oss_url</span><span class=\"s2\">\".\"</span><span class=\"nv\">$oss_manifest_extension</span>\n    ossutil <span class=\"nb\">cp</span> <span class=\"k\">${</span><span class=\"nv\">manifest_path</span><span class=\"k\">}</span> <span class=\"nv\">$oss_manifest_upload_url</span> <span class=\"nt\">-f</span>\n    \n    <span class=\"c\">#上述做归档后，生成下载二维码</span>\n    <span class=\"nv\">download_url</span><span class=\"o\">=</span><span class=\"s2\">\"itms-services://?action=download-manifest&amp;url=\"</span><span class=\"nv\">$oss_manifest_url</span>\n    <span class=\"nv\">qrcode_path</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">exportPath</span><span class=\"k\">}</span>/<span class=\"k\">${</span><span class=\"nv\">TARGET_NAME</span><span class=\"k\">}</span>_<span class=\"k\">${</span><span class=\"nv\">BuildNo</span><span class=\"k\">}</span>.png\n    \n    <span class=\"c\">#TODO: 这里需要安装下工具 qrencode [brew install qrencode]</span>\n    qrencode <span class=\"nt\">-o</span> <span class=\"nv\">$qrcode_path</span> <span class=\"nv\">$download_url</span>\n    \n    <span class=\"c\">#将二维码上传到oss</span>\n    <span class=\"nv\">oss_qrencode_extension</span><span class=\"o\">=</span><span class=\"s2\">\"png\"</span>\n    <span class=\"nv\">oss_qrencode_upload_url</span><span class=\"o\">=</span><span class=\"nv\">$oss_path</span><span class=\"s2\">\".\"</span><span class=\"nv\">$oss_qrencode_extension</span>\n    <span class=\"nv\">qrcode_path_with_msg</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">qrcode_path</span><span class=\"k\">}</span>_with_msg\n        \n    <span class=\"c\">#如果需要二维码打上log信息则调用</span>\n    <span class=\"nv\">need_msg</span><span class=\"o\">=</span>1\n    add_log_commit_title_msg_to_qrcode <span class=\"nv\">$need_msg</span>\n        \n    <span class=\"c\">#上传到阿里云oss</span>\n    ossutil <span class=\"nb\">cp</span> <span class=\"k\">${</span><span class=\"nv\">qrcode_path_with_msg</span><span class=\"k\">}</span> <span class=\"nv\">$oss_qrencode_upload_url</span> <span class=\"nt\">-f</span>\n    \n    <span class=\"c\">#二维码的url 通知出来</span>\n    <span class=\"nb\">export </span><span class=\"nv\">oss_app_download_qrcode_url</span><span class=\"o\">=</span><span class=\"nv\">$oss_url</span><span class=\"s2\">\".\"</span><span class=\"nv\">$oss_qrencode_extension</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'/// oss 分发： 二维码的oss_app_download_qrcode_url='</span><span class=\"k\">${</span><span class=\"nv\">oss_app_download_qrcode_url</span><span class=\"k\">}</span>\n<span class=\"o\">}</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p><a name=\"2.1.4\"></a></p>\n\n<h4 id=\"214-参数4可选是否静默通知\">2.1.4 参数4(可选)：是否静默通知</h4>\n\n<p>​\t本文例子通过钉钉API发送通知到钉钉群，默认不填发送，有值则不发通知，通知内容整合双分发方案：</p>\n\n<p>​\t下面代码为发送通知的逻辑，请将相应的变量替换成自己的参数</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n</pre></td><td class=\"rouge-code\"><pre>    <span class=\"nv\">modify_msg</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">git_log</span><span class=\"k\">}</span>\n    <span class=\"nv\">ProductName</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">xcodeProductName</span><span class=\"k\">}</span>\n    <span class=\"nv\">downloadPrefix</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">PrefixID</span><span class=\"k\">}</span>\n    <span class=\"nv\">channel</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">pgyChannel</span><span class=\"k\">}</span>\n    <span class=\"nv\">title</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">buildName</span><span class=\"k\">}</span>\n\n    <span class=\"c\">#采用直接 拼 channel后缀</span>\n    <span class=\"nv\">shortUrl</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">downloadPrefix</span><span class=\"k\">}${</span><span class=\"nv\">ProductName</span><span class=\"k\">}${</span><span class=\"nv\">channel</span><span class=\"k\">}</span>\n\n    <span class=\"c\">#蒲公英下载地址</span>\n    <span class=\"nv\">pgy_app_donwnload_url</span><span class=\"o\">=</span><span class=\"s2\">\"https://www.pgyer.com/</span><span class=\"k\">${</span><span class=\"nv\">shortUrl</span><span class=\"k\">}</span><span class=\"s2\">\"</span>\n    \n   <span class=\"c\">#oss下载地址</span>\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$oss_app_download_qrcode_url</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then</span>\n        <span class=\"c\">#为空则使用pgy</span>\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"通知：oss_app_download_qrcode_url 为空则使用pgy：'</span><span class=\"k\">${</span><span class=\"nv\">app_donwnload_url</span><span class=\"k\">}</span><span class=\"s2\">'\"</span>\n        <span class=\"nv\">app_donwnload_url</span><span class=\"o\">=</span><span class=\"nv\">$pgy_app_donwnload_url</span>\n    <span class=\"k\">else</span>\n        <span class=\"c\">#不为空使用 pgy + oss</span>\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"通知：oss_app_download_qrcode_url 不为空使用 pgy + oss则使用pgy + oss：'</span><span class=\"k\">${</span><span class=\"nv\">app_donwnload_url</span><span class=\"k\">}</span><span class=\"s2\">' and '</span><span class=\"nv\">$oss_app_download_qrcode_url</span><span class=\"s2\">'\"</span>\n        <span class=\"nv\">app_donwnload_url</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">pgy_app_donwnload_url</span><span class=\"k\">}</span><span class=\"s1\">'\\n'</span>oss下载地址:<span class=\"nv\">$oss_app_download_qrcode_url</span>\n    <span class=\"k\">fi</span>\n<span class=\"c\">#    app_donwnload_url=$oss_app_download_qrcode_url</span>\n    \n    <span class=\"nb\">echo</span> <span class=\"s2\">\"通知 COME下载地址：'</span><span class=\"k\">${</span><span class=\"nv\">app_donwnload_url</span><span class=\"k\">}</span><span class=\"s2\">'\"</span>\n\n    \n    curl <span class=\"s1\">'https://oapi.dingtalk.com/robot/send?access_token='</span><span class=\"k\">${</span><span class=\"nv\">access_token</span><span class=\"k\">}</span> <span class=\"se\">\\</span>\n        <span class=\"nt\">-H</span> <span class=\"s1\">'Content-Type: application/json'</span> <span class=\"se\">\\</span>\n        <span class=\"nt\">-d</span> <span class=\"s1\">'{\"msgtype\": \"text\",\n            \"at\": {\n            \"atMobiles\":[\n                \"这\"\n                \"里\"\n                \"是\"\n                \"钉\"\n                \"钉\"\n                \"账\"\n                \"号\"\n            ],\n            \"isAtAll\": false\n            },\n             \"text\": {\n                  \"content\": \"'</span><span class=\"k\">${</span><span class=\"nv\">ProductName</span><span class=\"k\">}</span><span class=\"s1\">' App更新：'</span><span class=\"k\">${</span><span class=\"nv\">title</span><span class=\"k\">}</span><span class=\"s1\">'\\n'</span><span class=\"k\">${</span><span class=\"nv\">modify_msg</span><span class=\"k\">}</span><span class=\"s1\">'\\n下载地址：https://www.pgyer.com/'</span><span class=\"k\">${</span><span class=\"nv\">app_donwnload_url</span><span class=\"k\">}</span><span class=\"s1\">'\"            }\n           }'</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'///-------------------------------------------------------'</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'/// 发送通知 '</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'///-------------------------------------------------------'</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h3 id=\"22-流程设计\">2.2 流程设计：</h3>\n\n<h4 id=\"221-构建前\">2.2.1 构建前：</h4>\n\n<ul>\n  <li>入参设置</li>\n</ul>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#入参设置</span>\n<span class=\"k\">function </span>coustomSettings<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"c\">#需要打包的target</span>\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$1</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">echo</span> <span class=\"s2\">\"error: TARGET_NAME 不能为空 退出\"</span>\n        <span class=\"nb\">exit </span>1\n    <span class=\"k\">else\n        </span><span class=\"nb\">export </span><span class=\"nv\">TARGET_NAME</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n    <span class=\"k\">fi</span>\n\n    <span class=\"c\">#工程所在目录，如果在根目录则为${WORKSPACE}</span>\n    \n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$2</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">export </span><span class=\"nv\">projectDir</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">TARGET_NAME</span><span class=\"k\">}</span>\n    <span class=\"k\">else\n        </span><span class=\"nb\">export </span><span class=\"nv\">projectDir</span><span class=\"o\">=</span><span class=\"nv\">$2</span>\n    <span class=\"k\">fi</span>\n<span class=\"c\">#    export projectDir=YPCProject</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"TARGET_NAME=\"</span><span class=\"nv\">$TARGET_NAME</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"projectDir=\"</span><span class=\"nv\">$projectDir</span>\n\n<span class=\"o\">}</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<ul>\n  <li>发布设置：</li>\n</ul>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#发布及归档的相关的设置</span>\n<span class=\"k\">function </span>publishSettings<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$1</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">echo</span> <span class=\"s1\">'///渠道号入参 为空'</span>\n        <span class=\"nb\">export </span><span class=\"nv\">pgyChannel</span><span class=\"o\">=</span>Dev\n    <span class=\"k\">else\n        </span><span class=\"nb\">echo</span> <span class=\"s1\">'///渠道号入参 不为空'</span>\n        <span class=\"nb\">export </span><span class=\"nv\">pgyChannel</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n    <span class=\"k\">fi\n    \n    </span><span class=\"nb\">echo</span> <span class=\"s2\">\"////渠道号\"</span><span class=\"k\">${</span><span class=\"nv\">pgyChannel</span><span class=\"k\">}</span>\n    \n    <span class=\"c\">#声明蒲公英分发调用APi的pgyAPIKey</span>\n    <span class=\"nb\">export </span><span class=\"nv\">pgyAPIKey</span><span class=\"o\">=</span><span class=\"s2\">\"pgyAPIKey\"</span>\n    \n    <span class=\"c\">#钉钉发送通知机器人的access_token</span>\n    <span class=\"nb\">export </span><span class=\"nv\">access_token</span><span class=\"o\">=</span><span class=\"s2\">\"access_token\"</span>\n\n    <span class=\"c\">#AppStore的token</span>\n    <span class=\"nb\">export </span><span class=\"nv\">appStore_apiIssuer</span><span class=\"o\">=</span><span class=\"s2\">\"appStore_apiIssuer\"</span>\n    <span class=\"nb\">export </span><span class=\"nv\">appStore_apikey</span><span class=\"o\">=</span><span class=\"s2\">\"appStore_apikey\"</span>\n            \n    <span class=\"c\">#bugly的token</span>\n    <span class=\"nb\">export </span><span class=\"nv\">bugly_appid</span><span class=\"o\">=</span><span class=\"s2\">\"bugly_appid\"</span>\n    <span class=\"nb\">export </span><span class=\"nv\">bugly_appkey</span><span class=\"o\">=</span><span class=\"s2\">\"bugly_appkey\"</span>\n<span class=\"o\">}</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<ul>\n  <li>通知设置</li>\n</ul>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#通知相关的设置（pgy渠道及apikey）</span>\n<span class=\"k\">function </span>notificationSettings<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"nv\">notificationSettings</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"k\">${</span><span class=\"nv\">notificationSettings</span><span class=\"k\">}</span> <span class=\"o\">=</span> <span class=\"s2\">\"1\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">echo</span> <span class=\"s1\">'///静默入参 不为空'</span>\n        <span class=\"nb\">export </span><span class=\"nv\">notificationSilent</span><span class=\"o\">=</span><span class=\"nv\">$notificationSettings</span>\n    <span class=\"k\">else\n        </span><span class=\"nb\">echo</span> <span class=\"s1\">'///静默入参 为空 或者不为1 不发通知'</span>\n    <span class=\"k\">fi\n    \n    </span><span class=\"nb\">echo</span> <span class=\"s2\">\"////静默通知=\"</span><span class=\"k\">${</span><span class=\"nv\">notificationSilent</span><span class=\"k\">}</span>\n<span class=\"o\">}</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<ul>\n  <li>\n    <p>参数获取:</p>\n\n    <p>通过xcode工具获取工程项目自带的参数</p>\n  </li>\n</ul>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#获取工程配置信息</span>\n<span class=\"k\">function </span>initInfoPlistParms<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"c\">#Plist先写死。后续可考虑改成搜索</span>\n    <span class=\"nb\">cd</span> <span class=\"k\">${</span><span class=\"nv\">CurDir</span><span class=\"k\">}</span>/<span class=\"k\">${</span><span class=\"nv\">projectDir</span><span class=\"k\">}</span>\n    <span class=\"nv\">versionKey</span><span class=\"o\">=</span><span class=\"s2\">\"MARKETING_VERSION\"</span>\n    <span class=\"nv\">bundleID</span><span class=\"o\">=</span><span class=\"s2\">\"PRODUCT_BUNDLE_IDENTIFIER\"</span>\n    <span class=\"nv\">bundleNo</span><span class=\"o\">=</span><span class=\"s2\">\"CURRENT_PROJECT_VERSION\"</span>\n    <span class=\"nv\">platformName</span><span class=\"o\">=</span><span class=\"s2\">\"PLATFORM_NAME\"</span>\n    <span class=\"nv\">productName</span><span class=\"o\">=</span><span class=\"s2\">\"PRODUCT_NAME\"</span>\n    <span class=\"c\">#将要获取的key设置成数组</span>\n    <span class=\"nv\">buildSettingsGrepKeyArray</span><span class=\"o\">=(</span><span class=\"nv\">$versionKey</span> <span class=\"nv\">$bundleID</span> <span class=\"nv\">$bundleNo</span> <span class=\"nv\">$platformName</span> <span class=\"nv\">$productName</span><span class=\"o\">)</span>\n    <span class=\"nv\">buildSettingsGrepKey</span><span class=\"o\">=</span><span class=\"s2\">\"\"</span>\n    <span class=\"k\">for</span><span class=\"o\">((</span> <span class=\"nv\">i</span><span class=\"o\">=</span>0<span class=\"p\">;</span>i&lt;<span class=\"k\">${#</span><span class=\"nv\">buildSettingsGrepKeyArray</span><span class=\"p\">[@]</span><span class=\"k\">}</span><span class=\"p\">;</span>i++<span class=\"o\">))</span>\n    <span class=\"k\">do\n        </span><span class=\"nb\">echo</span> <span class=\"s2\">\"【获取Plist参数】遍历 idx=\"</span><span class=\"nv\">$i</span> <span class=\"s2\">\"value=\"</span> <span class=\"k\">${</span><span class=\"nv\">buildSettingsGrepKeyArray</span><span class=\"p\">[i]</span><span class=\"k\">}</span>\n        <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$buildSettingsGrepKey</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n            </span><span class=\"nv\">buildSettingsGrepKey</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">buildSettingsGrepKeyArray</span><span class=\"p\">[i]</span><span class=\"k\">}</span><span class=\"p\">;</span>\n        <span class=\"k\">else\n            </span>buildSettingsGrepKey+<span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"se\">\\|</span><span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">buildSettingsGrepKeyArray</span><span class=\"p\">[i]</span><span class=\"k\">}</span><span class=\"p\">;</span>\n        <span class=\"k\">fi\n    done</span><span class=\"p\">;</span>\n    <span class=\"c\">#将数组拼接成 grep 参数</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"【获取Plist参数】key：\"</span><span class=\"nv\">$buildSettingsGrepKey</span>\n\n    <span class=\"c\">#-w 防止模糊匹配 比如  PRODUCT_NAME 和 FULL_PRODUCT_NAME</span>\n    <span class=\"nv\">buildSettings</span><span class=\"o\">=</span><span class=\"sb\">`</span>xcodebuild <span class=\"nt\">-showBuildSettings</span> <span class=\"nt\">-target</span> <span class=\"k\">${</span><span class=\"nv\">TARGET_NAME</span><span class=\"k\">}</span> | <span class=\"nb\">grep</span> <span class=\"nt\">-w</span> <span class=\"nv\">$buildSettingsGrepKey</span><span class=\"sb\">`</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"【获取Plist参数】result：\"</span><span class=\"nv\">$buildSettings</span>\n    \n    <span class=\"c\">#取值数组</span>\n    <span class=\"nv\">buildSettingsGrepValueArray</span><span class=\"o\">=[]</span>\n    <span class=\"k\">for</span><span class=\"o\">((</span> <span class=\"nv\">i</span><span class=\"o\">=</span>0<span class=\"p\">;</span>i&lt;<span class=\"k\">${#</span><span class=\"nv\">buildSettingsGrepKeyArray</span><span class=\"p\">[@]</span><span class=\"k\">}</span><span class=\"p\">;</span>i++<span class=\"o\">))</span>\n    <span class=\"k\">do</span>\n        <span class=\"c\">#右截断</span>\n        <span class=\"nv\">value</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">buildSettings</span><span class=\"p\">#*</span><span class=\"k\">${</span><span class=\"nv\">buildSettingsGrepKeyArray</span><span class=\"p\">[i]</span><span class=\"k\">}</span><span class=\"p\"> = </span><span class=\"k\">}</span>\n        <span class=\"k\">for</span><span class=\"o\">((</span> <span class=\"nv\">j</span><span class=\"o\">=</span>0<span class=\"p\">;</span>j&lt;<span class=\"k\">${#</span><span class=\"nv\">buildSettingsGrepKeyArray</span><span class=\"p\">[@]</span><span class=\"k\">}</span><span class=\"p\">;</span>j++<span class=\"o\">))</span>\n        <span class=\"k\">do</span>\n            <span class=\"c\">#由于grep顺序不保证，遍历所有key进行右截断</span>\n            <span class=\"nv\">value</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">value</span><span class=\"p\">%</span><span class=\"k\">${</span><span class=\"nv\">buildSettingsGrepKeyArray</span><span class=\"p\">[j]</span><span class=\"k\">}</span><span class=\"p\">*</span><span class=\"k\">}</span>\n        <span class=\"k\">done</span><span class=\"p\">;</span>\n        <span class=\"nv\">value</span><span class=\"o\">=</span><span class=\"sb\">`</span><span class=\"nb\">echo</span> <span class=\"k\">${</span><span class=\"nv\">value</span><span class=\"k\">}</span> | <span class=\"nb\">sed</span> <span class=\"s1\">'s/\\ //g'</span><span class=\"sb\">`</span>\n        <span class=\"nb\">echo</span> <span class=\"s2\">\"【获取Plist参数】i=\"</span><span class=\"nv\">$i</span> <span class=\"s2\">\"value=\"</span><span class=\"nv\">$value</span><span class=\"s2\">\"。\"</span>\n        <span class=\"c\">#填回取值数组</span>\n        buildSettingsGrepValueArray[i]<span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">value</span><span class=\"k\">}</span>\n    <span class=\"k\">done</span><span class=\"p\">;</span>\n    \n    <span class=\"c\">#定义全部变量</span>\n    <span class=\"nb\">export </span><span class=\"nv\">xcodeVersion3number</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">buildSettingsGrepValueArray</span><span class=\"p\">[0]</span><span class=\"k\">}</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"【获取Plist参数】版本号：\"</span><span class=\"nv\">$xcodeVersion3number</span><span class=\"s2\">\"。\"</span>\n\n    <span class=\"nb\">export </span><span class=\"nv\">xcodeBundleID</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">buildSettingsGrepValueArray</span><span class=\"p\">[1]</span><span class=\"k\">}</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"【获取Plist参数】包名：\"</span><span class=\"nv\">$xcodeBundleID</span><span class=\"s2\">\"。\"</span>\n\n    <span class=\"nb\">export </span><span class=\"nv\">xcodebundleNo</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">buildSettingsGrepValueArray</span><span class=\"p\">[2]</span><span class=\"k\">}</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"【获取Plist参数】build号：\"</span><span class=\"nv\">$xcodebundleNo</span><span class=\"s2\">\"。\"</span>\n    \n    <span class=\"nb\">export </span><span class=\"nv\">xcodePlatformName</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">buildSettingsGrepValueArray</span><span class=\"p\">[3]</span><span class=\"k\">}</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"【获取Plist参数】PlatformName：\"</span><span class=\"nv\">$xcodePlatformName</span><span class=\"s2\">\"。\"</span>\n    \n    <span class=\"nb\">export </span><span class=\"nv\">xcodeProductName</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">buildSettingsGrepValueArray</span><span class=\"p\">[4]</span><span class=\"k\">}</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"【获取Plist参数】ProductName：\"</span><span class=\"nv\">$xcodeProductName</span><span class=\"s2\">\"。\"</span>\n    <span class=\"nb\">cd</span> ..\n<span class=\"o\">}</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<ul>\n  <li>构建号设置：</li>\n</ul>\n\n<p>​\t设置构建号，可以避免每次构建的build重复，导致在appstore后台管理构建时的紊乱，也便于追溯构建代码版本等，而如果可以通过自动化的方式进行构建号的设置就更好了，这里提供一种设置思路：获取当前日期+流水线构建号(自增)，可以构建流水线内保证全局唯一：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#自动(自增)修改构建号</span>\n<span class=\"k\">function </span>modify_build_no<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"nb\">cd</span> <span class=\"k\">${</span><span class=\"nv\">CurDir</span><span class=\"k\">}</span>/<span class=\"k\">${</span><span class=\"nv\">projectDir</span><span class=\"k\">}</span>\n    <span class=\"nb\">export </span><span class=\"nv\">BuildNo</span><span class=\"o\">=</span><span class=\"sb\">`</span><span class=\"nb\">date</span> +%Y%m%d<span class=\"sb\">`</span>\n    <span class=\"c\">#BuildNo，可以采用拼接日期+构建方式+流水线自增号来识别构建包的来源（构建方式：dailybuild、TestFlight、Release、TFInner）</span>\n    <span class=\"nv\">BuildNo</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">BuildNo</span><span class=\"k\">}</span>.<span class=\"nv\">$1</span>.<span class=\"k\">${</span><span class=\"nv\">SYS_PIPELINE_BUILD_NUMBER</span><span class=\"k\">}</span>\n<span class=\"c\">#    plist_path=${CurDir}/${projectDir}/${projectDir}/Info.plist</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"【获取Plist参数】路径：\"</span><span class=\"nv\">$plist_path</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"【设置Plist参数】build：\"</span><span class=\"nv\">$BuildNo</span>    \n<span class=\"c\">#    /usr/libexec/PlistBuddy -c \"Set :CFBundleVersion ${BuildNo}\" ${plist_path}</span>\n    agvtool new-version <span class=\"nt\">-all</span> <span class=\"k\">${</span><span class=\"nv\">BuildNo</span><span class=\"k\">}</span>\n    <span class=\"nb\">cd</span> -\n<span class=\"o\">}</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h4 id=\"222-构建中\">2.2.2 构建中：</h4>\n\n<ul>\n  <li>\n    <p>执行构建：</p>\n\n    <p>在完成了所有必要的构建前的设置之后，可以进行构建流程：</p>\n  </li>\n</ul>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#执行构建</span>\n<span class=\"k\">function </span>build<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$1</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">echo</span> <span class=\"s2\">\"error: configurationName 不能为空 退出\"</span>\n        <span class=\"nb\">exit </span>1\n    <span class=\"k\">fi</span>\n    <span class=\"c\">#定义项目前缀,生成文件时使用</span>\n    <span class=\"nb\">export </span><span class=\"nv\">PrefixID</span><span class=\"o\">=</span>PSC_\n\n    <span class=\"c\">#设置根目录</span>\n    <span class=\"nb\">export </span><span class=\"nv\">CurDir</span><span class=\"o\">=</span><span class=\"sb\">`</span><span class=\"nb\">pwd</span><span class=\"sb\">`</span>\n    \n    <span class=\"c\">#进行打包的schemeName</span>\n    <span class=\"nb\">export </span><span class=\"nv\">schemeName</span><span class=\"o\">=</span>dailybuildipa\n    \n    <span class=\"c\">#指定编译 配置 configuration</span>\n    <span class=\"nv\">configurationNameArray</span><span class=\"o\">=(</span>DailyBuild TestFlight Release TFInner<span class=\"o\">)</span>\n    <span class=\"nb\">export </span><span class=\"nv\">configurationName</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">configurationNameArray</span><span class=\"p\">[</span><span class=\"nv\">$1</span><span class=\"p\">]</span><span class=\"k\">}</span>\n\n    <span class=\"c\">#指定编译脚本路径</span>\n    <span class=\"c\">#TODO: 这里需要匹配下当前脚本所在的目录</span>\n    <span class=\"nb\">export </span><span class=\"nv\">buildsh_dir</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">CurDir</span><span class=\"k\">}</span>/PSC_iOS_Build_SH\n\n    <span class=\"c\">#设置plist参数</span>\n    modify_build_no <span class=\"nv\">$1</span>\n\n    <span class=\"c\">#读取plist参数</span>\n    initInfoPlistParms\n    \n    <span class=\"c\">#执行构建</span>\n    bash <span class=\"nv\">$buildsh_dir</span>/build_sh.sh\n<span class=\"o\">}</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>构建流程设计包括：</p>\n\n<ul>\n  <li>设置环境变量</li>\n  <li>\n    <p>设置内部变量</p>\n  </li>\n  <li>\n    <p>初始化环境</p>\n  </li>\n  <li>\n    <p>mPaas设置（可选）</p>\n  </li>\n  <li>\n    <p>执行pod</p>\n  </li>\n  <li>\n    <p>构建工具适配（可选）</p>\n  </li>\n  <li>执行构建</li>\n</ul>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n</pre></td><td class=\"rouge-code\"><pre><span class=\"k\">function </span>build<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"c\">#设置内部环境变量</span>\n    initDevopsEnv\n \n    <span class=\"c\">#设置内部环境变量</span>\n    createInternalEnv\n        \n    <span class=\"c\">#初始化环境</span>\n    init_env\n\n    <span class=\"c\">#执行pod之前，先配置mPaas在当前环境下的配置文件</span>\n    mPaaSConfigSet\n    \n    <span class=\"c\">#执行pod</span>\n    pod_install\n\n    <span class=\"c\">#fix xcode 14.3 cocoapods bug</span>\n    fiXCode143\n\n    <span class=\"c\">#执行构建</span>\n    buildProject\n\n    <span class=\"c\">#执行构建归档操作</span>\n    collection\n    \n    <span class=\"c\">#上传（发布）安装包，供下载安装</span>\n    bash <span class=\"nv\">$buildsh_dir</span>/<span class=\"nv\">$build_ext_fold</span>/<span class=\"nv\">$publish_sh</span>\n\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"k\">${</span><span class=\"nv\">configurationName</span><span class=\"k\">}</span> <span class=\"o\">=</span> <span class=\"s2\">\"DailyBuild\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then</span>\n        <span class=\"c\">#通知</span>\n        bash <span class=\"nv\">$buildsh_dir</span>/<span class=\"nv\">$build_ext_fold</span>/<span class=\"nv\">$notification_sh</span>\n    <span class=\"k\">fi</span>\n<span class=\"o\">}</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>​\t构建具体的思路可以参考源码，这里不再赘述</p>\n\n<h4 id=\"223-构建后\">2.2.3 构建后：</h4>\n\n<ul>\n  <li>归档</li>\n</ul>\n\n<p>为什么要归档：</p>\n\n<p>归档主要是为了对构建的安装包IPA及dSYM进行一一对应，由于dailybuild都是在团队内分发，因此这边考虑只有在testflight及appstore时才进行归档。</p>\n\n<p>此外；如果使用bugly进行崩溃收集，bugly已经不支持手动传dSYM，需要在构建时一并实现。</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n</pre></td><td class=\"rouge-code\"><pre><span class=\"k\">function </span>upload_dSYM<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n\t\t<span class=\"c\">#这里可以根据各自情况，存在dSYM文件</span>\n<span class=\"o\">}</span>\n\n<span class=\"k\">function </span>upload_dSYM_to_bugly<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"nb\">export </span><span class=\"nv\">p</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">dSYM_dict_PATH</span><span class=\"k\">}</span>\n    \n    <span class=\"c\">#根据不同的应用进行设置</span>\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"k\">${</span><span class=\"nv\">TARGET_NAME</span><span class=\"k\">}</span> <span class=\"o\">=</span> <span class=\"s2\">\"PSCiOS\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nv\">bugly_appid</span><span class=\"o\">=</span>xxx\n        <span class=\"nv\">bugly_appkey</span><span class=\"o\">=</span>yyy\n    <span class=\"k\">fi\n    \n    </span><span class=\"nb\">echo</span> <span class=\"s1\">'/// 上传 dsym bugly '</span><span class=\"k\">${</span><span class=\"nv\">v</span><span class=\"k\">}</span><span class=\"s1\">'pkgName='</span><span class=\"k\">${</span><span class=\"nv\">pkgName</span><span class=\"k\">}</span>\n    \n    <span class=\"c\">#切换java 版本</span>\n    java <span class=\"nt\">-version</span>\n    jdk8\n    java <span class=\"nt\">-version</span>\n    \n    <span class=\"nv\">bugly_jar_path</span><span class=\"o\">=</span><span class=\"nv\">$buildsh_dir</span>/<span class=\"nv\">$build_ext_fold</span>/collection_res/buglyqq-upload-symbol/buglyqq-upload-symbol.jar\n    \n    java <span class=\"nt\">-jar</span> <span class=\"k\">${</span><span class=\"nv\">bugly_jar_path</span><span class=\"k\">}</span> <span class=\"nt\">-appid</span> <span class=\"k\">${</span><span class=\"nv\">bugly_appid</span><span class=\"k\">}</span> <span class=\"nt\">-appkey</span> <span class=\"k\">${</span><span class=\"nv\">bugly_appkey</span><span class=\"k\">}</span> <span class=\"nt\">-bundleid</span> <span class=\"k\">${</span><span class=\"nv\">pkgName</span><span class=\"k\">}</span> <span class=\"nt\">-version</span> <span class=\"k\">${</span><span class=\"nv\">v</span><span class=\"k\">}</span> <span class=\"nt\">-platform</span> IOS <span class=\"nt\">-inputSymbol</span> <span class=\"k\">${</span><span class=\"nv\">p</span><span class=\"k\">}</span>\n<span class=\"o\">}</span>\n\n<span class=\"k\">function </span>collection<span class=\"o\">()</span>\n<span class=\"o\">{</span>\n    <span class=\"nb\">export </span><span class=\"nv\">v</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">xcodeVersion3number</span><span class=\"k\">}</span>.<span class=\"k\">${</span><span class=\"nv\">BuildNo</span><span class=\"k\">}</span>\n    <span class=\"nb\">export </span><span class=\"nv\">pkgName</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">xcodeBundleID</span><span class=\"k\">}</span>\n\n    <span class=\"c\">#上传到bugly符号表</span>\n    upload_dSYM_to_bugly\n\n    <span class=\"c\">#上传dSYM</span>\n    upload_dSYM\n<span class=\"o\">}</span>\n\n<span class=\"c\">#归档</span>\ncollection\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<ul>\n  <li>发布</li>\n</ul>\n\n<p>归档后，对安装包进行分发，分发也分dailybuild与release：</p>\n\n<p>dailybuild:目前采用发布到蒲公英渠道：<a href=\"#2.1.3\">2.1.3 参数3(可选)：渠道号</a></p>\n\n<p>Release:发布到AppStore</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n</pre></td><td class=\"rouge-code\"><pre>    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"k\">${</span><span class=\"nv\">configurationName</span><span class=\"k\">}</span> <span class=\"o\">=</span> <span class=\"s2\">\"Release\"</span> <span class=\"o\">]</span> <span class=\"o\">||</span> <span class=\"o\">[</span> <span class=\"k\">${</span><span class=\"nv\">configurationName</span><span class=\"k\">}</span> <span class=\"o\">=</span> <span class=\"s2\">\"TestFlight\"</span> <span class=\"o\">]</span> <span class=\"o\">||</span> <span class=\"o\">[</span> <span class=\"k\">${</span><span class=\"nv\">configurationName</span><span class=\"k\">}</span> <span class=\"o\">=</span> <span class=\"s2\">\"TFInner\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then</span>\n           <span class=\"c\">#TFInner 、TestFlight &amp; appstore 上传到appstore</span>\n        <span class=\"nb\">echo</span> <span class=\"s1\">'/// 上传App Store 开始'</span>\n        xcrun altool <span class=\"nt\">--validate-app</span> <span class=\"nt\">-f</span>  <span class=\"nv\">$IPA_PATH</span> <span class=\"nt\">--type</span>  ios  <span class=\"nt\">--apiKey</span> <span class=\"nv\">$appStore_apikey</span> <span class=\"nt\">--apiIssuer</span> <span class=\"nv\">$appStore_apiIssuer</span>\n        xcrun altool <span class=\"nt\">--upload-app</span> <span class=\"nt\">-f</span>  <span class=\"nv\">$IPA_PATH</span> <span class=\"nt\">--type</span>  ios  <span class=\"nt\">--apiKey</span> <span class=\"nv\">$appStore_apikey</span> <span class=\"nt\">--apiIssuer</span> <span class=\"nv\">$appStore_apiIssuer</span>\n        <span class=\"nb\">echo</span> <span class=\"s1\">'/// 上传App Store 结束'</span>\n\t\t<span class=\"k\">fi</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<ul>\n  <li>通知</li>\n</ul>\n\n<p>通知可以有很多种方式，由于笔者团队使用钉钉，所以这里举个钉钉机器人例子：<a href=\"#2.1.4\">2.1.4 参数4(可选)：是否静默通知</a></p>\n\n\n\n                <hr style=\"visibility: hidden;\">\n                <ul class=\"pager\">\n                    \n                    <li class=\"previous\">\n                        <a href=\"/2023/08/03/iOS-%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%9C%A8%E5%86%85%E7%BD%91%E8%81%94%E8%B0%83%E6%97%B6%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"iOS客户端在内网联调时的解决方案\">\n                        Previous<br>\n                        <span>iOS客户端在内网联调时的解决方案</span>\n                        </a>\n                    </li>\n                    \n                    \n                    <li class=\"next\">\n                        <a href=\"/2023/08/11/Apple%E4%BC%81%E4%B8%9A%E8%B4%A6%E5%8F%B7%E6%B3%A8%E5%86%8C%E6%B5%81%E7%A8%8B/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Apple 企业账号注册流程\">\n                        Next<br>\n                        <span>Apple 企业账号注册流程</span>\n                        </a>\n                    </li>\n                    \n                </ul>\n                <hr style=\"visibility: hidden;\">\n\n                \n                <!-- disqus 评论框 start -->\n                <div class=\"comment\">\n                    <div id=\"disqus_thread\" class=\"disqus-thread\"></div>\n                </div>\n                <!-- disqus 评论框 end -->\n                \n\n                \n            </div>  \n\n    <!-- Side Catalog Container -->\n        \n            <div class=\"\n                col-lg-2 col-lg-offset-0\n                visible-lg-block\n                sidebar-container\n                catalog-container\">\n                <div class=\"side-catalog\">\n                    <hr class=\"hidden-sm hidden-xs\">\n                    <h5>\n                        <a class=\"catalog-toggle\" href=\"#\">CATALOG</a>\n                    </h5>\n                    <ul class=\"catalog-body\"></ul>\n                </div>\n            </div>\n        \n\n    <!-- Sidebar Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                sidebar-container\">\n\n                <!-- Featured Tags -->\n                \n\n\n<section>\n    \n        <hr class=\"hidden-sm hidden-xs\">\n    \n    <h5><a href=\"/archive/\">FEATURED TAGS</a></h5>\n    <div class=\"tags\">\n        \n        \n        \n        \n        \n    </div>\n</section>\n\n\n                <!-- Friends Blog -->\n                \n            </div>\n        </div>\n    </div>\n</article>\n\n<!-- add support for mathjax by voleking-->\n\n\n\n\n\n\n<!-- disqus 公共JS代码 start (一个网页只需插入一次) -->\n<script type=\"text/javascript\">\n    /* * * CONFIGURATION VARIABLES * * */\n    var disqus_shortname = \"Cyp\";\n    var disqus_identifier = \"/2023/08/08/iOS-话外篇-构建详解\";\n    var disqus_url = \"http://localhost:4000/2023/08/08/iOS-%E8%AF%9D%E5%A4%96%E7%AF%87-%E6%9E%84%E5%BB%BA%E8%AF%A6%E8%A7%A3/\";\n\n    (function() {\n        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;\n        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';\n        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);\n    })();\n</script>\n<!-- disqus 公共JS代码 end -->\n\n\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n      var d = document, t = 'script',\n          o = d.createElement(t),\n          s = d.getElementsByTagName(t)[0];\n      o.src = u;\n      if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n      s.parentNode.insertBefore(o, s);\n    }\n</script>\n<!-- anchor-js, Doc:http://bryanbraun.github.io/anchorjs/ -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/anchor-js/1.1.1/anchor.min.js\",function(){\n        anchors.options = {\n          visible: 'hover',\n          placement: 'right',\n          // icon: '#'\n        };\n        anchors.add().remove('.intro-header h1').remove('.subheading').remove('.sidebar-container h5');\n    })\n</script>\n<style>\n    /* place left on bigger screen */\n    @media all and (min-width: 800px) {\n        .anchorjs-link{\n            position: absolute;\n            left: -0.75em;\n            font-size: 1.1em;\n            margin-top : -0.1em;\n        }\n    }\n</style>\n\n\n\n    <!-- Footer -->\n<footer>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <!-- SNS Link -->\n                \n\n\n<ul class=\"list-inline text-center\">\n\n\n  \n  \n  \n  \n  \n  \n  \n</ul>\n\n                <p class=\"copyright text-muted\">\n                    Copyright &copy; PaysonChen Blog 2024\n                    <br>\n                    <!-- Powered by <a href=\"http://huangxuan.me\">Hux Blog</a> | -->\n                 <!--    <iframe style=\"margin-left: 2px; margin-bottom:-5px;\" frameborder=\"0\" scrolling=\"0\" width=\"100px\"\n                        height=\"20px\"\n                        src=\"https://ghbtns.com/github-btn.html?user=huxpro&repo=huxpro.github.io&type=star&count=true\">\n                    </iframe> -->\n                </p>\n            </div>\n        </div>\n    </div>\n</footer>\n\n<!-- jQuery -->\n<script src=\"/js/jquery.min.js \"></script>\n\n<!-- Bootstrap Core JavaScript -->\n<!-- Currently, only navbar scroll-down effect at desktop still depends on this -->\n<script src=\"/js/bootstrap.min.js \"></script>\n\n<!-- Custom Theme JavaScript -->\n<script src=\"/js/hux-blog.min.js \"></script>\n\n<!-- Simple Jekyll Search -->\n<script src=\"/js/simple-jekyll-search.min.js\"></script>\n\n<!-- Service Worker -->\n\n<script src=\"/js/snackbar.js \"></script>\n<script src=\"/js/sw-registration.js \"></script>\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n        var d = document, t = 'script',\n            o = d.createElement(t),\n            s = d.getElementsByTagName(t)[0];\n        o.src = u;\n        if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n        s.parentNode.insertBefore(o, s);\n    }\n</script>\n\n<!--\n     Because of the native support for backtick-style fenced code blocks\n     right within the Markdown is landed in Github Pages,\n     From V1.6, There is no need for Highlight.js,\n     so Huxblog drops it officially.\n\n     - https://github.com/blog/2100-github-pages-now-faster-and-simpler-with-jekyll-3-0\n     - https://help.github.com/articles/creating-and-highlighting-code-blocks/\n     - https://github.com/jneen/rouge/wiki/list-of-supported-languages-and-lexers\n-->\n<!--\n    <script>\n        async(\"http://cdn.bootcss.com/highlight.js/8.6/highlight.min.js\", function(){\n            hljs.initHighlightingOnLoad();\n        })\n    </script>\n    <link href=\"http://cdn.bootcss.com/highlight.js/8.6/styles/github.min.css\" rel=\"stylesheet\">\n-->\n\n\n\n\n\n\n\n<!--fastClick.js -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/fastclick/1.0.6/fastclick.min.js\", function () {\n        var $nav = document.querySelector(\"nav\");\n        if ($nav) FastClick.attach($nav);\n    })\n</script>\n\n\n<!-- Google Analytics -->\n\n\n\n<!-- Baidu Tongji -->\n\n\n\n<!-- Side Catalog -->\n\n<script type=\"text/javascript\">\n    function generateCatalog(selector) {\n\n        // interop with multilangual \n        if ('' == 'true') {\n            _containerSelector = 'div.post-container.active'\n        } else {\n            _containerSelector = 'div.post-container'\n        }\n\n        // init\n        var P = $(_containerSelector), a, n, t, l, i, c;\n        a = P.find('h1,h2,h3,h4,h5,h6');\n\n        // clean\n        $(selector).html('')\n\n        // appending\n        a.each(function () {\n            n = $(this).prop('tagName').toLowerCase();\n            i = \"#\" + $(this).prop('id');\n            t = $(this).text();\n            c = $('<a href=\"' + i + '\" rel=\"nofollow\">' + t + '</a>');\n            l = $('<li class=\"' + n + '_nav\"></li>').append(c);\n            $(selector).append(l);\n        });\n        return true;\n    }\n\n    generateCatalog(\".catalog-body\");\n\n    // toggle side catalog\n    $(\".catalog-toggle\").click((function (e) {\n        e.preventDefault();\n        $('.side-catalog').toggleClass(\"fold\")\n    }))\n\n    /*\n     * Doc: https://github.com/davist11/jQuery-One-Page-Nav\n     * Fork by Hux to support padding\n     */\n    async(\"/js/jquery.nav.js\", function () {\n        $('.catalog-body').onePageNav({\n            currentClass: \"active\",\n            changeHash: !1,\n            easing: \"swing\",\n            filter: \"\",\n            scrollSpeed: 700,\n            scrollOffset: 0,\n            scrollThreshold: .2,\n            begin: null,\n            end: null,\n            scrollChange: null,\n            padding: 80\n        });\n    });\n</script>\n\n\n\n<!-- Multi-Lingual -->\n\n\n<!-- Simple Jekyll Search -->\n<script>\n    // https://stackoverflow.com/questions/1912501/unescape-html-entities-in-javascript\n    function htmlDecode(input) {\n        var e = document.createElement('textarea');\n        e.innerHTML = input;\n        // handle case of empty input\n        return e.childNodes.length === 0 ? \"\" : e.childNodes[0].nodeValue;\n    }\n\n    SimpleJekyllSearch({\n        searchInput: document.getElementById('search-input'),\n        resultsContainer: document.getElementById('search-results'),\n        json: '/search.json',\n        searchResultTemplate: '<div class=\"post-preview item\"><a href=\"{url}\"><h2 class=\"post-title\">{title}</h2><h3 class=\"post-subtitle\">{subtitle}</h3><hr></a></div>',\n        noResultsText: 'No results',\n        limit: 50,\n        fuzzy: false,\n        // a hack to get escaped subtitle unescaped. for some reason, \n        // post.subtitle w/o escape filter nuke entire search.\n        templateMiddleware: function (prop, value, template) {\n            if (prop === 'subtitle' || prop === 'title') {\n                if (value.indexOf(\"code\")) {\n                    return htmlDecode(value);\n                } else {\n                    return value;\n                }\n            }\n        }\n    });\n\n    $(document).ready(function () {\n        var $searchPage = $('.search-page');\n        var $searchOpen = $('.search-icon');\n        var $searchClose = $('.search-icon-close');\n        var $searchInput = $('#search-input');\n        var $body = $('body');\n\n        $searchOpen.on('click', function (e) {\n            e.preventDefault();\n            $searchPage.toggleClass('search-active');\n            var prevClasses = $body.attr('class') || '';\n            setTimeout(function () {\n                $body.addClass('no-scroll');\n            }, 400)\n\n            if ($searchPage.hasClass('search-active')) {\n                $searchClose.on('click', function (e) {\n                    e.preventDefault();\n                    $searchPage.removeClass('search-active');\n                    $body.attr('class', prevClasses);  // from closure \n                });\n                $searchInput.focus();\n            }\n        });\n    });\n</script>\n\n\n<!-- Image to hack wechat -->\n<img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\" />\n<!-- Migrate from head to bottom, no longer block render and still work -->\n\n</body>\n\n</html>\n","excerpt":"<h1 id=\"ios话外篇构建详解\">iOS话外篇：构建详解</h1>\n","url":"/2023/08/08/iOS-%E8%AF%9D%E5%A4%96%E7%AF%87-%E6%9E%84%E5%BB%BA%E8%AF%A6%E8%A7%A3/","next":{"id":"/2023/08/11/Apple企业账号注册流程","tags":[],"relative_path":"_posts/2023-08-11-Apple企业账号注册流程.md","collection":"posts","name":"2023-08-11-Apple企业账号注册流程.md","url":"/2023/08/11/Apple%E4%BC%81%E4%B8%9A%E8%B4%A6%E5%8F%B7%E6%B3%A8%E5%86%8C%E6%B5%81%E7%A8%8B/","title":"Apple 企业账号注册流程","date":"2023-08-11 00:00:00 +0800","categories":[],"path":"_posts/2023-08-11-Apple企业账号注册流程.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/home-bg-geek.jpg","slug":"Apple企业账号注册流程","ext":".md"},"title":"iOS话外篇：构建详解","date":"2023-08-08 00:00:00 +0800","categories":[],"path":"_posts/2023-08-08-iOS-话外篇-构建详解.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/home-bg-geek.jpg","slug":"iOS-话外篇-构建详解","ext":".md"},"title":"iOS客户端在内网联调时的解决方案","date":"2023-08-03 00:00:00 +0800","categories":[],"path":"_posts/2023-08-03-iOS-客户端在内网联调时的解决方案.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/home-bg-geek.jpg","slug":"iOS-客户端在内网联调时的解决方案","ext":".md"},{"id":"/2023/08/02/iOS-组件化实践之-遇到的问题及解决过程纪要-持续更新中","tags":[],"relative_path":"_posts/2023-08-02-iOS-组件化实践之-遇到的问题及解决过程纪要-持续更新中.md","collection":"posts","content":"<h1 id=\"ios组件化实践之遇到的问题及解决过程纪要持续更新中\">iOS组件化实践之：遇到的问题及解决过程纪要(持续更新中)</h1>\n\n<h2 id=\"一编译错误\">一、编译错误</h2>\n\n<h3 id=\"11-msghandlingerror\">1.1 MsgHandlingError</h3>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n</pre></td><td class=\"rouge-code\"><pre>Build service could not create build operation: unknown error <span class=\"k\">while </span>handling message: MsgHandlingError<span class=\"o\">(</span>message: <span class=\"s2\">\"unable to initiate PIF transfer session (operation in progress?)\"</span><span class=\"o\">)</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>经Google之后，解决方案是要清楚编译构建索引，由于还是比较频繁出现，于是写了个脚本：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#!/bin/bash</span>\n\n<span class=\"c\"># [背景]</span>\n<span class=\"c\"># 组件化过程中，经常出现以下编译错误：</span>\n<span class=\"c\"># Build service could not create build operation: unknown error while handling message: MsgHandlingError(message: \"unable to initiate PIF transfer session (operation in progress?)\")</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># author: Chenyp34</span>\n<span class=\"c\"># [目的]</span>\n<span class=\"c\"># 为解决上述错误，需要清理构建索引目录并重启xcode，由于操作重复，考虑抽出shell脚本</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [目录]</span>\n<span class=\"c\">#   - auto_clean.sh</span>\n<span class=\"c\"># [说明]</span>\n<span class=\"c\"># 1、CD[指定xcode构建索引目录]目录</span>\n<span class=\"c\"># 2、递归删除当前文件下所有文件</span>\n<span class=\"c\"># 3、重启xcode</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [参数]</span>\n<span class=\"c\"># 1、参数1，指定xcode构建索引目录</span>\n<span class=\"c\"># 1、参数2，指定要打开的Xcode项目目</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [调用说明]</span>\n<span class=\"c\"># 1、未指定目录，则取当前目录：sh auto_clean.sh</span>\n<span class=\"c\"># 2、指定目录：sh auto_clean.sh /xcode构建索引目录/ /要打开的Xcode项目目录/</span>\n\n\n<span class=\"nb\">export </span><span class=\"nv\">XcodeDerivedDataPath</span><span class=\"o\">=</span>/Users/YourMacName/Library/Developer/Xcode/DerivedData\n<span class=\"nb\">export </span><span class=\"nv\">XcodeWorkspacePath</span><span class=\"o\">=</span>/Users/YourMacName/Documents/PCS/git/Project/xxx.xcworkspace\n\n<span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$1</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n    </span><span class=\"nb\">echo</span> <span class=\"s1\">'///入参1为空，使用默认xcode构建索引目录:'</span><span class=\"k\">${</span><span class=\"nv\">XcodeDerivedDataPath</span><span class=\"k\">}</span>\n<span class=\"k\">else\n    </span><span class=\"nv\">XcodeDerivedDataPath</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'///入参1不为空，xcode构建索引目录:'</span><span class=\"k\">${</span><span class=\"nv\">XcodeDerivedDataPath</span><span class=\"k\">}</span>\n<span class=\"k\">fi\n\nif</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$2</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n    </span><span class=\"nb\">echo</span> <span class=\"s1\">'///入参2为空，使用默认xcode项目目录:'</span><span class=\"k\">${</span><span class=\"nv\">XcodeWorkspacePath</span><span class=\"k\">}</span>\n<span class=\"k\">else\n    </span><span class=\"nv\">XcodeWorkspacePath</span><span class=\"o\">=</span><span class=\"nv\">$2</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'///入参2不为空，xcode项目目录:'</span><span class=\"k\">${</span><span class=\"nv\">XcodeWorkspacePath</span><span class=\"k\">}</span>\n<span class=\"k\">fi</span>\n\n<span class=\"c\">#cd到xcode构建索引目录</span>\n<span class=\"nb\">cd</span>  <span class=\"nv\">$XcodeDerivedDataPath</span>\n\n<span class=\"c\">#删除当前目录所有构件索引</span>\n<span class=\"nb\">rm</span> <span class=\"nt\">-rf</span> <span class=\"k\">*</span>\n\n<span class=\"c\">#重启xcode</span>\nkillall Xcode\n\n<span class=\"c\">#休眠一下，否则额可能直接打开会报错</span>\n<span class=\"nb\">sleep </span>0.1\n\n<span class=\"c\">#打开工程</span>\nopen <span class=\"nv\">$XcodeWorkspacePath</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h3 id=\"12--duplicate-interface-definition-for-class\">1.2  duplicate interface definition for class</h3>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>duplicate interface definition for class XXX\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>排除了报错明面上的重复定义的可能性之后，后来查资料发现是import 问题，删除掉原先的import “xxx.h”，改成 import &lt;PSCXXModule/xxx.h&gt;</p>\n\n<h2 id=\"二运行时错误\">二、运行时错误</h2>\n\n<h3 id=\"21-voidload方法交换导致死循环\">2.1 +(void)load方法交换导致死循环</h3>\n\n<h4 id=\"211-问题说明\">2.1.1 问题说明：</h4>\n\n<p>在实施组件化过程之中，一个UIControl的Category与UIButton的Category，由于后者的耦合度较大，将前者先拆进组件库，编译没有问题，运行没有问题，只有在UIButton点击事件时造成了死循环。</p>\n\n<h4 id=\"212-问题分析\">2.1.2 问题分析：</h4>\n\n<p>通过Craash堆栈看出是以下这个方法递归调用造成死循环</p>\n\n<pre><code class=\"language-objective-c\">- (void)mySendAction:(SEL)action to:(id)target forEvent:(UIEvent *)event\n</code></pre>\n\n<p>详细排查代码，看到UIControl的Category与UIButton的Category写了一模一样的 load方法交换：</p>\n\n<div class=\"language-objc highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n</pre></td><td class=\"rouge-code\"><pre><span class=\"k\">+</span> <span class=\"p\">(</span><span class=\"kt\">void</span><span class=\"p\">)</span><span class=\"n\">load</span><span class=\"p\">{</span>\n    <span class=\"k\">static</span> <span class=\"n\">dispatch_once_t</span> <span class=\"n\">onceToken</span><span class=\"p\">;</span>\n    <span class=\"n\">dispatch_once</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">onceToken</span><span class=\"p\">,</span> <span class=\"o\">^</span><span class=\"p\">{</span>\n        <span class=\"n\">SEL</span> <span class=\"n\">selA</span> <span class=\"o\">=</span> <span class=\"k\">@selector</span><span class=\"p\">(</span><span class=\"n\">sendAction</span><span class=\"o\">:</span><span class=\"n\">to</span><span class=\"o\">:</span><span class=\"n\">forEvent</span><span class=\"o\">:</span><span class=\"p\">);</span>\n        <span class=\"n\">SEL</span> <span class=\"n\">selB</span> <span class=\"o\">=</span> <span class=\"k\">@selector</span><span class=\"p\">(</span><span class=\"n\">mySendAction</span><span class=\"o\">:</span><span class=\"n\">to</span><span class=\"o\">:</span><span class=\"n\">forEvent</span><span class=\"o\">:</span><span class=\"p\">);</span>\n        <span class=\"n\">Method</span> <span class=\"n\">methodA</span> <span class=\"o\">=</span>   <span class=\"n\">class_getInstanceMethod</span><span class=\"p\">(</span><span class=\"n\">self</span><span class=\"p\">,</span><span class=\"n\">selA</span><span class=\"p\">);</span>\n        <span class=\"n\">Method</span> <span class=\"n\">methodB</span> <span class=\"o\">=</span> <span class=\"n\">class_getInstanceMethod</span><span class=\"p\">(</span><span class=\"n\">self</span><span class=\"p\">,</span> <span class=\"n\">selB</span><span class=\"p\">);</span>\n        <span class=\"c1\">//将 methodB的实现 添加到系统方法中 也就是说 将 methodA方法指针添加成 方法methodB的  返回值表示是否添加成功</span>\n        <span class=\"n\">BOOL</span> <span class=\"n\">isAdd</span> <span class=\"o\">=</span> <span class=\"n\">class_addMethod</span><span class=\"p\">(</span><span class=\"n\">self</span><span class=\"p\">,</span> <span class=\"n\">selA</span><span class=\"p\">,</span> <span class=\"n\">method_getImplementation</span><span class=\"p\">(</span><span class=\"n\">methodB</span><span class=\"p\">),</span> <span class=\"n\">method_getTypeEncoding</span><span class=\"p\">(</span><span class=\"n\">methodB</span><span class=\"p\">));</span>\n        <span class=\"c1\">//添加成功了 说明 本类中不存在methodB 所以此时必须将方法b的实现指针换成方法A的，否则 b方法将没有实现。</span>\n        <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">isAdd</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n            <span class=\"n\">class_replaceMethod</span><span class=\"p\">(</span><span class=\"n\">self</span><span class=\"p\">,</span> <span class=\"n\">selB</span><span class=\"p\">,</span> <span class=\"n\">method_getImplementation</span><span class=\"p\">(</span><span class=\"n\">methodA</span><span class=\"p\">),</span> <span class=\"n\">method_getTypeEncoding</span><span class=\"p\">(</span><span class=\"n\">methodA</span><span class=\"p\">));</span>\n        <span class=\"p\">}</span><span class=\"k\">else</span><span class=\"p\">{</span>\n            <span class=\"c1\">//添加失败了 说明本类中 有methodB的实现，此时只需要将 methodA和methodB的IMP互换一下即可。</span>\n            <span class=\"n\">method_exchangeImplementations</span><span class=\"p\">(</span><span class=\"n\">methodA</span><span class=\"p\">,</span> <span class=\"n\">methodB</span><span class=\"p\">);</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">});</span>\n<span class=\"p\">}</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>(姑且先不吐槽cv大法)</p>\n\n<p><strong>为何在组件化之前不会死循环，在组件化之后造成了死循环？</strong></p>\n\n<h4 id=\"213-问题定位\">2.1.3 问题定位：</h4>\n\n<p>通过控制变量法可以初步判断：<strong>由于Pod集成方式改变造成的crash</strong></p>\n\n<p>load方法，是类加载时的调用，怀疑是加载时序发生了变化，导致crash暴露出来</p>\n\n<p>随即展开类加载实验：主工程及Pod的类加载探索：</p>\n\n<p>存在Pod库的类加载：</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n</pre></td><td class=\"rouge-code\"><pre>2023-06-28 09:19:26.104245+0800 TestUI[2809:1230318] [+ (void)load]:[Pod] UIControl (ClickTimeSpace) load\n2023-06-28 09:19:26.108615+0800 TestUI[2809:1230318] [+ (void)load]:[Pod] UIImage (Bundle) load\n2023-06-28 09:19:26.108626+0800 TestUI[2809:1230318] [+ (void)load]:[Pod] UIImage (Custom) load\n2023-06-28 09:19:26.108637+0800 TestUI[2809:1230318] [+ (void)load]:[Pod] UIImageView (YPCCreateQRCode) load\n2023-06-28 09:19:26.108647+0800 TestUI[2809:1230318] [+ (void)load]:[Pod] UILabel (YPCSpaceLabel) load\n2023-06-28 09:19:26.108670+0800 TestUI[2809:1230318] [+ (void)load]:[Pod] UIResponder (KTRouter) load\n2023-06-28 09:19:26.110711+0800 TestUI[2809:1230318] [+ (void)load]:[Project]NSObject (Sb) load\n2023-06-28 09:19:26.110743+0800 TestUI[2809:1230318] [+ (void)load]:[Project]UITextField (Sub) load\n2023-06-28 09:19:26.110777+0800 TestUI[2809:1230318] [+ (void)load]:[Project]UIResponder (Super) load\n2023-06-28 09:19:26.110787+0800 TestUI[2809:1230318] [+ (void)load]:[Project]UIControl (Test) load\n2023-06-28 09:19:26.114212+0800 TestUI[2809:1230318] [+ (void)load]:[Project]UIView (Base) load\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>只有主工程的类加载：</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n</pre></td><td class=\"rouge-code\"><pre>2023-06-28 09:25:27.432494+0800 TestUI[2821:1235269] [+ (void)load]:[Project]UIImageView (SubImgV) load\n2023-06-28 09:25:27.432528+0800 TestUI[2821:1235269] [+ (void)load]:[Project]NSObject (Sb) load\n2023-06-28 09:25:27.432559+0800 TestUI[2821:1235269] [+ (void)load]:[Project]UITextField (Sub) load\n2023-06-28 09:25:27.432570+0800 TestUI[2821:1235269] [+ (void)load]:[Project]UITextView (SubTv) load\n2023-06-28 09:25:27.432580+0800 TestUI[2821:1235269] [+ (void)load]:[Project]UIButton (Test) load\n2023-06-28 09:25:27.432592+0800 TestUI[2821:1235269] [+ (void)load]:[Project]UIResponder (Super) load\n2023-06-28 09:25:27.432602+0800 TestUI[2821:1235269] [+ (void)load]:[Project]UIControl (Test) load\n2023-06-28 09:25:27.435639+0800 TestUI[2821:1235269] [+ (void)load]:[Project]UIView (Base) load\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>通过上述日志打印得出：<strong>Pod库里的类加载先于主工程</strong></p>\n\n<p>因此结论：在主工程时，先加载了UIButton的load方法，而UIButton无此方法：</p>\n\n<div class=\"language-objc highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c1\">//在UIControl存在此方法,而UIButton无此方法：</span>\n<span class=\"k\">-</span> <span class=\"p\">(</span><span class=\"kt\">void</span><span class=\"p\">)</span><span class=\"nf\">sendAction</span><span class=\"p\">:(</span><span class=\"n\">SEL</span><span class=\"p\">)</span><span class=\"nv\">action</span> <span class=\"nf\">to</span><span class=\"p\">:(</span><span class=\"n\">nullable</span> <span class=\"n\">id</span><span class=\"p\">)</span><span class=\"nv\">target</span> <span class=\"nf\">forEvent</span><span class=\"p\">:(</span><span class=\"n\">nullable</span> <span class=\"n\">UIEvent</span> <span class=\"o\">*</span><span class=\"p\">)</span><span class=\"nv\">event</span><span class=\"p\">;</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>在先交换UIButton中的sendAction之后，再交换UIControl中的sendAction，sendAction方法能被正常交换</p>\n\n<p>反之：在Pod工程中，先交换了UIControl中的sendAction之后，再交换UIButton中的sendAction，执行两次相同交换等于恢复了没有交换，当方法调用时：</p>\n\n<div class=\"language-objc highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c1\">//当我们按钮点击事件 sendAction 时  将会执行  mySendAction</span>\n<span class=\"k\">-</span> <span class=\"p\">(</span><span class=\"kt\">void</span><span class=\"p\">)</span><span class=\"nf\">mySendAction</span><span class=\"p\">:(</span><span class=\"n\">SEL</span><span class=\"p\">)</span><span class=\"nv\">action</span> <span class=\"nf\">to</span><span class=\"p\">:(</span><span class=\"n\">id</span><span class=\"p\">)</span><span class=\"nv\">target</span> <span class=\"nf\">forEvent</span><span class=\"p\">:(</span><span class=\"n\">UIEvent</span> <span class=\"o\">*</span><span class=\"p\">)</span><span class=\"nv\">event</span>\n<span class=\"p\">{</span>\n  \t<span class=\"c1\">//xxx</span>\n    <span class=\"c1\">//此处 methodA和methodB方法IMP互换了，实际上执行 sendAction；所以不会死循环</span>\n    <span class=\"p\">[</span><span class=\"n\">self</span> <span class=\"nf\">mySendAction</span><span class=\"p\">:</span><span class=\"n\">action</span> <span class=\"nf\">to</span><span class=\"p\">:</span><span class=\"n\">target</span> <span class=\"n\">forEvent</span><span class=\"o\">:</span><span class=\"n\">event</span><span class=\"p\">];</span>\n<span class=\"p\">}</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>无法回到sendAction，造成了死循环详细排查代码，看到UIControl的Category与UIButton的Category写了一模一样的 load方法交换：</p>\n\n","name":"2023-08-02-iOS-组件化实践之-遇到的问题及解决过程纪要-持续更新中.md","previous":{"id":"/2023/07/31/6-iOS-组件化-命名注释篇","tags":[],"relative_path":"_posts/2023-07-31-6-iOS-组件化-命名注释篇.md","collection":"posts","content":"<h1 id=\"ios组件化实践之类命名注释篇\">iOS组件化实践之：类命名注释篇</h1>\n\n<h2 id=\"1问题描述\">1.问题描述</h2>\n\n<p>CocoaPods组件创建时，提供的一个很好的管理命名规范的思路：以统一的命名前缀，一般以项目/组织等缩写作为前缀</p>\n\n<p>组件化规整之后，可能存在的情况是前后的文件命名不一致导致的影响代码易读性、易维护等问题</p>\n\n<p>除此之外，由于代码经由不同人迭代的，甚至不同组织迭代（从外包接手的项目）还存在一些文件注释的注释模板差异的情况</p>\n\n<h2 id=\"2-类命名统一\">2. 类命名统一</h2>\n\n<h3 id=\"21-类重命名之前\">2.1 类重命名之前</h3>\n\n<p>需要确认下，当前类或者与之相关的一些类，是否存在于<a href=\"https://cocoapods.org/\">CocoaPods</a>公有源上，如果存在，可以直接通过Pod引入（组件内通过dependency），</p>\n\n<p>举个例子：如果你需要进行重命名的类是这样的：SDWebImage、SDWebImageXXX、SDXXX，显然，这是将SDWebImage通过代码直接集成，由于SDWebImage类数量比较多，且属于成熟框架，在确认没有私自改动逻辑的情况下，可以考虑直接移除，采用通过Pod引入（组件内通过dependency）</p>\n\n<p>当然，如果存在没有被用到的类，也正好是一个移除他们的好时机！</p>\n\n<p><strong>‼️特别注意：改名之前，需要确认，要改的类名是否已经存在工程中，如果存在且继续修改，会造成很多错误替换，造成很复杂的编译问题，且难以回退。</strong></p>\n\n<p>例如：ABCWebView，要改成PSCWebView，此时如果工程中已经存在PSCWebView，则ABCWebView继续再改成PSCWebView，会造成所有ABCWebView与PSCWebView的混乱，除非单次修改（之前的操作已经提交），否则回退也变得异常困难。</p>\n\n<h3 id=\"22-常规类重命名\">2.2 常规类重命名</h3>\n\n<p>可以通过IDE：Xcode自带的rename功能进行类名重命名：</p>\n\n<p><img src=\"/img/name/1.png\" alt=\"\" /></p>\n\n<p>替换成带期望前缀的类名</p>\n\n<p><img src=\"/img/name/2.png\" alt=\"WX20230731-191648\" /></p>\n\n<p>可能存在替换不完全的可能，需要检索下旧类名，全局替换下，确保编译通过方可</p>\n\n<h3 id=\"23-categories重命名\">2.3 categories重命名</h3>\n\n<p>categories的重命名无法根据上述方式，只能通过常规的修改文件名，以及全局替换的方式。</p>\n\n<p>值得一提的是，若一个基础类存在多个单一功能的categories，例如存在UIButton+Category1，UIButton+Category2……，他们有可能存在重复的功能可以考虑保留其中一个即可，也可以考虑将他们重构，合并，或者是重新划分下功能归属，</p>\n\n<h2 id=\"3类注释模板统一\">3.类注释模板统一：</h2>\n\n<p>治理这些情况，可能就需要分两步：</p>\n\n<h3 id=\"31-第一步存量类注释规范治理\">3.1 第一步：存量类注释规范治理</h3>\n\n<p>存量治理，这边采用脚本批量执行，具体思路如下：</p>\n\n<ul>\n  <li>遍历指定目录（若未传参数则为当前目录）下的子目录</li>\n  <li>匹配所有iOS工程类文件：.h .m .swift</li>\n  <li>对其注释头进行模板替换\n    <ul>\n      <li>匹配获取当前类的author，匹配不到则使用默认值（需定义）</li>\n      <li>匹配获取当前类的time，匹配不到则使用默认值（需定义）</li>\n      <li>替换版权信息（需定义）</li>\n    </ul>\n  </li>\n</ul>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#!/bin/bash</span>\n\n<span class=\"c\"># 遍历更新当前目录下(含子目录）所有iOS工程类文件：.h .m .swift 并对其注释头进行模板替换</span>\n<span class=\"c\"># author: Chenyp34</span>\n<span class=\"c\"># [目的]</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># 组件化规整之后，可能存在的情况是前后的文件命名不一致导致的影响代码易读性、易维护等问题</span>\n<span class=\"c\"># 除此之外，由于代码经由不同人迭代的，甚至不同组织迭代（从外包接手的项目）还存在一些文件注释的注释模板差异的情况</span>\n<span class=\"c\"># 此脚本目的为了解决存量类文件头注释统一性问题</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [目录]</span>\n<span class=\"c\">#   - replace_class_header_anotation.sh 遍历更新当前目录下，子目录git仓库的脚本</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [说明]</span>\n<span class=\"c\"># 1、遍历指定目录（若未传参数则为当前目录）下的子目录</span>\n<span class=\"c\"># 2、匹配所有iOS工程类文件：.h .m .swift</span>\n<span class=\"c\"># 3、对其注释头进行模板替换</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [参数]</span>\n<span class=\"c\"># 1、参数1，指定目录</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [调用说明]</span>\n<span class=\"c\"># 1、未指定目录，则取当前目录：sh replace_class_header_anotation.sh</span>\n<span class=\"c\"># 2、指定目录：sh replace_class_header_anotation.sh /User/xxx/xx</span>\n<span class=\"c\"># 本脚本适用于将：下述注释替换成 统一注释模板：</span>\n<span class=\"c\">#   其一：</span>\n<span class=\"c\">#//</span>\n<span class=\"c\">#//  FileName.h</span>\n<span class=\"c\">#//  ProjectName</span>\n<span class=\"c\">#//</span>\n<span class=\"c\">#//  Created by Author on Date.</span>\n<span class=\"c\">#// (没版权信息)</span>\n<span class=\"c\">#//</span>\n<span class=\"c\">#</span>\n<span class=\"c\">#   其二：</span>\n<span class=\"c\">#   /****************************************************************************************************</span>\n<span class=\"c\">#   * 版权所有： Copyright (c) 2012-2021 xxxx. All rights reserved.</span>\n<span class=\"c\">#   * 作 者： Author （2021/3/12）</span>\n<span class=\"c\">#   * 界面描述：  界面描述</span>\n<span class=\"c\">#   ****************************************************************************************************/</span>\n<span class=\"c\">#</span>\n<span class=\"c\">#   其三：</span>\n<span class=\"c\">#   没有任何注释的</span>\n<span class=\"c\">#</span>\n<span class=\"c\">#</span>\n<span class=\"c\">#   替换成统一注释模板：</span>\n<span class=\"c\">#</span>\n<span class=\"c\">#//</span>\n<span class=\"c\">#//  \"$filename\"</span>\n<span class=\"c\">#//  \"$project_name\"</span>\n<span class=\"c\">#//</span>\n<span class=\"c\">#//  Created by \"$auth\" on \"$date\".</span>\n<span class=\"c\">#//  \"$copyright_str\"</span>\n<span class=\"c\">#//</span>\n<span class=\"c\">#</span>\n<span class=\"c\">#定义版权信息</span>\n<span class=\"nb\">export </span><span class=\"nv\">copyright_str</span><span class=\"o\">=</span><span class=\"s2\">\"Copyright (C) 2023 Your Company Name Technology Limited. All rights reserved.\"</span>\n\n<span class=\"c\">#定义默认用户信息：PaysonChen</span>\n<span class=\"nb\">export </span><span class=\"nv\">def_author_str</span><span class=\"o\">=</span><span class=\"s2\">\"PaysonChen\"</span>\n\n<span class=\"c\">#定义默认日期：当前日期</span>\n<span class=\"nb\">export </span><span class=\"nv\">def_time_str</span><span class=\"o\">=</span><span class=\"sb\">`</span><span class=\"nb\">date</span> +%Y/%m/%d<span class=\"sb\">`</span>\n\n<span class=\"k\">function </span>get_creator_name_with_template_2<span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"nv\">file</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n    <span class=\"nv\">creator_name</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">sed</span> <span class=\"nt\">-n</span> <span class=\"s1\">'s/.*作    者： \\(.*\\).*/\\1/p'</span> <span class=\"nv\">$file</span><span class=\"si\">)</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"creator_name=\"</span><span class=\"nv\">$creator_name</span><span class=\"s2\">\" in file=\"</span><span class=\"nv\">$file</span>\n    \n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$creator_name</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">echo</span> <span class=\"s1\">'///获取创建者 第二种模板获取 为空 使用默认值'</span>\n        <span class=\"nv\">creator_name</span><span class=\"o\">=</span><span class=\"nv\">$def_author_str</span>\n    <span class=\"k\">fi</span>\n<span class=\"o\">}</span>\n\n<span class=\"k\">function </span>get_creator_name<span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"nv\">file</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n    <span class=\"nv\">creator_name</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">sed</span> <span class=\"nt\">-n</span> <span class=\"s1\">'s/.*Created by \\(.*\\) on.*/\\1/p'</span> <span class=\"nv\">$file</span><span class=\"si\">)</span>\n    \n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$creator_name</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span>get_creator_name_with_template_2 <span class=\"nv\">$file</span>\n    <span class=\"k\">fi\n    \n    </span><span class=\"nb\">echo</span> <span class=\"s2\">\"--------creator_name=【\"</span><span class=\"nv\">$creator_name</span><span class=\"s2\">\"】 in file=\"</span><span class=\"nv\">$file</span>\n<span class=\"o\">}</span>\n\n\n\n<span class=\"k\">function </span>get_creator_time_with_template_2<span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"nv\">file</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n    <span class=\"nv\">creator_time</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">sed</span> <span class=\"nt\">-n</span> <span class=\"s1\">'s/.*创建日期： \\(.*\\).*/\\1/p'</span> <span class=\"nv\">$file</span><span class=\"si\">)</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"-------创建日期=【\"</span><span class=\"nv\">$creator_time</span><span class=\"s2\">\"】 in file=\"</span><span class=\"nv\">$file</span>\n\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$creator_time</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then</span>\n<span class=\"c\">#        echo '///获取创建时间 第二种模板获取 为空 使用默认值'</span>\n        <span class=\"nv\">creator_time</span><span class=\"o\">=</span><span class=\"nv\">$def_time_str</span>\n    <span class=\"k\">fi</span>\n<span class=\"o\">}</span>\n\n\n<span class=\"k\">function </span>format_creator_time<span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"nv\">creator_time</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n    \n    <span class=\"nv\">length</span><span class=\"o\">=</span><span class=\"k\">${#</span><span class=\"nv\">creator_time</span><span class=\"k\">}</span>\n\n    <span class=\"c\"># 截取除最后一个字符外的部分</span>\n    <span class=\"nv\">creator_time</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">creator_time</span>:0:length-1<span class=\"k\">}</span>\n    <span class=\"c\">#echo \"截去掉最后一个字符后的字符串: $creator_time\"</span>\n<span class=\"o\">}</span>\n\n\n<span class=\"k\">function </span>get_creator_time<span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"nv\">file</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n    \n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$2</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nv\">line</span><span class=\"o\">=</span>5\n    <span class=\"k\">else\n        </span><span class=\"nv\">line</span><span class=\"o\">=</span><span class=\"nv\">$2</span>\n    <span class=\"k\">fi</span>\n    <span class=\"c\">#creator_time=$(sed -n '5s/.*\\(.\\{10\\}\\)$/\\1/p' $file)</span>\n    <span class=\"nv\">creator_time</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">awk</span> <span class=\"s1\">'NR=='</span><span class=\"nv\">$line</span><span class=\"s1\">' {print $NF}'</span> <span class=\"nv\">$file</span><span class=\"si\">)</span>\n\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"-------creator_time=【\"</span><span class=\"nv\">$creator_time</span><span class=\"s2\">\"】 line = \"</span><span class=\"nv\">$line</span><span class=\"s2\">\" in file=\"</span><span class=\"nv\">$file</span>\n<span class=\"c\">#    date_regex='^(19|20)[0-9]{2}/(0?[1-9]|1[0-2])/(0?[1-9]|[1-2][0-9]|3[0-1]).$'</span>\n    <span class=\"c\">#date_regex='^(19[0-9]{2}|20[0-9]{2}|[0-9]{2})/(0?[1-9]|1[0-2])/(0?[1-9]|[1-2][0-9]|3[0-1]).$'</span>\n    <span class=\"nv\">date_regex</span><span class=\"o\">=</span><span class=\"s1\">'^(19[0-9]{2}|20[0-9]{2}|[0-9]{2})([-/])(0?[1-9]|1[0-2])([-/])(0?[1-9]|[1-2][0-9]|3[0-1]).$'</span>\n\n    <span class=\"c\"># 进行正则匹配</span>\n    <span class=\"k\">if</span> <span class=\"o\">[[</span> <span class=\"nv\">$creator_time</span> <span class=\"o\">=</span>~ <span class=\"nv\">$date_regex</span> <span class=\"o\">]]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">echo</span> <span class=\"s2\">\"日期格式正确，截断最后一个小数 .\"</span>\n        format_creator_time <span class=\"nv\">$creator_time</span>\n    <span class=\"k\">else\n        if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$2</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n            </span><span class=\"nv\">discount</span><span class=\"o\">=</span>1\n            <span class=\"nv\">new_line</span><span class=\"o\">=</span><span class=\"k\">$((</span>line-discount<span class=\"k\">))</span>\n            <span class=\"nb\">echo</span> <span class=\"s2\">\"常规调用如果匹配不到的花，那么多一次，向上查找\"</span><span class=\"nv\">$discount</span><span class=\"s2\">\"行，进行递归:\"</span><span class=\"nv\">$new_line</span>\n            get_creator_time <span class=\"nv\">$file</span> <span class=\"nv\">$new_line</span>\n        <span class=\"k\">else\n            </span><span class=\"nb\">echo</span> <span class=\"s2\">\"日期格式错误，执行第二种匹配\"</span>\n            get_creator_time_with_template_2 <span class=\"nv\">$file</span>\n        <span class=\"k\">fi\n    fi\n    </span><span class=\"nb\">echo</span> <span class=\"s2\">\"********creator_time=【\"</span><span class=\"nv\">$creator_time</span><span class=\"s2\">\"】 in file=\"</span><span class=\"nv\">$file</span>\n<span class=\"o\">}</span>\n\n\n\n<span class=\"k\">function </span>replace_header_anoation<span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"nv\">file</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n    \n    <span class=\"c\">#定义要替换的字符串</span>\n    <span class=\"c\">#文件名</span>\n    <span class=\"nv\">filename</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">echo</span> <span class=\"s2\">\"</span><span class=\"nv\">$file</span><span class=\"s2\">\"</span> | <span class=\"nb\">sed</span> <span class=\"s1\">'s#.*/##'</span><span class=\"si\">)</span>\n    <span class=\"c\">#项目名</span>\n    <span class=\"nv\">project_name</span><span class=\"o\">=</span><span class=\"s2\">\"PSCProject\"</span>\n    \n    <span class=\"c\">#还有从当前类中获取作者信息，获取不到取默认值</span>\n    <span class=\"nv\">auth</span><span class=\"o\">=</span><span class=\"nv\">$creator_name</span>\n    \n    <span class=\"c\">#还有从当前类中获取作者信息，获取不到取默认值</span>\n    <span class=\"nb\">date</span><span class=\"o\">=</span><span class=\"nv\">$creator_time</span>\n\n    <span class=\"c\">#以下是替换的模板</span>\n    <span class=\"nv\">new_content</span><span class=\"o\">=</span><span class=\"s2\">\"//\n//  \"</span><span class=\"nv\">$filename</span><span class=\"s2\">\"\n//  \"</span><span class=\"nv\">$project_name</span><span class=\"s2\">\"\n//\n//  Created by \"</span><span class=\"nv\">$auth</span><span class=\"s2\">\" on \"</span><span class=\"nv\">$date</span><span class=\"s2\">\".\n//  \"</span><span class=\"nv\">$copyright_str</span><span class=\"s2\">\"\n//\"</span>\n\n    <span class=\"nv\">new_content_escaped</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">echo</span> <span class=\"s2\">\"</span><span class=\"nv\">$new_content</span><span class=\"s2\">\"</span> | <span class=\"nb\">sed</span> <span class=\"s1\">'s/$/\\\\/'</span><span class=\"si\">)</span> <span class=\"c\"># 转义换行符</span>\n    <span class=\"nb\">sed</span> <span class=\"nt\">-i</span> <span class=\"s1\">''</span> <span class=\"nt\">-e</span> <span class=\"s2\">\"1,7c</span><span class=\"se\">\\\\</span><span class=\"s2\">\n</span><span class=\"nv\">$new_content_escaped</span><span class=\"s2\">\"</span> <span class=\"s2\">\"</span><span class=\"nv\">$file</span><span class=\"s2\">\"</span>\n\n    <span class=\"c\">#还有几个问题待优化</span>\n    <span class=\"c\">#1、如果开头没有注释，则会直接覆盖，或者注释不足7行的</span>\n    <span class=\"c\">#2、日期正则如果不是以 YYYY/MM/DD or YY/MM/DD 其中/和-都适用</span>\n        <span class=\"c\">#2.1但是兼容2023/8/1这样的个位数日期)，</span>\n        <span class=\"c\">#2.2如果日期是8/1/23 这样会导致识别错误 会被替换成今天的日期</span>\n\n<span class=\"o\">}</span>\n\n<span class=\"c\"># 统一类头注释</span>\n<span class=\"k\">function </span>unify_header_anoation<span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"nv\">file</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n\n    <span class=\"c\">#还有从当前类中获取作者信息，获取不到取默认值</span>\n    get_creator_name <span class=\"nv\">$file</span>\n    \n    <span class=\"c\">#还有从当前类中获取作者信息，获取不到取默认值</span>\n    get_creator_time <span class=\"nv\">$file</span>\n    \n    <span class=\"c\">#不传第二个参数 则执行替换，传就不执行</span>\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$2</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span>replace_header_anoation <span class=\"nv\">$file</span>\n    <span class=\"k\">fi</span>\n<span class=\"o\">}</span>\n\n\n<span class=\"k\">function </span>main<span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"nv\">file_path</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$file_path</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">echo</span> <span class=\"s1\">'///未指定路径,file_path为. 当前路径'</span>\n        <span class=\"nv\">file_path</span><span class=\"o\">=</span><span class=\"nb\">.</span>\n    <span class=\"k\">fi</span>\n\n\n    <span class=\"c\">#遍历当前路径下所有oc类</span>\n    find <span class=\"nv\">$file_path</span> <span class=\"nt\">-type</span> f <span class=\"nt\">-name</span> <span class=\"s2\">\"*.swift\"</span> <span class=\"nt\">-o</span> <span class=\"nt\">-name</span> <span class=\"s2\">\"*.h\"</span> <span class=\"nt\">-o</span> <span class=\"nt\">-name</span> <span class=\"s2\">\"*.m\"</span> | <span class=\"k\">while </span><span class=\"nb\">read </span>file<span class=\"p\">;</span> <span class=\"k\">do\n        </span>unify_header_anoation <span class=\"nv\">$file</span> <span class=\"nv\">$2</span>\n    <span class=\"k\">done</span>\n<span class=\"o\">}</span>\n\n\nmain <span class=\"nv\">$1</span> <span class=\"nv\">$2</span>\n\n\n\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h3 id=\"32-第二步新增类注释模板制定\">3.2 第二步：新增类注释模板制定</h3>\n\n<p>增量治理，可以通过工程内部的内置的模板进行限定，具体操作为：</p>\n\n<h4 id=\"321-全局指定\">3.2.1 全局指定</h4>\n\n<p>全局指定在下列路径中新增文件名为：IDETemplateMacros.plist</p>\n\n<p>其中内容为</p>\n\n<div class=\"language-xml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n</pre></td><td class=\"rouge-code\"><pre><span class=\"cp\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</span>\n<span class=\"cp\">&lt;!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\"&gt;</span>\n<span class=\"nt\">&lt;plist</span> <span class=\"na\">version=</span><span class=\"s\">\"1.0\"</span><span class=\"nt\">&gt;</span>\n<span class=\"nt\">&lt;dict&gt;</span>\n    <span class=\"nt\">&lt;key&gt;</span>FILEHEADER<span class=\"nt\">&lt;/key&gt;</span>\n    <span class=\"nt\">&lt;string&gt;</span>\n//  \n//  ___FILENAME___ \n//  ___PACKAGENAME___\n//\n//  Created by ___FULLUSERNAME___ on ___DATE___\n//  ___COPYRIGHT___\n//\n    <span class=\"nt\">&lt;/string&gt;</span>\n<span class=\"nt\">&lt;/dict&gt;</span>\n<span class=\"nt\">&lt;/plist&gt;</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>路径（按优先级从低到高排序：如果更高一级优先级目录下出现了IDETemplateMacros，会覆盖比他低优先级的目录下的IDETemplateMacros内容）</p>\n\n<p>xcWorkspace：</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>XXX.xcworkspace/xcshareddata/IDETemplateMacros.plist \n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>xcodeproj（相比xcworkspace，具有更高优先级）：</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>XXX.xcodeproj/xcshareddata/IDETemplateMacros.plist\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>xcodeproj下的xcshareddata文件夹下存在IDETemplateMacros.plist，会覆盖xcworkspace的xcshareddata，（也就是xcworkspace的xcshareddata的IDETemplateMacros.plist不生效）</p>\n\n<p><u>**综上所述：xcworkspace下的IDETemplateMacros，在xcworkspace内部的xcodeproj未指定IDETemplateMacros时生效**</u></p>\n\n<h4 id=\"322-用户指定\">3.2.2 用户指定</h4>\n\n<p>上述xcodeproj、xcworkspace根目录下还有各自xcuserdata，xcuserdata内包含各个用户名的文件夹 username.xcuserdatad，存在此目录下的IDETemplateMacros.plist ，优先级高于xcshareddata，</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n</pre></td><td class=\"rouge-code\"><pre>XXX.xcworkspace/xcuserdata/IDETemplateMacros.plist \nXXX.xcodeproj/xcuserdata/IDETemplateMacros.plist\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p><strong><em><u>优先级与2.2.1所述一致：xcworkspace/xcodeproj内的xcshareddata下的IDETemplateMacros，在xcworkspace/xcodeproj内部的xcuserdata未指定IDETemplateMacros时生效</u></em></strong></p>\n\n<h4 id=\"323-本地指定\">3.2.3 本地指定</h4>\n\n<p>上述情况之外：</p>\n\n<p><strong><em><u>在上述均不存在IDETemplateMacros.plist时，本地目录才会生效</u></em></strong>：</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>/Users/Mac登录名/Library/Developer/Xcode/UserData/IDETemplateMacros.plist \n</pre></td></tr></tbody></table></code></pre></div></div>\n\n","name":"2023-07-31-6-iOS-组件化-命名注释篇.md","previous":{"id":"/2023/07/26/5-iOS组件化-资源组件库","tags":[],"relative_path":"_posts/2023-07-26-5-iOS组件化-资源组件库.md","collection":"posts","name":"2023-07-26-5-iOS组件化-资源组件库.md","url":"/2023/07/26/5-iOS%E7%BB%84%E4%BB%B6%E5%8C%96-%E8%B5%84%E6%BA%90%E7%BB%84%E4%BB%B6%E5%BA%93/","title":"iOS组件化实践之：资源组件库","date":"2023-07-26 00:00:00 +0800","categories":[],"path":"_posts/2023-07-26-5-iOS组件化-资源组件库.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/home-bg-geek.jpg","slug":"5-iOS组件化-资源组件库","ext":".md"},"output":"<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"google-site-verification\" content=\"xBT4GhYoi5qRD5tr338pgPM5OWHHIDR6mNg1a3euekI\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, viewport-fit=cover\">\n    <meta name=\"description\" content=\"与你一起发现更大的世界。\">\n    <meta name=\"keywords\"  content=\"PaysonChen,iOS,流媒体\">\n    <meta name=\"theme-color\" content=\"#000000\">\n    \n    <!-- Open Graph -->\n    <meta property=\"og:title\" content=\"iOS组件化实践之：类命名注释篇 - PaysonChen的博客 | PaysonChen Blog\">\n    \n    <meta property=\"og:type\" content=\"article\">\n    <meta property=\"og:description\" content=\"iOS组件化实践之：类命名注释篇\n\">\n    \n    \n    <meta property=\"article:published_time\" content=\"2023-07-31T00:00:00Z\">\n    \n    \n    <meta property=\"article:author\" content=\"PaysonChen\">\n    \n    \n    \n    <meta property=\"og:image\" content=\"http://localhost:4000\">\n    <meta property=\"og:url\" content=\"http://localhost:4000/2023/07/31/6-iOS-%E7%BB%84%E4%BB%B6%E5%8C%96-%E5%91%BD%E5%90%8D%E6%B3%A8%E9%87%8A%E7%AF%87/\">\n    <meta property=\"og:site_name\" content=\"PaysonChen的博客 | PaysonChen Blog\">\n    \n    <title>iOS组件化实践之：类命名注释篇 - PaysonChen的博客 | PaysonChen Blog</title>\n\n    <!-- Web App Manifest -->\n    <link rel=\"manifest\" href=\"/pwa/manifest.json\">\n\n    <!-- Favicon -->\n    <link rel=\"shortcut icon\" href=\"/img/favicon.ico\">\n    \n    <!-- Canonical URL -->\n    <link rel=\"canonical\" href=\"http://localhost:4000/2023/07/31/6-iOS-%E7%BB%84%E4%BB%B6%E5%8C%96-%E5%91%BD%E5%90%8D%E6%B3%A8%E9%87%8A%E7%AF%87/\">\n\n    <!-- Bootstrap Core CSS -->\n    <link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\">\n\n    <!-- Custom CSS -->\n    <link rel=\"stylesheet\" href=\"/css/hux-blog.min.css\">\n\n    <!-- Custom Fonts -->\n    <!-- <link href=\"http://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\"> -->\n    <!-- Hux change font-awesome CDN to qiniu -->\n    <link href=\"//cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\">\n\n\n    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->\n    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->\n    <!--[if lt IE 9]>\n        <script src=\"https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js\"></script>\n        <script src=\"https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js\"></script>\n    <![endif]-->\n\n    <!-- ga & ba script hoook -->\n    <script></script>\n</head>\n\n\n<!-- hack iOS CSS :active style -->\n<body ontouchstart=\"\">\n\n    <!-- Navigation -->\n\n    <nav class=\"navbar navbar-default navbar-custom navbar-fixed-top\">\n        \n        <div class=\"container-fluid\">\n            <!-- Brand and toggle get grouped for better mobile display -->\n            <div class=\"navbar-header page-scroll\">\n                <button type=\"button\" class=\"navbar-toggle\">\n                    <span class=\"sr-only\">Toggle navigation</span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                </button>\n                <a class=\"navbar-brand\" href=\"/\">PaysonChen Blog</a>\n            </div>\n\n            <!-- Collect the nav links, forms, and other content for toggling -->\n            <div id=\"huxblog_navbar\">\n                <div class=\"navbar-collapse\">\n                    <ul class=\"nav navbar-nav navbar-right\">\n                        <li>\n                            <a href=\"/\">Home</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        <li>\n                            <a href=\"/about/\">About</a>\n                        </li>\n                        \n                        \n                        \n                        <li>\n                            <a href=\"/archive/\">Archive</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        <li class=\"search-icon\">\n                            <a href=\"javascript:void(0)\">\n                                <i class=\"fa fa-search\"></i>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n            <!-- /.navbar-collapse -->\n        </div>\n        <!-- /.container -->\n    </nav>\n\n    <script>\n        // Drop Bootstarp low-performance Navbar\n        // Use customize navbar with high-quality material design animation\n        // in high-perf jank-free CSS3 implementation\n        var $body = document.body;\n        var $toggle = document.querySelector('.navbar-toggle');\n        var $navbar = document.querySelector('#huxblog_navbar');\n        var $collapse = document.querySelector('.navbar-collapse');\n\n        var __HuxNav__ = {\n            close: function () {\n                $navbar.className = \" \";\n                // wait until animation end.\n                setTimeout(function () {\n                    // prevent frequently toggle\n                    if ($navbar.className.indexOf('in') < 0) {\n                        $collapse.style.height = \"0px\"\n                    }\n                }, 400)\n            },\n            open: function () {\n                $collapse.style.height = \"auto\"\n                $navbar.className += \" in\";\n            }\n        }\n\n        // Bind Event\n        $toggle.addEventListener('click', function (e) {\n            if ($navbar.className.indexOf('in') > 0) {\n                __HuxNav__.close()\n            } else {\n                __HuxNav__.open()\n            }\n        })\n\n        /**\n         * Since Fastclick is used to delegate 'touchstart' globally\n         * to hack 300ms delay in iOS by performing a fake 'click',\n         * Using 'e.stopPropagation' to stop 'touchstart' event from \n         * $toggle/$collapse will break global delegation.\n         * \n         * Instead, we use a 'e.target' filter to prevent handler\n         * added to document close HuxNav.  \n         *\n         * Also, we use 'click' instead of 'touchstart' as compromise\n         */\n        document.addEventListener('click', function (e) {\n            if (e.target == $toggle) return;\n            if (e.target.className == 'icon-bar') return;\n            __HuxNav__.close();\n        })\n    </script>\n    <!-- Search -->\n<div class=\"search-page\">\n  <div class=\"search-icon-close-container\">\n    <span class=\"search-icon-close\">\n      <i class=\"fa fa-chevron-down\"></i>\n    </span>\n  </div>\n  <div class=\"search-main container\">\n    <div class=\"row\">\n      <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n        <form></form>\n        <input type=\"text\" id=\"search-input\" placeholder=\"$ grep...\">\n        </form>\n        <div id=\"search-results\" class=\"mini-post-list\"></div>\n      </div>\n    </div>\n  </div>\n</div>\n\n    <!-- Image to hack wechat -->\n<!-- <img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\"> -->\n<!-- <img src=\"/img/home-bg-geek.jpg\" width=\"0\" height=\"0\"> -->\n\n<!-- Post Header -->\n\n\n\n<style type=\"text/css\">\n    header.intro-header{\n        position: relative;\n        background-image: url('/img/home-bg-geek.jpg');\n        background: ;\n    }\n\n    \n</style>\n\n<header class=\"intro-header\" >\n\n    <div class=\"header-mask\"></div>\n    \n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <div class=\"post-heading\">\n                    <div class=\"tags\">\n                        \n                    </div>\n                    <h1>iOS组件化实践之：类命名注释篇</h1>\n                    \n                    <h2 class=\"subheading\"></h2>\n                    <span class=\"meta\">Posted by PaysonChen on July 31, 2023</span>\n                </div>\n            </div>\n        </div>\n    </div>\n</header>\n\n\n\n\n\n\n<!-- Post Content -->\n<article>\n    <div class=\"container\">\n        <div class=\"row\">\n\n    <!-- Post Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                post-container\">\n\n                <!-- Multi-Lingual -->\n                \n\n\t\t\t\t<h1 id=\"ios组件化实践之类命名注释篇\">iOS组件化实践之：类命名注释篇</h1>\n\n<h2 id=\"1问题描述\">1.问题描述</h2>\n\n<p>CocoaPods组件创建时，提供的一个很好的管理命名规范的思路：以统一的命名前缀，一般以项目/组织等缩写作为前缀</p>\n\n<p>组件化规整之后，可能存在的情况是前后的文件命名不一致导致的影响代码易读性、易维护等问题</p>\n\n<p>除此之外，由于代码经由不同人迭代的，甚至不同组织迭代（从外包接手的项目）还存在一些文件注释的注释模板差异的情况</p>\n\n<h2 id=\"2-类命名统一\">2. 类命名统一</h2>\n\n<h3 id=\"21-类重命名之前\">2.1 类重命名之前</h3>\n\n<p>需要确认下，当前类或者与之相关的一些类，是否存在于<a href=\"https://cocoapods.org/\">CocoaPods</a>公有源上，如果存在，可以直接通过Pod引入（组件内通过dependency），</p>\n\n<p>举个例子：如果你需要进行重命名的类是这样的：SDWebImage、SDWebImageXXX、SDXXX，显然，这是将SDWebImage通过代码直接集成，由于SDWebImage类数量比较多，且属于成熟框架，在确认没有私自改动逻辑的情况下，可以考虑直接移除，采用通过Pod引入（组件内通过dependency）</p>\n\n<p>当然，如果存在没有被用到的类，也正好是一个移除他们的好时机！</p>\n\n<p><strong>‼️特别注意：改名之前，需要确认，要改的类名是否已经存在工程中，如果存在且继续修改，会造成很多错误替换，造成很复杂的编译问题，且难以回退。</strong></p>\n\n<p>例如：ABCWebView，要改成PSCWebView，此时如果工程中已经存在PSCWebView，则ABCWebView继续再改成PSCWebView，会造成所有ABCWebView与PSCWebView的混乱，除非单次修改（之前的操作已经提交），否则回退也变得异常困难。</p>\n\n<h3 id=\"22-常规类重命名\">2.2 常规类重命名</h3>\n\n<p>可以通过IDE：Xcode自带的rename功能进行类名重命名：</p>\n\n<p><img src=\"/img/name/1.png\" alt=\"\" /></p>\n\n<p>替换成带期望前缀的类名</p>\n\n<p><img src=\"/img/name/2.png\" alt=\"WX20230731-191648\" /></p>\n\n<p>可能存在替换不完全的可能，需要检索下旧类名，全局替换下，确保编译通过方可</p>\n\n<h3 id=\"23-categories重命名\">2.3 categories重命名</h3>\n\n<p>categories的重命名无法根据上述方式，只能通过常规的修改文件名，以及全局替换的方式。</p>\n\n<p>值得一提的是，若一个基础类存在多个单一功能的categories，例如存在UIButton+Category1，UIButton+Category2……，他们有可能存在重复的功能可以考虑保留其中一个即可，也可以考虑将他们重构，合并，或者是重新划分下功能归属，</p>\n\n<h2 id=\"3类注释模板统一\">3.类注释模板统一：</h2>\n\n<p>治理这些情况，可能就需要分两步：</p>\n\n<h3 id=\"31-第一步存量类注释规范治理\">3.1 第一步：存量类注释规范治理</h3>\n\n<p>存量治理，这边采用脚本批量执行，具体思路如下：</p>\n\n<ul>\n  <li>遍历指定目录（若未传参数则为当前目录）下的子目录</li>\n  <li>匹配所有iOS工程类文件：.h .m .swift</li>\n  <li>对其注释头进行模板替换\n    <ul>\n      <li>匹配获取当前类的author，匹配不到则使用默认值（需定义）</li>\n      <li>匹配获取当前类的time，匹配不到则使用默认值（需定义）</li>\n      <li>替换版权信息（需定义）</li>\n    </ul>\n  </li>\n</ul>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#!/bin/bash</span>\n\n<span class=\"c\"># 遍历更新当前目录下(含子目录）所有iOS工程类文件：.h .m .swift 并对其注释头进行模板替换</span>\n<span class=\"c\"># author: Chenyp34</span>\n<span class=\"c\"># [目的]</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># 组件化规整之后，可能存在的情况是前后的文件命名不一致导致的影响代码易读性、易维护等问题</span>\n<span class=\"c\"># 除此之外，由于代码经由不同人迭代的，甚至不同组织迭代（从外包接手的项目）还存在一些文件注释的注释模板差异的情况</span>\n<span class=\"c\"># 此脚本目的为了解决存量类文件头注释统一性问题</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [目录]</span>\n<span class=\"c\">#   - replace_class_header_anotation.sh 遍历更新当前目录下，子目录git仓库的脚本</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [说明]</span>\n<span class=\"c\"># 1、遍历指定目录（若未传参数则为当前目录）下的子目录</span>\n<span class=\"c\"># 2、匹配所有iOS工程类文件：.h .m .swift</span>\n<span class=\"c\"># 3、对其注释头进行模板替换</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [参数]</span>\n<span class=\"c\"># 1、参数1，指定目录</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [调用说明]</span>\n<span class=\"c\"># 1、未指定目录，则取当前目录：sh replace_class_header_anotation.sh</span>\n<span class=\"c\"># 2、指定目录：sh replace_class_header_anotation.sh /User/xxx/xx</span>\n<span class=\"c\"># 本脚本适用于将：下述注释替换成 统一注释模板：</span>\n<span class=\"c\">#   其一：</span>\n<span class=\"c\">#//</span>\n<span class=\"c\">#//  FileName.h</span>\n<span class=\"c\">#//  ProjectName</span>\n<span class=\"c\">#//</span>\n<span class=\"c\">#//  Created by Author on Date.</span>\n<span class=\"c\">#// (没版权信息)</span>\n<span class=\"c\">#//</span>\n<span class=\"c\">#</span>\n<span class=\"c\">#   其二：</span>\n<span class=\"c\">#   /****************************************************************************************************</span>\n<span class=\"c\">#   * 版权所有： Copyright (c) 2012-2021 xxxx. All rights reserved.</span>\n<span class=\"c\">#   * 作 者： Author （2021/3/12）</span>\n<span class=\"c\">#   * 界面描述：  界面描述</span>\n<span class=\"c\">#   ****************************************************************************************************/</span>\n<span class=\"c\">#</span>\n<span class=\"c\">#   其三：</span>\n<span class=\"c\">#   没有任何注释的</span>\n<span class=\"c\">#</span>\n<span class=\"c\">#</span>\n<span class=\"c\">#   替换成统一注释模板：</span>\n<span class=\"c\">#</span>\n<span class=\"c\">#//</span>\n<span class=\"c\">#//  \"$filename\"</span>\n<span class=\"c\">#//  \"$project_name\"</span>\n<span class=\"c\">#//</span>\n<span class=\"c\">#//  Created by \"$auth\" on \"$date\".</span>\n<span class=\"c\">#//  \"$copyright_str\"</span>\n<span class=\"c\">#//</span>\n<span class=\"c\">#</span>\n<span class=\"c\">#定义版权信息</span>\n<span class=\"nb\">export </span><span class=\"nv\">copyright_str</span><span class=\"o\">=</span><span class=\"s2\">\"Copyright (C) 2023 Your Company Name Technology Limited. All rights reserved.\"</span>\n\n<span class=\"c\">#定义默认用户信息：PaysonChen</span>\n<span class=\"nb\">export </span><span class=\"nv\">def_author_str</span><span class=\"o\">=</span><span class=\"s2\">\"PaysonChen\"</span>\n\n<span class=\"c\">#定义默认日期：当前日期</span>\n<span class=\"nb\">export </span><span class=\"nv\">def_time_str</span><span class=\"o\">=</span><span class=\"sb\">`</span><span class=\"nb\">date</span> +%Y/%m/%d<span class=\"sb\">`</span>\n\n<span class=\"k\">function </span>get_creator_name_with_template_2<span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"nv\">file</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n    <span class=\"nv\">creator_name</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">sed</span> <span class=\"nt\">-n</span> <span class=\"s1\">'s/.*作    者： \\(.*\\).*/\\1/p'</span> <span class=\"nv\">$file</span><span class=\"si\">)</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"creator_name=\"</span><span class=\"nv\">$creator_name</span><span class=\"s2\">\" in file=\"</span><span class=\"nv\">$file</span>\n    \n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$creator_name</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">echo</span> <span class=\"s1\">'///获取创建者 第二种模板获取 为空 使用默认值'</span>\n        <span class=\"nv\">creator_name</span><span class=\"o\">=</span><span class=\"nv\">$def_author_str</span>\n    <span class=\"k\">fi</span>\n<span class=\"o\">}</span>\n\n<span class=\"k\">function </span>get_creator_name<span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"nv\">file</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n    <span class=\"nv\">creator_name</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">sed</span> <span class=\"nt\">-n</span> <span class=\"s1\">'s/.*Created by \\(.*\\) on.*/\\1/p'</span> <span class=\"nv\">$file</span><span class=\"si\">)</span>\n    \n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$creator_name</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span>get_creator_name_with_template_2 <span class=\"nv\">$file</span>\n    <span class=\"k\">fi\n    \n    </span><span class=\"nb\">echo</span> <span class=\"s2\">\"--------creator_name=【\"</span><span class=\"nv\">$creator_name</span><span class=\"s2\">\"】 in file=\"</span><span class=\"nv\">$file</span>\n<span class=\"o\">}</span>\n\n\n\n<span class=\"k\">function </span>get_creator_time_with_template_2<span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"nv\">file</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n    <span class=\"nv\">creator_time</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">sed</span> <span class=\"nt\">-n</span> <span class=\"s1\">'s/.*创建日期： \\(.*\\).*/\\1/p'</span> <span class=\"nv\">$file</span><span class=\"si\">)</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"-------创建日期=【\"</span><span class=\"nv\">$creator_time</span><span class=\"s2\">\"】 in file=\"</span><span class=\"nv\">$file</span>\n\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$creator_time</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then</span>\n<span class=\"c\">#        echo '///获取创建时间 第二种模板获取 为空 使用默认值'</span>\n        <span class=\"nv\">creator_time</span><span class=\"o\">=</span><span class=\"nv\">$def_time_str</span>\n    <span class=\"k\">fi</span>\n<span class=\"o\">}</span>\n\n\n<span class=\"k\">function </span>format_creator_time<span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"nv\">creator_time</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n    \n    <span class=\"nv\">length</span><span class=\"o\">=</span><span class=\"k\">${#</span><span class=\"nv\">creator_time</span><span class=\"k\">}</span>\n\n    <span class=\"c\"># 截取除最后一个字符外的部分</span>\n    <span class=\"nv\">creator_time</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">creator_time</span>:0:length-1<span class=\"k\">}</span>\n    <span class=\"c\">#echo \"截去掉最后一个字符后的字符串: $creator_time\"</span>\n<span class=\"o\">}</span>\n\n\n<span class=\"k\">function </span>get_creator_time<span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"nv\">file</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n    \n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$2</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nv\">line</span><span class=\"o\">=</span>5\n    <span class=\"k\">else\n        </span><span class=\"nv\">line</span><span class=\"o\">=</span><span class=\"nv\">$2</span>\n    <span class=\"k\">fi</span>\n    <span class=\"c\">#creator_time=$(sed -n '5s/.*\\(.\\{10\\}\\)$/\\1/p' $file)</span>\n    <span class=\"nv\">creator_time</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">awk</span> <span class=\"s1\">'NR=='</span><span class=\"nv\">$line</span><span class=\"s1\">' {print $NF}'</span> <span class=\"nv\">$file</span><span class=\"si\">)</span>\n\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"-------creator_time=【\"</span><span class=\"nv\">$creator_time</span><span class=\"s2\">\"】 line = \"</span><span class=\"nv\">$line</span><span class=\"s2\">\" in file=\"</span><span class=\"nv\">$file</span>\n<span class=\"c\">#    date_regex='^(19|20)[0-9]{2}/(0?[1-9]|1[0-2])/(0?[1-9]|[1-2][0-9]|3[0-1]).$'</span>\n    <span class=\"c\">#date_regex='^(19[0-9]{2}|20[0-9]{2}|[0-9]{2})/(0?[1-9]|1[0-2])/(0?[1-9]|[1-2][0-9]|3[0-1]).$'</span>\n    <span class=\"nv\">date_regex</span><span class=\"o\">=</span><span class=\"s1\">'^(19[0-9]{2}|20[0-9]{2}|[0-9]{2})([-/])(0?[1-9]|1[0-2])([-/])(0?[1-9]|[1-2][0-9]|3[0-1]).$'</span>\n\n    <span class=\"c\"># 进行正则匹配</span>\n    <span class=\"k\">if</span> <span class=\"o\">[[</span> <span class=\"nv\">$creator_time</span> <span class=\"o\">=</span>~ <span class=\"nv\">$date_regex</span> <span class=\"o\">]]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">echo</span> <span class=\"s2\">\"日期格式正确，截断最后一个小数 .\"</span>\n        format_creator_time <span class=\"nv\">$creator_time</span>\n    <span class=\"k\">else\n        if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$2</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n            </span><span class=\"nv\">discount</span><span class=\"o\">=</span>1\n            <span class=\"nv\">new_line</span><span class=\"o\">=</span><span class=\"k\">$((</span>line-discount<span class=\"k\">))</span>\n            <span class=\"nb\">echo</span> <span class=\"s2\">\"常规调用如果匹配不到的花，那么多一次，向上查找\"</span><span class=\"nv\">$discount</span><span class=\"s2\">\"行，进行递归:\"</span><span class=\"nv\">$new_line</span>\n            get_creator_time <span class=\"nv\">$file</span> <span class=\"nv\">$new_line</span>\n        <span class=\"k\">else\n            </span><span class=\"nb\">echo</span> <span class=\"s2\">\"日期格式错误，执行第二种匹配\"</span>\n            get_creator_time_with_template_2 <span class=\"nv\">$file</span>\n        <span class=\"k\">fi\n    fi\n    </span><span class=\"nb\">echo</span> <span class=\"s2\">\"********creator_time=【\"</span><span class=\"nv\">$creator_time</span><span class=\"s2\">\"】 in file=\"</span><span class=\"nv\">$file</span>\n<span class=\"o\">}</span>\n\n\n\n<span class=\"k\">function </span>replace_header_anoation<span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"nv\">file</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n    \n    <span class=\"c\">#定义要替换的字符串</span>\n    <span class=\"c\">#文件名</span>\n    <span class=\"nv\">filename</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">echo</span> <span class=\"s2\">\"</span><span class=\"nv\">$file</span><span class=\"s2\">\"</span> | <span class=\"nb\">sed</span> <span class=\"s1\">'s#.*/##'</span><span class=\"si\">)</span>\n    <span class=\"c\">#项目名</span>\n    <span class=\"nv\">project_name</span><span class=\"o\">=</span><span class=\"s2\">\"PSCProject\"</span>\n    \n    <span class=\"c\">#还有从当前类中获取作者信息，获取不到取默认值</span>\n    <span class=\"nv\">auth</span><span class=\"o\">=</span><span class=\"nv\">$creator_name</span>\n    \n    <span class=\"c\">#还有从当前类中获取作者信息，获取不到取默认值</span>\n    <span class=\"nb\">date</span><span class=\"o\">=</span><span class=\"nv\">$creator_time</span>\n\n    <span class=\"c\">#以下是替换的模板</span>\n    <span class=\"nv\">new_content</span><span class=\"o\">=</span><span class=\"s2\">\"//\n//  \"</span><span class=\"nv\">$filename</span><span class=\"s2\">\"\n//  \"</span><span class=\"nv\">$project_name</span><span class=\"s2\">\"\n//\n//  Created by \"</span><span class=\"nv\">$auth</span><span class=\"s2\">\" on \"</span><span class=\"nv\">$date</span><span class=\"s2\">\".\n//  \"</span><span class=\"nv\">$copyright_str</span><span class=\"s2\">\"\n//\"</span>\n\n    <span class=\"nv\">new_content_escaped</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">echo</span> <span class=\"s2\">\"</span><span class=\"nv\">$new_content</span><span class=\"s2\">\"</span> | <span class=\"nb\">sed</span> <span class=\"s1\">'s/$/\\\\/'</span><span class=\"si\">)</span> <span class=\"c\"># 转义换行符</span>\n    <span class=\"nb\">sed</span> <span class=\"nt\">-i</span> <span class=\"s1\">''</span> <span class=\"nt\">-e</span> <span class=\"s2\">\"1,7c</span><span class=\"se\">\\\\</span><span class=\"s2\">\n</span><span class=\"nv\">$new_content_escaped</span><span class=\"s2\">\"</span> <span class=\"s2\">\"</span><span class=\"nv\">$file</span><span class=\"s2\">\"</span>\n\n    <span class=\"c\">#还有几个问题待优化</span>\n    <span class=\"c\">#1、如果开头没有注释，则会直接覆盖，或者注释不足7行的</span>\n    <span class=\"c\">#2、日期正则如果不是以 YYYY/MM/DD or YY/MM/DD 其中/和-都适用</span>\n        <span class=\"c\">#2.1但是兼容2023/8/1这样的个位数日期)，</span>\n        <span class=\"c\">#2.2如果日期是8/1/23 这样会导致识别错误 会被替换成今天的日期</span>\n\n<span class=\"o\">}</span>\n\n<span class=\"c\"># 统一类头注释</span>\n<span class=\"k\">function </span>unify_header_anoation<span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"nv\">file</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n\n    <span class=\"c\">#还有从当前类中获取作者信息，获取不到取默认值</span>\n    get_creator_name <span class=\"nv\">$file</span>\n    \n    <span class=\"c\">#还有从当前类中获取作者信息，获取不到取默认值</span>\n    get_creator_time <span class=\"nv\">$file</span>\n    \n    <span class=\"c\">#不传第二个参数 则执行替换，传就不执行</span>\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$2</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span>replace_header_anoation <span class=\"nv\">$file</span>\n    <span class=\"k\">fi</span>\n<span class=\"o\">}</span>\n\n\n<span class=\"k\">function </span>main<span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"nv\">file_path</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$file_path</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">echo</span> <span class=\"s1\">'///未指定路径,file_path为. 当前路径'</span>\n        <span class=\"nv\">file_path</span><span class=\"o\">=</span><span class=\"nb\">.</span>\n    <span class=\"k\">fi</span>\n\n\n    <span class=\"c\">#遍历当前路径下所有oc类</span>\n    find <span class=\"nv\">$file_path</span> <span class=\"nt\">-type</span> f <span class=\"nt\">-name</span> <span class=\"s2\">\"*.swift\"</span> <span class=\"nt\">-o</span> <span class=\"nt\">-name</span> <span class=\"s2\">\"*.h\"</span> <span class=\"nt\">-o</span> <span class=\"nt\">-name</span> <span class=\"s2\">\"*.m\"</span> | <span class=\"k\">while </span><span class=\"nb\">read </span>file<span class=\"p\">;</span> <span class=\"k\">do\n        </span>unify_header_anoation <span class=\"nv\">$file</span> <span class=\"nv\">$2</span>\n    <span class=\"k\">done</span>\n<span class=\"o\">}</span>\n\n\nmain <span class=\"nv\">$1</span> <span class=\"nv\">$2</span>\n\n\n\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h3 id=\"32-第二步新增类注释模板制定\">3.2 第二步：新增类注释模板制定</h3>\n\n<p>增量治理，可以通过工程内部的内置的模板进行限定，具体操作为：</p>\n\n<h4 id=\"321-全局指定\">3.2.1 全局指定</h4>\n\n<p>全局指定在下列路径中新增文件名为：IDETemplateMacros.plist</p>\n\n<p>其中内容为</p>\n\n<div class=\"language-xml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n</pre></td><td class=\"rouge-code\"><pre><span class=\"cp\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</span>\n<span class=\"cp\">&lt;!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\"&gt;</span>\n<span class=\"nt\">&lt;plist</span> <span class=\"na\">version=</span><span class=\"s\">\"1.0\"</span><span class=\"nt\">&gt;</span>\n<span class=\"nt\">&lt;dict&gt;</span>\n    <span class=\"nt\">&lt;key&gt;</span>FILEHEADER<span class=\"nt\">&lt;/key&gt;</span>\n    <span class=\"nt\">&lt;string&gt;</span>\n//  \n//  ___FILENAME___ \n//  ___PACKAGENAME___\n//\n//  Created by ___FULLUSERNAME___ on ___DATE___\n//  ___COPYRIGHT___\n//\n    <span class=\"nt\">&lt;/string&gt;</span>\n<span class=\"nt\">&lt;/dict&gt;</span>\n<span class=\"nt\">&lt;/plist&gt;</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>路径（按优先级从低到高排序：如果更高一级优先级目录下出现了IDETemplateMacros，会覆盖比他低优先级的目录下的IDETemplateMacros内容）</p>\n\n<p>xcWorkspace：</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>XXX.xcworkspace/xcshareddata/IDETemplateMacros.plist \n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>xcodeproj（相比xcworkspace，具有更高优先级）：</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>XXX.xcodeproj/xcshareddata/IDETemplateMacros.plist\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>xcodeproj下的xcshareddata文件夹下存在IDETemplateMacros.plist，会覆盖xcworkspace的xcshareddata，（也就是xcworkspace的xcshareddata的IDETemplateMacros.plist不生效）</p>\n\n<p><u>**综上所述：xcworkspace下的IDETemplateMacros，在xcworkspace内部的xcodeproj未指定IDETemplateMacros时生效**</u></p>\n\n<h4 id=\"322-用户指定\">3.2.2 用户指定</h4>\n\n<p>上述xcodeproj、xcworkspace根目录下还有各自xcuserdata，xcuserdata内包含各个用户名的文件夹 username.xcuserdatad，存在此目录下的IDETemplateMacros.plist ，优先级高于xcshareddata，</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n</pre></td><td class=\"rouge-code\"><pre>XXX.xcworkspace/xcuserdata/IDETemplateMacros.plist \nXXX.xcodeproj/xcuserdata/IDETemplateMacros.plist\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p><strong><em><u>优先级与2.2.1所述一致：xcworkspace/xcodeproj内的xcshareddata下的IDETemplateMacros，在xcworkspace/xcodeproj内部的xcuserdata未指定IDETemplateMacros时生效</u></em></strong></p>\n\n<h4 id=\"323-本地指定\">3.2.3 本地指定</h4>\n\n<p>上述情况之外：</p>\n\n<p><strong><em><u>在上述均不存在IDETemplateMacros.plist时，本地目录才会生效</u></em></strong>：</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>/Users/Mac登录名/Library/Developer/Xcode/UserData/IDETemplateMacros.plist \n</pre></td></tr></tbody></table></code></pre></div></div>\n\n\n\n                <hr style=\"visibility: hidden;\">\n                <ul class=\"pager\">\n                    \n                    <li class=\"previous\">\n                        <a href=\"/2023/07/26/5-iOS%E7%BB%84%E4%BB%B6%E5%8C%96-%E8%B5%84%E6%BA%90%E7%BB%84%E4%BB%B6%E5%BA%93/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"iOS组件化实践之：资源组件库\">\n                        Previous<br>\n                        <span>iOS组件化实践之：资源组件库</span>\n                        </a>\n                    </li>\n                    \n                    \n                    <li class=\"next\">\n                        <a href=\"/2023/08/02/iOS-%E7%BB%84%E4%BB%B6%E5%8C%96%E5%AE%9E%E8%B7%B5%E4%B9%8B-%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98%E5%8F%8A%E8%A7%A3%E5%86%B3%E8%BF%87%E7%A8%8B%E7%BA%AA%E8%A6%81-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0%E4%B8%AD/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"iOS组件化实践之：遇到的问题及解决过程纪要(持续更新中)\">\n                        Next<br>\n                        <span>iOS组件化实践之：遇到的问题及解决过程纪要(持续更新中)</span>\n                        </a>\n                    </li>\n                    \n                </ul>\n                <hr style=\"visibility: hidden;\">\n\n                \n                <!-- disqus 评论框 start -->\n                <div class=\"comment\">\n                    <div id=\"disqus_thread\" class=\"disqus-thread\"></div>\n                </div>\n                <!-- disqus 评论框 end -->\n                \n\n                \n            </div>  \n\n    <!-- Side Catalog Container -->\n        \n            <div class=\"\n                col-lg-2 col-lg-offset-0\n                visible-lg-block\n                sidebar-container\n                catalog-container\">\n                <div class=\"side-catalog\">\n                    <hr class=\"hidden-sm hidden-xs\">\n                    <h5>\n                        <a class=\"catalog-toggle\" href=\"#\">CATALOG</a>\n                    </h5>\n                    <ul class=\"catalog-body\"></ul>\n                </div>\n            </div>\n        \n\n    <!-- Sidebar Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                sidebar-container\">\n\n                <!-- Featured Tags -->\n                \n\n\n<section>\n    \n        <hr class=\"hidden-sm hidden-xs\">\n    \n    <h5><a href=\"/archive/\">FEATURED TAGS</a></h5>\n    <div class=\"tags\">\n        \n        \n        \n        \n        \n    </div>\n</section>\n\n\n                <!-- Friends Blog -->\n                \n            </div>\n        </div>\n    </div>\n</article>\n\n<!-- add support for mathjax by voleking-->\n\n\n\n\n\n\n<!-- disqus 公共JS代码 start (一个网页只需插入一次) -->\n<script type=\"text/javascript\">\n    /* * * CONFIGURATION VARIABLES * * */\n    var disqus_shortname = \"Cyp\";\n    var disqus_identifier = \"/2023/07/31/6-iOS-组件化-命名注释篇\";\n    var disqus_url = \"http://localhost:4000/2023/07/31/6-iOS-%E7%BB%84%E4%BB%B6%E5%8C%96-%E5%91%BD%E5%90%8D%E6%B3%A8%E9%87%8A%E7%AF%87/\";\n\n    (function() {\n        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;\n        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';\n        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);\n    })();\n</script>\n<!-- disqus 公共JS代码 end -->\n\n\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n      var d = document, t = 'script',\n          o = d.createElement(t),\n          s = d.getElementsByTagName(t)[0];\n      o.src = u;\n      if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n      s.parentNode.insertBefore(o, s);\n    }\n</script>\n<!-- anchor-js, Doc:http://bryanbraun.github.io/anchorjs/ -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/anchor-js/1.1.1/anchor.min.js\",function(){\n        anchors.options = {\n          visible: 'hover',\n          placement: 'right',\n          // icon: '#'\n        };\n        anchors.add().remove('.intro-header h1').remove('.subheading').remove('.sidebar-container h5');\n    })\n</script>\n<style>\n    /* place left on bigger screen */\n    @media all and (min-width: 800px) {\n        .anchorjs-link{\n            position: absolute;\n            left: -0.75em;\n            font-size: 1.1em;\n            margin-top : -0.1em;\n        }\n    }\n</style>\n\n\n\n    <!-- Footer -->\n<footer>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <!-- SNS Link -->\n                \n\n\n<ul class=\"list-inline text-center\">\n\n\n  \n  \n  \n  \n  \n  \n  \n</ul>\n\n                <p class=\"copyright text-muted\">\n                    Copyright &copy; PaysonChen Blog 2024\n                    <br>\n                    <!-- Powered by <a href=\"http://huangxuan.me\">Hux Blog</a> | -->\n                 <!--    <iframe style=\"margin-left: 2px; margin-bottom:-5px;\" frameborder=\"0\" scrolling=\"0\" width=\"100px\"\n                        height=\"20px\"\n                        src=\"https://ghbtns.com/github-btn.html?user=huxpro&repo=huxpro.github.io&type=star&count=true\">\n                    </iframe> -->\n                </p>\n            </div>\n        </div>\n    </div>\n</footer>\n\n<!-- jQuery -->\n<script src=\"/js/jquery.min.js \"></script>\n\n<!-- Bootstrap Core JavaScript -->\n<!-- Currently, only navbar scroll-down effect at desktop still depends on this -->\n<script src=\"/js/bootstrap.min.js \"></script>\n\n<!-- Custom Theme JavaScript -->\n<script src=\"/js/hux-blog.min.js \"></script>\n\n<!-- Simple Jekyll Search -->\n<script src=\"/js/simple-jekyll-search.min.js\"></script>\n\n<!-- Service Worker -->\n\n<script src=\"/js/snackbar.js \"></script>\n<script src=\"/js/sw-registration.js \"></script>\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n        var d = document, t = 'script',\n            o = d.createElement(t),\n            s = d.getElementsByTagName(t)[0];\n        o.src = u;\n        if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n        s.parentNode.insertBefore(o, s);\n    }\n</script>\n\n<!--\n     Because of the native support for backtick-style fenced code blocks\n     right within the Markdown is landed in Github Pages,\n     From V1.6, There is no need for Highlight.js,\n     so Huxblog drops it officially.\n\n     - https://github.com/blog/2100-github-pages-now-faster-and-simpler-with-jekyll-3-0\n     - https://help.github.com/articles/creating-and-highlighting-code-blocks/\n     - https://github.com/jneen/rouge/wiki/list-of-supported-languages-and-lexers\n-->\n<!--\n    <script>\n        async(\"http://cdn.bootcss.com/highlight.js/8.6/highlight.min.js\", function(){\n            hljs.initHighlightingOnLoad();\n        })\n    </script>\n    <link href=\"http://cdn.bootcss.com/highlight.js/8.6/styles/github.min.css\" rel=\"stylesheet\">\n-->\n\n\n\n\n\n\n\n<!--fastClick.js -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/fastclick/1.0.6/fastclick.min.js\", function () {\n        var $nav = document.querySelector(\"nav\");\n        if ($nav) FastClick.attach($nav);\n    })\n</script>\n\n\n<!-- Google Analytics -->\n\n\n\n<!-- Baidu Tongji -->\n\n\n\n<!-- Side Catalog -->\n\n<script type=\"text/javascript\">\n    function generateCatalog(selector) {\n\n        // interop with multilangual \n        if ('' == 'true') {\n            _containerSelector = 'div.post-container.active'\n        } else {\n            _containerSelector = 'div.post-container'\n        }\n\n        // init\n        var P = $(_containerSelector), a, n, t, l, i, c;\n        a = P.find('h1,h2,h3,h4,h5,h6');\n\n        // clean\n        $(selector).html('')\n\n        // appending\n        a.each(function () {\n            n = $(this).prop('tagName').toLowerCase();\n            i = \"#\" + $(this).prop('id');\n            t = $(this).text();\n            c = $('<a href=\"' + i + '\" rel=\"nofollow\">' + t + '</a>');\n            l = $('<li class=\"' + n + '_nav\"></li>').append(c);\n            $(selector).append(l);\n        });\n        return true;\n    }\n\n    generateCatalog(\".catalog-body\");\n\n    // toggle side catalog\n    $(\".catalog-toggle\").click((function (e) {\n        e.preventDefault();\n        $('.side-catalog').toggleClass(\"fold\")\n    }))\n\n    /*\n     * Doc: https://github.com/davist11/jQuery-One-Page-Nav\n     * Fork by Hux to support padding\n     */\n    async(\"/js/jquery.nav.js\", function () {\n        $('.catalog-body').onePageNav({\n            currentClass: \"active\",\n            changeHash: !1,\n            easing: \"swing\",\n            filter: \"\",\n            scrollSpeed: 700,\n            scrollOffset: 0,\n            scrollThreshold: .2,\n            begin: null,\n            end: null,\n            scrollChange: null,\n            padding: 80\n        });\n    });\n</script>\n\n\n\n<!-- Multi-Lingual -->\n\n\n<!-- Simple Jekyll Search -->\n<script>\n    // https://stackoverflow.com/questions/1912501/unescape-html-entities-in-javascript\n    function htmlDecode(input) {\n        var e = document.createElement('textarea');\n        e.innerHTML = input;\n        // handle case of empty input\n        return e.childNodes.length === 0 ? \"\" : e.childNodes[0].nodeValue;\n    }\n\n    SimpleJekyllSearch({\n        searchInput: document.getElementById('search-input'),\n        resultsContainer: document.getElementById('search-results'),\n        json: '/search.json',\n        searchResultTemplate: '<div class=\"post-preview item\"><a href=\"{url}\"><h2 class=\"post-title\">{title}</h2><h3 class=\"post-subtitle\">{subtitle}</h3><hr></a></div>',\n        noResultsText: 'No results',\n        limit: 50,\n        fuzzy: false,\n        // a hack to get escaped subtitle unescaped. for some reason, \n        // post.subtitle w/o escape filter nuke entire search.\n        templateMiddleware: function (prop, value, template) {\n            if (prop === 'subtitle' || prop === 'title') {\n                if (value.indexOf(\"code\")) {\n                    return htmlDecode(value);\n                } else {\n                    return value;\n                }\n            }\n        }\n    });\n\n    $(document).ready(function () {\n        var $searchPage = $('.search-page');\n        var $searchOpen = $('.search-icon');\n        var $searchClose = $('.search-icon-close');\n        var $searchInput = $('#search-input');\n        var $body = $('body');\n\n        $searchOpen.on('click', function (e) {\n            e.preventDefault();\n            $searchPage.toggleClass('search-active');\n            var prevClasses = $body.attr('class') || '';\n            setTimeout(function () {\n                $body.addClass('no-scroll');\n            }, 400)\n\n            if ($searchPage.hasClass('search-active')) {\n                $searchClose.on('click', function (e) {\n                    e.preventDefault();\n                    $searchPage.removeClass('search-active');\n                    $body.attr('class', prevClasses);  // from closure \n                });\n                $searchInput.focus();\n            }\n        });\n    });\n</script>\n\n\n<!-- Image to hack wechat -->\n<img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\" />\n<!-- Migrate from head to bottom, no longer block render and still work -->\n\n</body>\n\n</html>\n","excerpt":"<h1 id=\"ios组件化实践之类命名注释篇\">iOS组件化实践之：类命名注释篇</h1>\n","url":"/2023/07/31/6-iOS-%E7%BB%84%E4%BB%B6%E5%8C%96-%E5%91%BD%E5%90%8D%E6%B3%A8%E9%87%8A%E7%AF%87/","next":{"id":"/2023/08/02/iOS-组件化实践之-遇到的问题及解决过程纪要-持续更新中","tags":[],"relative_path":"_posts/2023-08-02-iOS-组件化实践之-遇到的问题及解决过程纪要-持续更新中.md","collection":"posts","name":"2023-08-02-iOS-组件化实践之-遇到的问题及解决过程纪要-持续更新中.md","url":"/2023/08/02/iOS-%E7%BB%84%E4%BB%B6%E5%8C%96%E5%AE%9E%E8%B7%B5%E4%B9%8B-%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98%E5%8F%8A%E8%A7%A3%E5%86%B3%E8%BF%87%E7%A8%8B%E7%BA%AA%E8%A6%81-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0%E4%B8%AD/","title":"iOS组件化实践之：遇到的问题及解决过程纪要(持续更新中)","date":"2023-08-02 00:00:00 +0800","categories":[],"path":"_posts/2023-08-02-iOS-组件化实践之-遇到的问题及解决过程纪要-持续更新中.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/home-bg-geek.jpg","slug":"iOS-组件化实践之-遇到的问题及解决过程纪要-持续更新中","ext":".md"},"title":"iOS组件化实践之：类命名注释篇","date":"2023-07-31 00:00:00 +0800","categories":[],"path":"_posts/2023-07-31-6-iOS-组件化-命名注释篇.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/home-bg-geek.jpg","slug":"6-iOS-组件化-命名注释篇","ext":".md"},"output":"<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"google-site-verification\" content=\"xBT4GhYoi5qRD5tr338pgPM5OWHHIDR6mNg1a3euekI\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, viewport-fit=cover\">\n    <meta name=\"description\" content=\"与你一起发现更大的世界。\">\n    <meta name=\"keywords\"  content=\"PaysonChen,iOS,流媒体\">\n    <meta name=\"theme-color\" content=\"#000000\">\n    \n    <!-- Open Graph -->\n    <meta property=\"og:title\" content=\"iOS组件化实践之：遇到的问题及解决过程纪要(持续更新中) - PaysonChen的博客 | PaysonChen Blog\">\n    \n    <meta property=\"og:type\" content=\"article\">\n    <meta property=\"og:description\" content=\"iOS组件化实践之：遇到的问题及解决过程纪要(持续更新中)\n\">\n    \n    \n    <meta property=\"article:published_time\" content=\"2023-08-02T00:00:00Z\">\n    \n    \n    <meta property=\"article:author\" content=\"PaysonChen\">\n    \n    \n    \n    <meta property=\"og:image\" content=\"http://localhost:4000\">\n    <meta property=\"og:url\" content=\"http://localhost:4000/2023/08/02/iOS-%E7%BB%84%E4%BB%B6%E5%8C%96%E5%AE%9E%E8%B7%B5%E4%B9%8B-%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98%E5%8F%8A%E8%A7%A3%E5%86%B3%E8%BF%87%E7%A8%8B%E7%BA%AA%E8%A6%81-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0%E4%B8%AD/\">\n    <meta property=\"og:site_name\" content=\"PaysonChen的博客 | PaysonChen Blog\">\n    \n    <title>iOS组件化实践之：遇到的问题及解决过程纪要(持续更新中) - PaysonChen的博客 | PaysonChen Blog</title>\n\n    <!-- Web App Manifest -->\n    <link rel=\"manifest\" href=\"/pwa/manifest.json\">\n\n    <!-- Favicon -->\n    <link rel=\"shortcut icon\" href=\"/img/favicon.ico\">\n    \n    <!-- Canonical URL -->\n    <link rel=\"canonical\" href=\"http://localhost:4000/2023/08/02/iOS-%E7%BB%84%E4%BB%B6%E5%8C%96%E5%AE%9E%E8%B7%B5%E4%B9%8B-%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98%E5%8F%8A%E8%A7%A3%E5%86%B3%E8%BF%87%E7%A8%8B%E7%BA%AA%E8%A6%81-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0%E4%B8%AD/\">\n\n    <!-- Bootstrap Core CSS -->\n    <link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\">\n\n    <!-- Custom CSS -->\n    <link rel=\"stylesheet\" href=\"/css/hux-blog.min.css\">\n\n    <!-- Custom Fonts -->\n    <!-- <link href=\"http://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\"> -->\n    <!-- Hux change font-awesome CDN to qiniu -->\n    <link href=\"//cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\">\n\n\n    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->\n    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->\n    <!--[if lt IE 9]>\n        <script src=\"https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js\"></script>\n        <script src=\"https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js\"></script>\n    <![endif]-->\n\n    <!-- ga & ba script hoook -->\n    <script></script>\n</head>\n\n\n<!-- hack iOS CSS :active style -->\n<body ontouchstart=\"\">\n\n    <!-- Navigation -->\n\n    <nav class=\"navbar navbar-default navbar-custom navbar-fixed-top\">\n        \n        <div class=\"container-fluid\">\n            <!-- Brand and toggle get grouped for better mobile display -->\n            <div class=\"navbar-header page-scroll\">\n                <button type=\"button\" class=\"navbar-toggle\">\n                    <span class=\"sr-only\">Toggle navigation</span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                </button>\n                <a class=\"navbar-brand\" href=\"/\">PaysonChen Blog</a>\n            </div>\n\n            <!-- Collect the nav links, forms, and other content for toggling -->\n            <div id=\"huxblog_navbar\">\n                <div class=\"navbar-collapse\">\n                    <ul class=\"nav navbar-nav navbar-right\">\n                        <li>\n                            <a href=\"/\">Home</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        <li>\n                            <a href=\"/about/\">About</a>\n                        </li>\n                        \n                        \n                        \n                        <li>\n                            <a href=\"/archive/\">Archive</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        <li class=\"search-icon\">\n                            <a href=\"javascript:void(0)\">\n                                <i class=\"fa fa-search\"></i>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n            <!-- /.navbar-collapse -->\n        </div>\n        <!-- /.container -->\n    </nav>\n\n    <script>\n        // Drop Bootstarp low-performance Navbar\n        // Use customize navbar with high-quality material design animation\n        // in high-perf jank-free CSS3 implementation\n        var $body = document.body;\n        var $toggle = document.querySelector('.navbar-toggle');\n        var $navbar = document.querySelector('#huxblog_navbar');\n        var $collapse = document.querySelector('.navbar-collapse');\n\n        var __HuxNav__ = {\n            close: function () {\n                $navbar.className = \" \";\n                // wait until animation end.\n                setTimeout(function () {\n                    // prevent frequently toggle\n                    if ($navbar.className.indexOf('in') < 0) {\n                        $collapse.style.height = \"0px\"\n                    }\n                }, 400)\n            },\n            open: function () {\n                $collapse.style.height = \"auto\"\n                $navbar.className += \" in\";\n            }\n        }\n\n        // Bind Event\n        $toggle.addEventListener('click', function (e) {\n            if ($navbar.className.indexOf('in') > 0) {\n                __HuxNav__.close()\n            } else {\n                __HuxNav__.open()\n            }\n        })\n\n        /**\n         * Since Fastclick is used to delegate 'touchstart' globally\n         * to hack 300ms delay in iOS by performing a fake 'click',\n         * Using 'e.stopPropagation' to stop 'touchstart' event from \n         * $toggle/$collapse will break global delegation.\n         * \n         * Instead, we use a 'e.target' filter to prevent handler\n         * added to document close HuxNav.  \n         *\n         * Also, we use 'click' instead of 'touchstart' as compromise\n         */\n        document.addEventListener('click', function (e) {\n            if (e.target == $toggle) return;\n            if (e.target.className == 'icon-bar') return;\n            __HuxNav__.close();\n        })\n    </script>\n    <!-- Search -->\n<div class=\"search-page\">\n  <div class=\"search-icon-close-container\">\n    <span class=\"search-icon-close\">\n      <i class=\"fa fa-chevron-down\"></i>\n    </span>\n  </div>\n  <div class=\"search-main container\">\n    <div class=\"row\">\n      <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n        <form></form>\n        <input type=\"text\" id=\"search-input\" placeholder=\"$ grep...\">\n        </form>\n        <div id=\"search-results\" class=\"mini-post-list\"></div>\n      </div>\n    </div>\n  </div>\n</div>\n\n    <!-- Image to hack wechat -->\n<!-- <img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\"> -->\n<!-- <img src=\"/img/home-bg-geek.jpg\" width=\"0\" height=\"0\"> -->\n\n<!-- Post Header -->\n\n\n\n<style type=\"text/css\">\n    header.intro-header{\n        position: relative;\n        background-image: url('/img/home-bg-geek.jpg');\n        background: ;\n    }\n\n    \n</style>\n\n<header class=\"intro-header\" >\n\n    <div class=\"header-mask\"></div>\n    \n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <div class=\"post-heading\">\n                    <div class=\"tags\">\n                        \n                    </div>\n                    <h1>iOS组件化实践之：遇到的问题及解决过程纪要(持续更新中)</h1>\n                    \n                    <h2 class=\"subheading\"></h2>\n                    <span class=\"meta\">Posted by PaysonChen on August 2, 2023</span>\n                </div>\n            </div>\n        </div>\n    </div>\n</header>\n\n\n\n\n\n\n<!-- Post Content -->\n<article>\n    <div class=\"container\">\n        <div class=\"row\">\n\n    <!-- Post Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                post-container\">\n\n                <!-- Multi-Lingual -->\n                \n\n\t\t\t\t<h1 id=\"ios组件化实践之遇到的问题及解决过程纪要持续更新中\">iOS组件化实践之：遇到的问题及解决过程纪要(持续更新中)</h1>\n\n<h2 id=\"一编译错误\">一、编译错误</h2>\n\n<h3 id=\"11-msghandlingerror\">1.1 MsgHandlingError</h3>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n</pre></td><td class=\"rouge-code\"><pre>Build service could not create build operation: unknown error <span class=\"k\">while </span>handling message: MsgHandlingError<span class=\"o\">(</span>message: <span class=\"s2\">\"unable to initiate PIF transfer session (operation in progress?)\"</span><span class=\"o\">)</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>经Google之后，解决方案是要清楚编译构建索引，由于还是比较频繁出现，于是写了个脚本：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#!/bin/bash</span>\n\n<span class=\"c\"># [背景]</span>\n<span class=\"c\"># 组件化过程中，经常出现以下编译错误：</span>\n<span class=\"c\"># Build service could not create build operation: unknown error while handling message: MsgHandlingError(message: \"unable to initiate PIF transfer session (operation in progress?)\")</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># author: Chenyp34</span>\n<span class=\"c\"># [目的]</span>\n<span class=\"c\"># 为解决上述错误，需要清理构建索引目录并重启xcode，由于操作重复，考虑抽出shell脚本</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [目录]</span>\n<span class=\"c\">#   - auto_clean.sh</span>\n<span class=\"c\"># [说明]</span>\n<span class=\"c\"># 1、CD[指定xcode构建索引目录]目录</span>\n<span class=\"c\"># 2、递归删除当前文件下所有文件</span>\n<span class=\"c\"># 3、重启xcode</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [参数]</span>\n<span class=\"c\"># 1、参数1，指定xcode构建索引目录</span>\n<span class=\"c\"># 1、参数2，指定要打开的Xcode项目目</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [调用说明]</span>\n<span class=\"c\"># 1、未指定目录，则取当前目录：sh auto_clean.sh</span>\n<span class=\"c\"># 2、指定目录：sh auto_clean.sh /xcode构建索引目录/ /要打开的Xcode项目目录/</span>\n\n\n<span class=\"nb\">export </span><span class=\"nv\">XcodeDerivedDataPath</span><span class=\"o\">=</span>/Users/YourMacName/Library/Developer/Xcode/DerivedData\n<span class=\"nb\">export </span><span class=\"nv\">XcodeWorkspacePath</span><span class=\"o\">=</span>/Users/YourMacName/Documents/PCS/git/Project/xxx.xcworkspace\n\n<span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$1</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n    </span><span class=\"nb\">echo</span> <span class=\"s1\">'///入参1为空，使用默认xcode构建索引目录:'</span><span class=\"k\">${</span><span class=\"nv\">XcodeDerivedDataPath</span><span class=\"k\">}</span>\n<span class=\"k\">else\n    </span><span class=\"nv\">XcodeDerivedDataPath</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'///入参1不为空，xcode构建索引目录:'</span><span class=\"k\">${</span><span class=\"nv\">XcodeDerivedDataPath</span><span class=\"k\">}</span>\n<span class=\"k\">fi\n\nif</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$2</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n    </span><span class=\"nb\">echo</span> <span class=\"s1\">'///入参2为空，使用默认xcode项目目录:'</span><span class=\"k\">${</span><span class=\"nv\">XcodeWorkspacePath</span><span class=\"k\">}</span>\n<span class=\"k\">else\n    </span><span class=\"nv\">XcodeWorkspacePath</span><span class=\"o\">=</span><span class=\"nv\">$2</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'///入参2不为空，xcode项目目录:'</span><span class=\"k\">${</span><span class=\"nv\">XcodeWorkspacePath</span><span class=\"k\">}</span>\n<span class=\"k\">fi</span>\n\n<span class=\"c\">#cd到xcode构建索引目录</span>\n<span class=\"nb\">cd</span>  <span class=\"nv\">$XcodeDerivedDataPath</span>\n\n<span class=\"c\">#删除当前目录所有构件索引</span>\n<span class=\"nb\">rm</span> <span class=\"nt\">-rf</span> <span class=\"k\">*</span>\n\n<span class=\"c\">#重启xcode</span>\nkillall Xcode\n\n<span class=\"c\">#休眠一下，否则额可能直接打开会报错</span>\n<span class=\"nb\">sleep </span>0.1\n\n<span class=\"c\">#打开工程</span>\nopen <span class=\"nv\">$XcodeWorkspacePath</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h3 id=\"12--duplicate-interface-definition-for-class\">1.2  duplicate interface definition for class</h3>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>duplicate interface definition for class XXX\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>排除了报错明面上的重复定义的可能性之后，后来查资料发现是import 问题，删除掉原先的import “xxx.h”，改成 import &lt;PSCXXModule/xxx.h&gt;</p>\n\n<h2 id=\"二运行时错误\">二、运行时错误</h2>\n\n<h3 id=\"21-voidload方法交换导致死循环\">2.1 +(void)load方法交换导致死循环</h3>\n\n<h4 id=\"211-问题说明\">2.1.1 问题说明：</h4>\n\n<p>在实施组件化过程之中，一个UIControl的Category与UIButton的Category，由于后者的耦合度较大，将前者先拆进组件库，编译没有问题，运行没有问题，只有在UIButton点击事件时造成了死循环。</p>\n\n<h4 id=\"212-问题分析\">2.1.2 问题分析：</h4>\n\n<p>通过Craash堆栈看出是以下这个方法递归调用造成死循环</p>\n\n<pre><code class=\"language-objective-c\">- (void)mySendAction:(SEL)action to:(id)target forEvent:(UIEvent *)event\n</code></pre>\n\n<p>详细排查代码，看到UIControl的Category与UIButton的Category写了一模一样的 load方法交换：</p>\n\n<div class=\"language-objc highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n</pre></td><td class=\"rouge-code\"><pre><span class=\"k\">+</span> <span class=\"p\">(</span><span class=\"kt\">void</span><span class=\"p\">)</span><span class=\"n\">load</span><span class=\"p\">{</span>\n    <span class=\"k\">static</span> <span class=\"n\">dispatch_once_t</span> <span class=\"n\">onceToken</span><span class=\"p\">;</span>\n    <span class=\"n\">dispatch_once</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">onceToken</span><span class=\"p\">,</span> <span class=\"o\">^</span><span class=\"p\">{</span>\n        <span class=\"n\">SEL</span> <span class=\"n\">selA</span> <span class=\"o\">=</span> <span class=\"k\">@selector</span><span class=\"p\">(</span><span class=\"n\">sendAction</span><span class=\"o\">:</span><span class=\"n\">to</span><span class=\"o\">:</span><span class=\"n\">forEvent</span><span class=\"o\">:</span><span class=\"p\">);</span>\n        <span class=\"n\">SEL</span> <span class=\"n\">selB</span> <span class=\"o\">=</span> <span class=\"k\">@selector</span><span class=\"p\">(</span><span class=\"n\">mySendAction</span><span class=\"o\">:</span><span class=\"n\">to</span><span class=\"o\">:</span><span class=\"n\">forEvent</span><span class=\"o\">:</span><span class=\"p\">);</span>\n        <span class=\"n\">Method</span> <span class=\"n\">methodA</span> <span class=\"o\">=</span>   <span class=\"n\">class_getInstanceMethod</span><span class=\"p\">(</span><span class=\"n\">self</span><span class=\"p\">,</span><span class=\"n\">selA</span><span class=\"p\">);</span>\n        <span class=\"n\">Method</span> <span class=\"n\">methodB</span> <span class=\"o\">=</span> <span class=\"n\">class_getInstanceMethod</span><span class=\"p\">(</span><span class=\"n\">self</span><span class=\"p\">,</span> <span class=\"n\">selB</span><span class=\"p\">);</span>\n        <span class=\"c1\">//将 methodB的实现 添加到系统方法中 也就是说 将 methodA方法指针添加成 方法methodB的  返回值表示是否添加成功</span>\n        <span class=\"n\">BOOL</span> <span class=\"n\">isAdd</span> <span class=\"o\">=</span> <span class=\"n\">class_addMethod</span><span class=\"p\">(</span><span class=\"n\">self</span><span class=\"p\">,</span> <span class=\"n\">selA</span><span class=\"p\">,</span> <span class=\"n\">method_getImplementation</span><span class=\"p\">(</span><span class=\"n\">methodB</span><span class=\"p\">),</span> <span class=\"n\">method_getTypeEncoding</span><span class=\"p\">(</span><span class=\"n\">methodB</span><span class=\"p\">));</span>\n        <span class=\"c1\">//添加成功了 说明 本类中不存在methodB 所以此时必须将方法b的实现指针换成方法A的，否则 b方法将没有实现。</span>\n        <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">isAdd</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n            <span class=\"n\">class_replaceMethod</span><span class=\"p\">(</span><span class=\"n\">self</span><span class=\"p\">,</span> <span class=\"n\">selB</span><span class=\"p\">,</span> <span class=\"n\">method_getImplementation</span><span class=\"p\">(</span><span class=\"n\">methodA</span><span class=\"p\">),</span> <span class=\"n\">method_getTypeEncoding</span><span class=\"p\">(</span><span class=\"n\">methodA</span><span class=\"p\">));</span>\n        <span class=\"p\">}</span><span class=\"k\">else</span><span class=\"p\">{</span>\n            <span class=\"c1\">//添加失败了 说明本类中 有methodB的实现，此时只需要将 methodA和methodB的IMP互换一下即可。</span>\n            <span class=\"n\">method_exchangeImplementations</span><span class=\"p\">(</span><span class=\"n\">methodA</span><span class=\"p\">,</span> <span class=\"n\">methodB</span><span class=\"p\">);</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">});</span>\n<span class=\"p\">}</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>(姑且先不吐槽cv大法)</p>\n\n<p><strong>为何在组件化之前不会死循环，在组件化之后造成了死循环？</strong></p>\n\n<h4 id=\"213-问题定位\">2.1.3 问题定位：</h4>\n\n<p>通过控制变量法可以初步判断：<strong>由于Pod集成方式改变造成的crash</strong></p>\n\n<p>load方法，是类加载时的调用，怀疑是加载时序发生了变化，导致crash暴露出来</p>\n\n<p>随即展开类加载实验：主工程及Pod的类加载探索：</p>\n\n<p>存在Pod库的类加载：</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n</pre></td><td class=\"rouge-code\"><pre>2023-06-28 09:19:26.104245+0800 TestUI[2809:1230318] [+ (void)load]:[Pod] UIControl (ClickTimeSpace) load\n2023-06-28 09:19:26.108615+0800 TestUI[2809:1230318] [+ (void)load]:[Pod] UIImage (Bundle) load\n2023-06-28 09:19:26.108626+0800 TestUI[2809:1230318] [+ (void)load]:[Pod] UIImage (Custom) load\n2023-06-28 09:19:26.108637+0800 TestUI[2809:1230318] [+ (void)load]:[Pod] UIImageView (YPCCreateQRCode) load\n2023-06-28 09:19:26.108647+0800 TestUI[2809:1230318] [+ (void)load]:[Pod] UILabel (YPCSpaceLabel) load\n2023-06-28 09:19:26.108670+0800 TestUI[2809:1230318] [+ (void)load]:[Pod] UIResponder (KTRouter) load\n2023-06-28 09:19:26.110711+0800 TestUI[2809:1230318] [+ (void)load]:[Project]NSObject (Sb) load\n2023-06-28 09:19:26.110743+0800 TestUI[2809:1230318] [+ (void)load]:[Project]UITextField (Sub) load\n2023-06-28 09:19:26.110777+0800 TestUI[2809:1230318] [+ (void)load]:[Project]UIResponder (Super) load\n2023-06-28 09:19:26.110787+0800 TestUI[2809:1230318] [+ (void)load]:[Project]UIControl (Test) load\n2023-06-28 09:19:26.114212+0800 TestUI[2809:1230318] [+ (void)load]:[Project]UIView (Base) load\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>只有主工程的类加载：</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n</pre></td><td class=\"rouge-code\"><pre>2023-06-28 09:25:27.432494+0800 TestUI[2821:1235269] [+ (void)load]:[Project]UIImageView (SubImgV) load\n2023-06-28 09:25:27.432528+0800 TestUI[2821:1235269] [+ (void)load]:[Project]NSObject (Sb) load\n2023-06-28 09:25:27.432559+0800 TestUI[2821:1235269] [+ (void)load]:[Project]UITextField (Sub) load\n2023-06-28 09:25:27.432570+0800 TestUI[2821:1235269] [+ (void)load]:[Project]UITextView (SubTv) load\n2023-06-28 09:25:27.432580+0800 TestUI[2821:1235269] [+ (void)load]:[Project]UIButton (Test) load\n2023-06-28 09:25:27.432592+0800 TestUI[2821:1235269] [+ (void)load]:[Project]UIResponder (Super) load\n2023-06-28 09:25:27.432602+0800 TestUI[2821:1235269] [+ (void)load]:[Project]UIControl (Test) load\n2023-06-28 09:25:27.435639+0800 TestUI[2821:1235269] [+ (void)load]:[Project]UIView (Base) load\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>通过上述日志打印得出：<strong>Pod库里的类加载先于主工程</strong></p>\n\n<p>因此结论：在主工程时，先加载了UIButton的load方法，而UIButton无此方法：</p>\n\n<div class=\"language-objc highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c1\">//在UIControl存在此方法,而UIButton无此方法：</span>\n<span class=\"k\">-</span> <span class=\"p\">(</span><span class=\"kt\">void</span><span class=\"p\">)</span><span class=\"nf\">sendAction</span><span class=\"p\">:(</span><span class=\"n\">SEL</span><span class=\"p\">)</span><span class=\"nv\">action</span> <span class=\"nf\">to</span><span class=\"p\">:(</span><span class=\"n\">nullable</span> <span class=\"n\">id</span><span class=\"p\">)</span><span class=\"nv\">target</span> <span class=\"nf\">forEvent</span><span class=\"p\">:(</span><span class=\"n\">nullable</span> <span class=\"n\">UIEvent</span> <span class=\"o\">*</span><span class=\"p\">)</span><span class=\"nv\">event</span><span class=\"p\">;</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>在先交换UIButton中的sendAction之后，再交换UIControl中的sendAction，sendAction方法能被正常交换</p>\n\n<p>反之：在Pod工程中，先交换了UIControl中的sendAction之后，再交换UIButton中的sendAction，执行两次相同交换等于恢复了没有交换，当方法调用时：</p>\n\n<div class=\"language-objc highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c1\">//当我们按钮点击事件 sendAction 时  将会执行  mySendAction</span>\n<span class=\"k\">-</span> <span class=\"p\">(</span><span class=\"kt\">void</span><span class=\"p\">)</span><span class=\"nf\">mySendAction</span><span class=\"p\">:(</span><span class=\"n\">SEL</span><span class=\"p\">)</span><span class=\"nv\">action</span> <span class=\"nf\">to</span><span class=\"p\">:(</span><span class=\"n\">id</span><span class=\"p\">)</span><span class=\"nv\">target</span> <span class=\"nf\">forEvent</span><span class=\"p\">:(</span><span class=\"n\">UIEvent</span> <span class=\"o\">*</span><span class=\"p\">)</span><span class=\"nv\">event</span>\n<span class=\"p\">{</span>\n  \t<span class=\"c1\">//xxx</span>\n    <span class=\"c1\">//此处 methodA和methodB方法IMP互换了，实际上执行 sendAction；所以不会死循环</span>\n    <span class=\"p\">[</span><span class=\"n\">self</span> <span class=\"nf\">mySendAction</span><span class=\"p\">:</span><span class=\"n\">action</span> <span class=\"nf\">to</span><span class=\"p\">:</span><span class=\"n\">target</span> <span class=\"n\">forEvent</span><span class=\"o\">:</span><span class=\"n\">event</span><span class=\"p\">];</span>\n<span class=\"p\">}</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>无法回到sendAction，造成了死循环详细排查代码，看到UIControl的Category与UIButton的Category写了一模一样的 load方法交换：</p>\n\n\n\n                <hr style=\"visibility: hidden;\">\n                <ul class=\"pager\">\n                    \n                    <li class=\"previous\">\n                        <a href=\"/2023/07/31/6-iOS-%E7%BB%84%E4%BB%B6%E5%8C%96-%E5%91%BD%E5%90%8D%E6%B3%A8%E9%87%8A%E7%AF%87/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"iOS组件化实践之：类命名注释篇\">\n                        Previous<br>\n                        <span>iOS组件化实践之：类命名注释篇</span>\n                        </a>\n                    </li>\n                    \n                    \n                    <li class=\"next\">\n                        <a href=\"/2023/08/03/iOS-%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%9C%A8%E5%86%85%E7%BD%91%E8%81%94%E8%B0%83%E6%97%B6%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"iOS客户端在内网联调时的解决方案\">\n                        Next<br>\n                        <span>iOS客户端在内网联调时的解决方案</span>\n                        </a>\n                    </li>\n                    \n                </ul>\n                <hr style=\"visibility: hidden;\">\n\n                \n                <!-- disqus 评论框 start -->\n                <div class=\"comment\">\n                    <div id=\"disqus_thread\" class=\"disqus-thread\"></div>\n                </div>\n                <!-- disqus 评论框 end -->\n                \n\n                \n            </div>  \n\n    <!-- Side Catalog Container -->\n        \n            <div class=\"\n                col-lg-2 col-lg-offset-0\n                visible-lg-block\n                sidebar-container\n                catalog-container\">\n                <div class=\"side-catalog\">\n                    <hr class=\"hidden-sm hidden-xs\">\n                    <h5>\n                        <a class=\"catalog-toggle\" href=\"#\">CATALOG</a>\n                    </h5>\n                    <ul class=\"catalog-body\"></ul>\n                </div>\n            </div>\n        \n\n    <!-- Sidebar Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                sidebar-container\">\n\n                <!-- Featured Tags -->\n                \n\n\n<section>\n    \n        <hr class=\"hidden-sm hidden-xs\">\n    \n    <h5><a href=\"/archive/\">FEATURED TAGS</a></h5>\n    <div class=\"tags\">\n        \n        \n        \n        \n        \n    </div>\n</section>\n\n\n                <!-- Friends Blog -->\n                \n            </div>\n        </div>\n    </div>\n</article>\n\n<!-- add support for mathjax by voleking-->\n\n\n\n\n\n\n<!-- disqus 公共JS代码 start (一个网页只需插入一次) -->\n<script type=\"text/javascript\">\n    /* * * CONFIGURATION VARIABLES * * */\n    var disqus_shortname = \"Cyp\";\n    var disqus_identifier = \"/2023/08/02/iOS-组件化实践之-遇到的问题及解决过程纪要-持续更新中\";\n    var disqus_url = \"http://localhost:4000/2023/08/02/iOS-%E7%BB%84%E4%BB%B6%E5%8C%96%E5%AE%9E%E8%B7%B5%E4%B9%8B-%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98%E5%8F%8A%E8%A7%A3%E5%86%B3%E8%BF%87%E7%A8%8B%E7%BA%AA%E8%A6%81-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0%E4%B8%AD/\";\n\n    (function() {\n        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;\n        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';\n        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);\n    })();\n</script>\n<!-- disqus 公共JS代码 end -->\n\n\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n      var d = document, t = 'script',\n          o = d.createElement(t),\n          s = d.getElementsByTagName(t)[0];\n      o.src = u;\n      if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n      s.parentNode.insertBefore(o, s);\n    }\n</script>\n<!-- anchor-js, Doc:http://bryanbraun.github.io/anchorjs/ -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/anchor-js/1.1.1/anchor.min.js\",function(){\n        anchors.options = {\n          visible: 'hover',\n          placement: 'right',\n          // icon: '#'\n        };\n        anchors.add().remove('.intro-header h1').remove('.subheading').remove('.sidebar-container h5');\n    })\n</script>\n<style>\n    /* place left on bigger screen */\n    @media all and (min-width: 800px) {\n        .anchorjs-link{\n            position: absolute;\n            left: -0.75em;\n            font-size: 1.1em;\n            margin-top : -0.1em;\n        }\n    }\n</style>\n\n\n\n    <!-- Footer -->\n<footer>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <!-- SNS Link -->\n                \n\n\n<ul class=\"list-inline text-center\">\n\n\n  \n  \n  \n  \n  \n  \n  \n</ul>\n\n                <p class=\"copyright text-muted\">\n                    Copyright &copy; PaysonChen Blog 2024\n                    <br>\n                    <!-- Powered by <a href=\"http://huangxuan.me\">Hux Blog</a> | -->\n                 <!--    <iframe style=\"margin-left: 2px; margin-bottom:-5px;\" frameborder=\"0\" scrolling=\"0\" width=\"100px\"\n                        height=\"20px\"\n                        src=\"https://ghbtns.com/github-btn.html?user=huxpro&repo=huxpro.github.io&type=star&count=true\">\n                    </iframe> -->\n                </p>\n            </div>\n        </div>\n    </div>\n</footer>\n\n<!-- jQuery -->\n<script src=\"/js/jquery.min.js \"></script>\n\n<!-- Bootstrap Core JavaScript -->\n<!-- Currently, only navbar scroll-down effect at desktop still depends on this -->\n<script src=\"/js/bootstrap.min.js \"></script>\n\n<!-- Custom Theme JavaScript -->\n<script src=\"/js/hux-blog.min.js \"></script>\n\n<!-- Simple Jekyll Search -->\n<script src=\"/js/simple-jekyll-search.min.js\"></script>\n\n<!-- Service Worker -->\n\n<script src=\"/js/snackbar.js \"></script>\n<script src=\"/js/sw-registration.js \"></script>\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n        var d = document, t = 'script',\n            o = d.createElement(t),\n            s = d.getElementsByTagName(t)[0];\n        o.src = u;\n        if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n        s.parentNode.insertBefore(o, s);\n    }\n</script>\n\n<!--\n     Because of the native support for backtick-style fenced code blocks\n     right within the Markdown is landed in Github Pages,\n     From V1.6, There is no need for Highlight.js,\n     so Huxblog drops it officially.\n\n     - https://github.com/blog/2100-github-pages-now-faster-and-simpler-with-jekyll-3-0\n     - https://help.github.com/articles/creating-and-highlighting-code-blocks/\n     - https://github.com/jneen/rouge/wiki/list-of-supported-languages-and-lexers\n-->\n<!--\n    <script>\n        async(\"http://cdn.bootcss.com/highlight.js/8.6/highlight.min.js\", function(){\n            hljs.initHighlightingOnLoad();\n        })\n    </script>\n    <link href=\"http://cdn.bootcss.com/highlight.js/8.6/styles/github.min.css\" rel=\"stylesheet\">\n-->\n\n\n\n\n\n\n\n<!--fastClick.js -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/fastclick/1.0.6/fastclick.min.js\", function () {\n        var $nav = document.querySelector(\"nav\");\n        if ($nav) FastClick.attach($nav);\n    })\n</script>\n\n\n<!-- Google Analytics -->\n\n\n\n<!-- Baidu Tongji -->\n\n\n\n<!-- Side Catalog -->\n\n<script type=\"text/javascript\">\n    function generateCatalog(selector) {\n\n        // interop with multilangual \n        if ('' == 'true') {\n            _containerSelector = 'div.post-container.active'\n        } else {\n            _containerSelector = 'div.post-container'\n        }\n\n        // init\n        var P = $(_containerSelector), a, n, t, l, i, c;\n        a = P.find('h1,h2,h3,h4,h5,h6');\n\n        // clean\n        $(selector).html('')\n\n        // appending\n        a.each(function () {\n            n = $(this).prop('tagName').toLowerCase();\n            i = \"#\" + $(this).prop('id');\n            t = $(this).text();\n            c = $('<a href=\"' + i + '\" rel=\"nofollow\">' + t + '</a>');\n            l = $('<li class=\"' + n + '_nav\"></li>').append(c);\n            $(selector).append(l);\n        });\n        return true;\n    }\n\n    generateCatalog(\".catalog-body\");\n\n    // toggle side catalog\n    $(\".catalog-toggle\").click((function (e) {\n        e.preventDefault();\n        $('.side-catalog').toggleClass(\"fold\")\n    }))\n\n    /*\n     * Doc: https://github.com/davist11/jQuery-One-Page-Nav\n     * Fork by Hux to support padding\n     */\n    async(\"/js/jquery.nav.js\", function () {\n        $('.catalog-body').onePageNav({\n            currentClass: \"active\",\n            changeHash: !1,\n            easing: \"swing\",\n            filter: \"\",\n            scrollSpeed: 700,\n            scrollOffset: 0,\n            scrollThreshold: .2,\n            begin: null,\n            end: null,\n            scrollChange: null,\n            padding: 80\n        });\n    });\n</script>\n\n\n\n<!-- Multi-Lingual -->\n\n\n<!-- Simple Jekyll Search -->\n<script>\n    // https://stackoverflow.com/questions/1912501/unescape-html-entities-in-javascript\n    function htmlDecode(input) {\n        var e = document.createElement('textarea');\n        e.innerHTML = input;\n        // handle case of empty input\n        return e.childNodes.length === 0 ? \"\" : e.childNodes[0].nodeValue;\n    }\n\n    SimpleJekyllSearch({\n        searchInput: document.getElementById('search-input'),\n        resultsContainer: document.getElementById('search-results'),\n        json: '/search.json',\n        searchResultTemplate: '<div class=\"post-preview item\"><a href=\"{url}\"><h2 class=\"post-title\">{title}</h2><h3 class=\"post-subtitle\">{subtitle}</h3><hr></a></div>',\n        noResultsText: 'No results',\n        limit: 50,\n        fuzzy: false,\n        // a hack to get escaped subtitle unescaped. for some reason, \n        // post.subtitle w/o escape filter nuke entire search.\n        templateMiddleware: function (prop, value, template) {\n            if (prop === 'subtitle' || prop === 'title') {\n                if (value.indexOf(\"code\")) {\n                    return htmlDecode(value);\n                } else {\n                    return value;\n                }\n            }\n        }\n    });\n\n    $(document).ready(function () {\n        var $searchPage = $('.search-page');\n        var $searchOpen = $('.search-icon');\n        var $searchClose = $('.search-icon-close');\n        var $searchInput = $('#search-input');\n        var $body = $('body');\n\n        $searchOpen.on('click', function (e) {\n            e.preventDefault();\n            $searchPage.toggleClass('search-active');\n            var prevClasses = $body.attr('class') || '';\n            setTimeout(function () {\n                $body.addClass('no-scroll');\n            }, 400)\n\n            if ($searchPage.hasClass('search-active')) {\n                $searchClose.on('click', function (e) {\n                    e.preventDefault();\n                    $searchPage.removeClass('search-active');\n                    $body.attr('class', prevClasses);  // from closure \n                });\n                $searchInput.focus();\n            }\n        });\n    });\n</script>\n\n\n<!-- Image to hack wechat -->\n<img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\" />\n<!-- Migrate from head to bottom, no longer block render and still work -->\n\n</body>\n\n</html>\n","excerpt":"<h1 id=\"ios组件化实践之遇到的问题及解决过程纪要持续更新中\">iOS组件化实践之：遇到的问题及解决过程纪要(持续更新中)</h1>\n","url":"/2023/08/02/iOS-%E7%BB%84%E4%BB%B6%E5%8C%96%E5%AE%9E%E8%B7%B5%E4%B9%8B-%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98%E5%8F%8A%E8%A7%A3%E5%86%B3%E8%BF%87%E7%A8%8B%E7%BA%AA%E8%A6%81-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0%E4%B8%AD/","next":{"id":"/2023/08/03/iOS-客户端在内网联调时的解决方案","tags":[],"relative_path":"_posts/2023-08-03-iOS-客户端在内网联调时的解决方案.md","collection":"posts","content":"<h1 id=\"ios客户端在内网联调时的解决方案\">iOS客户端在内网联调时的解决方案</h1>\n\n<h2 id=\"1背景\">1.背景</h2>\n\n<p>在做某个需求的时候，如果后台接口部署在研发内网，此时的联调可能存在以下问题：</p>\n\n<h2 id=\"2问题描述\">2.问题描述：</h2>\n\n<p>内网调试证书校验失败：</p>\n\n<p>需要测试设备连接WiFi：XXX_DEV，此WiFi不能访问外网，会存在证书校验失败的问题</p>\n\n<p>因此需要每次编译都需要：</p>\n\n<ul>\n  <li>编译前切换外网环境</li>\n  <li>编译后切换内网环境</li>\n</ul>\n\n<p>导致非常影响研发效率。</p>\n\n<h2 id=\"3解决方案\">3.解决方案：</h2>\n\n<h3 id=\"31-方案1测试机\">3.1 方案1：测试机</h3>\n\n<p>通过iPhone的快捷指令实现自动化：</p>\n\n<ul>\n  <li>通过一张sim卡</li>\n  <li>添加一条自动化：实现App关闭时关掉Wi-Fi打开蜂窝，编译时能访问到外网校验证书</li>\n  <li>再添加一条自动化：运行App时执行关闭蜂窝，打开Wi-Fi，Wi-Fi设置只自动加入WiFi：XXX_DEV</li>\n</ul>\n\n<p>暂时解决上述问题，未来需要彻底解决时，如果安全管控无法绕开，则需要推动后端将dev环境部署到外网</p>\n\n<h3 id=\"32-方案2模拟器调试\">3.2 方案2：模拟器调试</h3>\n\n<p>模拟器调试不需要通过联网校验证书，因此可以将Mac连接到WiFi：XXX_DEV，进行模拟器调试</p>\n\n<h3 id=\"33-方案3部署研发外网\">3.3 方案3：部署研发外网</h3>\n\n<p>推动与后台开发同学协商，尽量开发期间，选择外网部署</p>\n","name":"2023-08-03-iOS-客户端在内网联调时的解决方案.md","previous":{"id":"/2023/08/02/iOS-组件化实践之-遇到的问题及解决过程纪要-持续更新中","tags":[],"relative_path":"_posts/2023-08-02-iOS-组件化实践之-遇到的问题及解决过程纪要-持续更新中.md","collection":"posts","name":"2023-08-02-iOS-组件化实践之-遇到的问题及解决过程纪要-持续更新中.md","url":"/2023/08/02/iOS-%E7%BB%84%E4%BB%B6%E5%8C%96%E5%AE%9E%E8%B7%B5%E4%B9%8B-%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98%E5%8F%8A%E8%A7%A3%E5%86%B3%E8%BF%87%E7%A8%8B%E7%BA%AA%E8%A6%81-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0%E4%B8%AD/","title":"iOS组件化实践之：遇到的问题及解决过程纪要(持续更新中)","date":"2023-08-02 00:00:00 +0800","categories":[],"path":"_posts/2023-08-02-iOS-组件化实践之-遇到的问题及解决过程纪要-持续更新中.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/home-bg-geek.jpg","slug":"iOS-组件化实践之-遇到的问题及解决过程纪要-持续更新中","ext":".md"},"output":"<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"google-site-verification\" content=\"xBT4GhYoi5qRD5tr338pgPM5OWHHIDR6mNg1a3euekI\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, viewport-fit=cover\">\n    <meta name=\"description\" content=\"与你一起发现更大的世界。\">\n    <meta name=\"keywords\"  content=\"PaysonChen,iOS,流媒体\">\n    <meta name=\"theme-color\" content=\"#000000\">\n    \n    <!-- Open Graph -->\n    <meta property=\"og:title\" content=\"iOS客户端在内网联调时的解决方案 - PaysonChen的博客 | PaysonChen Blog\">\n    \n    <meta property=\"og:type\" content=\"article\">\n    <meta property=\"og:description\" content=\"iOS客户端在内网联调时的解决方案\n\">\n    \n    \n    <meta property=\"article:published_time\" content=\"2023-08-03T00:00:00Z\">\n    \n    \n    <meta property=\"article:author\" content=\"PaysonChen\">\n    \n    \n    \n    <meta property=\"og:image\" content=\"http://localhost:4000\">\n    <meta property=\"og:url\" content=\"http://localhost:4000/2023/08/03/iOS-%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%9C%A8%E5%86%85%E7%BD%91%E8%81%94%E8%B0%83%E6%97%B6%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/\">\n    <meta property=\"og:site_name\" content=\"PaysonChen的博客 | PaysonChen Blog\">\n    \n    <title>iOS客户端在内网联调时的解决方案 - PaysonChen的博客 | PaysonChen Blog</title>\n\n    <!-- Web App Manifest -->\n    <link rel=\"manifest\" href=\"/pwa/manifest.json\">\n\n    <!-- Favicon -->\n    <link rel=\"shortcut icon\" href=\"/img/favicon.ico\">\n    \n    <!-- Canonical URL -->\n    <link rel=\"canonical\" href=\"http://localhost:4000/2023/08/03/iOS-%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%9C%A8%E5%86%85%E7%BD%91%E8%81%94%E8%B0%83%E6%97%B6%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/\">\n\n    <!-- Bootstrap Core CSS -->\n    <link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\">\n\n    <!-- Custom CSS -->\n    <link rel=\"stylesheet\" href=\"/css/hux-blog.min.css\">\n\n    <!-- Custom Fonts -->\n    <!-- <link href=\"http://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\"> -->\n    <!-- Hux change font-awesome CDN to qiniu -->\n    <link href=\"//cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\">\n\n\n    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->\n    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->\n    <!--[if lt IE 9]>\n        <script src=\"https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js\"></script>\n        <script src=\"https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js\"></script>\n    <![endif]-->\n\n    <!-- ga & ba script hoook -->\n    <script></script>\n</head>\n\n\n<!-- hack iOS CSS :active style -->\n<body ontouchstart=\"\">\n\n    <!-- Navigation -->\n\n    <nav class=\"navbar navbar-default navbar-custom navbar-fixed-top\">\n        \n        <div class=\"container-fluid\">\n            <!-- Brand and toggle get grouped for better mobile display -->\n            <div class=\"navbar-header page-scroll\">\n                <button type=\"button\" class=\"navbar-toggle\">\n                    <span class=\"sr-only\">Toggle navigation</span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                </button>\n                <a class=\"navbar-brand\" href=\"/\">PaysonChen Blog</a>\n            </div>\n\n            <!-- Collect the nav links, forms, and other content for toggling -->\n            <div id=\"huxblog_navbar\">\n                <div class=\"navbar-collapse\">\n                    <ul class=\"nav navbar-nav navbar-right\">\n                        <li>\n                            <a href=\"/\">Home</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        <li>\n                            <a href=\"/about/\">About</a>\n                        </li>\n                        \n                        \n                        \n                        <li>\n                            <a href=\"/archive/\">Archive</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        <li class=\"search-icon\">\n                            <a href=\"javascript:void(0)\">\n                                <i class=\"fa fa-search\"></i>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n            <!-- /.navbar-collapse -->\n        </div>\n        <!-- /.container -->\n    </nav>\n\n    <script>\n        // Drop Bootstarp low-performance Navbar\n        // Use customize navbar with high-quality material design animation\n        // in high-perf jank-free CSS3 implementation\n        var $body = document.body;\n        var $toggle = document.querySelector('.navbar-toggle');\n        var $navbar = document.querySelector('#huxblog_navbar');\n        var $collapse = document.querySelector('.navbar-collapse');\n\n        var __HuxNav__ = {\n            close: function () {\n                $navbar.className = \" \";\n                // wait until animation end.\n                setTimeout(function () {\n                    // prevent frequently toggle\n                    if ($navbar.className.indexOf('in') < 0) {\n                        $collapse.style.height = \"0px\"\n                    }\n                }, 400)\n            },\n            open: function () {\n                $collapse.style.height = \"auto\"\n                $navbar.className += \" in\";\n            }\n        }\n\n        // Bind Event\n        $toggle.addEventListener('click', function (e) {\n            if ($navbar.className.indexOf('in') > 0) {\n                __HuxNav__.close()\n            } else {\n                __HuxNav__.open()\n            }\n        })\n\n        /**\n         * Since Fastclick is used to delegate 'touchstart' globally\n         * to hack 300ms delay in iOS by performing a fake 'click',\n         * Using 'e.stopPropagation' to stop 'touchstart' event from \n         * $toggle/$collapse will break global delegation.\n         * \n         * Instead, we use a 'e.target' filter to prevent handler\n         * added to document close HuxNav.  \n         *\n         * Also, we use 'click' instead of 'touchstart' as compromise\n         */\n        document.addEventListener('click', function (e) {\n            if (e.target == $toggle) return;\n            if (e.target.className == 'icon-bar') return;\n            __HuxNav__.close();\n        })\n    </script>\n    <!-- Search -->\n<div class=\"search-page\">\n  <div class=\"search-icon-close-container\">\n    <span class=\"search-icon-close\">\n      <i class=\"fa fa-chevron-down\"></i>\n    </span>\n  </div>\n  <div class=\"search-main container\">\n    <div class=\"row\">\n      <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n        <form></form>\n        <input type=\"text\" id=\"search-input\" placeholder=\"$ grep...\">\n        </form>\n        <div id=\"search-results\" class=\"mini-post-list\"></div>\n      </div>\n    </div>\n  </div>\n</div>\n\n    <!-- Image to hack wechat -->\n<!-- <img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\"> -->\n<!-- <img src=\"/img/home-bg-geek.jpg\" width=\"0\" height=\"0\"> -->\n\n<!-- Post Header -->\n\n\n\n<style type=\"text/css\">\n    header.intro-header{\n        position: relative;\n        background-image: url('/img/home-bg-geek.jpg');\n        background: ;\n    }\n\n    \n</style>\n\n<header class=\"intro-header\" >\n\n    <div class=\"header-mask\"></div>\n    \n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <div class=\"post-heading\">\n                    <div class=\"tags\">\n                        \n                    </div>\n                    <h1>iOS客户端在内网联调时的解决方案</h1>\n                    \n                    <h2 class=\"subheading\"></h2>\n                    <span class=\"meta\">Posted by PaysonChen on August 3, 2023</span>\n                </div>\n            </div>\n        </div>\n    </div>\n</header>\n\n\n\n\n\n\n<!-- Post Content -->\n<article>\n    <div class=\"container\">\n        <div class=\"row\">\n\n    <!-- Post Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                post-container\">\n\n                <!-- Multi-Lingual -->\n                \n\n\t\t\t\t<h1 id=\"ios客户端在内网联调时的解决方案\">iOS客户端在内网联调时的解决方案</h1>\n\n<h2 id=\"1背景\">1.背景</h2>\n\n<p>在做某个需求的时候，如果后台接口部署在研发内网，此时的联调可能存在以下问题：</p>\n\n<h2 id=\"2问题描述\">2.问题描述：</h2>\n\n<p>内网调试证书校验失败：</p>\n\n<p>需要测试设备连接WiFi：XXX_DEV，此WiFi不能访问外网，会存在证书校验失败的问题</p>\n\n<p>因此需要每次编译都需要：</p>\n\n<ul>\n  <li>编译前切换外网环境</li>\n  <li>编译后切换内网环境</li>\n</ul>\n\n<p>导致非常影响研发效率。</p>\n\n<h2 id=\"3解决方案\">3.解决方案：</h2>\n\n<h3 id=\"31-方案1测试机\">3.1 方案1：测试机</h3>\n\n<p>通过iPhone的快捷指令实现自动化：</p>\n\n<ul>\n  <li>通过一张sim卡</li>\n  <li>添加一条自动化：实现App关闭时关掉Wi-Fi打开蜂窝，编译时能访问到外网校验证书</li>\n  <li>再添加一条自动化：运行App时执行关闭蜂窝，打开Wi-Fi，Wi-Fi设置只自动加入WiFi：XXX_DEV</li>\n</ul>\n\n<p>暂时解决上述问题，未来需要彻底解决时，如果安全管控无法绕开，则需要推动后端将dev环境部署到外网</p>\n\n<h3 id=\"32-方案2模拟器调试\">3.2 方案2：模拟器调试</h3>\n\n<p>模拟器调试不需要通过联网校验证书，因此可以将Mac连接到WiFi：XXX_DEV，进行模拟器调试</p>\n\n<h3 id=\"33-方案3部署研发外网\">3.3 方案3：部署研发外网</h3>\n\n<p>推动与后台开发同学协商，尽量开发期间，选择外网部署</p>\n\n\n                <hr style=\"visibility: hidden;\">\n                <ul class=\"pager\">\n                    \n                    <li class=\"previous\">\n                        <a href=\"/2023/08/02/iOS-%E7%BB%84%E4%BB%B6%E5%8C%96%E5%AE%9E%E8%B7%B5%E4%B9%8B-%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98%E5%8F%8A%E8%A7%A3%E5%86%B3%E8%BF%87%E7%A8%8B%E7%BA%AA%E8%A6%81-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0%E4%B8%AD/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"iOS组件化实践之：遇到的问题及解决过程纪要(持续更新中)\">\n                        Previous<br>\n                        <span>iOS组件化实践之：遇到的问题及解决过程纪要(持续更新中)</span>\n                        </a>\n                    </li>\n                    \n                    \n                    <li class=\"next\">\n                        <a href=\"/2023/08/08/iOS-%E8%AF%9D%E5%A4%96%E7%AF%87-%E6%9E%84%E5%BB%BA%E8%AF%A6%E8%A7%A3/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"iOS话外篇：构建详解\">\n                        Next<br>\n                        <span>iOS话外篇：构建详解</span>\n                        </a>\n                    </li>\n                    \n                </ul>\n                <hr style=\"visibility: hidden;\">\n\n                \n                <!-- disqus 评论框 start -->\n                <div class=\"comment\">\n                    <div id=\"disqus_thread\" class=\"disqus-thread\"></div>\n                </div>\n                <!-- disqus 评论框 end -->\n                \n\n                \n            </div>  \n\n    <!-- Side Catalog Container -->\n        \n            <div class=\"\n                col-lg-2 col-lg-offset-0\n                visible-lg-block\n                sidebar-container\n                catalog-container\">\n                <div class=\"side-catalog\">\n                    <hr class=\"hidden-sm hidden-xs\">\n                    <h5>\n                        <a class=\"catalog-toggle\" href=\"#\">CATALOG</a>\n                    </h5>\n                    <ul class=\"catalog-body\"></ul>\n                </div>\n            </div>\n        \n\n    <!-- Sidebar Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                sidebar-container\">\n\n                <!-- Featured Tags -->\n                \n\n\n<section>\n    \n        <hr class=\"hidden-sm hidden-xs\">\n    \n    <h5><a href=\"/archive/\">FEATURED TAGS</a></h5>\n    <div class=\"tags\">\n        \n        \n        \n        \n        \n    </div>\n</section>\n\n\n                <!-- Friends Blog -->\n                \n            </div>\n        </div>\n    </div>\n</article>\n\n<!-- add support for mathjax by voleking-->\n\n\n\n\n\n\n<!-- disqus 公共JS代码 start (一个网页只需插入一次) -->\n<script type=\"text/javascript\">\n    /* * * CONFIGURATION VARIABLES * * */\n    var disqus_shortname = \"Cyp\";\n    var disqus_identifier = \"/2023/08/03/iOS-客户端在内网联调时的解决方案\";\n    var disqus_url = \"http://localhost:4000/2023/08/03/iOS-%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%9C%A8%E5%86%85%E7%BD%91%E8%81%94%E8%B0%83%E6%97%B6%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/\";\n\n    (function() {\n        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;\n        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';\n        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);\n    })();\n</script>\n<!-- disqus 公共JS代码 end -->\n\n\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n      var d = document, t = 'script',\n          o = d.createElement(t),\n          s = d.getElementsByTagName(t)[0];\n      o.src = u;\n      if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n      s.parentNode.insertBefore(o, s);\n    }\n</script>\n<!-- anchor-js, Doc:http://bryanbraun.github.io/anchorjs/ -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/anchor-js/1.1.1/anchor.min.js\",function(){\n        anchors.options = {\n          visible: 'hover',\n          placement: 'right',\n          // icon: '#'\n        };\n        anchors.add().remove('.intro-header h1').remove('.subheading').remove('.sidebar-container h5');\n    })\n</script>\n<style>\n    /* place left on bigger screen */\n    @media all and (min-width: 800px) {\n        .anchorjs-link{\n            position: absolute;\n            left: -0.75em;\n            font-size: 1.1em;\n            margin-top : -0.1em;\n        }\n    }\n</style>\n\n\n\n    <!-- Footer -->\n<footer>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <!-- SNS Link -->\n                \n\n\n<ul class=\"list-inline text-center\">\n\n\n  \n  \n  \n  \n  \n  \n  \n</ul>\n\n                <p class=\"copyright text-muted\">\n                    Copyright &copy; PaysonChen Blog 2024\n                    <br>\n                    <!-- Powered by <a href=\"http://huangxuan.me\">Hux Blog</a> | -->\n                 <!--    <iframe style=\"margin-left: 2px; margin-bottom:-5px;\" frameborder=\"0\" scrolling=\"0\" width=\"100px\"\n                        height=\"20px\"\n                        src=\"https://ghbtns.com/github-btn.html?user=huxpro&repo=huxpro.github.io&type=star&count=true\">\n                    </iframe> -->\n                </p>\n            </div>\n        </div>\n    </div>\n</footer>\n\n<!-- jQuery -->\n<script src=\"/js/jquery.min.js \"></script>\n\n<!-- Bootstrap Core JavaScript -->\n<!-- Currently, only navbar scroll-down effect at desktop still depends on this -->\n<script src=\"/js/bootstrap.min.js \"></script>\n\n<!-- Custom Theme JavaScript -->\n<script src=\"/js/hux-blog.min.js \"></script>\n\n<!-- Simple Jekyll Search -->\n<script src=\"/js/simple-jekyll-search.min.js\"></script>\n\n<!-- Service Worker -->\n\n<script src=\"/js/snackbar.js \"></script>\n<script src=\"/js/sw-registration.js \"></script>\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n        var d = document, t = 'script',\n            o = d.createElement(t),\n            s = d.getElementsByTagName(t)[0];\n        o.src = u;\n        if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n        s.parentNode.insertBefore(o, s);\n    }\n</script>\n\n<!--\n     Because of the native support for backtick-style fenced code blocks\n     right within the Markdown is landed in Github Pages,\n     From V1.6, There is no need for Highlight.js,\n     so Huxblog drops it officially.\n\n     - https://github.com/blog/2100-github-pages-now-faster-and-simpler-with-jekyll-3-0\n     - https://help.github.com/articles/creating-and-highlighting-code-blocks/\n     - https://github.com/jneen/rouge/wiki/list-of-supported-languages-and-lexers\n-->\n<!--\n    <script>\n        async(\"http://cdn.bootcss.com/highlight.js/8.6/highlight.min.js\", function(){\n            hljs.initHighlightingOnLoad();\n        })\n    </script>\n    <link href=\"http://cdn.bootcss.com/highlight.js/8.6/styles/github.min.css\" rel=\"stylesheet\">\n-->\n\n\n\n\n\n\n\n<!--fastClick.js -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/fastclick/1.0.6/fastclick.min.js\", function () {\n        var $nav = document.querySelector(\"nav\");\n        if ($nav) FastClick.attach($nav);\n    })\n</script>\n\n\n<!-- Google Analytics -->\n\n\n\n<!-- Baidu Tongji -->\n\n\n\n<!-- Side Catalog -->\n\n<script type=\"text/javascript\">\n    function generateCatalog(selector) {\n\n        // interop with multilangual \n        if ('' == 'true') {\n            _containerSelector = 'div.post-container.active'\n        } else {\n            _containerSelector = 'div.post-container'\n        }\n\n        // init\n        var P = $(_containerSelector), a, n, t, l, i, c;\n        a = P.find('h1,h2,h3,h4,h5,h6');\n\n        // clean\n        $(selector).html('')\n\n        // appending\n        a.each(function () {\n            n = $(this).prop('tagName').toLowerCase();\n            i = \"#\" + $(this).prop('id');\n            t = $(this).text();\n            c = $('<a href=\"' + i + '\" rel=\"nofollow\">' + t + '</a>');\n            l = $('<li class=\"' + n + '_nav\"></li>').append(c);\n            $(selector).append(l);\n        });\n        return true;\n    }\n\n    generateCatalog(\".catalog-body\");\n\n    // toggle side catalog\n    $(\".catalog-toggle\").click((function (e) {\n        e.preventDefault();\n        $('.side-catalog').toggleClass(\"fold\")\n    }))\n\n    /*\n     * Doc: https://github.com/davist11/jQuery-One-Page-Nav\n     * Fork by Hux to support padding\n     */\n    async(\"/js/jquery.nav.js\", function () {\n        $('.catalog-body').onePageNav({\n            currentClass: \"active\",\n            changeHash: !1,\n            easing: \"swing\",\n            filter: \"\",\n            scrollSpeed: 700,\n            scrollOffset: 0,\n            scrollThreshold: .2,\n            begin: null,\n            end: null,\n            scrollChange: null,\n            padding: 80\n        });\n    });\n</script>\n\n\n\n<!-- Multi-Lingual -->\n\n\n<!-- Simple Jekyll Search -->\n<script>\n    // https://stackoverflow.com/questions/1912501/unescape-html-entities-in-javascript\n    function htmlDecode(input) {\n        var e = document.createElement('textarea');\n        e.innerHTML = input;\n        // handle case of empty input\n        return e.childNodes.length === 0 ? \"\" : e.childNodes[0].nodeValue;\n    }\n\n    SimpleJekyllSearch({\n        searchInput: document.getElementById('search-input'),\n        resultsContainer: document.getElementById('search-results'),\n        json: '/search.json',\n        searchResultTemplate: '<div class=\"post-preview item\"><a href=\"{url}\"><h2 class=\"post-title\">{title}</h2><h3 class=\"post-subtitle\">{subtitle}</h3><hr></a></div>',\n        noResultsText: 'No results',\n        limit: 50,\n        fuzzy: false,\n        // a hack to get escaped subtitle unescaped. for some reason, \n        // post.subtitle w/o escape filter nuke entire search.\n        templateMiddleware: function (prop, value, template) {\n            if (prop === 'subtitle' || prop === 'title') {\n                if (value.indexOf(\"code\")) {\n                    return htmlDecode(value);\n                } else {\n                    return value;\n                }\n            }\n        }\n    });\n\n    $(document).ready(function () {\n        var $searchPage = $('.search-page');\n        var $searchOpen = $('.search-icon');\n        var $searchClose = $('.search-icon-close');\n        var $searchInput = $('#search-input');\n        var $body = $('body');\n\n        $searchOpen.on('click', function (e) {\n            e.preventDefault();\n            $searchPage.toggleClass('search-active');\n            var prevClasses = $body.attr('class') || '';\n            setTimeout(function () {\n                $body.addClass('no-scroll');\n            }, 400)\n\n            if ($searchPage.hasClass('search-active')) {\n                $searchClose.on('click', function (e) {\n                    e.preventDefault();\n                    $searchPage.removeClass('search-active');\n                    $body.attr('class', prevClasses);  // from closure \n                });\n                $searchInput.focus();\n            }\n        });\n    });\n</script>\n\n\n<!-- Image to hack wechat -->\n<img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\" />\n<!-- Migrate from head to bottom, no longer block render and still work -->\n\n</body>\n\n</html>\n","excerpt":"<h1 id=\"ios客户端在内网联调时的解决方案\">iOS客户端在内网联调时的解决方案</h1>\n","url":"/2023/08/03/iOS-%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%9C%A8%E5%86%85%E7%BD%91%E8%81%94%E8%B0%83%E6%97%B6%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/","next":{"id":"/2023/08/08/iOS-话外篇-构建详解","tags":[],"relative_path":"_posts/2023-08-08-iOS-话外篇-构建详解.md","collection":"posts","name":"2023-08-08-iOS-话外篇-构建详解.md","url":"/2023/08/08/iOS-%E8%AF%9D%E5%A4%96%E7%AF%87-%E6%9E%84%E5%BB%BA%E8%AF%A6%E8%A7%A3/","title":"iOS话外篇：构建详解","date":"2023-08-08 00:00:00 +0800","categories":[],"path":"_posts/2023-08-08-iOS-话外篇-构建详解.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/home-bg-geek.jpg","slug":"iOS-话外篇-构建详解","ext":".md"},"title":"iOS客户端在内网联调时的解决方案","date":"2023-08-03 00:00:00 +0800","categories":[],"path":"_posts/2023-08-03-iOS-客户端在内网联调时的解决方案.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/home-bg-geek.jpg","slug":"iOS-客户端在内网联调时的解决方案","ext":".md"},"title":"iOS组件化实践之：遇到的问题及解决过程纪要(持续更新中)","date":"2023-08-02 00:00:00 +0800","categories":[],"path":"_posts/2023-08-02-iOS-组件化实践之-遇到的问题及解决过程纪要-持续更新中.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/home-bg-geek.jpg","slug":"iOS-组件化实践之-遇到的问题及解决过程纪要-持续更新中","ext":".md"},{"id":"/2023/07/31/6-iOS-组件化-命名注释篇","tags":[],"relative_path":"_posts/2023-07-31-6-iOS-组件化-命名注释篇.md","collection":"posts","content":"<h1 id=\"ios组件化实践之类命名注释篇\">iOS组件化实践之：类命名注释篇</h1>\n\n<h2 id=\"1问题描述\">1.问题描述</h2>\n\n<p>CocoaPods组件创建时，提供的一个很好的管理命名规范的思路：以统一的命名前缀，一般以项目/组织等缩写作为前缀</p>\n\n<p>组件化规整之后，可能存在的情况是前后的文件命名不一致导致的影响代码易读性、易维护等问题</p>\n\n<p>除此之外，由于代码经由不同人迭代的，甚至不同组织迭代（从外包接手的项目）还存在一些文件注释的注释模板差异的情况</p>\n\n<h2 id=\"2-类命名统一\">2. 类命名统一</h2>\n\n<h3 id=\"21-类重命名之前\">2.1 类重命名之前</h3>\n\n<p>需要确认下，当前类或者与之相关的一些类，是否存在于<a href=\"https://cocoapods.org/\">CocoaPods</a>公有源上，如果存在，可以直接通过Pod引入（组件内通过dependency），</p>\n\n<p>举个例子：如果你需要进行重命名的类是这样的：SDWebImage、SDWebImageXXX、SDXXX，显然，这是将SDWebImage通过代码直接集成，由于SDWebImage类数量比较多，且属于成熟框架，在确认没有私自改动逻辑的情况下，可以考虑直接移除，采用通过Pod引入（组件内通过dependency）</p>\n\n<p>当然，如果存在没有被用到的类，也正好是一个移除他们的好时机！</p>\n\n<p><strong>‼️特别注意：改名之前，需要确认，要改的类名是否已经存在工程中，如果存在且继续修改，会造成很多错误替换，造成很复杂的编译问题，且难以回退。</strong></p>\n\n<p>例如：ABCWebView，要改成PSCWebView，此时如果工程中已经存在PSCWebView，则ABCWebView继续再改成PSCWebView，会造成所有ABCWebView与PSCWebView的混乱，除非单次修改（之前的操作已经提交），否则回退也变得异常困难。</p>\n\n<h3 id=\"22-常规类重命名\">2.2 常规类重命名</h3>\n\n<p>可以通过IDE：Xcode自带的rename功能进行类名重命名：</p>\n\n<p><img src=\"/img/name/1.png\" alt=\"\" /></p>\n\n<p>替换成带期望前缀的类名</p>\n\n<p><img src=\"/img/name/2.png\" alt=\"WX20230731-191648\" /></p>\n\n<p>可能存在替换不完全的可能，需要检索下旧类名，全局替换下，确保编译通过方可</p>\n\n<h3 id=\"23-categories重命名\">2.3 categories重命名</h3>\n\n<p>categories的重命名无法根据上述方式，只能通过常规的修改文件名，以及全局替换的方式。</p>\n\n<p>值得一提的是，若一个基础类存在多个单一功能的categories，例如存在UIButton+Category1，UIButton+Category2……，他们有可能存在重复的功能可以考虑保留其中一个即可，也可以考虑将他们重构，合并，或者是重新划分下功能归属，</p>\n\n<h2 id=\"3类注释模板统一\">3.类注释模板统一：</h2>\n\n<p>治理这些情况，可能就需要分两步：</p>\n\n<h3 id=\"31-第一步存量类注释规范治理\">3.1 第一步：存量类注释规范治理</h3>\n\n<p>存量治理，这边采用脚本批量执行，具体思路如下：</p>\n\n<ul>\n  <li>遍历指定目录（若未传参数则为当前目录）下的子目录</li>\n  <li>匹配所有iOS工程类文件：.h .m .swift</li>\n  <li>对其注释头进行模板替换\n    <ul>\n      <li>匹配获取当前类的author，匹配不到则使用默认值（需定义）</li>\n      <li>匹配获取当前类的time，匹配不到则使用默认值（需定义）</li>\n      <li>替换版权信息（需定义）</li>\n    </ul>\n  </li>\n</ul>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#!/bin/bash</span>\n\n<span class=\"c\"># 遍历更新当前目录下(含子目录）所有iOS工程类文件：.h .m .swift 并对其注释头进行模板替换</span>\n<span class=\"c\"># author: Chenyp34</span>\n<span class=\"c\"># [目的]</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># 组件化规整之后，可能存在的情况是前后的文件命名不一致导致的影响代码易读性、易维护等问题</span>\n<span class=\"c\"># 除此之外，由于代码经由不同人迭代的，甚至不同组织迭代（从外包接手的项目）还存在一些文件注释的注释模板差异的情况</span>\n<span class=\"c\"># 此脚本目的为了解决存量类文件头注释统一性问题</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [目录]</span>\n<span class=\"c\">#   - replace_class_header_anotation.sh 遍历更新当前目录下，子目录git仓库的脚本</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [说明]</span>\n<span class=\"c\"># 1、遍历指定目录（若未传参数则为当前目录）下的子目录</span>\n<span class=\"c\"># 2、匹配所有iOS工程类文件：.h .m .swift</span>\n<span class=\"c\"># 3、对其注释头进行模板替换</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [参数]</span>\n<span class=\"c\"># 1、参数1，指定目录</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [调用说明]</span>\n<span class=\"c\"># 1、未指定目录，则取当前目录：sh replace_class_header_anotation.sh</span>\n<span class=\"c\"># 2、指定目录：sh replace_class_header_anotation.sh /User/xxx/xx</span>\n<span class=\"c\"># 本脚本适用于将：下述注释替换成 统一注释模板：</span>\n<span class=\"c\">#   其一：</span>\n<span class=\"c\">#//</span>\n<span class=\"c\">#//  FileName.h</span>\n<span class=\"c\">#//  ProjectName</span>\n<span class=\"c\">#//</span>\n<span class=\"c\">#//  Created by Author on Date.</span>\n<span class=\"c\">#// (没版权信息)</span>\n<span class=\"c\">#//</span>\n<span class=\"c\">#</span>\n<span class=\"c\">#   其二：</span>\n<span class=\"c\">#   /****************************************************************************************************</span>\n<span class=\"c\">#   * 版权所有： Copyright (c) 2012-2021 xxxx. All rights reserved.</span>\n<span class=\"c\">#   * 作 者： Author （2021/3/12）</span>\n<span class=\"c\">#   * 界面描述：  界面描述</span>\n<span class=\"c\">#   ****************************************************************************************************/</span>\n<span class=\"c\">#</span>\n<span class=\"c\">#   其三：</span>\n<span class=\"c\">#   没有任何注释的</span>\n<span class=\"c\">#</span>\n<span class=\"c\">#</span>\n<span class=\"c\">#   替换成统一注释模板：</span>\n<span class=\"c\">#</span>\n<span class=\"c\">#//</span>\n<span class=\"c\">#//  \"$filename\"</span>\n<span class=\"c\">#//  \"$project_name\"</span>\n<span class=\"c\">#//</span>\n<span class=\"c\">#//  Created by \"$auth\" on \"$date\".</span>\n<span class=\"c\">#//  \"$copyright_str\"</span>\n<span class=\"c\">#//</span>\n<span class=\"c\">#</span>\n<span class=\"c\">#定义版权信息</span>\n<span class=\"nb\">export </span><span class=\"nv\">copyright_str</span><span class=\"o\">=</span><span class=\"s2\">\"Copyright (C) 2023 Your Company Name Technology Limited. All rights reserved.\"</span>\n\n<span class=\"c\">#定义默认用户信息：PaysonChen</span>\n<span class=\"nb\">export </span><span class=\"nv\">def_author_str</span><span class=\"o\">=</span><span class=\"s2\">\"PaysonChen\"</span>\n\n<span class=\"c\">#定义默认日期：当前日期</span>\n<span class=\"nb\">export </span><span class=\"nv\">def_time_str</span><span class=\"o\">=</span><span class=\"sb\">`</span><span class=\"nb\">date</span> +%Y/%m/%d<span class=\"sb\">`</span>\n\n<span class=\"k\">function </span>get_creator_name_with_template_2<span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"nv\">file</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n    <span class=\"nv\">creator_name</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">sed</span> <span class=\"nt\">-n</span> <span class=\"s1\">'s/.*作    者： \\(.*\\).*/\\1/p'</span> <span class=\"nv\">$file</span><span class=\"si\">)</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"creator_name=\"</span><span class=\"nv\">$creator_name</span><span class=\"s2\">\" in file=\"</span><span class=\"nv\">$file</span>\n    \n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$creator_name</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">echo</span> <span class=\"s1\">'///获取创建者 第二种模板获取 为空 使用默认值'</span>\n        <span class=\"nv\">creator_name</span><span class=\"o\">=</span><span class=\"nv\">$def_author_str</span>\n    <span class=\"k\">fi</span>\n<span class=\"o\">}</span>\n\n<span class=\"k\">function </span>get_creator_name<span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"nv\">file</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n    <span class=\"nv\">creator_name</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">sed</span> <span class=\"nt\">-n</span> <span class=\"s1\">'s/.*Created by \\(.*\\) on.*/\\1/p'</span> <span class=\"nv\">$file</span><span class=\"si\">)</span>\n    \n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$creator_name</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span>get_creator_name_with_template_2 <span class=\"nv\">$file</span>\n    <span class=\"k\">fi\n    \n    </span><span class=\"nb\">echo</span> <span class=\"s2\">\"--------creator_name=【\"</span><span class=\"nv\">$creator_name</span><span class=\"s2\">\"】 in file=\"</span><span class=\"nv\">$file</span>\n<span class=\"o\">}</span>\n\n\n\n<span class=\"k\">function </span>get_creator_time_with_template_2<span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"nv\">file</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n    <span class=\"nv\">creator_time</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">sed</span> <span class=\"nt\">-n</span> <span class=\"s1\">'s/.*创建日期： \\(.*\\).*/\\1/p'</span> <span class=\"nv\">$file</span><span class=\"si\">)</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"-------创建日期=【\"</span><span class=\"nv\">$creator_time</span><span class=\"s2\">\"】 in file=\"</span><span class=\"nv\">$file</span>\n\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$creator_time</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then</span>\n<span class=\"c\">#        echo '///获取创建时间 第二种模板获取 为空 使用默认值'</span>\n        <span class=\"nv\">creator_time</span><span class=\"o\">=</span><span class=\"nv\">$def_time_str</span>\n    <span class=\"k\">fi</span>\n<span class=\"o\">}</span>\n\n\n<span class=\"k\">function </span>format_creator_time<span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"nv\">creator_time</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n    \n    <span class=\"nv\">length</span><span class=\"o\">=</span><span class=\"k\">${#</span><span class=\"nv\">creator_time</span><span class=\"k\">}</span>\n\n    <span class=\"c\"># 截取除最后一个字符外的部分</span>\n    <span class=\"nv\">creator_time</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">creator_time</span>:0:length-1<span class=\"k\">}</span>\n    <span class=\"c\">#echo \"截去掉最后一个字符后的字符串: $creator_time\"</span>\n<span class=\"o\">}</span>\n\n\n<span class=\"k\">function </span>get_creator_time<span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"nv\">file</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n    \n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$2</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nv\">line</span><span class=\"o\">=</span>5\n    <span class=\"k\">else\n        </span><span class=\"nv\">line</span><span class=\"o\">=</span><span class=\"nv\">$2</span>\n    <span class=\"k\">fi</span>\n    <span class=\"c\">#creator_time=$(sed -n '5s/.*\\(.\\{10\\}\\)$/\\1/p' $file)</span>\n    <span class=\"nv\">creator_time</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">awk</span> <span class=\"s1\">'NR=='</span><span class=\"nv\">$line</span><span class=\"s1\">' {print $NF}'</span> <span class=\"nv\">$file</span><span class=\"si\">)</span>\n\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"-------creator_time=【\"</span><span class=\"nv\">$creator_time</span><span class=\"s2\">\"】 line = \"</span><span class=\"nv\">$line</span><span class=\"s2\">\" in file=\"</span><span class=\"nv\">$file</span>\n<span class=\"c\">#    date_regex='^(19|20)[0-9]{2}/(0?[1-9]|1[0-2])/(0?[1-9]|[1-2][0-9]|3[0-1]).$'</span>\n    <span class=\"c\">#date_regex='^(19[0-9]{2}|20[0-9]{2}|[0-9]{2})/(0?[1-9]|1[0-2])/(0?[1-9]|[1-2][0-9]|3[0-1]).$'</span>\n    <span class=\"nv\">date_regex</span><span class=\"o\">=</span><span class=\"s1\">'^(19[0-9]{2}|20[0-9]{2}|[0-9]{2})([-/])(0?[1-9]|1[0-2])([-/])(0?[1-9]|[1-2][0-9]|3[0-1]).$'</span>\n\n    <span class=\"c\"># 进行正则匹配</span>\n    <span class=\"k\">if</span> <span class=\"o\">[[</span> <span class=\"nv\">$creator_time</span> <span class=\"o\">=</span>~ <span class=\"nv\">$date_regex</span> <span class=\"o\">]]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">echo</span> <span class=\"s2\">\"日期格式正确，截断最后一个小数 .\"</span>\n        format_creator_time <span class=\"nv\">$creator_time</span>\n    <span class=\"k\">else\n        if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$2</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n            </span><span class=\"nv\">discount</span><span class=\"o\">=</span>1\n            <span class=\"nv\">new_line</span><span class=\"o\">=</span><span class=\"k\">$((</span>line-discount<span class=\"k\">))</span>\n            <span class=\"nb\">echo</span> <span class=\"s2\">\"常规调用如果匹配不到的花，那么多一次，向上查找\"</span><span class=\"nv\">$discount</span><span class=\"s2\">\"行，进行递归:\"</span><span class=\"nv\">$new_line</span>\n            get_creator_time <span class=\"nv\">$file</span> <span class=\"nv\">$new_line</span>\n        <span class=\"k\">else\n            </span><span class=\"nb\">echo</span> <span class=\"s2\">\"日期格式错误，执行第二种匹配\"</span>\n            get_creator_time_with_template_2 <span class=\"nv\">$file</span>\n        <span class=\"k\">fi\n    fi\n    </span><span class=\"nb\">echo</span> <span class=\"s2\">\"********creator_time=【\"</span><span class=\"nv\">$creator_time</span><span class=\"s2\">\"】 in file=\"</span><span class=\"nv\">$file</span>\n<span class=\"o\">}</span>\n\n\n\n<span class=\"k\">function </span>replace_header_anoation<span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"nv\">file</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n    \n    <span class=\"c\">#定义要替换的字符串</span>\n    <span class=\"c\">#文件名</span>\n    <span class=\"nv\">filename</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">echo</span> <span class=\"s2\">\"</span><span class=\"nv\">$file</span><span class=\"s2\">\"</span> | <span class=\"nb\">sed</span> <span class=\"s1\">'s#.*/##'</span><span class=\"si\">)</span>\n    <span class=\"c\">#项目名</span>\n    <span class=\"nv\">project_name</span><span class=\"o\">=</span><span class=\"s2\">\"PSCProject\"</span>\n    \n    <span class=\"c\">#还有从当前类中获取作者信息，获取不到取默认值</span>\n    <span class=\"nv\">auth</span><span class=\"o\">=</span><span class=\"nv\">$creator_name</span>\n    \n    <span class=\"c\">#还有从当前类中获取作者信息，获取不到取默认值</span>\n    <span class=\"nb\">date</span><span class=\"o\">=</span><span class=\"nv\">$creator_time</span>\n\n    <span class=\"c\">#以下是替换的模板</span>\n    <span class=\"nv\">new_content</span><span class=\"o\">=</span><span class=\"s2\">\"//\n//  \"</span><span class=\"nv\">$filename</span><span class=\"s2\">\"\n//  \"</span><span class=\"nv\">$project_name</span><span class=\"s2\">\"\n//\n//  Created by \"</span><span class=\"nv\">$auth</span><span class=\"s2\">\" on \"</span><span class=\"nv\">$date</span><span class=\"s2\">\".\n//  \"</span><span class=\"nv\">$copyright_str</span><span class=\"s2\">\"\n//\"</span>\n\n    <span class=\"nv\">new_content_escaped</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">echo</span> <span class=\"s2\">\"</span><span class=\"nv\">$new_content</span><span class=\"s2\">\"</span> | <span class=\"nb\">sed</span> <span class=\"s1\">'s/$/\\\\/'</span><span class=\"si\">)</span> <span class=\"c\"># 转义换行符</span>\n    <span class=\"nb\">sed</span> <span class=\"nt\">-i</span> <span class=\"s1\">''</span> <span class=\"nt\">-e</span> <span class=\"s2\">\"1,7c</span><span class=\"se\">\\\\</span><span class=\"s2\">\n</span><span class=\"nv\">$new_content_escaped</span><span class=\"s2\">\"</span> <span class=\"s2\">\"</span><span class=\"nv\">$file</span><span class=\"s2\">\"</span>\n\n    <span class=\"c\">#还有几个问题待优化</span>\n    <span class=\"c\">#1、如果开头没有注释，则会直接覆盖，或者注释不足7行的</span>\n    <span class=\"c\">#2、日期正则如果不是以 YYYY/MM/DD or YY/MM/DD 其中/和-都适用</span>\n        <span class=\"c\">#2.1但是兼容2023/8/1这样的个位数日期)，</span>\n        <span class=\"c\">#2.2如果日期是8/1/23 这样会导致识别错误 会被替换成今天的日期</span>\n\n<span class=\"o\">}</span>\n\n<span class=\"c\"># 统一类头注释</span>\n<span class=\"k\">function </span>unify_header_anoation<span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"nv\">file</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n\n    <span class=\"c\">#还有从当前类中获取作者信息，获取不到取默认值</span>\n    get_creator_name <span class=\"nv\">$file</span>\n    \n    <span class=\"c\">#还有从当前类中获取作者信息，获取不到取默认值</span>\n    get_creator_time <span class=\"nv\">$file</span>\n    \n    <span class=\"c\">#不传第二个参数 则执行替换，传就不执行</span>\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$2</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span>replace_header_anoation <span class=\"nv\">$file</span>\n    <span class=\"k\">fi</span>\n<span class=\"o\">}</span>\n\n\n<span class=\"k\">function </span>main<span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"nv\">file_path</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$file_path</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">echo</span> <span class=\"s1\">'///未指定路径,file_path为. 当前路径'</span>\n        <span class=\"nv\">file_path</span><span class=\"o\">=</span><span class=\"nb\">.</span>\n    <span class=\"k\">fi</span>\n\n\n    <span class=\"c\">#遍历当前路径下所有oc类</span>\n    find <span class=\"nv\">$file_path</span> <span class=\"nt\">-type</span> f <span class=\"nt\">-name</span> <span class=\"s2\">\"*.swift\"</span> <span class=\"nt\">-o</span> <span class=\"nt\">-name</span> <span class=\"s2\">\"*.h\"</span> <span class=\"nt\">-o</span> <span class=\"nt\">-name</span> <span class=\"s2\">\"*.m\"</span> | <span class=\"k\">while </span><span class=\"nb\">read </span>file<span class=\"p\">;</span> <span class=\"k\">do\n        </span>unify_header_anoation <span class=\"nv\">$file</span> <span class=\"nv\">$2</span>\n    <span class=\"k\">done</span>\n<span class=\"o\">}</span>\n\n\nmain <span class=\"nv\">$1</span> <span class=\"nv\">$2</span>\n\n\n\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h3 id=\"32-第二步新增类注释模板制定\">3.2 第二步：新增类注释模板制定</h3>\n\n<p>增量治理，可以通过工程内部的内置的模板进行限定，具体操作为：</p>\n\n<h4 id=\"321-全局指定\">3.2.1 全局指定</h4>\n\n<p>全局指定在下列路径中新增文件名为：IDETemplateMacros.plist</p>\n\n<p>其中内容为</p>\n\n<div class=\"language-xml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n</pre></td><td class=\"rouge-code\"><pre><span class=\"cp\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</span>\n<span class=\"cp\">&lt;!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\"&gt;</span>\n<span class=\"nt\">&lt;plist</span> <span class=\"na\">version=</span><span class=\"s\">\"1.0\"</span><span class=\"nt\">&gt;</span>\n<span class=\"nt\">&lt;dict&gt;</span>\n    <span class=\"nt\">&lt;key&gt;</span>FILEHEADER<span class=\"nt\">&lt;/key&gt;</span>\n    <span class=\"nt\">&lt;string&gt;</span>\n//  \n//  ___FILENAME___ \n//  ___PACKAGENAME___\n//\n//  Created by ___FULLUSERNAME___ on ___DATE___\n//  ___COPYRIGHT___\n//\n    <span class=\"nt\">&lt;/string&gt;</span>\n<span class=\"nt\">&lt;/dict&gt;</span>\n<span class=\"nt\">&lt;/plist&gt;</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>路径（按优先级从低到高排序：如果更高一级优先级目录下出现了IDETemplateMacros，会覆盖比他低优先级的目录下的IDETemplateMacros内容）</p>\n\n<p>xcWorkspace：</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>XXX.xcworkspace/xcshareddata/IDETemplateMacros.plist \n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>xcodeproj（相比xcworkspace，具有更高优先级）：</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>XXX.xcodeproj/xcshareddata/IDETemplateMacros.plist\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>xcodeproj下的xcshareddata文件夹下存在IDETemplateMacros.plist，会覆盖xcworkspace的xcshareddata，（也就是xcworkspace的xcshareddata的IDETemplateMacros.plist不生效）</p>\n\n<p><u>**综上所述：xcworkspace下的IDETemplateMacros，在xcworkspace内部的xcodeproj未指定IDETemplateMacros时生效**</u></p>\n\n<h4 id=\"322-用户指定\">3.2.2 用户指定</h4>\n\n<p>上述xcodeproj、xcworkspace根目录下还有各自xcuserdata，xcuserdata内包含各个用户名的文件夹 username.xcuserdatad，存在此目录下的IDETemplateMacros.plist ，优先级高于xcshareddata，</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n</pre></td><td class=\"rouge-code\"><pre>XXX.xcworkspace/xcuserdata/IDETemplateMacros.plist \nXXX.xcodeproj/xcuserdata/IDETemplateMacros.plist\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p><strong><em><u>优先级与2.2.1所述一致：xcworkspace/xcodeproj内的xcshareddata下的IDETemplateMacros，在xcworkspace/xcodeproj内部的xcuserdata未指定IDETemplateMacros时生效</u></em></strong></p>\n\n<h4 id=\"323-本地指定\">3.2.3 本地指定</h4>\n\n<p>上述情况之外：</p>\n\n<p><strong><em><u>在上述均不存在IDETemplateMacros.plist时，本地目录才会生效</u></em></strong>：</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>/Users/Mac登录名/Library/Developer/Xcode/UserData/IDETemplateMacros.plist \n</pre></td></tr></tbody></table></code></pre></div></div>\n\n","name":"2023-07-31-6-iOS-组件化-命名注释篇.md","previous":{"id":"/2023/07/26/5-iOS组件化-资源组件库","tags":[],"relative_path":"_posts/2023-07-26-5-iOS组件化-资源组件库.md","collection":"posts","content":"<h1 id=\"ios组件化实现之资源组件库\">iOS组件化实现之：资源组件库</h1>\n\n<h2 id=\"1-资源有哪些\">1 资源有哪些</h2>\n\n<p>​\t笼统的可以说，只要不是代码文件的，都可以算是资源文件，举些例子，包括但不限于：图片、音频、视频、动画、字体、多语言文件(.strings)、各类资源包、内置数据库、二进制加密文件不等</p>\n\n<h2 id=\"2-为什么要做\">2 为什么要做</h2>\n\n<p>​\t存在一些可复用的资源，举些例子，包括但不限于：</p>\n\n<ul>\n  <li>\n    <p>通用样式图标</p>\n\n    <p>导航条图标、头像、按钮、单/复选框、通用背景图片等</p>\n  </li>\n  <li>\n    <p>通用媒体文件</p>\n\n    <p>通用的点击音效、提示音、过场动画、加载动画等</p>\n  </li>\n  <li>\n    <p>其他通用文件</p>\n\n    <p>城市列表、字体、第三方预置资源等</p>\n  </li>\n</ul>\n\n<p>由于部分资源是有通用性，因此将这些通用资源提取出来，形成组件，可服务于更多项目，提升集成的效率，降低研发成本</p>\n\n<h2 id=\"3-怎么做\">3 怎么做</h2>\n\n<h3 id=\"31-新建一个pod私有库\">3.1 新建一个Pod私有库</h3>\n\n<p><a href=\"https://paysonchen.cn/2023/07/26/4-iOS%E7%BB%84%E4%BB%B6%E5%8C%96%E6%A8%A1%E6%9D%BF/\">此处省略一万字(查看另一篇文章)</a></p>\n\n<h3 id=\"32-迁移主工程资源\">3.2 迁移主工程资源</h3>\n\n<p>主工程：</p>\n\n<p>中的资源一般散落在各处，即遍是不一定全部存放在asset集合中，可以通过Xcode Project Navigator底部的搜索栏，通过后缀名(.png / .jpg /.webp /.mp3 /,mp4  ……)检索出资源</p>\n\n<p>资源组件库：</p>\n\n<p>asset文件夹下存放主工程迁移的资源。</p>\n\n<p>存放形式可以以下形式：</p>\n\n<ul>\n  <li>xcassets集合</li>\n  <li>散落的资源文件</li>\n</ul>\n\n<p>配置podspec：</p>\n\n<p>通过指定resource_bundles进行资源的配置</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n</pre></td><td class=\"rouge-code\"><pre>   <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">resource_bundles</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n     <span class=\"s1\">'PSCResource'</span> <span class=\"o\">=&gt;</span> <span class=\"p\">[</span>\n     <span class=\"s1\">'PSCResource/Assets/PSCCommon.xcassets'</span><span class=\"p\">,</span>\n     <span class=\"s1\">'PSCResource/Assets/PSCCommonResources/**/*'</span><span class=\"p\">,</span>\n     <span class=\"s1\">'PSCResource/Assets/XXProj.xcassets'</span><span class=\"p\">,</span>\n     <span class=\"s1\">'PSCResource/Assets/XXProjResources/**/*'</span><span class=\"p\">]</span>\n   <span class=\"p\">}</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h3 id=\"33-资源读取方式\">3.3 资源读取方式</h3>\n\n<p>资源组件化之前，使用一般是</p>\n\n<pre><code class=\"language-objective-c\">//图片:imageNamed\n[UIImage imageNamed:@\"pic\"];\n\n//资源:通过mainBundle进行：\n[[NSBundle mainBundle] pathForResource:@\"name\" ofType:@\"ext\"];\n</code></pre>\n\n<p>这是因为，主工程里的资源，一般是打包到xx.app的根目录（xcasset以asset.car存在）</p>\n\n<p>组件库里的资源是打包 xx.framework/xx.bundle</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n</pre></td><td class=\"rouge-code\"><pre>……/Debug-iphoneos/xxx.app/Frameworks/xx.framework/xx.bundle/pic.png\n……/Debug-iphoneos/xxx.app/Frameworks/xx.framework/xx.bundle/asset.car\n……\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>直接通过下列方法获取为空</p>\n\n<pre><code class=\"language-objective-c\">//组件库资源，通过以下方法获取为nil\n[UIImage imageNamed:@\"pic\"];\n[[NSBundle mainBundle] pathForResource:@\"name\" ofType:@\"ext\"];\n</code></pre>\n\n<p>组件库资源获取方法是为下列类添加类别</p>\n\n<ul>\n  <li>UIImage:</li>\n</ul>\n\n<pre><code class=\"language-objective-c\">@interface UIImage (PSCResource)\n\n/// 从 PSCResource 通过图片名称获取UIImage\n/// - Parameter name: 图片名称\n+ (UIImage *)pscImageNamed:(NSString *)name;\n\n@end\n\n@implementation UIImage (PSCResource)\n\n+ (UIImage *)pscImageNamed:(NSString *)name{\n    NSBundle *bundle = [NSBundle bundleForClass:NSClassFromString(kCurResPodName)];\n    NSURL *url = [bundle URLForResource:kCurResBunldeName withExtension:@\"bundle\"];\n    if (url) {\n        NSBundle *imageBundle = [NSBundle bundleWithURL:url];\n        UIImage *img = [UIImage imageNamed:name inBundle:imageBundle compatibleWithTraitCollection:nil];\n        if (img) {\n            return img;\n        }\n    }\n    //这里兜个底，兼容资源还在主工程的时候，使用mainBundle\n    return [UIImage imageNamed:name];\n}\n\n@end\n</code></pre>\n\n<ul>\n  <li>NSBunlde:</li>\n</ul>\n\n<pre><code class=\"language-objective-c\">@interface NSBundle (PSCResource)\n/// 私有库获取资源\n/// - Parameters:\n///   - name: 资源名\n///   - ext: 资源类别\n+ (NSString *)pscPathForResource:(NSString *)name ofType:(NSString *)ext;\n@end\n\n@implementation NSBundle (PSCResource)\n+ (NSString *)pscPathForResource:(NSString *)name ofType:(NSString *)ext {\n    \n    NSBundle *bundle = [NSBundle bundleForClass:NSClassFromString(kCurResPodName)];\n    NSURL *url = [bundle URLForResource:kCurResBunldeName withExtension:@\"bundle\"];\n    if (url) {\n        NSBundle *resBundle = [NSBundle bundleWithURL:url];\n        NSString *path = [resBundle pathForResource:name ofType:ext];\n        if (path) {\n            return path;\n        }\n    }\n    //这里兜个底，兼容资源还在主工程的时候，使用mainBundle\n    return [[NSBundle mainBundle] pathForResource:name ofType:ext];\n}\n@end\n</code></pre>\n\n<h3 id=\"34-主工程读取替换\">3.4 主工程读取替换</h3>\n\n<p>检索主工程里所有的方法：</p>\n\n<div class=\"language-objc highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n</pre></td><td class=\"rouge-code\"><pre><span class=\"p\">[</span><span class=\"n\">UIImage</span> <span class=\"nf\">imageNamed</span><span class=\"p\">:</span><span class=\"s\">@\"pic\"</span><span class=\"p\">];</span>\n<span class=\"p\">[[</span><span class=\"n\">NSBundle</span> <span class=\"nf\">mainBundle</span><span class=\"p\">]</span> <span class=\"nf\">pathForResource</span><span class=\"p\">:</span><span class=\"s\">@\"name\"</span> <span class=\"nf\">ofType</span><span class=\"p\">:</span><span class=\"s\">@\"ext\"</span><span class=\"p\">];</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>替换成:</p>\n\n<pre><code class=\"language-objective-c\">[UIImage pscImageNamed:@\"xx\"]\nNSString *hotPath = [NSBundle pscPathForResource:@\"yy\" ofType:@\"zz\"];\n</code></pre>\n\n<p>最后检验下上述调用是否正常？</p>\n","name":"2023-07-26-5-iOS组件化-资源组件库.md","previous":{"id":"/2023/07/26/4-iOS组件化模板","tags":[],"relative_path":"_posts/2023-07-26-4-iOS组件化模板.md","collection":"posts","name":"2023-07-26-4-iOS组件化模板.md","url":"/2023/07/26/4-iOS%E7%BB%84%E4%BB%B6%E5%8C%96%E6%A8%A1%E6%9D%BF/","title":"iOS组件化实践之：新建一个Pod组件库","date":"2023-07-26 00:00:00 +0800","categories":[],"path":"_posts/2023-07-26-4-iOS组件化模板.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/home-bg-geek.jpg","slug":"4-iOS组件化模板","ext":".md"},"output":"<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"google-site-verification\" content=\"xBT4GhYoi5qRD5tr338pgPM5OWHHIDR6mNg1a3euekI\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, viewport-fit=cover\">\n    <meta name=\"description\" content=\"与你一起发现更大的世界。\">\n    <meta name=\"keywords\"  content=\"PaysonChen,iOS,流媒体\">\n    <meta name=\"theme-color\" content=\"#000000\">\n    \n    <!-- Open Graph -->\n    <meta property=\"og:title\" content=\"iOS组件化实践之：资源组件库 - PaysonChen的博客 | PaysonChen Blog\">\n    \n    <meta property=\"og:type\" content=\"article\">\n    <meta property=\"og:description\" content=\"iOS组件化实现之：资源组件库\n\">\n    \n    \n    <meta property=\"article:published_time\" content=\"2023-07-26T00:00:00Z\">\n    \n    \n    <meta property=\"article:author\" content=\"PaysonChen\">\n    \n    \n    \n    <meta property=\"og:image\" content=\"http://localhost:4000\">\n    <meta property=\"og:url\" content=\"http://localhost:4000/2023/07/26/5-iOS%E7%BB%84%E4%BB%B6%E5%8C%96-%E8%B5%84%E6%BA%90%E7%BB%84%E4%BB%B6%E5%BA%93/\">\n    <meta property=\"og:site_name\" content=\"PaysonChen的博客 | PaysonChen Blog\">\n    \n    <title>iOS组件化实践之：资源组件库 - PaysonChen的博客 | PaysonChen Blog</title>\n\n    <!-- Web App Manifest -->\n    <link rel=\"manifest\" href=\"/pwa/manifest.json\">\n\n    <!-- Favicon -->\n    <link rel=\"shortcut icon\" href=\"/img/favicon.ico\">\n    \n    <!-- Canonical URL -->\n    <link rel=\"canonical\" href=\"http://localhost:4000/2023/07/26/5-iOS%E7%BB%84%E4%BB%B6%E5%8C%96-%E8%B5%84%E6%BA%90%E7%BB%84%E4%BB%B6%E5%BA%93/\">\n\n    <!-- Bootstrap Core CSS -->\n    <link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\">\n\n    <!-- Custom CSS -->\n    <link rel=\"stylesheet\" href=\"/css/hux-blog.min.css\">\n\n    <!-- Custom Fonts -->\n    <!-- <link href=\"http://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\"> -->\n    <!-- Hux change font-awesome CDN to qiniu -->\n    <link href=\"//cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\">\n\n\n    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->\n    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->\n    <!--[if lt IE 9]>\n        <script src=\"https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js\"></script>\n        <script src=\"https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js\"></script>\n    <![endif]-->\n\n    <!-- ga & ba script hoook -->\n    <script></script>\n</head>\n\n\n<!-- hack iOS CSS :active style -->\n<body ontouchstart=\"\">\n\n    <!-- Navigation -->\n\n    <nav class=\"navbar navbar-default navbar-custom navbar-fixed-top\">\n        \n        <div class=\"container-fluid\">\n            <!-- Brand and toggle get grouped for better mobile display -->\n            <div class=\"navbar-header page-scroll\">\n                <button type=\"button\" class=\"navbar-toggle\">\n                    <span class=\"sr-only\">Toggle navigation</span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                </button>\n                <a class=\"navbar-brand\" href=\"/\">PaysonChen Blog</a>\n            </div>\n\n            <!-- Collect the nav links, forms, and other content for toggling -->\n            <div id=\"huxblog_navbar\">\n                <div class=\"navbar-collapse\">\n                    <ul class=\"nav navbar-nav navbar-right\">\n                        <li>\n                            <a href=\"/\">Home</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        <li>\n                            <a href=\"/about/\">About</a>\n                        </li>\n                        \n                        \n                        \n                        <li>\n                            <a href=\"/archive/\">Archive</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        <li class=\"search-icon\">\n                            <a href=\"javascript:void(0)\">\n                                <i class=\"fa fa-search\"></i>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n            <!-- /.navbar-collapse -->\n        </div>\n        <!-- /.container -->\n    </nav>\n\n    <script>\n        // Drop Bootstarp low-performance Navbar\n        // Use customize navbar with high-quality material design animation\n        // in high-perf jank-free CSS3 implementation\n        var $body = document.body;\n        var $toggle = document.querySelector('.navbar-toggle');\n        var $navbar = document.querySelector('#huxblog_navbar');\n        var $collapse = document.querySelector('.navbar-collapse');\n\n        var __HuxNav__ = {\n            close: function () {\n                $navbar.className = \" \";\n                // wait until animation end.\n                setTimeout(function () {\n                    // prevent frequently toggle\n                    if ($navbar.className.indexOf('in') < 0) {\n                        $collapse.style.height = \"0px\"\n                    }\n                }, 400)\n            },\n            open: function () {\n                $collapse.style.height = \"auto\"\n                $navbar.className += \" in\";\n            }\n        }\n\n        // Bind Event\n        $toggle.addEventListener('click', function (e) {\n            if ($navbar.className.indexOf('in') > 0) {\n                __HuxNav__.close()\n            } else {\n                __HuxNav__.open()\n            }\n        })\n\n        /**\n         * Since Fastclick is used to delegate 'touchstart' globally\n         * to hack 300ms delay in iOS by performing a fake 'click',\n         * Using 'e.stopPropagation' to stop 'touchstart' event from \n         * $toggle/$collapse will break global delegation.\n         * \n         * Instead, we use a 'e.target' filter to prevent handler\n         * added to document close HuxNav.  \n         *\n         * Also, we use 'click' instead of 'touchstart' as compromise\n         */\n        document.addEventListener('click', function (e) {\n            if (e.target == $toggle) return;\n            if (e.target.className == 'icon-bar') return;\n            __HuxNav__.close();\n        })\n    </script>\n    <!-- Search -->\n<div class=\"search-page\">\n  <div class=\"search-icon-close-container\">\n    <span class=\"search-icon-close\">\n      <i class=\"fa fa-chevron-down\"></i>\n    </span>\n  </div>\n  <div class=\"search-main container\">\n    <div class=\"row\">\n      <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n        <form></form>\n        <input type=\"text\" id=\"search-input\" placeholder=\"$ grep...\">\n        </form>\n        <div id=\"search-results\" class=\"mini-post-list\"></div>\n      </div>\n    </div>\n  </div>\n</div>\n\n    <!-- Image to hack wechat -->\n<!-- <img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\"> -->\n<!-- <img src=\"/img/home-bg-geek.jpg\" width=\"0\" height=\"0\"> -->\n\n<!-- Post Header -->\n\n\n\n<style type=\"text/css\">\n    header.intro-header{\n        position: relative;\n        background-image: url('/img/home-bg-geek.jpg');\n        background: ;\n    }\n\n    \n</style>\n\n<header class=\"intro-header\" >\n\n    <div class=\"header-mask\"></div>\n    \n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <div class=\"post-heading\">\n                    <div class=\"tags\">\n                        \n                    </div>\n                    <h1>iOS组件化实践之：资源组件库</h1>\n                    \n                    <h2 class=\"subheading\"></h2>\n                    <span class=\"meta\">Posted by PaysonChen on July 26, 2023</span>\n                </div>\n            </div>\n        </div>\n    </div>\n</header>\n\n\n\n\n\n\n<!-- Post Content -->\n<article>\n    <div class=\"container\">\n        <div class=\"row\">\n\n    <!-- Post Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                post-container\">\n\n                <!-- Multi-Lingual -->\n                \n\n\t\t\t\t<h1 id=\"ios组件化实现之资源组件库\">iOS组件化实现之：资源组件库</h1>\n\n<h2 id=\"1-资源有哪些\">1 资源有哪些</h2>\n\n<p>​\t笼统的可以说，只要不是代码文件的，都可以算是资源文件，举些例子，包括但不限于：图片、音频、视频、动画、字体、多语言文件(.strings)、各类资源包、内置数据库、二进制加密文件不等</p>\n\n<h2 id=\"2-为什么要做\">2 为什么要做</h2>\n\n<p>​\t存在一些可复用的资源，举些例子，包括但不限于：</p>\n\n<ul>\n  <li>\n    <p>通用样式图标</p>\n\n    <p>导航条图标、头像、按钮、单/复选框、通用背景图片等</p>\n  </li>\n  <li>\n    <p>通用媒体文件</p>\n\n    <p>通用的点击音效、提示音、过场动画、加载动画等</p>\n  </li>\n  <li>\n    <p>其他通用文件</p>\n\n    <p>城市列表、字体、第三方预置资源等</p>\n  </li>\n</ul>\n\n<p>由于部分资源是有通用性，因此将这些通用资源提取出来，形成组件，可服务于更多项目，提升集成的效率，降低研发成本</p>\n\n<h2 id=\"3-怎么做\">3 怎么做</h2>\n\n<h3 id=\"31-新建一个pod私有库\">3.1 新建一个Pod私有库</h3>\n\n<p><a href=\"https://paysonchen.cn/2023/07/26/4-iOS%E7%BB%84%E4%BB%B6%E5%8C%96%E6%A8%A1%E6%9D%BF/\">此处省略一万字(查看另一篇文章)</a></p>\n\n<h3 id=\"32-迁移主工程资源\">3.2 迁移主工程资源</h3>\n\n<p>主工程：</p>\n\n<p>中的资源一般散落在各处，即遍是不一定全部存放在asset集合中，可以通过Xcode Project Navigator底部的搜索栏，通过后缀名(.png / .jpg /.webp /.mp3 /,mp4  ……)检索出资源</p>\n\n<p>资源组件库：</p>\n\n<p>asset文件夹下存放主工程迁移的资源。</p>\n\n<p>存放形式可以以下形式：</p>\n\n<ul>\n  <li>xcassets集合</li>\n  <li>散落的资源文件</li>\n</ul>\n\n<p>配置podspec：</p>\n\n<p>通过指定resource_bundles进行资源的配置</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n</pre></td><td class=\"rouge-code\"><pre>   <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">resource_bundles</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n     <span class=\"s1\">'PSCResource'</span> <span class=\"o\">=&gt;</span> <span class=\"p\">[</span>\n     <span class=\"s1\">'PSCResource/Assets/PSCCommon.xcassets'</span><span class=\"p\">,</span>\n     <span class=\"s1\">'PSCResource/Assets/PSCCommonResources/**/*'</span><span class=\"p\">,</span>\n     <span class=\"s1\">'PSCResource/Assets/XXProj.xcassets'</span><span class=\"p\">,</span>\n     <span class=\"s1\">'PSCResource/Assets/XXProjResources/**/*'</span><span class=\"p\">]</span>\n   <span class=\"p\">}</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h3 id=\"33-资源读取方式\">3.3 资源读取方式</h3>\n\n<p>资源组件化之前，使用一般是</p>\n\n<pre><code class=\"language-objective-c\">//图片:imageNamed\n[UIImage imageNamed:@\"pic\"];\n\n//资源:通过mainBundle进行：\n[[NSBundle mainBundle] pathForResource:@\"name\" ofType:@\"ext\"];\n</code></pre>\n\n<p>这是因为，主工程里的资源，一般是打包到xx.app的根目录（xcasset以asset.car存在）</p>\n\n<p>组件库里的资源是打包 xx.framework/xx.bundle</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n</pre></td><td class=\"rouge-code\"><pre>……/Debug-iphoneos/xxx.app/Frameworks/xx.framework/xx.bundle/pic.png\n……/Debug-iphoneos/xxx.app/Frameworks/xx.framework/xx.bundle/asset.car\n……\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>直接通过下列方法获取为空</p>\n\n<pre><code class=\"language-objective-c\">//组件库资源，通过以下方法获取为nil\n[UIImage imageNamed:@\"pic\"];\n[[NSBundle mainBundle] pathForResource:@\"name\" ofType:@\"ext\"];\n</code></pre>\n\n<p>组件库资源获取方法是为下列类添加类别</p>\n\n<ul>\n  <li>UIImage:</li>\n</ul>\n\n<pre><code class=\"language-objective-c\">@interface UIImage (PSCResource)\n\n/// 从 PSCResource 通过图片名称获取UIImage\n/// - Parameter name: 图片名称\n+ (UIImage *)pscImageNamed:(NSString *)name;\n\n@end\n\n@implementation UIImage (PSCResource)\n\n+ (UIImage *)pscImageNamed:(NSString *)name{\n    NSBundle *bundle = [NSBundle bundleForClass:NSClassFromString(kCurResPodName)];\n    NSURL *url = [bundle URLForResource:kCurResBunldeName withExtension:@\"bundle\"];\n    if (url) {\n        NSBundle *imageBundle = [NSBundle bundleWithURL:url];\n        UIImage *img = [UIImage imageNamed:name inBundle:imageBundle compatibleWithTraitCollection:nil];\n        if (img) {\n            return img;\n        }\n    }\n    //这里兜个底，兼容资源还在主工程的时候，使用mainBundle\n    return [UIImage imageNamed:name];\n}\n\n@end\n</code></pre>\n\n<ul>\n  <li>NSBunlde:</li>\n</ul>\n\n<pre><code class=\"language-objective-c\">@interface NSBundle (PSCResource)\n/// 私有库获取资源\n/// - Parameters:\n///   - name: 资源名\n///   - ext: 资源类别\n+ (NSString *)pscPathForResource:(NSString *)name ofType:(NSString *)ext;\n@end\n\n@implementation NSBundle (PSCResource)\n+ (NSString *)pscPathForResource:(NSString *)name ofType:(NSString *)ext {\n    \n    NSBundle *bundle = [NSBundle bundleForClass:NSClassFromString(kCurResPodName)];\n    NSURL *url = [bundle URLForResource:kCurResBunldeName withExtension:@\"bundle\"];\n    if (url) {\n        NSBundle *resBundle = [NSBundle bundleWithURL:url];\n        NSString *path = [resBundle pathForResource:name ofType:ext];\n        if (path) {\n            return path;\n        }\n    }\n    //这里兜个底，兼容资源还在主工程的时候，使用mainBundle\n    return [[NSBundle mainBundle] pathForResource:name ofType:ext];\n}\n@end\n</code></pre>\n\n<h3 id=\"34-主工程读取替换\">3.4 主工程读取替换</h3>\n\n<p>检索主工程里所有的方法：</p>\n\n<div class=\"language-objc highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n</pre></td><td class=\"rouge-code\"><pre><span class=\"p\">[</span><span class=\"n\">UIImage</span> <span class=\"nf\">imageNamed</span><span class=\"p\">:</span><span class=\"s\">@\"pic\"</span><span class=\"p\">];</span>\n<span class=\"p\">[[</span><span class=\"n\">NSBundle</span> <span class=\"nf\">mainBundle</span><span class=\"p\">]</span> <span class=\"nf\">pathForResource</span><span class=\"p\">:</span><span class=\"s\">@\"name\"</span> <span class=\"nf\">ofType</span><span class=\"p\">:</span><span class=\"s\">@\"ext\"</span><span class=\"p\">];</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>替换成:</p>\n\n<pre><code class=\"language-objective-c\">[UIImage pscImageNamed:@\"xx\"]\nNSString *hotPath = [NSBundle pscPathForResource:@\"yy\" ofType:@\"zz\"];\n</code></pre>\n\n<p>最后检验下上述调用是否正常？</p>\n\n\n                <hr style=\"visibility: hidden;\">\n                <ul class=\"pager\">\n                    \n                    <li class=\"previous\">\n                        <a href=\"/2023/07/26/4-iOS%E7%BB%84%E4%BB%B6%E5%8C%96%E6%A8%A1%E6%9D%BF/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"iOS组件化实践之：新建一个Pod组件库\">\n                        Previous<br>\n                        <span>iOS组件化实践之：新建一个Pod组件库</span>\n                        </a>\n                    </li>\n                    \n                    \n                    <li class=\"next\">\n                        <a href=\"/2023/07/31/6-iOS-%E7%BB%84%E4%BB%B6%E5%8C%96-%E5%91%BD%E5%90%8D%E6%B3%A8%E9%87%8A%E7%AF%87/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"iOS组件化实践之：类命名注释篇\">\n                        Next<br>\n                        <span>iOS组件化实践之：类命名注释篇</span>\n                        </a>\n                    </li>\n                    \n                </ul>\n                <hr style=\"visibility: hidden;\">\n\n                \n                <!-- disqus 评论框 start -->\n                <div class=\"comment\">\n                    <div id=\"disqus_thread\" class=\"disqus-thread\"></div>\n                </div>\n                <!-- disqus 评论框 end -->\n                \n\n                \n            </div>  \n\n    <!-- Side Catalog Container -->\n        \n            <div class=\"\n                col-lg-2 col-lg-offset-0\n                visible-lg-block\n                sidebar-container\n                catalog-container\">\n                <div class=\"side-catalog\">\n                    <hr class=\"hidden-sm hidden-xs\">\n                    <h5>\n                        <a class=\"catalog-toggle\" href=\"#\">CATALOG</a>\n                    </h5>\n                    <ul class=\"catalog-body\"></ul>\n                </div>\n            </div>\n        \n\n    <!-- Sidebar Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                sidebar-container\">\n\n                <!-- Featured Tags -->\n                \n\n\n<section>\n    \n        <hr class=\"hidden-sm hidden-xs\">\n    \n    <h5><a href=\"/archive/\">FEATURED TAGS</a></h5>\n    <div class=\"tags\">\n        \n        \n        \n        \n        \n    </div>\n</section>\n\n\n                <!-- Friends Blog -->\n                \n            </div>\n        </div>\n    </div>\n</article>\n\n<!-- add support for mathjax by voleking-->\n\n\n\n\n\n\n<!-- disqus 公共JS代码 start (一个网页只需插入一次) -->\n<script type=\"text/javascript\">\n    /* * * CONFIGURATION VARIABLES * * */\n    var disqus_shortname = \"Cyp\";\n    var disqus_identifier = \"/2023/07/26/5-iOS组件化-资源组件库\";\n    var disqus_url = \"http://localhost:4000/2023/07/26/5-iOS%E7%BB%84%E4%BB%B6%E5%8C%96-%E8%B5%84%E6%BA%90%E7%BB%84%E4%BB%B6%E5%BA%93/\";\n\n    (function() {\n        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;\n        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';\n        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);\n    })();\n</script>\n<!-- disqus 公共JS代码 end -->\n\n\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n      var d = document, t = 'script',\n          o = d.createElement(t),\n          s = d.getElementsByTagName(t)[0];\n      o.src = u;\n      if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n      s.parentNode.insertBefore(o, s);\n    }\n</script>\n<!-- anchor-js, Doc:http://bryanbraun.github.io/anchorjs/ -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/anchor-js/1.1.1/anchor.min.js\",function(){\n        anchors.options = {\n          visible: 'hover',\n          placement: 'right',\n          // icon: '#'\n        };\n        anchors.add().remove('.intro-header h1').remove('.subheading').remove('.sidebar-container h5');\n    })\n</script>\n<style>\n    /* place left on bigger screen */\n    @media all and (min-width: 800px) {\n        .anchorjs-link{\n            position: absolute;\n            left: -0.75em;\n            font-size: 1.1em;\n            margin-top : -0.1em;\n        }\n    }\n</style>\n\n\n\n    <!-- Footer -->\n<footer>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <!-- SNS Link -->\n                \n\n\n<ul class=\"list-inline text-center\">\n\n\n  \n  \n  \n  \n  \n  \n  \n</ul>\n\n                <p class=\"copyright text-muted\">\n                    Copyright &copy; PaysonChen Blog 2024\n                    <br>\n                    <!-- Powered by <a href=\"http://huangxuan.me\">Hux Blog</a> | -->\n                 <!--    <iframe style=\"margin-left: 2px; margin-bottom:-5px;\" frameborder=\"0\" scrolling=\"0\" width=\"100px\"\n                        height=\"20px\"\n                        src=\"https://ghbtns.com/github-btn.html?user=huxpro&repo=huxpro.github.io&type=star&count=true\">\n                    </iframe> -->\n                </p>\n            </div>\n        </div>\n    </div>\n</footer>\n\n<!-- jQuery -->\n<script src=\"/js/jquery.min.js \"></script>\n\n<!-- Bootstrap Core JavaScript -->\n<!-- Currently, only navbar scroll-down effect at desktop still depends on this -->\n<script src=\"/js/bootstrap.min.js \"></script>\n\n<!-- Custom Theme JavaScript -->\n<script src=\"/js/hux-blog.min.js \"></script>\n\n<!-- Simple Jekyll Search -->\n<script src=\"/js/simple-jekyll-search.min.js\"></script>\n\n<!-- Service Worker -->\n\n<script src=\"/js/snackbar.js \"></script>\n<script src=\"/js/sw-registration.js \"></script>\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n        var d = document, t = 'script',\n            o = d.createElement(t),\n            s = d.getElementsByTagName(t)[0];\n        o.src = u;\n        if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n        s.parentNode.insertBefore(o, s);\n    }\n</script>\n\n<!--\n     Because of the native support for backtick-style fenced code blocks\n     right within the Markdown is landed in Github Pages,\n     From V1.6, There is no need for Highlight.js,\n     so Huxblog drops it officially.\n\n     - https://github.com/blog/2100-github-pages-now-faster-and-simpler-with-jekyll-3-0\n     - https://help.github.com/articles/creating-and-highlighting-code-blocks/\n     - https://github.com/jneen/rouge/wiki/list-of-supported-languages-and-lexers\n-->\n<!--\n    <script>\n        async(\"http://cdn.bootcss.com/highlight.js/8.6/highlight.min.js\", function(){\n            hljs.initHighlightingOnLoad();\n        })\n    </script>\n    <link href=\"http://cdn.bootcss.com/highlight.js/8.6/styles/github.min.css\" rel=\"stylesheet\">\n-->\n\n\n\n\n\n\n\n<!--fastClick.js -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/fastclick/1.0.6/fastclick.min.js\", function () {\n        var $nav = document.querySelector(\"nav\");\n        if ($nav) FastClick.attach($nav);\n    })\n</script>\n\n\n<!-- Google Analytics -->\n\n\n\n<!-- Baidu Tongji -->\n\n\n\n<!-- Side Catalog -->\n\n<script type=\"text/javascript\">\n    function generateCatalog(selector) {\n\n        // interop with multilangual \n        if ('' == 'true') {\n            _containerSelector = 'div.post-container.active'\n        } else {\n            _containerSelector = 'div.post-container'\n        }\n\n        // init\n        var P = $(_containerSelector), a, n, t, l, i, c;\n        a = P.find('h1,h2,h3,h4,h5,h6');\n\n        // clean\n        $(selector).html('')\n\n        // appending\n        a.each(function () {\n            n = $(this).prop('tagName').toLowerCase();\n            i = \"#\" + $(this).prop('id');\n            t = $(this).text();\n            c = $('<a href=\"' + i + '\" rel=\"nofollow\">' + t + '</a>');\n            l = $('<li class=\"' + n + '_nav\"></li>').append(c);\n            $(selector).append(l);\n        });\n        return true;\n    }\n\n    generateCatalog(\".catalog-body\");\n\n    // toggle side catalog\n    $(\".catalog-toggle\").click((function (e) {\n        e.preventDefault();\n        $('.side-catalog').toggleClass(\"fold\")\n    }))\n\n    /*\n     * Doc: https://github.com/davist11/jQuery-One-Page-Nav\n     * Fork by Hux to support padding\n     */\n    async(\"/js/jquery.nav.js\", function () {\n        $('.catalog-body').onePageNav({\n            currentClass: \"active\",\n            changeHash: !1,\n            easing: \"swing\",\n            filter: \"\",\n            scrollSpeed: 700,\n            scrollOffset: 0,\n            scrollThreshold: .2,\n            begin: null,\n            end: null,\n            scrollChange: null,\n            padding: 80\n        });\n    });\n</script>\n\n\n\n<!-- Multi-Lingual -->\n\n\n<!-- Simple Jekyll Search -->\n<script>\n    // https://stackoverflow.com/questions/1912501/unescape-html-entities-in-javascript\n    function htmlDecode(input) {\n        var e = document.createElement('textarea');\n        e.innerHTML = input;\n        // handle case of empty input\n        return e.childNodes.length === 0 ? \"\" : e.childNodes[0].nodeValue;\n    }\n\n    SimpleJekyllSearch({\n        searchInput: document.getElementById('search-input'),\n        resultsContainer: document.getElementById('search-results'),\n        json: '/search.json',\n        searchResultTemplate: '<div class=\"post-preview item\"><a href=\"{url}\"><h2 class=\"post-title\">{title}</h2><h3 class=\"post-subtitle\">{subtitle}</h3><hr></a></div>',\n        noResultsText: 'No results',\n        limit: 50,\n        fuzzy: false,\n        // a hack to get escaped subtitle unescaped. for some reason, \n        // post.subtitle w/o escape filter nuke entire search.\n        templateMiddleware: function (prop, value, template) {\n            if (prop === 'subtitle' || prop === 'title') {\n                if (value.indexOf(\"code\")) {\n                    return htmlDecode(value);\n                } else {\n                    return value;\n                }\n            }\n        }\n    });\n\n    $(document).ready(function () {\n        var $searchPage = $('.search-page');\n        var $searchOpen = $('.search-icon');\n        var $searchClose = $('.search-icon-close');\n        var $searchInput = $('#search-input');\n        var $body = $('body');\n\n        $searchOpen.on('click', function (e) {\n            e.preventDefault();\n            $searchPage.toggleClass('search-active');\n            var prevClasses = $body.attr('class') || '';\n            setTimeout(function () {\n                $body.addClass('no-scroll');\n            }, 400)\n\n            if ($searchPage.hasClass('search-active')) {\n                $searchClose.on('click', function (e) {\n                    e.preventDefault();\n                    $searchPage.removeClass('search-active');\n                    $body.attr('class', prevClasses);  // from closure \n                });\n                $searchInput.focus();\n            }\n        });\n    });\n</script>\n\n\n<!-- Image to hack wechat -->\n<img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\" />\n<!-- Migrate from head to bottom, no longer block render and still work -->\n\n</body>\n\n</html>\n","excerpt":"<h1 id=\"ios组件化实现之资源组件库\">iOS组件化实现之：资源组件库</h1>\n","url":"/2023/07/26/5-iOS%E7%BB%84%E4%BB%B6%E5%8C%96-%E8%B5%84%E6%BA%90%E7%BB%84%E4%BB%B6%E5%BA%93/","next":{"id":"/2023/07/31/6-iOS-组件化-命名注释篇","tags":[],"relative_path":"_posts/2023-07-31-6-iOS-组件化-命名注释篇.md","collection":"posts","name":"2023-07-31-6-iOS-组件化-命名注释篇.md","url":"/2023/07/31/6-iOS-%E7%BB%84%E4%BB%B6%E5%8C%96-%E5%91%BD%E5%90%8D%E6%B3%A8%E9%87%8A%E7%AF%87/","title":"iOS组件化实践之：类命名注释篇","date":"2023-07-31 00:00:00 +0800","categories":[],"path":"_posts/2023-07-31-6-iOS-组件化-命名注释篇.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/home-bg-geek.jpg","slug":"6-iOS-组件化-命名注释篇","ext":".md"},"title":"iOS组件化实践之：资源组件库","date":"2023-07-26 00:00:00 +0800","categories":[],"path":"_posts/2023-07-26-5-iOS组件化-资源组件库.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/home-bg-geek.jpg","slug":"5-iOS组件化-资源组件库","ext":".md"},"output":"<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"google-site-verification\" content=\"xBT4GhYoi5qRD5tr338pgPM5OWHHIDR6mNg1a3euekI\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, viewport-fit=cover\">\n    <meta name=\"description\" content=\"与你一起发现更大的世界。\">\n    <meta name=\"keywords\"  content=\"PaysonChen,iOS,流媒体\">\n    <meta name=\"theme-color\" content=\"#000000\">\n    \n    <!-- Open Graph -->\n    <meta property=\"og:title\" content=\"iOS组件化实践之：类命名注释篇 - PaysonChen的博客 | PaysonChen Blog\">\n    \n    <meta property=\"og:type\" content=\"article\">\n    <meta property=\"og:description\" content=\"iOS组件化实践之：类命名注释篇\n\">\n    \n    \n    <meta property=\"article:published_time\" content=\"2023-07-31T00:00:00Z\">\n    \n    \n    <meta property=\"article:author\" content=\"PaysonChen\">\n    \n    \n    \n    <meta property=\"og:image\" content=\"http://localhost:4000\">\n    <meta property=\"og:url\" content=\"http://localhost:4000/2023/07/31/6-iOS-%E7%BB%84%E4%BB%B6%E5%8C%96-%E5%91%BD%E5%90%8D%E6%B3%A8%E9%87%8A%E7%AF%87/\">\n    <meta property=\"og:site_name\" content=\"PaysonChen的博客 | PaysonChen Blog\">\n    \n    <title>iOS组件化实践之：类命名注释篇 - PaysonChen的博客 | PaysonChen Blog</title>\n\n    <!-- Web App Manifest -->\n    <link rel=\"manifest\" href=\"/pwa/manifest.json\">\n\n    <!-- Favicon -->\n    <link rel=\"shortcut icon\" href=\"/img/favicon.ico\">\n    \n    <!-- Canonical URL -->\n    <link rel=\"canonical\" href=\"http://localhost:4000/2023/07/31/6-iOS-%E7%BB%84%E4%BB%B6%E5%8C%96-%E5%91%BD%E5%90%8D%E6%B3%A8%E9%87%8A%E7%AF%87/\">\n\n    <!-- Bootstrap Core CSS -->\n    <link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\">\n\n    <!-- Custom CSS -->\n    <link rel=\"stylesheet\" href=\"/css/hux-blog.min.css\">\n\n    <!-- Custom Fonts -->\n    <!-- <link href=\"http://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\"> -->\n    <!-- Hux change font-awesome CDN to qiniu -->\n    <link href=\"//cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\">\n\n\n    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->\n    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->\n    <!--[if lt IE 9]>\n        <script src=\"https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js\"></script>\n        <script src=\"https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js\"></script>\n    <![endif]-->\n\n    <!-- ga & ba script hoook -->\n    <script></script>\n</head>\n\n\n<!-- hack iOS CSS :active style -->\n<body ontouchstart=\"\">\n\n    <!-- Navigation -->\n\n    <nav class=\"navbar navbar-default navbar-custom navbar-fixed-top\">\n        \n        <div class=\"container-fluid\">\n            <!-- Brand and toggle get grouped for better mobile display -->\n            <div class=\"navbar-header page-scroll\">\n                <button type=\"button\" class=\"navbar-toggle\">\n                    <span class=\"sr-only\">Toggle navigation</span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                </button>\n                <a class=\"navbar-brand\" href=\"/\">PaysonChen Blog</a>\n            </div>\n\n            <!-- Collect the nav links, forms, and other content for toggling -->\n            <div id=\"huxblog_navbar\">\n                <div class=\"navbar-collapse\">\n                    <ul class=\"nav navbar-nav navbar-right\">\n                        <li>\n                            <a href=\"/\">Home</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        <li>\n                            <a href=\"/about/\">About</a>\n                        </li>\n                        \n                        \n                        \n                        <li>\n                            <a href=\"/archive/\">Archive</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        <li class=\"search-icon\">\n                            <a href=\"javascript:void(0)\">\n                                <i class=\"fa fa-search\"></i>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n            <!-- /.navbar-collapse -->\n        </div>\n        <!-- /.container -->\n    </nav>\n\n    <script>\n        // Drop Bootstarp low-performance Navbar\n        // Use customize navbar with high-quality material design animation\n        // in high-perf jank-free CSS3 implementation\n        var $body = document.body;\n        var $toggle = document.querySelector('.navbar-toggle');\n        var $navbar = document.querySelector('#huxblog_navbar');\n        var $collapse = document.querySelector('.navbar-collapse');\n\n        var __HuxNav__ = {\n            close: function () {\n                $navbar.className = \" \";\n                // wait until animation end.\n                setTimeout(function () {\n                    // prevent frequently toggle\n                    if ($navbar.className.indexOf('in') < 0) {\n                        $collapse.style.height = \"0px\"\n                    }\n                }, 400)\n            },\n            open: function () {\n                $collapse.style.height = \"auto\"\n                $navbar.className += \" in\";\n            }\n        }\n\n        // Bind Event\n        $toggle.addEventListener('click', function (e) {\n            if ($navbar.className.indexOf('in') > 0) {\n                __HuxNav__.close()\n            } else {\n                __HuxNav__.open()\n            }\n        })\n\n        /**\n         * Since Fastclick is used to delegate 'touchstart' globally\n         * to hack 300ms delay in iOS by performing a fake 'click',\n         * Using 'e.stopPropagation' to stop 'touchstart' event from \n         * $toggle/$collapse will break global delegation.\n         * \n         * Instead, we use a 'e.target' filter to prevent handler\n         * added to document close HuxNav.  \n         *\n         * Also, we use 'click' instead of 'touchstart' as compromise\n         */\n        document.addEventListener('click', function (e) {\n            if (e.target == $toggle) return;\n            if (e.target.className == 'icon-bar') return;\n            __HuxNav__.close();\n        })\n    </script>\n    <!-- Search -->\n<div class=\"search-page\">\n  <div class=\"search-icon-close-container\">\n    <span class=\"search-icon-close\">\n      <i class=\"fa fa-chevron-down\"></i>\n    </span>\n  </div>\n  <div class=\"search-main container\">\n    <div class=\"row\">\n      <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n        <form></form>\n        <input type=\"text\" id=\"search-input\" placeholder=\"$ grep...\">\n        </form>\n        <div id=\"search-results\" class=\"mini-post-list\"></div>\n      </div>\n    </div>\n  </div>\n</div>\n\n    <!-- Image to hack wechat -->\n<!-- <img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\"> -->\n<!-- <img src=\"/img/home-bg-geek.jpg\" width=\"0\" height=\"0\"> -->\n\n<!-- Post Header -->\n\n\n\n<style type=\"text/css\">\n    header.intro-header{\n        position: relative;\n        background-image: url('/img/home-bg-geek.jpg');\n        background: ;\n    }\n\n    \n</style>\n\n<header class=\"intro-header\" >\n\n    <div class=\"header-mask\"></div>\n    \n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <div class=\"post-heading\">\n                    <div class=\"tags\">\n                        \n                    </div>\n                    <h1>iOS组件化实践之：类命名注释篇</h1>\n                    \n                    <h2 class=\"subheading\"></h2>\n                    <span class=\"meta\">Posted by PaysonChen on July 31, 2023</span>\n                </div>\n            </div>\n        </div>\n    </div>\n</header>\n\n\n\n\n\n\n<!-- Post Content -->\n<article>\n    <div class=\"container\">\n        <div class=\"row\">\n\n    <!-- Post Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                post-container\">\n\n                <!-- Multi-Lingual -->\n                \n\n\t\t\t\t<h1 id=\"ios组件化实践之类命名注释篇\">iOS组件化实践之：类命名注释篇</h1>\n\n<h2 id=\"1问题描述\">1.问题描述</h2>\n\n<p>CocoaPods组件创建时，提供的一个很好的管理命名规范的思路：以统一的命名前缀，一般以项目/组织等缩写作为前缀</p>\n\n<p>组件化规整之后，可能存在的情况是前后的文件命名不一致导致的影响代码易读性、易维护等问题</p>\n\n<p>除此之外，由于代码经由不同人迭代的，甚至不同组织迭代（从外包接手的项目）还存在一些文件注释的注释模板差异的情况</p>\n\n<h2 id=\"2-类命名统一\">2. 类命名统一</h2>\n\n<h3 id=\"21-类重命名之前\">2.1 类重命名之前</h3>\n\n<p>需要确认下，当前类或者与之相关的一些类，是否存在于<a href=\"https://cocoapods.org/\">CocoaPods</a>公有源上，如果存在，可以直接通过Pod引入（组件内通过dependency），</p>\n\n<p>举个例子：如果你需要进行重命名的类是这样的：SDWebImage、SDWebImageXXX、SDXXX，显然，这是将SDWebImage通过代码直接集成，由于SDWebImage类数量比较多，且属于成熟框架，在确认没有私自改动逻辑的情况下，可以考虑直接移除，采用通过Pod引入（组件内通过dependency）</p>\n\n<p>当然，如果存在没有被用到的类，也正好是一个移除他们的好时机！</p>\n\n<p><strong>‼️特别注意：改名之前，需要确认，要改的类名是否已经存在工程中，如果存在且继续修改，会造成很多错误替换，造成很复杂的编译问题，且难以回退。</strong></p>\n\n<p>例如：ABCWebView，要改成PSCWebView，此时如果工程中已经存在PSCWebView，则ABCWebView继续再改成PSCWebView，会造成所有ABCWebView与PSCWebView的混乱，除非单次修改（之前的操作已经提交），否则回退也变得异常困难。</p>\n\n<h3 id=\"22-常规类重命名\">2.2 常规类重命名</h3>\n\n<p>可以通过IDE：Xcode自带的rename功能进行类名重命名：</p>\n\n<p><img src=\"/img/name/1.png\" alt=\"\" /></p>\n\n<p>替换成带期望前缀的类名</p>\n\n<p><img src=\"/img/name/2.png\" alt=\"WX20230731-191648\" /></p>\n\n<p>可能存在替换不完全的可能，需要检索下旧类名，全局替换下，确保编译通过方可</p>\n\n<h3 id=\"23-categories重命名\">2.3 categories重命名</h3>\n\n<p>categories的重命名无法根据上述方式，只能通过常规的修改文件名，以及全局替换的方式。</p>\n\n<p>值得一提的是，若一个基础类存在多个单一功能的categories，例如存在UIButton+Category1，UIButton+Category2……，他们有可能存在重复的功能可以考虑保留其中一个即可，也可以考虑将他们重构，合并，或者是重新划分下功能归属，</p>\n\n<h2 id=\"3类注释模板统一\">3.类注释模板统一：</h2>\n\n<p>治理这些情况，可能就需要分两步：</p>\n\n<h3 id=\"31-第一步存量类注释规范治理\">3.1 第一步：存量类注释规范治理</h3>\n\n<p>存量治理，这边采用脚本批量执行，具体思路如下：</p>\n\n<ul>\n  <li>遍历指定目录（若未传参数则为当前目录）下的子目录</li>\n  <li>匹配所有iOS工程类文件：.h .m .swift</li>\n  <li>对其注释头进行模板替换\n    <ul>\n      <li>匹配获取当前类的author，匹配不到则使用默认值（需定义）</li>\n      <li>匹配获取当前类的time，匹配不到则使用默认值（需定义）</li>\n      <li>替换版权信息（需定义）</li>\n    </ul>\n  </li>\n</ul>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#!/bin/bash</span>\n\n<span class=\"c\"># 遍历更新当前目录下(含子目录）所有iOS工程类文件：.h .m .swift 并对其注释头进行模板替换</span>\n<span class=\"c\"># author: Chenyp34</span>\n<span class=\"c\"># [目的]</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># 组件化规整之后，可能存在的情况是前后的文件命名不一致导致的影响代码易读性、易维护等问题</span>\n<span class=\"c\"># 除此之外，由于代码经由不同人迭代的，甚至不同组织迭代（从外包接手的项目）还存在一些文件注释的注释模板差异的情况</span>\n<span class=\"c\"># 此脚本目的为了解决存量类文件头注释统一性问题</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [目录]</span>\n<span class=\"c\">#   - replace_class_header_anotation.sh 遍历更新当前目录下，子目录git仓库的脚本</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [说明]</span>\n<span class=\"c\"># 1、遍历指定目录（若未传参数则为当前目录）下的子目录</span>\n<span class=\"c\"># 2、匹配所有iOS工程类文件：.h .m .swift</span>\n<span class=\"c\"># 3、对其注释头进行模板替换</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [参数]</span>\n<span class=\"c\"># 1、参数1，指定目录</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [调用说明]</span>\n<span class=\"c\"># 1、未指定目录，则取当前目录：sh replace_class_header_anotation.sh</span>\n<span class=\"c\"># 2、指定目录：sh replace_class_header_anotation.sh /User/xxx/xx</span>\n<span class=\"c\"># 本脚本适用于将：下述注释替换成 统一注释模板：</span>\n<span class=\"c\">#   其一：</span>\n<span class=\"c\">#//</span>\n<span class=\"c\">#//  FileName.h</span>\n<span class=\"c\">#//  ProjectName</span>\n<span class=\"c\">#//</span>\n<span class=\"c\">#//  Created by Author on Date.</span>\n<span class=\"c\">#// (没版权信息)</span>\n<span class=\"c\">#//</span>\n<span class=\"c\">#</span>\n<span class=\"c\">#   其二：</span>\n<span class=\"c\">#   /****************************************************************************************************</span>\n<span class=\"c\">#   * 版权所有： Copyright (c) 2012-2021 xxxx. All rights reserved.</span>\n<span class=\"c\">#   * 作 者： Author （2021/3/12）</span>\n<span class=\"c\">#   * 界面描述：  界面描述</span>\n<span class=\"c\">#   ****************************************************************************************************/</span>\n<span class=\"c\">#</span>\n<span class=\"c\">#   其三：</span>\n<span class=\"c\">#   没有任何注释的</span>\n<span class=\"c\">#</span>\n<span class=\"c\">#</span>\n<span class=\"c\">#   替换成统一注释模板：</span>\n<span class=\"c\">#</span>\n<span class=\"c\">#//</span>\n<span class=\"c\">#//  \"$filename\"</span>\n<span class=\"c\">#//  \"$project_name\"</span>\n<span class=\"c\">#//</span>\n<span class=\"c\">#//  Created by \"$auth\" on \"$date\".</span>\n<span class=\"c\">#//  \"$copyright_str\"</span>\n<span class=\"c\">#//</span>\n<span class=\"c\">#</span>\n<span class=\"c\">#定义版权信息</span>\n<span class=\"nb\">export </span><span class=\"nv\">copyright_str</span><span class=\"o\">=</span><span class=\"s2\">\"Copyright (C) 2023 Your Company Name Technology Limited. All rights reserved.\"</span>\n\n<span class=\"c\">#定义默认用户信息：PaysonChen</span>\n<span class=\"nb\">export </span><span class=\"nv\">def_author_str</span><span class=\"o\">=</span><span class=\"s2\">\"PaysonChen\"</span>\n\n<span class=\"c\">#定义默认日期：当前日期</span>\n<span class=\"nb\">export </span><span class=\"nv\">def_time_str</span><span class=\"o\">=</span><span class=\"sb\">`</span><span class=\"nb\">date</span> +%Y/%m/%d<span class=\"sb\">`</span>\n\n<span class=\"k\">function </span>get_creator_name_with_template_2<span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"nv\">file</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n    <span class=\"nv\">creator_name</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">sed</span> <span class=\"nt\">-n</span> <span class=\"s1\">'s/.*作    者： \\(.*\\).*/\\1/p'</span> <span class=\"nv\">$file</span><span class=\"si\">)</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"creator_name=\"</span><span class=\"nv\">$creator_name</span><span class=\"s2\">\" in file=\"</span><span class=\"nv\">$file</span>\n    \n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$creator_name</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">echo</span> <span class=\"s1\">'///获取创建者 第二种模板获取 为空 使用默认值'</span>\n        <span class=\"nv\">creator_name</span><span class=\"o\">=</span><span class=\"nv\">$def_author_str</span>\n    <span class=\"k\">fi</span>\n<span class=\"o\">}</span>\n\n<span class=\"k\">function </span>get_creator_name<span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"nv\">file</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n    <span class=\"nv\">creator_name</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">sed</span> <span class=\"nt\">-n</span> <span class=\"s1\">'s/.*Created by \\(.*\\) on.*/\\1/p'</span> <span class=\"nv\">$file</span><span class=\"si\">)</span>\n    \n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$creator_name</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span>get_creator_name_with_template_2 <span class=\"nv\">$file</span>\n    <span class=\"k\">fi\n    \n    </span><span class=\"nb\">echo</span> <span class=\"s2\">\"--------creator_name=【\"</span><span class=\"nv\">$creator_name</span><span class=\"s2\">\"】 in file=\"</span><span class=\"nv\">$file</span>\n<span class=\"o\">}</span>\n\n\n\n<span class=\"k\">function </span>get_creator_time_with_template_2<span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"nv\">file</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n    <span class=\"nv\">creator_time</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">sed</span> <span class=\"nt\">-n</span> <span class=\"s1\">'s/.*创建日期： \\(.*\\).*/\\1/p'</span> <span class=\"nv\">$file</span><span class=\"si\">)</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"-------创建日期=【\"</span><span class=\"nv\">$creator_time</span><span class=\"s2\">\"】 in file=\"</span><span class=\"nv\">$file</span>\n\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$creator_time</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then</span>\n<span class=\"c\">#        echo '///获取创建时间 第二种模板获取 为空 使用默认值'</span>\n        <span class=\"nv\">creator_time</span><span class=\"o\">=</span><span class=\"nv\">$def_time_str</span>\n    <span class=\"k\">fi</span>\n<span class=\"o\">}</span>\n\n\n<span class=\"k\">function </span>format_creator_time<span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"nv\">creator_time</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n    \n    <span class=\"nv\">length</span><span class=\"o\">=</span><span class=\"k\">${#</span><span class=\"nv\">creator_time</span><span class=\"k\">}</span>\n\n    <span class=\"c\"># 截取除最后一个字符外的部分</span>\n    <span class=\"nv\">creator_time</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">creator_time</span>:0:length-1<span class=\"k\">}</span>\n    <span class=\"c\">#echo \"截去掉最后一个字符后的字符串: $creator_time\"</span>\n<span class=\"o\">}</span>\n\n\n<span class=\"k\">function </span>get_creator_time<span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"nv\">file</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n    \n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$2</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nv\">line</span><span class=\"o\">=</span>5\n    <span class=\"k\">else\n        </span><span class=\"nv\">line</span><span class=\"o\">=</span><span class=\"nv\">$2</span>\n    <span class=\"k\">fi</span>\n    <span class=\"c\">#creator_time=$(sed -n '5s/.*\\(.\\{10\\}\\)$/\\1/p' $file)</span>\n    <span class=\"nv\">creator_time</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">awk</span> <span class=\"s1\">'NR=='</span><span class=\"nv\">$line</span><span class=\"s1\">' {print $NF}'</span> <span class=\"nv\">$file</span><span class=\"si\">)</span>\n\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"-------creator_time=【\"</span><span class=\"nv\">$creator_time</span><span class=\"s2\">\"】 line = \"</span><span class=\"nv\">$line</span><span class=\"s2\">\" in file=\"</span><span class=\"nv\">$file</span>\n<span class=\"c\">#    date_regex='^(19|20)[0-9]{2}/(0?[1-9]|1[0-2])/(0?[1-9]|[1-2][0-9]|3[0-1]).$'</span>\n    <span class=\"c\">#date_regex='^(19[0-9]{2}|20[0-9]{2}|[0-9]{2})/(0?[1-9]|1[0-2])/(0?[1-9]|[1-2][0-9]|3[0-1]).$'</span>\n    <span class=\"nv\">date_regex</span><span class=\"o\">=</span><span class=\"s1\">'^(19[0-9]{2}|20[0-9]{2}|[0-9]{2})([-/])(0?[1-9]|1[0-2])([-/])(0?[1-9]|[1-2][0-9]|3[0-1]).$'</span>\n\n    <span class=\"c\"># 进行正则匹配</span>\n    <span class=\"k\">if</span> <span class=\"o\">[[</span> <span class=\"nv\">$creator_time</span> <span class=\"o\">=</span>~ <span class=\"nv\">$date_regex</span> <span class=\"o\">]]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">echo</span> <span class=\"s2\">\"日期格式正确，截断最后一个小数 .\"</span>\n        format_creator_time <span class=\"nv\">$creator_time</span>\n    <span class=\"k\">else\n        if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$2</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n            </span><span class=\"nv\">discount</span><span class=\"o\">=</span>1\n            <span class=\"nv\">new_line</span><span class=\"o\">=</span><span class=\"k\">$((</span>line-discount<span class=\"k\">))</span>\n            <span class=\"nb\">echo</span> <span class=\"s2\">\"常规调用如果匹配不到的花，那么多一次，向上查找\"</span><span class=\"nv\">$discount</span><span class=\"s2\">\"行，进行递归:\"</span><span class=\"nv\">$new_line</span>\n            get_creator_time <span class=\"nv\">$file</span> <span class=\"nv\">$new_line</span>\n        <span class=\"k\">else\n            </span><span class=\"nb\">echo</span> <span class=\"s2\">\"日期格式错误，执行第二种匹配\"</span>\n            get_creator_time_with_template_2 <span class=\"nv\">$file</span>\n        <span class=\"k\">fi\n    fi\n    </span><span class=\"nb\">echo</span> <span class=\"s2\">\"********creator_time=【\"</span><span class=\"nv\">$creator_time</span><span class=\"s2\">\"】 in file=\"</span><span class=\"nv\">$file</span>\n<span class=\"o\">}</span>\n\n\n\n<span class=\"k\">function </span>replace_header_anoation<span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"nv\">file</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n    \n    <span class=\"c\">#定义要替换的字符串</span>\n    <span class=\"c\">#文件名</span>\n    <span class=\"nv\">filename</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">echo</span> <span class=\"s2\">\"</span><span class=\"nv\">$file</span><span class=\"s2\">\"</span> | <span class=\"nb\">sed</span> <span class=\"s1\">'s#.*/##'</span><span class=\"si\">)</span>\n    <span class=\"c\">#项目名</span>\n    <span class=\"nv\">project_name</span><span class=\"o\">=</span><span class=\"s2\">\"PSCProject\"</span>\n    \n    <span class=\"c\">#还有从当前类中获取作者信息，获取不到取默认值</span>\n    <span class=\"nv\">auth</span><span class=\"o\">=</span><span class=\"nv\">$creator_name</span>\n    \n    <span class=\"c\">#还有从当前类中获取作者信息，获取不到取默认值</span>\n    <span class=\"nb\">date</span><span class=\"o\">=</span><span class=\"nv\">$creator_time</span>\n\n    <span class=\"c\">#以下是替换的模板</span>\n    <span class=\"nv\">new_content</span><span class=\"o\">=</span><span class=\"s2\">\"//\n//  \"</span><span class=\"nv\">$filename</span><span class=\"s2\">\"\n//  \"</span><span class=\"nv\">$project_name</span><span class=\"s2\">\"\n//\n//  Created by \"</span><span class=\"nv\">$auth</span><span class=\"s2\">\" on \"</span><span class=\"nv\">$date</span><span class=\"s2\">\".\n//  \"</span><span class=\"nv\">$copyright_str</span><span class=\"s2\">\"\n//\"</span>\n\n    <span class=\"nv\">new_content_escaped</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">echo</span> <span class=\"s2\">\"</span><span class=\"nv\">$new_content</span><span class=\"s2\">\"</span> | <span class=\"nb\">sed</span> <span class=\"s1\">'s/$/\\\\/'</span><span class=\"si\">)</span> <span class=\"c\"># 转义换行符</span>\n    <span class=\"nb\">sed</span> <span class=\"nt\">-i</span> <span class=\"s1\">''</span> <span class=\"nt\">-e</span> <span class=\"s2\">\"1,7c</span><span class=\"se\">\\\\</span><span class=\"s2\">\n</span><span class=\"nv\">$new_content_escaped</span><span class=\"s2\">\"</span> <span class=\"s2\">\"</span><span class=\"nv\">$file</span><span class=\"s2\">\"</span>\n\n    <span class=\"c\">#还有几个问题待优化</span>\n    <span class=\"c\">#1、如果开头没有注释，则会直接覆盖，或者注释不足7行的</span>\n    <span class=\"c\">#2、日期正则如果不是以 YYYY/MM/DD or YY/MM/DD 其中/和-都适用</span>\n        <span class=\"c\">#2.1但是兼容2023/8/1这样的个位数日期)，</span>\n        <span class=\"c\">#2.2如果日期是8/1/23 这样会导致识别错误 会被替换成今天的日期</span>\n\n<span class=\"o\">}</span>\n\n<span class=\"c\"># 统一类头注释</span>\n<span class=\"k\">function </span>unify_header_anoation<span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"nv\">file</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n\n    <span class=\"c\">#还有从当前类中获取作者信息，获取不到取默认值</span>\n    get_creator_name <span class=\"nv\">$file</span>\n    \n    <span class=\"c\">#还有从当前类中获取作者信息，获取不到取默认值</span>\n    get_creator_time <span class=\"nv\">$file</span>\n    \n    <span class=\"c\">#不传第二个参数 则执行替换，传就不执行</span>\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$2</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span>replace_header_anoation <span class=\"nv\">$file</span>\n    <span class=\"k\">fi</span>\n<span class=\"o\">}</span>\n\n\n<span class=\"k\">function </span>main<span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"nv\">file_path</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$file_path</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">echo</span> <span class=\"s1\">'///未指定路径,file_path为. 当前路径'</span>\n        <span class=\"nv\">file_path</span><span class=\"o\">=</span><span class=\"nb\">.</span>\n    <span class=\"k\">fi</span>\n\n\n    <span class=\"c\">#遍历当前路径下所有oc类</span>\n    find <span class=\"nv\">$file_path</span> <span class=\"nt\">-type</span> f <span class=\"nt\">-name</span> <span class=\"s2\">\"*.swift\"</span> <span class=\"nt\">-o</span> <span class=\"nt\">-name</span> <span class=\"s2\">\"*.h\"</span> <span class=\"nt\">-o</span> <span class=\"nt\">-name</span> <span class=\"s2\">\"*.m\"</span> | <span class=\"k\">while </span><span class=\"nb\">read </span>file<span class=\"p\">;</span> <span class=\"k\">do\n        </span>unify_header_anoation <span class=\"nv\">$file</span> <span class=\"nv\">$2</span>\n    <span class=\"k\">done</span>\n<span class=\"o\">}</span>\n\n\nmain <span class=\"nv\">$1</span> <span class=\"nv\">$2</span>\n\n\n\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h3 id=\"32-第二步新增类注释模板制定\">3.2 第二步：新增类注释模板制定</h3>\n\n<p>增量治理，可以通过工程内部的内置的模板进行限定，具体操作为：</p>\n\n<h4 id=\"321-全局指定\">3.2.1 全局指定</h4>\n\n<p>全局指定在下列路径中新增文件名为：IDETemplateMacros.plist</p>\n\n<p>其中内容为</p>\n\n<div class=\"language-xml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n</pre></td><td class=\"rouge-code\"><pre><span class=\"cp\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</span>\n<span class=\"cp\">&lt;!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\"&gt;</span>\n<span class=\"nt\">&lt;plist</span> <span class=\"na\">version=</span><span class=\"s\">\"1.0\"</span><span class=\"nt\">&gt;</span>\n<span class=\"nt\">&lt;dict&gt;</span>\n    <span class=\"nt\">&lt;key&gt;</span>FILEHEADER<span class=\"nt\">&lt;/key&gt;</span>\n    <span class=\"nt\">&lt;string&gt;</span>\n//  \n//  ___FILENAME___ \n//  ___PACKAGENAME___\n//\n//  Created by ___FULLUSERNAME___ on ___DATE___\n//  ___COPYRIGHT___\n//\n    <span class=\"nt\">&lt;/string&gt;</span>\n<span class=\"nt\">&lt;/dict&gt;</span>\n<span class=\"nt\">&lt;/plist&gt;</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>路径（按优先级从低到高排序：如果更高一级优先级目录下出现了IDETemplateMacros，会覆盖比他低优先级的目录下的IDETemplateMacros内容）</p>\n\n<p>xcWorkspace：</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>XXX.xcworkspace/xcshareddata/IDETemplateMacros.plist \n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>xcodeproj（相比xcworkspace，具有更高优先级）：</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>XXX.xcodeproj/xcshareddata/IDETemplateMacros.plist\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>xcodeproj下的xcshareddata文件夹下存在IDETemplateMacros.plist，会覆盖xcworkspace的xcshareddata，（也就是xcworkspace的xcshareddata的IDETemplateMacros.plist不生效）</p>\n\n<p><u>**综上所述：xcworkspace下的IDETemplateMacros，在xcworkspace内部的xcodeproj未指定IDETemplateMacros时生效**</u></p>\n\n<h4 id=\"322-用户指定\">3.2.2 用户指定</h4>\n\n<p>上述xcodeproj、xcworkspace根目录下还有各自xcuserdata，xcuserdata内包含各个用户名的文件夹 username.xcuserdatad，存在此目录下的IDETemplateMacros.plist ，优先级高于xcshareddata，</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n</pre></td><td class=\"rouge-code\"><pre>XXX.xcworkspace/xcuserdata/IDETemplateMacros.plist \nXXX.xcodeproj/xcuserdata/IDETemplateMacros.plist\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p><strong><em><u>优先级与2.2.1所述一致：xcworkspace/xcodeproj内的xcshareddata下的IDETemplateMacros，在xcworkspace/xcodeproj内部的xcuserdata未指定IDETemplateMacros时生效</u></em></strong></p>\n\n<h4 id=\"323-本地指定\">3.2.3 本地指定</h4>\n\n<p>上述情况之外：</p>\n\n<p><strong><em><u>在上述均不存在IDETemplateMacros.plist时，本地目录才会生效</u></em></strong>：</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>/Users/Mac登录名/Library/Developer/Xcode/UserData/IDETemplateMacros.plist \n</pre></td></tr></tbody></table></code></pre></div></div>\n\n\n\n                <hr style=\"visibility: hidden;\">\n                <ul class=\"pager\">\n                    \n                    <li class=\"previous\">\n                        <a href=\"/2023/07/26/5-iOS%E7%BB%84%E4%BB%B6%E5%8C%96-%E8%B5%84%E6%BA%90%E7%BB%84%E4%BB%B6%E5%BA%93/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"iOS组件化实践之：资源组件库\">\n                        Previous<br>\n                        <span>iOS组件化实践之：资源组件库</span>\n                        </a>\n                    </li>\n                    \n                    \n                    <li class=\"next\">\n                        <a href=\"/2023/08/02/iOS-%E7%BB%84%E4%BB%B6%E5%8C%96%E5%AE%9E%E8%B7%B5%E4%B9%8B-%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98%E5%8F%8A%E8%A7%A3%E5%86%B3%E8%BF%87%E7%A8%8B%E7%BA%AA%E8%A6%81-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0%E4%B8%AD/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"iOS组件化实践之：遇到的问题及解决过程纪要(持续更新中)\">\n                        Next<br>\n                        <span>iOS组件化实践之：遇到的问题及解决过程纪要(持续更新中)</span>\n                        </a>\n                    </li>\n                    \n                </ul>\n                <hr style=\"visibility: hidden;\">\n\n                \n                <!-- disqus 评论框 start -->\n                <div class=\"comment\">\n                    <div id=\"disqus_thread\" class=\"disqus-thread\"></div>\n                </div>\n                <!-- disqus 评论框 end -->\n                \n\n                \n            </div>  \n\n    <!-- Side Catalog Container -->\n        \n            <div class=\"\n                col-lg-2 col-lg-offset-0\n                visible-lg-block\n                sidebar-container\n                catalog-container\">\n                <div class=\"side-catalog\">\n                    <hr class=\"hidden-sm hidden-xs\">\n                    <h5>\n                        <a class=\"catalog-toggle\" href=\"#\">CATALOG</a>\n                    </h5>\n                    <ul class=\"catalog-body\"></ul>\n                </div>\n            </div>\n        \n\n    <!-- Sidebar Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                sidebar-container\">\n\n                <!-- Featured Tags -->\n                \n\n\n<section>\n    \n        <hr class=\"hidden-sm hidden-xs\">\n    \n    <h5><a href=\"/archive/\">FEATURED TAGS</a></h5>\n    <div class=\"tags\">\n        \n        \n        \n        \n        \n    </div>\n</section>\n\n\n                <!-- Friends Blog -->\n                \n            </div>\n        </div>\n    </div>\n</article>\n\n<!-- add support for mathjax by voleking-->\n\n\n\n\n\n\n<!-- disqus 公共JS代码 start (一个网页只需插入一次) -->\n<script type=\"text/javascript\">\n    /* * * CONFIGURATION VARIABLES * * */\n    var disqus_shortname = \"Cyp\";\n    var disqus_identifier = \"/2023/07/31/6-iOS-组件化-命名注释篇\";\n    var disqus_url = \"http://localhost:4000/2023/07/31/6-iOS-%E7%BB%84%E4%BB%B6%E5%8C%96-%E5%91%BD%E5%90%8D%E6%B3%A8%E9%87%8A%E7%AF%87/\";\n\n    (function() {\n        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;\n        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';\n        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);\n    })();\n</script>\n<!-- disqus 公共JS代码 end -->\n\n\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n      var d = document, t = 'script',\n          o = d.createElement(t),\n          s = d.getElementsByTagName(t)[0];\n      o.src = u;\n      if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n      s.parentNode.insertBefore(o, s);\n    }\n</script>\n<!-- anchor-js, Doc:http://bryanbraun.github.io/anchorjs/ -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/anchor-js/1.1.1/anchor.min.js\",function(){\n        anchors.options = {\n          visible: 'hover',\n          placement: 'right',\n          // icon: '#'\n        };\n        anchors.add().remove('.intro-header h1').remove('.subheading').remove('.sidebar-container h5');\n    })\n</script>\n<style>\n    /* place left on bigger screen */\n    @media all and (min-width: 800px) {\n        .anchorjs-link{\n            position: absolute;\n            left: -0.75em;\n            font-size: 1.1em;\n            margin-top : -0.1em;\n        }\n    }\n</style>\n\n\n\n    <!-- Footer -->\n<footer>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <!-- SNS Link -->\n                \n\n\n<ul class=\"list-inline text-center\">\n\n\n  \n  \n  \n  \n  \n  \n  \n</ul>\n\n                <p class=\"copyright text-muted\">\n                    Copyright &copy; PaysonChen Blog 2024\n                    <br>\n                    <!-- Powered by <a href=\"http://huangxuan.me\">Hux Blog</a> | -->\n                 <!--    <iframe style=\"margin-left: 2px; margin-bottom:-5px;\" frameborder=\"0\" scrolling=\"0\" width=\"100px\"\n                        height=\"20px\"\n                        src=\"https://ghbtns.com/github-btn.html?user=huxpro&repo=huxpro.github.io&type=star&count=true\">\n                    </iframe> -->\n                </p>\n            </div>\n        </div>\n    </div>\n</footer>\n\n<!-- jQuery -->\n<script src=\"/js/jquery.min.js \"></script>\n\n<!-- Bootstrap Core JavaScript -->\n<!-- Currently, only navbar scroll-down effect at desktop still depends on this -->\n<script src=\"/js/bootstrap.min.js \"></script>\n\n<!-- Custom Theme JavaScript -->\n<script src=\"/js/hux-blog.min.js \"></script>\n\n<!-- Simple Jekyll Search -->\n<script src=\"/js/simple-jekyll-search.min.js\"></script>\n\n<!-- Service Worker -->\n\n<script src=\"/js/snackbar.js \"></script>\n<script src=\"/js/sw-registration.js \"></script>\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n        var d = document, t = 'script',\n            o = d.createElement(t),\n            s = d.getElementsByTagName(t)[0];\n        o.src = u;\n        if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n        s.parentNode.insertBefore(o, s);\n    }\n</script>\n\n<!--\n     Because of the native support for backtick-style fenced code blocks\n     right within the Markdown is landed in Github Pages,\n     From V1.6, There is no need for Highlight.js,\n     so Huxblog drops it officially.\n\n     - https://github.com/blog/2100-github-pages-now-faster-and-simpler-with-jekyll-3-0\n     - https://help.github.com/articles/creating-and-highlighting-code-blocks/\n     - https://github.com/jneen/rouge/wiki/list-of-supported-languages-and-lexers\n-->\n<!--\n    <script>\n        async(\"http://cdn.bootcss.com/highlight.js/8.6/highlight.min.js\", function(){\n            hljs.initHighlightingOnLoad();\n        })\n    </script>\n    <link href=\"http://cdn.bootcss.com/highlight.js/8.6/styles/github.min.css\" rel=\"stylesheet\">\n-->\n\n\n\n\n\n\n\n<!--fastClick.js -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/fastclick/1.0.6/fastclick.min.js\", function () {\n        var $nav = document.querySelector(\"nav\");\n        if ($nav) FastClick.attach($nav);\n    })\n</script>\n\n\n<!-- Google Analytics -->\n\n\n\n<!-- Baidu Tongji -->\n\n\n\n<!-- Side Catalog -->\n\n<script type=\"text/javascript\">\n    function generateCatalog(selector) {\n\n        // interop with multilangual \n        if ('' == 'true') {\n            _containerSelector = 'div.post-container.active'\n        } else {\n            _containerSelector = 'div.post-container'\n        }\n\n        // init\n        var P = $(_containerSelector), a, n, t, l, i, c;\n        a = P.find('h1,h2,h3,h4,h5,h6');\n\n        // clean\n        $(selector).html('')\n\n        // appending\n        a.each(function () {\n            n = $(this).prop('tagName').toLowerCase();\n            i = \"#\" + $(this).prop('id');\n            t = $(this).text();\n            c = $('<a href=\"' + i + '\" rel=\"nofollow\">' + t + '</a>');\n            l = $('<li class=\"' + n + '_nav\"></li>').append(c);\n            $(selector).append(l);\n        });\n        return true;\n    }\n\n    generateCatalog(\".catalog-body\");\n\n    // toggle side catalog\n    $(\".catalog-toggle\").click((function (e) {\n        e.preventDefault();\n        $('.side-catalog').toggleClass(\"fold\")\n    }))\n\n    /*\n     * Doc: https://github.com/davist11/jQuery-One-Page-Nav\n     * Fork by Hux to support padding\n     */\n    async(\"/js/jquery.nav.js\", function () {\n        $('.catalog-body').onePageNav({\n            currentClass: \"active\",\n            changeHash: !1,\n            easing: \"swing\",\n            filter: \"\",\n            scrollSpeed: 700,\n            scrollOffset: 0,\n            scrollThreshold: .2,\n            begin: null,\n            end: null,\n            scrollChange: null,\n            padding: 80\n        });\n    });\n</script>\n\n\n\n<!-- Multi-Lingual -->\n\n\n<!-- Simple Jekyll Search -->\n<script>\n    // https://stackoverflow.com/questions/1912501/unescape-html-entities-in-javascript\n    function htmlDecode(input) {\n        var e = document.createElement('textarea');\n        e.innerHTML = input;\n        // handle case of empty input\n        return e.childNodes.length === 0 ? \"\" : e.childNodes[0].nodeValue;\n    }\n\n    SimpleJekyllSearch({\n        searchInput: document.getElementById('search-input'),\n        resultsContainer: document.getElementById('search-results'),\n        json: '/search.json',\n        searchResultTemplate: '<div class=\"post-preview item\"><a href=\"{url}\"><h2 class=\"post-title\">{title}</h2><h3 class=\"post-subtitle\">{subtitle}</h3><hr></a></div>',\n        noResultsText: 'No results',\n        limit: 50,\n        fuzzy: false,\n        // a hack to get escaped subtitle unescaped. for some reason, \n        // post.subtitle w/o escape filter nuke entire search.\n        templateMiddleware: function (prop, value, template) {\n            if (prop === 'subtitle' || prop === 'title') {\n                if (value.indexOf(\"code\")) {\n                    return htmlDecode(value);\n                } else {\n                    return value;\n                }\n            }\n        }\n    });\n\n    $(document).ready(function () {\n        var $searchPage = $('.search-page');\n        var $searchOpen = $('.search-icon');\n        var $searchClose = $('.search-icon-close');\n        var $searchInput = $('#search-input');\n        var $body = $('body');\n\n        $searchOpen.on('click', function (e) {\n            e.preventDefault();\n            $searchPage.toggleClass('search-active');\n            var prevClasses = $body.attr('class') || '';\n            setTimeout(function () {\n                $body.addClass('no-scroll');\n            }, 400)\n\n            if ($searchPage.hasClass('search-active')) {\n                $searchClose.on('click', function (e) {\n                    e.preventDefault();\n                    $searchPage.removeClass('search-active');\n                    $body.attr('class', prevClasses);  // from closure \n                });\n                $searchInput.focus();\n            }\n        });\n    });\n</script>\n\n\n<!-- Image to hack wechat -->\n<img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\" />\n<!-- Migrate from head to bottom, no longer block render and still work -->\n\n</body>\n\n</html>\n","excerpt":"<h1 id=\"ios组件化实践之类命名注释篇\">iOS组件化实践之：类命名注释篇</h1>\n","url":"/2023/07/31/6-iOS-%E7%BB%84%E4%BB%B6%E5%8C%96-%E5%91%BD%E5%90%8D%E6%B3%A8%E9%87%8A%E7%AF%87/","next":{"id":"/2023/08/02/iOS-组件化实践之-遇到的问题及解决过程纪要-持续更新中","tags":[],"relative_path":"_posts/2023-08-02-iOS-组件化实践之-遇到的问题及解决过程纪要-持续更新中.md","collection":"posts","content":"<h1 id=\"ios组件化实践之遇到的问题及解决过程纪要持续更新中\">iOS组件化实践之：遇到的问题及解决过程纪要(持续更新中)</h1>\n\n<h2 id=\"一编译错误\">一、编译错误</h2>\n\n<h3 id=\"11-msghandlingerror\">1.1 MsgHandlingError</h3>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n</pre></td><td class=\"rouge-code\"><pre>Build service could not create build operation: unknown error <span class=\"k\">while </span>handling message: MsgHandlingError<span class=\"o\">(</span>message: <span class=\"s2\">\"unable to initiate PIF transfer session (operation in progress?)\"</span><span class=\"o\">)</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>经Google之后，解决方案是要清楚编译构建索引，由于还是比较频繁出现，于是写了个脚本：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#!/bin/bash</span>\n\n<span class=\"c\"># [背景]</span>\n<span class=\"c\"># 组件化过程中，经常出现以下编译错误：</span>\n<span class=\"c\"># Build service could not create build operation: unknown error while handling message: MsgHandlingError(message: \"unable to initiate PIF transfer session (operation in progress?)\")</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># author: Chenyp34</span>\n<span class=\"c\"># [目的]</span>\n<span class=\"c\"># 为解决上述错误，需要清理构建索引目录并重启xcode，由于操作重复，考虑抽出shell脚本</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [目录]</span>\n<span class=\"c\">#   - auto_clean.sh</span>\n<span class=\"c\"># [说明]</span>\n<span class=\"c\"># 1、CD[指定xcode构建索引目录]目录</span>\n<span class=\"c\"># 2、递归删除当前文件下所有文件</span>\n<span class=\"c\"># 3、重启xcode</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [参数]</span>\n<span class=\"c\"># 1、参数1，指定xcode构建索引目录</span>\n<span class=\"c\"># 1、参数2，指定要打开的Xcode项目目</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [调用说明]</span>\n<span class=\"c\"># 1、未指定目录，则取当前目录：sh auto_clean.sh</span>\n<span class=\"c\"># 2、指定目录：sh auto_clean.sh /xcode构建索引目录/ /要打开的Xcode项目目录/</span>\n\n\n<span class=\"nb\">export </span><span class=\"nv\">XcodeDerivedDataPath</span><span class=\"o\">=</span>/Users/YourMacName/Library/Developer/Xcode/DerivedData\n<span class=\"nb\">export </span><span class=\"nv\">XcodeWorkspacePath</span><span class=\"o\">=</span>/Users/YourMacName/Documents/PCS/git/Project/xxx.xcworkspace\n\n<span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$1</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n    </span><span class=\"nb\">echo</span> <span class=\"s1\">'///入参1为空，使用默认xcode构建索引目录:'</span><span class=\"k\">${</span><span class=\"nv\">XcodeDerivedDataPath</span><span class=\"k\">}</span>\n<span class=\"k\">else\n    </span><span class=\"nv\">XcodeDerivedDataPath</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'///入参1不为空，xcode构建索引目录:'</span><span class=\"k\">${</span><span class=\"nv\">XcodeDerivedDataPath</span><span class=\"k\">}</span>\n<span class=\"k\">fi\n\nif</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$2</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n    </span><span class=\"nb\">echo</span> <span class=\"s1\">'///入参2为空，使用默认xcode项目目录:'</span><span class=\"k\">${</span><span class=\"nv\">XcodeWorkspacePath</span><span class=\"k\">}</span>\n<span class=\"k\">else\n    </span><span class=\"nv\">XcodeWorkspacePath</span><span class=\"o\">=</span><span class=\"nv\">$2</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'///入参2不为空，xcode项目目录:'</span><span class=\"k\">${</span><span class=\"nv\">XcodeWorkspacePath</span><span class=\"k\">}</span>\n<span class=\"k\">fi</span>\n\n<span class=\"c\">#cd到xcode构建索引目录</span>\n<span class=\"nb\">cd</span>  <span class=\"nv\">$XcodeDerivedDataPath</span>\n\n<span class=\"c\">#删除当前目录所有构件索引</span>\n<span class=\"nb\">rm</span> <span class=\"nt\">-rf</span> <span class=\"k\">*</span>\n\n<span class=\"c\">#重启xcode</span>\nkillall Xcode\n\n<span class=\"c\">#休眠一下，否则额可能直接打开会报错</span>\n<span class=\"nb\">sleep </span>0.1\n\n<span class=\"c\">#打开工程</span>\nopen <span class=\"nv\">$XcodeWorkspacePath</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h3 id=\"12--duplicate-interface-definition-for-class\">1.2  duplicate interface definition for class</h3>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>duplicate interface definition for class XXX\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>排除了报错明面上的重复定义的可能性之后，后来查资料发现是import 问题，删除掉原先的import “xxx.h”，改成 import &lt;PSCXXModule/xxx.h&gt;</p>\n\n<h2 id=\"二运行时错误\">二、运行时错误</h2>\n\n<h3 id=\"21-voidload方法交换导致死循环\">2.1 +(void)load方法交换导致死循环</h3>\n\n<h4 id=\"211-问题说明\">2.1.1 问题说明：</h4>\n\n<p>在实施组件化过程之中，一个UIControl的Category与UIButton的Category，由于后者的耦合度较大，将前者先拆进组件库，编译没有问题，运行没有问题，只有在UIButton点击事件时造成了死循环。</p>\n\n<h4 id=\"212-问题分析\">2.1.2 问题分析：</h4>\n\n<p>通过Craash堆栈看出是以下这个方法递归调用造成死循环</p>\n\n<pre><code class=\"language-objective-c\">- (void)mySendAction:(SEL)action to:(id)target forEvent:(UIEvent *)event\n</code></pre>\n\n<p>详细排查代码，看到UIControl的Category与UIButton的Category写了一模一样的 load方法交换：</p>\n\n<div class=\"language-objc highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n</pre></td><td class=\"rouge-code\"><pre><span class=\"k\">+</span> <span class=\"p\">(</span><span class=\"kt\">void</span><span class=\"p\">)</span><span class=\"n\">load</span><span class=\"p\">{</span>\n    <span class=\"k\">static</span> <span class=\"n\">dispatch_once_t</span> <span class=\"n\">onceToken</span><span class=\"p\">;</span>\n    <span class=\"n\">dispatch_once</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">onceToken</span><span class=\"p\">,</span> <span class=\"o\">^</span><span class=\"p\">{</span>\n        <span class=\"n\">SEL</span> <span class=\"n\">selA</span> <span class=\"o\">=</span> <span class=\"k\">@selector</span><span class=\"p\">(</span><span class=\"n\">sendAction</span><span class=\"o\">:</span><span class=\"n\">to</span><span class=\"o\">:</span><span class=\"n\">forEvent</span><span class=\"o\">:</span><span class=\"p\">);</span>\n        <span class=\"n\">SEL</span> <span class=\"n\">selB</span> <span class=\"o\">=</span> <span class=\"k\">@selector</span><span class=\"p\">(</span><span class=\"n\">mySendAction</span><span class=\"o\">:</span><span class=\"n\">to</span><span class=\"o\">:</span><span class=\"n\">forEvent</span><span class=\"o\">:</span><span class=\"p\">);</span>\n        <span class=\"n\">Method</span> <span class=\"n\">methodA</span> <span class=\"o\">=</span>   <span class=\"n\">class_getInstanceMethod</span><span class=\"p\">(</span><span class=\"n\">self</span><span class=\"p\">,</span><span class=\"n\">selA</span><span class=\"p\">);</span>\n        <span class=\"n\">Method</span> <span class=\"n\">methodB</span> <span class=\"o\">=</span> <span class=\"n\">class_getInstanceMethod</span><span class=\"p\">(</span><span class=\"n\">self</span><span class=\"p\">,</span> <span class=\"n\">selB</span><span class=\"p\">);</span>\n        <span class=\"c1\">//将 methodB的实现 添加到系统方法中 也就是说 将 methodA方法指针添加成 方法methodB的  返回值表示是否添加成功</span>\n        <span class=\"n\">BOOL</span> <span class=\"n\">isAdd</span> <span class=\"o\">=</span> <span class=\"n\">class_addMethod</span><span class=\"p\">(</span><span class=\"n\">self</span><span class=\"p\">,</span> <span class=\"n\">selA</span><span class=\"p\">,</span> <span class=\"n\">method_getImplementation</span><span class=\"p\">(</span><span class=\"n\">methodB</span><span class=\"p\">),</span> <span class=\"n\">method_getTypeEncoding</span><span class=\"p\">(</span><span class=\"n\">methodB</span><span class=\"p\">));</span>\n        <span class=\"c1\">//添加成功了 说明 本类中不存在methodB 所以此时必须将方法b的实现指针换成方法A的，否则 b方法将没有实现。</span>\n        <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">isAdd</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n            <span class=\"n\">class_replaceMethod</span><span class=\"p\">(</span><span class=\"n\">self</span><span class=\"p\">,</span> <span class=\"n\">selB</span><span class=\"p\">,</span> <span class=\"n\">method_getImplementation</span><span class=\"p\">(</span><span class=\"n\">methodA</span><span class=\"p\">),</span> <span class=\"n\">method_getTypeEncoding</span><span class=\"p\">(</span><span class=\"n\">methodA</span><span class=\"p\">));</span>\n        <span class=\"p\">}</span><span class=\"k\">else</span><span class=\"p\">{</span>\n            <span class=\"c1\">//添加失败了 说明本类中 有methodB的实现，此时只需要将 methodA和methodB的IMP互换一下即可。</span>\n            <span class=\"n\">method_exchangeImplementations</span><span class=\"p\">(</span><span class=\"n\">methodA</span><span class=\"p\">,</span> <span class=\"n\">methodB</span><span class=\"p\">);</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">});</span>\n<span class=\"p\">}</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>(姑且先不吐槽cv大法)</p>\n\n<p><strong>为何在组件化之前不会死循环，在组件化之后造成了死循环？</strong></p>\n\n<h4 id=\"213-问题定位\">2.1.3 问题定位：</h4>\n\n<p>通过控制变量法可以初步判断：<strong>由于Pod集成方式改变造成的crash</strong></p>\n\n<p>load方法，是类加载时的调用，怀疑是加载时序发生了变化，导致crash暴露出来</p>\n\n<p>随即展开类加载实验：主工程及Pod的类加载探索：</p>\n\n<p>存在Pod库的类加载：</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n</pre></td><td class=\"rouge-code\"><pre>2023-06-28 09:19:26.104245+0800 TestUI[2809:1230318] [+ (void)load]:[Pod] UIControl (ClickTimeSpace) load\n2023-06-28 09:19:26.108615+0800 TestUI[2809:1230318] [+ (void)load]:[Pod] UIImage (Bundle) load\n2023-06-28 09:19:26.108626+0800 TestUI[2809:1230318] [+ (void)load]:[Pod] UIImage (Custom) load\n2023-06-28 09:19:26.108637+0800 TestUI[2809:1230318] [+ (void)load]:[Pod] UIImageView (YPCCreateQRCode) load\n2023-06-28 09:19:26.108647+0800 TestUI[2809:1230318] [+ (void)load]:[Pod] UILabel (YPCSpaceLabel) load\n2023-06-28 09:19:26.108670+0800 TestUI[2809:1230318] [+ (void)load]:[Pod] UIResponder (KTRouter) load\n2023-06-28 09:19:26.110711+0800 TestUI[2809:1230318] [+ (void)load]:[Project]NSObject (Sb) load\n2023-06-28 09:19:26.110743+0800 TestUI[2809:1230318] [+ (void)load]:[Project]UITextField (Sub) load\n2023-06-28 09:19:26.110777+0800 TestUI[2809:1230318] [+ (void)load]:[Project]UIResponder (Super) load\n2023-06-28 09:19:26.110787+0800 TestUI[2809:1230318] [+ (void)load]:[Project]UIControl (Test) load\n2023-06-28 09:19:26.114212+0800 TestUI[2809:1230318] [+ (void)load]:[Project]UIView (Base) load\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>只有主工程的类加载：</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n</pre></td><td class=\"rouge-code\"><pre>2023-06-28 09:25:27.432494+0800 TestUI[2821:1235269] [+ (void)load]:[Project]UIImageView (SubImgV) load\n2023-06-28 09:25:27.432528+0800 TestUI[2821:1235269] [+ (void)load]:[Project]NSObject (Sb) load\n2023-06-28 09:25:27.432559+0800 TestUI[2821:1235269] [+ (void)load]:[Project]UITextField (Sub) load\n2023-06-28 09:25:27.432570+0800 TestUI[2821:1235269] [+ (void)load]:[Project]UITextView (SubTv) load\n2023-06-28 09:25:27.432580+0800 TestUI[2821:1235269] [+ (void)load]:[Project]UIButton (Test) load\n2023-06-28 09:25:27.432592+0800 TestUI[2821:1235269] [+ (void)load]:[Project]UIResponder (Super) load\n2023-06-28 09:25:27.432602+0800 TestUI[2821:1235269] [+ (void)load]:[Project]UIControl (Test) load\n2023-06-28 09:25:27.435639+0800 TestUI[2821:1235269] [+ (void)load]:[Project]UIView (Base) load\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>通过上述日志打印得出：<strong>Pod库里的类加载先于主工程</strong></p>\n\n<p>因此结论：在主工程时，先加载了UIButton的load方法，而UIButton无此方法：</p>\n\n<div class=\"language-objc highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c1\">//在UIControl存在此方法,而UIButton无此方法：</span>\n<span class=\"k\">-</span> <span class=\"p\">(</span><span class=\"kt\">void</span><span class=\"p\">)</span><span class=\"nf\">sendAction</span><span class=\"p\">:(</span><span class=\"n\">SEL</span><span class=\"p\">)</span><span class=\"nv\">action</span> <span class=\"nf\">to</span><span class=\"p\">:(</span><span class=\"n\">nullable</span> <span class=\"n\">id</span><span class=\"p\">)</span><span class=\"nv\">target</span> <span class=\"nf\">forEvent</span><span class=\"p\">:(</span><span class=\"n\">nullable</span> <span class=\"n\">UIEvent</span> <span class=\"o\">*</span><span class=\"p\">)</span><span class=\"nv\">event</span><span class=\"p\">;</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>在先交换UIButton中的sendAction之后，再交换UIControl中的sendAction，sendAction方法能被正常交换</p>\n\n<p>反之：在Pod工程中，先交换了UIControl中的sendAction之后，再交换UIButton中的sendAction，执行两次相同交换等于恢复了没有交换，当方法调用时：</p>\n\n<div class=\"language-objc highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c1\">//当我们按钮点击事件 sendAction 时  将会执行  mySendAction</span>\n<span class=\"k\">-</span> <span class=\"p\">(</span><span class=\"kt\">void</span><span class=\"p\">)</span><span class=\"nf\">mySendAction</span><span class=\"p\">:(</span><span class=\"n\">SEL</span><span class=\"p\">)</span><span class=\"nv\">action</span> <span class=\"nf\">to</span><span class=\"p\">:(</span><span class=\"n\">id</span><span class=\"p\">)</span><span class=\"nv\">target</span> <span class=\"nf\">forEvent</span><span class=\"p\">:(</span><span class=\"n\">UIEvent</span> <span class=\"o\">*</span><span class=\"p\">)</span><span class=\"nv\">event</span>\n<span class=\"p\">{</span>\n  \t<span class=\"c1\">//xxx</span>\n    <span class=\"c1\">//此处 methodA和methodB方法IMP互换了，实际上执行 sendAction；所以不会死循环</span>\n    <span class=\"p\">[</span><span class=\"n\">self</span> <span class=\"nf\">mySendAction</span><span class=\"p\">:</span><span class=\"n\">action</span> <span class=\"nf\">to</span><span class=\"p\">:</span><span class=\"n\">target</span> <span class=\"n\">forEvent</span><span class=\"o\">:</span><span class=\"n\">event</span><span class=\"p\">];</span>\n<span class=\"p\">}</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>无法回到sendAction，造成了死循环详细排查代码，看到UIControl的Category与UIButton的Category写了一模一样的 load方法交换：</p>\n\n","name":"2023-08-02-iOS-组件化实践之-遇到的问题及解决过程纪要-持续更新中.md","previous":{"id":"/2023/07/31/6-iOS-组件化-命名注释篇","tags":[],"relative_path":"_posts/2023-07-31-6-iOS-组件化-命名注释篇.md","collection":"posts","name":"2023-07-31-6-iOS-组件化-命名注释篇.md","url":"/2023/07/31/6-iOS-%E7%BB%84%E4%BB%B6%E5%8C%96-%E5%91%BD%E5%90%8D%E6%B3%A8%E9%87%8A%E7%AF%87/","title":"iOS组件化实践之：类命名注释篇","date":"2023-07-31 00:00:00 +0800","categories":[],"path":"_posts/2023-07-31-6-iOS-组件化-命名注释篇.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/home-bg-geek.jpg","slug":"6-iOS-组件化-命名注释篇","ext":".md"},"output":"<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"google-site-verification\" content=\"xBT4GhYoi5qRD5tr338pgPM5OWHHIDR6mNg1a3euekI\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, viewport-fit=cover\">\n    <meta name=\"description\" content=\"与你一起发现更大的世界。\">\n    <meta name=\"keywords\"  content=\"PaysonChen,iOS,流媒体\">\n    <meta name=\"theme-color\" content=\"#000000\">\n    \n    <!-- Open Graph -->\n    <meta property=\"og:title\" content=\"iOS组件化实践之：遇到的问题及解决过程纪要(持续更新中) - PaysonChen的博客 | PaysonChen Blog\">\n    \n    <meta property=\"og:type\" content=\"article\">\n    <meta property=\"og:description\" content=\"iOS组件化实践之：遇到的问题及解决过程纪要(持续更新中)\n\">\n    \n    \n    <meta property=\"article:published_time\" content=\"2023-08-02T00:00:00Z\">\n    \n    \n    <meta property=\"article:author\" content=\"PaysonChen\">\n    \n    \n    \n    <meta property=\"og:image\" content=\"http://localhost:4000\">\n    <meta property=\"og:url\" content=\"http://localhost:4000/2023/08/02/iOS-%E7%BB%84%E4%BB%B6%E5%8C%96%E5%AE%9E%E8%B7%B5%E4%B9%8B-%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98%E5%8F%8A%E8%A7%A3%E5%86%B3%E8%BF%87%E7%A8%8B%E7%BA%AA%E8%A6%81-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0%E4%B8%AD/\">\n    <meta property=\"og:site_name\" content=\"PaysonChen的博客 | PaysonChen Blog\">\n    \n    <title>iOS组件化实践之：遇到的问题及解决过程纪要(持续更新中) - PaysonChen的博客 | PaysonChen Blog</title>\n\n    <!-- Web App Manifest -->\n    <link rel=\"manifest\" href=\"/pwa/manifest.json\">\n\n    <!-- Favicon -->\n    <link rel=\"shortcut icon\" href=\"/img/favicon.ico\">\n    \n    <!-- Canonical URL -->\n    <link rel=\"canonical\" href=\"http://localhost:4000/2023/08/02/iOS-%E7%BB%84%E4%BB%B6%E5%8C%96%E5%AE%9E%E8%B7%B5%E4%B9%8B-%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98%E5%8F%8A%E8%A7%A3%E5%86%B3%E8%BF%87%E7%A8%8B%E7%BA%AA%E8%A6%81-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0%E4%B8%AD/\">\n\n    <!-- Bootstrap Core CSS -->\n    <link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\">\n\n    <!-- Custom CSS -->\n    <link rel=\"stylesheet\" href=\"/css/hux-blog.min.css\">\n\n    <!-- Custom Fonts -->\n    <!-- <link href=\"http://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\"> -->\n    <!-- Hux change font-awesome CDN to qiniu -->\n    <link href=\"//cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\">\n\n\n    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->\n    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->\n    <!--[if lt IE 9]>\n        <script src=\"https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js\"></script>\n        <script src=\"https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js\"></script>\n    <![endif]-->\n\n    <!-- ga & ba script hoook -->\n    <script></script>\n</head>\n\n\n<!-- hack iOS CSS :active style -->\n<body ontouchstart=\"\">\n\n    <!-- Navigation -->\n\n    <nav class=\"navbar navbar-default navbar-custom navbar-fixed-top\">\n        \n        <div class=\"container-fluid\">\n            <!-- Brand and toggle get grouped for better mobile display -->\n            <div class=\"navbar-header page-scroll\">\n                <button type=\"button\" class=\"navbar-toggle\">\n                    <span class=\"sr-only\">Toggle navigation</span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                </button>\n                <a class=\"navbar-brand\" href=\"/\">PaysonChen Blog</a>\n            </div>\n\n            <!-- Collect the nav links, forms, and other content for toggling -->\n            <div id=\"huxblog_navbar\">\n                <div class=\"navbar-collapse\">\n                    <ul class=\"nav navbar-nav navbar-right\">\n                        <li>\n                            <a href=\"/\">Home</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        <li>\n                            <a href=\"/about/\">About</a>\n                        </li>\n                        \n                        \n                        \n                        <li>\n                            <a href=\"/archive/\">Archive</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        <li class=\"search-icon\">\n                            <a href=\"javascript:void(0)\">\n                                <i class=\"fa fa-search\"></i>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n            <!-- /.navbar-collapse -->\n        </div>\n        <!-- /.container -->\n    </nav>\n\n    <script>\n        // Drop Bootstarp low-performance Navbar\n        // Use customize navbar with high-quality material design animation\n        // in high-perf jank-free CSS3 implementation\n        var $body = document.body;\n        var $toggle = document.querySelector('.navbar-toggle');\n        var $navbar = document.querySelector('#huxblog_navbar');\n        var $collapse = document.querySelector('.navbar-collapse');\n\n        var __HuxNav__ = {\n            close: function () {\n                $navbar.className = \" \";\n                // wait until animation end.\n                setTimeout(function () {\n                    // prevent frequently toggle\n                    if ($navbar.className.indexOf('in') < 0) {\n                        $collapse.style.height = \"0px\"\n                    }\n                }, 400)\n            },\n            open: function () {\n                $collapse.style.height = \"auto\"\n                $navbar.className += \" in\";\n            }\n        }\n\n        // Bind Event\n        $toggle.addEventListener('click', function (e) {\n            if ($navbar.className.indexOf('in') > 0) {\n                __HuxNav__.close()\n            } else {\n                __HuxNav__.open()\n            }\n        })\n\n        /**\n         * Since Fastclick is used to delegate 'touchstart' globally\n         * to hack 300ms delay in iOS by performing a fake 'click',\n         * Using 'e.stopPropagation' to stop 'touchstart' event from \n         * $toggle/$collapse will break global delegation.\n         * \n         * Instead, we use a 'e.target' filter to prevent handler\n         * added to document close HuxNav.  \n         *\n         * Also, we use 'click' instead of 'touchstart' as compromise\n         */\n        document.addEventListener('click', function (e) {\n            if (e.target == $toggle) return;\n            if (e.target.className == 'icon-bar') return;\n            __HuxNav__.close();\n        })\n    </script>\n    <!-- Search -->\n<div class=\"search-page\">\n  <div class=\"search-icon-close-container\">\n    <span class=\"search-icon-close\">\n      <i class=\"fa fa-chevron-down\"></i>\n    </span>\n  </div>\n  <div class=\"search-main container\">\n    <div class=\"row\">\n      <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n        <form></form>\n        <input type=\"text\" id=\"search-input\" placeholder=\"$ grep...\">\n        </form>\n        <div id=\"search-results\" class=\"mini-post-list\"></div>\n      </div>\n    </div>\n  </div>\n</div>\n\n    <!-- Image to hack wechat -->\n<!-- <img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\"> -->\n<!-- <img src=\"/img/home-bg-geek.jpg\" width=\"0\" height=\"0\"> -->\n\n<!-- Post Header -->\n\n\n\n<style type=\"text/css\">\n    header.intro-header{\n        position: relative;\n        background-image: url('/img/home-bg-geek.jpg');\n        background: ;\n    }\n\n    \n</style>\n\n<header class=\"intro-header\" >\n\n    <div class=\"header-mask\"></div>\n    \n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <div class=\"post-heading\">\n                    <div class=\"tags\">\n                        \n                    </div>\n                    <h1>iOS组件化实践之：遇到的问题及解决过程纪要(持续更新中)</h1>\n                    \n                    <h2 class=\"subheading\"></h2>\n                    <span class=\"meta\">Posted by PaysonChen on August 2, 2023</span>\n                </div>\n            </div>\n        </div>\n    </div>\n</header>\n\n\n\n\n\n\n<!-- Post Content -->\n<article>\n    <div class=\"container\">\n        <div class=\"row\">\n\n    <!-- Post Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                post-container\">\n\n                <!-- Multi-Lingual -->\n                \n\n\t\t\t\t<h1 id=\"ios组件化实践之遇到的问题及解决过程纪要持续更新中\">iOS组件化实践之：遇到的问题及解决过程纪要(持续更新中)</h1>\n\n<h2 id=\"一编译错误\">一、编译错误</h2>\n\n<h3 id=\"11-msghandlingerror\">1.1 MsgHandlingError</h3>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n</pre></td><td class=\"rouge-code\"><pre>Build service could not create build operation: unknown error <span class=\"k\">while </span>handling message: MsgHandlingError<span class=\"o\">(</span>message: <span class=\"s2\">\"unable to initiate PIF transfer session (operation in progress?)\"</span><span class=\"o\">)</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>经Google之后，解决方案是要清楚编译构建索引，由于还是比较频繁出现，于是写了个脚本：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#!/bin/bash</span>\n\n<span class=\"c\"># [背景]</span>\n<span class=\"c\"># 组件化过程中，经常出现以下编译错误：</span>\n<span class=\"c\"># Build service could not create build operation: unknown error while handling message: MsgHandlingError(message: \"unable to initiate PIF transfer session (operation in progress?)\")</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># author: Chenyp34</span>\n<span class=\"c\"># [目的]</span>\n<span class=\"c\"># 为解决上述错误，需要清理构建索引目录并重启xcode，由于操作重复，考虑抽出shell脚本</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [目录]</span>\n<span class=\"c\">#   - auto_clean.sh</span>\n<span class=\"c\"># [说明]</span>\n<span class=\"c\"># 1、CD[指定xcode构建索引目录]目录</span>\n<span class=\"c\"># 2、递归删除当前文件下所有文件</span>\n<span class=\"c\"># 3、重启xcode</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [参数]</span>\n<span class=\"c\"># 1、参数1，指定xcode构建索引目录</span>\n<span class=\"c\"># 1、参数2，指定要打开的Xcode项目目</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [调用说明]</span>\n<span class=\"c\"># 1、未指定目录，则取当前目录：sh auto_clean.sh</span>\n<span class=\"c\"># 2、指定目录：sh auto_clean.sh /xcode构建索引目录/ /要打开的Xcode项目目录/</span>\n\n\n<span class=\"nb\">export </span><span class=\"nv\">XcodeDerivedDataPath</span><span class=\"o\">=</span>/Users/YourMacName/Library/Developer/Xcode/DerivedData\n<span class=\"nb\">export </span><span class=\"nv\">XcodeWorkspacePath</span><span class=\"o\">=</span>/Users/YourMacName/Documents/PCS/git/Project/xxx.xcworkspace\n\n<span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$1</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n    </span><span class=\"nb\">echo</span> <span class=\"s1\">'///入参1为空，使用默认xcode构建索引目录:'</span><span class=\"k\">${</span><span class=\"nv\">XcodeDerivedDataPath</span><span class=\"k\">}</span>\n<span class=\"k\">else\n    </span><span class=\"nv\">XcodeDerivedDataPath</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'///入参1不为空，xcode构建索引目录:'</span><span class=\"k\">${</span><span class=\"nv\">XcodeDerivedDataPath</span><span class=\"k\">}</span>\n<span class=\"k\">fi\n\nif</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$2</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n    </span><span class=\"nb\">echo</span> <span class=\"s1\">'///入参2为空，使用默认xcode项目目录:'</span><span class=\"k\">${</span><span class=\"nv\">XcodeWorkspacePath</span><span class=\"k\">}</span>\n<span class=\"k\">else\n    </span><span class=\"nv\">XcodeWorkspacePath</span><span class=\"o\">=</span><span class=\"nv\">$2</span>\n    <span class=\"nb\">echo</span> <span class=\"s1\">'///入参2不为空，xcode项目目录:'</span><span class=\"k\">${</span><span class=\"nv\">XcodeWorkspacePath</span><span class=\"k\">}</span>\n<span class=\"k\">fi</span>\n\n<span class=\"c\">#cd到xcode构建索引目录</span>\n<span class=\"nb\">cd</span>  <span class=\"nv\">$XcodeDerivedDataPath</span>\n\n<span class=\"c\">#删除当前目录所有构件索引</span>\n<span class=\"nb\">rm</span> <span class=\"nt\">-rf</span> <span class=\"k\">*</span>\n\n<span class=\"c\">#重启xcode</span>\nkillall Xcode\n\n<span class=\"c\">#休眠一下，否则额可能直接打开会报错</span>\n<span class=\"nb\">sleep </span>0.1\n\n<span class=\"c\">#打开工程</span>\nopen <span class=\"nv\">$XcodeWorkspacePath</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h3 id=\"12--duplicate-interface-definition-for-class\">1.2  duplicate interface definition for class</h3>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>duplicate interface definition for class XXX\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>排除了报错明面上的重复定义的可能性之后，后来查资料发现是import 问题，删除掉原先的import “xxx.h”，改成 import &lt;PSCXXModule/xxx.h&gt;</p>\n\n<h2 id=\"二运行时错误\">二、运行时错误</h2>\n\n<h3 id=\"21-voidload方法交换导致死循环\">2.1 +(void)load方法交换导致死循环</h3>\n\n<h4 id=\"211-问题说明\">2.1.1 问题说明：</h4>\n\n<p>在实施组件化过程之中，一个UIControl的Category与UIButton的Category，由于后者的耦合度较大，将前者先拆进组件库，编译没有问题，运行没有问题，只有在UIButton点击事件时造成了死循环。</p>\n\n<h4 id=\"212-问题分析\">2.1.2 问题分析：</h4>\n\n<p>通过Craash堆栈看出是以下这个方法递归调用造成死循环</p>\n\n<pre><code class=\"language-objective-c\">- (void)mySendAction:(SEL)action to:(id)target forEvent:(UIEvent *)event\n</code></pre>\n\n<p>详细排查代码，看到UIControl的Category与UIButton的Category写了一模一样的 load方法交换：</p>\n\n<div class=\"language-objc highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n</pre></td><td class=\"rouge-code\"><pre><span class=\"k\">+</span> <span class=\"p\">(</span><span class=\"kt\">void</span><span class=\"p\">)</span><span class=\"n\">load</span><span class=\"p\">{</span>\n    <span class=\"k\">static</span> <span class=\"n\">dispatch_once_t</span> <span class=\"n\">onceToken</span><span class=\"p\">;</span>\n    <span class=\"n\">dispatch_once</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">onceToken</span><span class=\"p\">,</span> <span class=\"o\">^</span><span class=\"p\">{</span>\n        <span class=\"n\">SEL</span> <span class=\"n\">selA</span> <span class=\"o\">=</span> <span class=\"k\">@selector</span><span class=\"p\">(</span><span class=\"n\">sendAction</span><span class=\"o\">:</span><span class=\"n\">to</span><span class=\"o\">:</span><span class=\"n\">forEvent</span><span class=\"o\">:</span><span class=\"p\">);</span>\n        <span class=\"n\">SEL</span> <span class=\"n\">selB</span> <span class=\"o\">=</span> <span class=\"k\">@selector</span><span class=\"p\">(</span><span class=\"n\">mySendAction</span><span class=\"o\">:</span><span class=\"n\">to</span><span class=\"o\">:</span><span class=\"n\">forEvent</span><span class=\"o\">:</span><span class=\"p\">);</span>\n        <span class=\"n\">Method</span> <span class=\"n\">methodA</span> <span class=\"o\">=</span>   <span class=\"n\">class_getInstanceMethod</span><span class=\"p\">(</span><span class=\"n\">self</span><span class=\"p\">,</span><span class=\"n\">selA</span><span class=\"p\">);</span>\n        <span class=\"n\">Method</span> <span class=\"n\">methodB</span> <span class=\"o\">=</span> <span class=\"n\">class_getInstanceMethod</span><span class=\"p\">(</span><span class=\"n\">self</span><span class=\"p\">,</span> <span class=\"n\">selB</span><span class=\"p\">);</span>\n        <span class=\"c1\">//将 methodB的实现 添加到系统方法中 也就是说 将 methodA方法指针添加成 方法methodB的  返回值表示是否添加成功</span>\n        <span class=\"n\">BOOL</span> <span class=\"n\">isAdd</span> <span class=\"o\">=</span> <span class=\"n\">class_addMethod</span><span class=\"p\">(</span><span class=\"n\">self</span><span class=\"p\">,</span> <span class=\"n\">selA</span><span class=\"p\">,</span> <span class=\"n\">method_getImplementation</span><span class=\"p\">(</span><span class=\"n\">methodB</span><span class=\"p\">),</span> <span class=\"n\">method_getTypeEncoding</span><span class=\"p\">(</span><span class=\"n\">methodB</span><span class=\"p\">));</span>\n        <span class=\"c1\">//添加成功了 说明 本类中不存在methodB 所以此时必须将方法b的实现指针换成方法A的，否则 b方法将没有实现。</span>\n        <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">isAdd</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n            <span class=\"n\">class_replaceMethod</span><span class=\"p\">(</span><span class=\"n\">self</span><span class=\"p\">,</span> <span class=\"n\">selB</span><span class=\"p\">,</span> <span class=\"n\">method_getImplementation</span><span class=\"p\">(</span><span class=\"n\">methodA</span><span class=\"p\">),</span> <span class=\"n\">method_getTypeEncoding</span><span class=\"p\">(</span><span class=\"n\">methodA</span><span class=\"p\">));</span>\n        <span class=\"p\">}</span><span class=\"k\">else</span><span class=\"p\">{</span>\n            <span class=\"c1\">//添加失败了 说明本类中 有methodB的实现，此时只需要将 methodA和methodB的IMP互换一下即可。</span>\n            <span class=\"n\">method_exchangeImplementations</span><span class=\"p\">(</span><span class=\"n\">methodA</span><span class=\"p\">,</span> <span class=\"n\">methodB</span><span class=\"p\">);</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">});</span>\n<span class=\"p\">}</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>(姑且先不吐槽cv大法)</p>\n\n<p><strong>为何在组件化之前不会死循环，在组件化之后造成了死循环？</strong></p>\n\n<h4 id=\"213-问题定位\">2.1.3 问题定位：</h4>\n\n<p>通过控制变量法可以初步判断：<strong>由于Pod集成方式改变造成的crash</strong></p>\n\n<p>load方法，是类加载时的调用，怀疑是加载时序发生了变化，导致crash暴露出来</p>\n\n<p>随即展开类加载实验：主工程及Pod的类加载探索：</p>\n\n<p>存在Pod库的类加载：</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n</pre></td><td class=\"rouge-code\"><pre>2023-06-28 09:19:26.104245+0800 TestUI[2809:1230318] [+ (void)load]:[Pod] UIControl (ClickTimeSpace) load\n2023-06-28 09:19:26.108615+0800 TestUI[2809:1230318] [+ (void)load]:[Pod] UIImage (Bundle) load\n2023-06-28 09:19:26.108626+0800 TestUI[2809:1230318] [+ (void)load]:[Pod] UIImage (Custom) load\n2023-06-28 09:19:26.108637+0800 TestUI[2809:1230318] [+ (void)load]:[Pod] UIImageView (YPCCreateQRCode) load\n2023-06-28 09:19:26.108647+0800 TestUI[2809:1230318] [+ (void)load]:[Pod] UILabel (YPCSpaceLabel) load\n2023-06-28 09:19:26.108670+0800 TestUI[2809:1230318] [+ (void)load]:[Pod] UIResponder (KTRouter) load\n2023-06-28 09:19:26.110711+0800 TestUI[2809:1230318] [+ (void)load]:[Project]NSObject (Sb) load\n2023-06-28 09:19:26.110743+0800 TestUI[2809:1230318] [+ (void)load]:[Project]UITextField (Sub) load\n2023-06-28 09:19:26.110777+0800 TestUI[2809:1230318] [+ (void)load]:[Project]UIResponder (Super) load\n2023-06-28 09:19:26.110787+0800 TestUI[2809:1230318] [+ (void)load]:[Project]UIControl (Test) load\n2023-06-28 09:19:26.114212+0800 TestUI[2809:1230318] [+ (void)load]:[Project]UIView (Base) load\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>只有主工程的类加载：</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n</pre></td><td class=\"rouge-code\"><pre>2023-06-28 09:25:27.432494+0800 TestUI[2821:1235269] [+ (void)load]:[Project]UIImageView (SubImgV) load\n2023-06-28 09:25:27.432528+0800 TestUI[2821:1235269] [+ (void)load]:[Project]NSObject (Sb) load\n2023-06-28 09:25:27.432559+0800 TestUI[2821:1235269] [+ (void)load]:[Project]UITextField (Sub) load\n2023-06-28 09:25:27.432570+0800 TestUI[2821:1235269] [+ (void)load]:[Project]UITextView (SubTv) load\n2023-06-28 09:25:27.432580+0800 TestUI[2821:1235269] [+ (void)load]:[Project]UIButton (Test) load\n2023-06-28 09:25:27.432592+0800 TestUI[2821:1235269] [+ (void)load]:[Project]UIResponder (Super) load\n2023-06-28 09:25:27.432602+0800 TestUI[2821:1235269] [+ (void)load]:[Project]UIControl (Test) load\n2023-06-28 09:25:27.435639+0800 TestUI[2821:1235269] [+ (void)load]:[Project]UIView (Base) load\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>通过上述日志打印得出：<strong>Pod库里的类加载先于主工程</strong></p>\n\n<p>因此结论：在主工程时，先加载了UIButton的load方法，而UIButton无此方法：</p>\n\n<div class=\"language-objc highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c1\">//在UIControl存在此方法,而UIButton无此方法：</span>\n<span class=\"k\">-</span> <span class=\"p\">(</span><span class=\"kt\">void</span><span class=\"p\">)</span><span class=\"nf\">sendAction</span><span class=\"p\">:(</span><span class=\"n\">SEL</span><span class=\"p\">)</span><span class=\"nv\">action</span> <span class=\"nf\">to</span><span class=\"p\">:(</span><span class=\"n\">nullable</span> <span class=\"n\">id</span><span class=\"p\">)</span><span class=\"nv\">target</span> <span class=\"nf\">forEvent</span><span class=\"p\">:(</span><span class=\"n\">nullable</span> <span class=\"n\">UIEvent</span> <span class=\"o\">*</span><span class=\"p\">)</span><span class=\"nv\">event</span><span class=\"p\">;</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>在先交换UIButton中的sendAction之后，再交换UIControl中的sendAction，sendAction方法能被正常交换</p>\n\n<p>反之：在Pod工程中，先交换了UIControl中的sendAction之后，再交换UIButton中的sendAction，执行两次相同交换等于恢复了没有交换，当方法调用时：</p>\n\n<div class=\"language-objc highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c1\">//当我们按钮点击事件 sendAction 时  将会执行  mySendAction</span>\n<span class=\"k\">-</span> <span class=\"p\">(</span><span class=\"kt\">void</span><span class=\"p\">)</span><span class=\"nf\">mySendAction</span><span class=\"p\">:(</span><span class=\"n\">SEL</span><span class=\"p\">)</span><span class=\"nv\">action</span> <span class=\"nf\">to</span><span class=\"p\">:(</span><span class=\"n\">id</span><span class=\"p\">)</span><span class=\"nv\">target</span> <span class=\"nf\">forEvent</span><span class=\"p\">:(</span><span class=\"n\">UIEvent</span> <span class=\"o\">*</span><span class=\"p\">)</span><span class=\"nv\">event</span>\n<span class=\"p\">{</span>\n  \t<span class=\"c1\">//xxx</span>\n    <span class=\"c1\">//此处 methodA和methodB方法IMP互换了，实际上执行 sendAction；所以不会死循环</span>\n    <span class=\"p\">[</span><span class=\"n\">self</span> <span class=\"nf\">mySendAction</span><span class=\"p\">:</span><span class=\"n\">action</span> <span class=\"nf\">to</span><span class=\"p\">:</span><span class=\"n\">target</span> <span class=\"n\">forEvent</span><span class=\"o\">:</span><span class=\"n\">event</span><span class=\"p\">];</span>\n<span class=\"p\">}</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>无法回到sendAction，造成了死循环详细排查代码，看到UIControl的Category与UIButton的Category写了一模一样的 load方法交换：</p>\n\n\n\n                <hr style=\"visibility: hidden;\">\n                <ul class=\"pager\">\n                    \n                    <li class=\"previous\">\n                        <a href=\"/2023/07/31/6-iOS-%E7%BB%84%E4%BB%B6%E5%8C%96-%E5%91%BD%E5%90%8D%E6%B3%A8%E9%87%8A%E7%AF%87/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"iOS组件化实践之：类命名注释篇\">\n                        Previous<br>\n                        <span>iOS组件化实践之：类命名注释篇</span>\n                        </a>\n                    </li>\n                    \n                    \n                    <li class=\"next\">\n                        <a href=\"/2023/08/03/iOS-%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%9C%A8%E5%86%85%E7%BD%91%E8%81%94%E8%B0%83%E6%97%B6%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"iOS客户端在内网联调时的解决方案\">\n                        Next<br>\n                        <span>iOS客户端在内网联调时的解决方案</span>\n                        </a>\n                    </li>\n                    \n                </ul>\n                <hr style=\"visibility: hidden;\">\n\n                \n                <!-- disqus 评论框 start -->\n                <div class=\"comment\">\n                    <div id=\"disqus_thread\" class=\"disqus-thread\"></div>\n                </div>\n                <!-- disqus 评论框 end -->\n                \n\n                \n            </div>  \n\n    <!-- Side Catalog Container -->\n        \n            <div class=\"\n                col-lg-2 col-lg-offset-0\n                visible-lg-block\n                sidebar-container\n                catalog-container\">\n                <div class=\"side-catalog\">\n                    <hr class=\"hidden-sm hidden-xs\">\n                    <h5>\n                        <a class=\"catalog-toggle\" href=\"#\">CATALOG</a>\n                    </h5>\n                    <ul class=\"catalog-body\"></ul>\n                </div>\n            </div>\n        \n\n    <!-- Sidebar Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                sidebar-container\">\n\n                <!-- Featured Tags -->\n                \n\n\n<section>\n    \n        <hr class=\"hidden-sm hidden-xs\">\n    \n    <h5><a href=\"/archive/\">FEATURED TAGS</a></h5>\n    <div class=\"tags\">\n        \n        \n        \n        \n        \n    </div>\n</section>\n\n\n                <!-- Friends Blog -->\n                \n            </div>\n        </div>\n    </div>\n</article>\n\n<!-- add support for mathjax by voleking-->\n\n\n\n\n\n\n<!-- disqus 公共JS代码 start (一个网页只需插入一次) -->\n<script type=\"text/javascript\">\n    /* * * CONFIGURATION VARIABLES * * */\n    var disqus_shortname = \"Cyp\";\n    var disqus_identifier = \"/2023/08/02/iOS-组件化实践之-遇到的问题及解决过程纪要-持续更新中\";\n    var disqus_url = \"http://localhost:4000/2023/08/02/iOS-%E7%BB%84%E4%BB%B6%E5%8C%96%E5%AE%9E%E8%B7%B5%E4%B9%8B-%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98%E5%8F%8A%E8%A7%A3%E5%86%B3%E8%BF%87%E7%A8%8B%E7%BA%AA%E8%A6%81-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0%E4%B8%AD/\";\n\n    (function() {\n        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;\n        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';\n        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);\n    })();\n</script>\n<!-- disqus 公共JS代码 end -->\n\n\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n      var d = document, t = 'script',\n          o = d.createElement(t),\n          s = d.getElementsByTagName(t)[0];\n      o.src = u;\n      if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n      s.parentNode.insertBefore(o, s);\n    }\n</script>\n<!-- anchor-js, Doc:http://bryanbraun.github.io/anchorjs/ -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/anchor-js/1.1.1/anchor.min.js\",function(){\n        anchors.options = {\n          visible: 'hover',\n          placement: 'right',\n          // icon: '#'\n        };\n        anchors.add().remove('.intro-header h1').remove('.subheading').remove('.sidebar-container h5');\n    })\n</script>\n<style>\n    /* place left on bigger screen */\n    @media all and (min-width: 800px) {\n        .anchorjs-link{\n            position: absolute;\n            left: -0.75em;\n            font-size: 1.1em;\n            margin-top : -0.1em;\n        }\n    }\n</style>\n\n\n\n    <!-- Footer -->\n<footer>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <!-- SNS Link -->\n                \n\n\n<ul class=\"list-inline text-center\">\n\n\n  \n  \n  \n  \n  \n  \n  \n</ul>\n\n                <p class=\"copyright text-muted\">\n                    Copyright &copy; PaysonChen Blog 2024\n                    <br>\n                    <!-- Powered by <a href=\"http://huangxuan.me\">Hux Blog</a> | -->\n                 <!--    <iframe style=\"margin-left: 2px; margin-bottom:-5px;\" frameborder=\"0\" scrolling=\"0\" width=\"100px\"\n                        height=\"20px\"\n                        src=\"https://ghbtns.com/github-btn.html?user=huxpro&repo=huxpro.github.io&type=star&count=true\">\n                    </iframe> -->\n                </p>\n            </div>\n        </div>\n    </div>\n</footer>\n\n<!-- jQuery -->\n<script src=\"/js/jquery.min.js \"></script>\n\n<!-- Bootstrap Core JavaScript -->\n<!-- Currently, only navbar scroll-down effect at desktop still depends on this -->\n<script src=\"/js/bootstrap.min.js \"></script>\n\n<!-- Custom Theme JavaScript -->\n<script src=\"/js/hux-blog.min.js \"></script>\n\n<!-- Simple Jekyll Search -->\n<script src=\"/js/simple-jekyll-search.min.js\"></script>\n\n<!-- Service Worker -->\n\n<script src=\"/js/snackbar.js \"></script>\n<script src=\"/js/sw-registration.js \"></script>\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n        var d = document, t = 'script',\n            o = d.createElement(t),\n            s = d.getElementsByTagName(t)[0];\n        o.src = u;\n        if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n        s.parentNode.insertBefore(o, s);\n    }\n</script>\n\n<!--\n     Because of the native support for backtick-style fenced code blocks\n     right within the Markdown is landed in Github Pages,\n     From V1.6, There is no need for Highlight.js,\n     so Huxblog drops it officially.\n\n     - https://github.com/blog/2100-github-pages-now-faster-and-simpler-with-jekyll-3-0\n     - https://help.github.com/articles/creating-and-highlighting-code-blocks/\n     - https://github.com/jneen/rouge/wiki/list-of-supported-languages-and-lexers\n-->\n<!--\n    <script>\n        async(\"http://cdn.bootcss.com/highlight.js/8.6/highlight.min.js\", function(){\n            hljs.initHighlightingOnLoad();\n        })\n    </script>\n    <link href=\"http://cdn.bootcss.com/highlight.js/8.6/styles/github.min.css\" rel=\"stylesheet\">\n-->\n\n\n\n\n\n\n\n<!--fastClick.js -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/fastclick/1.0.6/fastclick.min.js\", function () {\n        var $nav = document.querySelector(\"nav\");\n        if ($nav) FastClick.attach($nav);\n    })\n</script>\n\n\n<!-- Google Analytics -->\n\n\n\n<!-- Baidu Tongji -->\n\n\n\n<!-- Side Catalog -->\n\n<script type=\"text/javascript\">\n    function generateCatalog(selector) {\n\n        // interop with multilangual \n        if ('' == 'true') {\n            _containerSelector = 'div.post-container.active'\n        } else {\n            _containerSelector = 'div.post-container'\n        }\n\n        // init\n        var P = $(_containerSelector), a, n, t, l, i, c;\n        a = P.find('h1,h2,h3,h4,h5,h6');\n\n        // clean\n        $(selector).html('')\n\n        // appending\n        a.each(function () {\n            n = $(this).prop('tagName').toLowerCase();\n            i = \"#\" + $(this).prop('id');\n            t = $(this).text();\n            c = $('<a href=\"' + i + '\" rel=\"nofollow\">' + t + '</a>');\n            l = $('<li class=\"' + n + '_nav\"></li>').append(c);\n            $(selector).append(l);\n        });\n        return true;\n    }\n\n    generateCatalog(\".catalog-body\");\n\n    // toggle side catalog\n    $(\".catalog-toggle\").click((function (e) {\n        e.preventDefault();\n        $('.side-catalog').toggleClass(\"fold\")\n    }))\n\n    /*\n     * Doc: https://github.com/davist11/jQuery-One-Page-Nav\n     * Fork by Hux to support padding\n     */\n    async(\"/js/jquery.nav.js\", function () {\n        $('.catalog-body').onePageNav({\n            currentClass: \"active\",\n            changeHash: !1,\n            easing: \"swing\",\n            filter: \"\",\n            scrollSpeed: 700,\n            scrollOffset: 0,\n            scrollThreshold: .2,\n            begin: null,\n            end: null,\n            scrollChange: null,\n            padding: 80\n        });\n    });\n</script>\n\n\n\n<!-- Multi-Lingual -->\n\n\n<!-- Simple Jekyll Search -->\n<script>\n    // https://stackoverflow.com/questions/1912501/unescape-html-entities-in-javascript\n    function htmlDecode(input) {\n        var e = document.createElement('textarea');\n        e.innerHTML = input;\n        // handle case of empty input\n        return e.childNodes.length === 0 ? \"\" : e.childNodes[0].nodeValue;\n    }\n\n    SimpleJekyllSearch({\n        searchInput: document.getElementById('search-input'),\n        resultsContainer: document.getElementById('search-results'),\n        json: '/search.json',\n        searchResultTemplate: '<div class=\"post-preview item\"><a href=\"{url}\"><h2 class=\"post-title\">{title}</h2><h3 class=\"post-subtitle\">{subtitle}</h3><hr></a></div>',\n        noResultsText: 'No results',\n        limit: 50,\n        fuzzy: false,\n        // a hack to get escaped subtitle unescaped. for some reason, \n        // post.subtitle w/o escape filter nuke entire search.\n        templateMiddleware: function (prop, value, template) {\n            if (prop === 'subtitle' || prop === 'title') {\n                if (value.indexOf(\"code\")) {\n                    return htmlDecode(value);\n                } else {\n                    return value;\n                }\n            }\n        }\n    });\n\n    $(document).ready(function () {\n        var $searchPage = $('.search-page');\n        var $searchOpen = $('.search-icon');\n        var $searchClose = $('.search-icon-close');\n        var $searchInput = $('#search-input');\n        var $body = $('body');\n\n        $searchOpen.on('click', function (e) {\n            e.preventDefault();\n            $searchPage.toggleClass('search-active');\n            var prevClasses = $body.attr('class') || '';\n            setTimeout(function () {\n                $body.addClass('no-scroll');\n            }, 400)\n\n            if ($searchPage.hasClass('search-active')) {\n                $searchClose.on('click', function (e) {\n                    e.preventDefault();\n                    $searchPage.removeClass('search-active');\n                    $body.attr('class', prevClasses);  // from closure \n                });\n                $searchInput.focus();\n            }\n        });\n    });\n</script>\n\n\n<!-- Image to hack wechat -->\n<img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\" />\n<!-- Migrate from head to bottom, no longer block render and still work -->\n\n</body>\n\n</html>\n","excerpt":"<h1 id=\"ios组件化实践之遇到的问题及解决过程纪要持续更新中\">iOS组件化实践之：遇到的问题及解决过程纪要(持续更新中)</h1>\n","url":"/2023/08/02/iOS-%E7%BB%84%E4%BB%B6%E5%8C%96%E5%AE%9E%E8%B7%B5%E4%B9%8B-%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98%E5%8F%8A%E8%A7%A3%E5%86%B3%E8%BF%87%E7%A8%8B%E7%BA%AA%E8%A6%81-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0%E4%B8%AD/","next":{"id":"/2023/08/03/iOS-客户端在内网联调时的解决方案","tags":[],"relative_path":"_posts/2023-08-03-iOS-客户端在内网联调时的解决方案.md","collection":"posts","name":"2023-08-03-iOS-客户端在内网联调时的解决方案.md","url":"/2023/08/03/iOS-%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%9C%A8%E5%86%85%E7%BD%91%E8%81%94%E8%B0%83%E6%97%B6%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/","title":"iOS客户端在内网联调时的解决方案","date":"2023-08-03 00:00:00 +0800","categories":[],"path":"_posts/2023-08-03-iOS-客户端在内网联调时的解决方案.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/home-bg-geek.jpg","slug":"iOS-客户端在内网联调时的解决方案","ext":".md"},"title":"iOS组件化实践之：遇到的问题及解决过程纪要(持续更新中)","date":"2023-08-02 00:00:00 +0800","categories":[],"path":"_posts/2023-08-02-iOS-组件化实践之-遇到的问题及解决过程纪要-持续更新中.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/home-bg-geek.jpg","slug":"iOS-组件化实践之-遇到的问题及解决过程纪要-持续更新中","ext":".md"},"title":"iOS组件化实践之：类命名注释篇","date":"2023-07-31 00:00:00 +0800","categories":[],"path":"_posts/2023-07-31-6-iOS-组件化-命名注释篇.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/home-bg-geek.jpg","slug":"6-iOS-组件化-命名注释篇","ext":".md"},{"id":"/2023/07/26/5-iOS组件化-资源组件库","tags":[],"relative_path":"_posts/2023-07-26-5-iOS组件化-资源组件库.md","collection":"posts","content":"<h1 id=\"ios组件化实现之资源组件库\">iOS组件化实现之：资源组件库</h1>\n\n<h2 id=\"1-资源有哪些\">1 资源有哪些</h2>\n\n<p>​\t笼统的可以说，只要不是代码文件的，都可以算是资源文件，举些例子，包括但不限于：图片、音频、视频、动画、字体、多语言文件(.strings)、各类资源包、内置数据库、二进制加密文件不等</p>\n\n<h2 id=\"2-为什么要做\">2 为什么要做</h2>\n\n<p>​\t存在一些可复用的资源，举些例子，包括但不限于：</p>\n\n<ul>\n  <li>\n    <p>通用样式图标</p>\n\n    <p>导航条图标、头像、按钮、单/复选框、通用背景图片等</p>\n  </li>\n  <li>\n    <p>通用媒体文件</p>\n\n    <p>通用的点击音效、提示音、过场动画、加载动画等</p>\n  </li>\n  <li>\n    <p>其他通用文件</p>\n\n    <p>城市列表、字体、第三方预置资源等</p>\n  </li>\n</ul>\n\n<p>由于部分资源是有通用性，因此将这些通用资源提取出来，形成组件，可服务于更多项目，提升集成的效率，降低研发成本</p>\n\n<h2 id=\"3-怎么做\">3 怎么做</h2>\n\n<h3 id=\"31-新建一个pod私有库\">3.1 新建一个Pod私有库</h3>\n\n<p><a href=\"https://paysonchen.cn/2023/07/26/4-iOS%E7%BB%84%E4%BB%B6%E5%8C%96%E6%A8%A1%E6%9D%BF/\">此处省略一万字(查看另一篇文章)</a></p>\n\n<h3 id=\"32-迁移主工程资源\">3.2 迁移主工程资源</h3>\n\n<p>主工程：</p>\n\n<p>中的资源一般散落在各处，即遍是不一定全部存放在asset集合中，可以通过Xcode Project Navigator底部的搜索栏，通过后缀名(.png / .jpg /.webp /.mp3 /,mp4  ……)检索出资源</p>\n\n<p>资源组件库：</p>\n\n<p>asset文件夹下存放主工程迁移的资源。</p>\n\n<p>存放形式可以以下形式：</p>\n\n<ul>\n  <li>xcassets集合</li>\n  <li>散落的资源文件</li>\n</ul>\n\n<p>配置podspec：</p>\n\n<p>通过指定resource_bundles进行资源的配置</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n</pre></td><td class=\"rouge-code\"><pre>   <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">resource_bundles</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n     <span class=\"s1\">'PSCResource'</span> <span class=\"o\">=&gt;</span> <span class=\"p\">[</span>\n     <span class=\"s1\">'PSCResource/Assets/PSCCommon.xcassets'</span><span class=\"p\">,</span>\n     <span class=\"s1\">'PSCResource/Assets/PSCCommonResources/**/*'</span><span class=\"p\">,</span>\n     <span class=\"s1\">'PSCResource/Assets/XXProj.xcassets'</span><span class=\"p\">,</span>\n     <span class=\"s1\">'PSCResource/Assets/XXProjResources/**/*'</span><span class=\"p\">]</span>\n   <span class=\"p\">}</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h3 id=\"33-资源读取方式\">3.3 资源读取方式</h3>\n\n<p>资源组件化之前，使用一般是</p>\n\n<pre><code class=\"language-objective-c\">//图片:imageNamed\n[UIImage imageNamed:@\"pic\"];\n\n//资源:通过mainBundle进行：\n[[NSBundle mainBundle] pathForResource:@\"name\" ofType:@\"ext\"];\n</code></pre>\n\n<p>这是因为，主工程里的资源，一般是打包到xx.app的根目录（xcasset以asset.car存在）</p>\n\n<p>组件库里的资源是打包 xx.framework/xx.bundle</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n</pre></td><td class=\"rouge-code\"><pre>……/Debug-iphoneos/xxx.app/Frameworks/xx.framework/xx.bundle/pic.png\n……/Debug-iphoneos/xxx.app/Frameworks/xx.framework/xx.bundle/asset.car\n……\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>直接通过下列方法获取为空</p>\n\n<pre><code class=\"language-objective-c\">//组件库资源，通过以下方法获取为nil\n[UIImage imageNamed:@\"pic\"];\n[[NSBundle mainBundle] pathForResource:@\"name\" ofType:@\"ext\"];\n</code></pre>\n\n<p>组件库资源获取方法是为下列类添加类别</p>\n\n<ul>\n  <li>UIImage:</li>\n</ul>\n\n<pre><code class=\"language-objective-c\">@interface UIImage (PSCResource)\n\n/// 从 PSCResource 通过图片名称获取UIImage\n/// - Parameter name: 图片名称\n+ (UIImage *)pscImageNamed:(NSString *)name;\n\n@end\n\n@implementation UIImage (PSCResource)\n\n+ (UIImage *)pscImageNamed:(NSString *)name{\n    NSBundle *bundle = [NSBundle bundleForClass:NSClassFromString(kCurResPodName)];\n    NSURL *url = [bundle URLForResource:kCurResBunldeName withExtension:@\"bundle\"];\n    if (url) {\n        NSBundle *imageBundle = [NSBundle bundleWithURL:url];\n        UIImage *img = [UIImage imageNamed:name inBundle:imageBundle compatibleWithTraitCollection:nil];\n        if (img) {\n            return img;\n        }\n    }\n    //这里兜个底，兼容资源还在主工程的时候，使用mainBundle\n    return [UIImage imageNamed:name];\n}\n\n@end\n</code></pre>\n\n<ul>\n  <li>NSBunlde:</li>\n</ul>\n\n<pre><code class=\"language-objective-c\">@interface NSBundle (PSCResource)\n/// 私有库获取资源\n/// - Parameters:\n///   - name: 资源名\n///   - ext: 资源类别\n+ (NSString *)pscPathForResource:(NSString *)name ofType:(NSString *)ext;\n@end\n\n@implementation NSBundle (PSCResource)\n+ (NSString *)pscPathForResource:(NSString *)name ofType:(NSString *)ext {\n    \n    NSBundle *bundle = [NSBundle bundleForClass:NSClassFromString(kCurResPodName)];\n    NSURL *url = [bundle URLForResource:kCurResBunldeName withExtension:@\"bundle\"];\n    if (url) {\n        NSBundle *resBundle = [NSBundle bundleWithURL:url];\n        NSString *path = [resBundle pathForResource:name ofType:ext];\n        if (path) {\n            return path;\n        }\n    }\n    //这里兜个底，兼容资源还在主工程的时候，使用mainBundle\n    return [[NSBundle mainBundle] pathForResource:name ofType:ext];\n}\n@end\n</code></pre>\n\n<h3 id=\"34-主工程读取替换\">3.4 主工程读取替换</h3>\n\n<p>检索主工程里所有的方法：</p>\n\n<div class=\"language-objc highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n</pre></td><td class=\"rouge-code\"><pre><span class=\"p\">[</span><span class=\"n\">UIImage</span> <span class=\"nf\">imageNamed</span><span class=\"p\">:</span><span class=\"s\">@\"pic\"</span><span class=\"p\">];</span>\n<span class=\"p\">[[</span><span class=\"n\">NSBundle</span> <span class=\"nf\">mainBundle</span><span class=\"p\">]</span> <span class=\"nf\">pathForResource</span><span class=\"p\">:</span><span class=\"s\">@\"name\"</span> <span class=\"nf\">ofType</span><span class=\"p\">:</span><span class=\"s\">@\"ext\"</span><span class=\"p\">];</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>替换成:</p>\n\n<pre><code class=\"language-objective-c\">[UIImage pscImageNamed:@\"xx\"]\nNSString *hotPath = [NSBundle pscPathForResource:@\"yy\" ofType:@\"zz\"];\n</code></pre>\n\n<p>最后检验下上述调用是否正常？</p>\n","name":"2023-07-26-5-iOS组件化-资源组件库.md","previous":{"id":"/2023/07/26/4-iOS组件化模板","tags":[],"relative_path":"_posts/2023-07-26-4-iOS组件化模板.md","collection":"posts","content":"<h1 id=\"ios组件化实践之新建一个pod组件库\">iOS组件化实践之：新建一个Pod组件库</h1>\n\n<h2 id=\"0背景\">0.背景</h2>\n\n<p>在IOS组件化的实践过程中，</p>\n\n<ul>\n  <li>规划期间需要对组件进行定义、功能划分、接口设计等</li>\n  <li>实践期间需要对组件进行创建，迁移主工程能力等</li>\n</ul>\n\n<p>这过程，就看你需要较为频繁地创建Pod组件库，因此对于了解一下，Pod组件的创建，及其模板的使用与修改，变成较为重要</p>\n\n<h2 id=\"1-通过常规模板创建\">1. 通过常规模板创建</h2>\n\n<p>CocoaPods提供的创建指令：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>pod lib create xx\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>通过输出可以看到：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>Cloning <span class=\"sb\">`</span>https://github.com/CocoaPods/pod-template.git<span class=\"sb\">`</span> into <span class=\"sb\">`</span>xx<span class=\"sb\">`</span><span class=\"nb\">.</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>此命令默认从 <a href=\"https://github.com/CocoaPods/pod-template\">github Pod-template</a>，下载默认模板进行创建，依次回答几个问题之后</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n</pre></td><td class=\"rouge-code\"><pre>What platform <span class=\"k\">do </span>you want to use?? <span class=\"o\">[</span> iOS / macOS <span class=\"o\">]</span>\n <span class=\"o\">&gt;</span> \nios\nWhat language <span class=\"k\">do </span>you want to use?? <span class=\"o\">[</span> Swift / ObjC <span class=\"o\">]</span>\n <span class=\"o\">&gt;</span> \nswift\nWould you like to include a demo application with your library? <span class=\"o\">[</span> Yes / No <span class=\"o\">]</span>\n <span class=\"o\">&gt;</span> \n<span class=\"nb\">yes\n</span>Which testing frameworks will you use? <span class=\"o\">[</span> Quick / None <span class=\"o\">]</span>\n <span class=\"o\">&gt;</span> \nquick\nWould you like to <span class=\"k\">do </span>view based testing? <span class=\"o\">[</span> Yes / No <span class=\"o\">]</span>\n <span class=\"o\">&gt;</span> \n<span class=\"nb\">yes</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>当前路径下就生成了一个Pod仓库，Spec文件如下：</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n</pre></td><td class=\"rouge-code\"><pre><span class=\"no\">Pod</span><span class=\"o\">::</span><span class=\"no\">Spec</span><span class=\"p\">.</span><span class=\"nf\">new</span> <span class=\"k\">do</span> <span class=\"o\">|</span><span class=\"n\">s</span><span class=\"o\">|</span>\n  <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">name</span>             <span class=\"o\">=</span> <span class=\"s1\">'xx'</span>\n  <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">version</span>          <span class=\"o\">=</span> <span class=\"s1\">'0.1.0'</span>\n  <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">summary</span>          <span class=\"o\">=</span> <span class=\"s1\">'A short description of xx.'</span>\n\n<span class=\"c1\"># This description is used to generate tags and improve search results.</span>\n<span class=\"c1\">#   * Think: What does it do? Why did you write it? What is the focus?</span>\n<span class=\"c1\">#   * Try to keep it short, snappy and to the point.</span>\n<span class=\"c1\">#   * Write the description between the DESC delimiters below.</span>\n<span class=\"c1\">#   * Finally, don't worry about the indent, CocoaPods strips it!</span>\n\n  <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">description</span>      <span class=\"o\">=</span> <span class=\"o\">&lt;&lt;-</span><span class=\"no\">DESC</span><span class=\"sh\">\nTODO: Add long description of the pod here.\n</span><span class=\"no\">                       DESC</span>\n\n  <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">homepage</span>         <span class=\"o\">=</span> <span class=\"s1\">'https://github.com/chenyp/xx'</span>\n  <span class=\"c1\"># s.screenshots     = 'www.example.com/screenshots_1', 'www.example.com/screenshots_2'</span>\n  <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">license</span>          <span class=\"o\">=</span> <span class=\"p\">{</span> <span class=\"ss\">:type</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'MIT'</span><span class=\"p\">,</span> <span class=\"ss\">:file</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'LICENSE'</span> <span class=\"p\">}</span>\n  <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">author</span>           <span class=\"o\">=</span> <span class=\"p\">{</span> <span class=\"s1\">'chenyp'</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'165685965@qq.com'</span> <span class=\"p\">}</span>\n  <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">source</span>           <span class=\"o\">=</span> <span class=\"p\">{</span> <span class=\"ss\">:git</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'https://github.com/chenyp/xx.git'</span><span class=\"p\">,</span> <span class=\"ss\">:tag</span> <span class=\"o\">=&gt;</span> <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">version</span><span class=\"p\">.</span><span class=\"nf\">to_s</span> <span class=\"p\">}</span>\n  <span class=\"c1\"># s.social_media_url = 'https://twitter.com/&lt;TWITTER_USERNAME&gt;'</span>\n\n  <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">ios</span><span class=\"p\">.</span><span class=\"nf\">deployment_target</span> <span class=\"o\">=</span> <span class=\"s1\">'10.0'</span>\n\n  <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">source_files</span> <span class=\"o\">=</span> <span class=\"s1\">'xx/Classes/**/*'</span>\n  \n  <span class=\"c1\"># s.resource_bundles = {</span>\n  <span class=\"c1\">#   'xx' =&gt; ['xx/Assets/*.png']</span>\n  <span class=\"c1\"># }</span>\n\n  <span class=\"c1\"># s.public_header_files = 'Pod/Classes/**/*.h'</span>\n  <span class=\"c1\"># s.frameworks = 'UIKit', 'MapKit'</span>\n  <span class=\"c1\"># s.dependency 'AFNetworking', '~&gt; 2.3'</span>\n<span class=\"k\">end</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h2 id=\"2-通过自定义模板创建\">2. 通过自定义模板创建</h2>\n\n<p>一般而言，不建议通过上述方式进行创建，默认以git全局配置的name、email字段，加上github主页进行填充，因为默认模板所创建的诸多字段是必要修改的（不改无法通过私有组件部署）：</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n</pre></td><td class=\"rouge-code\"><pre>  <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">homepage</span>         <span class=\"o\">=</span> <span class=\"s1\">'https://github.com/chenyp/xx'</span>\n  <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">author</span>           <span class=\"o\">=</span> <span class=\"p\">{</span> <span class=\"s1\">'chenyp'</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'165685965@qq.com'</span> <span class=\"p\">}</span>\n  <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">source</span>           <span class=\"o\">=</span> <span class=\"p\">{</span> <span class=\"ss\">:git</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'https://github.com/chenyp/xx.git'</span><span class=\"p\">,</span> <span class=\"ss\">:tag</span> <span class=\"o\">=&gt;</span> <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">version</span><span class=\"p\">.</span><span class=\"nf\">to_s</span> <span class=\"p\">}</span>\n<span class=\"err\">……</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>由于组件化的过程是需要频繁创建多个组件仓库，如果每次都改上述字段，有可能错改漏改，导致效率低下，基于懒惰是程序员的美德这一不成文的追求（其实应该是尽量能把重复工作流程化），着手对上述模板进行修改。</p>\n\n<p>自定义模板创建：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>git clone git@github.com:CocoaPods/pod-template.git\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>通过修改仓库中的“<strong>NAME.podspec</strong>”文件中的相关字段</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n</pre></td><td class=\"rouge-code\"><pre>  <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">homepage</span>         <span class=\"o\">=</span> <span class=\"s1\">'https://内网githost/name/xx'</span>\n  <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">author</span>           <span class=\"o\">=</span> <span class=\"p\">{</span> <span class=\"s1\">'内网git提交commit姓名'</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'内网git提交commit email'</span> <span class=\"p\">}</span>\n  <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">source</span>           <span class=\"o\">=</span> <span class=\"p\">{</span> <span class=\"ss\">:git</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'https://内网githost/name/xx.git'</span><span class=\"p\">,</span> <span class=\"ss\">:tag</span> <span class=\"o\">=&gt;</span> <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">version</span><span class=\"p\">.</span><span class=\"nf\">to_s</span> <span class=\"p\">}</span>\t<span class=\"c1\">#clone 组件库地址</span>\n<span class=\"err\">……</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>修改后将上述模板放到git仓库上，执行：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre> pod lib create xx  <span class=\"nt\">--template-url</span><span class=\"o\">=</span>ssh://内网githost/ios/Pods/Tmplate/XXX_Pod_Tmeplate.git\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h2 id=\"3-通过高度自定义模板创建\">3. 通过高度自定义模板创建</h2>\n\n<p>一般而言，到上述即可完成基础的模板自定义，减少创建私有库后所需的重复修改字段的工作量，但是对于下列选项的一致性，如果能省略冗余及提高统一性，自然更好了：</p>\n\n<ul class=\"task-list\">\n  <li class=\"task-list-item\">\n    <p><input type=\"checkbox\" class=\"task-list-item-checkbox\" disabled=\"disabled\" checked=\"checked\" />平台选择的冗余（iOS）</p>\n  </li>\n  <li class=\"task-list-item\">\n    <p><input type=\"checkbox\" class=\"task-list-item-checkbox\" disabled=\"disabled\" checked=\"checked\" />代码风格的统一（类名前缀）</p>\n  </li>\n  <li class=\"task-list-item\">\n    <p><input type=\"checkbox\" class=\"task-list-item-checkbox\" disabled=\"disabled\" />语言统一（iOS/Swift）</p>\n  </li>\n  <li class=\"task-list-item\">\n    <p><input type=\"checkbox\" class=\"task-list-item-checkbox\" disabled=\"disabled\" checked=\"checked\" />Demo工程</p>\n  </li>\n  <li class=\"task-list-item\">\n    <p><input type=\"checkbox\" class=\"task-list-item-checkbox\" disabled=\"disabled\" checked=\"checked\" />测试依赖</p>\n  </li>\n</ul>\n\n<p>这就需要对pod-template的ruby代码进行修改已达到不需要重复设定模板交互的目的：</p>\n\n<p>模板配置：TemplateConfigurator.rb</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n</pre></td><td class=\"rouge-code\"><pre>    <span class=\"k\">def</span> <span class=\"nf\">run</span>\n      <span class=\"vi\">@message_bank</span><span class=\"p\">.</span><span class=\"nf\">welcome_message</span>\n\n      <span class=\"n\">platform</span> <span class=\"o\">=</span> <span class=\"nb\">self</span><span class=\"p\">.</span><span class=\"nf\">ask_with_answers</span><span class=\"p\">(</span><span class=\"s2\">\"What platform do you want to use?\"</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s2\">\"iOS\"</span><span class=\"p\">,</span> <span class=\"s2\">\"macOS\"</span><span class=\"p\">]).</span><span class=\"nf\">to_sym</span>\n\n      <span class=\"k\">case</span> <span class=\"n\">platform</span>\n        <span class=\"k\">when</span> <span class=\"ss\">:macos</span>\n          <span class=\"no\">ConfigureMacOSSwift</span><span class=\"p\">.</span><span class=\"nf\">perform</span><span class=\"p\">(</span><span class=\"ss\">configurator: </span><span class=\"nb\">self</span><span class=\"p\">)</span>\n        <span class=\"k\">when</span> <span class=\"ss\">:ios</span>\n          <span class=\"n\">framework</span> <span class=\"o\">=</span> <span class=\"nb\">self</span><span class=\"p\">.</span><span class=\"nf\">ask_with_answers</span><span class=\"p\">(</span><span class=\"s2\">\"What language do you want to use?\"</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s2\">\"Swift\"</span><span class=\"p\">,</span> <span class=\"s2\">\"ObjC\"</span><span class=\"p\">]).</span><span class=\"nf\">to_sym</span>\n          <span class=\"k\">case</span> <span class=\"n\">framework</span>\n            <span class=\"k\">when</span> <span class=\"ss\">:swift</span>\n              <span class=\"no\">ConfigureSwift</span><span class=\"p\">.</span><span class=\"nf\">perform</span><span class=\"p\">(</span><span class=\"ss\">configurator: </span><span class=\"nb\">self</span><span class=\"p\">)</span>\n\n            <span class=\"k\">when</span> <span class=\"ss\">:objc</span>\n              <span class=\"no\">ConfigureIOS</span><span class=\"p\">.</span><span class=\"nf\">perform</span><span class=\"p\">(</span><span class=\"ss\">configurator: </span><span class=\"nb\">self</span><span class=\"p\">)</span>\n          <span class=\"k\">end</span>\n      <span class=\"k\">end</span>\n      \n      <span class=\"c1\">#……此处省略后面的代码……#</span>\n    <span class=\"k\">end</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>改为：</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n</pre></td><td class=\"rouge-code\"><pre>    <span class=\"k\">def</span> <span class=\"nf\">run</span>\n      <span class=\"vi\">@message_bank</span><span class=\"p\">.</span><span class=\"nf\">welcome_message</span>\n\n      <span class=\"c1\">#自定义模板优化：这里可以绕过了一些问题（免回答iOS、Objc）,当然如果想要设置成其他的，也可以调用其他方法，或者恢复询问式配置</span>\n      <span class=\"no\">ConfigureIOS</span><span class=\"p\">.</span><span class=\"nf\">perform</span><span class=\"p\">(</span><span class=\"ss\">configurator: </span><span class=\"nb\">self</span><span class=\"p\">)</span>\n      \n<span class=\"c1\">#      platform = self.ask_with_answers(\"What platform do you want to use?\", [\"iOS\", \"macOS\"]).to_sym</span>\n<span class=\"c1\">#</span>\n<span class=\"c1\">#      case platform</span>\n<span class=\"c1\">#        when :macos</span>\n<span class=\"c1\">#          ConfigureMacOSSwift.perform(configurator: self)</span>\n<span class=\"c1\">#        when :ios</span>\n<span class=\"c1\">#          framework = self.ask_with_answers(\"What language do you want to use?\", [\"Swift\", \"ObjC\"]).to_sym</span>\n<span class=\"c1\">#          case framework</span>\n<span class=\"c1\">#            when :swift</span>\n<span class=\"c1\">#              ConfigureSwift.perform(configurator: self)</span>\n<span class=\"c1\">#</span>\n<span class=\"c1\">#            when :objc</span>\n<span class=\"c1\">#              ConfigureIOS.perform(configurator: self)</span>\n<span class=\"c1\">#          end</span>\n<span class=\"c1\">#      end</span>\n\n      <span class=\"c1\">#……此处省略后面的代码……#</span>\n    <span class=\"k\">end</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>选择了相关语言，就在相关语言的 Configure 内配置后续的设置，例如：选择了iOS，就在ConfigureIOS.rb配置:</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n</pre></td><td class=\"rouge-code\"><pre>    <span class=\"k\">def</span> <span class=\"nf\">perform</span>\n\n      <span class=\"n\">keep_demo</span> <span class=\"o\">=</span> <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">ask_with_answers</span><span class=\"p\">(</span><span class=\"s2\">\"Would you like to include a demo application with your library\"</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s2\">\"Yes\"</span><span class=\"p\">,</span> <span class=\"s2\">\"No\"</span><span class=\"p\">]).</span><span class=\"nf\">to_sym</span>\n\n      <span class=\"n\">framework</span> <span class=\"o\">=</span> <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">ask_with_answers</span><span class=\"p\">(</span><span class=\"s2\">\"Which testing frameworks will you use\"</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s2\">\"Specta\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Kiwi\"</span><span class=\"p\">,</span> <span class=\"s2\">\"None\"</span><span class=\"p\">]).</span><span class=\"nf\">to_sym</span>\n      <span class=\"k\">case</span> <span class=\"n\">framework</span>\n        <span class=\"k\">when</span> <span class=\"ss\">:specta</span>\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_pod_to_podfile</span> <span class=\"s2\">\"Specta\"</span>\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_pod_to_podfile</span> <span class=\"s2\">\"Expecta\"</span>\n\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_line_to_pch</span> <span class=\"s2\">\"@import Specta;\"</span>\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_line_to_pch</span> <span class=\"s2\">\"@import Expecta;\"</span>\n\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">set_test_framework</span><span class=\"p\">(</span><span class=\"s2\">\"specta\"</span><span class=\"p\">,</span> <span class=\"s2\">\"m\"</span><span class=\"p\">,</span> <span class=\"s2\">\"ios\"</span><span class=\"p\">)</span>\n\n        <span class=\"k\">when</span> <span class=\"ss\">:kiwi</span>\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_pod_to_podfile</span> <span class=\"s2\">\"Kiwi\"</span>\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_line_to_pch</span> <span class=\"s2\">\"@import Kiwi;\"</span>\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">set_test_framework</span><span class=\"p\">(</span><span class=\"s2\">\"kiwi\"</span><span class=\"p\">,</span> <span class=\"s2\">\"m\"</span><span class=\"p\">,</span> <span class=\"s2\">\"ios\"</span><span class=\"p\">)</span>\n\n        <span class=\"k\">when</span> <span class=\"ss\">:none</span>\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">set_test_framework</span><span class=\"p\">(</span><span class=\"s2\">\"xctest\"</span><span class=\"p\">,</span> <span class=\"s2\">\"m\"</span><span class=\"p\">,</span> <span class=\"s2\">\"ios\"</span><span class=\"p\">)</span>\n      <span class=\"k\">end</span>\n\n      <span class=\"n\">snapshots</span> <span class=\"o\">=</span> <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">ask_with_answers</span><span class=\"p\">(</span><span class=\"s2\">\"Would you like to do view based testing\"</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s2\">\"Yes\"</span><span class=\"p\">,</span> <span class=\"s2\">\"No\"</span><span class=\"p\">]).</span><span class=\"nf\">to_sym</span>\n      <span class=\"k\">case</span> <span class=\"n\">snapshots</span>\n        <span class=\"k\">when</span> <span class=\"ss\">:yes</span>\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_pod_to_podfile</span> <span class=\"s2\">\"FBSnapshotTestCase\"</span>\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_line_to_pch</span> <span class=\"s2\">\"@import FBSnapshotTestCase;\"</span>\n\n          <span class=\"k\">if</span> <span class=\"n\">keep_demo</span> <span class=\"o\">==</span> <span class=\"ss\">:no</span>\n              <span class=\"nb\">puts</span> <span class=\"s2\">\" Putting demo application back in, you cannot do view tests without a host application.\"</span>\n              <span class=\"n\">keep_demo</span> <span class=\"o\">=</span> <span class=\"ss\">:yes</span>\n          <span class=\"k\">end</span>\n\n          <span class=\"k\">if</span> <span class=\"n\">framework</span> <span class=\"o\">==</span> <span class=\"ss\">:specta</span>\n              <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_pod_to_podfile</span> <span class=\"s2\">\"Expecta+Snapshots\"</span>\n              <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_line_to_pch</span> <span class=\"s2\">\"@import Expecta_Snapshots;\"</span>\n          <span class=\"k\">end</span>\n      <span class=\"k\">end</span>\n\n      <span class=\"n\">prefix</span> <span class=\"o\">=</span> <span class=\"kp\">nil</span>\n\n      <span class=\"kp\">loop</span> <span class=\"k\">do</span>\n        <span class=\"n\">prefix</span> <span class=\"o\">=</span> <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">ask</span><span class=\"p\">(</span><span class=\"s2\">\"What is your class prefix\"</span><span class=\"p\">).</span><span class=\"nf\">upcase</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">prefix</span><span class=\"p\">.</span><span class=\"nf\">include?</span><span class=\"p\">(</span><span class=\"s1\">' '</span><span class=\"p\">)</span>\n          <span class=\"nb\">puts</span> <span class=\"s1\">'Your class prefix cannot contain spaces.'</span><span class=\"p\">.</span><span class=\"nf\">red</span>\n        <span class=\"k\">else</span>\n          <span class=\"k\">break</span>\n        <span class=\"k\">end</span>\n      <span class=\"k\">end</span>\n\t      <span class=\"c1\">#……此处省略后面的代码……#</span>\n  <span class=\"k\">end</span>\n\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>找到相关的问答区：</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n</pre></td><td class=\"rouge-code\"><pre>    <span class=\"k\">def</span> <span class=\"nf\">perform</span>\n      <span class=\"c1\">#自定义模板优化: 这里默认需要demo，当然如果想要设置成其他的，也可以调用其他方法，或者恢复询问式配置</span>\n      <span class=\"n\">keep_demo</span> <span class=\"o\">=</span> <span class=\"s2\">\"yes\"</span><span class=\"c1\">#configurator.ask_with_answers(\"Would you like to include a demo application with your library\", [\"Yes\", \"No\"]).to_sym</span>\n      <span class=\"c1\">#自定义模板优化：: 这里默认不需要testing frameworks，当然如果想要设置成其他的，也可以调用其他方法，或者恢复询问式配置</span>\n      <span class=\"n\">framework</span> <span class=\"o\">=</span> <span class=\"s2\">\"none\"</span> <span class=\"c1\">#configurator.ask_with_answers(\"Which testing frameworks will you use\", [\"Specta\", \"Kiwi\", \"None\"]).to_sym</span>\n      <span class=\"k\">case</span> <span class=\"n\">framework</span>\n        <span class=\"k\">when</span> <span class=\"ss\">:specta</span>\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_pod_to_podfile</span> <span class=\"s2\">\"Specta\"</span>\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_pod_to_podfile</span> <span class=\"s2\">\"Expecta\"</span>\n\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_line_to_pch</span> <span class=\"s2\">\"@import Specta;\"</span>\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_line_to_pch</span> <span class=\"s2\">\"@import Expecta;\"</span>\n\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">set_test_framework</span><span class=\"p\">(</span><span class=\"s2\">\"specta\"</span><span class=\"p\">,</span> <span class=\"s2\">\"m\"</span><span class=\"p\">,</span> <span class=\"s2\">\"ios\"</span><span class=\"p\">)</span>\n\n        <span class=\"k\">when</span> <span class=\"ss\">:kiwi</span>\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_pod_to_podfile</span> <span class=\"s2\">\"Kiwi\"</span>\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_line_to_pch</span> <span class=\"s2\">\"@import Kiwi;\"</span>\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">set_test_framework</span><span class=\"p\">(</span><span class=\"s2\">\"kiwi\"</span><span class=\"p\">,</span> <span class=\"s2\">\"m\"</span><span class=\"p\">,</span> <span class=\"s2\">\"ios\"</span><span class=\"p\">)</span>\n\n        <span class=\"k\">when</span> <span class=\"ss\">:none</span>\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">set_test_framework</span><span class=\"p\">(</span><span class=\"s2\">\"xctest\"</span><span class=\"p\">,</span> <span class=\"s2\">\"m\"</span><span class=\"p\">,</span> <span class=\"s2\">\"ios\"</span><span class=\"p\">)</span>\n      <span class=\"k\">end</span>\n\n      <span class=\"c1\">#自定义模板优化：这里默认不需要view based testing，当然如果想要设置成其他的，也可以调用其他方法，或者恢复询问式配置</span>\n      <span class=\"n\">snapshots</span> <span class=\"o\">=</span> <span class=\"s2\">\"no\"</span><span class=\"c1\">#configurator.ask_with_answers(\"Would you like to do view based testing\", [\"Yes\", \"No\"]).to_sym</span>\n      <span class=\"k\">case</span> <span class=\"n\">snapshots</span>\n        <span class=\"k\">when</span> <span class=\"ss\">:yes</span>\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_pod_to_podfile</span> <span class=\"s2\">\"FBSnapshotTestCase\"</span>\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_line_to_pch</span> <span class=\"s2\">\"@import FBSnapshotTestCase;\"</span>\n\n          <span class=\"k\">if</span> <span class=\"n\">keep_demo</span> <span class=\"o\">==</span> <span class=\"ss\">:no</span>\n              <span class=\"nb\">puts</span> <span class=\"s2\">\" Putting demo application back in, you cannot do view tests without a host application.\"</span>\n              <span class=\"n\">keep_demo</span> <span class=\"o\">=</span> <span class=\"ss\">:yes</span>\n          <span class=\"k\">end</span>\n\n          <span class=\"k\">if</span> <span class=\"n\">framework</span> <span class=\"o\">==</span> <span class=\"ss\">:specta</span>\n              <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_pod_to_podfile</span> <span class=\"s2\">\"Expecta+Snapshots\"</span>\n              <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_line_to_pch</span> <span class=\"s2\">\"@import Expecta_Snapshots;\"</span>\n          <span class=\"k\">end</span>\n      <span class=\"k\">end</span>\n\n      <span class=\"n\">prefix</span> <span class=\"o\">=</span> <span class=\"kp\">nil</span>\n\n      <span class=\"kp\">loop</span> <span class=\"k\">do</span>\n      <span class=\"c1\">#自定义模板优化：这里默认prefix为PSC，当然如果想要设置成其他的，也可以调用其他方法，或者恢复询问式配置</span>\n        <span class=\"n\">prefix</span> <span class=\"o\">=</span> <span class=\"s2\">\"PSC\"</span><span class=\"c1\">#configurator.ask(\"What is your class prefix\").upcase</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">prefix</span><span class=\"p\">.</span><span class=\"nf\">include?</span><span class=\"p\">(</span><span class=\"s1\">' '</span><span class=\"p\">)</span>\n          <span class=\"nb\">puts</span> <span class=\"s1\">'Your class prefix cannot contain spaces.'</span><span class=\"p\">.</span><span class=\"nf\">red</span>\n        <span class=\"k\">else</span>\n          <span class=\"k\">break</span>\n        <span class=\"k\">end</span>\n      <span class=\"k\">end</span>\n      <span class=\"c1\">#……此处省略后面的代码……#</span>\n  <span class=\"k\">end</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>至此，优化的自定义模板已经完成，再创建另一个（如果你需要保留上面那种简易自定义）git仓库存储，一键创建更符合需求的pod私有库模板：let‘s try</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre> pod lib create xx  <span class=\"nt\">--template-url</span><span class=\"o\">=</span>ssh://内网githost/ios/Pods/Tmplate/PSC_iOS_Objc_Demo_NoneTest.git\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h2 id=\"4-如果你还是使用gem管理pod插件的话\">4. 如果你还是使用Gem管理Pod插件的话</h2>\n\n<p>一般而言，在多人团队中，需要用到Gem来管理Pod插件版本，避免由于Pod版本不一致，导致的集成与编译问题，如果你还有Gemfile需要配置的话，由于模板配置的代码最后的是：</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n</pre></td><td class=\"rouge-code\"><pre>      <span class=\"c1\"># There has to be a single file in the Classes dir</span>\n      <span class=\"c1\"># or a framework won't be created, which is now default</span>\n      <span class=\"sb\">`touch Pod/Classes/ReplaceMe.m`</span>\n\n      <span class=\"sb\">`mv ./templates/ios/* ./`</span>\n\n      <span class=\"c1\"># remove podspec for osx</span>\n      <span class=\"sb\">`rm ./NAME-osx.podspec`</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>在Podfile同级目录下也存放一个自己在用的Gemfile即可:</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c1\"># frozen_string_literal: true</span>\n\n<span class=\"n\">source</span> <span class=\"s2\">\"https://rubygems.org\"</span>\n\n<span class=\"n\">gem</span> <span class=\"s1\">'cocoapods'</span><span class=\"p\">,</span> <span class=\"s1\">'1.11.2'</span>\n\n<span class=\"n\">git_source</span><span class=\"p\">(</span><span class=\"ss\">:github</span><span class=\"p\">)</span> <span class=\"p\">{</span><span class=\"o\">|</span><span class=\"n\">repo_name</span><span class=\"o\">|</span> <span class=\"s2\">\"https://github.com/</span><span class=\"si\">#{</span><span class=\"n\">repo_name</span><span class=\"si\">}</span><span class=\"s2\">\"</span> <span class=\"p\">}</span>\n\n<span class=\"c1\"># gem \"rails\"</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h2 id=\"5-最后的忽略\">5 最后的忽略</h2>\n\n<p>模板创建之后，会执行Pod install，此时与常规工程一样，在Example下会新增Pod文件夹存在Pod依赖库，提交时需忽略，本着能少干重复劳动就不多干的原则，我们再把.gitignore修改一下：</p>\n\n<p>在根目录中找到.gitignore文件，由于是.开头，默认是隐藏了，在下面代码中添加你需要忽略的文件夹</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\"># macOS</span>\n.DS_Store\n\n<span class=\"c\"># Xcode</span>\nbuild/\n<span class=\"k\">*</span>.pbxuser\n<span class=\"o\">!</span>default.pbxuser\n<span class=\"k\">*</span>.mode1v3\n<span class=\"o\">!</span>default.mode1v3\n<span class=\"k\">*</span>.mode2v3\n<span class=\"o\">!</span>default.mode2v3\n<span class=\"k\">*</span>.perspectivev3\n<span class=\"o\">!</span>default.perspectivev3\nxcuserdata/\n<span class=\"k\">*</span>.xccheckout\n<span class=\"k\">*</span>.moved-aside\nDerivedData\n<span class=\"k\">*</span>.hmap\n<span class=\"k\">*</span>.ipa\n\n<span class=\"c\"># Bundler</span>\n.bundle\n\n<span class=\"c\"># Add this line if you want to avoid checking in source code from Carthage dependencies.</span>\n<span class=\"c\"># Carthage/Checkouts</span>\n\nCarthage/Build\n\n<span class=\"c\"># We recommend against adding the Pods directory to your .gitignore. However</span>\n<span class=\"c\"># you should judge for yourself, the pros and cons are mentioned at:</span>\n<span class=\"c\"># https://guides.cocoapods.org/using/using-cocoapods.html#should-i-ignore-the-pods-directory-in-source-control</span>\n<span class=\"c\"># </span>\n<span class=\"c\"># Note: if you ignore the Pods directory, make sure to uncomment</span>\n<span class=\"c\"># `pod install` in .travis.yml</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># Pods/ #打开此处注释可以忽略 以下Example/Pods/</span>\n\n<span class=\"c\">#以下可以继续添加忽略文件及文件夹</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h2 id=\"6扩展podfile依赖\">6.扩展：Podfile依赖</h2>\n\n<p>一般而言，创建的Pod私有库中的Podfile，会包含简单的模板：</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n</pre></td><td class=\"rouge-code\"><pre><span class=\"n\">use_frameworks!</span>\n\n<span class=\"n\">platform</span> <span class=\"ss\">:ios</span><span class=\"p\">,</span> <span class=\"s1\">'10.0'</span>\n\n<span class=\"n\">target</span> <span class=\"s1\">'${POD_NAME}_Example'</span> <span class=\"k\">do</span>\n  <span class=\"n\">pod</span> <span class=\"s1\">'${POD_NAME}'</span><span class=\"p\">,</span> <span class=\"ss\">:path</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'../'</span>\n\n  <span class=\"n\">target</span> <span class=\"s1\">'${POD_NAME}_Tests'</span> <span class=\"k\">do</span>\n    <span class=\"n\">inherit!</span> <span class=\"ss\">:search_paths</span>\n\n    <span class=\"err\">$</span><span class=\"p\">{</span><span class=\"no\">INCLUDED_PODS</span><span class=\"p\">}</span>\n  <span class=\"k\">end</span>\n<span class=\"k\">end</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>对于单个Pod组件库，也许够用了，但是我们如果是在进行组件化改造的进程中，需要与现有的私有库进行交互与依赖：比如业务库依赖基础库等，</p>\n\n<p>为了方便起见，不至于对每次创建私有库进行Podfile配置（还是懒😭），因此对Podfile进行了改造：</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n</pre></td><td class=\"rouge-code\"><pre><span class=\"n\">source</span> <span class=\"s1\">'ssh://私有库git地址/Specs.git'</span>\n<span class=\"n\">source</span> <span class=\"s1\">'https://github.com/CocoaPods/Specs.git'</span>\n\n<span class=\"n\">use_frameworks!</span>\n\n<span class=\"n\">platform</span> <span class=\"ss\">:ios</span><span class=\"p\">,</span> <span class=\"s1\">'12.0'</span>\t<span class=\"c1\">#写这篇文章时使用的podfile默认是10.0，可以改成你需要的</span>\n<span class=\"n\">post_install</span> <span class=\"k\">do</span> <span class=\"o\">|</span><span class=\"n\">installer</span><span class=\"o\">|</span>\n    <span class=\"n\">installer</span><span class=\"p\">.</span><span class=\"nf\">generated_projects</span><span class=\"p\">.</span><span class=\"nf\">each</span> <span class=\"k\">do</span> <span class=\"o\">|</span><span class=\"n\">project</span><span class=\"o\">|</span>\n          <span class=\"n\">project</span><span class=\"p\">.</span><span class=\"nf\">targets</span><span class=\"p\">.</span><span class=\"nf\">each</span> <span class=\"k\">do</span> <span class=\"o\">|</span><span class=\"n\">target</span><span class=\"o\">|</span>\n              <span class=\"n\">target</span><span class=\"p\">.</span><span class=\"nf\">build_configurations</span><span class=\"p\">.</span><span class=\"nf\">each</span> <span class=\"k\">do</span> <span class=\"o\">|</span><span class=\"n\">config</span><span class=\"o\">|</span>\n                  <span class=\"n\">config</span><span class=\"p\">.</span><span class=\"nf\">build_settings</span><span class=\"p\">[</span><span class=\"s1\">'IPHONEOS_DEPLOYMENT_TARGET'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">'12.0'</span>\n                  <span class=\"n\">config</span><span class=\"p\">.</span><span class=\"nf\">build_settings</span><span class=\"p\">[</span><span class=\"s2\">\"DEVELOPMENT_TEAM\"</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s2\">\"xxxxx\"</span>\t<span class=\"c1\">#这里指定签名，避免编译出错还要手动指定</span>\n               <span class=\"k\">end</span>\n          <span class=\"k\">end</span>\n   <span class=\"k\">end</span>\n<span class=\"k\">end</span>\n\n<span class=\"n\">use_frameworks!</span>\n\n\n<span class=\"n\">target</span> <span class=\"s1\">'${POD_NAME}_Example'</span> <span class=\"k\">do</span>\n\n<span class=\"c1\">#新建pod库创建模板的时候把私有库拉取一下</span>\n<span class=\"k\">def</span> <span class=\"nf\">debug_pod</span><span class=\"p\">(</span><span class=\"n\">pod_name</span><span class=\"p\">)</span>\n  <span class=\"n\">this_pod_name</span> <span class=\"o\">=</span> <span class=\"s2\">\"${POD_NAME}\"</span>\n  <span class=\"nb\">puts</span> <span class=\"s2\">\"debug_pod :pod_name = </span><span class=\"si\">#{</span><span class=\"n\">pod_name</span><span class=\"si\">}</span><span class=\"s2\"> and this_pod_name is </span><span class=\"si\">#{</span><span class=\"n\">this_pod_name</span><span class=\"si\">}</span><span class=\"s2\">\"</span>\n  <span class=\"k\">if</span> <span class=\"n\">this_pod_name</span> <span class=\"o\">==</span> <span class=\"n\">pod_name</span>\n    <span class=\"nb\">puts</span> <span class=\"s2\">\"</span><span class=\"si\">#{</span><span class=\"n\">this_pod_name</span><span class=\"si\">}</span><span class=\"s2\"> is equal args </span><span class=\"si\">#{</span><span class=\"n\">pod_name</span><span class=\"si\">}</span><span class=\"s2\"> do not pod\"</span>\n  <span class=\"k\">elsif</span>\n    <span class=\"c1\">#为了方便管理，这里的所有私有库建议放在同一个目录下</span>\n    <span class=\"n\">pod</span> <span class=\"s2\">\"</span><span class=\"si\">#{</span><span class=\"n\">pod_name</span><span class=\"si\">}</span><span class=\"s2\">\"</span><span class=\"p\">,</span> <span class=\"ss\">:path</span> <span class=\"o\">=&gt;</span> <span class=\"s2\">\"../../</span><span class=\"si\">#{</span><span class=\"n\">pod_name</span><span class=\"si\">}</span><span class=\"s2\">/\"</span>\n  <span class=\"k\">end</span>\n<span class=\"k\">end</span>\n\n  <span class=\"c1\">#为了避免重复定义 这里统一按下面方式进行处理吧，由于下文已经匹配了当前pod，这里不用注释掉</span>\n  <span class=\"n\">pod</span> <span class=\"s1\">'${POD_NAME}'</span><span class=\"p\">,</span> <span class=\"ss\">:path</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'../'</span>\n    \n  <span class=\"c1\">#这里定义需要被引入的所有私有库的库名</span>\n  <span class=\"n\">private_pods</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">\"基础组件1\"</span><span class=\"p\">,</span> <span class=\"s2\">\"基础组件2\"</span><span class=\"p\">,</span> <span class=\"s2\">\"基础组件3\"</span><span class=\"p\">,</span> <span class=\"s2\">\"能力组件1\"</span><span class=\"p\">,</span>  <span class=\"s2\">\"能力组件2\"</span><span class=\"p\">,</span>  <span class=\"s2\">\"能力组件3\"</span><span class=\"p\">,</span>  <span class=\"s2\">\"业务组件1\"</span><span class=\"p\">,</span>  <span class=\"s2\">\"业务组件2\"</span><span class=\"p\">]</span>\n\n  <span class=\"c1\">#这里将所有私有库名与路径匹配起来进行pod</span>\n  <span class=\"n\">private_pods</span><span class=\"p\">.</span><span class=\"nf\">each</span> <span class=\"k\">do</span> <span class=\"o\">|</span><span class=\"n\">private_pod</span><span class=\"o\">|</span>\n    <span class=\"n\">debug_pod</span><span class=\"p\">(</span><span class=\"n\">private_pod</span><span class=\"p\">)</span>\n  <span class=\"k\">end</span>\n\n\n  <span class=\"c1\">#如果上述方法用不来，或者不好用也可以改用下面比较传统的方式进行：</span>\n  <span class=\"c1\">#pod '基础组件1', :path =&gt; '../../基础组件1/'</span>\n  <span class=\"c1\">#pod '基础组件2', :path =&gt; '../../基础组件2/'</span>\n  <span class=\"c1\">#pod '基础组件3', :path =&gt; '../../基础组件3/'</span>\n\n  <span class=\"c1\">#pod '能力组件1', :path =&gt; '../../能力组件1/'</span>\n  <span class=\"c1\">#pod '能力组件2', :path =&gt; '../../能力组件2/'</span>\n  <span class=\"c1\">#pod '能力组件3', :path =&gt; '../../能力组件3/'</span>\n\n  <span class=\"c1\">#pod '业务组件1', :path =&gt; '../../业务组件1/'</span>\n  <span class=\"c1\">#pod '业务组件2', :path =&gt; '../../业务组件2/'</span>\n\n  <span class=\"n\">target</span> <span class=\"s1\">'${POD_NAME}_Tests'</span> <span class=\"k\">do</span>\n    <span class=\"n\">inherit!</span> <span class=\"ss\">:search_paths</span>\n    <span class=\"err\">$</span><span class=\"p\">{</span><span class=\"no\">INCLUDED_PODS</span><span class=\"p\">}</span>\n  <span class=\"k\">end</span>\n<span class=\"k\">end</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>值得一提的是，需要把所有Dev Pod放在同一个目录下，避免路径管理麻烦</p>\n\n<p>至此，生产的Pod组件库模板可以满足组件化进程需求了。</p>\n\n<p>##</p>\n","name":"2023-07-26-4-iOS组件化模板.md","previous":{"id":"/2023/07/20/iOS组件化实践二-实践过程碰到的问题","tags":[],"relative_path":"_posts/2023-07-20-iOS组件化实践二-实践过程碰到的问题.md","collection":"posts","name":"2023-07-20-iOS组件化实践二-实践过程碰到的问题.md","url":"/2023/07/20/iOS%E7%BB%84%E4%BB%B6%E5%8C%96%E5%AE%9E%E8%B7%B5%E4%BA%8C-%E5%AE%9E%E8%B7%B5%E8%BF%87%E7%A8%8B%E7%A2%B0%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/","title":"iOS组件化实践二：实践过程碰到的问题","date":"2023-07-20 00:00:00 +0800","categories":[],"path":"_posts/2023-07-20-iOS组件化实践二-实践过程碰到的问题.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/home-bg-geek.jpg","slug":"iOS组件化实践二-实践过程碰到的问题","ext":".md"},"output":"<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"google-site-verification\" content=\"xBT4GhYoi5qRD5tr338pgPM5OWHHIDR6mNg1a3euekI\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, viewport-fit=cover\">\n    <meta name=\"description\" content=\"与你一起发现更大的世界。\">\n    <meta name=\"keywords\"  content=\"PaysonChen,iOS,流媒体\">\n    <meta name=\"theme-color\" content=\"#000000\">\n    \n    <!-- Open Graph -->\n    <meta property=\"og:title\" content=\"iOS组件化实践之：新建一个Pod组件库 - PaysonChen的博客 | PaysonChen Blog\">\n    \n    <meta property=\"og:type\" content=\"article\">\n    <meta property=\"og:description\" content=\"iOS组件化实践之：新建一个Pod组件库\n\">\n    \n    \n    <meta property=\"article:published_time\" content=\"2023-07-26T00:00:00Z\">\n    \n    \n    <meta property=\"article:author\" content=\"PaysonChen\">\n    \n    \n    \n    <meta property=\"og:image\" content=\"http://localhost:4000\">\n    <meta property=\"og:url\" content=\"http://localhost:4000/2023/07/26/4-iOS%E7%BB%84%E4%BB%B6%E5%8C%96%E6%A8%A1%E6%9D%BF/\">\n    <meta property=\"og:site_name\" content=\"PaysonChen的博客 | PaysonChen Blog\">\n    \n    <title>iOS组件化实践之：新建一个Pod组件库 - PaysonChen的博客 | PaysonChen Blog</title>\n\n    <!-- Web App Manifest -->\n    <link rel=\"manifest\" href=\"/pwa/manifest.json\">\n\n    <!-- Favicon -->\n    <link rel=\"shortcut icon\" href=\"/img/favicon.ico\">\n    \n    <!-- Canonical URL -->\n    <link rel=\"canonical\" href=\"http://localhost:4000/2023/07/26/4-iOS%E7%BB%84%E4%BB%B6%E5%8C%96%E6%A8%A1%E6%9D%BF/\">\n\n    <!-- Bootstrap Core CSS -->\n    <link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\">\n\n    <!-- Custom CSS -->\n    <link rel=\"stylesheet\" href=\"/css/hux-blog.min.css\">\n\n    <!-- Custom Fonts -->\n    <!-- <link href=\"http://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\"> -->\n    <!-- Hux change font-awesome CDN to qiniu -->\n    <link href=\"//cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\">\n\n\n    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->\n    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->\n    <!--[if lt IE 9]>\n        <script src=\"https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js\"></script>\n        <script src=\"https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js\"></script>\n    <![endif]-->\n\n    <!-- ga & ba script hoook -->\n    <script></script>\n</head>\n\n\n<!-- hack iOS CSS :active style -->\n<body ontouchstart=\"\">\n\n    <!-- Navigation -->\n\n    <nav class=\"navbar navbar-default navbar-custom navbar-fixed-top\">\n        \n        <div class=\"container-fluid\">\n            <!-- Brand and toggle get grouped for better mobile display -->\n            <div class=\"navbar-header page-scroll\">\n                <button type=\"button\" class=\"navbar-toggle\">\n                    <span class=\"sr-only\">Toggle navigation</span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                </button>\n                <a class=\"navbar-brand\" href=\"/\">PaysonChen Blog</a>\n            </div>\n\n            <!-- Collect the nav links, forms, and other content for toggling -->\n            <div id=\"huxblog_navbar\">\n                <div class=\"navbar-collapse\">\n                    <ul class=\"nav navbar-nav navbar-right\">\n                        <li>\n                            <a href=\"/\">Home</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        <li>\n                            <a href=\"/about/\">About</a>\n                        </li>\n                        \n                        \n                        \n                        <li>\n                            <a href=\"/archive/\">Archive</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        <li class=\"search-icon\">\n                            <a href=\"javascript:void(0)\">\n                                <i class=\"fa fa-search\"></i>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n            <!-- /.navbar-collapse -->\n        </div>\n        <!-- /.container -->\n    </nav>\n\n    <script>\n        // Drop Bootstarp low-performance Navbar\n        // Use customize navbar with high-quality material design animation\n        // in high-perf jank-free CSS3 implementation\n        var $body = document.body;\n        var $toggle = document.querySelector('.navbar-toggle');\n        var $navbar = document.querySelector('#huxblog_navbar');\n        var $collapse = document.querySelector('.navbar-collapse');\n\n        var __HuxNav__ = {\n            close: function () {\n                $navbar.className = \" \";\n                // wait until animation end.\n                setTimeout(function () {\n                    // prevent frequently toggle\n                    if ($navbar.className.indexOf('in') < 0) {\n                        $collapse.style.height = \"0px\"\n                    }\n                }, 400)\n            },\n            open: function () {\n                $collapse.style.height = \"auto\"\n                $navbar.className += \" in\";\n            }\n        }\n\n        // Bind Event\n        $toggle.addEventListener('click', function (e) {\n            if ($navbar.className.indexOf('in') > 0) {\n                __HuxNav__.close()\n            } else {\n                __HuxNav__.open()\n            }\n        })\n\n        /**\n         * Since Fastclick is used to delegate 'touchstart' globally\n         * to hack 300ms delay in iOS by performing a fake 'click',\n         * Using 'e.stopPropagation' to stop 'touchstart' event from \n         * $toggle/$collapse will break global delegation.\n         * \n         * Instead, we use a 'e.target' filter to prevent handler\n         * added to document close HuxNav.  \n         *\n         * Also, we use 'click' instead of 'touchstart' as compromise\n         */\n        document.addEventListener('click', function (e) {\n            if (e.target == $toggle) return;\n            if (e.target.className == 'icon-bar') return;\n            __HuxNav__.close();\n        })\n    </script>\n    <!-- Search -->\n<div class=\"search-page\">\n  <div class=\"search-icon-close-container\">\n    <span class=\"search-icon-close\">\n      <i class=\"fa fa-chevron-down\"></i>\n    </span>\n  </div>\n  <div class=\"search-main container\">\n    <div class=\"row\">\n      <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n        <form></form>\n        <input type=\"text\" id=\"search-input\" placeholder=\"$ grep...\">\n        </form>\n        <div id=\"search-results\" class=\"mini-post-list\"></div>\n      </div>\n    </div>\n  </div>\n</div>\n\n    <!-- Image to hack wechat -->\n<!-- <img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\"> -->\n<!-- <img src=\"/img/home-bg-geek.jpg\" width=\"0\" height=\"0\"> -->\n\n<!-- Post Header -->\n\n\n\n<style type=\"text/css\">\n    header.intro-header{\n        position: relative;\n        background-image: url('/img/home-bg-geek.jpg');\n        background: ;\n    }\n\n    \n</style>\n\n<header class=\"intro-header\" >\n\n    <div class=\"header-mask\"></div>\n    \n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <div class=\"post-heading\">\n                    <div class=\"tags\">\n                        \n                    </div>\n                    <h1>iOS组件化实践之：新建一个Pod组件库</h1>\n                    \n                    <h2 class=\"subheading\"></h2>\n                    <span class=\"meta\">Posted by PaysonChen on July 26, 2023</span>\n                </div>\n            </div>\n        </div>\n    </div>\n</header>\n\n\n\n\n\n\n<!-- Post Content -->\n<article>\n    <div class=\"container\">\n        <div class=\"row\">\n\n    <!-- Post Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                post-container\">\n\n                <!-- Multi-Lingual -->\n                \n\n\t\t\t\t<h1 id=\"ios组件化实践之新建一个pod组件库\">iOS组件化实践之：新建一个Pod组件库</h1>\n\n<h2 id=\"0背景\">0.背景</h2>\n\n<p>在IOS组件化的实践过程中，</p>\n\n<ul>\n  <li>规划期间需要对组件进行定义、功能划分、接口设计等</li>\n  <li>实践期间需要对组件进行创建，迁移主工程能力等</li>\n</ul>\n\n<p>这过程，就看你需要较为频繁地创建Pod组件库，因此对于了解一下，Pod组件的创建，及其模板的使用与修改，变成较为重要</p>\n\n<h2 id=\"1-通过常规模板创建\">1. 通过常规模板创建</h2>\n\n<p>CocoaPods提供的创建指令：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>pod lib create xx\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>通过输出可以看到：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>Cloning <span class=\"sb\">`</span>https://github.com/CocoaPods/pod-template.git<span class=\"sb\">`</span> into <span class=\"sb\">`</span>xx<span class=\"sb\">`</span><span class=\"nb\">.</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>此命令默认从 <a href=\"https://github.com/CocoaPods/pod-template\">github Pod-template</a>，下载默认模板进行创建，依次回答几个问题之后</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n</pre></td><td class=\"rouge-code\"><pre>What platform <span class=\"k\">do </span>you want to use?? <span class=\"o\">[</span> iOS / macOS <span class=\"o\">]</span>\n <span class=\"o\">&gt;</span> \nios\nWhat language <span class=\"k\">do </span>you want to use?? <span class=\"o\">[</span> Swift / ObjC <span class=\"o\">]</span>\n <span class=\"o\">&gt;</span> \nswift\nWould you like to include a demo application with your library? <span class=\"o\">[</span> Yes / No <span class=\"o\">]</span>\n <span class=\"o\">&gt;</span> \n<span class=\"nb\">yes\n</span>Which testing frameworks will you use? <span class=\"o\">[</span> Quick / None <span class=\"o\">]</span>\n <span class=\"o\">&gt;</span> \nquick\nWould you like to <span class=\"k\">do </span>view based testing? <span class=\"o\">[</span> Yes / No <span class=\"o\">]</span>\n <span class=\"o\">&gt;</span> \n<span class=\"nb\">yes</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>当前路径下就生成了一个Pod仓库，Spec文件如下：</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n</pre></td><td class=\"rouge-code\"><pre><span class=\"no\">Pod</span><span class=\"o\">::</span><span class=\"no\">Spec</span><span class=\"p\">.</span><span class=\"nf\">new</span> <span class=\"k\">do</span> <span class=\"o\">|</span><span class=\"n\">s</span><span class=\"o\">|</span>\n  <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">name</span>             <span class=\"o\">=</span> <span class=\"s1\">'xx'</span>\n  <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">version</span>          <span class=\"o\">=</span> <span class=\"s1\">'0.1.0'</span>\n  <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">summary</span>          <span class=\"o\">=</span> <span class=\"s1\">'A short description of xx.'</span>\n\n<span class=\"c1\"># This description is used to generate tags and improve search results.</span>\n<span class=\"c1\">#   * Think: What does it do? Why did you write it? What is the focus?</span>\n<span class=\"c1\">#   * Try to keep it short, snappy and to the point.</span>\n<span class=\"c1\">#   * Write the description between the DESC delimiters below.</span>\n<span class=\"c1\">#   * Finally, don't worry about the indent, CocoaPods strips it!</span>\n\n  <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">description</span>      <span class=\"o\">=</span> <span class=\"o\">&lt;&lt;-</span><span class=\"no\">DESC</span><span class=\"sh\">\nTODO: Add long description of the pod here.\n</span><span class=\"no\">                       DESC</span>\n\n  <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">homepage</span>         <span class=\"o\">=</span> <span class=\"s1\">'https://github.com/chenyp/xx'</span>\n  <span class=\"c1\"># s.screenshots     = 'www.example.com/screenshots_1', 'www.example.com/screenshots_2'</span>\n  <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">license</span>          <span class=\"o\">=</span> <span class=\"p\">{</span> <span class=\"ss\">:type</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'MIT'</span><span class=\"p\">,</span> <span class=\"ss\">:file</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'LICENSE'</span> <span class=\"p\">}</span>\n  <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">author</span>           <span class=\"o\">=</span> <span class=\"p\">{</span> <span class=\"s1\">'chenyp'</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'165685965@qq.com'</span> <span class=\"p\">}</span>\n  <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">source</span>           <span class=\"o\">=</span> <span class=\"p\">{</span> <span class=\"ss\">:git</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'https://github.com/chenyp/xx.git'</span><span class=\"p\">,</span> <span class=\"ss\">:tag</span> <span class=\"o\">=&gt;</span> <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">version</span><span class=\"p\">.</span><span class=\"nf\">to_s</span> <span class=\"p\">}</span>\n  <span class=\"c1\"># s.social_media_url = 'https://twitter.com/&lt;TWITTER_USERNAME&gt;'</span>\n\n  <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">ios</span><span class=\"p\">.</span><span class=\"nf\">deployment_target</span> <span class=\"o\">=</span> <span class=\"s1\">'10.0'</span>\n\n  <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">source_files</span> <span class=\"o\">=</span> <span class=\"s1\">'xx/Classes/**/*'</span>\n  \n  <span class=\"c1\"># s.resource_bundles = {</span>\n  <span class=\"c1\">#   'xx' =&gt; ['xx/Assets/*.png']</span>\n  <span class=\"c1\"># }</span>\n\n  <span class=\"c1\"># s.public_header_files = 'Pod/Classes/**/*.h'</span>\n  <span class=\"c1\"># s.frameworks = 'UIKit', 'MapKit'</span>\n  <span class=\"c1\"># s.dependency 'AFNetworking', '~&gt; 2.3'</span>\n<span class=\"k\">end</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h2 id=\"2-通过自定义模板创建\">2. 通过自定义模板创建</h2>\n\n<p>一般而言，不建议通过上述方式进行创建，默认以git全局配置的name、email字段，加上github主页进行填充，因为默认模板所创建的诸多字段是必要修改的（不改无法通过私有组件部署）：</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n</pre></td><td class=\"rouge-code\"><pre>  <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">homepage</span>         <span class=\"o\">=</span> <span class=\"s1\">'https://github.com/chenyp/xx'</span>\n  <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">author</span>           <span class=\"o\">=</span> <span class=\"p\">{</span> <span class=\"s1\">'chenyp'</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'165685965@qq.com'</span> <span class=\"p\">}</span>\n  <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">source</span>           <span class=\"o\">=</span> <span class=\"p\">{</span> <span class=\"ss\">:git</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'https://github.com/chenyp/xx.git'</span><span class=\"p\">,</span> <span class=\"ss\">:tag</span> <span class=\"o\">=&gt;</span> <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">version</span><span class=\"p\">.</span><span class=\"nf\">to_s</span> <span class=\"p\">}</span>\n<span class=\"err\">……</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>由于组件化的过程是需要频繁创建多个组件仓库，如果每次都改上述字段，有可能错改漏改，导致效率低下，基于懒惰是程序员的美德这一不成文的追求（其实应该是尽量能把重复工作流程化），着手对上述模板进行修改。</p>\n\n<p>自定义模板创建：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>git clone git@github.com:CocoaPods/pod-template.git\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>通过修改仓库中的“<strong>NAME.podspec</strong>”文件中的相关字段</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n</pre></td><td class=\"rouge-code\"><pre>  <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">homepage</span>         <span class=\"o\">=</span> <span class=\"s1\">'https://内网githost/name/xx'</span>\n  <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">author</span>           <span class=\"o\">=</span> <span class=\"p\">{</span> <span class=\"s1\">'内网git提交commit姓名'</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'内网git提交commit email'</span> <span class=\"p\">}</span>\n  <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">source</span>           <span class=\"o\">=</span> <span class=\"p\">{</span> <span class=\"ss\">:git</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'https://内网githost/name/xx.git'</span><span class=\"p\">,</span> <span class=\"ss\">:tag</span> <span class=\"o\">=&gt;</span> <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">version</span><span class=\"p\">.</span><span class=\"nf\">to_s</span> <span class=\"p\">}</span>\t<span class=\"c1\">#clone 组件库地址</span>\n<span class=\"err\">……</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>修改后将上述模板放到git仓库上，执行：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre> pod lib create xx  <span class=\"nt\">--template-url</span><span class=\"o\">=</span>ssh://内网githost/ios/Pods/Tmplate/XXX_Pod_Tmeplate.git\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h2 id=\"3-通过高度自定义模板创建\">3. 通过高度自定义模板创建</h2>\n\n<p>一般而言，到上述即可完成基础的模板自定义，减少创建私有库后所需的重复修改字段的工作量，但是对于下列选项的一致性，如果能省略冗余及提高统一性，自然更好了：</p>\n\n<ul class=\"task-list\">\n  <li class=\"task-list-item\">\n    <p><input type=\"checkbox\" class=\"task-list-item-checkbox\" disabled=\"disabled\" checked=\"checked\" />平台选择的冗余（iOS）</p>\n  </li>\n  <li class=\"task-list-item\">\n    <p><input type=\"checkbox\" class=\"task-list-item-checkbox\" disabled=\"disabled\" checked=\"checked\" />代码风格的统一（类名前缀）</p>\n  </li>\n  <li class=\"task-list-item\">\n    <p><input type=\"checkbox\" class=\"task-list-item-checkbox\" disabled=\"disabled\" />语言统一（iOS/Swift）</p>\n  </li>\n  <li class=\"task-list-item\">\n    <p><input type=\"checkbox\" class=\"task-list-item-checkbox\" disabled=\"disabled\" checked=\"checked\" />Demo工程</p>\n  </li>\n  <li class=\"task-list-item\">\n    <p><input type=\"checkbox\" class=\"task-list-item-checkbox\" disabled=\"disabled\" checked=\"checked\" />测试依赖</p>\n  </li>\n</ul>\n\n<p>这就需要对pod-template的ruby代码进行修改已达到不需要重复设定模板交互的目的：</p>\n\n<p>模板配置：TemplateConfigurator.rb</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n</pre></td><td class=\"rouge-code\"><pre>    <span class=\"k\">def</span> <span class=\"nf\">run</span>\n      <span class=\"vi\">@message_bank</span><span class=\"p\">.</span><span class=\"nf\">welcome_message</span>\n\n      <span class=\"n\">platform</span> <span class=\"o\">=</span> <span class=\"nb\">self</span><span class=\"p\">.</span><span class=\"nf\">ask_with_answers</span><span class=\"p\">(</span><span class=\"s2\">\"What platform do you want to use?\"</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s2\">\"iOS\"</span><span class=\"p\">,</span> <span class=\"s2\">\"macOS\"</span><span class=\"p\">]).</span><span class=\"nf\">to_sym</span>\n\n      <span class=\"k\">case</span> <span class=\"n\">platform</span>\n        <span class=\"k\">when</span> <span class=\"ss\">:macos</span>\n          <span class=\"no\">ConfigureMacOSSwift</span><span class=\"p\">.</span><span class=\"nf\">perform</span><span class=\"p\">(</span><span class=\"ss\">configurator: </span><span class=\"nb\">self</span><span class=\"p\">)</span>\n        <span class=\"k\">when</span> <span class=\"ss\">:ios</span>\n          <span class=\"n\">framework</span> <span class=\"o\">=</span> <span class=\"nb\">self</span><span class=\"p\">.</span><span class=\"nf\">ask_with_answers</span><span class=\"p\">(</span><span class=\"s2\">\"What language do you want to use?\"</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s2\">\"Swift\"</span><span class=\"p\">,</span> <span class=\"s2\">\"ObjC\"</span><span class=\"p\">]).</span><span class=\"nf\">to_sym</span>\n          <span class=\"k\">case</span> <span class=\"n\">framework</span>\n            <span class=\"k\">when</span> <span class=\"ss\">:swift</span>\n              <span class=\"no\">ConfigureSwift</span><span class=\"p\">.</span><span class=\"nf\">perform</span><span class=\"p\">(</span><span class=\"ss\">configurator: </span><span class=\"nb\">self</span><span class=\"p\">)</span>\n\n            <span class=\"k\">when</span> <span class=\"ss\">:objc</span>\n              <span class=\"no\">ConfigureIOS</span><span class=\"p\">.</span><span class=\"nf\">perform</span><span class=\"p\">(</span><span class=\"ss\">configurator: </span><span class=\"nb\">self</span><span class=\"p\">)</span>\n          <span class=\"k\">end</span>\n      <span class=\"k\">end</span>\n      \n      <span class=\"c1\">#……此处省略后面的代码……#</span>\n    <span class=\"k\">end</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>改为：</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n</pre></td><td class=\"rouge-code\"><pre>    <span class=\"k\">def</span> <span class=\"nf\">run</span>\n      <span class=\"vi\">@message_bank</span><span class=\"p\">.</span><span class=\"nf\">welcome_message</span>\n\n      <span class=\"c1\">#自定义模板优化：这里可以绕过了一些问题（免回答iOS、Objc）,当然如果想要设置成其他的，也可以调用其他方法，或者恢复询问式配置</span>\n      <span class=\"no\">ConfigureIOS</span><span class=\"p\">.</span><span class=\"nf\">perform</span><span class=\"p\">(</span><span class=\"ss\">configurator: </span><span class=\"nb\">self</span><span class=\"p\">)</span>\n      \n<span class=\"c1\">#      platform = self.ask_with_answers(\"What platform do you want to use?\", [\"iOS\", \"macOS\"]).to_sym</span>\n<span class=\"c1\">#</span>\n<span class=\"c1\">#      case platform</span>\n<span class=\"c1\">#        when :macos</span>\n<span class=\"c1\">#          ConfigureMacOSSwift.perform(configurator: self)</span>\n<span class=\"c1\">#        when :ios</span>\n<span class=\"c1\">#          framework = self.ask_with_answers(\"What language do you want to use?\", [\"Swift\", \"ObjC\"]).to_sym</span>\n<span class=\"c1\">#          case framework</span>\n<span class=\"c1\">#            when :swift</span>\n<span class=\"c1\">#              ConfigureSwift.perform(configurator: self)</span>\n<span class=\"c1\">#</span>\n<span class=\"c1\">#            when :objc</span>\n<span class=\"c1\">#              ConfigureIOS.perform(configurator: self)</span>\n<span class=\"c1\">#          end</span>\n<span class=\"c1\">#      end</span>\n\n      <span class=\"c1\">#……此处省略后面的代码……#</span>\n    <span class=\"k\">end</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>选择了相关语言，就在相关语言的 Configure 内配置后续的设置，例如：选择了iOS，就在ConfigureIOS.rb配置:</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n</pre></td><td class=\"rouge-code\"><pre>    <span class=\"k\">def</span> <span class=\"nf\">perform</span>\n\n      <span class=\"n\">keep_demo</span> <span class=\"o\">=</span> <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">ask_with_answers</span><span class=\"p\">(</span><span class=\"s2\">\"Would you like to include a demo application with your library\"</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s2\">\"Yes\"</span><span class=\"p\">,</span> <span class=\"s2\">\"No\"</span><span class=\"p\">]).</span><span class=\"nf\">to_sym</span>\n\n      <span class=\"n\">framework</span> <span class=\"o\">=</span> <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">ask_with_answers</span><span class=\"p\">(</span><span class=\"s2\">\"Which testing frameworks will you use\"</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s2\">\"Specta\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Kiwi\"</span><span class=\"p\">,</span> <span class=\"s2\">\"None\"</span><span class=\"p\">]).</span><span class=\"nf\">to_sym</span>\n      <span class=\"k\">case</span> <span class=\"n\">framework</span>\n        <span class=\"k\">when</span> <span class=\"ss\">:specta</span>\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_pod_to_podfile</span> <span class=\"s2\">\"Specta\"</span>\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_pod_to_podfile</span> <span class=\"s2\">\"Expecta\"</span>\n\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_line_to_pch</span> <span class=\"s2\">\"@import Specta;\"</span>\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_line_to_pch</span> <span class=\"s2\">\"@import Expecta;\"</span>\n\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">set_test_framework</span><span class=\"p\">(</span><span class=\"s2\">\"specta\"</span><span class=\"p\">,</span> <span class=\"s2\">\"m\"</span><span class=\"p\">,</span> <span class=\"s2\">\"ios\"</span><span class=\"p\">)</span>\n\n        <span class=\"k\">when</span> <span class=\"ss\">:kiwi</span>\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_pod_to_podfile</span> <span class=\"s2\">\"Kiwi\"</span>\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_line_to_pch</span> <span class=\"s2\">\"@import Kiwi;\"</span>\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">set_test_framework</span><span class=\"p\">(</span><span class=\"s2\">\"kiwi\"</span><span class=\"p\">,</span> <span class=\"s2\">\"m\"</span><span class=\"p\">,</span> <span class=\"s2\">\"ios\"</span><span class=\"p\">)</span>\n\n        <span class=\"k\">when</span> <span class=\"ss\">:none</span>\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">set_test_framework</span><span class=\"p\">(</span><span class=\"s2\">\"xctest\"</span><span class=\"p\">,</span> <span class=\"s2\">\"m\"</span><span class=\"p\">,</span> <span class=\"s2\">\"ios\"</span><span class=\"p\">)</span>\n      <span class=\"k\">end</span>\n\n      <span class=\"n\">snapshots</span> <span class=\"o\">=</span> <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">ask_with_answers</span><span class=\"p\">(</span><span class=\"s2\">\"Would you like to do view based testing\"</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s2\">\"Yes\"</span><span class=\"p\">,</span> <span class=\"s2\">\"No\"</span><span class=\"p\">]).</span><span class=\"nf\">to_sym</span>\n      <span class=\"k\">case</span> <span class=\"n\">snapshots</span>\n        <span class=\"k\">when</span> <span class=\"ss\">:yes</span>\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_pod_to_podfile</span> <span class=\"s2\">\"FBSnapshotTestCase\"</span>\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_line_to_pch</span> <span class=\"s2\">\"@import FBSnapshotTestCase;\"</span>\n\n          <span class=\"k\">if</span> <span class=\"n\">keep_demo</span> <span class=\"o\">==</span> <span class=\"ss\">:no</span>\n              <span class=\"nb\">puts</span> <span class=\"s2\">\" Putting demo application back in, you cannot do view tests without a host application.\"</span>\n              <span class=\"n\">keep_demo</span> <span class=\"o\">=</span> <span class=\"ss\">:yes</span>\n          <span class=\"k\">end</span>\n\n          <span class=\"k\">if</span> <span class=\"n\">framework</span> <span class=\"o\">==</span> <span class=\"ss\">:specta</span>\n              <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_pod_to_podfile</span> <span class=\"s2\">\"Expecta+Snapshots\"</span>\n              <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_line_to_pch</span> <span class=\"s2\">\"@import Expecta_Snapshots;\"</span>\n          <span class=\"k\">end</span>\n      <span class=\"k\">end</span>\n\n      <span class=\"n\">prefix</span> <span class=\"o\">=</span> <span class=\"kp\">nil</span>\n\n      <span class=\"kp\">loop</span> <span class=\"k\">do</span>\n        <span class=\"n\">prefix</span> <span class=\"o\">=</span> <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">ask</span><span class=\"p\">(</span><span class=\"s2\">\"What is your class prefix\"</span><span class=\"p\">).</span><span class=\"nf\">upcase</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">prefix</span><span class=\"p\">.</span><span class=\"nf\">include?</span><span class=\"p\">(</span><span class=\"s1\">' '</span><span class=\"p\">)</span>\n          <span class=\"nb\">puts</span> <span class=\"s1\">'Your class prefix cannot contain spaces.'</span><span class=\"p\">.</span><span class=\"nf\">red</span>\n        <span class=\"k\">else</span>\n          <span class=\"k\">break</span>\n        <span class=\"k\">end</span>\n      <span class=\"k\">end</span>\n\t      <span class=\"c1\">#……此处省略后面的代码……#</span>\n  <span class=\"k\">end</span>\n\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>找到相关的问答区：</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n</pre></td><td class=\"rouge-code\"><pre>    <span class=\"k\">def</span> <span class=\"nf\">perform</span>\n      <span class=\"c1\">#自定义模板优化: 这里默认需要demo，当然如果想要设置成其他的，也可以调用其他方法，或者恢复询问式配置</span>\n      <span class=\"n\">keep_demo</span> <span class=\"o\">=</span> <span class=\"s2\">\"yes\"</span><span class=\"c1\">#configurator.ask_with_answers(\"Would you like to include a demo application with your library\", [\"Yes\", \"No\"]).to_sym</span>\n      <span class=\"c1\">#自定义模板优化：: 这里默认不需要testing frameworks，当然如果想要设置成其他的，也可以调用其他方法，或者恢复询问式配置</span>\n      <span class=\"n\">framework</span> <span class=\"o\">=</span> <span class=\"s2\">\"none\"</span> <span class=\"c1\">#configurator.ask_with_answers(\"Which testing frameworks will you use\", [\"Specta\", \"Kiwi\", \"None\"]).to_sym</span>\n      <span class=\"k\">case</span> <span class=\"n\">framework</span>\n        <span class=\"k\">when</span> <span class=\"ss\">:specta</span>\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_pod_to_podfile</span> <span class=\"s2\">\"Specta\"</span>\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_pod_to_podfile</span> <span class=\"s2\">\"Expecta\"</span>\n\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_line_to_pch</span> <span class=\"s2\">\"@import Specta;\"</span>\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_line_to_pch</span> <span class=\"s2\">\"@import Expecta;\"</span>\n\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">set_test_framework</span><span class=\"p\">(</span><span class=\"s2\">\"specta\"</span><span class=\"p\">,</span> <span class=\"s2\">\"m\"</span><span class=\"p\">,</span> <span class=\"s2\">\"ios\"</span><span class=\"p\">)</span>\n\n        <span class=\"k\">when</span> <span class=\"ss\">:kiwi</span>\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_pod_to_podfile</span> <span class=\"s2\">\"Kiwi\"</span>\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_line_to_pch</span> <span class=\"s2\">\"@import Kiwi;\"</span>\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">set_test_framework</span><span class=\"p\">(</span><span class=\"s2\">\"kiwi\"</span><span class=\"p\">,</span> <span class=\"s2\">\"m\"</span><span class=\"p\">,</span> <span class=\"s2\">\"ios\"</span><span class=\"p\">)</span>\n\n        <span class=\"k\">when</span> <span class=\"ss\">:none</span>\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">set_test_framework</span><span class=\"p\">(</span><span class=\"s2\">\"xctest\"</span><span class=\"p\">,</span> <span class=\"s2\">\"m\"</span><span class=\"p\">,</span> <span class=\"s2\">\"ios\"</span><span class=\"p\">)</span>\n      <span class=\"k\">end</span>\n\n      <span class=\"c1\">#自定义模板优化：这里默认不需要view based testing，当然如果想要设置成其他的，也可以调用其他方法，或者恢复询问式配置</span>\n      <span class=\"n\">snapshots</span> <span class=\"o\">=</span> <span class=\"s2\">\"no\"</span><span class=\"c1\">#configurator.ask_with_answers(\"Would you like to do view based testing\", [\"Yes\", \"No\"]).to_sym</span>\n      <span class=\"k\">case</span> <span class=\"n\">snapshots</span>\n        <span class=\"k\">when</span> <span class=\"ss\">:yes</span>\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_pod_to_podfile</span> <span class=\"s2\">\"FBSnapshotTestCase\"</span>\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_line_to_pch</span> <span class=\"s2\">\"@import FBSnapshotTestCase;\"</span>\n\n          <span class=\"k\">if</span> <span class=\"n\">keep_demo</span> <span class=\"o\">==</span> <span class=\"ss\">:no</span>\n              <span class=\"nb\">puts</span> <span class=\"s2\">\" Putting demo application back in, you cannot do view tests without a host application.\"</span>\n              <span class=\"n\">keep_demo</span> <span class=\"o\">=</span> <span class=\"ss\">:yes</span>\n          <span class=\"k\">end</span>\n\n          <span class=\"k\">if</span> <span class=\"n\">framework</span> <span class=\"o\">==</span> <span class=\"ss\">:specta</span>\n              <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_pod_to_podfile</span> <span class=\"s2\">\"Expecta+Snapshots\"</span>\n              <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_line_to_pch</span> <span class=\"s2\">\"@import Expecta_Snapshots;\"</span>\n          <span class=\"k\">end</span>\n      <span class=\"k\">end</span>\n\n      <span class=\"n\">prefix</span> <span class=\"o\">=</span> <span class=\"kp\">nil</span>\n\n      <span class=\"kp\">loop</span> <span class=\"k\">do</span>\n      <span class=\"c1\">#自定义模板优化：这里默认prefix为PSC，当然如果想要设置成其他的，也可以调用其他方法，或者恢复询问式配置</span>\n        <span class=\"n\">prefix</span> <span class=\"o\">=</span> <span class=\"s2\">\"PSC\"</span><span class=\"c1\">#configurator.ask(\"What is your class prefix\").upcase</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">prefix</span><span class=\"p\">.</span><span class=\"nf\">include?</span><span class=\"p\">(</span><span class=\"s1\">' '</span><span class=\"p\">)</span>\n          <span class=\"nb\">puts</span> <span class=\"s1\">'Your class prefix cannot contain spaces.'</span><span class=\"p\">.</span><span class=\"nf\">red</span>\n        <span class=\"k\">else</span>\n          <span class=\"k\">break</span>\n        <span class=\"k\">end</span>\n      <span class=\"k\">end</span>\n      <span class=\"c1\">#……此处省略后面的代码……#</span>\n  <span class=\"k\">end</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>至此，优化的自定义模板已经完成，再创建另一个（如果你需要保留上面那种简易自定义）git仓库存储，一键创建更符合需求的pod私有库模板：let‘s try</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre> pod lib create xx  <span class=\"nt\">--template-url</span><span class=\"o\">=</span>ssh://内网githost/ios/Pods/Tmplate/PSC_iOS_Objc_Demo_NoneTest.git\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h2 id=\"4-如果你还是使用gem管理pod插件的话\">4. 如果你还是使用Gem管理Pod插件的话</h2>\n\n<p>一般而言，在多人团队中，需要用到Gem来管理Pod插件版本，避免由于Pod版本不一致，导致的集成与编译问题，如果你还有Gemfile需要配置的话，由于模板配置的代码最后的是：</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n</pre></td><td class=\"rouge-code\"><pre>      <span class=\"c1\"># There has to be a single file in the Classes dir</span>\n      <span class=\"c1\"># or a framework won't be created, which is now default</span>\n      <span class=\"sb\">`touch Pod/Classes/ReplaceMe.m`</span>\n\n      <span class=\"sb\">`mv ./templates/ios/* ./`</span>\n\n      <span class=\"c1\"># remove podspec for osx</span>\n      <span class=\"sb\">`rm ./NAME-osx.podspec`</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>在Podfile同级目录下也存放一个自己在用的Gemfile即可:</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c1\"># frozen_string_literal: true</span>\n\n<span class=\"n\">source</span> <span class=\"s2\">\"https://rubygems.org\"</span>\n\n<span class=\"n\">gem</span> <span class=\"s1\">'cocoapods'</span><span class=\"p\">,</span> <span class=\"s1\">'1.11.2'</span>\n\n<span class=\"n\">git_source</span><span class=\"p\">(</span><span class=\"ss\">:github</span><span class=\"p\">)</span> <span class=\"p\">{</span><span class=\"o\">|</span><span class=\"n\">repo_name</span><span class=\"o\">|</span> <span class=\"s2\">\"https://github.com/</span><span class=\"si\">#{</span><span class=\"n\">repo_name</span><span class=\"si\">}</span><span class=\"s2\">\"</span> <span class=\"p\">}</span>\n\n<span class=\"c1\"># gem \"rails\"</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h2 id=\"5-最后的忽略\">5 最后的忽略</h2>\n\n<p>模板创建之后，会执行Pod install，此时与常规工程一样，在Example下会新增Pod文件夹存在Pod依赖库，提交时需忽略，本着能少干重复劳动就不多干的原则，我们再把.gitignore修改一下：</p>\n\n<p>在根目录中找到.gitignore文件，由于是.开头，默认是隐藏了，在下面代码中添加你需要忽略的文件夹</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\"># macOS</span>\n.DS_Store\n\n<span class=\"c\"># Xcode</span>\nbuild/\n<span class=\"k\">*</span>.pbxuser\n<span class=\"o\">!</span>default.pbxuser\n<span class=\"k\">*</span>.mode1v3\n<span class=\"o\">!</span>default.mode1v3\n<span class=\"k\">*</span>.mode2v3\n<span class=\"o\">!</span>default.mode2v3\n<span class=\"k\">*</span>.perspectivev3\n<span class=\"o\">!</span>default.perspectivev3\nxcuserdata/\n<span class=\"k\">*</span>.xccheckout\n<span class=\"k\">*</span>.moved-aside\nDerivedData\n<span class=\"k\">*</span>.hmap\n<span class=\"k\">*</span>.ipa\n\n<span class=\"c\"># Bundler</span>\n.bundle\n\n<span class=\"c\"># Add this line if you want to avoid checking in source code from Carthage dependencies.</span>\n<span class=\"c\"># Carthage/Checkouts</span>\n\nCarthage/Build\n\n<span class=\"c\"># We recommend against adding the Pods directory to your .gitignore. However</span>\n<span class=\"c\"># you should judge for yourself, the pros and cons are mentioned at:</span>\n<span class=\"c\"># https://guides.cocoapods.org/using/using-cocoapods.html#should-i-ignore-the-pods-directory-in-source-control</span>\n<span class=\"c\"># </span>\n<span class=\"c\"># Note: if you ignore the Pods directory, make sure to uncomment</span>\n<span class=\"c\"># `pod install` in .travis.yml</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># Pods/ #打开此处注释可以忽略 以下Example/Pods/</span>\n\n<span class=\"c\">#以下可以继续添加忽略文件及文件夹</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h2 id=\"6扩展podfile依赖\">6.扩展：Podfile依赖</h2>\n\n<p>一般而言，创建的Pod私有库中的Podfile，会包含简单的模板：</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n</pre></td><td class=\"rouge-code\"><pre><span class=\"n\">use_frameworks!</span>\n\n<span class=\"n\">platform</span> <span class=\"ss\">:ios</span><span class=\"p\">,</span> <span class=\"s1\">'10.0'</span>\n\n<span class=\"n\">target</span> <span class=\"s1\">'${POD_NAME}_Example'</span> <span class=\"k\">do</span>\n  <span class=\"n\">pod</span> <span class=\"s1\">'${POD_NAME}'</span><span class=\"p\">,</span> <span class=\"ss\">:path</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'../'</span>\n\n  <span class=\"n\">target</span> <span class=\"s1\">'${POD_NAME}_Tests'</span> <span class=\"k\">do</span>\n    <span class=\"n\">inherit!</span> <span class=\"ss\">:search_paths</span>\n\n    <span class=\"err\">$</span><span class=\"p\">{</span><span class=\"no\">INCLUDED_PODS</span><span class=\"p\">}</span>\n  <span class=\"k\">end</span>\n<span class=\"k\">end</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>对于单个Pod组件库，也许够用了，但是我们如果是在进行组件化改造的进程中，需要与现有的私有库进行交互与依赖：比如业务库依赖基础库等，</p>\n\n<p>为了方便起见，不至于对每次创建私有库进行Podfile配置（还是懒😭），因此对Podfile进行了改造：</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n</pre></td><td class=\"rouge-code\"><pre><span class=\"n\">source</span> <span class=\"s1\">'ssh://私有库git地址/Specs.git'</span>\n<span class=\"n\">source</span> <span class=\"s1\">'https://github.com/CocoaPods/Specs.git'</span>\n\n<span class=\"n\">use_frameworks!</span>\n\n<span class=\"n\">platform</span> <span class=\"ss\">:ios</span><span class=\"p\">,</span> <span class=\"s1\">'12.0'</span>\t<span class=\"c1\">#写这篇文章时使用的podfile默认是10.0，可以改成你需要的</span>\n<span class=\"n\">post_install</span> <span class=\"k\">do</span> <span class=\"o\">|</span><span class=\"n\">installer</span><span class=\"o\">|</span>\n    <span class=\"n\">installer</span><span class=\"p\">.</span><span class=\"nf\">generated_projects</span><span class=\"p\">.</span><span class=\"nf\">each</span> <span class=\"k\">do</span> <span class=\"o\">|</span><span class=\"n\">project</span><span class=\"o\">|</span>\n          <span class=\"n\">project</span><span class=\"p\">.</span><span class=\"nf\">targets</span><span class=\"p\">.</span><span class=\"nf\">each</span> <span class=\"k\">do</span> <span class=\"o\">|</span><span class=\"n\">target</span><span class=\"o\">|</span>\n              <span class=\"n\">target</span><span class=\"p\">.</span><span class=\"nf\">build_configurations</span><span class=\"p\">.</span><span class=\"nf\">each</span> <span class=\"k\">do</span> <span class=\"o\">|</span><span class=\"n\">config</span><span class=\"o\">|</span>\n                  <span class=\"n\">config</span><span class=\"p\">.</span><span class=\"nf\">build_settings</span><span class=\"p\">[</span><span class=\"s1\">'IPHONEOS_DEPLOYMENT_TARGET'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">'12.0'</span>\n                  <span class=\"n\">config</span><span class=\"p\">.</span><span class=\"nf\">build_settings</span><span class=\"p\">[</span><span class=\"s2\">\"DEVELOPMENT_TEAM\"</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s2\">\"xxxxx\"</span>\t<span class=\"c1\">#这里指定签名，避免编译出错还要手动指定</span>\n               <span class=\"k\">end</span>\n          <span class=\"k\">end</span>\n   <span class=\"k\">end</span>\n<span class=\"k\">end</span>\n\n<span class=\"n\">use_frameworks!</span>\n\n\n<span class=\"n\">target</span> <span class=\"s1\">'${POD_NAME}_Example'</span> <span class=\"k\">do</span>\n\n<span class=\"c1\">#新建pod库创建模板的时候把私有库拉取一下</span>\n<span class=\"k\">def</span> <span class=\"nf\">debug_pod</span><span class=\"p\">(</span><span class=\"n\">pod_name</span><span class=\"p\">)</span>\n  <span class=\"n\">this_pod_name</span> <span class=\"o\">=</span> <span class=\"s2\">\"${POD_NAME}\"</span>\n  <span class=\"nb\">puts</span> <span class=\"s2\">\"debug_pod :pod_name = </span><span class=\"si\">#{</span><span class=\"n\">pod_name</span><span class=\"si\">}</span><span class=\"s2\"> and this_pod_name is </span><span class=\"si\">#{</span><span class=\"n\">this_pod_name</span><span class=\"si\">}</span><span class=\"s2\">\"</span>\n  <span class=\"k\">if</span> <span class=\"n\">this_pod_name</span> <span class=\"o\">==</span> <span class=\"n\">pod_name</span>\n    <span class=\"nb\">puts</span> <span class=\"s2\">\"</span><span class=\"si\">#{</span><span class=\"n\">this_pod_name</span><span class=\"si\">}</span><span class=\"s2\"> is equal args </span><span class=\"si\">#{</span><span class=\"n\">pod_name</span><span class=\"si\">}</span><span class=\"s2\"> do not pod\"</span>\n  <span class=\"k\">elsif</span>\n    <span class=\"c1\">#为了方便管理，这里的所有私有库建议放在同一个目录下</span>\n    <span class=\"n\">pod</span> <span class=\"s2\">\"</span><span class=\"si\">#{</span><span class=\"n\">pod_name</span><span class=\"si\">}</span><span class=\"s2\">\"</span><span class=\"p\">,</span> <span class=\"ss\">:path</span> <span class=\"o\">=&gt;</span> <span class=\"s2\">\"../../</span><span class=\"si\">#{</span><span class=\"n\">pod_name</span><span class=\"si\">}</span><span class=\"s2\">/\"</span>\n  <span class=\"k\">end</span>\n<span class=\"k\">end</span>\n\n  <span class=\"c1\">#为了避免重复定义 这里统一按下面方式进行处理吧，由于下文已经匹配了当前pod，这里不用注释掉</span>\n  <span class=\"n\">pod</span> <span class=\"s1\">'${POD_NAME}'</span><span class=\"p\">,</span> <span class=\"ss\">:path</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'../'</span>\n    \n  <span class=\"c1\">#这里定义需要被引入的所有私有库的库名</span>\n  <span class=\"n\">private_pods</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">\"基础组件1\"</span><span class=\"p\">,</span> <span class=\"s2\">\"基础组件2\"</span><span class=\"p\">,</span> <span class=\"s2\">\"基础组件3\"</span><span class=\"p\">,</span> <span class=\"s2\">\"能力组件1\"</span><span class=\"p\">,</span>  <span class=\"s2\">\"能力组件2\"</span><span class=\"p\">,</span>  <span class=\"s2\">\"能力组件3\"</span><span class=\"p\">,</span>  <span class=\"s2\">\"业务组件1\"</span><span class=\"p\">,</span>  <span class=\"s2\">\"业务组件2\"</span><span class=\"p\">]</span>\n\n  <span class=\"c1\">#这里将所有私有库名与路径匹配起来进行pod</span>\n  <span class=\"n\">private_pods</span><span class=\"p\">.</span><span class=\"nf\">each</span> <span class=\"k\">do</span> <span class=\"o\">|</span><span class=\"n\">private_pod</span><span class=\"o\">|</span>\n    <span class=\"n\">debug_pod</span><span class=\"p\">(</span><span class=\"n\">private_pod</span><span class=\"p\">)</span>\n  <span class=\"k\">end</span>\n\n\n  <span class=\"c1\">#如果上述方法用不来，或者不好用也可以改用下面比较传统的方式进行：</span>\n  <span class=\"c1\">#pod '基础组件1', :path =&gt; '../../基础组件1/'</span>\n  <span class=\"c1\">#pod '基础组件2', :path =&gt; '../../基础组件2/'</span>\n  <span class=\"c1\">#pod '基础组件3', :path =&gt; '../../基础组件3/'</span>\n\n  <span class=\"c1\">#pod '能力组件1', :path =&gt; '../../能力组件1/'</span>\n  <span class=\"c1\">#pod '能力组件2', :path =&gt; '../../能力组件2/'</span>\n  <span class=\"c1\">#pod '能力组件3', :path =&gt; '../../能力组件3/'</span>\n\n  <span class=\"c1\">#pod '业务组件1', :path =&gt; '../../业务组件1/'</span>\n  <span class=\"c1\">#pod '业务组件2', :path =&gt; '../../业务组件2/'</span>\n\n  <span class=\"n\">target</span> <span class=\"s1\">'${POD_NAME}_Tests'</span> <span class=\"k\">do</span>\n    <span class=\"n\">inherit!</span> <span class=\"ss\">:search_paths</span>\n    <span class=\"err\">$</span><span class=\"p\">{</span><span class=\"no\">INCLUDED_PODS</span><span class=\"p\">}</span>\n  <span class=\"k\">end</span>\n<span class=\"k\">end</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>值得一提的是，需要把所有Dev Pod放在同一个目录下，避免路径管理麻烦</p>\n\n<p>至此，生产的Pod组件库模板可以满足组件化进程需求了。</p>\n\n<p>##</p>\n\n\n                <hr style=\"visibility: hidden;\">\n                <ul class=\"pager\">\n                    \n                    <li class=\"previous\">\n                        <a href=\"/2023/07/20/iOS%E7%BB%84%E4%BB%B6%E5%8C%96%E5%AE%9E%E8%B7%B5%E4%BA%8C-%E5%AE%9E%E8%B7%B5%E8%BF%87%E7%A8%8B%E7%A2%B0%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"iOS组件化实践二：实践过程碰到的问题\">\n                        Previous<br>\n                        <span>iOS组件化实践二：实践过程碰到的问题</span>\n                        </a>\n                    </li>\n                    \n                    \n                    <li class=\"next\">\n                        <a href=\"/2023/07/26/5-iOS%E7%BB%84%E4%BB%B6%E5%8C%96-%E8%B5%84%E6%BA%90%E7%BB%84%E4%BB%B6%E5%BA%93/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"iOS组件化实践之：资源组件库\">\n                        Next<br>\n                        <span>iOS组件化实践之：资源组件库</span>\n                        </a>\n                    </li>\n                    \n                </ul>\n                <hr style=\"visibility: hidden;\">\n\n                \n                <!-- disqus 评论框 start -->\n                <div class=\"comment\">\n                    <div id=\"disqus_thread\" class=\"disqus-thread\"></div>\n                </div>\n                <!-- disqus 评论框 end -->\n                \n\n                \n            </div>  \n\n    <!-- Side Catalog Container -->\n        \n            <div class=\"\n                col-lg-2 col-lg-offset-0\n                visible-lg-block\n                sidebar-container\n                catalog-container\">\n                <div class=\"side-catalog\">\n                    <hr class=\"hidden-sm hidden-xs\">\n                    <h5>\n                        <a class=\"catalog-toggle\" href=\"#\">CATALOG</a>\n                    </h5>\n                    <ul class=\"catalog-body\"></ul>\n                </div>\n            </div>\n        \n\n    <!-- Sidebar Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                sidebar-container\">\n\n                <!-- Featured Tags -->\n                \n\n\n<section>\n    \n        <hr class=\"hidden-sm hidden-xs\">\n    \n    <h5><a href=\"/archive/\">FEATURED TAGS</a></h5>\n    <div class=\"tags\">\n        \n        \n        \n        \n        \n    </div>\n</section>\n\n\n                <!-- Friends Blog -->\n                \n            </div>\n        </div>\n    </div>\n</article>\n\n<!-- add support for mathjax by voleking-->\n\n\n\n\n\n\n<!-- disqus 公共JS代码 start (一个网页只需插入一次) -->\n<script type=\"text/javascript\">\n    /* * * CONFIGURATION VARIABLES * * */\n    var disqus_shortname = \"Cyp\";\n    var disqus_identifier = \"/2023/07/26/4-iOS组件化模板\";\n    var disqus_url = \"http://localhost:4000/2023/07/26/4-iOS%E7%BB%84%E4%BB%B6%E5%8C%96%E6%A8%A1%E6%9D%BF/\";\n\n    (function() {\n        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;\n        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';\n        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);\n    })();\n</script>\n<!-- disqus 公共JS代码 end -->\n\n\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n      var d = document, t = 'script',\n          o = d.createElement(t),\n          s = d.getElementsByTagName(t)[0];\n      o.src = u;\n      if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n      s.parentNode.insertBefore(o, s);\n    }\n</script>\n<!-- anchor-js, Doc:http://bryanbraun.github.io/anchorjs/ -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/anchor-js/1.1.1/anchor.min.js\",function(){\n        anchors.options = {\n          visible: 'hover',\n          placement: 'right',\n          // icon: '#'\n        };\n        anchors.add().remove('.intro-header h1').remove('.subheading').remove('.sidebar-container h5');\n    })\n</script>\n<style>\n    /* place left on bigger screen */\n    @media all and (min-width: 800px) {\n        .anchorjs-link{\n            position: absolute;\n            left: -0.75em;\n            font-size: 1.1em;\n            margin-top : -0.1em;\n        }\n    }\n</style>\n\n\n\n    <!-- Footer -->\n<footer>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <!-- SNS Link -->\n                \n\n\n<ul class=\"list-inline text-center\">\n\n\n  \n  \n  \n  \n  \n  \n  \n</ul>\n\n                <p class=\"copyright text-muted\">\n                    Copyright &copy; PaysonChen Blog 2024\n                    <br>\n                    <!-- Powered by <a href=\"http://huangxuan.me\">Hux Blog</a> | -->\n                 <!--    <iframe style=\"margin-left: 2px; margin-bottom:-5px;\" frameborder=\"0\" scrolling=\"0\" width=\"100px\"\n                        height=\"20px\"\n                        src=\"https://ghbtns.com/github-btn.html?user=huxpro&repo=huxpro.github.io&type=star&count=true\">\n                    </iframe> -->\n                </p>\n            </div>\n        </div>\n    </div>\n</footer>\n\n<!-- jQuery -->\n<script src=\"/js/jquery.min.js \"></script>\n\n<!-- Bootstrap Core JavaScript -->\n<!-- Currently, only navbar scroll-down effect at desktop still depends on this -->\n<script src=\"/js/bootstrap.min.js \"></script>\n\n<!-- Custom Theme JavaScript -->\n<script src=\"/js/hux-blog.min.js \"></script>\n\n<!-- Simple Jekyll Search -->\n<script src=\"/js/simple-jekyll-search.min.js\"></script>\n\n<!-- Service Worker -->\n\n<script src=\"/js/snackbar.js \"></script>\n<script src=\"/js/sw-registration.js \"></script>\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n        var d = document, t = 'script',\n            o = d.createElement(t),\n            s = d.getElementsByTagName(t)[0];\n        o.src = u;\n        if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n        s.parentNode.insertBefore(o, s);\n    }\n</script>\n\n<!--\n     Because of the native support for backtick-style fenced code blocks\n     right within the Markdown is landed in Github Pages,\n     From V1.6, There is no need for Highlight.js,\n     so Huxblog drops it officially.\n\n     - https://github.com/blog/2100-github-pages-now-faster-and-simpler-with-jekyll-3-0\n     - https://help.github.com/articles/creating-and-highlighting-code-blocks/\n     - https://github.com/jneen/rouge/wiki/list-of-supported-languages-and-lexers\n-->\n<!--\n    <script>\n        async(\"http://cdn.bootcss.com/highlight.js/8.6/highlight.min.js\", function(){\n            hljs.initHighlightingOnLoad();\n        })\n    </script>\n    <link href=\"http://cdn.bootcss.com/highlight.js/8.6/styles/github.min.css\" rel=\"stylesheet\">\n-->\n\n\n\n\n\n\n\n<!--fastClick.js -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/fastclick/1.0.6/fastclick.min.js\", function () {\n        var $nav = document.querySelector(\"nav\");\n        if ($nav) FastClick.attach($nav);\n    })\n</script>\n\n\n<!-- Google Analytics -->\n\n\n\n<!-- Baidu Tongji -->\n\n\n\n<!-- Side Catalog -->\n\n<script type=\"text/javascript\">\n    function generateCatalog(selector) {\n\n        // interop with multilangual \n        if ('' == 'true') {\n            _containerSelector = 'div.post-container.active'\n        } else {\n            _containerSelector = 'div.post-container'\n        }\n\n        // init\n        var P = $(_containerSelector), a, n, t, l, i, c;\n        a = P.find('h1,h2,h3,h4,h5,h6');\n\n        // clean\n        $(selector).html('')\n\n        // appending\n        a.each(function () {\n            n = $(this).prop('tagName').toLowerCase();\n            i = \"#\" + $(this).prop('id');\n            t = $(this).text();\n            c = $('<a href=\"' + i + '\" rel=\"nofollow\">' + t + '</a>');\n            l = $('<li class=\"' + n + '_nav\"></li>').append(c);\n            $(selector).append(l);\n        });\n        return true;\n    }\n\n    generateCatalog(\".catalog-body\");\n\n    // toggle side catalog\n    $(\".catalog-toggle\").click((function (e) {\n        e.preventDefault();\n        $('.side-catalog').toggleClass(\"fold\")\n    }))\n\n    /*\n     * Doc: https://github.com/davist11/jQuery-One-Page-Nav\n     * Fork by Hux to support padding\n     */\n    async(\"/js/jquery.nav.js\", function () {\n        $('.catalog-body').onePageNav({\n            currentClass: \"active\",\n            changeHash: !1,\n            easing: \"swing\",\n            filter: \"\",\n            scrollSpeed: 700,\n            scrollOffset: 0,\n            scrollThreshold: .2,\n            begin: null,\n            end: null,\n            scrollChange: null,\n            padding: 80\n        });\n    });\n</script>\n\n\n\n<!-- Multi-Lingual -->\n\n\n<!-- Simple Jekyll Search -->\n<script>\n    // https://stackoverflow.com/questions/1912501/unescape-html-entities-in-javascript\n    function htmlDecode(input) {\n        var e = document.createElement('textarea');\n        e.innerHTML = input;\n        // handle case of empty input\n        return e.childNodes.length === 0 ? \"\" : e.childNodes[0].nodeValue;\n    }\n\n    SimpleJekyllSearch({\n        searchInput: document.getElementById('search-input'),\n        resultsContainer: document.getElementById('search-results'),\n        json: '/search.json',\n        searchResultTemplate: '<div class=\"post-preview item\"><a href=\"{url}\"><h2 class=\"post-title\">{title}</h2><h3 class=\"post-subtitle\">{subtitle}</h3><hr></a></div>',\n        noResultsText: 'No results',\n        limit: 50,\n        fuzzy: false,\n        // a hack to get escaped subtitle unescaped. for some reason, \n        // post.subtitle w/o escape filter nuke entire search.\n        templateMiddleware: function (prop, value, template) {\n            if (prop === 'subtitle' || prop === 'title') {\n                if (value.indexOf(\"code\")) {\n                    return htmlDecode(value);\n                } else {\n                    return value;\n                }\n            }\n        }\n    });\n\n    $(document).ready(function () {\n        var $searchPage = $('.search-page');\n        var $searchOpen = $('.search-icon');\n        var $searchClose = $('.search-icon-close');\n        var $searchInput = $('#search-input');\n        var $body = $('body');\n\n        $searchOpen.on('click', function (e) {\n            e.preventDefault();\n            $searchPage.toggleClass('search-active');\n            var prevClasses = $body.attr('class') || '';\n            setTimeout(function () {\n                $body.addClass('no-scroll');\n            }, 400)\n\n            if ($searchPage.hasClass('search-active')) {\n                $searchClose.on('click', function (e) {\n                    e.preventDefault();\n                    $searchPage.removeClass('search-active');\n                    $body.attr('class', prevClasses);  // from closure \n                });\n                $searchInput.focus();\n            }\n        });\n    });\n</script>\n\n\n<!-- Image to hack wechat -->\n<img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\" />\n<!-- Migrate from head to bottom, no longer block render and still work -->\n\n</body>\n\n</html>\n","excerpt":"<h1 id=\"ios组件化实践之新建一个pod组件库\">iOS组件化实践之：新建一个Pod组件库</h1>\n","url":"/2023/07/26/4-iOS%E7%BB%84%E4%BB%B6%E5%8C%96%E6%A8%A1%E6%9D%BF/","next":{"id":"/2023/07/26/5-iOS组件化-资源组件库","tags":[],"relative_path":"_posts/2023-07-26-5-iOS组件化-资源组件库.md","collection":"posts","name":"2023-07-26-5-iOS组件化-资源组件库.md","url":"/2023/07/26/5-iOS%E7%BB%84%E4%BB%B6%E5%8C%96-%E8%B5%84%E6%BA%90%E7%BB%84%E4%BB%B6%E5%BA%93/","title":"iOS组件化实践之：资源组件库","date":"2023-07-26 00:00:00 +0800","categories":[],"path":"_posts/2023-07-26-5-iOS组件化-资源组件库.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/home-bg-geek.jpg","slug":"5-iOS组件化-资源组件库","ext":".md"},"title":"iOS组件化实践之：新建一个Pod组件库","date":"2023-07-26 00:00:00 +0800","categories":[],"path":"_posts/2023-07-26-4-iOS组件化模板.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/home-bg-geek.jpg","slug":"4-iOS组件化模板","ext":".md"},"output":"<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"google-site-verification\" content=\"xBT4GhYoi5qRD5tr338pgPM5OWHHIDR6mNg1a3euekI\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, viewport-fit=cover\">\n    <meta name=\"description\" content=\"与你一起发现更大的世界。\">\n    <meta name=\"keywords\"  content=\"PaysonChen,iOS,流媒体\">\n    <meta name=\"theme-color\" content=\"#000000\">\n    \n    <!-- Open Graph -->\n    <meta property=\"og:title\" content=\"iOS组件化实践之：资源组件库 - PaysonChen的博客 | PaysonChen Blog\">\n    \n    <meta property=\"og:type\" content=\"article\">\n    <meta property=\"og:description\" content=\"iOS组件化实现之：资源组件库\n\">\n    \n    \n    <meta property=\"article:published_time\" content=\"2023-07-26T00:00:00Z\">\n    \n    \n    <meta property=\"article:author\" content=\"PaysonChen\">\n    \n    \n    \n    <meta property=\"og:image\" content=\"http://localhost:4000\">\n    <meta property=\"og:url\" content=\"http://localhost:4000/2023/07/26/5-iOS%E7%BB%84%E4%BB%B6%E5%8C%96-%E8%B5%84%E6%BA%90%E7%BB%84%E4%BB%B6%E5%BA%93/\">\n    <meta property=\"og:site_name\" content=\"PaysonChen的博客 | PaysonChen Blog\">\n    \n    <title>iOS组件化实践之：资源组件库 - PaysonChen的博客 | PaysonChen Blog</title>\n\n    <!-- Web App Manifest -->\n    <link rel=\"manifest\" href=\"/pwa/manifest.json\">\n\n    <!-- Favicon -->\n    <link rel=\"shortcut icon\" href=\"/img/favicon.ico\">\n    \n    <!-- Canonical URL -->\n    <link rel=\"canonical\" href=\"http://localhost:4000/2023/07/26/5-iOS%E7%BB%84%E4%BB%B6%E5%8C%96-%E8%B5%84%E6%BA%90%E7%BB%84%E4%BB%B6%E5%BA%93/\">\n\n    <!-- Bootstrap Core CSS -->\n    <link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\">\n\n    <!-- Custom CSS -->\n    <link rel=\"stylesheet\" href=\"/css/hux-blog.min.css\">\n\n    <!-- Custom Fonts -->\n    <!-- <link href=\"http://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\"> -->\n    <!-- Hux change font-awesome CDN to qiniu -->\n    <link href=\"//cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\">\n\n\n    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->\n    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->\n    <!--[if lt IE 9]>\n        <script src=\"https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js\"></script>\n        <script src=\"https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js\"></script>\n    <![endif]-->\n\n    <!-- ga & ba script hoook -->\n    <script></script>\n</head>\n\n\n<!-- hack iOS CSS :active style -->\n<body ontouchstart=\"\">\n\n    <!-- Navigation -->\n\n    <nav class=\"navbar navbar-default navbar-custom navbar-fixed-top\">\n        \n        <div class=\"container-fluid\">\n            <!-- Brand and toggle get grouped for better mobile display -->\n            <div class=\"navbar-header page-scroll\">\n                <button type=\"button\" class=\"navbar-toggle\">\n                    <span class=\"sr-only\">Toggle navigation</span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                </button>\n                <a class=\"navbar-brand\" href=\"/\">PaysonChen Blog</a>\n            </div>\n\n            <!-- Collect the nav links, forms, and other content for toggling -->\n            <div id=\"huxblog_navbar\">\n                <div class=\"navbar-collapse\">\n                    <ul class=\"nav navbar-nav navbar-right\">\n                        <li>\n                            <a href=\"/\">Home</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        <li>\n                            <a href=\"/about/\">About</a>\n                        </li>\n                        \n                        \n                        \n                        <li>\n                            <a href=\"/archive/\">Archive</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        <li class=\"search-icon\">\n                            <a href=\"javascript:void(0)\">\n                                <i class=\"fa fa-search\"></i>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n            <!-- /.navbar-collapse -->\n        </div>\n        <!-- /.container -->\n    </nav>\n\n    <script>\n        // Drop Bootstarp low-performance Navbar\n        // Use customize navbar with high-quality material design animation\n        // in high-perf jank-free CSS3 implementation\n        var $body = document.body;\n        var $toggle = document.querySelector('.navbar-toggle');\n        var $navbar = document.querySelector('#huxblog_navbar');\n        var $collapse = document.querySelector('.navbar-collapse');\n\n        var __HuxNav__ = {\n            close: function () {\n                $navbar.className = \" \";\n                // wait until animation end.\n                setTimeout(function () {\n                    // prevent frequently toggle\n                    if ($navbar.className.indexOf('in') < 0) {\n                        $collapse.style.height = \"0px\"\n                    }\n                }, 400)\n            },\n            open: function () {\n                $collapse.style.height = \"auto\"\n                $navbar.className += \" in\";\n            }\n        }\n\n        // Bind Event\n        $toggle.addEventListener('click', function (e) {\n            if ($navbar.className.indexOf('in') > 0) {\n                __HuxNav__.close()\n            } else {\n                __HuxNav__.open()\n            }\n        })\n\n        /**\n         * Since Fastclick is used to delegate 'touchstart' globally\n         * to hack 300ms delay in iOS by performing a fake 'click',\n         * Using 'e.stopPropagation' to stop 'touchstart' event from \n         * $toggle/$collapse will break global delegation.\n         * \n         * Instead, we use a 'e.target' filter to prevent handler\n         * added to document close HuxNav.  \n         *\n         * Also, we use 'click' instead of 'touchstart' as compromise\n         */\n        document.addEventListener('click', function (e) {\n            if (e.target == $toggle) return;\n            if (e.target.className == 'icon-bar') return;\n            __HuxNav__.close();\n        })\n    </script>\n    <!-- Search -->\n<div class=\"search-page\">\n  <div class=\"search-icon-close-container\">\n    <span class=\"search-icon-close\">\n      <i class=\"fa fa-chevron-down\"></i>\n    </span>\n  </div>\n  <div class=\"search-main container\">\n    <div class=\"row\">\n      <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n        <form></form>\n        <input type=\"text\" id=\"search-input\" placeholder=\"$ grep...\">\n        </form>\n        <div id=\"search-results\" class=\"mini-post-list\"></div>\n      </div>\n    </div>\n  </div>\n</div>\n\n    <!-- Image to hack wechat -->\n<!-- <img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\"> -->\n<!-- <img src=\"/img/home-bg-geek.jpg\" width=\"0\" height=\"0\"> -->\n\n<!-- Post Header -->\n\n\n\n<style type=\"text/css\">\n    header.intro-header{\n        position: relative;\n        background-image: url('/img/home-bg-geek.jpg');\n        background: ;\n    }\n\n    \n</style>\n\n<header class=\"intro-header\" >\n\n    <div class=\"header-mask\"></div>\n    \n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <div class=\"post-heading\">\n                    <div class=\"tags\">\n                        \n                    </div>\n                    <h1>iOS组件化实践之：资源组件库</h1>\n                    \n                    <h2 class=\"subheading\"></h2>\n                    <span class=\"meta\">Posted by PaysonChen on July 26, 2023</span>\n                </div>\n            </div>\n        </div>\n    </div>\n</header>\n\n\n\n\n\n\n<!-- Post Content -->\n<article>\n    <div class=\"container\">\n        <div class=\"row\">\n\n    <!-- Post Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                post-container\">\n\n                <!-- Multi-Lingual -->\n                \n\n\t\t\t\t<h1 id=\"ios组件化实现之资源组件库\">iOS组件化实现之：资源组件库</h1>\n\n<h2 id=\"1-资源有哪些\">1 资源有哪些</h2>\n\n<p>​\t笼统的可以说，只要不是代码文件的，都可以算是资源文件，举些例子，包括但不限于：图片、音频、视频、动画、字体、多语言文件(.strings)、各类资源包、内置数据库、二进制加密文件不等</p>\n\n<h2 id=\"2-为什么要做\">2 为什么要做</h2>\n\n<p>​\t存在一些可复用的资源，举些例子，包括但不限于：</p>\n\n<ul>\n  <li>\n    <p>通用样式图标</p>\n\n    <p>导航条图标、头像、按钮、单/复选框、通用背景图片等</p>\n  </li>\n  <li>\n    <p>通用媒体文件</p>\n\n    <p>通用的点击音效、提示音、过场动画、加载动画等</p>\n  </li>\n  <li>\n    <p>其他通用文件</p>\n\n    <p>城市列表、字体、第三方预置资源等</p>\n  </li>\n</ul>\n\n<p>由于部分资源是有通用性，因此将这些通用资源提取出来，形成组件，可服务于更多项目，提升集成的效率，降低研发成本</p>\n\n<h2 id=\"3-怎么做\">3 怎么做</h2>\n\n<h3 id=\"31-新建一个pod私有库\">3.1 新建一个Pod私有库</h3>\n\n<p><a href=\"https://paysonchen.cn/2023/07/26/4-iOS%E7%BB%84%E4%BB%B6%E5%8C%96%E6%A8%A1%E6%9D%BF/\">此处省略一万字(查看另一篇文章)</a></p>\n\n<h3 id=\"32-迁移主工程资源\">3.2 迁移主工程资源</h3>\n\n<p>主工程：</p>\n\n<p>中的资源一般散落在各处，即遍是不一定全部存放在asset集合中，可以通过Xcode Project Navigator底部的搜索栏，通过后缀名(.png / .jpg /.webp /.mp3 /,mp4  ……)检索出资源</p>\n\n<p>资源组件库：</p>\n\n<p>asset文件夹下存放主工程迁移的资源。</p>\n\n<p>存放形式可以以下形式：</p>\n\n<ul>\n  <li>xcassets集合</li>\n  <li>散落的资源文件</li>\n</ul>\n\n<p>配置podspec：</p>\n\n<p>通过指定resource_bundles进行资源的配置</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n</pre></td><td class=\"rouge-code\"><pre>   <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">resource_bundles</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n     <span class=\"s1\">'PSCResource'</span> <span class=\"o\">=&gt;</span> <span class=\"p\">[</span>\n     <span class=\"s1\">'PSCResource/Assets/PSCCommon.xcassets'</span><span class=\"p\">,</span>\n     <span class=\"s1\">'PSCResource/Assets/PSCCommonResources/**/*'</span><span class=\"p\">,</span>\n     <span class=\"s1\">'PSCResource/Assets/XXProj.xcassets'</span><span class=\"p\">,</span>\n     <span class=\"s1\">'PSCResource/Assets/XXProjResources/**/*'</span><span class=\"p\">]</span>\n   <span class=\"p\">}</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h3 id=\"33-资源读取方式\">3.3 资源读取方式</h3>\n\n<p>资源组件化之前，使用一般是</p>\n\n<pre><code class=\"language-objective-c\">//图片:imageNamed\n[UIImage imageNamed:@\"pic\"];\n\n//资源:通过mainBundle进行：\n[[NSBundle mainBundle] pathForResource:@\"name\" ofType:@\"ext\"];\n</code></pre>\n\n<p>这是因为，主工程里的资源，一般是打包到xx.app的根目录（xcasset以asset.car存在）</p>\n\n<p>组件库里的资源是打包 xx.framework/xx.bundle</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n</pre></td><td class=\"rouge-code\"><pre>……/Debug-iphoneos/xxx.app/Frameworks/xx.framework/xx.bundle/pic.png\n……/Debug-iphoneos/xxx.app/Frameworks/xx.framework/xx.bundle/asset.car\n……\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>直接通过下列方法获取为空</p>\n\n<pre><code class=\"language-objective-c\">//组件库资源，通过以下方法获取为nil\n[UIImage imageNamed:@\"pic\"];\n[[NSBundle mainBundle] pathForResource:@\"name\" ofType:@\"ext\"];\n</code></pre>\n\n<p>组件库资源获取方法是为下列类添加类别</p>\n\n<ul>\n  <li>UIImage:</li>\n</ul>\n\n<pre><code class=\"language-objective-c\">@interface UIImage (PSCResource)\n\n/// 从 PSCResource 通过图片名称获取UIImage\n/// - Parameter name: 图片名称\n+ (UIImage *)pscImageNamed:(NSString *)name;\n\n@end\n\n@implementation UIImage (PSCResource)\n\n+ (UIImage *)pscImageNamed:(NSString *)name{\n    NSBundle *bundle = [NSBundle bundleForClass:NSClassFromString(kCurResPodName)];\n    NSURL *url = [bundle URLForResource:kCurResBunldeName withExtension:@\"bundle\"];\n    if (url) {\n        NSBundle *imageBundle = [NSBundle bundleWithURL:url];\n        UIImage *img = [UIImage imageNamed:name inBundle:imageBundle compatibleWithTraitCollection:nil];\n        if (img) {\n            return img;\n        }\n    }\n    //这里兜个底，兼容资源还在主工程的时候，使用mainBundle\n    return [UIImage imageNamed:name];\n}\n\n@end\n</code></pre>\n\n<ul>\n  <li>NSBunlde:</li>\n</ul>\n\n<pre><code class=\"language-objective-c\">@interface NSBundle (PSCResource)\n/// 私有库获取资源\n/// - Parameters:\n///   - name: 资源名\n///   - ext: 资源类别\n+ (NSString *)pscPathForResource:(NSString *)name ofType:(NSString *)ext;\n@end\n\n@implementation NSBundle (PSCResource)\n+ (NSString *)pscPathForResource:(NSString *)name ofType:(NSString *)ext {\n    \n    NSBundle *bundle = [NSBundle bundleForClass:NSClassFromString(kCurResPodName)];\n    NSURL *url = [bundle URLForResource:kCurResBunldeName withExtension:@\"bundle\"];\n    if (url) {\n        NSBundle *resBundle = [NSBundle bundleWithURL:url];\n        NSString *path = [resBundle pathForResource:name ofType:ext];\n        if (path) {\n            return path;\n        }\n    }\n    //这里兜个底，兼容资源还在主工程的时候，使用mainBundle\n    return [[NSBundle mainBundle] pathForResource:name ofType:ext];\n}\n@end\n</code></pre>\n\n<h3 id=\"34-主工程读取替换\">3.4 主工程读取替换</h3>\n\n<p>检索主工程里所有的方法：</p>\n\n<div class=\"language-objc highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n</pre></td><td class=\"rouge-code\"><pre><span class=\"p\">[</span><span class=\"n\">UIImage</span> <span class=\"nf\">imageNamed</span><span class=\"p\">:</span><span class=\"s\">@\"pic\"</span><span class=\"p\">];</span>\n<span class=\"p\">[[</span><span class=\"n\">NSBundle</span> <span class=\"nf\">mainBundle</span><span class=\"p\">]</span> <span class=\"nf\">pathForResource</span><span class=\"p\">:</span><span class=\"s\">@\"name\"</span> <span class=\"nf\">ofType</span><span class=\"p\">:</span><span class=\"s\">@\"ext\"</span><span class=\"p\">];</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>替换成:</p>\n\n<pre><code class=\"language-objective-c\">[UIImage pscImageNamed:@\"xx\"]\nNSString *hotPath = [NSBundle pscPathForResource:@\"yy\" ofType:@\"zz\"];\n</code></pre>\n\n<p>最后检验下上述调用是否正常？</p>\n\n\n                <hr style=\"visibility: hidden;\">\n                <ul class=\"pager\">\n                    \n                    <li class=\"previous\">\n                        <a href=\"/2023/07/26/4-iOS%E7%BB%84%E4%BB%B6%E5%8C%96%E6%A8%A1%E6%9D%BF/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"iOS组件化实践之：新建一个Pod组件库\">\n                        Previous<br>\n                        <span>iOS组件化实践之：新建一个Pod组件库</span>\n                        </a>\n                    </li>\n                    \n                    \n                    <li class=\"next\">\n                        <a href=\"/2023/07/31/6-iOS-%E7%BB%84%E4%BB%B6%E5%8C%96-%E5%91%BD%E5%90%8D%E6%B3%A8%E9%87%8A%E7%AF%87/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"iOS组件化实践之：类命名注释篇\">\n                        Next<br>\n                        <span>iOS组件化实践之：类命名注释篇</span>\n                        </a>\n                    </li>\n                    \n                </ul>\n                <hr style=\"visibility: hidden;\">\n\n                \n                <!-- disqus 评论框 start -->\n                <div class=\"comment\">\n                    <div id=\"disqus_thread\" class=\"disqus-thread\"></div>\n                </div>\n                <!-- disqus 评论框 end -->\n                \n\n                \n            </div>  \n\n    <!-- Side Catalog Container -->\n        \n            <div class=\"\n                col-lg-2 col-lg-offset-0\n                visible-lg-block\n                sidebar-container\n                catalog-container\">\n                <div class=\"side-catalog\">\n                    <hr class=\"hidden-sm hidden-xs\">\n                    <h5>\n                        <a class=\"catalog-toggle\" href=\"#\">CATALOG</a>\n                    </h5>\n                    <ul class=\"catalog-body\"></ul>\n                </div>\n            </div>\n        \n\n    <!-- Sidebar Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                sidebar-container\">\n\n                <!-- Featured Tags -->\n                \n\n\n<section>\n    \n        <hr class=\"hidden-sm hidden-xs\">\n    \n    <h5><a href=\"/archive/\">FEATURED TAGS</a></h5>\n    <div class=\"tags\">\n        \n        \n        \n        \n        \n    </div>\n</section>\n\n\n                <!-- Friends Blog -->\n                \n            </div>\n        </div>\n    </div>\n</article>\n\n<!-- add support for mathjax by voleking-->\n\n\n\n\n\n\n<!-- disqus 公共JS代码 start (一个网页只需插入一次) -->\n<script type=\"text/javascript\">\n    /* * * CONFIGURATION VARIABLES * * */\n    var disqus_shortname = \"Cyp\";\n    var disqus_identifier = \"/2023/07/26/5-iOS组件化-资源组件库\";\n    var disqus_url = \"http://localhost:4000/2023/07/26/5-iOS%E7%BB%84%E4%BB%B6%E5%8C%96-%E8%B5%84%E6%BA%90%E7%BB%84%E4%BB%B6%E5%BA%93/\";\n\n    (function() {\n        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;\n        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';\n        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);\n    })();\n</script>\n<!-- disqus 公共JS代码 end -->\n\n\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n      var d = document, t = 'script',\n          o = d.createElement(t),\n          s = d.getElementsByTagName(t)[0];\n      o.src = u;\n      if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n      s.parentNode.insertBefore(o, s);\n    }\n</script>\n<!-- anchor-js, Doc:http://bryanbraun.github.io/anchorjs/ -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/anchor-js/1.1.1/anchor.min.js\",function(){\n        anchors.options = {\n          visible: 'hover',\n          placement: 'right',\n          // icon: '#'\n        };\n        anchors.add().remove('.intro-header h1').remove('.subheading').remove('.sidebar-container h5');\n    })\n</script>\n<style>\n    /* place left on bigger screen */\n    @media all and (min-width: 800px) {\n        .anchorjs-link{\n            position: absolute;\n            left: -0.75em;\n            font-size: 1.1em;\n            margin-top : -0.1em;\n        }\n    }\n</style>\n\n\n\n    <!-- Footer -->\n<footer>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <!-- SNS Link -->\n                \n\n\n<ul class=\"list-inline text-center\">\n\n\n  \n  \n  \n  \n  \n  \n  \n</ul>\n\n                <p class=\"copyright text-muted\">\n                    Copyright &copy; PaysonChen Blog 2024\n                    <br>\n                    <!-- Powered by <a href=\"http://huangxuan.me\">Hux Blog</a> | -->\n                 <!--    <iframe style=\"margin-left: 2px; margin-bottom:-5px;\" frameborder=\"0\" scrolling=\"0\" width=\"100px\"\n                        height=\"20px\"\n                        src=\"https://ghbtns.com/github-btn.html?user=huxpro&repo=huxpro.github.io&type=star&count=true\">\n                    </iframe> -->\n                </p>\n            </div>\n        </div>\n    </div>\n</footer>\n\n<!-- jQuery -->\n<script src=\"/js/jquery.min.js \"></script>\n\n<!-- Bootstrap Core JavaScript -->\n<!-- Currently, only navbar scroll-down effect at desktop still depends on this -->\n<script src=\"/js/bootstrap.min.js \"></script>\n\n<!-- Custom Theme JavaScript -->\n<script src=\"/js/hux-blog.min.js \"></script>\n\n<!-- Simple Jekyll Search -->\n<script src=\"/js/simple-jekyll-search.min.js\"></script>\n\n<!-- Service Worker -->\n\n<script src=\"/js/snackbar.js \"></script>\n<script src=\"/js/sw-registration.js \"></script>\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n        var d = document, t = 'script',\n            o = d.createElement(t),\n            s = d.getElementsByTagName(t)[0];\n        o.src = u;\n        if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n        s.parentNode.insertBefore(o, s);\n    }\n</script>\n\n<!--\n     Because of the native support for backtick-style fenced code blocks\n     right within the Markdown is landed in Github Pages,\n     From V1.6, There is no need for Highlight.js,\n     so Huxblog drops it officially.\n\n     - https://github.com/blog/2100-github-pages-now-faster-and-simpler-with-jekyll-3-0\n     - https://help.github.com/articles/creating-and-highlighting-code-blocks/\n     - https://github.com/jneen/rouge/wiki/list-of-supported-languages-and-lexers\n-->\n<!--\n    <script>\n        async(\"http://cdn.bootcss.com/highlight.js/8.6/highlight.min.js\", function(){\n            hljs.initHighlightingOnLoad();\n        })\n    </script>\n    <link href=\"http://cdn.bootcss.com/highlight.js/8.6/styles/github.min.css\" rel=\"stylesheet\">\n-->\n\n\n\n\n\n\n\n<!--fastClick.js -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/fastclick/1.0.6/fastclick.min.js\", function () {\n        var $nav = document.querySelector(\"nav\");\n        if ($nav) FastClick.attach($nav);\n    })\n</script>\n\n\n<!-- Google Analytics -->\n\n\n\n<!-- Baidu Tongji -->\n\n\n\n<!-- Side Catalog -->\n\n<script type=\"text/javascript\">\n    function generateCatalog(selector) {\n\n        // interop with multilangual \n        if ('' == 'true') {\n            _containerSelector = 'div.post-container.active'\n        } else {\n            _containerSelector = 'div.post-container'\n        }\n\n        // init\n        var P = $(_containerSelector), a, n, t, l, i, c;\n        a = P.find('h1,h2,h3,h4,h5,h6');\n\n        // clean\n        $(selector).html('')\n\n        // appending\n        a.each(function () {\n            n = $(this).prop('tagName').toLowerCase();\n            i = \"#\" + $(this).prop('id');\n            t = $(this).text();\n            c = $('<a href=\"' + i + '\" rel=\"nofollow\">' + t + '</a>');\n            l = $('<li class=\"' + n + '_nav\"></li>').append(c);\n            $(selector).append(l);\n        });\n        return true;\n    }\n\n    generateCatalog(\".catalog-body\");\n\n    // toggle side catalog\n    $(\".catalog-toggle\").click((function (e) {\n        e.preventDefault();\n        $('.side-catalog').toggleClass(\"fold\")\n    }))\n\n    /*\n     * Doc: https://github.com/davist11/jQuery-One-Page-Nav\n     * Fork by Hux to support padding\n     */\n    async(\"/js/jquery.nav.js\", function () {\n        $('.catalog-body').onePageNav({\n            currentClass: \"active\",\n            changeHash: !1,\n            easing: \"swing\",\n            filter: \"\",\n            scrollSpeed: 700,\n            scrollOffset: 0,\n            scrollThreshold: .2,\n            begin: null,\n            end: null,\n            scrollChange: null,\n            padding: 80\n        });\n    });\n</script>\n\n\n\n<!-- Multi-Lingual -->\n\n\n<!-- Simple Jekyll Search -->\n<script>\n    // https://stackoverflow.com/questions/1912501/unescape-html-entities-in-javascript\n    function htmlDecode(input) {\n        var e = document.createElement('textarea');\n        e.innerHTML = input;\n        // handle case of empty input\n        return e.childNodes.length === 0 ? \"\" : e.childNodes[0].nodeValue;\n    }\n\n    SimpleJekyllSearch({\n        searchInput: document.getElementById('search-input'),\n        resultsContainer: document.getElementById('search-results'),\n        json: '/search.json',\n        searchResultTemplate: '<div class=\"post-preview item\"><a href=\"{url}\"><h2 class=\"post-title\">{title}</h2><h3 class=\"post-subtitle\">{subtitle}</h3><hr></a></div>',\n        noResultsText: 'No results',\n        limit: 50,\n        fuzzy: false,\n        // a hack to get escaped subtitle unescaped. for some reason, \n        // post.subtitle w/o escape filter nuke entire search.\n        templateMiddleware: function (prop, value, template) {\n            if (prop === 'subtitle' || prop === 'title') {\n                if (value.indexOf(\"code\")) {\n                    return htmlDecode(value);\n                } else {\n                    return value;\n                }\n            }\n        }\n    });\n\n    $(document).ready(function () {\n        var $searchPage = $('.search-page');\n        var $searchOpen = $('.search-icon');\n        var $searchClose = $('.search-icon-close');\n        var $searchInput = $('#search-input');\n        var $body = $('body');\n\n        $searchOpen.on('click', function (e) {\n            e.preventDefault();\n            $searchPage.toggleClass('search-active');\n            var prevClasses = $body.attr('class') || '';\n            setTimeout(function () {\n                $body.addClass('no-scroll');\n            }, 400)\n\n            if ($searchPage.hasClass('search-active')) {\n                $searchClose.on('click', function (e) {\n                    e.preventDefault();\n                    $searchPage.removeClass('search-active');\n                    $body.attr('class', prevClasses);  // from closure \n                });\n                $searchInput.focus();\n            }\n        });\n    });\n</script>\n\n\n<!-- Image to hack wechat -->\n<img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\" />\n<!-- Migrate from head to bottom, no longer block render and still work -->\n\n</body>\n\n</html>\n","excerpt":"<h1 id=\"ios组件化实现之资源组件库\">iOS组件化实现之：资源组件库</h1>\n","url":"/2023/07/26/5-iOS%E7%BB%84%E4%BB%B6%E5%8C%96-%E8%B5%84%E6%BA%90%E7%BB%84%E4%BB%B6%E5%BA%93/","next":{"id":"/2023/07/31/6-iOS-组件化-命名注释篇","tags":[],"relative_path":"_posts/2023-07-31-6-iOS-组件化-命名注释篇.md","collection":"posts","content":"<h1 id=\"ios组件化实践之类命名注释篇\">iOS组件化实践之：类命名注释篇</h1>\n\n<h2 id=\"1问题描述\">1.问题描述</h2>\n\n<p>CocoaPods组件创建时，提供的一个很好的管理命名规范的思路：以统一的命名前缀，一般以项目/组织等缩写作为前缀</p>\n\n<p>组件化规整之后，可能存在的情况是前后的文件命名不一致导致的影响代码易读性、易维护等问题</p>\n\n<p>除此之外，由于代码经由不同人迭代的，甚至不同组织迭代（从外包接手的项目）还存在一些文件注释的注释模板差异的情况</p>\n\n<h2 id=\"2-类命名统一\">2. 类命名统一</h2>\n\n<h3 id=\"21-类重命名之前\">2.1 类重命名之前</h3>\n\n<p>需要确认下，当前类或者与之相关的一些类，是否存在于<a href=\"https://cocoapods.org/\">CocoaPods</a>公有源上，如果存在，可以直接通过Pod引入（组件内通过dependency），</p>\n\n<p>举个例子：如果你需要进行重命名的类是这样的：SDWebImage、SDWebImageXXX、SDXXX，显然，这是将SDWebImage通过代码直接集成，由于SDWebImage类数量比较多，且属于成熟框架，在确认没有私自改动逻辑的情况下，可以考虑直接移除，采用通过Pod引入（组件内通过dependency）</p>\n\n<p>当然，如果存在没有被用到的类，也正好是一个移除他们的好时机！</p>\n\n<p><strong>‼️特别注意：改名之前，需要确认，要改的类名是否已经存在工程中，如果存在且继续修改，会造成很多错误替换，造成很复杂的编译问题，且难以回退。</strong></p>\n\n<p>例如：ABCWebView，要改成PSCWebView，此时如果工程中已经存在PSCWebView，则ABCWebView继续再改成PSCWebView，会造成所有ABCWebView与PSCWebView的混乱，除非单次修改（之前的操作已经提交），否则回退也变得异常困难。</p>\n\n<h3 id=\"22-常规类重命名\">2.2 常规类重命名</h3>\n\n<p>可以通过IDE：Xcode自带的rename功能进行类名重命名：</p>\n\n<p><img src=\"/img/name/1.png\" alt=\"\" /></p>\n\n<p>替换成带期望前缀的类名</p>\n\n<p><img src=\"/img/name/2.png\" alt=\"WX20230731-191648\" /></p>\n\n<p>可能存在替换不完全的可能，需要检索下旧类名，全局替换下，确保编译通过方可</p>\n\n<h3 id=\"23-categories重命名\">2.3 categories重命名</h3>\n\n<p>categories的重命名无法根据上述方式，只能通过常规的修改文件名，以及全局替换的方式。</p>\n\n<p>值得一提的是，若一个基础类存在多个单一功能的categories，例如存在UIButton+Category1，UIButton+Category2……，他们有可能存在重复的功能可以考虑保留其中一个即可，也可以考虑将他们重构，合并，或者是重新划分下功能归属，</p>\n\n<h2 id=\"3类注释模板统一\">3.类注释模板统一：</h2>\n\n<p>治理这些情况，可能就需要分两步：</p>\n\n<h3 id=\"31-第一步存量类注释规范治理\">3.1 第一步：存量类注释规范治理</h3>\n\n<p>存量治理，这边采用脚本批量执行，具体思路如下：</p>\n\n<ul>\n  <li>遍历指定目录（若未传参数则为当前目录）下的子目录</li>\n  <li>匹配所有iOS工程类文件：.h .m .swift</li>\n  <li>对其注释头进行模板替换\n    <ul>\n      <li>匹配获取当前类的author，匹配不到则使用默认值（需定义）</li>\n      <li>匹配获取当前类的time，匹配不到则使用默认值（需定义）</li>\n      <li>替换版权信息（需定义）</li>\n    </ul>\n  </li>\n</ul>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#!/bin/bash</span>\n\n<span class=\"c\"># 遍历更新当前目录下(含子目录）所有iOS工程类文件：.h .m .swift 并对其注释头进行模板替换</span>\n<span class=\"c\"># author: Chenyp34</span>\n<span class=\"c\"># [目的]</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># 组件化规整之后，可能存在的情况是前后的文件命名不一致导致的影响代码易读性、易维护等问题</span>\n<span class=\"c\"># 除此之外，由于代码经由不同人迭代的，甚至不同组织迭代（从外包接手的项目）还存在一些文件注释的注释模板差异的情况</span>\n<span class=\"c\"># 此脚本目的为了解决存量类文件头注释统一性问题</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [目录]</span>\n<span class=\"c\">#   - replace_class_header_anotation.sh 遍历更新当前目录下，子目录git仓库的脚本</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [说明]</span>\n<span class=\"c\"># 1、遍历指定目录（若未传参数则为当前目录）下的子目录</span>\n<span class=\"c\"># 2、匹配所有iOS工程类文件：.h .m .swift</span>\n<span class=\"c\"># 3、对其注释头进行模板替换</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [参数]</span>\n<span class=\"c\"># 1、参数1，指定目录</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [调用说明]</span>\n<span class=\"c\"># 1、未指定目录，则取当前目录：sh replace_class_header_anotation.sh</span>\n<span class=\"c\"># 2、指定目录：sh replace_class_header_anotation.sh /User/xxx/xx</span>\n<span class=\"c\"># 本脚本适用于将：下述注释替换成 统一注释模板：</span>\n<span class=\"c\">#   其一：</span>\n<span class=\"c\">#//</span>\n<span class=\"c\">#//  FileName.h</span>\n<span class=\"c\">#//  ProjectName</span>\n<span class=\"c\">#//</span>\n<span class=\"c\">#//  Created by Author on Date.</span>\n<span class=\"c\">#// (没版权信息)</span>\n<span class=\"c\">#//</span>\n<span class=\"c\">#</span>\n<span class=\"c\">#   其二：</span>\n<span class=\"c\">#   /****************************************************************************************************</span>\n<span class=\"c\">#   * 版权所有： Copyright (c) 2012-2021 xxxx. All rights reserved.</span>\n<span class=\"c\">#   * 作 者： Author （2021/3/12）</span>\n<span class=\"c\">#   * 界面描述：  界面描述</span>\n<span class=\"c\">#   ****************************************************************************************************/</span>\n<span class=\"c\">#</span>\n<span class=\"c\">#   其三：</span>\n<span class=\"c\">#   没有任何注释的</span>\n<span class=\"c\">#</span>\n<span class=\"c\">#</span>\n<span class=\"c\">#   替换成统一注释模板：</span>\n<span class=\"c\">#</span>\n<span class=\"c\">#//</span>\n<span class=\"c\">#//  \"$filename\"</span>\n<span class=\"c\">#//  \"$project_name\"</span>\n<span class=\"c\">#//</span>\n<span class=\"c\">#//  Created by \"$auth\" on \"$date\".</span>\n<span class=\"c\">#//  \"$copyright_str\"</span>\n<span class=\"c\">#//</span>\n<span class=\"c\">#</span>\n<span class=\"c\">#定义版权信息</span>\n<span class=\"nb\">export </span><span class=\"nv\">copyright_str</span><span class=\"o\">=</span><span class=\"s2\">\"Copyright (C) 2023 Your Company Name Technology Limited. All rights reserved.\"</span>\n\n<span class=\"c\">#定义默认用户信息：PaysonChen</span>\n<span class=\"nb\">export </span><span class=\"nv\">def_author_str</span><span class=\"o\">=</span><span class=\"s2\">\"PaysonChen\"</span>\n\n<span class=\"c\">#定义默认日期：当前日期</span>\n<span class=\"nb\">export </span><span class=\"nv\">def_time_str</span><span class=\"o\">=</span><span class=\"sb\">`</span><span class=\"nb\">date</span> +%Y/%m/%d<span class=\"sb\">`</span>\n\n<span class=\"k\">function </span>get_creator_name_with_template_2<span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"nv\">file</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n    <span class=\"nv\">creator_name</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">sed</span> <span class=\"nt\">-n</span> <span class=\"s1\">'s/.*作    者： \\(.*\\).*/\\1/p'</span> <span class=\"nv\">$file</span><span class=\"si\">)</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"creator_name=\"</span><span class=\"nv\">$creator_name</span><span class=\"s2\">\" in file=\"</span><span class=\"nv\">$file</span>\n    \n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$creator_name</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">echo</span> <span class=\"s1\">'///获取创建者 第二种模板获取 为空 使用默认值'</span>\n        <span class=\"nv\">creator_name</span><span class=\"o\">=</span><span class=\"nv\">$def_author_str</span>\n    <span class=\"k\">fi</span>\n<span class=\"o\">}</span>\n\n<span class=\"k\">function </span>get_creator_name<span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"nv\">file</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n    <span class=\"nv\">creator_name</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">sed</span> <span class=\"nt\">-n</span> <span class=\"s1\">'s/.*Created by \\(.*\\) on.*/\\1/p'</span> <span class=\"nv\">$file</span><span class=\"si\">)</span>\n    \n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$creator_name</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span>get_creator_name_with_template_2 <span class=\"nv\">$file</span>\n    <span class=\"k\">fi\n    \n    </span><span class=\"nb\">echo</span> <span class=\"s2\">\"--------creator_name=【\"</span><span class=\"nv\">$creator_name</span><span class=\"s2\">\"】 in file=\"</span><span class=\"nv\">$file</span>\n<span class=\"o\">}</span>\n\n\n\n<span class=\"k\">function </span>get_creator_time_with_template_2<span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"nv\">file</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n    <span class=\"nv\">creator_time</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">sed</span> <span class=\"nt\">-n</span> <span class=\"s1\">'s/.*创建日期： \\(.*\\).*/\\1/p'</span> <span class=\"nv\">$file</span><span class=\"si\">)</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"-------创建日期=【\"</span><span class=\"nv\">$creator_time</span><span class=\"s2\">\"】 in file=\"</span><span class=\"nv\">$file</span>\n\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$creator_time</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then</span>\n<span class=\"c\">#        echo '///获取创建时间 第二种模板获取 为空 使用默认值'</span>\n        <span class=\"nv\">creator_time</span><span class=\"o\">=</span><span class=\"nv\">$def_time_str</span>\n    <span class=\"k\">fi</span>\n<span class=\"o\">}</span>\n\n\n<span class=\"k\">function </span>format_creator_time<span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"nv\">creator_time</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n    \n    <span class=\"nv\">length</span><span class=\"o\">=</span><span class=\"k\">${#</span><span class=\"nv\">creator_time</span><span class=\"k\">}</span>\n\n    <span class=\"c\"># 截取除最后一个字符外的部分</span>\n    <span class=\"nv\">creator_time</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">creator_time</span>:0:length-1<span class=\"k\">}</span>\n    <span class=\"c\">#echo \"截去掉最后一个字符后的字符串: $creator_time\"</span>\n<span class=\"o\">}</span>\n\n\n<span class=\"k\">function </span>get_creator_time<span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"nv\">file</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n    \n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$2</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nv\">line</span><span class=\"o\">=</span>5\n    <span class=\"k\">else\n        </span><span class=\"nv\">line</span><span class=\"o\">=</span><span class=\"nv\">$2</span>\n    <span class=\"k\">fi</span>\n    <span class=\"c\">#creator_time=$(sed -n '5s/.*\\(.\\{10\\}\\)$/\\1/p' $file)</span>\n    <span class=\"nv\">creator_time</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">awk</span> <span class=\"s1\">'NR=='</span><span class=\"nv\">$line</span><span class=\"s1\">' {print $NF}'</span> <span class=\"nv\">$file</span><span class=\"si\">)</span>\n\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"-------creator_time=【\"</span><span class=\"nv\">$creator_time</span><span class=\"s2\">\"】 line = \"</span><span class=\"nv\">$line</span><span class=\"s2\">\" in file=\"</span><span class=\"nv\">$file</span>\n<span class=\"c\">#    date_regex='^(19|20)[0-9]{2}/(0?[1-9]|1[0-2])/(0?[1-9]|[1-2][0-9]|3[0-1]).$'</span>\n    <span class=\"c\">#date_regex='^(19[0-9]{2}|20[0-9]{2}|[0-9]{2})/(0?[1-9]|1[0-2])/(0?[1-9]|[1-2][0-9]|3[0-1]).$'</span>\n    <span class=\"nv\">date_regex</span><span class=\"o\">=</span><span class=\"s1\">'^(19[0-9]{2}|20[0-9]{2}|[0-9]{2})([-/])(0?[1-9]|1[0-2])([-/])(0?[1-9]|[1-2][0-9]|3[0-1]).$'</span>\n\n    <span class=\"c\"># 进行正则匹配</span>\n    <span class=\"k\">if</span> <span class=\"o\">[[</span> <span class=\"nv\">$creator_time</span> <span class=\"o\">=</span>~ <span class=\"nv\">$date_regex</span> <span class=\"o\">]]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">echo</span> <span class=\"s2\">\"日期格式正确，截断最后一个小数 .\"</span>\n        format_creator_time <span class=\"nv\">$creator_time</span>\n    <span class=\"k\">else\n        if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$2</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n            </span><span class=\"nv\">discount</span><span class=\"o\">=</span>1\n            <span class=\"nv\">new_line</span><span class=\"o\">=</span><span class=\"k\">$((</span>line-discount<span class=\"k\">))</span>\n            <span class=\"nb\">echo</span> <span class=\"s2\">\"常规调用如果匹配不到的花，那么多一次，向上查找\"</span><span class=\"nv\">$discount</span><span class=\"s2\">\"行，进行递归:\"</span><span class=\"nv\">$new_line</span>\n            get_creator_time <span class=\"nv\">$file</span> <span class=\"nv\">$new_line</span>\n        <span class=\"k\">else\n            </span><span class=\"nb\">echo</span> <span class=\"s2\">\"日期格式错误，执行第二种匹配\"</span>\n            get_creator_time_with_template_2 <span class=\"nv\">$file</span>\n        <span class=\"k\">fi\n    fi\n    </span><span class=\"nb\">echo</span> <span class=\"s2\">\"********creator_time=【\"</span><span class=\"nv\">$creator_time</span><span class=\"s2\">\"】 in file=\"</span><span class=\"nv\">$file</span>\n<span class=\"o\">}</span>\n\n\n\n<span class=\"k\">function </span>replace_header_anoation<span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"nv\">file</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n    \n    <span class=\"c\">#定义要替换的字符串</span>\n    <span class=\"c\">#文件名</span>\n    <span class=\"nv\">filename</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">echo</span> <span class=\"s2\">\"</span><span class=\"nv\">$file</span><span class=\"s2\">\"</span> | <span class=\"nb\">sed</span> <span class=\"s1\">'s#.*/##'</span><span class=\"si\">)</span>\n    <span class=\"c\">#项目名</span>\n    <span class=\"nv\">project_name</span><span class=\"o\">=</span><span class=\"s2\">\"PSCProject\"</span>\n    \n    <span class=\"c\">#还有从当前类中获取作者信息，获取不到取默认值</span>\n    <span class=\"nv\">auth</span><span class=\"o\">=</span><span class=\"nv\">$creator_name</span>\n    \n    <span class=\"c\">#还有从当前类中获取作者信息，获取不到取默认值</span>\n    <span class=\"nb\">date</span><span class=\"o\">=</span><span class=\"nv\">$creator_time</span>\n\n    <span class=\"c\">#以下是替换的模板</span>\n    <span class=\"nv\">new_content</span><span class=\"o\">=</span><span class=\"s2\">\"//\n//  \"</span><span class=\"nv\">$filename</span><span class=\"s2\">\"\n//  \"</span><span class=\"nv\">$project_name</span><span class=\"s2\">\"\n//\n//  Created by \"</span><span class=\"nv\">$auth</span><span class=\"s2\">\" on \"</span><span class=\"nv\">$date</span><span class=\"s2\">\".\n//  \"</span><span class=\"nv\">$copyright_str</span><span class=\"s2\">\"\n//\"</span>\n\n    <span class=\"nv\">new_content_escaped</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">echo</span> <span class=\"s2\">\"</span><span class=\"nv\">$new_content</span><span class=\"s2\">\"</span> | <span class=\"nb\">sed</span> <span class=\"s1\">'s/$/\\\\/'</span><span class=\"si\">)</span> <span class=\"c\"># 转义换行符</span>\n    <span class=\"nb\">sed</span> <span class=\"nt\">-i</span> <span class=\"s1\">''</span> <span class=\"nt\">-e</span> <span class=\"s2\">\"1,7c</span><span class=\"se\">\\\\</span><span class=\"s2\">\n</span><span class=\"nv\">$new_content_escaped</span><span class=\"s2\">\"</span> <span class=\"s2\">\"</span><span class=\"nv\">$file</span><span class=\"s2\">\"</span>\n\n    <span class=\"c\">#还有几个问题待优化</span>\n    <span class=\"c\">#1、如果开头没有注释，则会直接覆盖，或者注释不足7行的</span>\n    <span class=\"c\">#2、日期正则如果不是以 YYYY/MM/DD or YY/MM/DD 其中/和-都适用</span>\n        <span class=\"c\">#2.1但是兼容2023/8/1这样的个位数日期)，</span>\n        <span class=\"c\">#2.2如果日期是8/1/23 这样会导致识别错误 会被替换成今天的日期</span>\n\n<span class=\"o\">}</span>\n\n<span class=\"c\"># 统一类头注释</span>\n<span class=\"k\">function </span>unify_header_anoation<span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"nv\">file</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n\n    <span class=\"c\">#还有从当前类中获取作者信息，获取不到取默认值</span>\n    get_creator_name <span class=\"nv\">$file</span>\n    \n    <span class=\"c\">#还有从当前类中获取作者信息，获取不到取默认值</span>\n    get_creator_time <span class=\"nv\">$file</span>\n    \n    <span class=\"c\">#不传第二个参数 则执行替换，传就不执行</span>\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$2</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span>replace_header_anoation <span class=\"nv\">$file</span>\n    <span class=\"k\">fi</span>\n<span class=\"o\">}</span>\n\n\n<span class=\"k\">function </span>main<span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"nv\">file_path</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$file_path</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">echo</span> <span class=\"s1\">'///未指定路径,file_path为. 当前路径'</span>\n        <span class=\"nv\">file_path</span><span class=\"o\">=</span><span class=\"nb\">.</span>\n    <span class=\"k\">fi</span>\n\n\n    <span class=\"c\">#遍历当前路径下所有oc类</span>\n    find <span class=\"nv\">$file_path</span> <span class=\"nt\">-type</span> f <span class=\"nt\">-name</span> <span class=\"s2\">\"*.swift\"</span> <span class=\"nt\">-o</span> <span class=\"nt\">-name</span> <span class=\"s2\">\"*.h\"</span> <span class=\"nt\">-o</span> <span class=\"nt\">-name</span> <span class=\"s2\">\"*.m\"</span> | <span class=\"k\">while </span><span class=\"nb\">read </span>file<span class=\"p\">;</span> <span class=\"k\">do\n        </span>unify_header_anoation <span class=\"nv\">$file</span> <span class=\"nv\">$2</span>\n    <span class=\"k\">done</span>\n<span class=\"o\">}</span>\n\n\nmain <span class=\"nv\">$1</span> <span class=\"nv\">$2</span>\n\n\n\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h3 id=\"32-第二步新增类注释模板制定\">3.2 第二步：新增类注释模板制定</h3>\n\n<p>增量治理，可以通过工程内部的内置的模板进行限定，具体操作为：</p>\n\n<h4 id=\"321-全局指定\">3.2.1 全局指定</h4>\n\n<p>全局指定在下列路径中新增文件名为：IDETemplateMacros.plist</p>\n\n<p>其中内容为</p>\n\n<div class=\"language-xml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n</pre></td><td class=\"rouge-code\"><pre><span class=\"cp\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</span>\n<span class=\"cp\">&lt;!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\"&gt;</span>\n<span class=\"nt\">&lt;plist</span> <span class=\"na\">version=</span><span class=\"s\">\"1.0\"</span><span class=\"nt\">&gt;</span>\n<span class=\"nt\">&lt;dict&gt;</span>\n    <span class=\"nt\">&lt;key&gt;</span>FILEHEADER<span class=\"nt\">&lt;/key&gt;</span>\n    <span class=\"nt\">&lt;string&gt;</span>\n//  \n//  ___FILENAME___ \n//  ___PACKAGENAME___\n//\n//  Created by ___FULLUSERNAME___ on ___DATE___\n//  ___COPYRIGHT___\n//\n    <span class=\"nt\">&lt;/string&gt;</span>\n<span class=\"nt\">&lt;/dict&gt;</span>\n<span class=\"nt\">&lt;/plist&gt;</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>路径（按优先级从低到高排序：如果更高一级优先级目录下出现了IDETemplateMacros，会覆盖比他低优先级的目录下的IDETemplateMacros内容）</p>\n\n<p>xcWorkspace：</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>XXX.xcworkspace/xcshareddata/IDETemplateMacros.plist \n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>xcodeproj（相比xcworkspace，具有更高优先级）：</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>XXX.xcodeproj/xcshareddata/IDETemplateMacros.plist\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>xcodeproj下的xcshareddata文件夹下存在IDETemplateMacros.plist，会覆盖xcworkspace的xcshareddata，（也就是xcworkspace的xcshareddata的IDETemplateMacros.plist不生效）</p>\n\n<p><u>**综上所述：xcworkspace下的IDETemplateMacros，在xcworkspace内部的xcodeproj未指定IDETemplateMacros时生效**</u></p>\n\n<h4 id=\"322-用户指定\">3.2.2 用户指定</h4>\n\n<p>上述xcodeproj、xcworkspace根目录下还有各自xcuserdata，xcuserdata内包含各个用户名的文件夹 username.xcuserdatad，存在此目录下的IDETemplateMacros.plist ，优先级高于xcshareddata，</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n</pre></td><td class=\"rouge-code\"><pre>XXX.xcworkspace/xcuserdata/IDETemplateMacros.plist \nXXX.xcodeproj/xcuserdata/IDETemplateMacros.plist\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p><strong><em><u>优先级与2.2.1所述一致：xcworkspace/xcodeproj内的xcshareddata下的IDETemplateMacros，在xcworkspace/xcodeproj内部的xcuserdata未指定IDETemplateMacros时生效</u></em></strong></p>\n\n<h4 id=\"323-本地指定\">3.2.3 本地指定</h4>\n\n<p>上述情况之外：</p>\n\n<p><strong><em><u>在上述均不存在IDETemplateMacros.plist时，本地目录才会生效</u></em></strong>：</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>/Users/Mac登录名/Library/Developer/Xcode/UserData/IDETemplateMacros.plist \n</pre></td></tr></tbody></table></code></pre></div></div>\n\n","name":"2023-07-31-6-iOS-组件化-命名注释篇.md","previous":{"id":"/2023/07/26/5-iOS组件化-资源组件库","tags":[],"relative_path":"_posts/2023-07-26-5-iOS组件化-资源组件库.md","collection":"posts","name":"2023-07-26-5-iOS组件化-资源组件库.md","url":"/2023/07/26/5-iOS%E7%BB%84%E4%BB%B6%E5%8C%96-%E8%B5%84%E6%BA%90%E7%BB%84%E4%BB%B6%E5%BA%93/","title":"iOS组件化实践之：资源组件库","date":"2023-07-26 00:00:00 +0800","categories":[],"path":"_posts/2023-07-26-5-iOS组件化-资源组件库.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/home-bg-geek.jpg","slug":"5-iOS组件化-资源组件库","ext":".md"},"output":"<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"google-site-verification\" content=\"xBT4GhYoi5qRD5tr338pgPM5OWHHIDR6mNg1a3euekI\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, viewport-fit=cover\">\n    <meta name=\"description\" content=\"与你一起发现更大的世界。\">\n    <meta name=\"keywords\"  content=\"PaysonChen,iOS,流媒体\">\n    <meta name=\"theme-color\" content=\"#000000\">\n    \n    <!-- Open Graph -->\n    <meta property=\"og:title\" content=\"iOS组件化实践之：类命名注释篇 - PaysonChen的博客 | PaysonChen Blog\">\n    \n    <meta property=\"og:type\" content=\"article\">\n    <meta property=\"og:description\" content=\"iOS组件化实践之：类命名注释篇\n\">\n    \n    \n    <meta property=\"article:published_time\" content=\"2023-07-31T00:00:00Z\">\n    \n    \n    <meta property=\"article:author\" content=\"PaysonChen\">\n    \n    \n    \n    <meta property=\"og:image\" content=\"http://localhost:4000\">\n    <meta property=\"og:url\" content=\"http://localhost:4000/2023/07/31/6-iOS-%E7%BB%84%E4%BB%B6%E5%8C%96-%E5%91%BD%E5%90%8D%E6%B3%A8%E9%87%8A%E7%AF%87/\">\n    <meta property=\"og:site_name\" content=\"PaysonChen的博客 | PaysonChen Blog\">\n    \n    <title>iOS组件化实践之：类命名注释篇 - PaysonChen的博客 | PaysonChen Blog</title>\n\n    <!-- Web App Manifest -->\n    <link rel=\"manifest\" href=\"/pwa/manifest.json\">\n\n    <!-- Favicon -->\n    <link rel=\"shortcut icon\" href=\"/img/favicon.ico\">\n    \n    <!-- Canonical URL -->\n    <link rel=\"canonical\" href=\"http://localhost:4000/2023/07/31/6-iOS-%E7%BB%84%E4%BB%B6%E5%8C%96-%E5%91%BD%E5%90%8D%E6%B3%A8%E9%87%8A%E7%AF%87/\">\n\n    <!-- Bootstrap Core CSS -->\n    <link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\">\n\n    <!-- Custom CSS -->\n    <link rel=\"stylesheet\" href=\"/css/hux-blog.min.css\">\n\n    <!-- Custom Fonts -->\n    <!-- <link href=\"http://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\"> -->\n    <!-- Hux change font-awesome CDN to qiniu -->\n    <link href=\"//cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\">\n\n\n    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->\n    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->\n    <!--[if lt IE 9]>\n        <script src=\"https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js\"></script>\n        <script src=\"https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js\"></script>\n    <![endif]-->\n\n    <!-- ga & ba script hoook -->\n    <script></script>\n</head>\n\n\n<!-- hack iOS CSS :active style -->\n<body ontouchstart=\"\">\n\n    <!-- Navigation -->\n\n    <nav class=\"navbar navbar-default navbar-custom navbar-fixed-top\">\n        \n        <div class=\"container-fluid\">\n            <!-- Brand and toggle get grouped for better mobile display -->\n            <div class=\"navbar-header page-scroll\">\n                <button type=\"button\" class=\"navbar-toggle\">\n                    <span class=\"sr-only\">Toggle navigation</span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                </button>\n                <a class=\"navbar-brand\" href=\"/\">PaysonChen Blog</a>\n            </div>\n\n            <!-- Collect the nav links, forms, and other content for toggling -->\n            <div id=\"huxblog_navbar\">\n                <div class=\"navbar-collapse\">\n                    <ul class=\"nav navbar-nav navbar-right\">\n                        <li>\n                            <a href=\"/\">Home</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        <li>\n                            <a href=\"/about/\">About</a>\n                        </li>\n                        \n                        \n                        \n                        <li>\n                            <a href=\"/archive/\">Archive</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        <li class=\"search-icon\">\n                            <a href=\"javascript:void(0)\">\n                                <i class=\"fa fa-search\"></i>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n            <!-- /.navbar-collapse -->\n        </div>\n        <!-- /.container -->\n    </nav>\n\n    <script>\n        // Drop Bootstarp low-performance Navbar\n        // Use customize navbar with high-quality material design animation\n        // in high-perf jank-free CSS3 implementation\n        var $body = document.body;\n        var $toggle = document.querySelector('.navbar-toggle');\n        var $navbar = document.querySelector('#huxblog_navbar');\n        var $collapse = document.querySelector('.navbar-collapse');\n\n        var __HuxNav__ = {\n            close: function () {\n                $navbar.className = \" \";\n                // wait until animation end.\n                setTimeout(function () {\n                    // prevent frequently toggle\n                    if ($navbar.className.indexOf('in') < 0) {\n                        $collapse.style.height = \"0px\"\n                    }\n                }, 400)\n            },\n            open: function () {\n                $collapse.style.height = \"auto\"\n                $navbar.className += \" in\";\n            }\n        }\n\n        // Bind Event\n        $toggle.addEventListener('click', function (e) {\n            if ($navbar.className.indexOf('in') > 0) {\n                __HuxNav__.close()\n            } else {\n                __HuxNav__.open()\n            }\n        })\n\n        /**\n         * Since Fastclick is used to delegate 'touchstart' globally\n         * to hack 300ms delay in iOS by performing a fake 'click',\n         * Using 'e.stopPropagation' to stop 'touchstart' event from \n         * $toggle/$collapse will break global delegation.\n         * \n         * Instead, we use a 'e.target' filter to prevent handler\n         * added to document close HuxNav.  \n         *\n         * Also, we use 'click' instead of 'touchstart' as compromise\n         */\n        document.addEventListener('click', function (e) {\n            if (e.target == $toggle) return;\n            if (e.target.className == 'icon-bar') return;\n            __HuxNav__.close();\n        })\n    </script>\n    <!-- Search -->\n<div class=\"search-page\">\n  <div class=\"search-icon-close-container\">\n    <span class=\"search-icon-close\">\n      <i class=\"fa fa-chevron-down\"></i>\n    </span>\n  </div>\n  <div class=\"search-main container\">\n    <div class=\"row\">\n      <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n        <form></form>\n        <input type=\"text\" id=\"search-input\" placeholder=\"$ grep...\">\n        </form>\n        <div id=\"search-results\" class=\"mini-post-list\"></div>\n      </div>\n    </div>\n  </div>\n</div>\n\n    <!-- Image to hack wechat -->\n<!-- <img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\"> -->\n<!-- <img src=\"/img/home-bg-geek.jpg\" width=\"0\" height=\"0\"> -->\n\n<!-- Post Header -->\n\n\n\n<style type=\"text/css\">\n    header.intro-header{\n        position: relative;\n        background-image: url('/img/home-bg-geek.jpg');\n        background: ;\n    }\n\n    \n</style>\n\n<header class=\"intro-header\" >\n\n    <div class=\"header-mask\"></div>\n    \n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <div class=\"post-heading\">\n                    <div class=\"tags\">\n                        \n                    </div>\n                    <h1>iOS组件化实践之：类命名注释篇</h1>\n                    \n                    <h2 class=\"subheading\"></h2>\n                    <span class=\"meta\">Posted by PaysonChen on July 31, 2023</span>\n                </div>\n            </div>\n        </div>\n    </div>\n</header>\n\n\n\n\n\n\n<!-- Post Content -->\n<article>\n    <div class=\"container\">\n        <div class=\"row\">\n\n    <!-- Post Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                post-container\">\n\n                <!-- Multi-Lingual -->\n                \n\n\t\t\t\t<h1 id=\"ios组件化实践之类命名注释篇\">iOS组件化实践之：类命名注释篇</h1>\n\n<h2 id=\"1问题描述\">1.问题描述</h2>\n\n<p>CocoaPods组件创建时，提供的一个很好的管理命名规范的思路：以统一的命名前缀，一般以项目/组织等缩写作为前缀</p>\n\n<p>组件化规整之后，可能存在的情况是前后的文件命名不一致导致的影响代码易读性、易维护等问题</p>\n\n<p>除此之外，由于代码经由不同人迭代的，甚至不同组织迭代（从外包接手的项目）还存在一些文件注释的注释模板差异的情况</p>\n\n<h2 id=\"2-类命名统一\">2. 类命名统一</h2>\n\n<h3 id=\"21-类重命名之前\">2.1 类重命名之前</h3>\n\n<p>需要确认下，当前类或者与之相关的一些类，是否存在于<a href=\"https://cocoapods.org/\">CocoaPods</a>公有源上，如果存在，可以直接通过Pod引入（组件内通过dependency），</p>\n\n<p>举个例子：如果你需要进行重命名的类是这样的：SDWebImage、SDWebImageXXX、SDXXX，显然，这是将SDWebImage通过代码直接集成，由于SDWebImage类数量比较多，且属于成熟框架，在确认没有私自改动逻辑的情况下，可以考虑直接移除，采用通过Pod引入（组件内通过dependency）</p>\n\n<p>当然，如果存在没有被用到的类，也正好是一个移除他们的好时机！</p>\n\n<p><strong>‼️特别注意：改名之前，需要确认，要改的类名是否已经存在工程中，如果存在且继续修改，会造成很多错误替换，造成很复杂的编译问题，且难以回退。</strong></p>\n\n<p>例如：ABCWebView，要改成PSCWebView，此时如果工程中已经存在PSCWebView，则ABCWebView继续再改成PSCWebView，会造成所有ABCWebView与PSCWebView的混乱，除非单次修改（之前的操作已经提交），否则回退也变得异常困难。</p>\n\n<h3 id=\"22-常规类重命名\">2.2 常规类重命名</h3>\n\n<p>可以通过IDE：Xcode自带的rename功能进行类名重命名：</p>\n\n<p><img src=\"/img/name/1.png\" alt=\"\" /></p>\n\n<p>替换成带期望前缀的类名</p>\n\n<p><img src=\"/img/name/2.png\" alt=\"WX20230731-191648\" /></p>\n\n<p>可能存在替换不完全的可能，需要检索下旧类名，全局替换下，确保编译通过方可</p>\n\n<h3 id=\"23-categories重命名\">2.3 categories重命名</h3>\n\n<p>categories的重命名无法根据上述方式，只能通过常规的修改文件名，以及全局替换的方式。</p>\n\n<p>值得一提的是，若一个基础类存在多个单一功能的categories，例如存在UIButton+Category1，UIButton+Category2……，他们有可能存在重复的功能可以考虑保留其中一个即可，也可以考虑将他们重构，合并，或者是重新划分下功能归属，</p>\n\n<h2 id=\"3类注释模板统一\">3.类注释模板统一：</h2>\n\n<p>治理这些情况，可能就需要分两步：</p>\n\n<h3 id=\"31-第一步存量类注释规范治理\">3.1 第一步：存量类注释规范治理</h3>\n\n<p>存量治理，这边采用脚本批量执行，具体思路如下：</p>\n\n<ul>\n  <li>遍历指定目录（若未传参数则为当前目录）下的子目录</li>\n  <li>匹配所有iOS工程类文件：.h .m .swift</li>\n  <li>对其注释头进行模板替换\n    <ul>\n      <li>匹配获取当前类的author，匹配不到则使用默认值（需定义）</li>\n      <li>匹配获取当前类的time，匹配不到则使用默认值（需定义）</li>\n      <li>替换版权信息（需定义）</li>\n    </ul>\n  </li>\n</ul>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\">#!/bin/bash</span>\n\n<span class=\"c\"># 遍历更新当前目录下(含子目录）所有iOS工程类文件：.h .m .swift 并对其注释头进行模板替换</span>\n<span class=\"c\"># author: Chenyp34</span>\n<span class=\"c\"># [目的]</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># 组件化规整之后，可能存在的情况是前后的文件命名不一致导致的影响代码易读性、易维护等问题</span>\n<span class=\"c\"># 除此之外，由于代码经由不同人迭代的，甚至不同组织迭代（从外包接手的项目）还存在一些文件注释的注释模板差异的情况</span>\n<span class=\"c\"># 此脚本目的为了解决存量类文件头注释统一性问题</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [目录]</span>\n<span class=\"c\">#   - replace_class_header_anotation.sh 遍历更新当前目录下，子目录git仓库的脚本</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [说明]</span>\n<span class=\"c\"># 1、遍历指定目录（若未传参数则为当前目录）下的子目录</span>\n<span class=\"c\"># 2、匹配所有iOS工程类文件：.h .m .swift</span>\n<span class=\"c\"># 3、对其注释头进行模板替换</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [参数]</span>\n<span class=\"c\"># 1、参数1，指定目录</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># [调用说明]</span>\n<span class=\"c\"># 1、未指定目录，则取当前目录：sh replace_class_header_anotation.sh</span>\n<span class=\"c\"># 2、指定目录：sh replace_class_header_anotation.sh /User/xxx/xx</span>\n<span class=\"c\"># 本脚本适用于将：下述注释替换成 统一注释模板：</span>\n<span class=\"c\">#   其一：</span>\n<span class=\"c\">#//</span>\n<span class=\"c\">#//  FileName.h</span>\n<span class=\"c\">#//  ProjectName</span>\n<span class=\"c\">#//</span>\n<span class=\"c\">#//  Created by Author on Date.</span>\n<span class=\"c\">#// (没版权信息)</span>\n<span class=\"c\">#//</span>\n<span class=\"c\">#</span>\n<span class=\"c\">#   其二：</span>\n<span class=\"c\">#   /****************************************************************************************************</span>\n<span class=\"c\">#   * 版权所有： Copyright (c) 2012-2021 xxxx. All rights reserved.</span>\n<span class=\"c\">#   * 作 者： Author （2021/3/12）</span>\n<span class=\"c\">#   * 界面描述：  界面描述</span>\n<span class=\"c\">#   ****************************************************************************************************/</span>\n<span class=\"c\">#</span>\n<span class=\"c\">#   其三：</span>\n<span class=\"c\">#   没有任何注释的</span>\n<span class=\"c\">#</span>\n<span class=\"c\">#</span>\n<span class=\"c\">#   替换成统一注释模板：</span>\n<span class=\"c\">#</span>\n<span class=\"c\">#//</span>\n<span class=\"c\">#//  \"$filename\"</span>\n<span class=\"c\">#//  \"$project_name\"</span>\n<span class=\"c\">#//</span>\n<span class=\"c\">#//  Created by \"$auth\" on \"$date\".</span>\n<span class=\"c\">#//  \"$copyright_str\"</span>\n<span class=\"c\">#//</span>\n<span class=\"c\">#</span>\n<span class=\"c\">#定义版权信息</span>\n<span class=\"nb\">export </span><span class=\"nv\">copyright_str</span><span class=\"o\">=</span><span class=\"s2\">\"Copyright (C) 2023 Your Company Name Technology Limited. All rights reserved.\"</span>\n\n<span class=\"c\">#定义默认用户信息：PaysonChen</span>\n<span class=\"nb\">export </span><span class=\"nv\">def_author_str</span><span class=\"o\">=</span><span class=\"s2\">\"PaysonChen\"</span>\n\n<span class=\"c\">#定义默认日期：当前日期</span>\n<span class=\"nb\">export </span><span class=\"nv\">def_time_str</span><span class=\"o\">=</span><span class=\"sb\">`</span><span class=\"nb\">date</span> +%Y/%m/%d<span class=\"sb\">`</span>\n\n<span class=\"k\">function </span>get_creator_name_with_template_2<span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"nv\">file</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n    <span class=\"nv\">creator_name</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">sed</span> <span class=\"nt\">-n</span> <span class=\"s1\">'s/.*作    者： \\(.*\\).*/\\1/p'</span> <span class=\"nv\">$file</span><span class=\"si\">)</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"creator_name=\"</span><span class=\"nv\">$creator_name</span><span class=\"s2\">\" in file=\"</span><span class=\"nv\">$file</span>\n    \n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$creator_name</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">echo</span> <span class=\"s1\">'///获取创建者 第二种模板获取 为空 使用默认值'</span>\n        <span class=\"nv\">creator_name</span><span class=\"o\">=</span><span class=\"nv\">$def_author_str</span>\n    <span class=\"k\">fi</span>\n<span class=\"o\">}</span>\n\n<span class=\"k\">function </span>get_creator_name<span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"nv\">file</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n    <span class=\"nv\">creator_name</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">sed</span> <span class=\"nt\">-n</span> <span class=\"s1\">'s/.*Created by \\(.*\\) on.*/\\1/p'</span> <span class=\"nv\">$file</span><span class=\"si\">)</span>\n    \n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$creator_name</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span>get_creator_name_with_template_2 <span class=\"nv\">$file</span>\n    <span class=\"k\">fi\n    \n    </span><span class=\"nb\">echo</span> <span class=\"s2\">\"--------creator_name=【\"</span><span class=\"nv\">$creator_name</span><span class=\"s2\">\"】 in file=\"</span><span class=\"nv\">$file</span>\n<span class=\"o\">}</span>\n\n\n\n<span class=\"k\">function </span>get_creator_time_with_template_2<span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"nv\">file</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n    <span class=\"nv\">creator_time</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">sed</span> <span class=\"nt\">-n</span> <span class=\"s1\">'s/.*创建日期： \\(.*\\).*/\\1/p'</span> <span class=\"nv\">$file</span><span class=\"si\">)</span>\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"-------创建日期=【\"</span><span class=\"nv\">$creator_time</span><span class=\"s2\">\"】 in file=\"</span><span class=\"nv\">$file</span>\n\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$creator_time</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then</span>\n<span class=\"c\">#        echo '///获取创建时间 第二种模板获取 为空 使用默认值'</span>\n        <span class=\"nv\">creator_time</span><span class=\"o\">=</span><span class=\"nv\">$def_time_str</span>\n    <span class=\"k\">fi</span>\n<span class=\"o\">}</span>\n\n\n<span class=\"k\">function </span>format_creator_time<span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"nv\">creator_time</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n    \n    <span class=\"nv\">length</span><span class=\"o\">=</span><span class=\"k\">${#</span><span class=\"nv\">creator_time</span><span class=\"k\">}</span>\n\n    <span class=\"c\"># 截取除最后一个字符外的部分</span>\n    <span class=\"nv\">creator_time</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">creator_time</span>:0:length-1<span class=\"k\">}</span>\n    <span class=\"c\">#echo \"截去掉最后一个字符后的字符串: $creator_time\"</span>\n<span class=\"o\">}</span>\n\n\n<span class=\"k\">function </span>get_creator_time<span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"nv\">file</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n    \n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$2</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nv\">line</span><span class=\"o\">=</span>5\n    <span class=\"k\">else\n        </span><span class=\"nv\">line</span><span class=\"o\">=</span><span class=\"nv\">$2</span>\n    <span class=\"k\">fi</span>\n    <span class=\"c\">#creator_time=$(sed -n '5s/.*\\(.\\{10\\}\\)$/\\1/p' $file)</span>\n    <span class=\"nv\">creator_time</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">awk</span> <span class=\"s1\">'NR=='</span><span class=\"nv\">$line</span><span class=\"s1\">' {print $NF}'</span> <span class=\"nv\">$file</span><span class=\"si\">)</span>\n\n    <span class=\"nb\">echo</span> <span class=\"s2\">\"-------creator_time=【\"</span><span class=\"nv\">$creator_time</span><span class=\"s2\">\"】 line = \"</span><span class=\"nv\">$line</span><span class=\"s2\">\" in file=\"</span><span class=\"nv\">$file</span>\n<span class=\"c\">#    date_regex='^(19|20)[0-9]{2}/(0?[1-9]|1[0-2])/(0?[1-9]|[1-2][0-9]|3[0-1]).$'</span>\n    <span class=\"c\">#date_regex='^(19[0-9]{2}|20[0-9]{2}|[0-9]{2})/(0?[1-9]|1[0-2])/(0?[1-9]|[1-2][0-9]|3[0-1]).$'</span>\n    <span class=\"nv\">date_regex</span><span class=\"o\">=</span><span class=\"s1\">'^(19[0-9]{2}|20[0-9]{2}|[0-9]{2})([-/])(0?[1-9]|1[0-2])([-/])(0?[1-9]|[1-2][0-9]|3[0-1]).$'</span>\n\n    <span class=\"c\"># 进行正则匹配</span>\n    <span class=\"k\">if</span> <span class=\"o\">[[</span> <span class=\"nv\">$creator_time</span> <span class=\"o\">=</span>~ <span class=\"nv\">$date_regex</span> <span class=\"o\">]]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">echo</span> <span class=\"s2\">\"日期格式正确，截断最后一个小数 .\"</span>\n        format_creator_time <span class=\"nv\">$creator_time</span>\n    <span class=\"k\">else\n        if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$2</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n            </span><span class=\"nv\">discount</span><span class=\"o\">=</span>1\n            <span class=\"nv\">new_line</span><span class=\"o\">=</span><span class=\"k\">$((</span>line-discount<span class=\"k\">))</span>\n            <span class=\"nb\">echo</span> <span class=\"s2\">\"常规调用如果匹配不到的花，那么多一次，向上查找\"</span><span class=\"nv\">$discount</span><span class=\"s2\">\"行，进行递归:\"</span><span class=\"nv\">$new_line</span>\n            get_creator_time <span class=\"nv\">$file</span> <span class=\"nv\">$new_line</span>\n        <span class=\"k\">else\n            </span><span class=\"nb\">echo</span> <span class=\"s2\">\"日期格式错误，执行第二种匹配\"</span>\n            get_creator_time_with_template_2 <span class=\"nv\">$file</span>\n        <span class=\"k\">fi\n    fi\n    </span><span class=\"nb\">echo</span> <span class=\"s2\">\"********creator_time=【\"</span><span class=\"nv\">$creator_time</span><span class=\"s2\">\"】 in file=\"</span><span class=\"nv\">$file</span>\n<span class=\"o\">}</span>\n\n\n\n<span class=\"k\">function </span>replace_header_anoation<span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"nv\">file</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n    \n    <span class=\"c\">#定义要替换的字符串</span>\n    <span class=\"c\">#文件名</span>\n    <span class=\"nv\">filename</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">echo</span> <span class=\"s2\">\"</span><span class=\"nv\">$file</span><span class=\"s2\">\"</span> | <span class=\"nb\">sed</span> <span class=\"s1\">'s#.*/##'</span><span class=\"si\">)</span>\n    <span class=\"c\">#项目名</span>\n    <span class=\"nv\">project_name</span><span class=\"o\">=</span><span class=\"s2\">\"PSCProject\"</span>\n    \n    <span class=\"c\">#还有从当前类中获取作者信息，获取不到取默认值</span>\n    <span class=\"nv\">auth</span><span class=\"o\">=</span><span class=\"nv\">$creator_name</span>\n    \n    <span class=\"c\">#还有从当前类中获取作者信息，获取不到取默认值</span>\n    <span class=\"nb\">date</span><span class=\"o\">=</span><span class=\"nv\">$creator_time</span>\n\n    <span class=\"c\">#以下是替换的模板</span>\n    <span class=\"nv\">new_content</span><span class=\"o\">=</span><span class=\"s2\">\"//\n//  \"</span><span class=\"nv\">$filename</span><span class=\"s2\">\"\n//  \"</span><span class=\"nv\">$project_name</span><span class=\"s2\">\"\n//\n//  Created by \"</span><span class=\"nv\">$auth</span><span class=\"s2\">\" on \"</span><span class=\"nv\">$date</span><span class=\"s2\">\".\n//  \"</span><span class=\"nv\">$copyright_str</span><span class=\"s2\">\"\n//\"</span>\n\n    <span class=\"nv\">new_content_escaped</span><span class=\"o\">=</span><span class=\"si\">$(</span><span class=\"nb\">echo</span> <span class=\"s2\">\"</span><span class=\"nv\">$new_content</span><span class=\"s2\">\"</span> | <span class=\"nb\">sed</span> <span class=\"s1\">'s/$/\\\\/'</span><span class=\"si\">)</span> <span class=\"c\"># 转义换行符</span>\n    <span class=\"nb\">sed</span> <span class=\"nt\">-i</span> <span class=\"s1\">''</span> <span class=\"nt\">-e</span> <span class=\"s2\">\"1,7c</span><span class=\"se\">\\\\</span><span class=\"s2\">\n</span><span class=\"nv\">$new_content_escaped</span><span class=\"s2\">\"</span> <span class=\"s2\">\"</span><span class=\"nv\">$file</span><span class=\"s2\">\"</span>\n\n    <span class=\"c\">#还有几个问题待优化</span>\n    <span class=\"c\">#1、如果开头没有注释，则会直接覆盖，或者注释不足7行的</span>\n    <span class=\"c\">#2、日期正则如果不是以 YYYY/MM/DD or YY/MM/DD 其中/和-都适用</span>\n        <span class=\"c\">#2.1但是兼容2023/8/1这样的个位数日期)，</span>\n        <span class=\"c\">#2.2如果日期是8/1/23 这样会导致识别错误 会被替换成今天的日期</span>\n\n<span class=\"o\">}</span>\n\n<span class=\"c\"># 统一类头注释</span>\n<span class=\"k\">function </span>unify_header_anoation<span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"nv\">file</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n\n    <span class=\"c\">#还有从当前类中获取作者信息，获取不到取默认值</span>\n    get_creator_name <span class=\"nv\">$file</span>\n    \n    <span class=\"c\">#还有从当前类中获取作者信息，获取不到取默认值</span>\n    get_creator_time <span class=\"nv\">$file</span>\n    \n    <span class=\"c\">#不传第二个参数 则执行替换，传就不执行</span>\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$2</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span>replace_header_anoation <span class=\"nv\">$file</span>\n    <span class=\"k\">fi</span>\n<span class=\"o\">}</span>\n\n\n<span class=\"k\">function </span>main<span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"nv\">file_path</span><span class=\"o\">=</span><span class=\"nv\">$1</span>\n\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nt\">-z</span> <span class=\"s2\">\"</span><span class=\"nv\">$file_path</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">echo</span> <span class=\"s1\">'///未指定路径,file_path为. 当前路径'</span>\n        <span class=\"nv\">file_path</span><span class=\"o\">=</span><span class=\"nb\">.</span>\n    <span class=\"k\">fi</span>\n\n\n    <span class=\"c\">#遍历当前路径下所有oc类</span>\n    find <span class=\"nv\">$file_path</span> <span class=\"nt\">-type</span> f <span class=\"nt\">-name</span> <span class=\"s2\">\"*.swift\"</span> <span class=\"nt\">-o</span> <span class=\"nt\">-name</span> <span class=\"s2\">\"*.h\"</span> <span class=\"nt\">-o</span> <span class=\"nt\">-name</span> <span class=\"s2\">\"*.m\"</span> | <span class=\"k\">while </span><span class=\"nb\">read </span>file<span class=\"p\">;</span> <span class=\"k\">do\n        </span>unify_header_anoation <span class=\"nv\">$file</span> <span class=\"nv\">$2</span>\n    <span class=\"k\">done</span>\n<span class=\"o\">}</span>\n\n\nmain <span class=\"nv\">$1</span> <span class=\"nv\">$2</span>\n\n\n\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h3 id=\"32-第二步新增类注释模板制定\">3.2 第二步：新增类注释模板制定</h3>\n\n<p>增量治理，可以通过工程内部的内置的模板进行限定，具体操作为：</p>\n\n<h4 id=\"321-全局指定\">3.2.1 全局指定</h4>\n\n<p>全局指定在下列路径中新增文件名为：IDETemplateMacros.plist</p>\n\n<p>其中内容为</p>\n\n<div class=\"language-xml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n</pre></td><td class=\"rouge-code\"><pre><span class=\"cp\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</span>\n<span class=\"cp\">&lt;!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\"&gt;</span>\n<span class=\"nt\">&lt;plist</span> <span class=\"na\">version=</span><span class=\"s\">\"1.0\"</span><span class=\"nt\">&gt;</span>\n<span class=\"nt\">&lt;dict&gt;</span>\n    <span class=\"nt\">&lt;key&gt;</span>FILEHEADER<span class=\"nt\">&lt;/key&gt;</span>\n    <span class=\"nt\">&lt;string&gt;</span>\n//  \n//  ___FILENAME___ \n//  ___PACKAGENAME___\n//\n//  Created by ___FULLUSERNAME___ on ___DATE___\n//  ___COPYRIGHT___\n//\n    <span class=\"nt\">&lt;/string&gt;</span>\n<span class=\"nt\">&lt;/dict&gt;</span>\n<span class=\"nt\">&lt;/plist&gt;</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>路径（按优先级从低到高排序：如果更高一级优先级目录下出现了IDETemplateMacros，会覆盖比他低优先级的目录下的IDETemplateMacros内容）</p>\n\n<p>xcWorkspace：</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>XXX.xcworkspace/xcshareddata/IDETemplateMacros.plist \n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>xcodeproj（相比xcworkspace，具有更高优先级）：</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>XXX.xcodeproj/xcshareddata/IDETemplateMacros.plist\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>xcodeproj下的xcshareddata文件夹下存在IDETemplateMacros.plist，会覆盖xcworkspace的xcshareddata，（也就是xcworkspace的xcshareddata的IDETemplateMacros.plist不生效）</p>\n\n<p><u>**综上所述：xcworkspace下的IDETemplateMacros，在xcworkspace内部的xcodeproj未指定IDETemplateMacros时生效**</u></p>\n\n<h4 id=\"322-用户指定\">3.2.2 用户指定</h4>\n\n<p>上述xcodeproj、xcworkspace根目录下还有各自xcuserdata，xcuserdata内包含各个用户名的文件夹 username.xcuserdatad，存在此目录下的IDETemplateMacros.plist ，优先级高于xcshareddata，</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n</pre></td><td class=\"rouge-code\"><pre>XXX.xcworkspace/xcuserdata/IDETemplateMacros.plist \nXXX.xcodeproj/xcuserdata/IDETemplateMacros.plist\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p><strong><em><u>优先级与2.2.1所述一致：xcworkspace/xcodeproj内的xcshareddata下的IDETemplateMacros，在xcworkspace/xcodeproj内部的xcuserdata未指定IDETemplateMacros时生效</u></em></strong></p>\n\n<h4 id=\"323-本地指定\">3.2.3 本地指定</h4>\n\n<p>上述情况之外：</p>\n\n<p><strong><em><u>在上述均不存在IDETemplateMacros.plist时，本地目录才会生效</u></em></strong>：</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>/Users/Mac登录名/Library/Developer/Xcode/UserData/IDETemplateMacros.plist \n</pre></td></tr></tbody></table></code></pre></div></div>\n\n\n\n                <hr style=\"visibility: hidden;\">\n                <ul class=\"pager\">\n                    \n                    <li class=\"previous\">\n                        <a href=\"/2023/07/26/5-iOS%E7%BB%84%E4%BB%B6%E5%8C%96-%E8%B5%84%E6%BA%90%E7%BB%84%E4%BB%B6%E5%BA%93/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"iOS组件化实践之：资源组件库\">\n                        Previous<br>\n                        <span>iOS组件化实践之：资源组件库</span>\n                        </a>\n                    </li>\n                    \n                    \n                    <li class=\"next\">\n                        <a href=\"/2023/08/02/iOS-%E7%BB%84%E4%BB%B6%E5%8C%96%E5%AE%9E%E8%B7%B5%E4%B9%8B-%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98%E5%8F%8A%E8%A7%A3%E5%86%B3%E8%BF%87%E7%A8%8B%E7%BA%AA%E8%A6%81-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0%E4%B8%AD/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"iOS组件化实践之：遇到的问题及解决过程纪要(持续更新中)\">\n                        Next<br>\n                        <span>iOS组件化实践之：遇到的问题及解决过程纪要(持续更新中)</span>\n                        </a>\n                    </li>\n                    \n                </ul>\n                <hr style=\"visibility: hidden;\">\n\n                \n                <!-- disqus 评论框 start -->\n                <div class=\"comment\">\n                    <div id=\"disqus_thread\" class=\"disqus-thread\"></div>\n                </div>\n                <!-- disqus 评论框 end -->\n                \n\n                \n            </div>  \n\n    <!-- Side Catalog Container -->\n        \n            <div class=\"\n                col-lg-2 col-lg-offset-0\n                visible-lg-block\n                sidebar-container\n                catalog-container\">\n                <div class=\"side-catalog\">\n                    <hr class=\"hidden-sm hidden-xs\">\n                    <h5>\n                        <a class=\"catalog-toggle\" href=\"#\">CATALOG</a>\n                    </h5>\n                    <ul class=\"catalog-body\"></ul>\n                </div>\n            </div>\n        \n\n    <!-- Sidebar Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                sidebar-container\">\n\n                <!-- Featured Tags -->\n                \n\n\n<section>\n    \n        <hr class=\"hidden-sm hidden-xs\">\n    \n    <h5><a href=\"/archive/\">FEATURED TAGS</a></h5>\n    <div class=\"tags\">\n        \n        \n        \n        \n        \n    </div>\n</section>\n\n\n                <!-- Friends Blog -->\n                \n            </div>\n        </div>\n    </div>\n</article>\n\n<!-- add support for mathjax by voleking-->\n\n\n\n\n\n\n<!-- disqus 公共JS代码 start (一个网页只需插入一次) -->\n<script type=\"text/javascript\">\n    /* * * CONFIGURATION VARIABLES * * */\n    var disqus_shortname = \"Cyp\";\n    var disqus_identifier = \"/2023/07/31/6-iOS-组件化-命名注释篇\";\n    var disqus_url = \"http://localhost:4000/2023/07/31/6-iOS-%E7%BB%84%E4%BB%B6%E5%8C%96-%E5%91%BD%E5%90%8D%E6%B3%A8%E9%87%8A%E7%AF%87/\";\n\n    (function() {\n        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;\n        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';\n        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);\n    })();\n</script>\n<!-- disqus 公共JS代码 end -->\n\n\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n      var d = document, t = 'script',\n          o = d.createElement(t),\n          s = d.getElementsByTagName(t)[0];\n      o.src = u;\n      if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n      s.parentNode.insertBefore(o, s);\n    }\n</script>\n<!-- anchor-js, Doc:http://bryanbraun.github.io/anchorjs/ -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/anchor-js/1.1.1/anchor.min.js\",function(){\n        anchors.options = {\n          visible: 'hover',\n          placement: 'right',\n          // icon: '#'\n        };\n        anchors.add().remove('.intro-header h1').remove('.subheading').remove('.sidebar-container h5');\n    })\n</script>\n<style>\n    /* place left on bigger screen */\n    @media all and (min-width: 800px) {\n        .anchorjs-link{\n            position: absolute;\n            left: -0.75em;\n            font-size: 1.1em;\n            margin-top : -0.1em;\n        }\n    }\n</style>\n\n\n\n    <!-- Footer -->\n<footer>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <!-- SNS Link -->\n                \n\n\n<ul class=\"list-inline text-center\">\n\n\n  \n  \n  \n  \n  \n  \n  \n</ul>\n\n                <p class=\"copyright text-muted\">\n                    Copyright &copy; PaysonChen Blog 2024\n                    <br>\n                    <!-- Powered by <a href=\"http://huangxuan.me\">Hux Blog</a> | -->\n                 <!--    <iframe style=\"margin-left: 2px; margin-bottom:-5px;\" frameborder=\"0\" scrolling=\"0\" width=\"100px\"\n                        height=\"20px\"\n                        src=\"https://ghbtns.com/github-btn.html?user=huxpro&repo=huxpro.github.io&type=star&count=true\">\n                    </iframe> -->\n                </p>\n            </div>\n        </div>\n    </div>\n</footer>\n\n<!-- jQuery -->\n<script src=\"/js/jquery.min.js \"></script>\n\n<!-- Bootstrap Core JavaScript -->\n<!-- Currently, only navbar scroll-down effect at desktop still depends on this -->\n<script src=\"/js/bootstrap.min.js \"></script>\n\n<!-- Custom Theme JavaScript -->\n<script src=\"/js/hux-blog.min.js \"></script>\n\n<!-- Simple Jekyll Search -->\n<script src=\"/js/simple-jekyll-search.min.js\"></script>\n\n<!-- Service Worker -->\n\n<script src=\"/js/snackbar.js \"></script>\n<script src=\"/js/sw-registration.js \"></script>\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n        var d = document, t = 'script',\n            o = d.createElement(t),\n            s = d.getElementsByTagName(t)[0];\n        o.src = u;\n        if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n        s.parentNode.insertBefore(o, s);\n    }\n</script>\n\n<!--\n     Because of the native support for backtick-style fenced code blocks\n     right within the Markdown is landed in Github Pages,\n     From V1.6, There is no need for Highlight.js,\n     so Huxblog drops it officially.\n\n     - https://github.com/blog/2100-github-pages-now-faster-and-simpler-with-jekyll-3-0\n     - https://help.github.com/articles/creating-and-highlighting-code-blocks/\n     - https://github.com/jneen/rouge/wiki/list-of-supported-languages-and-lexers\n-->\n<!--\n    <script>\n        async(\"http://cdn.bootcss.com/highlight.js/8.6/highlight.min.js\", function(){\n            hljs.initHighlightingOnLoad();\n        })\n    </script>\n    <link href=\"http://cdn.bootcss.com/highlight.js/8.6/styles/github.min.css\" rel=\"stylesheet\">\n-->\n\n\n\n\n\n\n\n<!--fastClick.js -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/fastclick/1.0.6/fastclick.min.js\", function () {\n        var $nav = document.querySelector(\"nav\");\n        if ($nav) FastClick.attach($nav);\n    })\n</script>\n\n\n<!-- Google Analytics -->\n\n\n\n<!-- Baidu Tongji -->\n\n\n\n<!-- Side Catalog -->\n\n<script type=\"text/javascript\">\n    function generateCatalog(selector) {\n\n        // interop with multilangual \n        if ('' == 'true') {\n            _containerSelector = 'div.post-container.active'\n        } else {\n            _containerSelector = 'div.post-container'\n        }\n\n        // init\n        var P = $(_containerSelector), a, n, t, l, i, c;\n        a = P.find('h1,h2,h3,h4,h5,h6');\n\n        // clean\n        $(selector).html('')\n\n        // appending\n        a.each(function () {\n            n = $(this).prop('tagName').toLowerCase();\n            i = \"#\" + $(this).prop('id');\n            t = $(this).text();\n            c = $('<a href=\"' + i + '\" rel=\"nofollow\">' + t + '</a>');\n            l = $('<li class=\"' + n + '_nav\"></li>').append(c);\n            $(selector).append(l);\n        });\n        return true;\n    }\n\n    generateCatalog(\".catalog-body\");\n\n    // toggle side catalog\n    $(\".catalog-toggle\").click((function (e) {\n        e.preventDefault();\n        $('.side-catalog').toggleClass(\"fold\")\n    }))\n\n    /*\n     * Doc: https://github.com/davist11/jQuery-One-Page-Nav\n     * Fork by Hux to support padding\n     */\n    async(\"/js/jquery.nav.js\", function () {\n        $('.catalog-body').onePageNav({\n            currentClass: \"active\",\n            changeHash: !1,\n            easing: \"swing\",\n            filter: \"\",\n            scrollSpeed: 700,\n            scrollOffset: 0,\n            scrollThreshold: .2,\n            begin: null,\n            end: null,\n            scrollChange: null,\n            padding: 80\n        });\n    });\n</script>\n\n\n\n<!-- Multi-Lingual -->\n\n\n<!-- Simple Jekyll Search -->\n<script>\n    // https://stackoverflow.com/questions/1912501/unescape-html-entities-in-javascript\n    function htmlDecode(input) {\n        var e = document.createElement('textarea');\n        e.innerHTML = input;\n        // handle case of empty input\n        return e.childNodes.length === 0 ? \"\" : e.childNodes[0].nodeValue;\n    }\n\n    SimpleJekyllSearch({\n        searchInput: document.getElementById('search-input'),\n        resultsContainer: document.getElementById('search-results'),\n        json: '/search.json',\n        searchResultTemplate: '<div class=\"post-preview item\"><a href=\"{url}\"><h2 class=\"post-title\">{title}</h2><h3 class=\"post-subtitle\">{subtitle}</h3><hr></a></div>',\n        noResultsText: 'No results',\n        limit: 50,\n        fuzzy: false,\n        // a hack to get escaped subtitle unescaped. for some reason, \n        // post.subtitle w/o escape filter nuke entire search.\n        templateMiddleware: function (prop, value, template) {\n            if (prop === 'subtitle' || prop === 'title') {\n                if (value.indexOf(\"code\")) {\n                    return htmlDecode(value);\n                } else {\n                    return value;\n                }\n            }\n        }\n    });\n\n    $(document).ready(function () {\n        var $searchPage = $('.search-page');\n        var $searchOpen = $('.search-icon');\n        var $searchClose = $('.search-icon-close');\n        var $searchInput = $('#search-input');\n        var $body = $('body');\n\n        $searchOpen.on('click', function (e) {\n            e.preventDefault();\n            $searchPage.toggleClass('search-active');\n            var prevClasses = $body.attr('class') || '';\n            setTimeout(function () {\n                $body.addClass('no-scroll');\n            }, 400)\n\n            if ($searchPage.hasClass('search-active')) {\n                $searchClose.on('click', function (e) {\n                    e.preventDefault();\n                    $searchPage.removeClass('search-active');\n                    $body.attr('class', prevClasses);  // from closure \n                });\n                $searchInput.focus();\n            }\n        });\n    });\n</script>\n\n\n<!-- Image to hack wechat -->\n<img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\" />\n<!-- Migrate from head to bottom, no longer block render and still work -->\n\n</body>\n\n</html>\n","excerpt":"<h1 id=\"ios组件化实践之类命名注释篇\">iOS组件化实践之：类命名注释篇</h1>\n","url":"/2023/07/31/6-iOS-%E7%BB%84%E4%BB%B6%E5%8C%96-%E5%91%BD%E5%90%8D%E6%B3%A8%E9%87%8A%E7%AF%87/","next":{"id":"/2023/08/02/iOS-组件化实践之-遇到的问题及解决过程纪要-持续更新中","tags":[],"relative_path":"_posts/2023-08-02-iOS-组件化实践之-遇到的问题及解决过程纪要-持续更新中.md","collection":"posts","name":"2023-08-02-iOS-组件化实践之-遇到的问题及解决过程纪要-持续更新中.md","url":"/2023/08/02/iOS-%E7%BB%84%E4%BB%B6%E5%8C%96%E5%AE%9E%E8%B7%B5%E4%B9%8B-%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98%E5%8F%8A%E8%A7%A3%E5%86%B3%E8%BF%87%E7%A8%8B%E7%BA%AA%E8%A6%81-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0%E4%B8%AD/","title":"iOS组件化实践之：遇到的问题及解决过程纪要(持续更新中)","date":"2023-08-02 00:00:00 +0800","categories":[],"path":"_posts/2023-08-02-iOS-组件化实践之-遇到的问题及解决过程纪要-持续更新中.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/home-bg-geek.jpg","slug":"iOS-组件化实践之-遇到的问题及解决过程纪要-持续更新中","ext":".md"},"title":"iOS组件化实践之：类命名注释篇","date":"2023-07-31 00:00:00 +0800","categories":[],"path":"_posts/2023-07-31-6-iOS-组件化-命名注释篇.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/home-bg-geek.jpg","slug":"6-iOS-组件化-命名注释篇","ext":".md"},"title":"iOS组件化实践之：资源组件库","date":"2023-07-26 00:00:00 +0800","categories":[],"path":"_posts/2023-07-26-5-iOS组件化-资源组件库.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/home-bg-geek.jpg","slug":"5-iOS组件化-资源组件库","ext":".md"},{"id":"/2023/07/26/4-iOS组件化模板","tags":[],"relative_path":"_posts/2023-07-26-4-iOS组件化模板.md","collection":"posts","content":"<h1 id=\"ios组件化实践之新建一个pod组件库\">iOS组件化实践之：新建一个Pod组件库</h1>\n\n<h2 id=\"0背景\">0.背景</h2>\n\n<p>在IOS组件化的实践过程中，</p>\n\n<ul>\n  <li>规划期间需要对组件进行定义、功能划分、接口设计等</li>\n  <li>实践期间需要对组件进行创建，迁移主工程能力等</li>\n</ul>\n\n<p>这过程，就看你需要较为频繁地创建Pod组件库，因此对于了解一下，Pod组件的创建，及其模板的使用与修改，变成较为重要</p>\n\n<h2 id=\"1-通过常规模板创建\">1. 通过常规模板创建</h2>\n\n<p>CocoaPods提供的创建指令：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>pod lib create xx\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>通过输出可以看到：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>Cloning <span class=\"sb\">`</span>https://github.com/CocoaPods/pod-template.git<span class=\"sb\">`</span> into <span class=\"sb\">`</span>xx<span class=\"sb\">`</span><span class=\"nb\">.</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>此命令默认从 <a href=\"https://github.com/CocoaPods/pod-template\">github Pod-template</a>，下载默认模板进行创建，依次回答几个问题之后</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n</pre></td><td class=\"rouge-code\"><pre>What platform <span class=\"k\">do </span>you want to use?? <span class=\"o\">[</span> iOS / macOS <span class=\"o\">]</span>\n <span class=\"o\">&gt;</span> \nios\nWhat language <span class=\"k\">do </span>you want to use?? <span class=\"o\">[</span> Swift / ObjC <span class=\"o\">]</span>\n <span class=\"o\">&gt;</span> \nswift\nWould you like to include a demo application with your library? <span class=\"o\">[</span> Yes / No <span class=\"o\">]</span>\n <span class=\"o\">&gt;</span> \n<span class=\"nb\">yes\n</span>Which testing frameworks will you use? <span class=\"o\">[</span> Quick / None <span class=\"o\">]</span>\n <span class=\"o\">&gt;</span> \nquick\nWould you like to <span class=\"k\">do </span>view based testing? <span class=\"o\">[</span> Yes / No <span class=\"o\">]</span>\n <span class=\"o\">&gt;</span> \n<span class=\"nb\">yes</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>当前路径下就生成了一个Pod仓库，Spec文件如下：</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n</pre></td><td class=\"rouge-code\"><pre><span class=\"no\">Pod</span><span class=\"o\">::</span><span class=\"no\">Spec</span><span class=\"p\">.</span><span class=\"nf\">new</span> <span class=\"k\">do</span> <span class=\"o\">|</span><span class=\"n\">s</span><span class=\"o\">|</span>\n  <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">name</span>             <span class=\"o\">=</span> <span class=\"s1\">'xx'</span>\n  <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">version</span>          <span class=\"o\">=</span> <span class=\"s1\">'0.1.0'</span>\n  <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">summary</span>          <span class=\"o\">=</span> <span class=\"s1\">'A short description of xx.'</span>\n\n<span class=\"c1\"># This description is used to generate tags and improve search results.</span>\n<span class=\"c1\">#   * Think: What does it do? Why did you write it? What is the focus?</span>\n<span class=\"c1\">#   * Try to keep it short, snappy and to the point.</span>\n<span class=\"c1\">#   * Write the description between the DESC delimiters below.</span>\n<span class=\"c1\">#   * Finally, don't worry about the indent, CocoaPods strips it!</span>\n\n  <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">description</span>      <span class=\"o\">=</span> <span class=\"o\">&lt;&lt;-</span><span class=\"no\">DESC</span><span class=\"sh\">\nTODO: Add long description of the pod here.\n</span><span class=\"no\">                       DESC</span>\n\n  <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">homepage</span>         <span class=\"o\">=</span> <span class=\"s1\">'https://github.com/chenyp/xx'</span>\n  <span class=\"c1\"># s.screenshots     = 'www.example.com/screenshots_1', 'www.example.com/screenshots_2'</span>\n  <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">license</span>          <span class=\"o\">=</span> <span class=\"p\">{</span> <span class=\"ss\">:type</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'MIT'</span><span class=\"p\">,</span> <span class=\"ss\">:file</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'LICENSE'</span> <span class=\"p\">}</span>\n  <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">author</span>           <span class=\"o\">=</span> <span class=\"p\">{</span> <span class=\"s1\">'chenyp'</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'165685965@qq.com'</span> <span class=\"p\">}</span>\n  <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">source</span>           <span class=\"o\">=</span> <span class=\"p\">{</span> <span class=\"ss\">:git</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'https://github.com/chenyp/xx.git'</span><span class=\"p\">,</span> <span class=\"ss\">:tag</span> <span class=\"o\">=&gt;</span> <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">version</span><span class=\"p\">.</span><span class=\"nf\">to_s</span> <span class=\"p\">}</span>\n  <span class=\"c1\"># s.social_media_url = 'https://twitter.com/&lt;TWITTER_USERNAME&gt;'</span>\n\n  <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">ios</span><span class=\"p\">.</span><span class=\"nf\">deployment_target</span> <span class=\"o\">=</span> <span class=\"s1\">'10.0'</span>\n\n  <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">source_files</span> <span class=\"o\">=</span> <span class=\"s1\">'xx/Classes/**/*'</span>\n  \n  <span class=\"c1\"># s.resource_bundles = {</span>\n  <span class=\"c1\">#   'xx' =&gt; ['xx/Assets/*.png']</span>\n  <span class=\"c1\"># }</span>\n\n  <span class=\"c1\"># s.public_header_files = 'Pod/Classes/**/*.h'</span>\n  <span class=\"c1\"># s.frameworks = 'UIKit', 'MapKit'</span>\n  <span class=\"c1\"># s.dependency 'AFNetworking', '~&gt; 2.3'</span>\n<span class=\"k\">end</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h2 id=\"2-通过自定义模板创建\">2. 通过自定义模板创建</h2>\n\n<p>一般而言，不建议通过上述方式进行创建，默认以git全局配置的name、email字段，加上github主页进行填充，因为默认模板所创建的诸多字段是必要修改的（不改无法通过私有组件部署）：</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n</pre></td><td class=\"rouge-code\"><pre>  <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">homepage</span>         <span class=\"o\">=</span> <span class=\"s1\">'https://github.com/chenyp/xx'</span>\n  <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">author</span>           <span class=\"o\">=</span> <span class=\"p\">{</span> <span class=\"s1\">'chenyp'</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'165685965@qq.com'</span> <span class=\"p\">}</span>\n  <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">source</span>           <span class=\"o\">=</span> <span class=\"p\">{</span> <span class=\"ss\">:git</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'https://github.com/chenyp/xx.git'</span><span class=\"p\">,</span> <span class=\"ss\">:tag</span> <span class=\"o\">=&gt;</span> <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">version</span><span class=\"p\">.</span><span class=\"nf\">to_s</span> <span class=\"p\">}</span>\n<span class=\"err\">……</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>由于组件化的过程是需要频繁创建多个组件仓库，如果每次都改上述字段，有可能错改漏改，导致效率低下，基于懒惰是程序员的美德这一不成文的追求（其实应该是尽量能把重复工作流程化），着手对上述模板进行修改。</p>\n\n<p>自定义模板创建：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>git clone git@github.com:CocoaPods/pod-template.git\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>通过修改仓库中的“<strong>NAME.podspec</strong>”文件中的相关字段</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n</pre></td><td class=\"rouge-code\"><pre>  <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">homepage</span>         <span class=\"o\">=</span> <span class=\"s1\">'https://内网githost/name/xx'</span>\n  <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">author</span>           <span class=\"o\">=</span> <span class=\"p\">{</span> <span class=\"s1\">'内网git提交commit姓名'</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'内网git提交commit email'</span> <span class=\"p\">}</span>\n  <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">source</span>           <span class=\"o\">=</span> <span class=\"p\">{</span> <span class=\"ss\">:git</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'https://内网githost/name/xx.git'</span><span class=\"p\">,</span> <span class=\"ss\">:tag</span> <span class=\"o\">=&gt;</span> <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">version</span><span class=\"p\">.</span><span class=\"nf\">to_s</span> <span class=\"p\">}</span>\t<span class=\"c1\">#clone 组件库地址</span>\n<span class=\"err\">……</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>修改后将上述模板放到git仓库上，执行：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre> pod lib create xx  <span class=\"nt\">--template-url</span><span class=\"o\">=</span>ssh://内网githost/ios/Pods/Tmplate/XXX_Pod_Tmeplate.git\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h2 id=\"3-通过高度自定义模板创建\">3. 通过高度自定义模板创建</h2>\n\n<p>一般而言，到上述即可完成基础的模板自定义，减少创建私有库后所需的重复修改字段的工作量，但是对于下列选项的一致性，如果能省略冗余及提高统一性，自然更好了：</p>\n\n<ul class=\"task-list\">\n  <li class=\"task-list-item\">\n    <p><input type=\"checkbox\" class=\"task-list-item-checkbox\" disabled=\"disabled\" checked=\"checked\" />平台选择的冗余（iOS）</p>\n  </li>\n  <li class=\"task-list-item\">\n    <p><input type=\"checkbox\" class=\"task-list-item-checkbox\" disabled=\"disabled\" checked=\"checked\" />代码风格的统一（类名前缀）</p>\n  </li>\n  <li class=\"task-list-item\">\n    <p><input type=\"checkbox\" class=\"task-list-item-checkbox\" disabled=\"disabled\" />语言统一（iOS/Swift）</p>\n  </li>\n  <li class=\"task-list-item\">\n    <p><input type=\"checkbox\" class=\"task-list-item-checkbox\" disabled=\"disabled\" checked=\"checked\" />Demo工程</p>\n  </li>\n  <li class=\"task-list-item\">\n    <p><input type=\"checkbox\" class=\"task-list-item-checkbox\" disabled=\"disabled\" checked=\"checked\" />测试依赖</p>\n  </li>\n</ul>\n\n<p>这就需要对pod-template的ruby代码进行修改已达到不需要重复设定模板交互的目的：</p>\n\n<p>模板配置：TemplateConfigurator.rb</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n</pre></td><td class=\"rouge-code\"><pre>    <span class=\"k\">def</span> <span class=\"nf\">run</span>\n      <span class=\"vi\">@message_bank</span><span class=\"p\">.</span><span class=\"nf\">welcome_message</span>\n\n      <span class=\"n\">platform</span> <span class=\"o\">=</span> <span class=\"nb\">self</span><span class=\"p\">.</span><span class=\"nf\">ask_with_answers</span><span class=\"p\">(</span><span class=\"s2\">\"What platform do you want to use?\"</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s2\">\"iOS\"</span><span class=\"p\">,</span> <span class=\"s2\">\"macOS\"</span><span class=\"p\">]).</span><span class=\"nf\">to_sym</span>\n\n      <span class=\"k\">case</span> <span class=\"n\">platform</span>\n        <span class=\"k\">when</span> <span class=\"ss\">:macos</span>\n          <span class=\"no\">ConfigureMacOSSwift</span><span class=\"p\">.</span><span class=\"nf\">perform</span><span class=\"p\">(</span><span class=\"ss\">configurator: </span><span class=\"nb\">self</span><span class=\"p\">)</span>\n        <span class=\"k\">when</span> <span class=\"ss\">:ios</span>\n          <span class=\"n\">framework</span> <span class=\"o\">=</span> <span class=\"nb\">self</span><span class=\"p\">.</span><span class=\"nf\">ask_with_answers</span><span class=\"p\">(</span><span class=\"s2\">\"What language do you want to use?\"</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s2\">\"Swift\"</span><span class=\"p\">,</span> <span class=\"s2\">\"ObjC\"</span><span class=\"p\">]).</span><span class=\"nf\">to_sym</span>\n          <span class=\"k\">case</span> <span class=\"n\">framework</span>\n            <span class=\"k\">when</span> <span class=\"ss\">:swift</span>\n              <span class=\"no\">ConfigureSwift</span><span class=\"p\">.</span><span class=\"nf\">perform</span><span class=\"p\">(</span><span class=\"ss\">configurator: </span><span class=\"nb\">self</span><span class=\"p\">)</span>\n\n            <span class=\"k\">when</span> <span class=\"ss\">:objc</span>\n              <span class=\"no\">ConfigureIOS</span><span class=\"p\">.</span><span class=\"nf\">perform</span><span class=\"p\">(</span><span class=\"ss\">configurator: </span><span class=\"nb\">self</span><span class=\"p\">)</span>\n          <span class=\"k\">end</span>\n      <span class=\"k\">end</span>\n      \n      <span class=\"c1\">#……此处省略后面的代码……#</span>\n    <span class=\"k\">end</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>改为：</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n</pre></td><td class=\"rouge-code\"><pre>    <span class=\"k\">def</span> <span class=\"nf\">run</span>\n      <span class=\"vi\">@message_bank</span><span class=\"p\">.</span><span class=\"nf\">welcome_message</span>\n\n      <span class=\"c1\">#自定义模板优化：这里可以绕过了一些问题（免回答iOS、Objc）,当然如果想要设置成其他的，也可以调用其他方法，或者恢复询问式配置</span>\n      <span class=\"no\">ConfigureIOS</span><span class=\"p\">.</span><span class=\"nf\">perform</span><span class=\"p\">(</span><span class=\"ss\">configurator: </span><span class=\"nb\">self</span><span class=\"p\">)</span>\n      \n<span class=\"c1\">#      platform = self.ask_with_answers(\"What platform do you want to use?\", [\"iOS\", \"macOS\"]).to_sym</span>\n<span class=\"c1\">#</span>\n<span class=\"c1\">#      case platform</span>\n<span class=\"c1\">#        when :macos</span>\n<span class=\"c1\">#          ConfigureMacOSSwift.perform(configurator: self)</span>\n<span class=\"c1\">#        when :ios</span>\n<span class=\"c1\">#          framework = self.ask_with_answers(\"What language do you want to use?\", [\"Swift\", \"ObjC\"]).to_sym</span>\n<span class=\"c1\">#          case framework</span>\n<span class=\"c1\">#            when :swift</span>\n<span class=\"c1\">#              ConfigureSwift.perform(configurator: self)</span>\n<span class=\"c1\">#</span>\n<span class=\"c1\">#            when :objc</span>\n<span class=\"c1\">#              ConfigureIOS.perform(configurator: self)</span>\n<span class=\"c1\">#          end</span>\n<span class=\"c1\">#      end</span>\n\n      <span class=\"c1\">#……此处省略后面的代码……#</span>\n    <span class=\"k\">end</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>选择了相关语言，就在相关语言的 Configure 内配置后续的设置，例如：选择了iOS，就在ConfigureIOS.rb配置:</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n</pre></td><td class=\"rouge-code\"><pre>    <span class=\"k\">def</span> <span class=\"nf\">perform</span>\n\n      <span class=\"n\">keep_demo</span> <span class=\"o\">=</span> <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">ask_with_answers</span><span class=\"p\">(</span><span class=\"s2\">\"Would you like to include a demo application with your library\"</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s2\">\"Yes\"</span><span class=\"p\">,</span> <span class=\"s2\">\"No\"</span><span class=\"p\">]).</span><span class=\"nf\">to_sym</span>\n\n      <span class=\"n\">framework</span> <span class=\"o\">=</span> <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">ask_with_answers</span><span class=\"p\">(</span><span class=\"s2\">\"Which testing frameworks will you use\"</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s2\">\"Specta\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Kiwi\"</span><span class=\"p\">,</span> <span class=\"s2\">\"None\"</span><span class=\"p\">]).</span><span class=\"nf\">to_sym</span>\n      <span class=\"k\">case</span> <span class=\"n\">framework</span>\n        <span class=\"k\">when</span> <span class=\"ss\">:specta</span>\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_pod_to_podfile</span> <span class=\"s2\">\"Specta\"</span>\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_pod_to_podfile</span> <span class=\"s2\">\"Expecta\"</span>\n\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_line_to_pch</span> <span class=\"s2\">\"@import Specta;\"</span>\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_line_to_pch</span> <span class=\"s2\">\"@import Expecta;\"</span>\n\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">set_test_framework</span><span class=\"p\">(</span><span class=\"s2\">\"specta\"</span><span class=\"p\">,</span> <span class=\"s2\">\"m\"</span><span class=\"p\">,</span> <span class=\"s2\">\"ios\"</span><span class=\"p\">)</span>\n\n        <span class=\"k\">when</span> <span class=\"ss\">:kiwi</span>\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_pod_to_podfile</span> <span class=\"s2\">\"Kiwi\"</span>\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_line_to_pch</span> <span class=\"s2\">\"@import Kiwi;\"</span>\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">set_test_framework</span><span class=\"p\">(</span><span class=\"s2\">\"kiwi\"</span><span class=\"p\">,</span> <span class=\"s2\">\"m\"</span><span class=\"p\">,</span> <span class=\"s2\">\"ios\"</span><span class=\"p\">)</span>\n\n        <span class=\"k\">when</span> <span class=\"ss\">:none</span>\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">set_test_framework</span><span class=\"p\">(</span><span class=\"s2\">\"xctest\"</span><span class=\"p\">,</span> <span class=\"s2\">\"m\"</span><span class=\"p\">,</span> <span class=\"s2\">\"ios\"</span><span class=\"p\">)</span>\n      <span class=\"k\">end</span>\n\n      <span class=\"n\">snapshots</span> <span class=\"o\">=</span> <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">ask_with_answers</span><span class=\"p\">(</span><span class=\"s2\">\"Would you like to do view based testing\"</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s2\">\"Yes\"</span><span class=\"p\">,</span> <span class=\"s2\">\"No\"</span><span class=\"p\">]).</span><span class=\"nf\">to_sym</span>\n      <span class=\"k\">case</span> <span class=\"n\">snapshots</span>\n        <span class=\"k\">when</span> <span class=\"ss\">:yes</span>\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_pod_to_podfile</span> <span class=\"s2\">\"FBSnapshotTestCase\"</span>\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_line_to_pch</span> <span class=\"s2\">\"@import FBSnapshotTestCase;\"</span>\n\n          <span class=\"k\">if</span> <span class=\"n\">keep_demo</span> <span class=\"o\">==</span> <span class=\"ss\">:no</span>\n              <span class=\"nb\">puts</span> <span class=\"s2\">\" Putting demo application back in, you cannot do view tests without a host application.\"</span>\n              <span class=\"n\">keep_demo</span> <span class=\"o\">=</span> <span class=\"ss\">:yes</span>\n          <span class=\"k\">end</span>\n\n          <span class=\"k\">if</span> <span class=\"n\">framework</span> <span class=\"o\">==</span> <span class=\"ss\">:specta</span>\n              <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_pod_to_podfile</span> <span class=\"s2\">\"Expecta+Snapshots\"</span>\n              <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_line_to_pch</span> <span class=\"s2\">\"@import Expecta_Snapshots;\"</span>\n          <span class=\"k\">end</span>\n      <span class=\"k\">end</span>\n\n      <span class=\"n\">prefix</span> <span class=\"o\">=</span> <span class=\"kp\">nil</span>\n\n      <span class=\"kp\">loop</span> <span class=\"k\">do</span>\n        <span class=\"n\">prefix</span> <span class=\"o\">=</span> <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">ask</span><span class=\"p\">(</span><span class=\"s2\">\"What is your class prefix\"</span><span class=\"p\">).</span><span class=\"nf\">upcase</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">prefix</span><span class=\"p\">.</span><span class=\"nf\">include?</span><span class=\"p\">(</span><span class=\"s1\">' '</span><span class=\"p\">)</span>\n          <span class=\"nb\">puts</span> <span class=\"s1\">'Your class prefix cannot contain spaces.'</span><span class=\"p\">.</span><span class=\"nf\">red</span>\n        <span class=\"k\">else</span>\n          <span class=\"k\">break</span>\n        <span class=\"k\">end</span>\n      <span class=\"k\">end</span>\n\t      <span class=\"c1\">#……此处省略后面的代码……#</span>\n  <span class=\"k\">end</span>\n\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>找到相关的问答区：</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n</pre></td><td class=\"rouge-code\"><pre>    <span class=\"k\">def</span> <span class=\"nf\">perform</span>\n      <span class=\"c1\">#自定义模板优化: 这里默认需要demo，当然如果想要设置成其他的，也可以调用其他方法，或者恢复询问式配置</span>\n      <span class=\"n\">keep_demo</span> <span class=\"o\">=</span> <span class=\"s2\">\"yes\"</span><span class=\"c1\">#configurator.ask_with_answers(\"Would you like to include a demo application with your library\", [\"Yes\", \"No\"]).to_sym</span>\n      <span class=\"c1\">#自定义模板优化：: 这里默认不需要testing frameworks，当然如果想要设置成其他的，也可以调用其他方法，或者恢复询问式配置</span>\n      <span class=\"n\">framework</span> <span class=\"o\">=</span> <span class=\"s2\">\"none\"</span> <span class=\"c1\">#configurator.ask_with_answers(\"Which testing frameworks will you use\", [\"Specta\", \"Kiwi\", \"None\"]).to_sym</span>\n      <span class=\"k\">case</span> <span class=\"n\">framework</span>\n        <span class=\"k\">when</span> <span class=\"ss\">:specta</span>\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_pod_to_podfile</span> <span class=\"s2\">\"Specta\"</span>\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_pod_to_podfile</span> <span class=\"s2\">\"Expecta\"</span>\n\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_line_to_pch</span> <span class=\"s2\">\"@import Specta;\"</span>\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_line_to_pch</span> <span class=\"s2\">\"@import Expecta;\"</span>\n\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">set_test_framework</span><span class=\"p\">(</span><span class=\"s2\">\"specta\"</span><span class=\"p\">,</span> <span class=\"s2\">\"m\"</span><span class=\"p\">,</span> <span class=\"s2\">\"ios\"</span><span class=\"p\">)</span>\n\n        <span class=\"k\">when</span> <span class=\"ss\">:kiwi</span>\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_pod_to_podfile</span> <span class=\"s2\">\"Kiwi\"</span>\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_line_to_pch</span> <span class=\"s2\">\"@import Kiwi;\"</span>\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">set_test_framework</span><span class=\"p\">(</span><span class=\"s2\">\"kiwi\"</span><span class=\"p\">,</span> <span class=\"s2\">\"m\"</span><span class=\"p\">,</span> <span class=\"s2\">\"ios\"</span><span class=\"p\">)</span>\n\n        <span class=\"k\">when</span> <span class=\"ss\">:none</span>\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">set_test_framework</span><span class=\"p\">(</span><span class=\"s2\">\"xctest\"</span><span class=\"p\">,</span> <span class=\"s2\">\"m\"</span><span class=\"p\">,</span> <span class=\"s2\">\"ios\"</span><span class=\"p\">)</span>\n      <span class=\"k\">end</span>\n\n      <span class=\"c1\">#自定义模板优化：这里默认不需要view based testing，当然如果想要设置成其他的，也可以调用其他方法，或者恢复询问式配置</span>\n      <span class=\"n\">snapshots</span> <span class=\"o\">=</span> <span class=\"s2\">\"no\"</span><span class=\"c1\">#configurator.ask_with_answers(\"Would you like to do view based testing\", [\"Yes\", \"No\"]).to_sym</span>\n      <span class=\"k\">case</span> <span class=\"n\">snapshots</span>\n        <span class=\"k\">when</span> <span class=\"ss\">:yes</span>\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_pod_to_podfile</span> <span class=\"s2\">\"FBSnapshotTestCase\"</span>\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_line_to_pch</span> <span class=\"s2\">\"@import FBSnapshotTestCase;\"</span>\n\n          <span class=\"k\">if</span> <span class=\"n\">keep_demo</span> <span class=\"o\">==</span> <span class=\"ss\">:no</span>\n              <span class=\"nb\">puts</span> <span class=\"s2\">\" Putting demo application back in, you cannot do view tests without a host application.\"</span>\n              <span class=\"n\">keep_demo</span> <span class=\"o\">=</span> <span class=\"ss\">:yes</span>\n          <span class=\"k\">end</span>\n\n          <span class=\"k\">if</span> <span class=\"n\">framework</span> <span class=\"o\">==</span> <span class=\"ss\">:specta</span>\n              <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_pod_to_podfile</span> <span class=\"s2\">\"Expecta+Snapshots\"</span>\n              <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_line_to_pch</span> <span class=\"s2\">\"@import Expecta_Snapshots;\"</span>\n          <span class=\"k\">end</span>\n      <span class=\"k\">end</span>\n\n      <span class=\"n\">prefix</span> <span class=\"o\">=</span> <span class=\"kp\">nil</span>\n\n      <span class=\"kp\">loop</span> <span class=\"k\">do</span>\n      <span class=\"c1\">#自定义模板优化：这里默认prefix为PSC，当然如果想要设置成其他的，也可以调用其他方法，或者恢复询问式配置</span>\n        <span class=\"n\">prefix</span> <span class=\"o\">=</span> <span class=\"s2\">\"PSC\"</span><span class=\"c1\">#configurator.ask(\"What is your class prefix\").upcase</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">prefix</span><span class=\"p\">.</span><span class=\"nf\">include?</span><span class=\"p\">(</span><span class=\"s1\">' '</span><span class=\"p\">)</span>\n          <span class=\"nb\">puts</span> <span class=\"s1\">'Your class prefix cannot contain spaces.'</span><span class=\"p\">.</span><span class=\"nf\">red</span>\n        <span class=\"k\">else</span>\n          <span class=\"k\">break</span>\n        <span class=\"k\">end</span>\n      <span class=\"k\">end</span>\n      <span class=\"c1\">#……此处省略后面的代码……#</span>\n  <span class=\"k\">end</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>至此，优化的自定义模板已经完成，再创建另一个（如果你需要保留上面那种简易自定义）git仓库存储，一键创建更符合需求的pod私有库模板：let‘s try</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre> pod lib create xx  <span class=\"nt\">--template-url</span><span class=\"o\">=</span>ssh://内网githost/ios/Pods/Tmplate/PSC_iOS_Objc_Demo_NoneTest.git\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h2 id=\"4-如果你还是使用gem管理pod插件的话\">4. 如果你还是使用Gem管理Pod插件的话</h2>\n\n<p>一般而言，在多人团队中，需要用到Gem来管理Pod插件版本，避免由于Pod版本不一致，导致的集成与编译问题，如果你还有Gemfile需要配置的话，由于模板配置的代码最后的是：</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n</pre></td><td class=\"rouge-code\"><pre>      <span class=\"c1\"># There has to be a single file in the Classes dir</span>\n      <span class=\"c1\"># or a framework won't be created, which is now default</span>\n      <span class=\"sb\">`touch Pod/Classes/ReplaceMe.m`</span>\n\n      <span class=\"sb\">`mv ./templates/ios/* ./`</span>\n\n      <span class=\"c1\"># remove podspec for osx</span>\n      <span class=\"sb\">`rm ./NAME-osx.podspec`</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>在Podfile同级目录下也存放一个自己在用的Gemfile即可:</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c1\"># frozen_string_literal: true</span>\n\n<span class=\"n\">source</span> <span class=\"s2\">\"https://rubygems.org\"</span>\n\n<span class=\"n\">gem</span> <span class=\"s1\">'cocoapods'</span><span class=\"p\">,</span> <span class=\"s1\">'1.11.2'</span>\n\n<span class=\"n\">git_source</span><span class=\"p\">(</span><span class=\"ss\">:github</span><span class=\"p\">)</span> <span class=\"p\">{</span><span class=\"o\">|</span><span class=\"n\">repo_name</span><span class=\"o\">|</span> <span class=\"s2\">\"https://github.com/</span><span class=\"si\">#{</span><span class=\"n\">repo_name</span><span class=\"si\">}</span><span class=\"s2\">\"</span> <span class=\"p\">}</span>\n\n<span class=\"c1\"># gem \"rails\"</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h2 id=\"5-最后的忽略\">5 最后的忽略</h2>\n\n<p>模板创建之后，会执行Pod install，此时与常规工程一样，在Example下会新增Pod文件夹存在Pod依赖库，提交时需忽略，本着能少干重复劳动就不多干的原则，我们再把.gitignore修改一下：</p>\n\n<p>在根目录中找到.gitignore文件，由于是.开头，默认是隐藏了，在下面代码中添加你需要忽略的文件夹</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\"># macOS</span>\n.DS_Store\n\n<span class=\"c\"># Xcode</span>\nbuild/\n<span class=\"k\">*</span>.pbxuser\n<span class=\"o\">!</span>default.pbxuser\n<span class=\"k\">*</span>.mode1v3\n<span class=\"o\">!</span>default.mode1v3\n<span class=\"k\">*</span>.mode2v3\n<span class=\"o\">!</span>default.mode2v3\n<span class=\"k\">*</span>.perspectivev3\n<span class=\"o\">!</span>default.perspectivev3\nxcuserdata/\n<span class=\"k\">*</span>.xccheckout\n<span class=\"k\">*</span>.moved-aside\nDerivedData\n<span class=\"k\">*</span>.hmap\n<span class=\"k\">*</span>.ipa\n\n<span class=\"c\"># Bundler</span>\n.bundle\n\n<span class=\"c\"># Add this line if you want to avoid checking in source code from Carthage dependencies.</span>\n<span class=\"c\"># Carthage/Checkouts</span>\n\nCarthage/Build\n\n<span class=\"c\"># We recommend against adding the Pods directory to your .gitignore. However</span>\n<span class=\"c\"># you should judge for yourself, the pros and cons are mentioned at:</span>\n<span class=\"c\"># https://guides.cocoapods.org/using/using-cocoapods.html#should-i-ignore-the-pods-directory-in-source-control</span>\n<span class=\"c\"># </span>\n<span class=\"c\"># Note: if you ignore the Pods directory, make sure to uncomment</span>\n<span class=\"c\"># `pod install` in .travis.yml</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># Pods/ #打开此处注释可以忽略 以下Example/Pods/</span>\n\n<span class=\"c\">#以下可以继续添加忽略文件及文件夹</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h2 id=\"6扩展podfile依赖\">6.扩展：Podfile依赖</h2>\n\n<p>一般而言，创建的Pod私有库中的Podfile，会包含简单的模板：</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n</pre></td><td class=\"rouge-code\"><pre><span class=\"n\">use_frameworks!</span>\n\n<span class=\"n\">platform</span> <span class=\"ss\">:ios</span><span class=\"p\">,</span> <span class=\"s1\">'10.0'</span>\n\n<span class=\"n\">target</span> <span class=\"s1\">'${POD_NAME}_Example'</span> <span class=\"k\">do</span>\n  <span class=\"n\">pod</span> <span class=\"s1\">'${POD_NAME}'</span><span class=\"p\">,</span> <span class=\"ss\">:path</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'../'</span>\n\n  <span class=\"n\">target</span> <span class=\"s1\">'${POD_NAME}_Tests'</span> <span class=\"k\">do</span>\n    <span class=\"n\">inherit!</span> <span class=\"ss\">:search_paths</span>\n\n    <span class=\"err\">$</span><span class=\"p\">{</span><span class=\"no\">INCLUDED_PODS</span><span class=\"p\">}</span>\n  <span class=\"k\">end</span>\n<span class=\"k\">end</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>对于单个Pod组件库，也许够用了，但是我们如果是在进行组件化改造的进程中，需要与现有的私有库进行交互与依赖：比如业务库依赖基础库等，</p>\n\n<p>为了方便起见，不至于对每次创建私有库进行Podfile配置（还是懒😭），因此对Podfile进行了改造：</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n</pre></td><td class=\"rouge-code\"><pre><span class=\"n\">source</span> <span class=\"s1\">'ssh://私有库git地址/Specs.git'</span>\n<span class=\"n\">source</span> <span class=\"s1\">'https://github.com/CocoaPods/Specs.git'</span>\n\n<span class=\"n\">use_frameworks!</span>\n\n<span class=\"n\">platform</span> <span class=\"ss\">:ios</span><span class=\"p\">,</span> <span class=\"s1\">'12.0'</span>\t<span class=\"c1\">#写这篇文章时使用的podfile默认是10.0，可以改成你需要的</span>\n<span class=\"n\">post_install</span> <span class=\"k\">do</span> <span class=\"o\">|</span><span class=\"n\">installer</span><span class=\"o\">|</span>\n    <span class=\"n\">installer</span><span class=\"p\">.</span><span class=\"nf\">generated_projects</span><span class=\"p\">.</span><span class=\"nf\">each</span> <span class=\"k\">do</span> <span class=\"o\">|</span><span class=\"n\">project</span><span class=\"o\">|</span>\n          <span class=\"n\">project</span><span class=\"p\">.</span><span class=\"nf\">targets</span><span class=\"p\">.</span><span class=\"nf\">each</span> <span class=\"k\">do</span> <span class=\"o\">|</span><span class=\"n\">target</span><span class=\"o\">|</span>\n              <span class=\"n\">target</span><span class=\"p\">.</span><span class=\"nf\">build_configurations</span><span class=\"p\">.</span><span class=\"nf\">each</span> <span class=\"k\">do</span> <span class=\"o\">|</span><span class=\"n\">config</span><span class=\"o\">|</span>\n                  <span class=\"n\">config</span><span class=\"p\">.</span><span class=\"nf\">build_settings</span><span class=\"p\">[</span><span class=\"s1\">'IPHONEOS_DEPLOYMENT_TARGET'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">'12.0'</span>\n                  <span class=\"n\">config</span><span class=\"p\">.</span><span class=\"nf\">build_settings</span><span class=\"p\">[</span><span class=\"s2\">\"DEVELOPMENT_TEAM\"</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s2\">\"xxxxx\"</span>\t<span class=\"c1\">#这里指定签名，避免编译出错还要手动指定</span>\n               <span class=\"k\">end</span>\n          <span class=\"k\">end</span>\n   <span class=\"k\">end</span>\n<span class=\"k\">end</span>\n\n<span class=\"n\">use_frameworks!</span>\n\n\n<span class=\"n\">target</span> <span class=\"s1\">'${POD_NAME}_Example'</span> <span class=\"k\">do</span>\n\n<span class=\"c1\">#新建pod库创建模板的时候把私有库拉取一下</span>\n<span class=\"k\">def</span> <span class=\"nf\">debug_pod</span><span class=\"p\">(</span><span class=\"n\">pod_name</span><span class=\"p\">)</span>\n  <span class=\"n\">this_pod_name</span> <span class=\"o\">=</span> <span class=\"s2\">\"${POD_NAME}\"</span>\n  <span class=\"nb\">puts</span> <span class=\"s2\">\"debug_pod :pod_name = </span><span class=\"si\">#{</span><span class=\"n\">pod_name</span><span class=\"si\">}</span><span class=\"s2\"> and this_pod_name is </span><span class=\"si\">#{</span><span class=\"n\">this_pod_name</span><span class=\"si\">}</span><span class=\"s2\">\"</span>\n  <span class=\"k\">if</span> <span class=\"n\">this_pod_name</span> <span class=\"o\">==</span> <span class=\"n\">pod_name</span>\n    <span class=\"nb\">puts</span> <span class=\"s2\">\"</span><span class=\"si\">#{</span><span class=\"n\">this_pod_name</span><span class=\"si\">}</span><span class=\"s2\"> is equal args </span><span class=\"si\">#{</span><span class=\"n\">pod_name</span><span class=\"si\">}</span><span class=\"s2\"> do not pod\"</span>\n  <span class=\"k\">elsif</span>\n    <span class=\"c1\">#为了方便管理，这里的所有私有库建议放在同一个目录下</span>\n    <span class=\"n\">pod</span> <span class=\"s2\">\"</span><span class=\"si\">#{</span><span class=\"n\">pod_name</span><span class=\"si\">}</span><span class=\"s2\">\"</span><span class=\"p\">,</span> <span class=\"ss\">:path</span> <span class=\"o\">=&gt;</span> <span class=\"s2\">\"../../</span><span class=\"si\">#{</span><span class=\"n\">pod_name</span><span class=\"si\">}</span><span class=\"s2\">/\"</span>\n  <span class=\"k\">end</span>\n<span class=\"k\">end</span>\n\n  <span class=\"c1\">#为了避免重复定义 这里统一按下面方式进行处理吧，由于下文已经匹配了当前pod，这里不用注释掉</span>\n  <span class=\"n\">pod</span> <span class=\"s1\">'${POD_NAME}'</span><span class=\"p\">,</span> <span class=\"ss\">:path</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'../'</span>\n    \n  <span class=\"c1\">#这里定义需要被引入的所有私有库的库名</span>\n  <span class=\"n\">private_pods</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">\"基础组件1\"</span><span class=\"p\">,</span> <span class=\"s2\">\"基础组件2\"</span><span class=\"p\">,</span> <span class=\"s2\">\"基础组件3\"</span><span class=\"p\">,</span> <span class=\"s2\">\"能力组件1\"</span><span class=\"p\">,</span>  <span class=\"s2\">\"能力组件2\"</span><span class=\"p\">,</span>  <span class=\"s2\">\"能力组件3\"</span><span class=\"p\">,</span>  <span class=\"s2\">\"业务组件1\"</span><span class=\"p\">,</span>  <span class=\"s2\">\"业务组件2\"</span><span class=\"p\">]</span>\n\n  <span class=\"c1\">#这里将所有私有库名与路径匹配起来进行pod</span>\n  <span class=\"n\">private_pods</span><span class=\"p\">.</span><span class=\"nf\">each</span> <span class=\"k\">do</span> <span class=\"o\">|</span><span class=\"n\">private_pod</span><span class=\"o\">|</span>\n    <span class=\"n\">debug_pod</span><span class=\"p\">(</span><span class=\"n\">private_pod</span><span class=\"p\">)</span>\n  <span class=\"k\">end</span>\n\n\n  <span class=\"c1\">#如果上述方法用不来，或者不好用也可以改用下面比较传统的方式进行：</span>\n  <span class=\"c1\">#pod '基础组件1', :path =&gt; '../../基础组件1/'</span>\n  <span class=\"c1\">#pod '基础组件2', :path =&gt; '../../基础组件2/'</span>\n  <span class=\"c1\">#pod '基础组件3', :path =&gt; '../../基础组件3/'</span>\n\n  <span class=\"c1\">#pod '能力组件1', :path =&gt; '../../能力组件1/'</span>\n  <span class=\"c1\">#pod '能力组件2', :path =&gt; '../../能力组件2/'</span>\n  <span class=\"c1\">#pod '能力组件3', :path =&gt; '../../能力组件3/'</span>\n\n  <span class=\"c1\">#pod '业务组件1', :path =&gt; '../../业务组件1/'</span>\n  <span class=\"c1\">#pod '业务组件2', :path =&gt; '../../业务组件2/'</span>\n\n  <span class=\"n\">target</span> <span class=\"s1\">'${POD_NAME}_Tests'</span> <span class=\"k\">do</span>\n    <span class=\"n\">inherit!</span> <span class=\"ss\">:search_paths</span>\n    <span class=\"err\">$</span><span class=\"p\">{</span><span class=\"no\">INCLUDED_PODS</span><span class=\"p\">}</span>\n  <span class=\"k\">end</span>\n<span class=\"k\">end</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>值得一提的是，需要把所有Dev Pod放在同一个目录下，避免路径管理麻烦</p>\n\n<p>至此，生产的Pod组件库模板可以满足组件化进程需求了。</p>\n\n<p>##</p>\n","name":"2023-07-26-4-iOS组件化模板.md","previous":{"id":"/2023/07/20/iOS组件化实践二-实践过程碰到的问题","tags":[],"relative_path":"_posts/2023-07-20-iOS组件化实践二-实践过程碰到的问题.md","collection":"posts","content":"<h2 id=\"1-需求不断插入\">1 需求不断插入</h2>\n\n<h3 id=\"11问题描述\">1.1问题描述：</h3>\n\n<p>​\t一般而言，面临需要做组件化的团队，大概率是一个持续迭代的需求的过程，这过程不可避免会遇到业务需求的插入，如何保证即完成业务需求，又实现组件化进程，这是一个需要综合考量的课题。</p>\n\n<h3 id=\"12-问题解决\">1.2 问题解决</h3>\n\n<p>​\t由于需求和迭代与组件化是并行的，因此需要对组件化定义里程碑，每个里程碑对应响应的迭代班车，简而言之，例如：每个月迭代一个版本，组件化可以以月为单位，1～x个月为一个里程碑，每个里程碑跟上一个迭代版本，这样保证班车能带上迭代的业务需求，也能带上组件化里程碑的变更，同时记得同步项目其他团队、例如产品团队、Leader（如有必要）、测试团队（一定要）</p>\n\n<h2 id=\"2-多人协作问题\">2 多人协作问题</h2>\n\n<h3 id=\"21-背景\">2.1 背景</h3>\n\n<p>​\t一般而言，面临需要做组件化的团队，大概率不会只有1个开发人员（因为一个只有1个开发人员的项目和团队应该规模也不大，对组件化的需求不高），而会是一个至少中小型，那就可能面临需求与组件化的多人同步进行，需要经历阶段性代码合并，由于组件化是对框架改动较大的工程（需要不止移动类到Pod仓库，还有改名，增删类等），这就存在分支合并的频繁冲突</p>\n\n<h3 id=\"22-解决\">2.2 解决</h3>\n\n<h4 id=\"221分支管理\">2.2.1分支管理</h4>\n\n<h5 id=\"2211-主工程\">2.2.1.1 主工程</h5>\n\n<p>​\t常规需求迭代遵循gitflow分支管理，与之并行一个组件化分支，假设为 feature/modulization，如果feature有触发自动merge操作，为了不频繁解决冲突，可以考虑自行定义一个分支名（personal/xxx/modulization），在每次发布版本，合并完dev与master，并打完Tag之后，从release分支合并代码到modulization</p>\n\n<p>​\t由于组件化分支的主工程会频繁涉及到类的增删、类名修改，会引起project.pbxproj 文件大面积的变动，因此合并代码时，可能存在project.pbxproj 文件大量冲突</p>\n\n<p>​\t这里提供一个解决思路：</p>\n\n<p>​\t<strong>如果距离上次merge主工程框架变动较大时，可以考虑以modulization分支的project.pbxproj的版本来解决冲突，根据编译报错/或者事先记录下新增文件再进行逐一修复</strong></p>\n\n<h5 id=\"2212-组件库\">2.2.1.2 组件库</h5>\n\n<p>​\t由于modulization工程依赖的组件需要频繁的修改，因此频繁的打tag显得也不是特别必要，而且组件库的tag还必须经过严格管理，以保证常规进展的需求不受影响。</p>\n\n<p>​\t这里提供一个解决思路：</p>\n\n<p>​\t针对所有进展中的组件库新建分支：moduleModulization，在Podfile依赖时指定:</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n</pre></td><td class=\"rouge-code\"><pre>  <span class=\"n\">pod</span> <span class=\"s1\">'PSCDebugModule'</span> <span class=\"p\">,</span> <span class=\"ss\">:git</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'ssh://PSC-devops.psc.com:30022/PSC/PSC-ios/Pods/Private/PSCDebugModule.git'</span> <span class=\"p\">,</span> <span class=\"ss\">:configurations</span> <span class=\"o\">=&gt;</span> <span class=\"p\">[</span><span class=\"s1\">'Debug'</span><span class=\"p\">,</span> <span class=\"s1\">'DailyBuild'</span><span class=\"p\">,</span> <span class=\"s1\">'TFInner'</span><span class=\"p\">],</span> <span class=\"ss\">:branch</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'master'</span>\n  <span class=\"n\">pod</span> <span class=\"s1\">'PSCCommonUI'</span>    <span class=\"p\">,</span> <span class=\"ss\">:git</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'ssh://PSC-devops.psc.com:30022/PSC/PSC-ios/Pods/Private/PSCCommonUI.git'</span><span class=\"p\">,</span> <span class=\"ss\">:branch</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'master'</span>\n  <span class=\"n\">pod</span> <span class=\"s1\">'PSCFrameWork'</span> <span class=\"p\">,</span> <span class=\"ss\">:git</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'ssh://PSC-devops.psc.com:30022/PSC/PSC-ios/Pods/Private/PSCFrameWork.git'</span><span class=\"p\">,</span> <span class=\"ss\">:branch</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'master'</span>\n  <span class=\"n\">pod</span> <span class=\"s1\">'PSCLogModule'</span>   <span class=\"p\">,</span> <span class=\"ss\">:git</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'ssh://PSC-devops.psc.com:30022/PSC/PSC-ios/Pods/Private/PSCLogModule.git'</span><span class=\"p\">,</span> <span class=\"ss\">:branch</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'master'</span>\n  <span class=\"n\">pod</span> <span class=\"s1\">'PSCAbility'</span>     <span class=\"p\">,</span> <span class=\"ss\">:git</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'ssh://PSC-devops.psc.com:30022/PSC/PSC-ios/Pods/Private/PSCAbility.git'</span><span class=\"p\">,</span> <span class=\"ss\">:branch</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'master'</span>\n  <span class=\"n\">pod</span> <span class=\"s1\">'PSCResource'</span>     <span class=\"p\">,</span> <span class=\"ss\">:git</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'ssh://PSC-devops.psc.com:30022/PSC/PSC-ios/Pods/Private/PSCResource.git'</span><span class=\"p\">,</span> <span class=\"ss\">:branch</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'master'</span>\n  <span class=\"n\">pod</span> <span class=\"s1\">'PSCLogModule'</span>   <span class=\"p\">,</span> <span class=\"ss\">:git</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'ssh://PSC-devops.psc.com:30022/PSC/PSC-ios/Pods/Private/PSCLogModule.git'</span><span class=\"p\">,</span> <span class=\"ss\">:branch</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'master'</span>\n  <span class=\"n\">pod</span> <span class=\"s1\">'PSCBaseModule'</span>   <span class=\"p\">,</span> <span class=\"ss\">:git</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'ssh://PSC-devops.psc.com:30022/PSC/PSC-ios/Pods/Private/PSCBaseModule.git'</span><span class=\"p\">,</span> <span class=\"ss\">:branch</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'master'</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>同时在Podfile_local（Podfile_local可以参见 <a href=\"https://github.com/MeetYouDevs/cocoapods-imy-bin\">imy-bin</a>）配置</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n</pre></td><td class=\"rouge-code\"><pre><span class=\"n\">plugin</span> <span class=\"s1\">'cocoapods-imy-bin'</span>\n\n<span class=\"n\">target</span> <span class=\"s1\">'PSCEvogoiOS'</span> <span class=\"k\">do</span>\n    <span class=\"n\">pod</span> <span class=\"s1\">'PSCAbility'</span><span class=\"p\">,</span> <span class=\"ss\">:path</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'../../../../../CocoaPods/Private/PSCAbility'</span>\n    <span class=\"n\">pod</span> <span class=\"s1\">'PSCDebugModule'</span><span class=\"p\">,</span> <span class=\"ss\">:path</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'../../../../../CocoaPods/Private/PSCDebugModule'</span>\n    <span class=\"n\">pod</span> <span class=\"s1\">'PSCBaseModule'</span><span class=\"p\">,</span> <span class=\"ss\">:path</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'../../../../../CocoaPods/Private/PSCBaseModule'</span>\n    <span class=\"n\">pod</span> <span class=\"s1\">'PSCCommonUI'</span><span class=\"p\">,</span> <span class=\"ss\">:path</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'../../../../../CocoaPods/Private/PSCCommonUI'</span>\n    <span class=\"n\">pod</span> <span class=\"s1\">'PSCFrameWork'</span><span class=\"p\">,</span> <span class=\"ss\">:path</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'../../../../../CocoaPods/Private/PSCFrameWork'</span>\n    <span class=\"n\">pod</span> <span class=\"s1\">'PSCLogModule'</span><span class=\"p\">,</span> <span class=\"ss\">:path</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'../../../../../CocoaPods/Private/PSCLogModule'</span>\n    <span class=\"n\">pod</span> <span class=\"s1\">'PSCResource'</span><span class=\"p\">,</span> <span class=\"ss\">:path</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'../../../../../CocoaPods/Private/PSCResource'</span>\n    <span class=\"n\">pod</span> <span class=\"s1\">'PSCHybridModule'</span><span class=\"p\">,</span> <span class=\"ss\">:path</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'../../../../../CocoaPods/Private/PSCHybridModule'</span>\n    <span class=\"n\">pod</span> <span class=\"s1\">'PSCThirdPartyModule'</span><span class=\"p\">,</span> <span class=\"ss\">:path</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'../../../../../CocoaPods/Private/PSCThirdPartyModule'</span>\n<span class=\"k\">end</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>在本地构建时，可以使用：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>bdpod bin <span class=\"nb\">install</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>流水线构建时，可恢复分支依赖如下：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>bdpod <span class=\"nb\">install</span> <span class=\"nt\">--repo-update</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h4 id=\"222-分支合并\">2.2.2 分支合并</h4>\n\n<p>​\t分支合并时需要解决的冲突很多，一般存在下面几种情况：</p>\n\n<h5 id=\"2221-代码冲突\">2.2.2.1 代码冲突</h5>\n\n<p>​\t常规的冲突，以常规的方式解决，这边不多赘述。一般可以采用sourcetree，进行可视化操作。</p>\n\n<h5 id=\"2222-projectpbxproj冲突\">2.2.2.2 project.pbxproj冲突</h5>\n\n<p>​\t冲突不多时，也可以采用常规方式解决，如果冲突较多，解决的成本太高，可以参考上述：2.2.1.1 建议的方式进行</p>\n\n<h5 id=\"2223-文件冲突\">2.2.2.3 文件冲突</h5>\n\n<p>​\t文件冲突一般体现在：某个文件从主工程被迁移到组件库中or类名发生了变化，而其他分支上的修改者改动了这个文件，就会出现文件冲突，这个时候就需要对比组件库中或者新命名的类与冲突文件的变化。</p>\n\n<p>​\t这里提供一个解决思路：使用filemerge(Xcode自带)进行比较</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>/Applications/Xcode.app/Contents/Applications/FileMerge.app\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n","name":"2023-07-20-iOS组件化实践二-实践过程碰到的问题.md","previous":{"id":"/2023/07/14/iOS组件化实践一_序言","tags":[],"relative_path":"_posts/2023-07-14-iOS组件化实践一_序言.md","collection":"posts","name":"2023-07-14-iOS组件化实践一_序言.md","url":"/2023/07/14/iOS%E7%BB%84%E4%BB%B6%E5%8C%96%E5%AE%9E%E8%B7%B5%E4%B8%80_%E5%BA%8F%E8%A8%80/","title":"iOS组件化实践一：序言","date":"2023-07-14 00:00:00 +0800","categories":[],"path":"_posts/2023-07-14-iOS组件化实践一_序言.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/home-bg-geek.jpg","slug":"iOS组件化实践一_序言","ext":".md"},"output":"<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"google-site-verification\" content=\"xBT4GhYoi5qRD5tr338pgPM5OWHHIDR6mNg1a3euekI\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, viewport-fit=cover\">\n    <meta name=\"description\" content=\"与你一起发现更大的世界。\">\n    <meta name=\"keywords\"  content=\"PaysonChen,iOS,流媒体\">\n    <meta name=\"theme-color\" content=\"#000000\">\n    \n    <!-- Open Graph -->\n    <meta property=\"og:title\" content=\"iOS组件化实践二：实践过程碰到的问题 - PaysonChen的博客 | PaysonChen Blog\">\n    \n    <meta property=\"og:type\" content=\"article\">\n    <meta property=\"og:description\" content=\"1 需求不断插入\n\">\n    \n    \n    <meta property=\"article:published_time\" content=\"2023-07-20T00:00:00Z\">\n    \n    \n    <meta property=\"article:author\" content=\"PaysonChen\">\n    \n    \n    \n    <meta property=\"og:image\" content=\"http://localhost:4000\">\n    <meta property=\"og:url\" content=\"http://localhost:4000/2023/07/20/iOS%E7%BB%84%E4%BB%B6%E5%8C%96%E5%AE%9E%E8%B7%B5%E4%BA%8C-%E5%AE%9E%E8%B7%B5%E8%BF%87%E7%A8%8B%E7%A2%B0%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/\">\n    <meta property=\"og:site_name\" content=\"PaysonChen的博客 | PaysonChen Blog\">\n    \n    <title>iOS组件化实践二：实践过程碰到的问题 - PaysonChen的博客 | PaysonChen Blog</title>\n\n    <!-- Web App Manifest -->\n    <link rel=\"manifest\" href=\"/pwa/manifest.json\">\n\n    <!-- Favicon -->\n    <link rel=\"shortcut icon\" href=\"/img/favicon.ico\">\n    \n    <!-- Canonical URL -->\n    <link rel=\"canonical\" href=\"http://localhost:4000/2023/07/20/iOS%E7%BB%84%E4%BB%B6%E5%8C%96%E5%AE%9E%E8%B7%B5%E4%BA%8C-%E5%AE%9E%E8%B7%B5%E8%BF%87%E7%A8%8B%E7%A2%B0%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/\">\n\n    <!-- Bootstrap Core CSS -->\n    <link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\">\n\n    <!-- Custom CSS -->\n    <link rel=\"stylesheet\" href=\"/css/hux-blog.min.css\">\n\n    <!-- Custom Fonts -->\n    <!-- <link href=\"http://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\"> -->\n    <!-- Hux change font-awesome CDN to qiniu -->\n    <link href=\"//cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\">\n\n\n    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->\n    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->\n    <!--[if lt IE 9]>\n        <script src=\"https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js\"></script>\n        <script src=\"https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js\"></script>\n    <![endif]-->\n\n    <!-- ga & ba script hoook -->\n    <script></script>\n</head>\n\n\n<!-- hack iOS CSS :active style -->\n<body ontouchstart=\"\">\n\n    <!-- Navigation -->\n\n    <nav class=\"navbar navbar-default navbar-custom navbar-fixed-top\">\n        \n        <div class=\"container-fluid\">\n            <!-- Brand and toggle get grouped for better mobile display -->\n            <div class=\"navbar-header page-scroll\">\n                <button type=\"button\" class=\"navbar-toggle\">\n                    <span class=\"sr-only\">Toggle navigation</span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                </button>\n                <a class=\"navbar-brand\" href=\"/\">PaysonChen Blog</a>\n            </div>\n\n            <!-- Collect the nav links, forms, and other content for toggling -->\n            <div id=\"huxblog_navbar\">\n                <div class=\"navbar-collapse\">\n                    <ul class=\"nav navbar-nav navbar-right\">\n                        <li>\n                            <a href=\"/\">Home</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        <li>\n                            <a href=\"/about/\">About</a>\n                        </li>\n                        \n                        \n                        \n                        <li>\n                            <a href=\"/archive/\">Archive</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        <li class=\"search-icon\">\n                            <a href=\"javascript:void(0)\">\n                                <i class=\"fa fa-search\"></i>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n            <!-- /.navbar-collapse -->\n        </div>\n        <!-- /.container -->\n    </nav>\n\n    <script>\n        // Drop Bootstarp low-performance Navbar\n        // Use customize navbar with high-quality material design animation\n        // in high-perf jank-free CSS3 implementation\n        var $body = document.body;\n        var $toggle = document.querySelector('.navbar-toggle');\n        var $navbar = document.querySelector('#huxblog_navbar');\n        var $collapse = document.querySelector('.navbar-collapse');\n\n        var __HuxNav__ = {\n            close: function () {\n                $navbar.className = \" \";\n                // wait until animation end.\n                setTimeout(function () {\n                    // prevent frequently toggle\n                    if ($navbar.className.indexOf('in') < 0) {\n                        $collapse.style.height = \"0px\"\n                    }\n                }, 400)\n            },\n            open: function () {\n                $collapse.style.height = \"auto\"\n                $navbar.className += \" in\";\n            }\n        }\n\n        // Bind Event\n        $toggle.addEventListener('click', function (e) {\n            if ($navbar.className.indexOf('in') > 0) {\n                __HuxNav__.close()\n            } else {\n                __HuxNav__.open()\n            }\n        })\n\n        /**\n         * Since Fastclick is used to delegate 'touchstart' globally\n         * to hack 300ms delay in iOS by performing a fake 'click',\n         * Using 'e.stopPropagation' to stop 'touchstart' event from \n         * $toggle/$collapse will break global delegation.\n         * \n         * Instead, we use a 'e.target' filter to prevent handler\n         * added to document close HuxNav.  \n         *\n         * Also, we use 'click' instead of 'touchstart' as compromise\n         */\n        document.addEventListener('click', function (e) {\n            if (e.target == $toggle) return;\n            if (e.target.className == 'icon-bar') return;\n            __HuxNav__.close();\n        })\n    </script>\n    <!-- Search -->\n<div class=\"search-page\">\n  <div class=\"search-icon-close-container\">\n    <span class=\"search-icon-close\">\n      <i class=\"fa fa-chevron-down\"></i>\n    </span>\n  </div>\n  <div class=\"search-main container\">\n    <div class=\"row\">\n      <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n        <form></form>\n        <input type=\"text\" id=\"search-input\" placeholder=\"$ grep...\">\n        </form>\n        <div id=\"search-results\" class=\"mini-post-list\"></div>\n      </div>\n    </div>\n  </div>\n</div>\n\n    <!-- Image to hack wechat -->\n<!-- <img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\"> -->\n<!-- <img src=\"/img/home-bg-geek.jpg\" width=\"0\" height=\"0\"> -->\n\n<!-- Post Header -->\n\n\n\n<style type=\"text/css\">\n    header.intro-header{\n        position: relative;\n        background-image: url('/img/home-bg-geek.jpg');\n        background: ;\n    }\n\n    \n</style>\n\n<header class=\"intro-header\" >\n\n    <div class=\"header-mask\"></div>\n    \n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <div class=\"post-heading\">\n                    <div class=\"tags\">\n                        \n                    </div>\n                    <h1>iOS组件化实践二：实践过程碰到的问题</h1>\n                    \n                    <h2 class=\"subheading\"></h2>\n                    <span class=\"meta\">Posted by PaysonChen on July 20, 2023</span>\n                </div>\n            </div>\n        </div>\n    </div>\n</header>\n\n\n\n\n\n\n<!-- Post Content -->\n<article>\n    <div class=\"container\">\n        <div class=\"row\">\n\n    <!-- Post Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                post-container\">\n\n                <!-- Multi-Lingual -->\n                \n\n\t\t\t\t<h2 id=\"1-需求不断插入\">1 需求不断插入</h2>\n\n<h3 id=\"11问题描述\">1.1问题描述：</h3>\n\n<p>​\t一般而言，面临需要做组件化的团队，大概率是一个持续迭代的需求的过程，这过程不可避免会遇到业务需求的插入，如何保证即完成业务需求，又实现组件化进程，这是一个需要综合考量的课题。</p>\n\n<h3 id=\"12-问题解决\">1.2 问题解决</h3>\n\n<p>​\t由于需求和迭代与组件化是并行的，因此需要对组件化定义里程碑，每个里程碑对应响应的迭代班车，简而言之，例如：每个月迭代一个版本，组件化可以以月为单位，1～x个月为一个里程碑，每个里程碑跟上一个迭代版本，这样保证班车能带上迭代的业务需求，也能带上组件化里程碑的变更，同时记得同步项目其他团队、例如产品团队、Leader（如有必要）、测试团队（一定要）</p>\n\n<h2 id=\"2-多人协作问题\">2 多人协作问题</h2>\n\n<h3 id=\"21-背景\">2.1 背景</h3>\n\n<p>​\t一般而言，面临需要做组件化的团队，大概率不会只有1个开发人员（因为一个只有1个开发人员的项目和团队应该规模也不大，对组件化的需求不高），而会是一个至少中小型，那就可能面临需求与组件化的多人同步进行，需要经历阶段性代码合并，由于组件化是对框架改动较大的工程（需要不止移动类到Pod仓库，还有改名，增删类等），这就存在分支合并的频繁冲突</p>\n\n<h3 id=\"22-解决\">2.2 解决</h3>\n\n<h4 id=\"221分支管理\">2.2.1分支管理</h4>\n\n<h5 id=\"2211-主工程\">2.2.1.1 主工程</h5>\n\n<p>​\t常规需求迭代遵循gitflow分支管理，与之并行一个组件化分支，假设为 feature/modulization，如果feature有触发自动merge操作，为了不频繁解决冲突，可以考虑自行定义一个分支名（personal/xxx/modulization），在每次发布版本，合并完dev与master，并打完Tag之后，从release分支合并代码到modulization</p>\n\n<p>​\t由于组件化分支的主工程会频繁涉及到类的增删、类名修改，会引起project.pbxproj 文件大面积的变动，因此合并代码时，可能存在project.pbxproj 文件大量冲突</p>\n\n<p>​\t这里提供一个解决思路：</p>\n\n<p>​\t<strong>如果距离上次merge主工程框架变动较大时，可以考虑以modulization分支的project.pbxproj的版本来解决冲突，根据编译报错/或者事先记录下新增文件再进行逐一修复</strong></p>\n\n<h5 id=\"2212-组件库\">2.2.1.2 组件库</h5>\n\n<p>​\t由于modulization工程依赖的组件需要频繁的修改，因此频繁的打tag显得也不是特别必要，而且组件库的tag还必须经过严格管理，以保证常规进展的需求不受影响。</p>\n\n<p>​\t这里提供一个解决思路：</p>\n\n<p>​\t针对所有进展中的组件库新建分支：moduleModulization，在Podfile依赖时指定:</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n</pre></td><td class=\"rouge-code\"><pre>  <span class=\"n\">pod</span> <span class=\"s1\">'PSCDebugModule'</span> <span class=\"p\">,</span> <span class=\"ss\">:git</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'ssh://PSC-devops.psc.com:30022/PSC/PSC-ios/Pods/Private/PSCDebugModule.git'</span> <span class=\"p\">,</span> <span class=\"ss\">:configurations</span> <span class=\"o\">=&gt;</span> <span class=\"p\">[</span><span class=\"s1\">'Debug'</span><span class=\"p\">,</span> <span class=\"s1\">'DailyBuild'</span><span class=\"p\">,</span> <span class=\"s1\">'TFInner'</span><span class=\"p\">],</span> <span class=\"ss\">:branch</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'master'</span>\n  <span class=\"n\">pod</span> <span class=\"s1\">'PSCCommonUI'</span>    <span class=\"p\">,</span> <span class=\"ss\">:git</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'ssh://PSC-devops.psc.com:30022/PSC/PSC-ios/Pods/Private/PSCCommonUI.git'</span><span class=\"p\">,</span> <span class=\"ss\">:branch</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'master'</span>\n  <span class=\"n\">pod</span> <span class=\"s1\">'PSCFrameWork'</span> <span class=\"p\">,</span> <span class=\"ss\">:git</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'ssh://PSC-devops.psc.com:30022/PSC/PSC-ios/Pods/Private/PSCFrameWork.git'</span><span class=\"p\">,</span> <span class=\"ss\">:branch</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'master'</span>\n  <span class=\"n\">pod</span> <span class=\"s1\">'PSCLogModule'</span>   <span class=\"p\">,</span> <span class=\"ss\">:git</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'ssh://PSC-devops.psc.com:30022/PSC/PSC-ios/Pods/Private/PSCLogModule.git'</span><span class=\"p\">,</span> <span class=\"ss\">:branch</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'master'</span>\n  <span class=\"n\">pod</span> <span class=\"s1\">'PSCAbility'</span>     <span class=\"p\">,</span> <span class=\"ss\">:git</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'ssh://PSC-devops.psc.com:30022/PSC/PSC-ios/Pods/Private/PSCAbility.git'</span><span class=\"p\">,</span> <span class=\"ss\">:branch</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'master'</span>\n  <span class=\"n\">pod</span> <span class=\"s1\">'PSCResource'</span>     <span class=\"p\">,</span> <span class=\"ss\">:git</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'ssh://PSC-devops.psc.com:30022/PSC/PSC-ios/Pods/Private/PSCResource.git'</span><span class=\"p\">,</span> <span class=\"ss\">:branch</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'master'</span>\n  <span class=\"n\">pod</span> <span class=\"s1\">'PSCLogModule'</span>   <span class=\"p\">,</span> <span class=\"ss\">:git</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'ssh://PSC-devops.psc.com:30022/PSC/PSC-ios/Pods/Private/PSCLogModule.git'</span><span class=\"p\">,</span> <span class=\"ss\">:branch</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'master'</span>\n  <span class=\"n\">pod</span> <span class=\"s1\">'PSCBaseModule'</span>   <span class=\"p\">,</span> <span class=\"ss\">:git</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'ssh://PSC-devops.psc.com:30022/PSC/PSC-ios/Pods/Private/PSCBaseModule.git'</span><span class=\"p\">,</span> <span class=\"ss\">:branch</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'master'</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>同时在Podfile_local（Podfile_local可以参见 <a href=\"https://github.com/MeetYouDevs/cocoapods-imy-bin\">imy-bin</a>）配置</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n</pre></td><td class=\"rouge-code\"><pre><span class=\"n\">plugin</span> <span class=\"s1\">'cocoapods-imy-bin'</span>\n\n<span class=\"n\">target</span> <span class=\"s1\">'PSCEvogoiOS'</span> <span class=\"k\">do</span>\n    <span class=\"n\">pod</span> <span class=\"s1\">'PSCAbility'</span><span class=\"p\">,</span> <span class=\"ss\">:path</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'../../../../../CocoaPods/Private/PSCAbility'</span>\n    <span class=\"n\">pod</span> <span class=\"s1\">'PSCDebugModule'</span><span class=\"p\">,</span> <span class=\"ss\">:path</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'../../../../../CocoaPods/Private/PSCDebugModule'</span>\n    <span class=\"n\">pod</span> <span class=\"s1\">'PSCBaseModule'</span><span class=\"p\">,</span> <span class=\"ss\">:path</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'../../../../../CocoaPods/Private/PSCBaseModule'</span>\n    <span class=\"n\">pod</span> <span class=\"s1\">'PSCCommonUI'</span><span class=\"p\">,</span> <span class=\"ss\">:path</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'../../../../../CocoaPods/Private/PSCCommonUI'</span>\n    <span class=\"n\">pod</span> <span class=\"s1\">'PSCFrameWork'</span><span class=\"p\">,</span> <span class=\"ss\">:path</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'../../../../../CocoaPods/Private/PSCFrameWork'</span>\n    <span class=\"n\">pod</span> <span class=\"s1\">'PSCLogModule'</span><span class=\"p\">,</span> <span class=\"ss\">:path</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'../../../../../CocoaPods/Private/PSCLogModule'</span>\n    <span class=\"n\">pod</span> <span class=\"s1\">'PSCResource'</span><span class=\"p\">,</span> <span class=\"ss\">:path</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'../../../../../CocoaPods/Private/PSCResource'</span>\n    <span class=\"n\">pod</span> <span class=\"s1\">'PSCHybridModule'</span><span class=\"p\">,</span> <span class=\"ss\">:path</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'../../../../../CocoaPods/Private/PSCHybridModule'</span>\n    <span class=\"n\">pod</span> <span class=\"s1\">'PSCThirdPartyModule'</span><span class=\"p\">,</span> <span class=\"ss\">:path</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'../../../../../CocoaPods/Private/PSCThirdPartyModule'</span>\n<span class=\"k\">end</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>在本地构建时，可以使用：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>bdpod bin <span class=\"nb\">install</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>流水线构建时，可恢复分支依赖如下：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>bdpod <span class=\"nb\">install</span> <span class=\"nt\">--repo-update</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h4 id=\"222-分支合并\">2.2.2 分支合并</h4>\n\n<p>​\t分支合并时需要解决的冲突很多，一般存在下面几种情况：</p>\n\n<h5 id=\"2221-代码冲突\">2.2.2.1 代码冲突</h5>\n\n<p>​\t常规的冲突，以常规的方式解决，这边不多赘述。一般可以采用sourcetree，进行可视化操作。</p>\n\n<h5 id=\"2222-projectpbxproj冲突\">2.2.2.2 project.pbxproj冲突</h5>\n\n<p>​\t冲突不多时，也可以采用常规方式解决，如果冲突较多，解决的成本太高，可以参考上述：2.2.1.1 建议的方式进行</p>\n\n<h5 id=\"2223-文件冲突\">2.2.2.3 文件冲突</h5>\n\n<p>​\t文件冲突一般体现在：某个文件从主工程被迁移到组件库中or类名发生了变化，而其他分支上的修改者改动了这个文件，就会出现文件冲突，这个时候就需要对比组件库中或者新命名的类与冲突文件的变化。</p>\n\n<p>​\t这里提供一个解决思路：使用filemerge(Xcode自带)进行比较</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>/Applications/Xcode.app/Contents/Applications/FileMerge.app\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n\n\n                <hr style=\"visibility: hidden;\">\n                <ul class=\"pager\">\n                    \n                    <li class=\"previous\">\n                        <a href=\"/2023/07/14/iOS%E7%BB%84%E4%BB%B6%E5%8C%96%E5%AE%9E%E8%B7%B5%E4%B8%80_%E5%BA%8F%E8%A8%80/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"iOS组件化实践一：序言\">\n                        Previous<br>\n                        <span>iOS组件化实践一：序言</span>\n                        </a>\n                    </li>\n                    \n                    \n                    <li class=\"next\">\n                        <a href=\"/2023/07/26/4-iOS%E7%BB%84%E4%BB%B6%E5%8C%96%E6%A8%A1%E6%9D%BF/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"iOS组件化实践之：新建一个Pod组件库\">\n                        Next<br>\n                        <span>iOS组件化实践之：新建一个Pod组件库</span>\n                        </a>\n                    </li>\n                    \n                </ul>\n                <hr style=\"visibility: hidden;\">\n\n                \n                <!-- disqus 评论框 start -->\n                <div class=\"comment\">\n                    <div id=\"disqus_thread\" class=\"disqus-thread\"></div>\n                </div>\n                <!-- disqus 评论框 end -->\n                \n\n                \n            </div>  \n\n    <!-- Side Catalog Container -->\n        \n            <div class=\"\n                col-lg-2 col-lg-offset-0\n                visible-lg-block\n                sidebar-container\n                catalog-container\">\n                <div class=\"side-catalog\">\n                    <hr class=\"hidden-sm hidden-xs\">\n                    <h5>\n                        <a class=\"catalog-toggle\" href=\"#\">CATALOG</a>\n                    </h5>\n                    <ul class=\"catalog-body\"></ul>\n                </div>\n            </div>\n        \n\n    <!-- Sidebar Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                sidebar-container\">\n\n                <!-- Featured Tags -->\n                \n\n\n<section>\n    \n        <hr class=\"hidden-sm hidden-xs\">\n    \n    <h5><a href=\"/archive/\">FEATURED TAGS</a></h5>\n    <div class=\"tags\">\n        \n        \n        \n        \n        \n    </div>\n</section>\n\n\n                <!-- Friends Blog -->\n                \n            </div>\n        </div>\n    </div>\n</article>\n\n<!-- add support for mathjax by voleking-->\n\n\n\n\n\n\n<!-- disqus 公共JS代码 start (一个网页只需插入一次) -->\n<script type=\"text/javascript\">\n    /* * * CONFIGURATION VARIABLES * * */\n    var disqus_shortname = \"Cyp\";\n    var disqus_identifier = \"/2023/07/20/iOS组件化实践二-实践过程碰到的问题\";\n    var disqus_url = \"http://localhost:4000/2023/07/20/iOS%E7%BB%84%E4%BB%B6%E5%8C%96%E5%AE%9E%E8%B7%B5%E4%BA%8C-%E5%AE%9E%E8%B7%B5%E8%BF%87%E7%A8%8B%E7%A2%B0%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/\";\n\n    (function() {\n        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;\n        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';\n        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);\n    })();\n</script>\n<!-- disqus 公共JS代码 end -->\n\n\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n      var d = document, t = 'script',\n          o = d.createElement(t),\n          s = d.getElementsByTagName(t)[0];\n      o.src = u;\n      if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n      s.parentNode.insertBefore(o, s);\n    }\n</script>\n<!-- anchor-js, Doc:http://bryanbraun.github.io/anchorjs/ -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/anchor-js/1.1.1/anchor.min.js\",function(){\n        anchors.options = {\n          visible: 'hover',\n          placement: 'right',\n          // icon: '#'\n        };\n        anchors.add().remove('.intro-header h1').remove('.subheading').remove('.sidebar-container h5');\n    })\n</script>\n<style>\n    /* place left on bigger screen */\n    @media all and (min-width: 800px) {\n        .anchorjs-link{\n            position: absolute;\n            left: -0.75em;\n            font-size: 1.1em;\n            margin-top : -0.1em;\n        }\n    }\n</style>\n\n\n\n    <!-- Footer -->\n<footer>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <!-- SNS Link -->\n                \n\n\n<ul class=\"list-inline text-center\">\n\n\n  \n  \n  \n  \n  \n  \n  \n</ul>\n\n                <p class=\"copyright text-muted\">\n                    Copyright &copy; PaysonChen Blog 2024\n                    <br>\n                    <!-- Powered by <a href=\"http://huangxuan.me\">Hux Blog</a> | -->\n                 <!--    <iframe style=\"margin-left: 2px; margin-bottom:-5px;\" frameborder=\"0\" scrolling=\"0\" width=\"100px\"\n                        height=\"20px\"\n                        src=\"https://ghbtns.com/github-btn.html?user=huxpro&repo=huxpro.github.io&type=star&count=true\">\n                    </iframe> -->\n                </p>\n            </div>\n        </div>\n    </div>\n</footer>\n\n<!-- jQuery -->\n<script src=\"/js/jquery.min.js \"></script>\n\n<!-- Bootstrap Core JavaScript -->\n<!-- Currently, only navbar scroll-down effect at desktop still depends on this -->\n<script src=\"/js/bootstrap.min.js \"></script>\n\n<!-- Custom Theme JavaScript -->\n<script src=\"/js/hux-blog.min.js \"></script>\n\n<!-- Simple Jekyll Search -->\n<script src=\"/js/simple-jekyll-search.min.js\"></script>\n\n<!-- Service Worker -->\n\n<script src=\"/js/snackbar.js \"></script>\n<script src=\"/js/sw-registration.js \"></script>\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n        var d = document, t = 'script',\n            o = d.createElement(t),\n            s = d.getElementsByTagName(t)[0];\n        o.src = u;\n        if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n        s.parentNode.insertBefore(o, s);\n    }\n</script>\n\n<!--\n     Because of the native support for backtick-style fenced code blocks\n     right within the Markdown is landed in Github Pages,\n     From V1.6, There is no need for Highlight.js,\n     so Huxblog drops it officially.\n\n     - https://github.com/blog/2100-github-pages-now-faster-and-simpler-with-jekyll-3-0\n     - https://help.github.com/articles/creating-and-highlighting-code-blocks/\n     - https://github.com/jneen/rouge/wiki/list-of-supported-languages-and-lexers\n-->\n<!--\n    <script>\n        async(\"http://cdn.bootcss.com/highlight.js/8.6/highlight.min.js\", function(){\n            hljs.initHighlightingOnLoad();\n        })\n    </script>\n    <link href=\"http://cdn.bootcss.com/highlight.js/8.6/styles/github.min.css\" rel=\"stylesheet\">\n-->\n\n\n\n\n\n\n\n<!--fastClick.js -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/fastclick/1.0.6/fastclick.min.js\", function () {\n        var $nav = document.querySelector(\"nav\");\n        if ($nav) FastClick.attach($nav);\n    })\n</script>\n\n\n<!-- Google Analytics -->\n\n\n\n<!-- Baidu Tongji -->\n\n\n\n<!-- Side Catalog -->\n\n<script type=\"text/javascript\">\n    function generateCatalog(selector) {\n\n        // interop with multilangual \n        if ('' == 'true') {\n            _containerSelector = 'div.post-container.active'\n        } else {\n            _containerSelector = 'div.post-container'\n        }\n\n        // init\n        var P = $(_containerSelector), a, n, t, l, i, c;\n        a = P.find('h1,h2,h3,h4,h5,h6');\n\n        // clean\n        $(selector).html('')\n\n        // appending\n        a.each(function () {\n            n = $(this).prop('tagName').toLowerCase();\n            i = \"#\" + $(this).prop('id');\n            t = $(this).text();\n            c = $('<a href=\"' + i + '\" rel=\"nofollow\">' + t + '</a>');\n            l = $('<li class=\"' + n + '_nav\"></li>').append(c);\n            $(selector).append(l);\n        });\n        return true;\n    }\n\n    generateCatalog(\".catalog-body\");\n\n    // toggle side catalog\n    $(\".catalog-toggle\").click((function (e) {\n        e.preventDefault();\n        $('.side-catalog').toggleClass(\"fold\")\n    }))\n\n    /*\n     * Doc: https://github.com/davist11/jQuery-One-Page-Nav\n     * Fork by Hux to support padding\n     */\n    async(\"/js/jquery.nav.js\", function () {\n        $('.catalog-body').onePageNav({\n            currentClass: \"active\",\n            changeHash: !1,\n            easing: \"swing\",\n            filter: \"\",\n            scrollSpeed: 700,\n            scrollOffset: 0,\n            scrollThreshold: .2,\n            begin: null,\n            end: null,\n            scrollChange: null,\n            padding: 80\n        });\n    });\n</script>\n\n\n\n<!-- Multi-Lingual -->\n\n\n<!-- Simple Jekyll Search -->\n<script>\n    // https://stackoverflow.com/questions/1912501/unescape-html-entities-in-javascript\n    function htmlDecode(input) {\n        var e = document.createElement('textarea');\n        e.innerHTML = input;\n        // handle case of empty input\n        return e.childNodes.length === 0 ? \"\" : e.childNodes[0].nodeValue;\n    }\n\n    SimpleJekyllSearch({\n        searchInput: document.getElementById('search-input'),\n        resultsContainer: document.getElementById('search-results'),\n        json: '/search.json',\n        searchResultTemplate: '<div class=\"post-preview item\"><a href=\"{url}\"><h2 class=\"post-title\">{title}</h2><h3 class=\"post-subtitle\">{subtitle}</h3><hr></a></div>',\n        noResultsText: 'No results',\n        limit: 50,\n        fuzzy: false,\n        // a hack to get escaped subtitle unescaped. for some reason, \n        // post.subtitle w/o escape filter nuke entire search.\n        templateMiddleware: function (prop, value, template) {\n            if (prop === 'subtitle' || prop === 'title') {\n                if (value.indexOf(\"code\")) {\n                    return htmlDecode(value);\n                } else {\n                    return value;\n                }\n            }\n        }\n    });\n\n    $(document).ready(function () {\n        var $searchPage = $('.search-page');\n        var $searchOpen = $('.search-icon');\n        var $searchClose = $('.search-icon-close');\n        var $searchInput = $('#search-input');\n        var $body = $('body');\n\n        $searchOpen.on('click', function (e) {\n            e.preventDefault();\n            $searchPage.toggleClass('search-active');\n            var prevClasses = $body.attr('class') || '';\n            setTimeout(function () {\n                $body.addClass('no-scroll');\n            }, 400)\n\n            if ($searchPage.hasClass('search-active')) {\n                $searchClose.on('click', function (e) {\n                    e.preventDefault();\n                    $searchPage.removeClass('search-active');\n                    $body.attr('class', prevClasses);  // from closure \n                });\n                $searchInput.focus();\n            }\n        });\n    });\n</script>\n\n\n<!-- Image to hack wechat -->\n<img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\" />\n<!-- Migrate from head to bottom, no longer block render and still work -->\n\n</body>\n\n</html>\n","excerpt":"<h2 id=\"1-需求不断插入\">1 需求不断插入</h2>\n","url":"/2023/07/20/iOS%E7%BB%84%E4%BB%B6%E5%8C%96%E5%AE%9E%E8%B7%B5%E4%BA%8C-%E5%AE%9E%E8%B7%B5%E8%BF%87%E7%A8%8B%E7%A2%B0%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/","next":{"id":"/2023/07/26/4-iOS组件化模板","tags":[],"relative_path":"_posts/2023-07-26-4-iOS组件化模板.md","collection":"posts","name":"2023-07-26-4-iOS组件化模板.md","url":"/2023/07/26/4-iOS%E7%BB%84%E4%BB%B6%E5%8C%96%E6%A8%A1%E6%9D%BF/","title":"iOS组件化实践之：新建一个Pod组件库","date":"2023-07-26 00:00:00 +0800","categories":[],"path":"_posts/2023-07-26-4-iOS组件化模板.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/home-bg-geek.jpg","slug":"4-iOS组件化模板","ext":".md"},"title":"iOS组件化实践二：实践过程碰到的问题","date":"2023-07-20 00:00:00 +0800","categories":[],"path":"_posts/2023-07-20-iOS组件化实践二-实践过程碰到的问题.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/home-bg-geek.jpg","slug":"iOS组件化实践二-实践过程碰到的问题","ext":".md"},"output":"<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"google-site-verification\" content=\"xBT4GhYoi5qRD5tr338pgPM5OWHHIDR6mNg1a3euekI\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, viewport-fit=cover\">\n    <meta name=\"description\" content=\"与你一起发现更大的世界。\">\n    <meta name=\"keywords\"  content=\"PaysonChen,iOS,流媒体\">\n    <meta name=\"theme-color\" content=\"#000000\">\n    \n    <!-- Open Graph -->\n    <meta property=\"og:title\" content=\"iOS组件化实践之：新建一个Pod组件库 - PaysonChen的博客 | PaysonChen Blog\">\n    \n    <meta property=\"og:type\" content=\"article\">\n    <meta property=\"og:description\" content=\"iOS组件化实践之：新建一个Pod组件库\n\">\n    \n    \n    <meta property=\"article:published_time\" content=\"2023-07-26T00:00:00Z\">\n    \n    \n    <meta property=\"article:author\" content=\"PaysonChen\">\n    \n    \n    \n    <meta property=\"og:image\" content=\"http://localhost:4000\">\n    <meta property=\"og:url\" content=\"http://localhost:4000/2023/07/26/4-iOS%E7%BB%84%E4%BB%B6%E5%8C%96%E6%A8%A1%E6%9D%BF/\">\n    <meta property=\"og:site_name\" content=\"PaysonChen的博客 | PaysonChen Blog\">\n    \n    <title>iOS组件化实践之：新建一个Pod组件库 - PaysonChen的博客 | PaysonChen Blog</title>\n\n    <!-- Web App Manifest -->\n    <link rel=\"manifest\" href=\"/pwa/manifest.json\">\n\n    <!-- Favicon -->\n    <link rel=\"shortcut icon\" href=\"/img/favicon.ico\">\n    \n    <!-- Canonical URL -->\n    <link rel=\"canonical\" href=\"http://localhost:4000/2023/07/26/4-iOS%E7%BB%84%E4%BB%B6%E5%8C%96%E6%A8%A1%E6%9D%BF/\">\n\n    <!-- Bootstrap Core CSS -->\n    <link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\">\n\n    <!-- Custom CSS -->\n    <link rel=\"stylesheet\" href=\"/css/hux-blog.min.css\">\n\n    <!-- Custom Fonts -->\n    <!-- <link href=\"http://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\"> -->\n    <!-- Hux change font-awesome CDN to qiniu -->\n    <link href=\"//cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\">\n\n\n    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->\n    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->\n    <!--[if lt IE 9]>\n        <script src=\"https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js\"></script>\n        <script src=\"https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js\"></script>\n    <![endif]-->\n\n    <!-- ga & ba script hoook -->\n    <script></script>\n</head>\n\n\n<!-- hack iOS CSS :active style -->\n<body ontouchstart=\"\">\n\n    <!-- Navigation -->\n\n    <nav class=\"navbar navbar-default navbar-custom navbar-fixed-top\">\n        \n        <div class=\"container-fluid\">\n            <!-- Brand and toggle get grouped for better mobile display -->\n            <div class=\"navbar-header page-scroll\">\n                <button type=\"button\" class=\"navbar-toggle\">\n                    <span class=\"sr-only\">Toggle navigation</span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                </button>\n                <a class=\"navbar-brand\" href=\"/\">PaysonChen Blog</a>\n            </div>\n\n            <!-- Collect the nav links, forms, and other content for toggling -->\n            <div id=\"huxblog_navbar\">\n                <div class=\"navbar-collapse\">\n                    <ul class=\"nav navbar-nav navbar-right\">\n                        <li>\n                            <a href=\"/\">Home</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        <li>\n                            <a href=\"/about/\">About</a>\n                        </li>\n                        \n                        \n                        \n                        <li>\n                            <a href=\"/archive/\">Archive</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        <li class=\"search-icon\">\n                            <a href=\"javascript:void(0)\">\n                                <i class=\"fa fa-search\"></i>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n            <!-- /.navbar-collapse -->\n        </div>\n        <!-- /.container -->\n    </nav>\n\n    <script>\n        // Drop Bootstarp low-performance Navbar\n        // Use customize navbar with high-quality material design animation\n        // in high-perf jank-free CSS3 implementation\n        var $body = document.body;\n        var $toggle = document.querySelector('.navbar-toggle');\n        var $navbar = document.querySelector('#huxblog_navbar');\n        var $collapse = document.querySelector('.navbar-collapse');\n\n        var __HuxNav__ = {\n            close: function () {\n                $navbar.className = \" \";\n                // wait until animation end.\n                setTimeout(function () {\n                    // prevent frequently toggle\n                    if ($navbar.className.indexOf('in') < 0) {\n                        $collapse.style.height = \"0px\"\n                    }\n                }, 400)\n            },\n            open: function () {\n                $collapse.style.height = \"auto\"\n                $navbar.className += \" in\";\n            }\n        }\n\n        // Bind Event\n        $toggle.addEventListener('click', function (e) {\n            if ($navbar.className.indexOf('in') > 0) {\n                __HuxNav__.close()\n            } else {\n                __HuxNav__.open()\n            }\n        })\n\n        /**\n         * Since Fastclick is used to delegate 'touchstart' globally\n         * to hack 300ms delay in iOS by performing a fake 'click',\n         * Using 'e.stopPropagation' to stop 'touchstart' event from \n         * $toggle/$collapse will break global delegation.\n         * \n         * Instead, we use a 'e.target' filter to prevent handler\n         * added to document close HuxNav.  \n         *\n         * Also, we use 'click' instead of 'touchstart' as compromise\n         */\n        document.addEventListener('click', function (e) {\n            if (e.target == $toggle) return;\n            if (e.target.className == 'icon-bar') return;\n            __HuxNav__.close();\n        })\n    </script>\n    <!-- Search -->\n<div class=\"search-page\">\n  <div class=\"search-icon-close-container\">\n    <span class=\"search-icon-close\">\n      <i class=\"fa fa-chevron-down\"></i>\n    </span>\n  </div>\n  <div class=\"search-main container\">\n    <div class=\"row\">\n      <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n        <form></form>\n        <input type=\"text\" id=\"search-input\" placeholder=\"$ grep...\">\n        </form>\n        <div id=\"search-results\" class=\"mini-post-list\"></div>\n      </div>\n    </div>\n  </div>\n</div>\n\n    <!-- Image to hack wechat -->\n<!-- <img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\"> -->\n<!-- <img src=\"/img/home-bg-geek.jpg\" width=\"0\" height=\"0\"> -->\n\n<!-- Post Header -->\n\n\n\n<style type=\"text/css\">\n    header.intro-header{\n        position: relative;\n        background-image: url('/img/home-bg-geek.jpg');\n        background: ;\n    }\n\n    \n</style>\n\n<header class=\"intro-header\" >\n\n    <div class=\"header-mask\"></div>\n    \n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <div class=\"post-heading\">\n                    <div class=\"tags\">\n                        \n                    </div>\n                    <h1>iOS组件化实践之：新建一个Pod组件库</h1>\n                    \n                    <h2 class=\"subheading\"></h2>\n                    <span class=\"meta\">Posted by PaysonChen on July 26, 2023</span>\n                </div>\n            </div>\n        </div>\n    </div>\n</header>\n\n\n\n\n\n\n<!-- Post Content -->\n<article>\n    <div class=\"container\">\n        <div class=\"row\">\n\n    <!-- Post Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                post-container\">\n\n                <!-- Multi-Lingual -->\n                \n\n\t\t\t\t<h1 id=\"ios组件化实践之新建一个pod组件库\">iOS组件化实践之：新建一个Pod组件库</h1>\n\n<h2 id=\"0背景\">0.背景</h2>\n\n<p>在IOS组件化的实践过程中，</p>\n\n<ul>\n  <li>规划期间需要对组件进行定义、功能划分、接口设计等</li>\n  <li>实践期间需要对组件进行创建，迁移主工程能力等</li>\n</ul>\n\n<p>这过程，就看你需要较为频繁地创建Pod组件库，因此对于了解一下，Pod组件的创建，及其模板的使用与修改，变成较为重要</p>\n\n<h2 id=\"1-通过常规模板创建\">1. 通过常规模板创建</h2>\n\n<p>CocoaPods提供的创建指令：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>pod lib create xx\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>通过输出可以看到：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>Cloning <span class=\"sb\">`</span>https://github.com/CocoaPods/pod-template.git<span class=\"sb\">`</span> into <span class=\"sb\">`</span>xx<span class=\"sb\">`</span><span class=\"nb\">.</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>此命令默认从 <a href=\"https://github.com/CocoaPods/pod-template\">github Pod-template</a>，下载默认模板进行创建，依次回答几个问题之后</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n</pre></td><td class=\"rouge-code\"><pre>What platform <span class=\"k\">do </span>you want to use?? <span class=\"o\">[</span> iOS / macOS <span class=\"o\">]</span>\n <span class=\"o\">&gt;</span> \nios\nWhat language <span class=\"k\">do </span>you want to use?? <span class=\"o\">[</span> Swift / ObjC <span class=\"o\">]</span>\n <span class=\"o\">&gt;</span> \nswift\nWould you like to include a demo application with your library? <span class=\"o\">[</span> Yes / No <span class=\"o\">]</span>\n <span class=\"o\">&gt;</span> \n<span class=\"nb\">yes\n</span>Which testing frameworks will you use? <span class=\"o\">[</span> Quick / None <span class=\"o\">]</span>\n <span class=\"o\">&gt;</span> \nquick\nWould you like to <span class=\"k\">do </span>view based testing? <span class=\"o\">[</span> Yes / No <span class=\"o\">]</span>\n <span class=\"o\">&gt;</span> \n<span class=\"nb\">yes</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>当前路径下就生成了一个Pod仓库，Spec文件如下：</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n</pre></td><td class=\"rouge-code\"><pre><span class=\"no\">Pod</span><span class=\"o\">::</span><span class=\"no\">Spec</span><span class=\"p\">.</span><span class=\"nf\">new</span> <span class=\"k\">do</span> <span class=\"o\">|</span><span class=\"n\">s</span><span class=\"o\">|</span>\n  <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">name</span>             <span class=\"o\">=</span> <span class=\"s1\">'xx'</span>\n  <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">version</span>          <span class=\"o\">=</span> <span class=\"s1\">'0.1.0'</span>\n  <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">summary</span>          <span class=\"o\">=</span> <span class=\"s1\">'A short description of xx.'</span>\n\n<span class=\"c1\"># This description is used to generate tags and improve search results.</span>\n<span class=\"c1\">#   * Think: What does it do? Why did you write it? What is the focus?</span>\n<span class=\"c1\">#   * Try to keep it short, snappy and to the point.</span>\n<span class=\"c1\">#   * Write the description between the DESC delimiters below.</span>\n<span class=\"c1\">#   * Finally, don't worry about the indent, CocoaPods strips it!</span>\n\n  <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">description</span>      <span class=\"o\">=</span> <span class=\"o\">&lt;&lt;-</span><span class=\"no\">DESC</span><span class=\"sh\">\nTODO: Add long description of the pod here.\n</span><span class=\"no\">                       DESC</span>\n\n  <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">homepage</span>         <span class=\"o\">=</span> <span class=\"s1\">'https://github.com/chenyp/xx'</span>\n  <span class=\"c1\"># s.screenshots     = 'www.example.com/screenshots_1', 'www.example.com/screenshots_2'</span>\n  <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">license</span>          <span class=\"o\">=</span> <span class=\"p\">{</span> <span class=\"ss\">:type</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'MIT'</span><span class=\"p\">,</span> <span class=\"ss\">:file</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'LICENSE'</span> <span class=\"p\">}</span>\n  <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">author</span>           <span class=\"o\">=</span> <span class=\"p\">{</span> <span class=\"s1\">'chenyp'</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'165685965@qq.com'</span> <span class=\"p\">}</span>\n  <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">source</span>           <span class=\"o\">=</span> <span class=\"p\">{</span> <span class=\"ss\">:git</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'https://github.com/chenyp/xx.git'</span><span class=\"p\">,</span> <span class=\"ss\">:tag</span> <span class=\"o\">=&gt;</span> <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">version</span><span class=\"p\">.</span><span class=\"nf\">to_s</span> <span class=\"p\">}</span>\n  <span class=\"c1\"># s.social_media_url = 'https://twitter.com/&lt;TWITTER_USERNAME&gt;'</span>\n\n  <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">ios</span><span class=\"p\">.</span><span class=\"nf\">deployment_target</span> <span class=\"o\">=</span> <span class=\"s1\">'10.0'</span>\n\n  <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">source_files</span> <span class=\"o\">=</span> <span class=\"s1\">'xx/Classes/**/*'</span>\n  \n  <span class=\"c1\"># s.resource_bundles = {</span>\n  <span class=\"c1\">#   'xx' =&gt; ['xx/Assets/*.png']</span>\n  <span class=\"c1\"># }</span>\n\n  <span class=\"c1\"># s.public_header_files = 'Pod/Classes/**/*.h'</span>\n  <span class=\"c1\"># s.frameworks = 'UIKit', 'MapKit'</span>\n  <span class=\"c1\"># s.dependency 'AFNetworking', '~&gt; 2.3'</span>\n<span class=\"k\">end</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h2 id=\"2-通过自定义模板创建\">2. 通过自定义模板创建</h2>\n\n<p>一般而言，不建议通过上述方式进行创建，默认以git全局配置的name、email字段，加上github主页进行填充，因为默认模板所创建的诸多字段是必要修改的（不改无法通过私有组件部署）：</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n</pre></td><td class=\"rouge-code\"><pre>  <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">homepage</span>         <span class=\"o\">=</span> <span class=\"s1\">'https://github.com/chenyp/xx'</span>\n  <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">author</span>           <span class=\"o\">=</span> <span class=\"p\">{</span> <span class=\"s1\">'chenyp'</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'165685965@qq.com'</span> <span class=\"p\">}</span>\n  <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">source</span>           <span class=\"o\">=</span> <span class=\"p\">{</span> <span class=\"ss\">:git</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'https://github.com/chenyp/xx.git'</span><span class=\"p\">,</span> <span class=\"ss\">:tag</span> <span class=\"o\">=&gt;</span> <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">version</span><span class=\"p\">.</span><span class=\"nf\">to_s</span> <span class=\"p\">}</span>\n<span class=\"err\">……</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>由于组件化的过程是需要频繁创建多个组件仓库，如果每次都改上述字段，有可能错改漏改，导致效率低下，基于懒惰是程序员的美德这一不成文的追求（其实应该是尽量能把重复工作流程化），着手对上述模板进行修改。</p>\n\n<p>自定义模板创建：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>git clone git@github.com:CocoaPods/pod-template.git\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>通过修改仓库中的“<strong>NAME.podspec</strong>”文件中的相关字段</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n</pre></td><td class=\"rouge-code\"><pre>  <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">homepage</span>         <span class=\"o\">=</span> <span class=\"s1\">'https://内网githost/name/xx'</span>\n  <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">author</span>           <span class=\"o\">=</span> <span class=\"p\">{</span> <span class=\"s1\">'内网git提交commit姓名'</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'内网git提交commit email'</span> <span class=\"p\">}</span>\n  <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">source</span>           <span class=\"o\">=</span> <span class=\"p\">{</span> <span class=\"ss\">:git</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'https://内网githost/name/xx.git'</span><span class=\"p\">,</span> <span class=\"ss\">:tag</span> <span class=\"o\">=&gt;</span> <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">version</span><span class=\"p\">.</span><span class=\"nf\">to_s</span> <span class=\"p\">}</span>\t<span class=\"c1\">#clone 组件库地址</span>\n<span class=\"err\">……</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>修改后将上述模板放到git仓库上，执行：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre> pod lib create xx  <span class=\"nt\">--template-url</span><span class=\"o\">=</span>ssh://内网githost/ios/Pods/Tmplate/XXX_Pod_Tmeplate.git\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h2 id=\"3-通过高度自定义模板创建\">3. 通过高度自定义模板创建</h2>\n\n<p>一般而言，到上述即可完成基础的模板自定义，减少创建私有库后所需的重复修改字段的工作量，但是对于下列选项的一致性，如果能省略冗余及提高统一性，自然更好了：</p>\n\n<ul class=\"task-list\">\n  <li class=\"task-list-item\">\n    <p><input type=\"checkbox\" class=\"task-list-item-checkbox\" disabled=\"disabled\" checked=\"checked\" />平台选择的冗余（iOS）</p>\n  </li>\n  <li class=\"task-list-item\">\n    <p><input type=\"checkbox\" class=\"task-list-item-checkbox\" disabled=\"disabled\" checked=\"checked\" />代码风格的统一（类名前缀）</p>\n  </li>\n  <li class=\"task-list-item\">\n    <p><input type=\"checkbox\" class=\"task-list-item-checkbox\" disabled=\"disabled\" />语言统一（iOS/Swift）</p>\n  </li>\n  <li class=\"task-list-item\">\n    <p><input type=\"checkbox\" class=\"task-list-item-checkbox\" disabled=\"disabled\" checked=\"checked\" />Demo工程</p>\n  </li>\n  <li class=\"task-list-item\">\n    <p><input type=\"checkbox\" class=\"task-list-item-checkbox\" disabled=\"disabled\" checked=\"checked\" />测试依赖</p>\n  </li>\n</ul>\n\n<p>这就需要对pod-template的ruby代码进行修改已达到不需要重复设定模板交互的目的：</p>\n\n<p>模板配置：TemplateConfigurator.rb</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n</pre></td><td class=\"rouge-code\"><pre>    <span class=\"k\">def</span> <span class=\"nf\">run</span>\n      <span class=\"vi\">@message_bank</span><span class=\"p\">.</span><span class=\"nf\">welcome_message</span>\n\n      <span class=\"n\">platform</span> <span class=\"o\">=</span> <span class=\"nb\">self</span><span class=\"p\">.</span><span class=\"nf\">ask_with_answers</span><span class=\"p\">(</span><span class=\"s2\">\"What platform do you want to use?\"</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s2\">\"iOS\"</span><span class=\"p\">,</span> <span class=\"s2\">\"macOS\"</span><span class=\"p\">]).</span><span class=\"nf\">to_sym</span>\n\n      <span class=\"k\">case</span> <span class=\"n\">platform</span>\n        <span class=\"k\">when</span> <span class=\"ss\">:macos</span>\n          <span class=\"no\">ConfigureMacOSSwift</span><span class=\"p\">.</span><span class=\"nf\">perform</span><span class=\"p\">(</span><span class=\"ss\">configurator: </span><span class=\"nb\">self</span><span class=\"p\">)</span>\n        <span class=\"k\">when</span> <span class=\"ss\">:ios</span>\n          <span class=\"n\">framework</span> <span class=\"o\">=</span> <span class=\"nb\">self</span><span class=\"p\">.</span><span class=\"nf\">ask_with_answers</span><span class=\"p\">(</span><span class=\"s2\">\"What language do you want to use?\"</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s2\">\"Swift\"</span><span class=\"p\">,</span> <span class=\"s2\">\"ObjC\"</span><span class=\"p\">]).</span><span class=\"nf\">to_sym</span>\n          <span class=\"k\">case</span> <span class=\"n\">framework</span>\n            <span class=\"k\">when</span> <span class=\"ss\">:swift</span>\n              <span class=\"no\">ConfigureSwift</span><span class=\"p\">.</span><span class=\"nf\">perform</span><span class=\"p\">(</span><span class=\"ss\">configurator: </span><span class=\"nb\">self</span><span class=\"p\">)</span>\n\n            <span class=\"k\">when</span> <span class=\"ss\">:objc</span>\n              <span class=\"no\">ConfigureIOS</span><span class=\"p\">.</span><span class=\"nf\">perform</span><span class=\"p\">(</span><span class=\"ss\">configurator: </span><span class=\"nb\">self</span><span class=\"p\">)</span>\n          <span class=\"k\">end</span>\n      <span class=\"k\">end</span>\n      \n      <span class=\"c1\">#……此处省略后面的代码……#</span>\n    <span class=\"k\">end</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>改为：</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n</pre></td><td class=\"rouge-code\"><pre>    <span class=\"k\">def</span> <span class=\"nf\">run</span>\n      <span class=\"vi\">@message_bank</span><span class=\"p\">.</span><span class=\"nf\">welcome_message</span>\n\n      <span class=\"c1\">#自定义模板优化：这里可以绕过了一些问题（免回答iOS、Objc）,当然如果想要设置成其他的，也可以调用其他方法，或者恢复询问式配置</span>\n      <span class=\"no\">ConfigureIOS</span><span class=\"p\">.</span><span class=\"nf\">perform</span><span class=\"p\">(</span><span class=\"ss\">configurator: </span><span class=\"nb\">self</span><span class=\"p\">)</span>\n      \n<span class=\"c1\">#      platform = self.ask_with_answers(\"What platform do you want to use?\", [\"iOS\", \"macOS\"]).to_sym</span>\n<span class=\"c1\">#</span>\n<span class=\"c1\">#      case platform</span>\n<span class=\"c1\">#        when :macos</span>\n<span class=\"c1\">#          ConfigureMacOSSwift.perform(configurator: self)</span>\n<span class=\"c1\">#        when :ios</span>\n<span class=\"c1\">#          framework = self.ask_with_answers(\"What language do you want to use?\", [\"Swift\", \"ObjC\"]).to_sym</span>\n<span class=\"c1\">#          case framework</span>\n<span class=\"c1\">#            when :swift</span>\n<span class=\"c1\">#              ConfigureSwift.perform(configurator: self)</span>\n<span class=\"c1\">#</span>\n<span class=\"c1\">#            when :objc</span>\n<span class=\"c1\">#              ConfigureIOS.perform(configurator: self)</span>\n<span class=\"c1\">#          end</span>\n<span class=\"c1\">#      end</span>\n\n      <span class=\"c1\">#……此处省略后面的代码……#</span>\n    <span class=\"k\">end</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>选择了相关语言，就在相关语言的 Configure 内配置后续的设置，例如：选择了iOS，就在ConfigureIOS.rb配置:</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n</pre></td><td class=\"rouge-code\"><pre>    <span class=\"k\">def</span> <span class=\"nf\">perform</span>\n\n      <span class=\"n\">keep_demo</span> <span class=\"o\">=</span> <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">ask_with_answers</span><span class=\"p\">(</span><span class=\"s2\">\"Would you like to include a demo application with your library\"</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s2\">\"Yes\"</span><span class=\"p\">,</span> <span class=\"s2\">\"No\"</span><span class=\"p\">]).</span><span class=\"nf\">to_sym</span>\n\n      <span class=\"n\">framework</span> <span class=\"o\">=</span> <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">ask_with_answers</span><span class=\"p\">(</span><span class=\"s2\">\"Which testing frameworks will you use\"</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s2\">\"Specta\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Kiwi\"</span><span class=\"p\">,</span> <span class=\"s2\">\"None\"</span><span class=\"p\">]).</span><span class=\"nf\">to_sym</span>\n      <span class=\"k\">case</span> <span class=\"n\">framework</span>\n        <span class=\"k\">when</span> <span class=\"ss\">:specta</span>\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_pod_to_podfile</span> <span class=\"s2\">\"Specta\"</span>\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_pod_to_podfile</span> <span class=\"s2\">\"Expecta\"</span>\n\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_line_to_pch</span> <span class=\"s2\">\"@import Specta;\"</span>\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_line_to_pch</span> <span class=\"s2\">\"@import Expecta;\"</span>\n\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">set_test_framework</span><span class=\"p\">(</span><span class=\"s2\">\"specta\"</span><span class=\"p\">,</span> <span class=\"s2\">\"m\"</span><span class=\"p\">,</span> <span class=\"s2\">\"ios\"</span><span class=\"p\">)</span>\n\n        <span class=\"k\">when</span> <span class=\"ss\">:kiwi</span>\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_pod_to_podfile</span> <span class=\"s2\">\"Kiwi\"</span>\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_line_to_pch</span> <span class=\"s2\">\"@import Kiwi;\"</span>\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">set_test_framework</span><span class=\"p\">(</span><span class=\"s2\">\"kiwi\"</span><span class=\"p\">,</span> <span class=\"s2\">\"m\"</span><span class=\"p\">,</span> <span class=\"s2\">\"ios\"</span><span class=\"p\">)</span>\n\n        <span class=\"k\">when</span> <span class=\"ss\">:none</span>\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">set_test_framework</span><span class=\"p\">(</span><span class=\"s2\">\"xctest\"</span><span class=\"p\">,</span> <span class=\"s2\">\"m\"</span><span class=\"p\">,</span> <span class=\"s2\">\"ios\"</span><span class=\"p\">)</span>\n      <span class=\"k\">end</span>\n\n      <span class=\"n\">snapshots</span> <span class=\"o\">=</span> <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">ask_with_answers</span><span class=\"p\">(</span><span class=\"s2\">\"Would you like to do view based testing\"</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s2\">\"Yes\"</span><span class=\"p\">,</span> <span class=\"s2\">\"No\"</span><span class=\"p\">]).</span><span class=\"nf\">to_sym</span>\n      <span class=\"k\">case</span> <span class=\"n\">snapshots</span>\n        <span class=\"k\">when</span> <span class=\"ss\">:yes</span>\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_pod_to_podfile</span> <span class=\"s2\">\"FBSnapshotTestCase\"</span>\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_line_to_pch</span> <span class=\"s2\">\"@import FBSnapshotTestCase;\"</span>\n\n          <span class=\"k\">if</span> <span class=\"n\">keep_demo</span> <span class=\"o\">==</span> <span class=\"ss\">:no</span>\n              <span class=\"nb\">puts</span> <span class=\"s2\">\" Putting demo application back in, you cannot do view tests without a host application.\"</span>\n              <span class=\"n\">keep_demo</span> <span class=\"o\">=</span> <span class=\"ss\">:yes</span>\n          <span class=\"k\">end</span>\n\n          <span class=\"k\">if</span> <span class=\"n\">framework</span> <span class=\"o\">==</span> <span class=\"ss\">:specta</span>\n              <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_pod_to_podfile</span> <span class=\"s2\">\"Expecta+Snapshots\"</span>\n              <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_line_to_pch</span> <span class=\"s2\">\"@import Expecta_Snapshots;\"</span>\n          <span class=\"k\">end</span>\n      <span class=\"k\">end</span>\n\n      <span class=\"n\">prefix</span> <span class=\"o\">=</span> <span class=\"kp\">nil</span>\n\n      <span class=\"kp\">loop</span> <span class=\"k\">do</span>\n        <span class=\"n\">prefix</span> <span class=\"o\">=</span> <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">ask</span><span class=\"p\">(</span><span class=\"s2\">\"What is your class prefix\"</span><span class=\"p\">).</span><span class=\"nf\">upcase</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">prefix</span><span class=\"p\">.</span><span class=\"nf\">include?</span><span class=\"p\">(</span><span class=\"s1\">' '</span><span class=\"p\">)</span>\n          <span class=\"nb\">puts</span> <span class=\"s1\">'Your class prefix cannot contain spaces.'</span><span class=\"p\">.</span><span class=\"nf\">red</span>\n        <span class=\"k\">else</span>\n          <span class=\"k\">break</span>\n        <span class=\"k\">end</span>\n      <span class=\"k\">end</span>\n\t      <span class=\"c1\">#……此处省略后面的代码……#</span>\n  <span class=\"k\">end</span>\n\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>找到相关的问答区：</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n</pre></td><td class=\"rouge-code\"><pre>    <span class=\"k\">def</span> <span class=\"nf\">perform</span>\n      <span class=\"c1\">#自定义模板优化: 这里默认需要demo，当然如果想要设置成其他的，也可以调用其他方法，或者恢复询问式配置</span>\n      <span class=\"n\">keep_demo</span> <span class=\"o\">=</span> <span class=\"s2\">\"yes\"</span><span class=\"c1\">#configurator.ask_with_answers(\"Would you like to include a demo application with your library\", [\"Yes\", \"No\"]).to_sym</span>\n      <span class=\"c1\">#自定义模板优化：: 这里默认不需要testing frameworks，当然如果想要设置成其他的，也可以调用其他方法，或者恢复询问式配置</span>\n      <span class=\"n\">framework</span> <span class=\"o\">=</span> <span class=\"s2\">\"none\"</span> <span class=\"c1\">#configurator.ask_with_answers(\"Which testing frameworks will you use\", [\"Specta\", \"Kiwi\", \"None\"]).to_sym</span>\n      <span class=\"k\">case</span> <span class=\"n\">framework</span>\n        <span class=\"k\">when</span> <span class=\"ss\">:specta</span>\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_pod_to_podfile</span> <span class=\"s2\">\"Specta\"</span>\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_pod_to_podfile</span> <span class=\"s2\">\"Expecta\"</span>\n\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_line_to_pch</span> <span class=\"s2\">\"@import Specta;\"</span>\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_line_to_pch</span> <span class=\"s2\">\"@import Expecta;\"</span>\n\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">set_test_framework</span><span class=\"p\">(</span><span class=\"s2\">\"specta\"</span><span class=\"p\">,</span> <span class=\"s2\">\"m\"</span><span class=\"p\">,</span> <span class=\"s2\">\"ios\"</span><span class=\"p\">)</span>\n\n        <span class=\"k\">when</span> <span class=\"ss\">:kiwi</span>\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_pod_to_podfile</span> <span class=\"s2\">\"Kiwi\"</span>\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_line_to_pch</span> <span class=\"s2\">\"@import Kiwi;\"</span>\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">set_test_framework</span><span class=\"p\">(</span><span class=\"s2\">\"kiwi\"</span><span class=\"p\">,</span> <span class=\"s2\">\"m\"</span><span class=\"p\">,</span> <span class=\"s2\">\"ios\"</span><span class=\"p\">)</span>\n\n        <span class=\"k\">when</span> <span class=\"ss\">:none</span>\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">set_test_framework</span><span class=\"p\">(</span><span class=\"s2\">\"xctest\"</span><span class=\"p\">,</span> <span class=\"s2\">\"m\"</span><span class=\"p\">,</span> <span class=\"s2\">\"ios\"</span><span class=\"p\">)</span>\n      <span class=\"k\">end</span>\n\n      <span class=\"c1\">#自定义模板优化：这里默认不需要view based testing，当然如果想要设置成其他的，也可以调用其他方法，或者恢复询问式配置</span>\n      <span class=\"n\">snapshots</span> <span class=\"o\">=</span> <span class=\"s2\">\"no\"</span><span class=\"c1\">#configurator.ask_with_answers(\"Would you like to do view based testing\", [\"Yes\", \"No\"]).to_sym</span>\n      <span class=\"k\">case</span> <span class=\"n\">snapshots</span>\n        <span class=\"k\">when</span> <span class=\"ss\">:yes</span>\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_pod_to_podfile</span> <span class=\"s2\">\"FBSnapshotTestCase\"</span>\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_line_to_pch</span> <span class=\"s2\">\"@import FBSnapshotTestCase;\"</span>\n\n          <span class=\"k\">if</span> <span class=\"n\">keep_demo</span> <span class=\"o\">==</span> <span class=\"ss\">:no</span>\n              <span class=\"nb\">puts</span> <span class=\"s2\">\" Putting demo application back in, you cannot do view tests without a host application.\"</span>\n              <span class=\"n\">keep_demo</span> <span class=\"o\">=</span> <span class=\"ss\">:yes</span>\n          <span class=\"k\">end</span>\n\n          <span class=\"k\">if</span> <span class=\"n\">framework</span> <span class=\"o\">==</span> <span class=\"ss\">:specta</span>\n              <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_pod_to_podfile</span> <span class=\"s2\">\"Expecta+Snapshots\"</span>\n              <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_line_to_pch</span> <span class=\"s2\">\"@import Expecta_Snapshots;\"</span>\n          <span class=\"k\">end</span>\n      <span class=\"k\">end</span>\n\n      <span class=\"n\">prefix</span> <span class=\"o\">=</span> <span class=\"kp\">nil</span>\n\n      <span class=\"kp\">loop</span> <span class=\"k\">do</span>\n      <span class=\"c1\">#自定义模板优化：这里默认prefix为PSC，当然如果想要设置成其他的，也可以调用其他方法，或者恢复询问式配置</span>\n        <span class=\"n\">prefix</span> <span class=\"o\">=</span> <span class=\"s2\">\"PSC\"</span><span class=\"c1\">#configurator.ask(\"What is your class prefix\").upcase</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">prefix</span><span class=\"p\">.</span><span class=\"nf\">include?</span><span class=\"p\">(</span><span class=\"s1\">' '</span><span class=\"p\">)</span>\n          <span class=\"nb\">puts</span> <span class=\"s1\">'Your class prefix cannot contain spaces.'</span><span class=\"p\">.</span><span class=\"nf\">red</span>\n        <span class=\"k\">else</span>\n          <span class=\"k\">break</span>\n        <span class=\"k\">end</span>\n      <span class=\"k\">end</span>\n      <span class=\"c1\">#……此处省略后面的代码……#</span>\n  <span class=\"k\">end</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>至此，优化的自定义模板已经完成，再创建另一个（如果你需要保留上面那种简易自定义）git仓库存储，一键创建更符合需求的pod私有库模板：let‘s try</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre> pod lib create xx  <span class=\"nt\">--template-url</span><span class=\"o\">=</span>ssh://内网githost/ios/Pods/Tmplate/PSC_iOS_Objc_Demo_NoneTest.git\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h2 id=\"4-如果你还是使用gem管理pod插件的话\">4. 如果你还是使用Gem管理Pod插件的话</h2>\n\n<p>一般而言，在多人团队中，需要用到Gem来管理Pod插件版本，避免由于Pod版本不一致，导致的集成与编译问题，如果你还有Gemfile需要配置的话，由于模板配置的代码最后的是：</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n</pre></td><td class=\"rouge-code\"><pre>      <span class=\"c1\"># There has to be a single file in the Classes dir</span>\n      <span class=\"c1\"># or a framework won't be created, which is now default</span>\n      <span class=\"sb\">`touch Pod/Classes/ReplaceMe.m`</span>\n\n      <span class=\"sb\">`mv ./templates/ios/* ./`</span>\n\n      <span class=\"c1\"># remove podspec for osx</span>\n      <span class=\"sb\">`rm ./NAME-osx.podspec`</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>在Podfile同级目录下也存放一个自己在用的Gemfile即可:</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c1\"># frozen_string_literal: true</span>\n\n<span class=\"n\">source</span> <span class=\"s2\">\"https://rubygems.org\"</span>\n\n<span class=\"n\">gem</span> <span class=\"s1\">'cocoapods'</span><span class=\"p\">,</span> <span class=\"s1\">'1.11.2'</span>\n\n<span class=\"n\">git_source</span><span class=\"p\">(</span><span class=\"ss\">:github</span><span class=\"p\">)</span> <span class=\"p\">{</span><span class=\"o\">|</span><span class=\"n\">repo_name</span><span class=\"o\">|</span> <span class=\"s2\">\"https://github.com/</span><span class=\"si\">#{</span><span class=\"n\">repo_name</span><span class=\"si\">}</span><span class=\"s2\">\"</span> <span class=\"p\">}</span>\n\n<span class=\"c1\"># gem \"rails\"</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h2 id=\"5-最后的忽略\">5 最后的忽略</h2>\n\n<p>模板创建之后，会执行Pod install，此时与常规工程一样，在Example下会新增Pod文件夹存在Pod依赖库，提交时需忽略，本着能少干重复劳动就不多干的原则，我们再把.gitignore修改一下：</p>\n\n<p>在根目录中找到.gitignore文件，由于是.开头，默认是隐藏了，在下面代码中添加你需要忽略的文件夹</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\"># macOS</span>\n.DS_Store\n\n<span class=\"c\"># Xcode</span>\nbuild/\n<span class=\"k\">*</span>.pbxuser\n<span class=\"o\">!</span>default.pbxuser\n<span class=\"k\">*</span>.mode1v3\n<span class=\"o\">!</span>default.mode1v3\n<span class=\"k\">*</span>.mode2v3\n<span class=\"o\">!</span>default.mode2v3\n<span class=\"k\">*</span>.perspectivev3\n<span class=\"o\">!</span>default.perspectivev3\nxcuserdata/\n<span class=\"k\">*</span>.xccheckout\n<span class=\"k\">*</span>.moved-aside\nDerivedData\n<span class=\"k\">*</span>.hmap\n<span class=\"k\">*</span>.ipa\n\n<span class=\"c\"># Bundler</span>\n.bundle\n\n<span class=\"c\"># Add this line if you want to avoid checking in source code from Carthage dependencies.</span>\n<span class=\"c\"># Carthage/Checkouts</span>\n\nCarthage/Build\n\n<span class=\"c\"># We recommend against adding the Pods directory to your .gitignore. However</span>\n<span class=\"c\"># you should judge for yourself, the pros and cons are mentioned at:</span>\n<span class=\"c\"># https://guides.cocoapods.org/using/using-cocoapods.html#should-i-ignore-the-pods-directory-in-source-control</span>\n<span class=\"c\"># </span>\n<span class=\"c\"># Note: if you ignore the Pods directory, make sure to uncomment</span>\n<span class=\"c\"># `pod install` in .travis.yml</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># Pods/ #打开此处注释可以忽略 以下Example/Pods/</span>\n\n<span class=\"c\">#以下可以继续添加忽略文件及文件夹</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h2 id=\"6扩展podfile依赖\">6.扩展：Podfile依赖</h2>\n\n<p>一般而言，创建的Pod私有库中的Podfile，会包含简单的模板：</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n</pre></td><td class=\"rouge-code\"><pre><span class=\"n\">use_frameworks!</span>\n\n<span class=\"n\">platform</span> <span class=\"ss\">:ios</span><span class=\"p\">,</span> <span class=\"s1\">'10.0'</span>\n\n<span class=\"n\">target</span> <span class=\"s1\">'${POD_NAME}_Example'</span> <span class=\"k\">do</span>\n  <span class=\"n\">pod</span> <span class=\"s1\">'${POD_NAME}'</span><span class=\"p\">,</span> <span class=\"ss\">:path</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'../'</span>\n\n  <span class=\"n\">target</span> <span class=\"s1\">'${POD_NAME}_Tests'</span> <span class=\"k\">do</span>\n    <span class=\"n\">inherit!</span> <span class=\"ss\">:search_paths</span>\n\n    <span class=\"err\">$</span><span class=\"p\">{</span><span class=\"no\">INCLUDED_PODS</span><span class=\"p\">}</span>\n  <span class=\"k\">end</span>\n<span class=\"k\">end</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>对于单个Pod组件库，也许够用了，但是我们如果是在进行组件化改造的进程中，需要与现有的私有库进行交互与依赖：比如业务库依赖基础库等，</p>\n\n<p>为了方便起见，不至于对每次创建私有库进行Podfile配置（还是懒😭），因此对Podfile进行了改造：</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n</pre></td><td class=\"rouge-code\"><pre><span class=\"n\">source</span> <span class=\"s1\">'ssh://私有库git地址/Specs.git'</span>\n<span class=\"n\">source</span> <span class=\"s1\">'https://github.com/CocoaPods/Specs.git'</span>\n\n<span class=\"n\">use_frameworks!</span>\n\n<span class=\"n\">platform</span> <span class=\"ss\">:ios</span><span class=\"p\">,</span> <span class=\"s1\">'12.0'</span>\t<span class=\"c1\">#写这篇文章时使用的podfile默认是10.0，可以改成你需要的</span>\n<span class=\"n\">post_install</span> <span class=\"k\">do</span> <span class=\"o\">|</span><span class=\"n\">installer</span><span class=\"o\">|</span>\n    <span class=\"n\">installer</span><span class=\"p\">.</span><span class=\"nf\">generated_projects</span><span class=\"p\">.</span><span class=\"nf\">each</span> <span class=\"k\">do</span> <span class=\"o\">|</span><span class=\"n\">project</span><span class=\"o\">|</span>\n          <span class=\"n\">project</span><span class=\"p\">.</span><span class=\"nf\">targets</span><span class=\"p\">.</span><span class=\"nf\">each</span> <span class=\"k\">do</span> <span class=\"o\">|</span><span class=\"n\">target</span><span class=\"o\">|</span>\n              <span class=\"n\">target</span><span class=\"p\">.</span><span class=\"nf\">build_configurations</span><span class=\"p\">.</span><span class=\"nf\">each</span> <span class=\"k\">do</span> <span class=\"o\">|</span><span class=\"n\">config</span><span class=\"o\">|</span>\n                  <span class=\"n\">config</span><span class=\"p\">.</span><span class=\"nf\">build_settings</span><span class=\"p\">[</span><span class=\"s1\">'IPHONEOS_DEPLOYMENT_TARGET'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">'12.0'</span>\n                  <span class=\"n\">config</span><span class=\"p\">.</span><span class=\"nf\">build_settings</span><span class=\"p\">[</span><span class=\"s2\">\"DEVELOPMENT_TEAM\"</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s2\">\"xxxxx\"</span>\t<span class=\"c1\">#这里指定签名，避免编译出错还要手动指定</span>\n               <span class=\"k\">end</span>\n          <span class=\"k\">end</span>\n   <span class=\"k\">end</span>\n<span class=\"k\">end</span>\n\n<span class=\"n\">use_frameworks!</span>\n\n\n<span class=\"n\">target</span> <span class=\"s1\">'${POD_NAME}_Example'</span> <span class=\"k\">do</span>\n\n<span class=\"c1\">#新建pod库创建模板的时候把私有库拉取一下</span>\n<span class=\"k\">def</span> <span class=\"nf\">debug_pod</span><span class=\"p\">(</span><span class=\"n\">pod_name</span><span class=\"p\">)</span>\n  <span class=\"n\">this_pod_name</span> <span class=\"o\">=</span> <span class=\"s2\">\"${POD_NAME}\"</span>\n  <span class=\"nb\">puts</span> <span class=\"s2\">\"debug_pod :pod_name = </span><span class=\"si\">#{</span><span class=\"n\">pod_name</span><span class=\"si\">}</span><span class=\"s2\"> and this_pod_name is </span><span class=\"si\">#{</span><span class=\"n\">this_pod_name</span><span class=\"si\">}</span><span class=\"s2\">\"</span>\n  <span class=\"k\">if</span> <span class=\"n\">this_pod_name</span> <span class=\"o\">==</span> <span class=\"n\">pod_name</span>\n    <span class=\"nb\">puts</span> <span class=\"s2\">\"</span><span class=\"si\">#{</span><span class=\"n\">this_pod_name</span><span class=\"si\">}</span><span class=\"s2\"> is equal args </span><span class=\"si\">#{</span><span class=\"n\">pod_name</span><span class=\"si\">}</span><span class=\"s2\"> do not pod\"</span>\n  <span class=\"k\">elsif</span>\n    <span class=\"c1\">#为了方便管理，这里的所有私有库建议放在同一个目录下</span>\n    <span class=\"n\">pod</span> <span class=\"s2\">\"</span><span class=\"si\">#{</span><span class=\"n\">pod_name</span><span class=\"si\">}</span><span class=\"s2\">\"</span><span class=\"p\">,</span> <span class=\"ss\">:path</span> <span class=\"o\">=&gt;</span> <span class=\"s2\">\"../../</span><span class=\"si\">#{</span><span class=\"n\">pod_name</span><span class=\"si\">}</span><span class=\"s2\">/\"</span>\n  <span class=\"k\">end</span>\n<span class=\"k\">end</span>\n\n  <span class=\"c1\">#为了避免重复定义 这里统一按下面方式进行处理吧，由于下文已经匹配了当前pod，这里不用注释掉</span>\n  <span class=\"n\">pod</span> <span class=\"s1\">'${POD_NAME}'</span><span class=\"p\">,</span> <span class=\"ss\">:path</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'../'</span>\n    \n  <span class=\"c1\">#这里定义需要被引入的所有私有库的库名</span>\n  <span class=\"n\">private_pods</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">\"基础组件1\"</span><span class=\"p\">,</span> <span class=\"s2\">\"基础组件2\"</span><span class=\"p\">,</span> <span class=\"s2\">\"基础组件3\"</span><span class=\"p\">,</span> <span class=\"s2\">\"能力组件1\"</span><span class=\"p\">,</span>  <span class=\"s2\">\"能力组件2\"</span><span class=\"p\">,</span>  <span class=\"s2\">\"能力组件3\"</span><span class=\"p\">,</span>  <span class=\"s2\">\"业务组件1\"</span><span class=\"p\">,</span>  <span class=\"s2\">\"业务组件2\"</span><span class=\"p\">]</span>\n\n  <span class=\"c1\">#这里将所有私有库名与路径匹配起来进行pod</span>\n  <span class=\"n\">private_pods</span><span class=\"p\">.</span><span class=\"nf\">each</span> <span class=\"k\">do</span> <span class=\"o\">|</span><span class=\"n\">private_pod</span><span class=\"o\">|</span>\n    <span class=\"n\">debug_pod</span><span class=\"p\">(</span><span class=\"n\">private_pod</span><span class=\"p\">)</span>\n  <span class=\"k\">end</span>\n\n\n  <span class=\"c1\">#如果上述方法用不来，或者不好用也可以改用下面比较传统的方式进行：</span>\n  <span class=\"c1\">#pod '基础组件1', :path =&gt; '../../基础组件1/'</span>\n  <span class=\"c1\">#pod '基础组件2', :path =&gt; '../../基础组件2/'</span>\n  <span class=\"c1\">#pod '基础组件3', :path =&gt; '../../基础组件3/'</span>\n\n  <span class=\"c1\">#pod '能力组件1', :path =&gt; '../../能力组件1/'</span>\n  <span class=\"c1\">#pod '能力组件2', :path =&gt; '../../能力组件2/'</span>\n  <span class=\"c1\">#pod '能力组件3', :path =&gt; '../../能力组件3/'</span>\n\n  <span class=\"c1\">#pod '业务组件1', :path =&gt; '../../业务组件1/'</span>\n  <span class=\"c1\">#pod '业务组件2', :path =&gt; '../../业务组件2/'</span>\n\n  <span class=\"n\">target</span> <span class=\"s1\">'${POD_NAME}_Tests'</span> <span class=\"k\">do</span>\n    <span class=\"n\">inherit!</span> <span class=\"ss\">:search_paths</span>\n    <span class=\"err\">$</span><span class=\"p\">{</span><span class=\"no\">INCLUDED_PODS</span><span class=\"p\">}</span>\n  <span class=\"k\">end</span>\n<span class=\"k\">end</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>值得一提的是，需要把所有Dev Pod放在同一个目录下，避免路径管理麻烦</p>\n\n<p>至此，生产的Pod组件库模板可以满足组件化进程需求了。</p>\n\n<p>##</p>\n\n\n                <hr style=\"visibility: hidden;\">\n                <ul class=\"pager\">\n                    \n                    <li class=\"previous\">\n                        <a href=\"/2023/07/20/iOS%E7%BB%84%E4%BB%B6%E5%8C%96%E5%AE%9E%E8%B7%B5%E4%BA%8C-%E5%AE%9E%E8%B7%B5%E8%BF%87%E7%A8%8B%E7%A2%B0%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"iOS组件化实践二：实践过程碰到的问题\">\n                        Previous<br>\n                        <span>iOS组件化实践二：实践过程碰到的问题</span>\n                        </a>\n                    </li>\n                    \n                    \n                    <li class=\"next\">\n                        <a href=\"/2023/07/26/5-iOS%E7%BB%84%E4%BB%B6%E5%8C%96-%E8%B5%84%E6%BA%90%E7%BB%84%E4%BB%B6%E5%BA%93/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"iOS组件化实践之：资源组件库\">\n                        Next<br>\n                        <span>iOS组件化实践之：资源组件库</span>\n                        </a>\n                    </li>\n                    \n                </ul>\n                <hr style=\"visibility: hidden;\">\n\n                \n                <!-- disqus 评论框 start -->\n                <div class=\"comment\">\n                    <div id=\"disqus_thread\" class=\"disqus-thread\"></div>\n                </div>\n                <!-- disqus 评论框 end -->\n                \n\n                \n            </div>  \n\n    <!-- Side Catalog Container -->\n        \n            <div class=\"\n                col-lg-2 col-lg-offset-0\n                visible-lg-block\n                sidebar-container\n                catalog-container\">\n                <div class=\"side-catalog\">\n                    <hr class=\"hidden-sm hidden-xs\">\n                    <h5>\n                        <a class=\"catalog-toggle\" href=\"#\">CATALOG</a>\n                    </h5>\n                    <ul class=\"catalog-body\"></ul>\n                </div>\n            </div>\n        \n\n    <!-- Sidebar Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                sidebar-container\">\n\n                <!-- Featured Tags -->\n                \n\n\n<section>\n    \n        <hr class=\"hidden-sm hidden-xs\">\n    \n    <h5><a href=\"/archive/\">FEATURED TAGS</a></h5>\n    <div class=\"tags\">\n        \n        \n        \n        \n        \n    </div>\n</section>\n\n\n                <!-- Friends Blog -->\n                \n            </div>\n        </div>\n    </div>\n</article>\n\n<!-- add support for mathjax by voleking-->\n\n\n\n\n\n\n<!-- disqus 公共JS代码 start (一个网页只需插入一次) -->\n<script type=\"text/javascript\">\n    /* * * CONFIGURATION VARIABLES * * */\n    var disqus_shortname = \"Cyp\";\n    var disqus_identifier = \"/2023/07/26/4-iOS组件化模板\";\n    var disqus_url = \"http://localhost:4000/2023/07/26/4-iOS%E7%BB%84%E4%BB%B6%E5%8C%96%E6%A8%A1%E6%9D%BF/\";\n\n    (function() {\n        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;\n        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';\n        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);\n    })();\n</script>\n<!-- disqus 公共JS代码 end -->\n\n\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n      var d = document, t = 'script',\n          o = d.createElement(t),\n          s = d.getElementsByTagName(t)[0];\n      o.src = u;\n      if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n      s.parentNode.insertBefore(o, s);\n    }\n</script>\n<!-- anchor-js, Doc:http://bryanbraun.github.io/anchorjs/ -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/anchor-js/1.1.1/anchor.min.js\",function(){\n        anchors.options = {\n          visible: 'hover',\n          placement: 'right',\n          // icon: '#'\n        };\n        anchors.add().remove('.intro-header h1').remove('.subheading').remove('.sidebar-container h5');\n    })\n</script>\n<style>\n    /* place left on bigger screen */\n    @media all and (min-width: 800px) {\n        .anchorjs-link{\n            position: absolute;\n            left: -0.75em;\n            font-size: 1.1em;\n            margin-top : -0.1em;\n        }\n    }\n</style>\n\n\n\n    <!-- Footer -->\n<footer>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <!-- SNS Link -->\n                \n\n\n<ul class=\"list-inline text-center\">\n\n\n  \n  \n  \n  \n  \n  \n  \n</ul>\n\n                <p class=\"copyright text-muted\">\n                    Copyright &copy; PaysonChen Blog 2024\n                    <br>\n                    <!-- Powered by <a href=\"http://huangxuan.me\">Hux Blog</a> | -->\n                 <!--    <iframe style=\"margin-left: 2px; margin-bottom:-5px;\" frameborder=\"0\" scrolling=\"0\" width=\"100px\"\n                        height=\"20px\"\n                        src=\"https://ghbtns.com/github-btn.html?user=huxpro&repo=huxpro.github.io&type=star&count=true\">\n                    </iframe> -->\n                </p>\n            </div>\n        </div>\n    </div>\n</footer>\n\n<!-- jQuery -->\n<script src=\"/js/jquery.min.js \"></script>\n\n<!-- Bootstrap Core JavaScript -->\n<!-- Currently, only navbar scroll-down effect at desktop still depends on this -->\n<script src=\"/js/bootstrap.min.js \"></script>\n\n<!-- Custom Theme JavaScript -->\n<script src=\"/js/hux-blog.min.js \"></script>\n\n<!-- Simple Jekyll Search -->\n<script src=\"/js/simple-jekyll-search.min.js\"></script>\n\n<!-- Service Worker -->\n\n<script src=\"/js/snackbar.js \"></script>\n<script src=\"/js/sw-registration.js \"></script>\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n        var d = document, t = 'script',\n            o = d.createElement(t),\n            s = d.getElementsByTagName(t)[0];\n        o.src = u;\n        if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n        s.parentNode.insertBefore(o, s);\n    }\n</script>\n\n<!--\n     Because of the native support for backtick-style fenced code blocks\n     right within the Markdown is landed in Github Pages,\n     From V1.6, There is no need for Highlight.js,\n     so Huxblog drops it officially.\n\n     - https://github.com/blog/2100-github-pages-now-faster-and-simpler-with-jekyll-3-0\n     - https://help.github.com/articles/creating-and-highlighting-code-blocks/\n     - https://github.com/jneen/rouge/wiki/list-of-supported-languages-and-lexers\n-->\n<!--\n    <script>\n        async(\"http://cdn.bootcss.com/highlight.js/8.6/highlight.min.js\", function(){\n            hljs.initHighlightingOnLoad();\n        })\n    </script>\n    <link href=\"http://cdn.bootcss.com/highlight.js/8.6/styles/github.min.css\" rel=\"stylesheet\">\n-->\n\n\n\n\n\n\n\n<!--fastClick.js -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/fastclick/1.0.6/fastclick.min.js\", function () {\n        var $nav = document.querySelector(\"nav\");\n        if ($nav) FastClick.attach($nav);\n    })\n</script>\n\n\n<!-- Google Analytics -->\n\n\n\n<!-- Baidu Tongji -->\n\n\n\n<!-- Side Catalog -->\n\n<script type=\"text/javascript\">\n    function generateCatalog(selector) {\n\n        // interop with multilangual \n        if ('' == 'true') {\n            _containerSelector = 'div.post-container.active'\n        } else {\n            _containerSelector = 'div.post-container'\n        }\n\n        // init\n        var P = $(_containerSelector), a, n, t, l, i, c;\n        a = P.find('h1,h2,h3,h4,h5,h6');\n\n        // clean\n        $(selector).html('')\n\n        // appending\n        a.each(function () {\n            n = $(this).prop('tagName').toLowerCase();\n            i = \"#\" + $(this).prop('id');\n            t = $(this).text();\n            c = $('<a href=\"' + i + '\" rel=\"nofollow\">' + t + '</a>');\n            l = $('<li class=\"' + n + '_nav\"></li>').append(c);\n            $(selector).append(l);\n        });\n        return true;\n    }\n\n    generateCatalog(\".catalog-body\");\n\n    // toggle side catalog\n    $(\".catalog-toggle\").click((function (e) {\n        e.preventDefault();\n        $('.side-catalog').toggleClass(\"fold\")\n    }))\n\n    /*\n     * Doc: https://github.com/davist11/jQuery-One-Page-Nav\n     * Fork by Hux to support padding\n     */\n    async(\"/js/jquery.nav.js\", function () {\n        $('.catalog-body').onePageNav({\n            currentClass: \"active\",\n            changeHash: !1,\n            easing: \"swing\",\n            filter: \"\",\n            scrollSpeed: 700,\n            scrollOffset: 0,\n            scrollThreshold: .2,\n            begin: null,\n            end: null,\n            scrollChange: null,\n            padding: 80\n        });\n    });\n</script>\n\n\n\n<!-- Multi-Lingual -->\n\n\n<!-- Simple Jekyll Search -->\n<script>\n    // https://stackoverflow.com/questions/1912501/unescape-html-entities-in-javascript\n    function htmlDecode(input) {\n        var e = document.createElement('textarea');\n        e.innerHTML = input;\n        // handle case of empty input\n        return e.childNodes.length === 0 ? \"\" : e.childNodes[0].nodeValue;\n    }\n\n    SimpleJekyllSearch({\n        searchInput: document.getElementById('search-input'),\n        resultsContainer: document.getElementById('search-results'),\n        json: '/search.json',\n        searchResultTemplate: '<div class=\"post-preview item\"><a href=\"{url}\"><h2 class=\"post-title\">{title}</h2><h3 class=\"post-subtitle\">{subtitle}</h3><hr></a></div>',\n        noResultsText: 'No results',\n        limit: 50,\n        fuzzy: false,\n        // a hack to get escaped subtitle unescaped. for some reason, \n        // post.subtitle w/o escape filter nuke entire search.\n        templateMiddleware: function (prop, value, template) {\n            if (prop === 'subtitle' || prop === 'title') {\n                if (value.indexOf(\"code\")) {\n                    return htmlDecode(value);\n                } else {\n                    return value;\n                }\n            }\n        }\n    });\n\n    $(document).ready(function () {\n        var $searchPage = $('.search-page');\n        var $searchOpen = $('.search-icon');\n        var $searchClose = $('.search-icon-close');\n        var $searchInput = $('#search-input');\n        var $body = $('body');\n\n        $searchOpen.on('click', function (e) {\n            e.preventDefault();\n            $searchPage.toggleClass('search-active');\n            var prevClasses = $body.attr('class') || '';\n            setTimeout(function () {\n                $body.addClass('no-scroll');\n            }, 400)\n\n            if ($searchPage.hasClass('search-active')) {\n                $searchClose.on('click', function (e) {\n                    e.preventDefault();\n                    $searchPage.removeClass('search-active');\n                    $body.attr('class', prevClasses);  // from closure \n                });\n                $searchInput.focus();\n            }\n        });\n    });\n</script>\n\n\n<!-- Image to hack wechat -->\n<img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\" />\n<!-- Migrate from head to bottom, no longer block render and still work -->\n\n</body>\n\n</html>\n","excerpt":"<h1 id=\"ios组件化实践之新建一个pod组件库\">iOS组件化实践之：新建一个Pod组件库</h1>\n","url":"/2023/07/26/4-iOS%E7%BB%84%E4%BB%B6%E5%8C%96%E6%A8%A1%E6%9D%BF/","next":{"id":"/2023/07/26/5-iOS组件化-资源组件库","tags":[],"relative_path":"_posts/2023-07-26-5-iOS组件化-资源组件库.md","collection":"posts","content":"<h1 id=\"ios组件化实现之资源组件库\">iOS组件化实现之：资源组件库</h1>\n\n<h2 id=\"1-资源有哪些\">1 资源有哪些</h2>\n\n<p>​\t笼统的可以说，只要不是代码文件的，都可以算是资源文件，举些例子，包括但不限于：图片、音频、视频、动画、字体、多语言文件(.strings)、各类资源包、内置数据库、二进制加密文件不等</p>\n\n<h2 id=\"2-为什么要做\">2 为什么要做</h2>\n\n<p>​\t存在一些可复用的资源，举些例子，包括但不限于：</p>\n\n<ul>\n  <li>\n    <p>通用样式图标</p>\n\n    <p>导航条图标、头像、按钮、单/复选框、通用背景图片等</p>\n  </li>\n  <li>\n    <p>通用媒体文件</p>\n\n    <p>通用的点击音效、提示音、过场动画、加载动画等</p>\n  </li>\n  <li>\n    <p>其他通用文件</p>\n\n    <p>城市列表、字体、第三方预置资源等</p>\n  </li>\n</ul>\n\n<p>由于部分资源是有通用性，因此将这些通用资源提取出来，形成组件，可服务于更多项目，提升集成的效率，降低研发成本</p>\n\n<h2 id=\"3-怎么做\">3 怎么做</h2>\n\n<h3 id=\"31-新建一个pod私有库\">3.1 新建一个Pod私有库</h3>\n\n<p><a href=\"https://paysonchen.cn/2023/07/26/4-iOS%E7%BB%84%E4%BB%B6%E5%8C%96%E6%A8%A1%E6%9D%BF/\">此处省略一万字(查看另一篇文章)</a></p>\n\n<h3 id=\"32-迁移主工程资源\">3.2 迁移主工程资源</h3>\n\n<p>主工程：</p>\n\n<p>中的资源一般散落在各处，即遍是不一定全部存放在asset集合中，可以通过Xcode Project Navigator底部的搜索栏，通过后缀名(.png / .jpg /.webp /.mp3 /,mp4  ……)检索出资源</p>\n\n<p>资源组件库：</p>\n\n<p>asset文件夹下存放主工程迁移的资源。</p>\n\n<p>存放形式可以以下形式：</p>\n\n<ul>\n  <li>xcassets集合</li>\n  <li>散落的资源文件</li>\n</ul>\n\n<p>配置podspec：</p>\n\n<p>通过指定resource_bundles进行资源的配置</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n</pre></td><td class=\"rouge-code\"><pre>   <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">resource_bundles</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n     <span class=\"s1\">'PSCResource'</span> <span class=\"o\">=&gt;</span> <span class=\"p\">[</span>\n     <span class=\"s1\">'PSCResource/Assets/PSCCommon.xcassets'</span><span class=\"p\">,</span>\n     <span class=\"s1\">'PSCResource/Assets/PSCCommonResources/**/*'</span><span class=\"p\">,</span>\n     <span class=\"s1\">'PSCResource/Assets/XXProj.xcassets'</span><span class=\"p\">,</span>\n     <span class=\"s1\">'PSCResource/Assets/XXProjResources/**/*'</span><span class=\"p\">]</span>\n   <span class=\"p\">}</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h3 id=\"33-资源读取方式\">3.3 资源读取方式</h3>\n\n<p>资源组件化之前，使用一般是</p>\n\n<pre><code class=\"language-objective-c\">//图片:imageNamed\n[UIImage imageNamed:@\"pic\"];\n\n//资源:通过mainBundle进行：\n[[NSBundle mainBundle] pathForResource:@\"name\" ofType:@\"ext\"];\n</code></pre>\n\n<p>这是因为，主工程里的资源，一般是打包到xx.app的根目录（xcasset以asset.car存在）</p>\n\n<p>组件库里的资源是打包 xx.framework/xx.bundle</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n</pre></td><td class=\"rouge-code\"><pre>……/Debug-iphoneos/xxx.app/Frameworks/xx.framework/xx.bundle/pic.png\n……/Debug-iphoneos/xxx.app/Frameworks/xx.framework/xx.bundle/asset.car\n……\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>直接通过下列方法获取为空</p>\n\n<pre><code class=\"language-objective-c\">//组件库资源，通过以下方法获取为nil\n[UIImage imageNamed:@\"pic\"];\n[[NSBundle mainBundle] pathForResource:@\"name\" ofType:@\"ext\"];\n</code></pre>\n\n<p>组件库资源获取方法是为下列类添加类别</p>\n\n<ul>\n  <li>UIImage:</li>\n</ul>\n\n<pre><code class=\"language-objective-c\">@interface UIImage (PSCResource)\n\n/// 从 PSCResource 通过图片名称获取UIImage\n/// - Parameter name: 图片名称\n+ (UIImage *)pscImageNamed:(NSString *)name;\n\n@end\n\n@implementation UIImage (PSCResource)\n\n+ (UIImage *)pscImageNamed:(NSString *)name{\n    NSBundle *bundle = [NSBundle bundleForClass:NSClassFromString(kCurResPodName)];\n    NSURL *url = [bundle URLForResource:kCurResBunldeName withExtension:@\"bundle\"];\n    if (url) {\n        NSBundle *imageBundle = [NSBundle bundleWithURL:url];\n        UIImage *img = [UIImage imageNamed:name inBundle:imageBundle compatibleWithTraitCollection:nil];\n        if (img) {\n            return img;\n        }\n    }\n    //这里兜个底，兼容资源还在主工程的时候，使用mainBundle\n    return [UIImage imageNamed:name];\n}\n\n@end\n</code></pre>\n\n<ul>\n  <li>NSBunlde:</li>\n</ul>\n\n<pre><code class=\"language-objective-c\">@interface NSBundle (PSCResource)\n/// 私有库获取资源\n/// - Parameters:\n///   - name: 资源名\n///   - ext: 资源类别\n+ (NSString *)pscPathForResource:(NSString *)name ofType:(NSString *)ext;\n@end\n\n@implementation NSBundle (PSCResource)\n+ (NSString *)pscPathForResource:(NSString *)name ofType:(NSString *)ext {\n    \n    NSBundle *bundle = [NSBundle bundleForClass:NSClassFromString(kCurResPodName)];\n    NSURL *url = [bundle URLForResource:kCurResBunldeName withExtension:@\"bundle\"];\n    if (url) {\n        NSBundle *resBundle = [NSBundle bundleWithURL:url];\n        NSString *path = [resBundle pathForResource:name ofType:ext];\n        if (path) {\n            return path;\n        }\n    }\n    //这里兜个底，兼容资源还在主工程的时候，使用mainBundle\n    return [[NSBundle mainBundle] pathForResource:name ofType:ext];\n}\n@end\n</code></pre>\n\n<h3 id=\"34-主工程读取替换\">3.4 主工程读取替换</h3>\n\n<p>检索主工程里所有的方法：</p>\n\n<div class=\"language-objc highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n</pre></td><td class=\"rouge-code\"><pre><span class=\"p\">[</span><span class=\"n\">UIImage</span> <span class=\"nf\">imageNamed</span><span class=\"p\">:</span><span class=\"s\">@\"pic\"</span><span class=\"p\">];</span>\n<span class=\"p\">[[</span><span class=\"n\">NSBundle</span> <span class=\"nf\">mainBundle</span><span class=\"p\">]</span> <span class=\"nf\">pathForResource</span><span class=\"p\">:</span><span class=\"s\">@\"name\"</span> <span class=\"nf\">ofType</span><span class=\"p\">:</span><span class=\"s\">@\"ext\"</span><span class=\"p\">];</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>替换成:</p>\n\n<pre><code class=\"language-objective-c\">[UIImage pscImageNamed:@\"xx\"]\nNSString *hotPath = [NSBundle pscPathForResource:@\"yy\" ofType:@\"zz\"];\n</code></pre>\n\n<p>最后检验下上述调用是否正常？</p>\n","name":"2023-07-26-5-iOS组件化-资源组件库.md","previous":{"id":"/2023/07/26/4-iOS组件化模板","tags":[],"relative_path":"_posts/2023-07-26-4-iOS组件化模板.md","collection":"posts","name":"2023-07-26-4-iOS组件化模板.md","url":"/2023/07/26/4-iOS%E7%BB%84%E4%BB%B6%E5%8C%96%E6%A8%A1%E6%9D%BF/","title":"iOS组件化实践之：新建一个Pod组件库","date":"2023-07-26 00:00:00 +0800","categories":[],"path":"_posts/2023-07-26-4-iOS组件化模板.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/home-bg-geek.jpg","slug":"4-iOS组件化模板","ext":".md"},"output":"<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"google-site-verification\" content=\"xBT4GhYoi5qRD5tr338pgPM5OWHHIDR6mNg1a3euekI\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, viewport-fit=cover\">\n    <meta name=\"description\" content=\"与你一起发现更大的世界。\">\n    <meta name=\"keywords\"  content=\"PaysonChen,iOS,流媒体\">\n    <meta name=\"theme-color\" content=\"#000000\">\n    \n    <!-- Open Graph -->\n    <meta property=\"og:title\" content=\"iOS组件化实践之：资源组件库 - PaysonChen的博客 | PaysonChen Blog\">\n    \n    <meta property=\"og:type\" content=\"article\">\n    <meta property=\"og:description\" content=\"iOS组件化实现之：资源组件库\n\">\n    \n    \n    <meta property=\"article:published_time\" content=\"2023-07-26T00:00:00Z\">\n    \n    \n    <meta property=\"article:author\" content=\"PaysonChen\">\n    \n    \n    \n    <meta property=\"og:image\" content=\"http://localhost:4000\">\n    <meta property=\"og:url\" content=\"http://localhost:4000/2023/07/26/5-iOS%E7%BB%84%E4%BB%B6%E5%8C%96-%E8%B5%84%E6%BA%90%E7%BB%84%E4%BB%B6%E5%BA%93/\">\n    <meta property=\"og:site_name\" content=\"PaysonChen的博客 | PaysonChen Blog\">\n    \n    <title>iOS组件化实践之：资源组件库 - PaysonChen的博客 | PaysonChen Blog</title>\n\n    <!-- Web App Manifest -->\n    <link rel=\"manifest\" href=\"/pwa/manifest.json\">\n\n    <!-- Favicon -->\n    <link rel=\"shortcut icon\" href=\"/img/favicon.ico\">\n    \n    <!-- Canonical URL -->\n    <link rel=\"canonical\" href=\"http://localhost:4000/2023/07/26/5-iOS%E7%BB%84%E4%BB%B6%E5%8C%96-%E8%B5%84%E6%BA%90%E7%BB%84%E4%BB%B6%E5%BA%93/\">\n\n    <!-- Bootstrap Core CSS -->\n    <link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\">\n\n    <!-- Custom CSS -->\n    <link rel=\"stylesheet\" href=\"/css/hux-blog.min.css\">\n\n    <!-- Custom Fonts -->\n    <!-- <link href=\"http://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\"> -->\n    <!-- Hux change font-awesome CDN to qiniu -->\n    <link href=\"//cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\">\n\n\n    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->\n    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->\n    <!--[if lt IE 9]>\n        <script src=\"https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js\"></script>\n        <script src=\"https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js\"></script>\n    <![endif]-->\n\n    <!-- ga & ba script hoook -->\n    <script></script>\n</head>\n\n\n<!-- hack iOS CSS :active style -->\n<body ontouchstart=\"\">\n\n    <!-- Navigation -->\n\n    <nav class=\"navbar navbar-default navbar-custom navbar-fixed-top\">\n        \n        <div class=\"container-fluid\">\n            <!-- Brand and toggle get grouped for better mobile display -->\n            <div class=\"navbar-header page-scroll\">\n                <button type=\"button\" class=\"navbar-toggle\">\n                    <span class=\"sr-only\">Toggle navigation</span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                </button>\n                <a class=\"navbar-brand\" href=\"/\">PaysonChen Blog</a>\n            </div>\n\n            <!-- Collect the nav links, forms, and other content for toggling -->\n            <div id=\"huxblog_navbar\">\n                <div class=\"navbar-collapse\">\n                    <ul class=\"nav navbar-nav navbar-right\">\n                        <li>\n                            <a href=\"/\">Home</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        <li>\n                            <a href=\"/about/\">About</a>\n                        </li>\n                        \n                        \n                        \n                        <li>\n                            <a href=\"/archive/\">Archive</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        <li class=\"search-icon\">\n                            <a href=\"javascript:void(0)\">\n                                <i class=\"fa fa-search\"></i>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n            <!-- /.navbar-collapse -->\n        </div>\n        <!-- /.container -->\n    </nav>\n\n    <script>\n        // Drop Bootstarp low-performance Navbar\n        // Use customize navbar with high-quality material design animation\n        // in high-perf jank-free CSS3 implementation\n        var $body = document.body;\n        var $toggle = document.querySelector('.navbar-toggle');\n        var $navbar = document.querySelector('#huxblog_navbar');\n        var $collapse = document.querySelector('.navbar-collapse');\n\n        var __HuxNav__ = {\n            close: function () {\n                $navbar.className = \" \";\n                // wait until animation end.\n                setTimeout(function () {\n                    // prevent frequently toggle\n                    if ($navbar.className.indexOf('in') < 0) {\n                        $collapse.style.height = \"0px\"\n                    }\n                }, 400)\n            },\n            open: function () {\n                $collapse.style.height = \"auto\"\n                $navbar.className += \" in\";\n            }\n        }\n\n        // Bind Event\n        $toggle.addEventListener('click', function (e) {\n            if ($navbar.className.indexOf('in') > 0) {\n                __HuxNav__.close()\n            } else {\n                __HuxNav__.open()\n            }\n        })\n\n        /**\n         * Since Fastclick is used to delegate 'touchstart' globally\n         * to hack 300ms delay in iOS by performing a fake 'click',\n         * Using 'e.stopPropagation' to stop 'touchstart' event from \n         * $toggle/$collapse will break global delegation.\n         * \n         * Instead, we use a 'e.target' filter to prevent handler\n         * added to document close HuxNav.  \n         *\n         * Also, we use 'click' instead of 'touchstart' as compromise\n         */\n        document.addEventListener('click', function (e) {\n            if (e.target == $toggle) return;\n            if (e.target.className == 'icon-bar') return;\n            __HuxNav__.close();\n        })\n    </script>\n    <!-- Search -->\n<div class=\"search-page\">\n  <div class=\"search-icon-close-container\">\n    <span class=\"search-icon-close\">\n      <i class=\"fa fa-chevron-down\"></i>\n    </span>\n  </div>\n  <div class=\"search-main container\">\n    <div class=\"row\">\n      <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n        <form></form>\n        <input type=\"text\" id=\"search-input\" placeholder=\"$ grep...\">\n        </form>\n        <div id=\"search-results\" class=\"mini-post-list\"></div>\n      </div>\n    </div>\n  </div>\n</div>\n\n    <!-- Image to hack wechat -->\n<!-- <img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\"> -->\n<!-- <img src=\"/img/home-bg-geek.jpg\" width=\"0\" height=\"0\"> -->\n\n<!-- Post Header -->\n\n\n\n<style type=\"text/css\">\n    header.intro-header{\n        position: relative;\n        background-image: url('/img/home-bg-geek.jpg');\n        background: ;\n    }\n\n    \n</style>\n\n<header class=\"intro-header\" >\n\n    <div class=\"header-mask\"></div>\n    \n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <div class=\"post-heading\">\n                    <div class=\"tags\">\n                        \n                    </div>\n                    <h1>iOS组件化实践之：资源组件库</h1>\n                    \n                    <h2 class=\"subheading\"></h2>\n                    <span class=\"meta\">Posted by PaysonChen on July 26, 2023</span>\n                </div>\n            </div>\n        </div>\n    </div>\n</header>\n\n\n\n\n\n\n<!-- Post Content -->\n<article>\n    <div class=\"container\">\n        <div class=\"row\">\n\n    <!-- Post Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                post-container\">\n\n                <!-- Multi-Lingual -->\n                \n\n\t\t\t\t<h1 id=\"ios组件化实现之资源组件库\">iOS组件化实现之：资源组件库</h1>\n\n<h2 id=\"1-资源有哪些\">1 资源有哪些</h2>\n\n<p>​\t笼统的可以说，只要不是代码文件的，都可以算是资源文件，举些例子，包括但不限于：图片、音频、视频、动画、字体、多语言文件(.strings)、各类资源包、内置数据库、二进制加密文件不等</p>\n\n<h2 id=\"2-为什么要做\">2 为什么要做</h2>\n\n<p>​\t存在一些可复用的资源，举些例子，包括但不限于：</p>\n\n<ul>\n  <li>\n    <p>通用样式图标</p>\n\n    <p>导航条图标、头像、按钮、单/复选框、通用背景图片等</p>\n  </li>\n  <li>\n    <p>通用媒体文件</p>\n\n    <p>通用的点击音效、提示音、过场动画、加载动画等</p>\n  </li>\n  <li>\n    <p>其他通用文件</p>\n\n    <p>城市列表、字体、第三方预置资源等</p>\n  </li>\n</ul>\n\n<p>由于部分资源是有通用性，因此将这些通用资源提取出来，形成组件，可服务于更多项目，提升集成的效率，降低研发成本</p>\n\n<h2 id=\"3-怎么做\">3 怎么做</h2>\n\n<h3 id=\"31-新建一个pod私有库\">3.1 新建一个Pod私有库</h3>\n\n<p><a href=\"https://paysonchen.cn/2023/07/26/4-iOS%E7%BB%84%E4%BB%B6%E5%8C%96%E6%A8%A1%E6%9D%BF/\">此处省略一万字(查看另一篇文章)</a></p>\n\n<h3 id=\"32-迁移主工程资源\">3.2 迁移主工程资源</h3>\n\n<p>主工程：</p>\n\n<p>中的资源一般散落在各处，即遍是不一定全部存放在asset集合中，可以通过Xcode Project Navigator底部的搜索栏，通过后缀名(.png / .jpg /.webp /.mp3 /,mp4  ……)检索出资源</p>\n\n<p>资源组件库：</p>\n\n<p>asset文件夹下存放主工程迁移的资源。</p>\n\n<p>存放形式可以以下形式：</p>\n\n<ul>\n  <li>xcassets集合</li>\n  <li>散落的资源文件</li>\n</ul>\n\n<p>配置podspec：</p>\n\n<p>通过指定resource_bundles进行资源的配置</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n</pre></td><td class=\"rouge-code\"><pre>   <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">resource_bundles</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n     <span class=\"s1\">'PSCResource'</span> <span class=\"o\">=&gt;</span> <span class=\"p\">[</span>\n     <span class=\"s1\">'PSCResource/Assets/PSCCommon.xcassets'</span><span class=\"p\">,</span>\n     <span class=\"s1\">'PSCResource/Assets/PSCCommonResources/**/*'</span><span class=\"p\">,</span>\n     <span class=\"s1\">'PSCResource/Assets/XXProj.xcassets'</span><span class=\"p\">,</span>\n     <span class=\"s1\">'PSCResource/Assets/XXProjResources/**/*'</span><span class=\"p\">]</span>\n   <span class=\"p\">}</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h3 id=\"33-资源读取方式\">3.3 资源读取方式</h3>\n\n<p>资源组件化之前，使用一般是</p>\n\n<pre><code class=\"language-objective-c\">//图片:imageNamed\n[UIImage imageNamed:@\"pic\"];\n\n//资源:通过mainBundle进行：\n[[NSBundle mainBundle] pathForResource:@\"name\" ofType:@\"ext\"];\n</code></pre>\n\n<p>这是因为，主工程里的资源，一般是打包到xx.app的根目录（xcasset以asset.car存在）</p>\n\n<p>组件库里的资源是打包 xx.framework/xx.bundle</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n</pre></td><td class=\"rouge-code\"><pre>……/Debug-iphoneos/xxx.app/Frameworks/xx.framework/xx.bundle/pic.png\n……/Debug-iphoneos/xxx.app/Frameworks/xx.framework/xx.bundle/asset.car\n……\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>直接通过下列方法获取为空</p>\n\n<pre><code class=\"language-objective-c\">//组件库资源，通过以下方法获取为nil\n[UIImage imageNamed:@\"pic\"];\n[[NSBundle mainBundle] pathForResource:@\"name\" ofType:@\"ext\"];\n</code></pre>\n\n<p>组件库资源获取方法是为下列类添加类别</p>\n\n<ul>\n  <li>UIImage:</li>\n</ul>\n\n<pre><code class=\"language-objective-c\">@interface UIImage (PSCResource)\n\n/// 从 PSCResource 通过图片名称获取UIImage\n/// - Parameter name: 图片名称\n+ (UIImage *)pscImageNamed:(NSString *)name;\n\n@end\n\n@implementation UIImage (PSCResource)\n\n+ (UIImage *)pscImageNamed:(NSString *)name{\n    NSBundle *bundle = [NSBundle bundleForClass:NSClassFromString(kCurResPodName)];\n    NSURL *url = [bundle URLForResource:kCurResBunldeName withExtension:@\"bundle\"];\n    if (url) {\n        NSBundle *imageBundle = [NSBundle bundleWithURL:url];\n        UIImage *img = [UIImage imageNamed:name inBundle:imageBundle compatibleWithTraitCollection:nil];\n        if (img) {\n            return img;\n        }\n    }\n    //这里兜个底，兼容资源还在主工程的时候，使用mainBundle\n    return [UIImage imageNamed:name];\n}\n\n@end\n</code></pre>\n\n<ul>\n  <li>NSBunlde:</li>\n</ul>\n\n<pre><code class=\"language-objective-c\">@interface NSBundle (PSCResource)\n/// 私有库获取资源\n/// - Parameters:\n///   - name: 资源名\n///   - ext: 资源类别\n+ (NSString *)pscPathForResource:(NSString *)name ofType:(NSString *)ext;\n@end\n\n@implementation NSBundle (PSCResource)\n+ (NSString *)pscPathForResource:(NSString *)name ofType:(NSString *)ext {\n    \n    NSBundle *bundle = [NSBundle bundleForClass:NSClassFromString(kCurResPodName)];\n    NSURL *url = [bundle URLForResource:kCurResBunldeName withExtension:@\"bundle\"];\n    if (url) {\n        NSBundle *resBundle = [NSBundle bundleWithURL:url];\n        NSString *path = [resBundle pathForResource:name ofType:ext];\n        if (path) {\n            return path;\n        }\n    }\n    //这里兜个底，兼容资源还在主工程的时候，使用mainBundle\n    return [[NSBundle mainBundle] pathForResource:name ofType:ext];\n}\n@end\n</code></pre>\n\n<h3 id=\"34-主工程读取替换\">3.4 主工程读取替换</h3>\n\n<p>检索主工程里所有的方法：</p>\n\n<div class=\"language-objc highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n</pre></td><td class=\"rouge-code\"><pre><span class=\"p\">[</span><span class=\"n\">UIImage</span> <span class=\"nf\">imageNamed</span><span class=\"p\">:</span><span class=\"s\">@\"pic\"</span><span class=\"p\">];</span>\n<span class=\"p\">[[</span><span class=\"n\">NSBundle</span> <span class=\"nf\">mainBundle</span><span class=\"p\">]</span> <span class=\"nf\">pathForResource</span><span class=\"p\">:</span><span class=\"s\">@\"name\"</span> <span class=\"nf\">ofType</span><span class=\"p\">:</span><span class=\"s\">@\"ext\"</span><span class=\"p\">];</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>替换成:</p>\n\n<pre><code class=\"language-objective-c\">[UIImage pscImageNamed:@\"xx\"]\nNSString *hotPath = [NSBundle pscPathForResource:@\"yy\" ofType:@\"zz\"];\n</code></pre>\n\n<p>最后检验下上述调用是否正常？</p>\n\n\n                <hr style=\"visibility: hidden;\">\n                <ul class=\"pager\">\n                    \n                    <li class=\"previous\">\n                        <a href=\"/2023/07/26/4-iOS%E7%BB%84%E4%BB%B6%E5%8C%96%E6%A8%A1%E6%9D%BF/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"iOS组件化实践之：新建一个Pod组件库\">\n                        Previous<br>\n                        <span>iOS组件化实践之：新建一个Pod组件库</span>\n                        </a>\n                    </li>\n                    \n                    \n                    <li class=\"next\">\n                        <a href=\"/2023/07/31/6-iOS-%E7%BB%84%E4%BB%B6%E5%8C%96-%E5%91%BD%E5%90%8D%E6%B3%A8%E9%87%8A%E7%AF%87/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"iOS组件化实践之：类命名注释篇\">\n                        Next<br>\n                        <span>iOS组件化实践之：类命名注释篇</span>\n                        </a>\n                    </li>\n                    \n                </ul>\n                <hr style=\"visibility: hidden;\">\n\n                \n                <!-- disqus 评论框 start -->\n                <div class=\"comment\">\n                    <div id=\"disqus_thread\" class=\"disqus-thread\"></div>\n                </div>\n                <!-- disqus 评论框 end -->\n                \n\n                \n            </div>  \n\n    <!-- Side Catalog Container -->\n        \n            <div class=\"\n                col-lg-2 col-lg-offset-0\n                visible-lg-block\n                sidebar-container\n                catalog-container\">\n                <div class=\"side-catalog\">\n                    <hr class=\"hidden-sm hidden-xs\">\n                    <h5>\n                        <a class=\"catalog-toggle\" href=\"#\">CATALOG</a>\n                    </h5>\n                    <ul class=\"catalog-body\"></ul>\n                </div>\n            </div>\n        \n\n    <!-- Sidebar Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                sidebar-container\">\n\n                <!-- Featured Tags -->\n                \n\n\n<section>\n    \n        <hr class=\"hidden-sm hidden-xs\">\n    \n    <h5><a href=\"/archive/\">FEATURED TAGS</a></h5>\n    <div class=\"tags\">\n        \n        \n        \n        \n        \n    </div>\n</section>\n\n\n                <!-- Friends Blog -->\n                \n            </div>\n        </div>\n    </div>\n</article>\n\n<!-- add support for mathjax by voleking-->\n\n\n\n\n\n\n<!-- disqus 公共JS代码 start (一个网页只需插入一次) -->\n<script type=\"text/javascript\">\n    /* * * CONFIGURATION VARIABLES * * */\n    var disqus_shortname = \"Cyp\";\n    var disqus_identifier = \"/2023/07/26/5-iOS组件化-资源组件库\";\n    var disqus_url = \"http://localhost:4000/2023/07/26/5-iOS%E7%BB%84%E4%BB%B6%E5%8C%96-%E8%B5%84%E6%BA%90%E7%BB%84%E4%BB%B6%E5%BA%93/\";\n\n    (function() {\n        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;\n        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';\n        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);\n    })();\n</script>\n<!-- disqus 公共JS代码 end -->\n\n\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n      var d = document, t = 'script',\n          o = d.createElement(t),\n          s = d.getElementsByTagName(t)[0];\n      o.src = u;\n      if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n      s.parentNode.insertBefore(o, s);\n    }\n</script>\n<!-- anchor-js, Doc:http://bryanbraun.github.io/anchorjs/ -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/anchor-js/1.1.1/anchor.min.js\",function(){\n        anchors.options = {\n          visible: 'hover',\n          placement: 'right',\n          // icon: '#'\n        };\n        anchors.add().remove('.intro-header h1').remove('.subheading').remove('.sidebar-container h5');\n    })\n</script>\n<style>\n    /* place left on bigger screen */\n    @media all and (min-width: 800px) {\n        .anchorjs-link{\n            position: absolute;\n            left: -0.75em;\n            font-size: 1.1em;\n            margin-top : -0.1em;\n        }\n    }\n</style>\n\n\n\n    <!-- Footer -->\n<footer>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <!-- SNS Link -->\n                \n\n\n<ul class=\"list-inline text-center\">\n\n\n  \n  \n  \n  \n  \n  \n  \n</ul>\n\n                <p class=\"copyright text-muted\">\n                    Copyright &copy; PaysonChen Blog 2024\n                    <br>\n                    <!-- Powered by <a href=\"http://huangxuan.me\">Hux Blog</a> | -->\n                 <!--    <iframe style=\"margin-left: 2px; margin-bottom:-5px;\" frameborder=\"0\" scrolling=\"0\" width=\"100px\"\n                        height=\"20px\"\n                        src=\"https://ghbtns.com/github-btn.html?user=huxpro&repo=huxpro.github.io&type=star&count=true\">\n                    </iframe> -->\n                </p>\n            </div>\n        </div>\n    </div>\n</footer>\n\n<!-- jQuery -->\n<script src=\"/js/jquery.min.js \"></script>\n\n<!-- Bootstrap Core JavaScript -->\n<!-- Currently, only navbar scroll-down effect at desktop still depends on this -->\n<script src=\"/js/bootstrap.min.js \"></script>\n\n<!-- Custom Theme JavaScript -->\n<script src=\"/js/hux-blog.min.js \"></script>\n\n<!-- Simple Jekyll Search -->\n<script src=\"/js/simple-jekyll-search.min.js\"></script>\n\n<!-- Service Worker -->\n\n<script src=\"/js/snackbar.js \"></script>\n<script src=\"/js/sw-registration.js \"></script>\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n        var d = document, t = 'script',\n            o = d.createElement(t),\n            s = d.getElementsByTagName(t)[0];\n        o.src = u;\n        if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n        s.parentNode.insertBefore(o, s);\n    }\n</script>\n\n<!--\n     Because of the native support for backtick-style fenced code blocks\n     right within the Markdown is landed in Github Pages,\n     From V1.6, There is no need for Highlight.js,\n     so Huxblog drops it officially.\n\n     - https://github.com/blog/2100-github-pages-now-faster-and-simpler-with-jekyll-3-0\n     - https://help.github.com/articles/creating-and-highlighting-code-blocks/\n     - https://github.com/jneen/rouge/wiki/list-of-supported-languages-and-lexers\n-->\n<!--\n    <script>\n        async(\"http://cdn.bootcss.com/highlight.js/8.6/highlight.min.js\", function(){\n            hljs.initHighlightingOnLoad();\n        })\n    </script>\n    <link href=\"http://cdn.bootcss.com/highlight.js/8.6/styles/github.min.css\" rel=\"stylesheet\">\n-->\n\n\n\n\n\n\n\n<!--fastClick.js -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/fastclick/1.0.6/fastclick.min.js\", function () {\n        var $nav = document.querySelector(\"nav\");\n        if ($nav) FastClick.attach($nav);\n    })\n</script>\n\n\n<!-- Google Analytics -->\n\n\n\n<!-- Baidu Tongji -->\n\n\n\n<!-- Side Catalog -->\n\n<script type=\"text/javascript\">\n    function generateCatalog(selector) {\n\n        // interop with multilangual \n        if ('' == 'true') {\n            _containerSelector = 'div.post-container.active'\n        } else {\n            _containerSelector = 'div.post-container'\n        }\n\n        // init\n        var P = $(_containerSelector), a, n, t, l, i, c;\n        a = P.find('h1,h2,h3,h4,h5,h6');\n\n        // clean\n        $(selector).html('')\n\n        // appending\n        a.each(function () {\n            n = $(this).prop('tagName').toLowerCase();\n            i = \"#\" + $(this).prop('id');\n            t = $(this).text();\n            c = $('<a href=\"' + i + '\" rel=\"nofollow\">' + t + '</a>');\n            l = $('<li class=\"' + n + '_nav\"></li>').append(c);\n            $(selector).append(l);\n        });\n        return true;\n    }\n\n    generateCatalog(\".catalog-body\");\n\n    // toggle side catalog\n    $(\".catalog-toggle\").click((function (e) {\n        e.preventDefault();\n        $('.side-catalog').toggleClass(\"fold\")\n    }))\n\n    /*\n     * Doc: https://github.com/davist11/jQuery-One-Page-Nav\n     * Fork by Hux to support padding\n     */\n    async(\"/js/jquery.nav.js\", function () {\n        $('.catalog-body').onePageNav({\n            currentClass: \"active\",\n            changeHash: !1,\n            easing: \"swing\",\n            filter: \"\",\n            scrollSpeed: 700,\n            scrollOffset: 0,\n            scrollThreshold: .2,\n            begin: null,\n            end: null,\n            scrollChange: null,\n            padding: 80\n        });\n    });\n</script>\n\n\n\n<!-- Multi-Lingual -->\n\n\n<!-- Simple Jekyll Search -->\n<script>\n    // https://stackoverflow.com/questions/1912501/unescape-html-entities-in-javascript\n    function htmlDecode(input) {\n        var e = document.createElement('textarea');\n        e.innerHTML = input;\n        // handle case of empty input\n        return e.childNodes.length === 0 ? \"\" : e.childNodes[0].nodeValue;\n    }\n\n    SimpleJekyllSearch({\n        searchInput: document.getElementById('search-input'),\n        resultsContainer: document.getElementById('search-results'),\n        json: '/search.json',\n        searchResultTemplate: '<div class=\"post-preview item\"><a href=\"{url}\"><h2 class=\"post-title\">{title}</h2><h3 class=\"post-subtitle\">{subtitle}</h3><hr></a></div>',\n        noResultsText: 'No results',\n        limit: 50,\n        fuzzy: false,\n        // a hack to get escaped subtitle unescaped. for some reason, \n        // post.subtitle w/o escape filter nuke entire search.\n        templateMiddleware: function (prop, value, template) {\n            if (prop === 'subtitle' || prop === 'title') {\n                if (value.indexOf(\"code\")) {\n                    return htmlDecode(value);\n                } else {\n                    return value;\n                }\n            }\n        }\n    });\n\n    $(document).ready(function () {\n        var $searchPage = $('.search-page');\n        var $searchOpen = $('.search-icon');\n        var $searchClose = $('.search-icon-close');\n        var $searchInput = $('#search-input');\n        var $body = $('body');\n\n        $searchOpen.on('click', function (e) {\n            e.preventDefault();\n            $searchPage.toggleClass('search-active');\n            var prevClasses = $body.attr('class') || '';\n            setTimeout(function () {\n                $body.addClass('no-scroll');\n            }, 400)\n\n            if ($searchPage.hasClass('search-active')) {\n                $searchClose.on('click', function (e) {\n                    e.preventDefault();\n                    $searchPage.removeClass('search-active');\n                    $body.attr('class', prevClasses);  // from closure \n                });\n                $searchInput.focus();\n            }\n        });\n    });\n</script>\n\n\n<!-- Image to hack wechat -->\n<img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\" />\n<!-- Migrate from head to bottom, no longer block render and still work -->\n\n</body>\n\n</html>\n","excerpt":"<h1 id=\"ios组件化实现之资源组件库\">iOS组件化实现之：资源组件库</h1>\n","url":"/2023/07/26/5-iOS%E7%BB%84%E4%BB%B6%E5%8C%96-%E8%B5%84%E6%BA%90%E7%BB%84%E4%BB%B6%E5%BA%93/","next":{"id":"/2023/07/31/6-iOS-组件化-命名注释篇","tags":[],"relative_path":"_posts/2023-07-31-6-iOS-组件化-命名注释篇.md","collection":"posts","name":"2023-07-31-6-iOS-组件化-命名注释篇.md","url":"/2023/07/31/6-iOS-%E7%BB%84%E4%BB%B6%E5%8C%96-%E5%91%BD%E5%90%8D%E6%B3%A8%E9%87%8A%E7%AF%87/","title":"iOS组件化实践之：类命名注释篇","date":"2023-07-31 00:00:00 +0800","categories":[],"path":"_posts/2023-07-31-6-iOS-组件化-命名注释篇.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/home-bg-geek.jpg","slug":"6-iOS-组件化-命名注释篇","ext":".md"},"title":"iOS组件化实践之：资源组件库","date":"2023-07-26 00:00:00 +0800","categories":[],"path":"_posts/2023-07-26-5-iOS组件化-资源组件库.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/home-bg-geek.jpg","slug":"5-iOS组件化-资源组件库","ext":".md"},"title":"iOS组件化实践之：新建一个Pod组件库","date":"2023-07-26 00:00:00 +0800","categories":[],"path":"_posts/2023-07-26-4-iOS组件化模板.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/home-bg-geek.jpg","slug":"4-iOS组件化模板","ext":".md"},{"id":"/2023/07/20/iOS组件化实践二-实践过程碰到的问题","tags":[],"relative_path":"_posts/2023-07-20-iOS组件化实践二-实践过程碰到的问题.md","collection":"posts","content":"<h2 id=\"1-需求不断插入\">1 需求不断插入</h2>\n\n<h3 id=\"11问题描述\">1.1问题描述：</h3>\n\n<p>​\t一般而言，面临需要做组件化的团队，大概率是一个持续迭代的需求的过程，这过程不可避免会遇到业务需求的插入，如何保证即完成业务需求，又实现组件化进程，这是一个需要综合考量的课题。</p>\n\n<h3 id=\"12-问题解决\">1.2 问题解决</h3>\n\n<p>​\t由于需求和迭代与组件化是并行的，因此需要对组件化定义里程碑，每个里程碑对应响应的迭代班车，简而言之，例如：每个月迭代一个版本，组件化可以以月为单位，1～x个月为一个里程碑，每个里程碑跟上一个迭代版本，这样保证班车能带上迭代的业务需求，也能带上组件化里程碑的变更，同时记得同步项目其他团队、例如产品团队、Leader（如有必要）、测试团队（一定要）</p>\n\n<h2 id=\"2-多人协作问题\">2 多人协作问题</h2>\n\n<h3 id=\"21-背景\">2.1 背景</h3>\n\n<p>​\t一般而言，面临需要做组件化的团队，大概率不会只有1个开发人员（因为一个只有1个开发人员的项目和团队应该规模也不大，对组件化的需求不高），而会是一个至少中小型，那就可能面临需求与组件化的多人同步进行，需要经历阶段性代码合并，由于组件化是对框架改动较大的工程（需要不止移动类到Pod仓库，还有改名，增删类等），这就存在分支合并的频繁冲突</p>\n\n<h3 id=\"22-解决\">2.2 解决</h3>\n\n<h4 id=\"221分支管理\">2.2.1分支管理</h4>\n\n<h5 id=\"2211-主工程\">2.2.1.1 主工程</h5>\n\n<p>​\t常规需求迭代遵循gitflow分支管理，与之并行一个组件化分支，假设为 feature/modulization，如果feature有触发自动merge操作，为了不频繁解决冲突，可以考虑自行定义一个分支名（personal/xxx/modulization），在每次发布版本，合并完dev与master，并打完Tag之后，从release分支合并代码到modulization</p>\n\n<p>​\t由于组件化分支的主工程会频繁涉及到类的增删、类名修改，会引起project.pbxproj 文件大面积的变动，因此合并代码时，可能存在project.pbxproj 文件大量冲突</p>\n\n<p>​\t这里提供一个解决思路：</p>\n\n<p>​\t<strong>如果距离上次merge主工程框架变动较大时，可以考虑以modulization分支的project.pbxproj的版本来解决冲突，根据编译报错/或者事先记录下新增文件再进行逐一修复</strong></p>\n\n<h5 id=\"2212-组件库\">2.2.1.2 组件库</h5>\n\n<p>​\t由于modulization工程依赖的组件需要频繁的修改，因此频繁的打tag显得也不是特别必要，而且组件库的tag还必须经过严格管理，以保证常规进展的需求不受影响。</p>\n\n<p>​\t这里提供一个解决思路：</p>\n\n<p>​\t针对所有进展中的组件库新建分支：moduleModulization，在Podfile依赖时指定:</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n</pre></td><td class=\"rouge-code\"><pre>  <span class=\"n\">pod</span> <span class=\"s1\">'PSCDebugModule'</span> <span class=\"p\">,</span> <span class=\"ss\">:git</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'ssh://PSC-devops.psc.com:30022/PSC/PSC-ios/Pods/Private/PSCDebugModule.git'</span> <span class=\"p\">,</span> <span class=\"ss\">:configurations</span> <span class=\"o\">=&gt;</span> <span class=\"p\">[</span><span class=\"s1\">'Debug'</span><span class=\"p\">,</span> <span class=\"s1\">'DailyBuild'</span><span class=\"p\">,</span> <span class=\"s1\">'TFInner'</span><span class=\"p\">],</span> <span class=\"ss\">:branch</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'master'</span>\n  <span class=\"n\">pod</span> <span class=\"s1\">'PSCCommonUI'</span>    <span class=\"p\">,</span> <span class=\"ss\">:git</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'ssh://PSC-devops.psc.com:30022/PSC/PSC-ios/Pods/Private/PSCCommonUI.git'</span><span class=\"p\">,</span> <span class=\"ss\">:branch</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'master'</span>\n  <span class=\"n\">pod</span> <span class=\"s1\">'PSCFrameWork'</span> <span class=\"p\">,</span> <span class=\"ss\">:git</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'ssh://PSC-devops.psc.com:30022/PSC/PSC-ios/Pods/Private/PSCFrameWork.git'</span><span class=\"p\">,</span> <span class=\"ss\">:branch</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'master'</span>\n  <span class=\"n\">pod</span> <span class=\"s1\">'PSCLogModule'</span>   <span class=\"p\">,</span> <span class=\"ss\">:git</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'ssh://PSC-devops.psc.com:30022/PSC/PSC-ios/Pods/Private/PSCLogModule.git'</span><span class=\"p\">,</span> <span class=\"ss\">:branch</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'master'</span>\n  <span class=\"n\">pod</span> <span class=\"s1\">'PSCAbility'</span>     <span class=\"p\">,</span> <span class=\"ss\">:git</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'ssh://PSC-devops.psc.com:30022/PSC/PSC-ios/Pods/Private/PSCAbility.git'</span><span class=\"p\">,</span> <span class=\"ss\">:branch</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'master'</span>\n  <span class=\"n\">pod</span> <span class=\"s1\">'PSCResource'</span>     <span class=\"p\">,</span> <span class=\"ss\">:git</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'ssh://PSC-devops.psc.com:30022/PSC/PSC-ios/Pods/Private/PSCResource.git'</span><span class=\"p\">,</span> <span class=\"ss\">:branch</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'master'</span>\n  <span class=\"n\">pod</span> <span class=\"s1\">'PSCLogModule'</span>   <span class=\"p\">,</span> <span class=\"ss\">:git</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'ssh://PSC-devops.psc.com:30022/PSC/PSC-ios/Pods/Private/PSCLogModule.git'</span><span class=\"p\">,</span> <span class=\"ss\">:branch</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'master'</span>\n  <span class=\"n\">pod</span> <span class=\"s1\">'PSCBaseModule'</span>   <span class=\"p\">,</span> <span class=\"ss\">:git</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'ssh://PSC-devops.psc.com:30022/PSC/PSC-ios/Pods/Private/PSCBaseModule.git'</span><span class=\"p\">,</span> <span class=\"ss\">:branch</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'master'</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>同时在Podfile_local（Podfile_local可以参见 <a href=\"https://github.com/MeetYouDevs/cocoapods-imy-bin\">imy-bin</a>）配置</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n</pre></td><td class=\"rouge-code\"><pre><span class=\"n\">plugin</span> <span class=\"s1\">'cocoapods-imy-bin'</span>\n\n<span class=\"n\">target</span> <span class=\"s1\">'PSCEvogoiOS'</span> <span class=\"k\">do</span>\n    <span class=\"n\">pod</span> <span class=\"s1\">'PSCAbility'</span><span class=\"p\">,</span> <span class=\"ss\">:path</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'../../../../../CocoaPods/Private/PSCAbility'</span>\n    <span class=\"n\">pod</span> <span class=\"s1\">'PSCDebugModule'</span><span class=\"p\">,</span> <span class=\"ss\">:path</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'../../../../../CocoaPods/Private/PSCDebugModule'</span>\n    <span class=\"n\">pod</span> <span class=\"s1\">'PSCBaseModule'</span><span class=\"p\">,</span> <span class=\"ss\">:path</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'../../../../../CocoaPods/Private/PSCBaseModule'</span>\n    <span class=\"n\">pod</span> <span class=\"s1\">'PSCCommonUI'</span><span class=\"p\">,</span> <span class=\"ss\">:path</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'../../../../../CocoaPods/Private/PSCCommonUI'</span>\n    <span class=\"n\">pod</span> <span class=\"s1\">'PSCFrameWork'</span><span class=\"p\">,</span> <span class=\"ss\">:path</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'../../../../../CocoaPods/Private/PSCFrameWork'</span>\n    <span class=\"n\">pod</span> <span class=\"s1\">'PSCLogModule'</span><span class=\"p\">,</span> <span class=\"ss\">:path</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'../../../../../CocoaPods/Private/PSCLogModule'</span>\n    <span class=\"n\">pod</span> <span class=\"s1\">'PSCResource'</span><span class=\"p\">,</span> <span class=\"ss\">:path</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'../../../../../CocoaPods/Private/PSCResource'</span>\n    <span class=\"n\">pod</span> <span class=\"s1\">'PSCHybridModule'</span><span class=\"p\">,</span> <span class=\"ss\">:path</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'../../../../../CocoaPods/Private/PSCHybridModule'</span>\n    <span class=\"n\">pod</span> <span class=\"s1\">'PSCThirdPartyModule'</span><span class=\"p\">,</span> <span class=\"ss\">:path</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'../../../../../CocoaPods/Private/PSCThirdPartyModule'</span>\n<span class=\"k\">end</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>在本地构建时，可以使用：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>bdpod bin <span class=\"nb\">install</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>流水线构建时，可恢复分支依赖如下：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>bdpod <span class=\"nb\">install</span> <span class=\"nt\">--repo-update</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h4 id=\"222-分支合并\">2.2.2 分支合并</h4>\n\n<p>​\t分支合并时需要解决的冲突很多，一般存在下面几种情况：</p>\n\n<h5 id=\"2221-代码冲突\">2.2.2.1 代码冲突</h5>\n\n<p>​\t常规的冲突，以常规的方式解决，这边不多赘述。一般可以采用sourcetree，进行可视化操作。</p>\n\n<h5 id=\"2222-projectpbxproj冲突\">2.2.2.2 project.pbxproj冲突</h5>\n\n<p>​\t冲突不多时，也可以采用常规方式解决，如果冲突较多，解决的成本太高，可以参考上述：2.2.1.1 建议的方式进行</p>\n\n<h5 id=\"2223-文件冲突\">2.2.2.3 文件冲突</h5>\n\n<p>​\t文件冲突一般体现在：某个文件从主工程被迁移到组件库中or类名发生了变化，而其他分支上的修改者改动了这个文件，就会出现文件冲突，这个时候就需要对比组件库中或者新命名的类与冲突文件的变化。</p>\n\n<p>​\t这里提供一个解决思路：使用filemerge(Xcode自带)进行比较</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>/Applications/Xcode.app/Contents/Applications/FileMerge.app\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n","name":"2023-07-20-iOS组件化实践二-实践过程碰到的问题.md","previous":{"id":"/2023/07/14/iOS组件化实践一_序言","tags":[],"relative_path":"_posts/2023-07-14-iOS组件化实践一_序言.md","collection":"posts","content":"<h1 id=\"序言\">序言</h1>\n\n<p>过去十几年，国内移动互联网浪潮崛起，移动应用的构建也如雨后春笋，从一开始大约是在2011年业余开发者做一款播放器放到App Store可以产生最多百万月流水<sup>[1]</sup>， 到现在，满目琳琅到App，珍惜手机空间如金，不肯多装一款普通的App的时代，经历过一波又一波的技术革新，自从CocoaPods于2011年9月1日时编译了第一个公开版本<sup>[2]</sup>，开启了iOS项目拥有应用级别的依赖管理器到时代。</p>\n\n<p>在移动互联网领域从蓝海变成红海的过程中，项目构建的初期也慢慢从不拘小节的架构转向组件化架构的演进。</p>\n\n<h2 id=\"1-不拘小节的架构设计\">1. 不拘小节的架构设计</h2>\n\n<p>可以理解为一种为了</p>\n\n<ol>\n  <li>一些厂商快速试错，快速投入市场验证业务模式的可行性</li>\n  <li>一些厂商为了低成本快速交付一些外包项目</li>\n</ol>\n\n<p>上述实践有一个共同点，就是没有考虑到后续的持续维护的成本与代价。</p>\n\n<p>不拘小节的架构通常以如下方式存在：</p>\n\n<p><strong>1.1、初期的iOS项目以Project工程为主，各种从网上摘取</strong></p>\n\n<ol>\n  <li>代码块</li>\n  <li>各种功能类</li>\n  <li>某些开源或者不开源的能力库（以lib或者framework方式集成）</li>\n</ol>\n\n<p>拼接而成，</p>\n\n<p><strong>1.2、在引入CocoaPods之后</strong></p>\n\n<ol>\n  <li>代码块</li>\n  <li>各种功能类</li>\n  <li>某些开源或者不开源的能力库（以lib或者framework方式集成）</li>\n  <li>以CocoaPods的方式集成公有私有的代码库（轮子）</li>\n</ol>\n\n<p>不拘小节的架构一般用于中小型，短时间内交付的产品，上述方式可以做到快速实现以及交付的可视化效果，而可持续性维护则无人关心。</p>\n\n<p>随着一些厂商快速占领市场，以及试错验证可行之后，由于项目到架构随意，参与人员不稳定等因素，加上破窗效应，以及不断形成风气的降本增效的企业诉求，这些团队将会面临维护成本不断攀升的高昂代价。</p>\n\n<h2 id=\"2-组件化架构设计\">2. 组件化架构设计</h2>\n\n<h3 id=\"21-不拘小节的架构设计的现状\">2.1 不拘小节的架构设计的现状</h3>\n\n<p>不拘小节的架构团队会面临什么现状？大致可概括为：</p>\n\n<ol>\n  <li><strong>历史问题挤压多：</strong>代码冗余，诸多历史问题未能及时发现</li>\n  <li><strong>定位修复问题难：</strong>代码混乱，问题定位代码分散，定位成本大，修复不彻底</li>\n  <li><strong>需求开发周期长：</strong>没有清晰规划，导致需求开发重复造轮子，增加了研发成本</li>\n</ol>\n\n<h3 id=\"22-组件化架构设计解决的问题\">2.2 组件化架构设计解决的问题</h3>\n\n<p>不拘小节的架构设计随着时间推移会遇到哪些问题呢？大致可概括为：</p>\n\n<ol>\n  <li><strong>混乱</strong>：代码统一写在一个工程内部，查找定位问题困难</li>\n  <li><strong>冗余</strong>：相同功能的代码实现多套，修复问题不彻底</li>\n  <li><strong>不可复用</strong>：无可复用的模块，多App之间需要重复实现</li>\n</ol>\n\n<h3 id=\"23-组件化架构设计带来的问题\">2.3 组件化架构设计带来的问题</h3>\n\n<p>而组件化架构则可以弥补不拘小节的架构方式的诸多短板，降低项目的持续维护成本与代价，又能做到哪些改进呢？大概可概括为：</p>\n\n<ol>\n  <li><strong>高效解决问题：</strong>代码划分模块，修复问题及迭代维护形成闭环，提升效率</li>\n  <li><strong>清晰代码架构</strong>：清晰的调用链，解决问题漏改，改不全等逃逸到线上的问题</li>\n  <li><strong>可复用的能力</strong>：跨App共建能力，减少维护成本</li>\n</ol>\n\n<h2 id=\"3-组件化周期\">3. 组件化周期</h2>\n\n<p>​\t根据笔者在不同团队（初创团队～BAT一线团队）的观察，常规耗时根据项目大小和团队成员规模以及过程中的需求数量等情况大致为10～100人月/单端不等。笔者前公司是一线大厂，团队规模大，项目大，总共投入5～10人，前后1年6个月完成对现有项目的初步组件化改造，而对于创立之初的创业团队，这个代价往往只需要10%。考虑到成本问题，组件化宜早不宜迟。</p>\n\n<h2 id=\"4-组件化架构设计的思路\">4. 组件化架构设计的思路</h2>\n\n<ol>\n  <li>功能组件的清晰的定义与划分</li>\n  <li>层次分明的基础模块设计，</li>\n  <li>上层的业务模块解偶</li>\n</ol>\n\n<p><img src=\"/img/1-1.png\" alt=\"/img/1-1.png\" /></p>\n","name":"2023-07-14-iOS组件化实践一_序言.md","previous":{"id":"/2022/09/26/Github多账号配置SSH","tags":[],"relative_path":"_posts/2022-09-26-Github多账号配置SSH.md","collection":"posts","name":"2022-09-26-Github多账号配置SSH.md","url":"/2022/09/26/Github%E5%A4%9A%E8%B4%A6%E5%8F%B7%E9%85%8D%E7%BD%AESSH/","title":"Github多账号配置SSH","date":"2022-09-26 00:00:00 +0800","categories":[],"path":"_posts/2022-09-26-Github多账号配置SSH.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/home-bg-geek.jpg","slug":"Github多账号配置SSH","ext":".md"},"output":"<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"google-site-verification\" content=\"xBT4GhYoi5qRD5tr338pgPM5OWHHIDR6mNg1a3euekI\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, viewport-fit=cover\">\n    <meta name=\"description\" content=\"与你一起发现更大的世界。\">\n    <meta name=\"keywords\"  content=\"PaysonChen,iOS,流媒体\">\n    <meta name=\"theme-color\" content=\"#000000\">\n    \n    <!-- Open Graph -->\n    <meta property=\"og:title\" content=\"iOS组件化实践一：序言 - PaysonChen的博客 | PaysonChen Blog\">\n    \n    <meta property=\"og:type\" content=\"article\">\n    <meta property=\"og:description\" content=\"序言\n\">\n    \n    \n    <meta property=\"article:published_time\" content=\"2023-07-14T00:00:00Z\">\n    \n    \n    <meta property=\"article:author\" content=\"PaysonChen\">\n    \n    \n    \n    <meta property=\"og:image\" content=\"http://localhost:4000\">\n    <meta property=\"og:url\" content=\"http://localhost:4000/2023/07/14/iOS%E7%BB%84%E4%BB%B6%E5%8C%96%E5%AE%9E%E8%B7%B5%E4%B8%80_%E5%BA%8F%E8%A8%80/\">\n    <meta property=\"og:site_name\" content=\"PaysonChen的博客 | PaysonChen Blog\">\n    \n    <title>iOS组件化实践一：序言 - PaysonChen的博客 | PaysonChen Blog</title>\n\n    <!-- Web App Manifest -->\n    <link rel=\"manifest\" href=\"/pwa/manifest.json\">\n\n    <!-- Favicon -->\n    <link rel=\"shortcut icon\" href=\"/img/favicon.ico\">\n    \n    <!-- Canonical URL -->\n    <link rel=\"canonical\" href=\"http://localhost:4000/2023/07/14/iOS%E7%BB%84%E4%BB%B6%E5%8C%96%E5%AE%9E%E8%B7%B5%E4%B8%80_%E5%BA%8F%E8%A8%80/\">\n\n    <!-- Bootstrap Core CSS -->\n    <link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\">\n\n    <!-- Custom CSS -->\n    <link rel=\"stylesheet\" href=\"/css/hux-blog.min.css\">\n\n    <!-- Custom Fonts -->\n    <!-- <link href=\"http://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\"> -->\n    <!-- Hux change font-awesome CDN to qiniu -->\n    <link href=\"//cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\">\n\n\n    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->\n    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->\n    <!--[if lt IE 9]>\n        <script src=\"https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js\"></script>\n        <script src=\"https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js\"></script>\n    <![endif]-->\n\n    <!-- ga & ba script hoook -->\n    <script></script>\n</head>\n\n\n<!-- hack iOS CSS :active style -->\n<body ontouchstart=\"\">\n\n    <!-- Navigation -->\n\n    <nav class=\"navbar navbar-default navbar-custom navbar-fixed-top\">\n        \n        <div class=\"container-fluid\">\n            <!-- Brand and toggle get grouped for better mobile display -->\n            <div class=\"navbar-header page-scroll\">\n                <button type=\"button\" class=\"navbar-toggle\">\n                    <span class=\"sr-only\">Toggle navigation</span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                </button>\n                <a class=\"navbar-brand\" href=\"/\">PaysonChen Blog</a>\n            </div>\n\n            <!-- Collect the nav links, forms, and other content for toggling -->\n            <div id=\"huxblog_navbar\">\n                <div class=\"navbar-collapse\">\n                    <ul class=\"nav navbar-nav navbar-right\">\n                        <li>\n                            <a href=\"/\">Home</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        <li>\n                            <a href=\"/about/\">About</a>\n                        </li>\n                        \n                        \n                        \n                        <li>\n                            <a href=\"/archive/\">Archive</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        <li class=\"search-icon\">\n                            <a href=\"javascript:void(0)\">\n                                <i class=\"fa fa-search\"></i>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n            <!-- /.navbar-collapse -->\n        </div>\n        <!-- /.container -->\n    </nav>\n\n    <script>\n        // Drop Bootstarp low-performance Navbar\n        // Use customize navbar with high-quality material design animation\n        // in high-perf jank-free CSS3 implementation\n        var $body = document.body;\n        var $toggle = document.querySelector('.navbar-toggle');\n        var $navbar = document.querySelector('#huxblog_navbar');\n        var $collapse = document.querySelector('.navbar-collapse');\n\n        var __HuxNav__ = {\n            close: function () {\n                $navbar.className = \" \";\n                // wait until animation end.\n                setTimeout(function () {\n                    // prevent frequently toggle\n                    if ($navbar.className.indexOf('in') < 0) {\n                        $collapse.style.height = \"0px\"\n                    }\n                }, 400)\n            },\n            open: function () {\n                $collapse.style.height = \"auto\"\n                $navbar.className += \" in\";\n            }\n        }\n\n        // Bind Event\n        $toggle.addEventListener('click', function (e) {\n            if ($navbar.className.indexOf('in') > 0) {\n                __HuxNav__.close()\n            } else {\n                __HuxNav__.open()\n            }\n        })\n\n        /**\n         * Since Fastclick is used to delegate 'touchstart' globally\n         * to hack 300ms delay in iOS by performing a fake 'click',\n         * Using 'e.stopPropagation' to stop 'touchstart' event from \n         * $toggle/$collapse will break global delegation.\n         * \n         * Instead, we use a 'e.target' filter to prevent handler\n         * added to document close HuxNav.  \n         *\n         * Also, we use 'click' instead of 'touchstart' as compromise\n         */\n        document.addEventListener('click', function (e) {\n            if (e.target == $toggle) return;\n            if (e.target.className == 'icon-bar') return;\n            __HuxNav__.close();\n        })\n    </script>\n    <!-- Search -->\n<div class=\"search-page\">\n  <div class=\"search-icon-close-container\">\n    <span class=\"search-icon-close\">\n      <i class=\"fa fa-chevron-down\"></i>\n    </span>\n  </div>\n  <div class=\"search-main container\">\n    <div class=\"row\">\n      <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n        <form></form>\n        <input type=\"text\" id=\"search-input\" placeholder=\"$ grep...\">\n        </form>\n        <div id=\"search-results\" class=\"mini-post-list\"></div>\n      </div>\n    </div>\n  </div>\n</div>\n\n    <!-- Image to hack wechat -->\n<!-- <img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\"> -->\n<!-- <img src=\"/img/home-bg-geek.jpg\" width=\"0\" height=\"0\"> -->\n\n<!-- Post Header -->\n\n\n\n<style type=\"text/css\">\n    header.intro-header{\n        position: relative;\n        background-image: url('/img/home-bg-geek.jpg');\n        background: ;\n    }\n\n    \n</style>\n\n<header class=\"intro-header\" >\n\n    <div class=\"header-mask\"></div>\n    \n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <div class=\"post-heading\">\n                    <div class=\"tags\">\n                        \n                    </div>\n                    <h1>iOS组件化实践一：序言</h1>\n                    \n                    <h2 class=\"subheading\"></h2>\n                    <span class=\"meta\">Posted by PaysonChen on July 14, 2023</span>\n                </div>\n            </div>\n        </div>\n    </div>\n</header>\n\n\n\n\n\n\n<!-- Post Content -->\n<article>\n    <div class=\"container\">\n        <div class=\"row\">\n\n    <!-- Post Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                post-container\">\n\n                <!-- Multi-Lingual -->\n                \n\n\t\t\t\t<h1 id=\"序言\">序言</h1>\n\n<p>过去十几年，国内移动互联网浪潮崛起，移动应用的构建也如雨后春笋，从一开始大约是在2011年业余开发者做一款播放器放到App Store可以产生最多百万月流水<sup>[1]</sup>， 到现在，满目琳琅到App，珍惜手机空间如金，不肯多装一款普通的App的时代，经历过一波又一波的技术革新，自从CocoaPods于2011年9月1日时编译了第一个公开版本<sup>[2]</sup>，开启了iOS项目拥有应用级别的依赖管理器到时代。</p>\n\n<p>在移动互联网领域从蓝海变成红海的过程中，项目构建的初期也慢慢从不拘小节的架构转向组件化架构的演进。</p>\n\n<h2 id=\"1-不拘小节的架构设计\">1. 不拘小节的架构设计</h2>\n\n<p>可以理解为一种为了</p>\n\n<ol>\n  <li>一些厂商快速试错，快速投入市场验证业务模式的可行性</li>\n  <li>一些厂商为了低成本快速交付一些外包项目</li>\n</ol>\n\n<p>上述实践有一个共同点，就是没有考虑到后续的持续维护的成本与代价。</p>\n\n<p>不拘小节的架构通常以如下方式存在：</p>\n\n<p><strong>1.1、初期的iOS项目以Project工程为主，各种从网上摘取</strong></p>\n\n<ol>\n  <li>代码块</li>\n  <li>各种功能类</li>\n  <li>某些开源或者不开源的能力库（以lib或者framework方式集成）</li>\n</ol>\n\n<p>拼接而成，</p>\n\n<p><strong>1.2、在引入CocoaPods之后</strong></p>\n\n<ol>\n  <li>代码块</li>\n  <li>各种功能类</li>\n  <li>某些开源或者不开源的能力库（以lib或者framework方式集成）</li>\n  <li>以CocoaPods的方式集成公有私有的代码库（轮子）</li>\n</ol>\n\n<p>不拘小节的架构一般用于中小型，短时间内交付的产品，上述方式可以做到快速实现以及交付的可视化效果，而可持续性维护则无人关心。</p>\n\n<p>随着一些厂商快速占领市场，以及试错验证可行之后，由于项目到架构随意，参与人员不稳定等因素，加上破窗效应，以及不断形成风气的降本增效的企业诉求，这些团队将会面临维护成本不断攀升的高昂代价。</p>\n\n<h2 id=\"2-组件化架构设计\">2. 组件化架构设计</h2>\n\n<h3 id=\"21-不拘小节的架构设计的现状\">2.1 不拘小节的架构设计的现状</h3>\n\n<p>不拘小节的架构团队会面临什么现状？大致可概括为：</p>\n\n<ol>\n  <li><strong>历史问题挤压多：</strong>代码冗余，诸多历史问题未能及时发现</li>\n  <li><strong>定位修复问题难：</strong>代码混乱，问题定位代码分散，定位成本大，修复不彻底</li>\n  <li><strong>需求开发周期长：</strong>没有清晰规划，导致需求开发重复造轮子，增加了研发成本</li>\n</ol>\n\n<h3 id=\"22-组件化架构设计解决的问题\">2.2 组件化架构设计解决的问题</h3>\n\n<p>不拘小节的架构设计随着时间推移会遇到哪些问题呢？大致可概括为：</p>\n\n<ol>\n  <li><strong>混乱</strong>：代码统一写在一个工程内部，查找定位问题困难</li>\n  <li><strong>冗余</strong>：相同功能的代码实现多套，修复问题不彻底</li>\n  <li><strong>不可复用</strong>：无可复用的模块，多App之间需要重复实现</li>\n</ol>\n\n<h3 id=\"23-组件化架构设计带来的问题\">2.3 组件化架构设计带来的问题</h3>\n\n<p>而组件化架构则可以弥补不拘小节的架构方式的诸多短板，降低项目的持续维护成本与代价，又能做到哪些改进呢？大概可概括为：</p>\n\n<ol>\n  <li><strong>高效解决问题：</strong>代码划分模块，修复问题及迭代维护形成闭环，提升效率</li>\n  <li><strong>清晰代码架构</strong>：清晰的调用链，解决问题漏改，改不全等逃逸到线上的问题</li>\n  <li><strong>可复用的能力</strong>：跨App共建能力，减少维护成本</li>\n</ol>\n\n<h2 id=\"3-组件化周期\">3. 组件化周期</h2>\n\n<p>​\t根据笔者在不同团队（初创团队～BAT一线团队）的观察，常规耗时根据项目大小和团队成员规模以及过程中的需求数量等情况大致为10～100人月/单端不等。笔者前公司是一线大厂，团队规模大，项目大，总共投入5～10人，前后1年6个月完成对现有项目的初步组件化改造，而对于创立之初的创业团队，这个代价往往只需要10%。考虑到成本问题，组件化宜早不宜迟。</p>\n\n<h2 id=\"4-组件化架构设计的思路\">4. 组件化架构设计的思路</h2>\n\n<ol>\n  <li>功能组件的清晰的定义与划分</li>\n  <li>层次分明的基础模块设计，</li>\n  <li>上层的业务模块解偶</li>\n</ol>\n\n<p><img src=\"/img/1-1.png\" alt=\"/img/1-1.png\" /></p>\n\n\n                <hr style=\"visibility: hidden;\">\n                <ul class=\"pager\">\n                    \n                    <li class=\"previous\">\n                        <a href=\"/2022/09/26/Github%E5%A4%9A%E8%B4%A6%E5%8F%B7%E9%85%8D%E7%BD%AESSH/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Github多账号配置SSH\">\n                        Previous<br>\n                        <span>Github多账号配置SSH</span>\n                        </a>\n                    </li>\n                    \n                    \n                    <li class=\"next\">\n                        <a href=\"/2023/07/20/iOS%E7%BB%84%E4%BB%B6%E5%8C%96%E5%AE%9E%E8%B7%B5%E4%BA%8C-%E5%AE%9E%E8%B7%B5%E8%BF%87%E7%A8%8B%E7%A2%B0%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"iOS组件化实践二：实践过程碰到的问题\">\n                        Next<br>\n                        <span>iOS组件化实践二：实践过程碰到的问题</span>\n                        </a>\n                    </li>\n                    \n                </ul>\n                <hr style=\"visibility: hidden;\">\n\n                \n                <!-- disqus 评论框 start -->\n                <div class=\"comment\">\n                    <div id=\"disqus_thread\" class=\"disqus-thread\"></div>\n                </div>\n                <!-- disqus 评论框 end -->\n                \n\n                \n            </div>  \n\n    <!-- Side Catalog Container -->\n        \n            <div class=\"\n                col-lg-2 col-lg-offset-0\n                visible-lg-block\n                sidebar-container\n                catalog-container\">\n                <div class=\"side-catalog\">\n                    <hr class=\"hidden-sm hidden-xs\">\n                    <h5>\n                        <a class=\"catalog-toggle\" href=\"#\">CATALOG</a>\n                    </h5>\n                    <ul class=\"catalog-body\"></ul>\n                </div>\n            </div>\n        \n\n    <!-- Sidebar Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                sidebar-container\">\n\n                <!-- Featured Tags -->\n                \n\n\n<section>\n    \n        <hr class=\"hidden-sm hidden-xs\">\n    \n    <h5><a href=\"/archive/\">FEATURED TAGS</a></h5>\n    <div class=\"tags\">\n        \n        \n        \n        \n        \n    </div>\n</section>\n\n\n                <!-- Friends Blog -->\n                \n            </div>\n        </div>\n    </div>\n</article>\n\n<!-- add support for mathjax by voleking-->\n\n\n\n\n\n\n<!-- disqus 公共JS代码 start (一个网页只需插入一次) -->\n<script type=\"text/javascript\">\n    /* * * CONFIGURATION VARIABLES * * */\n    var disqus_shortname = \"Cyp\";\n    var disqus_identifier = \"/2023/07/14/iOS组件化实践一_序言\";\n    var disqus_url = \"http://localhost:4000/2023/07/14/iOS%E7%BB%84%E4%BB%B6%E5%8C%96%E5%AE%9E%E8%B7%B5%E4%B8%80_%E5%BA%8F%E8%A8%80/\";\n\n    (function() {\n        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;\n        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';\n        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);\n    })();\n</script>\n<!-- disqus 公共JS代码 end -->\n\n\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n      var d = document, t = 'script',\n          o = d.createElement(t),\n          s = d.getElementsByTagName(t)[0];\n      o.src = u;\n      if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n      s.parentNode.insertBefore(o, s);\n    }\n</script>\n<!-- anchor-js, Doc:http://bryanbraun.github.io/anchorjs/ -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/anchor-js/1.1.1/anchor.min.js\",function(){\n        anchors.options = {\n          visible: 'hover',\n          placement: 'right',\n          // icon: '#'\n        };\n        anchors.add().remove('.intro-header h1').remove('.subheading').remove('.sidebar-container h5');\n    })\n</script>\n<style>\n    /* place left on bigger screen */\n    @media all and (min-width: 800px) {\n        .anchorjs-link{\n            position: absolute;\n            left: -0.75em;\n            font-size: 1.1em;\n            margin-top : -0.1em;\n        }\n    }\n</style>\n\n\n\n    <!-- Footer -->\n<footer>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <!-- SNS Link -->\n                \n\n\n<ul class=\"list-inline text-center\">\n\n\n  \n  \n  \n  \n  \n  \n  \n</ul>\n\n                <p class=\"copyright text-muted\">\n                    Copyright &copy; PaysonChen Blog 2024\n                    <br>\n                    <!-- Powered by <a href=\"http://huangxuan.me\">Hux Blog</a> | -->\n                 <!--    <iframe style=\"margin-left: 2px; margin-bottom:-5px;\" frameborder=\"0\" scrolling=\"0\" width=\"100px\"\n                        height=\"20px\"\n                        src=\"https://ghbtns.com/github-btn.html?user=huxpro&repo=huxpro.github.io&type=star&count=true\">\n                    </iframe> -->\n                </p>\n            </div>\n        </div>\n    </div>\n</footer>\n\n<!-- jQuery -->\n<script src=\"/js/jquery.min.js \"></script>\n\n<!-- Bootstrap Core JavaScript -->\n<!-- Currently, only navbar scroll-down effect at desktop still depends on this -->\n<script src=\"/js/bootstrap.min.js \"></script>\n\n<!-- Custom Theme JavaScript -->\n<script src=\"/js/hux-blog.min.js \"></script>\n\n<!-- Simple Jekyll Search -->\n<script src=\"/js/simple-jekyll-search.min.js\"></script>\n\n<!-- Service Worker -->\n\n<script src=\"/js/snackbar.js \"></script>\n<script src=\"/js/sw-registration.js \"></script>\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n        var d = document, t = 'script',\n            o = d.createElement(t),\n            s = d.getElementsByTagName(t)[0];\n        o.src = u;\n        if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n        s.parentNode.insertBefore(o, s);\n    }\n</script>\n\n<!--\n     Because of the native support for backtick-style fenced code blocks\n     right within the Markdown is landed in Github Pages,\n     From V1.6, There is no need for Highlight.js,\n     so Huxblog drops it officially.\n\n     - https://github.com/blog/2100-github-pages-now-faster-and-simpler-with-jekyll-3-0\n     - https://help.github.com/articles/creating-and-highlighting-code-blocks/\n     - https://github.com/jneen/rouge/wiki/list-of-supported-languages-and-lexers\n-->\n<!--\n    <script>\n        async(\"http://cdn.bootcss.com/highlight.js/8.6/highlight.min.js\", function(){\n            hljs.initHighlightingOnLoad();\n        })\n    </script>\n    <link href=\"http://cdn.bootcss.com/highlight.js/8.6/styles/github.min.css\" rel=\"stylesheet\">\n-->\n\n\n\n\n\n\n\n<!--fastClick.js -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/fastclick/1.0.6/fastclick.min.js\", function () {\n        var $nav = document.querySelector(\"nav\");\n        if ($nav) FastClick.attach($nav);\n    })\n</script>\n\n\n<!-- Google Analytics -->\n\n\n\n<!-- Baidu Tongji -->\n\n\n\n<!-- Side Catalog -->\n\n<script type=\"text/javascript\">\n    function generateCatalog(selector) {\n\n        // interop with multilangual \n        if ('' == 'true') {\n            _containerSelector = 'div.post-container.active'\n        } else {\n            _containerSelector = 'div.post-container'\n        }\n\n        // init\n        var P = $(_containerSelector), a, n, t, l, i, c;\n        a = P.find('h1,h2,h3,h4,h5,h6');\n\n        // clean\n        $(selector).html('')\n\n        // appending\n        a.each(function () {\n            n = $(this).prop('tagName').toLowerCase();\n            i = \"#\" + $(this).prop('id');\n            t = $(this).text();\n            c = $('<a href=\"' + i + '\" rel=\"nofollow\">' + t + '</a>');\n            l = $('<li class=\"' + n + '_nav\"></li>').append(c);\n            $(selector).append(l);\n        });\n        return true;\n    }\n\n    generateCatalog(\".catalog-body\");\n\n    // toggle side catalog\n    $(\".catalog-toggle\").click((function (e) {\n        e.preventDefault();\n        $('.side-catalog').toggleClass(\"fold\")\n    }))\n\n    /*\n     * Doc: https://github.com/davist11/jQuery-One-Page-Nav\n     * Fork by Hux to support padding\n     */\n    async(\"/js/jquery.nav.js\", function () {\n        $('.catalog-body').onePageNav({\n            currentClass: \"active\",\n            changeHash: !1,\n            easing: \"swing\",\n            filter: \"\",\n            scrollSpeed: 700,\n            scrollOffset: 0,\n            scrollThreshold: .2,\n            begin: null,\n            end: null,\n            scrollChange: null,\n            padding: 80\n        });\n    });\n</script>\n\n\n\n<!-- Multi-Lingual -->\n\n\n<!-- Simple Jekyll Search -->\n<script>\n    // https://stackoverflow.com/questions/1912501/unescape-html-entities-in-javascript\n    function htmlDecode(input) {\n        var e = document.createElement('textarea');\n        e.innerHTML = input;\n        // handle case of empty input\n        return e.childNodes.length === 0 ? \"\" : e.childNodes[0].nodeValue;\n    }\n\n    SimpleJekyllSearch({\n        searchInput: document.getElementById('search-input'),\n        resultsContainer: document.getElementById('search-results'),\n        json: '/search.json',\n        searchResultTemplate: '<div class=\"post-preview item\"><a href=\"{url}\"><h2 class=\"post-title\">{title}</h2><h3 class=\"post-subtitle\">{subtitle}</h3><hr></a></div>',\n        noResultsText: 'No results',\n        limit: 50,\n        fuzzy: false,\n        // a hack to get escaped subtitle unescaped. for some reason, \n        // post.subtitle w/o escape filter nuke entire search.\n        templateMiddleware: function (prop, value, template) {\n            if (prop === 'subtitle' || prop === 'title') {\n                if (value.indexOf(\"code\")) {\n                    return htmlDecode(value);\n                } else {\n                    return value;\n                }\n            }\n        }\n    });\n\n    $(document).ready(function () {\n        var $searchPage = $('.search-page');\n        var $searchOpen = $('.search-icon');\n        var $searchClose = $('.search-icon-close');\n        var $searchInput = $('#search-input');\n        var $body = $('body');\n\n        $searchOpen.on('click', function (e) {\n            e.preventDefault();\n            $searchPage.toggleClass('search-active');\n            var prevClasses = $body.attr('class') || '';\n            setTimeout(function () {\n                $body.addClass('no-scroll');\n            }, 400)\n\n            if ($searchPage.hasClass('search-active')) {\n                $searchClose.on('click', function (e) {\n                    e.preventDefault();\n                    $searchPage.removeClass('search-active');\n                    $body.attr('class', prevClasses);  // from closure \n                });\n                $searchInput.focus();\n            }\n        });\n    });\n</script>\n\n\n<!-- Image to hack wechat -->\n<img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\" />\n<!-- Migrate from head to bottom, no longer block render and still work -->\n\n</body>\n\n</html>\n","excerpt":"<h1 id=\"序言\">序言</h1>\n","url":"/2023/07/14/iOS%E7%BB%84%E4%BB%B6%E5%8C%96%E5%AE%9E%E8%B7%B5%E4%B8%80_%E5%BA%8F%E8%A8%80/","next":{"id":"/2023/07/20/iOS组件化实践二-实践过程碰到的问题","tags":[],"relative_path":"_posts/2023-07-20-iOS组件化实践二-实践过程碰到的问题.md","collection":"posts","name":"2023-07-20-iOS组件化实践二-实践过程碰到的问题.md","url":"/2023/07/20/iOS%E7%BB%84%E4%BB%B6%E5%8C%96%E5%AE%9E%E8%B7%B5%E4%BA%8C-%E5%AE%9E%E8%B7%B5%E8%BF%87%E7%A8%8B%E7%A2%B0%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/","title":"iOS组件化实践二：实践过程碰到的问题","date":"2023-07-20 00:00:00 +0800","categories":[],"path":"_posts/2023-07-20-iOS组件化实践二-实践过程碰到的问题.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/home-bg-geek.jpg","slug":"iOS组件化实践二-实践过程碰到的问题","ext":".md"},"title":"iOS组件化实践一：序言","date":"2023-07-14 00:00:00 +0800","categories":[],"path":"_posts/2023-07-14-iOS组件化实践一_序言.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/home-bg-geek.jpg","slug":"iOS组件化实践一_序言","ext":".md"},"output":"<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"google-site-verification\" content=\"xBT4GhYoi5qRD5tr338pgPM5OWHHIDR6mNg1a3euekI\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, viewport-fit=cover\">\n    <meta name=\"description\" content=\"与你一起发现更大的世界。\">\n    <meta name=\"keywords\"  content=\"PaysonChen,iOS,流媒体\">\n    <meta name=\"theme-color\" content=\"#000000\">\n    \n    <!-- Open Graph -->\n    <meta property=\"og:title\" content=\"iOS组件化实践二：实践过程碰到的问题 - PaysonChen的博客 | PaysonChen Blog\">\n    \n    <meta property=\"og:type\" content=\"article\">\n    <meta property=\"og:description\" content=\"1 需求不断插入\n\">\n    \n    \n    <meta property=\"article:published_time\" content=\"2023-07-20T00:00:00Z\">\n    \n    \n    <meta property=\"article:author\" content=\"PaysonChen\">\n    \n    \n    \n    <meta property=\"og:image\" content=\"http://localhost:4000\">\n    <meta property=\"og:url\" content=\"http://localhost:4000/2023/07/20/iOS%E7%BB%84%E4%BB%B6%E5%8C%96%E5%AE%9E%E8%B7%B5%E4%BA%8C-%E5%AE%9E%E8%B7%B5%E8%BF%87%E7%A8%8B%E7%A2%B0%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/\">\n    <meta property=\"og:site_name\" content=\"PaysonChen的博客 | PaysonChen Blog\">\n    \n    <title>iOS组件化实践二：实践过程碰到的问题 - PaysonChen的博客 | PaysonChen Blog</title>\n\n    <!-- Web App Manifest -->\n    <link rel=\"manifest\" href=\"/pwa/manifest.json\">\n\n    <!-- Favicon -->\n    <link rel=\"shortcut icon\" href=\"/img/favicon.ico\">\n    \n    <!-- Canonical URL -->\n    <link rel=\"canonical\" href=\"http://localhost:4000/2023/07/20/iOS%E7%BB%84%E4%BB%B6%E5%8C%96%E5%AE%9E%E8%B7%B5%E4%BA%8C-%E5%AE%9E%E8%B7%B5%E8%BF%87%E7%A8%8B%E7%A2%B0%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/\">\n\n    <!-- Bootstrap Core CSS -->\n    <link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\">\n\n    <!-- Custom CSS -->\n    <link rel=\"stylesheet\" href=\"/css/hux-blog.min.css\">\n\n    <!-- Custom Fonts -->\n    <!-- <link href=\"http://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\"> -->\n    <!-- Hux change font-awesome CDN to qiniu -->\n    <link href=\"//cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\">\n\n\n    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->\n    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->\n    <!--[if lt IE 9]>\n        <script src=\"https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js\"></script>\n        <script src=\"https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js\"></script>\n    <![endif]-->\n\n    <!-- ga & ba script hoook -->\n    <script></script>\n</head>\n\n\n<!-- hack iOS CSS :active style -->\n<body ontouchstart=\"\">\n\n    <!-- Navigation -->\n\n    <nav class=\"navbar navbar-default navbar-custom navbar-fixed-top\">\n        \n        <div class=\"container-fluid\">\n            <!-- Brand and toggle get grouped for better mobile display -->\n            <div class=\"navbar-header page-scroll\">\n                <button type=\"button\" class=\"navbar-toggle\">\n                    <span class=\"sr-only\">Toggle navigation</span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                </button>\n                <a class=\"navbar-brand\" href=\"/\">PaysonChen Blog</a>\n            </div>\n\n            <!-- Collect the nav links, forms, and other content for toggling -->\n            <div id=\"huxblog_navbar\">\n                <div class=\"navbar-collapse\">\n                    <ul class=\"nav navbar-nav navbar-right\">\n                        <li>\n                            <a href=\"/\">Home</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        <li>\n                            <a href=\"/about/\">About</a>\n                        </li>\n                        \n                        \n                        \n                        <li>\n                            <a href=\"/archive/\">Archive</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        <li class=\"search-icon\">\n                            <a href=\"javascript:void(0)\">\n                                <i class=\"fa fa-search\"></i>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n            <!-- /.navbar-collapse -->\n        </div>\n        <!-- /.container -->\n    </nav>\n\n    <script>\n        // Drop Bootstarp low-performance Navbar\n        // Use customize navbar with high-quality material design animation\n        // in high-perf jank-free CSS3 implementation\n        var $body = document.body;\n        var $toggle = document.querySelector('.navbar-toggle');\n        var $navbar = document.querySelector('#huxblog_navbar');\n        var $collapse = document.querySelector('.navbar-collapse');\n\n        var __HuxNav__ = {\n            close: function () {\n                $navbar.className = \" \";\n                // wait until animation end.\n                setTimeout(function () {\n                    // prevent frequently toggle\n                    if ($navbar.className.indexOf('in') < 0) {\n                        $collapse.style.height = \"0px\"\n                    }\n                }, 400)\n            },\n            open: function () {\n                $collapse.style.height = \"auto\"\n                $navbar.className += \" in\";\n            }\n        }\n\n        // Bind Event\n        $toggle.addEventListener('click', function (e) {\n            if ($navbar.className.indexOf('in') > 0) {\n                __HuxNav__.close()\n            } else {\n                __HuxNav__.open()\n            }\n        })\n\n        /**\n         * Since Fastclick is used to delegate 'touchstart' globally\n         * to hack 300ms delay in iOS by performing a fake 'click',\n         * Using 'e.stopPropagation' to stop 'touchstart' event from \n         * $toggle/$collapse will break global delegation.\n         * \n         * Instead, we use a 'e.target' filter to prevent handler\n         * added to document close HuxNav.  \n         *\n         * Also, we use 'click' instead of 'touchstart' as compromise\n         */\n        document.addEventListener('click', function (e) {\n            if (e.target == $toggle) return;\n            if (e.target.className == 'icon-bar') return;\n            __HuxNav__.close();\n        })\n    </script>\n    <!-- Search -->\n<div class=\"search-page\">\n  <div class=\"search-icon-close-container\">\n    <span class=\"search-icon-close\">\n      <i class=\"fa fa-chevron-down\"></i>\n    </span>\n  </div>\n  <div class=\"search-main container\">\n    <div class=\"row\">\n      <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n        <form></form>\n        <input type=\"text\" id=\"search-input\" placeholder=\"$ grep...\">\n        </form>\n        <div id=\"search-results\" class=\"mini-post-list\"></div>\n      </div>\n    </div>\n  </div>\n</div>\n\n    <!-- Image to hack wechat -->\n<!-- <img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\"> -->\n<!-- <img src=\"/img/home-bg-geek.jpg\" width=\"0\" height=\"0\"> -->\n\n<!-- Post Header -->\n\n\n\n<style type=\"text/css\">\n    header.intro-header{\n        position: relative;\n        background-image: url('/img/home-bg-geek.jpg');\n        background: ;\n    }\n\n    \n</style>\n\n<header class=\"intro-header\" >\n\n    <div class=\"header-mask\"></div>\n    \n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <div class=\"post-heading\">\n                    <div class=\"tags\">\n                        \n                    </div>\n                    <h1>iOS组件化实践二：实践过程碰到的问题</h1>\n                    \n                    <h2 class=\"subheading\"></h2>\n                    <span class=\"meta\">Posted by PaysonChen on July 20, 2023</span>\n                </div>\n            </div>\n        </div>\n    </div>\n</header>\n\n\n\n\n\n\n<!-- Post Content -->\n<article>\n    <div class=\"container\">\n        <div class=\"row\">\n\n    <!-- Post Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                post-container\">\n\n                <!-- Multi-Lingual -->\n                \n\n\t\t\t\t<h2 id=\"1-需求不断插入\">1 需求不断插入</h2>\n\n<h3 id=\"11问题描述\">1.1问题描述：</h3>\n\n<p>​\t一般而言，面临需要做组件化的团队，大概率是一个持续迭代的需求的过程，这过程不可避免会遇到业务需求的插入，如何保证即完成业务需求，又实现组件化进程，这是一个需要综合考量的课题。</p>\n\n<h3 id=\"12-问题解决\">1.2 问题解决</h3>\n\n<p>​\t由于需求和迭代与组件化是并行的，因此需要对组件化定义里程碑，每个里程碑对应响应的迭代班车，简而言之，例如：每个月迭代一个版本，组件化可以以月为单位，1～x个月为一个里程碑，每个里程碑跟上一个迭代版本，这样保证班车能带上迭代的业务需求，也能带上组件化里程碑的变更，同时记得同步项目其他团队、例如产品团队、Leader（如有必要）、测试团队（一定要）</p>\n\n<h2 id=\"2-多人协作问题\">2 多人协作问题</h2>\n\n<h3 id=\"21-背景\">2.1 背景</h3>\n\n<p>​\t一般而言，面临需要做组件化的团队，大概率不会只有1个开发人员（因为一个只有1个开发人员的项目和团队应该规模也不大，对组件化的需求不高），而会是一个至少中小型，那就可能面临需求与组件化的多人同步进行，需要经历阶段性代码合并，由于组件化是对框架改动较大的工程（需要不止移动类到Pod仓库，还有改名，增删类等），这就存在分支合并的频繁冲突</p>\n\n<h3 id=\"22-解决\">2.2 解决</h3>\n\n<h4 id=\"221分支管理\">2.2.1分支管理</h4>\n\n<h5 id=\"2211-主工程\">2.2.1.1 主工程</h5>\n\n<p>​\t常规需求迭代遵循gitflow分支管理，与之并行一个组件化分支，假设为 feature/modulization，如果feature有触发自动merge操作，为了不频繁解决冲突，可以考虑自行定义一个分支名（personal/xxx/modulization），在每次发布版本，合并完dev与master，并打完Tag之后，从release分支合并代码到modulization</p>\n\n<p>​\t由于组件化分支的主工程会频繁涉及到类的增删、类名修改，会引起project.pbxproj 文件大面积的变动，因此合并代码时，可能存在project.pbxproj 文件大量冲突</p>\n\n<p>​\t这里提供一个解决思路：</p>\n\n<p>​\t<strong>如果距离上次merge主工程框架变动较大时，可以考虑以modulization分支的project.pbxproj的版本来解决冲突，根据编译报错/或者事先记录下新增文件再进行逐一修复</strong></p>\n\n<h5 id=\"2212-组件库\">2.2.1.2 组件库</h5>\n\n<p>​\t由于modulization工程依赖的组件需要频繁的修改，因此频繁的打tag显得也不是特别必要，而且组件库的tag还必须经过严格管理，以保证常规进展的需求不受影响。</p>\n\n<p>​\t这里提供一个解决思路：</p>\n\n<p>​\t针对所有进展中的组件库新建分支：moduleModulization，在Podfile依赖时指定:</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n</pre></td><td class=\"rouge-code\"><pre>  <span class=\"n\">pod</span> <span class=\"s1\">'PSCDebugModule'</span> <span class=\"p\">,</span> <span class=\"ss\">:git</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'ssh://PSC-devops.psc.com:30022/PSC/PSC-ios/Pods/Private/PSCDebugModule.git'</span> <span class=\"p\">,</span> <span class=\"ss\">:configurations</span> <span class=\"o\">=&gt;</span> <span class=\"p\">[</span><span class=\"s1\">'Debug'</span><span class=\"p\">,</span> <span class=\"s1\">'DailyBuild'</span><span class=\"p\">,</span> <span class=\"s1\">'TFInner'</span><span class=\"p\">],</span> <span class=\"ss\">:branch</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'master'</span>\n  <span class=\"n\">pod</span> <span class=\"s1\">'PSCCommonUI'</span>    <span class=\"p\">,</span> <span class=\"ss\">:git</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'ssh://PSC-devops.psc.com:30022/PSC/PSC-ios/Pods/Private/PSCCommonUI.git'</span><span class=\"p\">,</span> <span class=\"ss\">:branch</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'master'</span>\n  <span class=\"n\">pod</span> <span class=\"s1\">'PSCFrameWork'</span> <span class=\"p\">,</span> <span class=\"ss\">:git</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'ssh://PSC-devops.psc.com:30022/PSC/PSC-ios/Pods/Private/PSCFrameWork.git'</span><span class=\"p\">,</span> <span class=\"ss\">:branch</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'master'</span>\n  <span class=\"n\">pod</span> <span class=\"s1\">'PSCLogModule'</span>   <span class=\"p\">,</span> <span class=\"ss\">:git</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'ssh://PSC-devops.psc.com:30022/PSC/PSC-ios/Pods/Private/PSCLogModule.git'</span><span class=\"p\">,</span> <span class=\"ss\">:branch</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'master'</span>\n  <span class=\"n\">pod</span> <span class=\"s1\">'PSCAbility'</span>     <span class=\"p\">,</span> <span class=\"ss\">:git</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'ssh://PSC-devops.psc.com:30022/PSC/PSC-ios/Pods/Private/PSCAbility.git'</span><span class=\"p\">,</span> <span class=\"ss\">:branch</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'master'</span>\n  <span class=\"n\">pod</span> <span class=\"s1\">'PSCResource'</span>     <span class=\"p\">,</span> <span class=\"ss\">:git</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'ssh://PSC-devops.psc.com:30022/PSC/PSC-ios/Pods/Private/PSCResource.git'</span><span class=\"p\">,</span> <span class=\"ss\">:branch</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'master'</span>\n  <span class=\"n\">pod</span> <span class=\"s1\">'PSCLogModule'</span>   <span class=\"p\">,</span> <span class=\"ss\">:git</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'ssh://PSC-devops.psc.com:30022/PSC/PSC-ios/Pods/Private/PSCLogModule.git'</span><span class=\"p\">,</span> <span class=\"ss\">:branch</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'master'</span>\n  <span class=\"n\">pod</span> <span class=\"s1\">'PSCBaseModule'</span>   <span class=\"p\">,</span> <span class=\"ss\">:git</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'ssh://PSC-devops.psc.com:30022/PSC/PSC-ios/Pods/Private/PSCBaseModule.git'</span><span class=\"p\">,</span> <span class=\"ss\">:branch</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'master'</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>同时在Podfile_local（Podfile_local可以参见 <a href=\"https://github.com/MeetYouDevs/cocoapods-imy-bin\">imy-bin</a>）配置</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n</pre></td><td class=\"rouge-code\"><pre><span class=\"n\">plugin</span> <span class=\"s1\">'cocoapods-imy-bin'</span>\n\n<span class=\"n\">target</span> <span class=\"s1\">'PSCEvogoiOS'</span> <span class=\"k\">do</span>\n    <span class=\"n\">pod</span> <span class=\"s1\">'PSCAbility'</span><span class=\"p\">,</span> <span class=\"ss\">:path</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'../../../../../CocoaPods/Private/PSCAbility'</span>\n    <span class=\"n\">pod</span> <span class=\"s1\">'PSCDebugModule'</span><span class=\"p\">,</span> <span class=\"ss\">:path</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'../../../../../CocoaPods/Private/PSCDebugModule'</span>\n    <span class=\"n\">pod</span> <span class=\"s1\">'PSCBaseModule'</span><span class=\"p\">,</span> <span class=\"ss\">:path</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'../../../../../CocoaPods/Private/PSCBaseModule'</span>\n    <span class=\"n\">pod</span> <span class=\"s1\">'PSCCommonUI'</span><span class=\"p\">,</span> <span class=\"ss\">:path</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'../../../../../CocoaPods/Private/PSCCommonUI'</span>\n    <span class=\"n\">pod</span> <span class=\"s1\">'PSCFrameWork'</span><span class=\"p\">,</span> <span class=\"ss\">:path</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'../../../../../CocoaPods/Private/PSCFrameWork'</span>\n    <span class=\"n\">pod</span> <span class=\"s1\">'PSCLogModule'</span><span class=\"p\">,</span> <span class=\"ss\">:path</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'../../../../../CocoaPods/Private/PSCLogModule'</span>\n    <span class=\"n\">pod</span> <span class=\"s1\">'PSCResource'</span><span class=\"p\">,</span> <span class=\"ss\">:path</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'../../../../../CocoaPods/Private/PSCResource'</span>\n    <span class=\"n\">pod</span> <span class=\"s1\">'PSCHybridModule'</span><span class=\"p\">,</span> <span class=\"ss\">:path</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'../../../../../CocoaPods/Private/PSCHybridModule'</span>\n    <span class=\"n\">pod</span> <span class=\"s1\">'PSCThirdPartyModule'</span><span class=\"p\">,</span> <span class=\"ss\">:path</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'../../../../../CocoaPods/Private/PSCThirdPartyModule'</span>\n<span class=\"k\">end</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>在本地构建时，可以使用：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>bdpod bin <span class=\"nb\">install</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>流水线构建时，可恢复分支依赖如下：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>bdpod <span class=\"nb\">install</span> <span class=\"nt\">--repo-update</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h4 id=\"222-分支合并\">2.2.2 分支合并</h4>\n\n<p>​\t分支合并时需要解决的冲突很多，一般存在下面几种情况：</p>\n\n<h5 id=\"2221-代码冲突\">2.2.2.1 代码冲突</h5>\n\n<p>​\t常规的冲突，以常规的方式解决，这边不多赘述。一般可以采用sourcetree，进行可视化操作。</p>\n\n<h5 id=\"2222-projectpbxproj冲突\">2.2.2.2 project.pbxproj冲突</h5>\n\n<p>​\t冲突不多时，也可以采用常规方式解决，如果冲突较多，解决的成本太高，可以参考上述：2.2.1.1 建议的方式进行</p>\n\n<h5 id=\"2223-文件冲突\">2.2.2.3 文件冲突</h5>\n\n<p>​\t文件冲突一般体现在：某个文件从主工程被迁移到组件库中or类名发生了变化，而其他分支上的修改者改动了这个文件，就会出现文件冲突，这个时候就需要对比组件库中或者新命名的类与冲突文件的变化。</p>\n\n<p>​\t这里提供一个解决思路：使用filemerge(Xcode自带)进行比较</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>/Applications/Xcode.app/Contents/Applications/FileMerge.app\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n\n\n                <hr style=\"visibility: hidden;\">\n                <ul class=\"pager\">\n                    \n                    <li class=\"previous\">\n                        <a href=\"/2023/07/14/iOS%E7%BB%84%E4%BB%B6%E5%8C%96%E5%AE%9E%E8%B7%B5%E4%B8%80_%E5%BA%8F%E8%A8%80/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"iOS组件化实践一：序言\">\n                        Previous<br>\n                        <span>iOS组件化实践一：序言</span>\n                        </a>\n                    </li>\n                    \n                    \n                    <li class=\"next\">\n                        <a href=\"/2023/07/26/4-iOS%E7%BB%84%E4%BB%B6%E5%8C%96%E6%A8%A1%E6%9D%BF/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"iOS组件化实践之：新建一个Pod组件库\">\n                        Next<br>\n                        <span>iOS组件化实践之：新建一个Pod组件库</span>\n                        </a>\n                    </li>\n                    \n                </ul>\n                <hr style=\"visibility: hidden;\">\n\n                \n                <!-- disqus 评论框 start -->\n                <div class=\"comment\">\n                    <div id=\"disqus_thread\" class=\"disqus-thread\"></div>\n                </div>\n                <!-- disqus 评论框 end -->\n                \n\n                \n            </div>  \n\n    <!-- Side Catalog Container -->\n        \n            <div class=\"\n                col-lg-2 col-lg-offset-0\n                visible-lg-block\n                sidebar-container\n                catalog-container\">\n                <div class=\"side-catalog\">\n                    <hr class=\"hidden-sm hidden-xs\">\n                    <h5>\n                        <a class=\"catalog-toggle\" href=\"#\">CATALOG</a>\n                    </h5>\n                    <ul class=\"catalog-body\"></ul>\n                </div>\n            </div>\n        \n\n    <!-- Sidebar Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                sidebar-container\">\n\n                <!-- Featured Tags -->\n                \n\n\n<section>\n    \n        <hr class=\"hidden-sm hidden-xs\">\n    \n    <h5><a href=\"/archive/\">FEATURED TAGS</a></h5>\n    <div class=\"tags\">\n        \n        \n        \n        \n        \n    </div>\n</section>\n\n\n                <!-- Friends Blog -->\n                \n            </div>\n        </div>\n    </div>\n</article>\n\n<!-- add support for mathjax by voleking-->\n\n\n\n\n\n\n<!-- disqus 公共JS代码 start (一个网页只需插入一次) -->\n<script type=\"text/javascript\">\n    /* * * CONFIGURATION VARIABLES * * */\n    var disqus_shortname = \"Cyp\";\n    var disqus_identifier = \"/2023/07/20/iOS组件化实践二-实践过程碰到的问题\";\n    var disqus_url = \"http://localhost:4000/2023/07/20/iOS%E7%BB%84%E4%BB%B6%E5%8C%96%E5%AE%9E%E8%B7%B5%E4%BA%8C-%E5%AE%9E%E8%B7%B5%E8%BF%87%E7%A8%8B%E7%A2%B0%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/\";\n\n    (function() {\n        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;\n        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';\n        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);\n    })();\n</script>\n<!-- disqus 公共JS代码 end -->\n\n\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n      var d = document, t = 'script',\n          o = d.createElement(t),\n          s = d.getElementsByTagName(t)[0];\n      o.src = u;\n      if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n      s.parentNode.insertBefore(o, s);\n    }\n</script>\n<!-- anchor-js, Doc:http://bryanbraun.github.io/anchorjs/ -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/anchor-js/1.1.1/anchor.min.js\",function(){\n        anchors.options = {\n          visible: 'hover',\n          placement: 'right',\n          // icon: '#'\n        };\n        anchors.add().remove('.intro-header h1').remove('.subheading').remove('.sidebar-container h5');\n    })\n</script>\n<style>\n    /* place left on bigger screen */\n    @media all and (min-width: 800px) {\n        .anchorjs-link{\n            position: absolute;\n            left: -0.75em;\n            font-size: 1.1em;\n            margin-top : -0.1em;\n        }\n    }\n</style>\n\n\n\n    <!-- Footer -->\n<footer>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <!-- SNS Link -->\n                \n\n\n<ul class=\"list-inline text-center\">\n\n\n  \n  \n  \n  \n  \n  \n  \n</ul>\n\n                <p class=\"copyright text-muted\">\n                    Copyright &copy; PaysonChen Blog 2024\n                    <br>\n                    <!-- Powered by <a href=\"http://huangxuan.me\">Hux Blog</a> | -->\n                 <!--    <iframe style=\"margin-left: 2px; margin-bottom:-5px;\" frameborder=\"0\" scrolling=\"0\" width=\"100px\"\n                        height=\"20px\"\n                        src=\"https://ghbtns.com/github-btn.html?user=huxpro&repo=huxpro.github.io&type=star&count=true\">\n                    </iframe> -->\n                </p>\n            </div>\n        </div>\n    </div>\n</footer>\n\n<!-- jQuery -->\n<script src=\"/js/jquery.min.js \"></script>\n\n<!-- Bootstrap Core JavaScript -->\n<!-- Currently, only navbar scroll-down effect at desktop still depends on this -->\n<script src=\"/js/bootstrap.min.js \"></script>\n\n<!-- Custom Theme JavaScript -->\n<script src=\"/js/hux-blog.min.js \"></script>\n\n<!-- Simple Jekyll Search -->\n<script src=\"/js/simple-jekyll-search.min.js\"></script>\n\n<!-- Service Worker -->\n\n<script src=\"/js/snackbar.js \"></script>\n<script src=\"/js/sw-registration.js \"></script>\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n        var d = document, t = 'script',\n            o = d.createElement(t),\n            s = d.getElementsByTagName(t)[0];\n        o.src = u;\n        if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n        s.parentNode.insertBefore(o, s);\n    }\n</script>\n\n<!--\n     Because of the native support for backtick-style fenced code blocks\n     right within the Markdown is landed in Github Pages,\n     From V1.6, There is no need for Highlight.js,\n     so Huxblog drops it officially.\n\n     - https://github.com/blog/2100-github-pages-now-faster-and-simpler-with-jekyll-3-0\n     - https://help.github.com/articles/creating-and-highlighting-code-blocks/\n     - https://github.com/jneen/rouge/wiki/list-of-supported-languages-and-lexers\n-->\n<!--\n    <script>\n        async(\"http://cdn.bootcss.com/highlight.js/8.6/highlight.min.js\", function(){\n            hljs.initHighlightingOnLoad();\n        })\n    </script>\n    <link href=\"http://cdn.bootcss.com/highlight.js/8.6/styles/github.min.css\" rel=\"stylesheet\">\n-->\n\n\n\n\n\n\n\n<!--fastClick.js -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/fastclick/1.0.6/fastclick.min.js\", function () {\n        var $nav = document.querySelector(\"nav\");\n        if ($nav) FastClick.attach($nav);\n    })\n</script>\n\n\n<!-- Google Analytics -->\n\n\n\n<!-- Baidu Tongji -->\n\n\n\n<!-- Side Catalog -->\n\n<script type=\"text/javascript\">\n    function generateCatalog(selector) {\n\n        // interop with multilangual \n        if ('' == 'true') {\n            _containerSelector = 'div.post-container.active'\n        } else {\n            _containerSelector = 'div.post-container'\n        }\n\n        // init\n        var P = $(_containerSelector), a, n, t, l, i, c;\n        a = P.find('h1,h2,h3,h4,h5,h6');\n\n        // clean\n        $(selector).html('')\n\n        // appending\n        a.each(function () {\n            n = $(this).prop('tagName').toLowerCase();\n            i = \"#\" + $(this).prop('id');\n            t = $(this).text();\n            c = $('<a href=\"' + i + '\" rel=\"nofollow\">' + t + '</a>');\n            l = $('<li class=\"' + n + '_nav\"></li>').append(c);\n            $(selector).append(l);\n        });\n        return true;\n    }\n\n    generateCatalog(\".catalog-body\");\n\n    // toggle side catalog\n    $(\".catalog-toggle\").click((function (e) {\n        e.preventDefault();\n        $('.side-catalog').toggleClass(\"fold\")\n    }))\n\n    /*\n     * Doc: https://github.com/davist11/jQuery-One-Page-Nav\n     * Fork by Hux to support padding\n     */\n    async(\"/js/jquery.nav.js\", function () {\n        $('.catalog-body').onePageNav({\n            currentClass: \"active\",\n            changeHash: !1,\n            easing: \"swing\",\n            filter: \"\",\n            scrollSpeed: 700,\n            scrollOffset: 0,\n            scrollThreshold: .2,\n            begin: null,\n            end: null,\n            scrollChange: null,\n            padding: 80\n        });\n    });\n</script>\n\n\n\n<!-- Multi-Lingual -->\n\n\n<!-- Simple Jekyll Search -->\n<script>\n    // https://stackoverflow.com/questions/1912501/unescape-html-entities-in-javascript\n    function htmlDecode(input) {\n        var e = document.createElement('textarea');\n        e.innerHTML = input;\n        // handle case of empty input\n        return e.childNodes.length === 0 ? \"\" : e.childNodes[0].nodeValue;\n    }\n\n    SimpleJekyllSearch({\n        searchInput: document.getElementById('search-input'),\n        resultsContainer: document.getElementById('search-results'),\n        json: '/search.json',\n        searchResultTemplate: '<div class=\"post-preview item\"><a href=\"{url}\"><h2 class=\"post-title\">{title}</h2><h3 class=\"post-subtitle\">{subtitle}</h3><hr></a></div>',\n        noResultsText: 'No results',\n        limit: 50,\n        fuzzy: false,\n        // a hack to get escaped subtitle unescaped. for some reason, \n        // post.subtitle w/o escape filter nuke entire search.\n        templateMiddleware: function (prop, value, template) {\n            if (prop === 'subtitle' || prop === 'title') {\n                if (value.indexOf(\"code\")) {\n                    return htmlDecode(value);\n                } else {\n                    return value;\n                }\n            }\n        }\n    });\n\n    $(document).ready(function () {\n        var $searchPage = $('.search-page');\n        var $searchOpen = $('.search-icon');\n        var $searchClose = $('.search-icon-close');\n        var $searchInput = $('#search-input');\n        var $body = $('body');\n\n        $searchOpen.on('click', function (e) {\n            e.preventDefault();\n            $searchPage.toggleClass('search-active');\n            var prevClasses = $body.attr('class') || '';\n            setTimeout(function () {\n                $body.addClass('no-scroll');\n            }, 400)\n\n            if ($searchPage.hasClass('search-active')) {\n                $searchClose.on('click', function (e) {\n                    e.preventDefault();\n                    $searchPage.removeClass('search-active');\n                    $body.attr('class', prevClasses);  // from closure \n                });\n                $searchInput.focus();\n            }\n        });\n    });\n</script>\n\n\n<!-- Image to hack wechat -->\n<img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\" />\n<!-- Migrate from head to bottom, no longer block render and still work -->\n\n</body>\n\n</html>\n","excerpt":"<h2 id=\"1-需求不断插入\">1 需求不断插入</h2>\n","url":"/2023/07/20/iOS%E7%BB%84%E4%BB%B6%E5%8C%96%E5%AE%9E%E8%B7%B5%E4%BA%8C-%E5%AE%9E%E8%B7%B5%E8%BF%87%E7%A8%8B%E7%A2%B0%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/","next":{"id":"/2023/07/26/4-iOS组件化模板","tags":[],"relative_path":"_posts/2023-07-26-4-iOS组件化模板.md","collection":"posts","content":"<h1 id=\"ios组件化实践之新建一个pod组件库\">iOS组件化实践之：新建一个Pod组件库</h1>\n\n<h2 id=\"0背景\">0.背景</h2>\n\n<p>在IOS组件化的实践过程中，</p>\n\n<ul>\n  <li>规划期间需要对组件进行定义、功能划分、接口设计等</li>\n  <li>实践期间需要对组件进行创建，迁移主工程能力等</li>\n</ul>\n\n<p>这过程，就看你需要较为频繁地创建Pod组件库，因此对于了解一下，Pod组件的创建，及其模板的使用与修改，变成较为重要</p>\n\n<h2 id=\"1-通过常规模板创建\">1. 通过常规模板创建</h2>\n\n<p>CocoaPods提供的创建指令：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>pod lib create xx\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>通过输出可以看到：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>Cloning <span class=\"sb\">`</span>https://github.com/CocoaPods/pod-template.git<span class=\"sb\">`</span> into <span class=\"sb\">`</span>xx<span class=\"sb\">`</span><span class=\"nb\">.</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>此命令默认从 <a href=\"https://github.com/CocoaPods/pod-template\">github Pod-template</a>，下载默认模板进行创建，依次回答几个问题之后</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n</pre></td><td class=\"rouge-code\"><pre>What platform <span class=\"k\">do </span>you want to use?? <span class=\"o\">[</span> iOS / macOS <span class=\"o\">]</span>\n <span class=\"o\">&gt;</span> \nios\nWhat language <span class=\"k\">do </span>you want to use?? <span class=\"o\">[</span> Swift / ObjC <span class=\"o\">]</span>\n <span class=\"o\">&gt;</span> \nswift\nWould you like to include a demo application with your library? <span class=\"o\">[</span> Yes / No <span class=\"o\">]</span>\n <span class=\"o\">&gt;</span> \n<span class=\"nb\">yes\n</span>Which testing frameworks will you use? <span class=\"o\">[</span> Quick / None <span class=\"o\">]</span>\n <span class=\"o\">&gt;</span> \nquick\nWould you like to <span class=\"k\">do </span>view based testing? <span class=\"o\">[</span> Yes / No <span class=\"o\">]</span>\n <span class=\"o\">&gt;</span> \n<span class=\"nb\">yes</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>当前路径下就生成了一个Pod仓库，Spec文件如下：</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n</pre></td><td class=\"rouge-code\"><pre><span class=\"no\">Pod</span><span class=\"o\">::</span><span class=\"no\">Spec</span><span class=\"p\">.</span><span class=\"nf\">new</span> <span class=\"k\">do</span> <span class=\"o\">|</span><span class=\"n\">s</span><span class=\"o\">|</span>\n  <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">name</span>             <span class=\"o\">=</span> <span class=\"s1\">'xx'</span>\n  <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">version</span>          <span class=\"o\">=</span> <span class=\"s1\">'0.1.0'</span>\n  <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">summary</span>          <span class=\"o\">=</span> <span class=\"s1\">'A short description of xx.'</span>\n\n<span class=\"c1\"># This description is used to generate tags and improve search results.</span>\n<span class=\"c1\">#   * Think: What does it do? Why did you write it? What is the focus?</span>\n<span class=\"c1\">#   * Try to keep it short, snappy and to the point.</span>\n<span class=\"c1\">#   * Write the description between the DESC delimiters below.</span>\n<span class=\"c1\">#   * Finally, don't worry about the indent, CocoaPods strips it!</span>\n\n  <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">description</span>      <span class=\"o\">=</span> <span class=\"o\">&lt;&lt;-</span><span class=\"no\">DESC</span><span class=\"sh\">\nTODO: Add long description of the pod here.\n</span><span class=\"no\">                       DESC</span>\n\n  <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">homepage</span>         <span class=\"o\">=</span> <span class=\"s1\">'https://github.com/chenyp/xx'</span>\n  <span class=\"c1\"># s.screenshots     = 'www.example.com/screenshots_1', 'www.example.com/screenshots_2'</span>\n  <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">license</span>          <span class=\"o\">=</span> <span class=\"p\">{</span> <span class=\"ss\">:type</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'MIT'</span><span class=\"p\">,</span> <span class=\"ss\">:file</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'LICENSE'</span> <span class=\"p\">}</span>\n  <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">author</span>           <span class=\"o\">=</span> <span class=\"p\">{</span> <span class=\"s1\">'chenyp'</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'165685965@qq.com'</span> <span class=\"p\">}</span>\n  <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">source</span>           <span class=\"o\">=</span> <span class=\"p\">{</span> <span class=\"ss\">:git</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'https://github.com/chenyp/xx.git'</span><span class=\"p\">,</span> <span class=\"ss\">:tag</span> <span class=\"o\">=&gt;</span> <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">version</span><span class=\"p\">.</span><span class=\"nf\">to_s</span> <span class=\"p\">}</span>\n  <span class=\"c1\"># s.social_media_url = 'https://twitter.com/&lt;TWITTER_USERNAME&gt;'</span>\n\n  <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">ios</span><span class=\"p\">.</span><span class=\"nf\">deployment_target</span> <span class=\"o\">=</span> <span class=\"s1\">'10.0'</span>\n\n  <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">source_files</span> <span class=\"o\">=</span> <span class=\"s1\">'xx/Classes/**/*'</span>\n  \n  <span class=\"c1\"># s.resource_bundles = {</span>\n  <span class=\"c1\">#   'xx' =&gt; ['xx/Assets/*.png']</span>\n  <span class=\"c1\"># }</span>\n\n  <span class=\"c1\"># s.public_header_files = 'Pod/Classes/**/*.h'</span>\n  <span class=\"c1\"># s.frameworks = 'UIKit', 'MapKit'</span>\n  <span class=\"c1\"># s.dependency 'AFNetworking', '~&gt; 2.3'</span>\n<span class=\"k\">end</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h2 id=\"2-通过自定义模板创建\">2. 通过自定义模板创建</h2>\n\n<p>一般而言，不建议通过上述方式进行创建，默认以git全局配置的name、email字段，加上github主页进行填充，因为默认模板所创建的诸多字段是必要修改的（不改无法通过私有组件部署）：</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n</pre></td><td class=\"rouge-code\"><pre>  <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">homepage</span>         <span class=\"o\">=</span> <span class=\"s1\">'https://github.com/chenyp/xx'</span>\n  <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">author</span>           <span class=\"o\">=</span> <span class=\"p\">{</span> <span class=\"s1\">'chenyp'</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'165685965@qq.com'</span> <span class=\"p\">}</span>\n  <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">source</span>           <span class=\"o\">=</span> <span class=\"p\">{</span> <span class=\"ss\">:git</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'https://github.com/chenyp/xx.git'</span><span class=\"p\">,</span> <span class=\"ss\">:tag</span> <span class=\"o\">=&gt;</span> <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">version</span><span class=\"p\">.</span><span class=\"nf\">to_s</span> <span class=\"p\">}</span>\n<span class=\"err\">……</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>由于组件化的过程是需要频繁创建多个组件仓库，如果每次都改上述字段，有可能错改漏改，导致效率低下，基于懒惰是程序员的美德这一不成文的追求（其实应该是尽量能把重复工作流程化），着手对上述模板进行修改。</p>\n\n<p>自定义模板创建：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>git clone git@github.com:CocoaPods/pod-template.git\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>通过修改仓库中的“<strong>NAME.podspec</strong>”文件中的相关字段</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n</pre></td><td class=\"rouge-code\"><pre>  <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">homepage</span>         <span class=\"o\">=</span> <span class=\"s1\">'https://内网githost/name/xx'</span>\n  <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">author</span>           <span class=\"o\">=</span> <span class=\"p\">{</span> <span class=\"s1\">'内网git提交commit姓名'</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'内网git提交commit email'</span> <span class=\"p\">}</span>\n  <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">source</span>           <span class=\"o\">=</span> <span class=\"p\">{</span> <span class=\"ss\">:git</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'https://内网githost/name/xx.git'</span><span class=\"p\">,</span> <span class=\"ss\">:tag</span> <span class=\"o\">=&gt;</span> <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">version</span><span class=\"p\">.</span><span class=\"nf\">to_s</span> <span class=\"p\">}</span>\t<span class=\"c1\">#clone 组件库地址</span>\n<span class=\"err\">……</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>修改后将上述模板放到git仓库上，执行：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre> pod lib create xx  <span class=\"nt\">--template-url</span><span class=\"o\">=</span>ssh://内网githost/ios/Pods/Tmplate/XXX_Pod_Tmeplate.git\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h2 id=\"3-通过高度自定义模板创建\">3. 通过高度自定义模板创建</h2>\n\n<p>一般而言，到上述即可完成基础的模板自定义，减少创建私有库后所需的重复修改字段的工作量，但是对于下列选项的一致性，如果能省略冗余及提高统一性，自然更好了：</p>\n\n<ul class=\"task-list\">\n  <li class=\"task-list-item\">\n    <p><input type=\"checkbox\" class=\"task-list-item-checkbox\" disabled=\"disabled\" checked=\"checked\" />平台选择的冗余（iOS）</p>\n  </li>\n  <li class=\"task-list-item\">\n    <p><input type=\"checkbox\" class=\"task-list-item-checkbox\" disabled=\"disabled\" checked=\"checked\" />代码风格的统一（类名前缀）</p>\n  </li>\n  <li class=\"task-list-item\">\n    <p><input type=\"checkbox\" class=\"task-list-item-checkbox\" disabled=\"disabled\" />语言统一（iOS/Swift）</p>\n  </li>\n  <li class=\"task-list-item\">\n    <p><input type=\"checkbox\" class=\"task-list-item-checkbox\" disabled=\"disabled\" checked=\"checked\" />Demo工程</p>\n  </li>\n  <li class=\"task-list-item\">\n    <p><input type=\"checkbox\" class=\"task-list-item-checkbox\" disabled=\"disabled\" checked=\"checked\" />测试依赖</p>\n  </li>\n</ul>\n\n<p>这就需要对pod-template的ruby代码进行修改已达到不需要重复设定模板交互的目的：</p>\n\n<p>模板配置：TemplateConfigurator.rb</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n</pre></td><td class=\"rouge-code\"><pre>    <span class=\"k\">def</span> <span class=\"nf\">run</span>\n      <span class=\"vi\">@message_bank</span><span class=\"p\">.</span><span class=\"nf\">welcome_message</span>\n\n      <span class=\"n\">platform</span> <span class=\"o\">=</span> <span class=\"nb\">self</span><span class=\"p\">.</span><span class=\"nf\">ask_with_answers</span><span class=\"p\">(</span><span class=\"s2\">\"What platform do you want to use?\"</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s2\">\"iOS\"</span><span class=\"p\">,</span> <span class=\"s2\">\"macOS\"</span><span class=\"p\">]).</span><span class=\"nf\">to_sym</span>\n\n      <span class=\"k\">case</span> <span class=\"n\">platform</span>\n        <span class=\"k\">when</span> <span class=\"ss\">:macos</span>\n          <span class=\"no\">ConfigureMacOSSwift</span><span class=\"p\">.</span><span class=\"nf\">perform</span><span class=\"p\">(</span><span class=\"ss\">configurator: </span><span class=\"nb\">self</span><span class=\"p\">)</span>\n        <span class=\"k\">when</span> <span class=\"ss\">:ios</span>\n          <span class=\"n\">framework</span> <span class=\"o\">=</span> <span class=\"nb\">self</span><span class=\"p\">.</span><span class=\"nf\">ask_with_answers</span><span class=\"p\">(</span><span class=\"s2\">\"What language do you want to use?\"</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s2\">\"Swift\"</span><span class=\"p\">,</span> <span class=\"s2\">\"ObjC\"</span><span class=\"p\">]).</span><span class=\"nf\">to_sym</span>\n          <span class=\"k\">case</span> <span class=\"n\">framework</span>\n            <span class=\"k\">when</span> <span class=\"ss\">:swift</span>\n              <span class=\"no\">ConfigureSwift</span><span class=\"p\">.</span><span class=\"nf\">perform</span><span class=\"p\">(</span><span class=\"ss\">configurator: </span><span class=\"nb\">self</span><span class=\"p\">)</span>\n\n            <span class=\"k\">when</span> <span class=\"ss\">:objc</span>\n              <span class=\"no\">ConfigureIOS</span><span class=\"p\">.</span><span class=\"nf\">perform</span><span class=\"p\">(</span><span class=\"ss\">configurator: </span><span class=\"nb\">self</span><span class=\"p\">)</span>\n          <span class=\"k\">end</span>\n      <span class=\"k\">end</span>\n      \n      <span class=\"c1\">#……此处省略后面的代码……#</span>\n    <span class=\"k\">end</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>改为：</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n</pre></td><td class=\"rouge-code\"><pre>    <span class=\"k\">def</span> <span class=\"nf\">run</span>\n      <span class=\"vi\">@message_bank</span><span class=\"p\">.</span><span class=\"nf\">welcome_message</span>\n\n      <span class=\"c1\">#自定义模板优化：这里可以绕过了一些问题（免回答iOS、Objc）,当然如果想要设置成其他的，也可以调用其他方法，或者恢复询问式配置</span>\n      <span class=\"no\">ConfigureIOS</span><span class=\"p\">.</span><span class=\"nf\">perform</span><span class=\"p\">(</span><span class=\"ss\">configurator: </span><span class=\"nb\">self</span><span class=\"p\">)</span>\n      \n<span class=\"c1\">#      platform = self.ask_with_answers(\"What platform do you want to use?\", [\"iOS\", \"macOS\"]).to_sym</span>\n<span class=\"c1\">#</span>\n<span class=\"c1\">#      case platform</span>\n<span class=\"c1\">#        when :macos</span>\n<span class=\"c1\">#          ConfigureMacOSSwift.perform(configurator: self)</span>\n<span class=\"c1\">#        when :ios</span>\n<span class=\"c1\">#          framework = self.ask_with_answers(\"What language do you want to use?\", [\"Swift\", \"ObjC\"]).to_sym</span>\n<span class=\"c1\">#          case framework</span>\n<span class=\"c1\">#            when :swift</span>\n<span class=\"c1\">#              ConfigureSwift.perform(configurator: self)</span>\n<span class=\"c1\">#</span>\n<span class=\"c1\">#            when :objc</span>\n<span class=\"c1\">#              ConfigureIOS.perform(configurator: self)</span>\n<span class=\"c1\">#          end</span>\n<span class=\"c1\">#      end</span>\n\n      <span class=\"c1\">#……此处省略后面的代码……#</span>\n    <span class=\"k\">end</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>选择了相关语言，就在相关语言的 Configure 内配置后续的设置，例如：选择了iOS，就在ConfigureIOS.rb配置:</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n</pre></td><td class=\"rouge-code\"><pre>    <span class=\"k\">def</span> <span class=\"nf\">perform</span>\n\n      <span class=\"n\">keep_demo</span> <span class=\"o\">=</span> <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">ask_with_answers</span><span class=\"p\">(</span><span class=\"s2\">\"Would you like to include a demo application with your library\"</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s2\">\"Yes\"</span><span class=\"p\">,</span> <span class=\"s2\">\"No\"</span><span class=\"p\">]).</span><span class=\"nf\">to_sym</span>\n\n      <span class=\"n\">framework</span> <span class=\"o\">=</span> <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">ask_with_answers</span><span class=\"p\">(</span><span class=\"s2\">\"Which testing frameworks will you use\"</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s2\">\"Specta\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Kiwi\"</span><span class=\"p\">,</span> <span class=\"s2\">\"None\"</span><span class=\"p\">]).</span><span class=\"nf\">to_sym</span>\n      <span class=\"k\">case</span> <span class=\"n\">framework</span>\n        <span class=\"k\">when</span> <span class=\"ss\">:specta</span>\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_pod_to_podfile</span> <span class=\"s2\">\"Specta\"</span>\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_pod_to_podfile</span> <span class=\"s2\">\"Expecta\"</span>\n\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_line_to_pch</span> <span class=\"s2\">\"@import Specta;\"</span>\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_line_to_pch</span> <span class=\"s2\">\"@import Expecta;\"</span>\n\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">set_test_framework</span><span class=\"p\">(</span><span class=\"s2\">\"specta\"</span><span class=\"p\">,</span> <span class=\"s2\">\"m\"</span><span class=\"p\">,</span> <span class=\"s2\">\"ios\"</span><span class=\"p\">)</span>\n\n        <span class=\"k\">when</span> <span class=\"ss\">:kiwi</span>\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_pod_to_podfile</span> <span class=\"s2\">\"Kiwi\"</span>\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_line_to_pch</span> <span class=\"s2\">\"@import Kiwi;\"</span>\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">set_test_framework</span><span class=\"p\">(</span><span class=\"s2\">\"kiwi\"</span><span class=\"p\">,</span> <span class=\"s2\">\"m\"</span><span class=\"p\">,</span> <span class=\"s2\">\"ios\"</span><span class=\"p\">)</span>\n\n        <span class=\"k\">when</span> <span class=\"ss\">:none</span>\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">set_test_framework</span><span class=\"p\">(</span><span class=\"s2\">\"xctest\"</span><span class=\"p\">,</span> <span class=\"s2\">\"m\"</span><span class=\"p\">,</span> <span class=\"s2\">\"ios\"</span><span class=\"p\">)</span>\n      <span class=\"k\">end</span>\n\n      <span class=\"n\">snapshots</span> <span class=\"o\">=</span> <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">ask_with_answers</span><span class=\"p\">(</span><span class=\"s2\">\"Would you like to do view based testing\"</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s2\">\"Yes\"</span><span class=\"p\">,</span> <span class=\"s2\">\"No\"</span><span class=\"p\">]).</span><span class=\"nf\">to_sym</span>\n      <span class=\"k\">case</span> <span class=\"n\">snapshots</span>\n        <span class=\"k\">when</span> <span class=\"ss\">:yes</span>\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_pod_to_podfile</span> <span class=\"s2\">\"FBSnapshotTestCase\"</span>\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_line_to_pch</span> <span class=\"s2\">\"@import FBSnapshotTestCase;\"</span>\n\n          <span class=\"k\">if</span> <span class=\"n\">keep_demo</span> <span class=\"o\">==</span> <span class=\"ss\">:no</span>\n              <span class=\"nb\">puts</span> <span class=\"s2\">\" Putting demo application back in, you cannot do view tests without a host application.\"</span>\n              <span class=\"n\">keep_demo</span> <span class=\"o\">=</span> <span class=\"ss\">:yes</span>\n          <span class=\"k\">end</span>\n\n          <span class=\"k\">if</span> <span class=\"n\">framework</span> <span class=\"o\">==</span> <span class=\"ss\">:specta</span>\n              <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_pod_to_podfile</span> <span class=\"s2\">\"Expecta+Snapshots\"</span>\n              <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_line_to_pch</span> <span class=\"s2\">\"@import Expecta_Snapshots;\"</span>\n          <span class=\"k\">end</span>\n      <span class=\"k\">end</span>\n\n      <span class=\"n\">prefix</span> <span class=\"o\">=</span> <span class=\"kp\">nil</span>\n\n      <span class=\"kp\">loop</span> <span class=\"k\">do</span>\n        <span class=\"n\">prefix</span> <span class=\"o\">=</span> <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">ask</span><span class=\"p\">(</span><span class=\"s2\">\"What is your class prefix\"</span><span class=\"p\">).</span><span class=\"nf\">upcase</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">prefix</span><span class=\"p\">.</span><span class=\"nf\">include?</span><span class=\"p\">(</span><span class=\"s1\">' '</span><span class=\"p\">)</span>\n          <span class=\"nb\">puts</span> <span class=\"s1\">'Your class prefix cannot contain spaces.'</span><span class=\"p\">.</span><span class=\"nf\">red</span>\n        <span class=\"k\">else</span>\n          <span class=\"k\">break</span>\n        <span class=\"k\">end</span>\n      <span class=\"k\">end</span>\n\t      <span class=\"c1\">#……此处省略后面的代码……#</span>\n  <span class=\"k\">end</span>\n\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>找到相关的问答区：</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n</pre></td><td class=\"rouge-code\"><pre>    <span class=\"k\">def</span> <span class=\"nf\">perform</span>\n      <span class=\"c1\">#自定义模板优化: 这里默认需要demo，当然如果想要设置成其他的，也可以调用其他方法，或者恢复询问式配置</span>\n      <span class=\"n\">keep_demo</span> <span class=\"o\">=</span> <span class=\"s2\">\"yes\"</span><span class=\"c1\">#configurator.ask_with_answers(\"Would you like to include a demo application with your library\", [\"Yes\", \"No\"]).to_sym</span>\n      <span class=\"c1\">#自定义模板优化：: 这里默认不需要testing frameworks，当然如果想要设置成其他的，也可以调用其他方法，或者恢复询问式配置</span>\n      <span class=\"n\">framework</span> <span class=\"o\">=</span> <span class=\"s2\">\"none\"</span> <span class=\"c1\">#configurator.ask_with_answers(\"Which testing frameworks will you use\", [\"Specta\", \"Kiwi\", \"None\"]).to_sym</span>\n      <span class=\"k\">case</span> <span class=\"n\">framework</span>\n        <span class=\"k\">when</span> <span class=\"ss\">:specta</span>\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_pod_to_podfile</span> <span class=\"s2\">\"Specta\"</span>\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_pod_to_podfile</span> <span class=\"s2\">\"Expecta\"</span>\n\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_line_to_pch</span> <span class=\"s2\">\"@import Specta;\"</span>\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_line_to_pch</span> <span class=\"s2\">\"@import Expecta;\"</span>\n\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">set_test_framework</span><span class=\"p\">(</span><span class=\"s2\">\"specta\"</span><span class=\"p\">,</span> <span class=\"s2\">\"m\"</span><span class=\"p\">,</span> <span class=\"s2\">\"ios\"</span><span class=\"p\">)</span>\n\n        <span class=\"k\">when</span> <span class=\"ss\">:kiwi</span>\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_pod_to_podfile</span> <span class=\"s2\">\"Kiwi\"</span>\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_line_to_pch</span> <span class=\"s2\">\"@import Kiwi;\"</span>\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">set_test_framework</span><span class=\"p\">(</span><span class=\"s2\">\"kiwi\"</span><span class=\"p\">,</span> <span class=\"s2\">\"m\"</span><span class=\"p\">,</span> <span class=\"s2\">\"ios\"</span><span class=\"p\">)</span>\n\n        <span class=\"k\">when</span> <span class=\"ss\">:none</span>\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">set_test_framework</span><span class=\"p\">(</span><span class=\"s2\">\"xctest\"</span><span class=\"p\">,</span> <span class=\"s2\">\"m\"</span><span class=\"p\">,</span> <span class=\"s2\">\"ios\"</span><span class=\"p\">)</span>\n      <span class=\"k\">end</span>\n\n      <span class=\"c1\">#自定义模板优化：这里默认不需要view based testing，当然如果想要设置成其他的，也可以调用其他方法，或者恢复询问式配置</span>\n      <span class=\"n\">snapshots</span> <span class=\"o\">=</span> <span class=\"s2\">\"no\"</span><span class=\"c1\">#configurator.ask_with_answers(\"Would you like to do view based testing\", [\"Yes\", \"No\"]).to_sym</span>\n      <span class=\"k\">case</span> <span class=\"n\">snapshots</span>\n        <span class=\"k\">when</span> <span class=\"ss\">:yes</span>\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_pod_to_podfile</span> <span class=\"s2\">\"FBSnapshotTestCase\"</span>\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_line_to_pch</span> <span class=\"s2\">\"@import FBSnapshotTestCase;\"</span>\n\n          <span class=\"k\">if</span> <span class=\"n\">keep_demo</span> <span class=\"o\">==</span> <span class=\"ss\">:no</span>\n              <span class=\"nb\">puts</span> <span class=\"s2\">\" Putting demo application back in, you cannot do view tests without a host application.\"</span>\n              <span class=\"n\">keep_demo</span> <span class=\"o\">=</span> <span class=\"ss\">:yes</span>\n          <span class=\"k\">end</span>\n\n          <span class=\"k\">if</span> <span class=\"n\">framework</span> <span class=\"o\">==</span> <span class=\"ss\">:specta</span>\n              <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_pod_to_podfile</span> <span class=\"s2\">\"Expecta+Snapshots\"</span>\n              <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_line_to_pch</span> <span class=\"s2\">\"@import Expecta_Snapshots;\"</span>\n          <span class=\"k\">end</span>\n      <span class=\"k\">end</span>\n\n      <span class=\"n\">prefix</span> <span class=\"o\">=</span> <span class=\"kp\">nil</span>\n\n      <span class=\"kp\">loop</span> <span class=\"k\">do</span>\n      <span class=\"c1\">#自定义模板优化：这里默认prefix为PSC，当然如果想要设置成其他的，也可以调用其他方法，或者恢复询问式配置</span>\n        <span class=\"n\">prefix</span> <span class=\"o\">=</span> <span class=\"s2\">\"PSC\"</span><span class=\"c1\">#configurator.ask(\"What is your class prefix\").upcase</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">prefix</span><span class=\"p\">.</span><span class=\"nf\">include?</span><span class=\"p\">(</span><span class=\"s1\">' '</span><span class=\"p\">)</span>\n          <span class=\"nb\">puts</span> <span class=\"s1\">'Your class prefix cannot contain spaces.'</span><span class=\"p\">.</span><span class=\"nf\">red</span>\n        <span class=\"k\">else</span>\n          <span class=\"k\">break</span>\n        <span class=\"k\">end</span>\n      <span class=\"k\">end</span>\n      <span class=\"c1\">#……此处省略后面的代码……#</span>\n  <span class=\"k\">end</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>至此，优化的自定义模板已经完成，再创建另一个（如果你需要保留上面那种简易自定义）git仓库存储，一键创建更符合需求的pod私有库模板：let‘s try</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre> pod lib create xx  <span class=\"nt\">--template-url</span><span class=\"o\">=</span>ssh://内网githost/ios/Pods/Tmplate/PSC_iOS_Objc_Demo_NoneTest.git\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h2 id=\"4-如果你还是使用gem管理pod插件的话\">4. 如果你还是使用Gem管理Pod插件的话</h2>\n\n<p>一般而言，在多人团队中，需要用到Gem来管理Pod插件版本，避免由于Pod版本不一致，导致的集成与编译问题，如果你还有Gemfile需要配置的话，由于模板配置的代码最后的是：</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n</pre></td><td class=\"rouge-code\"><pre>      <span class=\"c1\"># There has to be a single file in the Classes dir</span>\n      <span class=\"c1\"># or a framework won't be created, which is now default</span>\n      <span class=\"sb\">`touch Pod/Classes/ReplaceMe.m`</span>\n\n      <span class=\"sb\">`mv ./templates/ios/* ./`</span>\n\n      <span class=\"c1\"># remove podspec for osx</span>\n      <span class=\"sb\">`rm ./NAME-osx.podspec`</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>在Podfile同级目录下也存放一个自己在用的Gemfile即可:</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c1\"># frozen_string_literal: true</span>\n\n<span class=\"n\">source</span> <span class=\"s2\">\"https://rubygems.org\"</span>\n\n<span class=\"n\">gem</span> <span class=\"s1\">'cocoapods'</span><span class=\"p\">,</span> <span class=\"s1\">'1.11.2'</span>\n\n<span class=\"n\">git_source</span><span class=\"p\">(</span><span class=\"ss\">:github</span><span class=\"p\">)</span> <span class=\"p\">{</span><span class=\"o\">|</span><span class=\"n\">repo_name</span><span class=\"o\">|</span> <span class=\"s2\">\"https://github.com/</span><span class=\"si\">#{</span><span class=\"n\">repo_name</span><span class=\"si\">}</span><span class=\"s2\">\"</span> <span class=\"p\">}</span>\n\n<span class=\"c1\"># gem \"rails\"</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h2 id=\"5-最后的忽略\">5 最后的忽略</h2>\n\n<p>模板创建之后，会执行Pod install，此时与常规工程一样，在Example下会新增Pod文件夹存在Pod依赖库，提交时需忽略，本着能少干重复劳动就不多干的原则，我们再把.gitignore修改一下：</p>\n\n<p>在根目录中找到.gitignore文件，由于是.开头，默认是隐藏了，在下面代码中添加你需要忽略的文件夹</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\"># macOS</span>\n.DS_Store\n\n<span class=\"c\"># Xcode</span>\nbuild/\n<span class=\"k\">*</span>.pbxuser\n<span class=\"o\">!</span>default.pbxuser\n<span class=\"k\">*</span>.mode1v3\n<span class=\"o\">!</span>default.mode1v3\n<span class=\"k\">*</span>.mode2v3\n<span class=\"o\">!</span>default.mode2v3\n<span class=\"k\">*</span>.perspectivev3\n<span class=\"o\">!</span>default.perspectivev3\nxcuserdata/\n<span class=\"k\">*</span>.xccheckout\n<span class=\"k\">*</span>.moved-aside\nDerivedData\n<span class=\"k\">*</span>.hmap\n<span class=\"k\">*</span>.ipa\n\n<span class=\"c\"># Bundler</span>\n.bundle\n\n<span class=\"c\"># Add this line if you want to avoid checking in source code from Carthage dependencies.</span>\n<span class=\"c\"># Carthage/Checkouts</span>\n\nCarthage/Build\n\n<span class=\"c\"># We recommend against adding the Pods directory to your .gitignore. However</span>\n<span class=\"c\"># you should judge for yourself, the pros and cons are mentioned at:</span>\n<span class=\"c\"># https://guides.cocoapods.org/using/using-cocoapods.html#should-i-ignore-the-pods-directory-in-source-control</span>\n<span class=\"c\"># </span>\n<span class=\"c\"># Note: if you ignore the Pods directory, make sure to uncomment</span>\n<span class=\"c\"># `pod install` in .travis.yml</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># Pods/ #打开此处注释可以忽略 以下Example/Pods/</span>\n\n<span class=\"c\">#以下可以继续添加忽略文件及文件夹</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h2 id=\"6扩展podfile依赖\">6.扩展：Podfile依赖</h2>\n\n<p>一般而言，创建的Pod私有库中的Podfile，会包含简单的模板：</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n</pre></td><td class=\"rouge-code\"><pre><span class=\"n\">use_frameworks!</span>\n\n<span class=\"n\">platform</span> <span class=\"ss\">:ios</span><span class=\"p\">,</span> <span class=\"s1\">'10.0'</span>\n\n<span class=\"n\">target</span> <span class=\"s1\">'${POD_NAME}_Example'</span> <span class=\"k\">do</span>\n  <span class=\"n\">pod</span> <span class=\"s1\">'${POD_NAME}'</span><span class=\"p\">,</span> <span class=\"ss\">:path</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'../'</span>\n\n  <span class=\"n\">target</span> <span class=\"s1\">'${POD_NAME}_Tests'</span> <span class=\"k\">do</span>\n    <span class=\"n\">inherit!</span> <span class=\"ss\">:search_paths</span>\n\n    <span class=\"err\">$</span><span class=\"p\">{</span><span class=\"no\">INCLUDED_PODS</span><span class=\"p\">}</span>\n  <span class=\"k\">end</span>\n<span class=\"k\">end</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>对于单个Pod组件库，也许够用了，但是我们如果是在进行组件化改造的进程中，需要与现有的私有库进行交互与依赖：比如业务库依赖基础库等，</p>\n\n<p>为了方便起见，不至于对每次创建私有库进行Podfile配置（还是懒😭），因此对Podfile进行了改造：</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n</pre></td><td class=\"rouge-code\"><pre><span class=\"n\">source</span> <span class=\"s1\">'ssh://私有库git地址/Specs.git'</span>\n<span class=\"n\">source</span> <span class=\"s1\">'https://github.com/CocoaPods/Specs.git'</span>\n\n<span class=\"n\">use_frameworks!</span>\n\n<span class=\"n\">platform</span> <span class=\"ss\">:ios</span><span class=\"p\">,</span> <span class=\"s1\">'12.0'</span>\t<span class=\"c1\">#写这篇文章时使用的podfile默认是10.0，可以改成你需要的</span>\n<span class=\"n\">post_install</span> <span class=\"k\">do</span> <span class=\"o\">|</span><span class=\"n\">installer</span><span class=\"o\">|</span>\n    <span class=\"n\">installer</span><span class=\"p\">.</span><span class=\"nf\">generated_projects</span><span class=\"p\">.</span><span class=\"nf\">each</span> <span class=\"k\">do</span> <span class=\"o\">|</span><span class=\"n\">project</span><span class=\"o\">|</span>\n          <span class=\"n\">project</span><span class=\"p\">.</span><span class=\"nf\">targets</span><span class=\"p\">.</span><span class=\"nf\">each</span> <span class=\"k\">do</span> <span class=\"o\">|</span><span class=\"n\">target</span><span class=\"o\">|</span>\n              <span class=\"n\">target</span><span class=\"p\">.</span><span class=\"nf\">build_configurations</span><span class=\"p\">.</span><span class=\"nf\">each</span> <span class=\"k\">do</span> <span class=\"o\">|</span><span class=\"n\">config</span><span class=\"o\">|</span>\n                  <span class=\"n\">config</span><span class=\"p\">.</span><span class=\"nf\">build_settings</span><span class=\"p\">[</span><span class=\"s1\">'IPHONEOS_DEPLOYMENT_TARGET'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">'12.0'</span>\n                  <span class=\"n\">config</span><span class=\"p\">.</span><span class=\"nf\">build_settings</span><span class=\"p\">[</span><span class=\"s2\">\"DEVELOPMENT_TEAM\"</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s2\">\"xxxxx\"</span>\t<span class=\"c1\">#这里指定签名，避免编译出错还要手动指定</span>\n               <span class=\"k\">end</span>\n          <span class=\"k\">end</span>\n   <span class=\"k\">end</span>\n<span class=\"k\">end</span>\n\n<span class=\"n\">use_frameworks!</span>\n\n\n<span class=\"n\">target</span> <span class=\"s1\">'${POD_NAME}_Example'</span> <span class=\"k\">do</span>\n\n<span class=\"c1\">#新建pod库创建模板的时候把私有库拉取一下</span>\n<span class=\"k\">def</span> <span class=\"nf\">debug_pod</span><span class=\"p\">(</span><span class=\"n\">pod_name</span><span class=\"p\">)</span>\n  <span class=\"n\">this_pod_name</span> <span class=\"o\">=</span> <span class=\"s2\">\"${POD_NAME}\"</span>\n  <span class=\"nb\">puts</span> <span class=\"s2\">\"debug_pod :pod_name = </span><span class=\"si\">#{</span><span class=\"n\">pod_name</span><span class=\"si\">}</span><span class=\"s2\"> and this_pod_name is </span><span class=\"si\">#{</span><span class=\"n\">this_pod_name</span><span class=\"si\">}</span><span class=\"s2\">\"</span>\n  <span class=\"k\">if</span> <span class=\"n\">this_pod_name</span> <span class=\"o\">==</span> <span class=\"n\">pod_name</span>\n    <span class=\"nb\">puts</span> <span class=\"s2\">\"</span><span class=\"si\">#{</span><span class=\"n\">this_pod_name</span><span class=\"si\">}</span><span class=\"s2\"> is equal args </span><span class=\"si\">#{</span><span class=\"n\">pod_name</span><span class=\"si\">}</span><span class=\"s2\"> do not pod\"</span>\n  <span class=\"k\">elsif</span>\n    <span class=\"c1\">#为了方便管理，这里的所有私有库建议放在同一个目录下</span>\n    <span class=\"n\">pod</span> <span class=\"s2\">\"</span><span class=\"si\">#{</span><span class=\"n\">pod_name</span><span class=\"si\">}</span><span class=\"s2\">\"</span><span class=\"p\">,</span> <span class=\"ss\">:path</span> <span class=\"o\">=&gt;</span> <span class=\"s2\">\"../../</span><span class=\"si\">#{</span><span class=\"n\">pod_name</span><span class=\"si\">}</span><span class=\"s2\">/\"</span>\n  <span class=\"k\">end</span>\n<span class=\"k\">end</span>\n\n  <span class=\"c1\">#为了避免重复定义 这里统一按下面方式进行处理吧，由于下文已经匹配了当前pod，这里不用注释掉</span>\n  <span class=\"n\">pod</span> <span class=\"s1\">'${POD_NAME}'</span><span class=\"p\">,</span> <span class=\"ss\">:path</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'../'</span>\n    \n  <span class=\"c1\">#这里定义需要被引入的所有私有库的库名</span>\n  <span class=\"n\">private_pods</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">\"基础组件1\"</span><span class=\"p\">,</span> <span class=\"s2\">\"基础组件2\"</span><span class=\"p\">,</span> <span class=\"s2\">\"基础组件3\"</span><span class=\"p\">,</span> <span class=\"s2\">\"能力组件1\"</span><span class=\"p\">,</span>  <span class=\"s2\">\"能力组件2\"</span><span class=\"p\">,</span>  <span class=\"s2\">\"能力组件3\"</span><span class=\"p\">,</span>  <span class=\"s2\">\"业务组件1\"</span><span class=\"p\">,</span>  <span class=\"s2\">\"业务组件2\"</span><span class=\"p\">]</span>\n\n  <span class=\"c1\">#这里将所有私有库名与路径匹配起来进行pod</span>\n  <span class=\"n\">private_pods</span><span class=\"p\">.</span><span class=\"nf\">each</span> <span class=\"k\">do</span> <span class=\"o\">|</span><span class=\"n\">private_pod</span><span class=\"o\">|</span>\n    <span class=\"n\">debug_pod</span><span class=\"p\">(</span><span class=\"n\">private_pod</span><span class=\"p\">)</span>\n  <span class=\"k\">end</span>\n\n\n  <span class=\"c1\">#如果上述方法用不来，或者不好用也可以改用下面比较传统的方式进行：</span>\n  <span class=\"c1\">#pod '基础组件1', :path =&gt; '../../基础组件1/'</span>\n  <span class=\"c1\">#pod '基础组件2', :path =&gt; '../../基础组件2/'</span>\n  <span class=\"c1\">#pod '基础组件3', :path =&gt; '../../基础组件3/'</span>\n\n  <span class=\"c1\">#pod '能力组件1', :path =&gt; '../../能力组件1/'</span>\n  <span class=\"c1\">#pod '能力组件2', :path =&gt; '../../能力组件2/'</span>\n  <span class=\"c1\">#pod '能力组件3', :path =&gt; '../../能力组件3/'</span>\n\n  <span class=\"c1\">#pod '业务组件1', :path =&gt; '../../业务组件1/'</span>\n  <span class=\"c1\">#pod '业务组件2', :path =&gt; '../../业务组件2/'</span>\n\n  <span class=\"n\">target</span> <span class=\"s1\">'${POD_NAME}_Tests'</span> <span class=\"k\">do</span>\n    <span class=\"n\">inherit!</span> <span class=\"ss\">:search_paths</span>\n    <span class=\"err\">$</span><span class=\"p\">{</span><span class=\"no\">INCLUDED_PODS</span><span class=\"p\">}</span>\n  <span class=\"k\">end</span>\n<span class=\"k\">end</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>值得一提的是，需要把所有Dev Pod放在同一个目录下，避免路径管理麻烦</p>\n\n<p>至此，生产的Pod组件库模板可以满足组件化进程需求了。</p>\n\n<p>##</p>\n","name":"2023-07-26-4-iOS组件化模板.md","previous":{"id":"/2023/07/20/iOS组件化实践二-实践过程碰到的问题","tags":[],"relative_path":"_posts/2023-07-20-iOS组件化实践二-实践过程碰到的问题.md","collection":"posts","name":"2023-07-20-iOS组件化实践二-实践过程碰到的问题.md","url":"/2023/07/20/iOS%E7%BB%84%E4%BB%B6%E5%8C%96%E5%AE%9E%E8%B7%B5%E4%BA%8C-%E5%AE%9E%E8%B7%B5%E8%BF%87%E7%A8%8B%E7%A2%B0%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/","title":"iOS组件化实践二：实践过程碰到的问题","date":"2023-07-20 00:00:00 +0800","categories":[],"path":"_posts/2023-07-20-iOS组件化实践二-实践过程碰到的问题.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/home-bg-geek.jpg","slug":"iOS组件化实践二-实践过程碰到的问题","ext":".md"},"output":"<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"google-site-verification\" content=\"xBT4GhYoi5qRD5tr338pgPM5OWHHIDR6mNg1a3euekI\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, viewport-fit=cover\">\n    <meta name=\"description\" content=\"与你一起发现更大的世界。\">\n    <meta name=\"keywords\"  content=\"PaysonChen,iOS,流媒体\">\n    <meta name=\"theme-color\" content=\"#000000\">\n    \n    <!-- Open Graph -->\n    <meta property=\"og:title\" content=\"iOS组件化实践之：新建一个Pod组件库 - PaysonChen的博客 | PaysonChen Blog\">\n    \n    <meta property=\"og:type\" content=\"article\">\n    <meta property=\"og:description\" content=\"iOS组件化实践之：新建一个Pod组件库\n\">\n    \n    \n    <meta property=\"article:published_time\" content=\"2023-07-26T00:00:00Z\">\n    \n    \n    <meta property=\"article:author\" content=\"PaysonChen\">\n    \n    \n    \n    <meta property=\"og:image\" content=\"http://localhost:4000\">\n    <meta property=\"og:url\" content=\"http://localhost:4000/2023/07/26/4-iOS%E7%BB%84%E4%BB%B6%E5%8C%96%E6%A8%A1%E6%9D%BF/\">\n    <meta property=\"og:site_name\" content=\"PaysonChen的博客 | PaysonChen Blog\">\n    \n    <title>iOS组件化实践之：新建一个Pod组件库 - PaysonChen的博客 | PaysonChen Blog</title>\n\n    <!-- Web App Manifest -->\n    <link rel=\"manifest\" href=\"/pwa/manifest.json\">\n\n    <!-- Favicon -->\n    <link rel=\"shortcut icon\" href=\"/img/favicon.ico\">\n    \n    <!-- Canonical URL -->\n    <link rel=\"canonical\" href=\"http://localhost:4000/2023/07/26/4-iOS%E7%BB%84%E4%BB%B6%E5%8C%96%E6%A8%A1%E6%9D%BF/\">\n\n    <!-- Bootstrap Core CSS -->\n    <link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\">\n\n    <!-- Custom CSS -->\n    <link rel=\"stylesheet\" href=\"/css/hux-blog.min.css\">\n\n    <!-- Custom Fonts -->\n    <!-- <link href=\"http://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\"> -->\n    <!-- Hux change font-awesome CDN to qiniu -->\n    <link href=\"//cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\">\n\n\n    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->\n    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->\n    <!--[if lt IE 9]>\n        <script src=\"https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js\"></script>\n        <script src=\"https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js\"></script>\n    <![endif]-->\n\n    <!-- ga & ba script hoook -->\n    <script></script>\n</head>\n\n\n<!-- hack iOS CSS :active style -->\n<body ontouchstart=\"\">\n\n    <!-- Navigation -->\n\n    <nav class=\"navbar navbar-default navbar-custom navbar-fixed-top\">\n        \n        <div class=\"container-fluid\">\n            <!-- Brand and toggle get grouped for better mobile display -->\n            <div class=\"navbar-header page-scroll\">\n                <button type=\"button\" class=\"navbar-toggle\">\n                    <span class=\"sr-only\">Toggle navigation</span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                </button>\n                <a class=\"navbar-brand\" href=\"/\">PaysonChen Blog</a>\n            </div>\n\n            <!-- Collect the nav links, forms, and other content for toggling -->\n            <div id=\"huxblog_navbar\">\n                <div class=\"navbar-collapse\">\n                    <ul class=\"nav navbar-nav navbar-right\">\n                        <li>\n                            <a href=\"/\">Home</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        <li>\n                            <a href=\"/about/\">About</a>\n                        </li>\n                        \n                        \n                        \n                        <li>\n                            <a href=\"/archive/\">Archive</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        <li class=\"search-icon\">\n                            <a href=\"javascript:void(0)\">\n                                <i class=\"fa fa-search\"></i>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n            <!-- /.navbar-collapse -->\n        </div>\n        <!-- /.container -->\n    </nav>\n\n    <script>\n        // Drop Bootstarp low-performance Navbar\n        // Use customize navbar with high-quality material design animation\n        // in high-perf jank-free CSS3 implementation\n        var $body = document.body;\n        var $toggle = document.querySelector('.navbar-toggle');\n        var $navbar = document.querySelector('#huxblog_navbar');\n        var $collapse = document.querySelector('.navbar-collapse');\n\n        var __HuxNav__ = {\n            close: function () {\n                $navbar.className = \" \";\n                // wait until animation end.\n                setTimeout(function () {\n                    // prevent frequently toggle\n                    if ($navbar.className.indexOf('in') < 0) {\n                        $collapse.style.height = \"0px\"\n                    }\n                }, 400)\n            },\n            open: function () {\n                $collapse.style.height = \"auto\"\n                $navbar.className += \" in\";\n            }\n        }\n\n        // Bind Event\n        $toggle.addEventListener('click', function (e) {\n            if ($navbar.className.indexOf('in') > 0) {\n                __HuxNav__.close()\n            } else {\n                __HuxNav__.open()\n            }\n        })\n\n        /**\n         * Since Fastclick is used to delegate 'touchstart' globally\n         * to hack 300ms delay in iOS by performing a fake 'click',\n         * Using 'e.stopPropagation' to stop 'touchstart' event from \n         * $toggle/$collapse will break global delegation.\n         * \n         * Instead, we use a 'e.target' filter to prevent handler\n         * added to document close HuxNav.  \n         *\n         * Also, we use 'click' instead of 'touchstart' as compromise\n         */\n        document.addEventListener('click', function (e) {\n            if (e.target == $toggle) return;\n            if (e.target.className == 'icon-bar') return;\n            __HuxNav__.close();\n        })\n    </script>\n    <!-- Search -->\n<div class=\"search-page\">\n  <div class=\"search-icon-close-container\">\n    <span class=\"search-icon-close\">\n      <i class=\"fa fa-chevron-down\"></i>\n    </span>\n  </div>\n  <div class=\"search-main container\">\n    <div class=\"row\">\n      <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n        <form></form>\n        <input type=\"text\" id=\"search-input\" placeholder=\"$ grep...\">\n        </form>\n        <div id=\"search-results\" class=\"mini-post-list\"></div>\n      </div>\n    </div>\n  </div>\n</div>\n\n    <!-- Image to hack wechat -->\n<!-- <img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\"> -->\n<!-- <img src=\"/img/home-bg-geek.jpg\" width=\"0\" height=\"0\"> -->\n\n<!-- Post Header -->\n\n\n\n<style type=\"text/css\">\n    header.intro-header{\n        position: relative;\n        background-image: url('/img/home-bg-geek.jpg');\n        background: ;\n    }\n\n    \n</style>\n\n<header class=\"intro-header\" >\n\n    <div class=\"header-mask\"></div>\n    \n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <div class=\"post-heading\">\n                    <div class=\"tags\">\n                        \n                    </div>\n                    <h1>iOS组件化实践之：新建一个Pod组件库</h1>\n                    \n                    <h2 class=\"subheading\"></h2>\n                    <span class=\"meta\">Posted by PaysonChen on July 26, 2023</span>\n                </div>\n            </div>\n        </div>\n    </div>\n</header>\n\n\n\n\n\n\n<!-- Post Content -->\n<article>\n    <div class=\"container\">\n        <div class=\"row\">\n\n    <!-- Post Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                post-container\">\n\n                <!-- Multi-Lingual -->\n                \n\n\t\t\t\t<h1 id=\"ios组件化实践之新建一个pod组件库\">iOS组件化实践之：新建一个Pod组件库</h1>\n\n<h2 id=\"0背景\">0.背景</h2>\n\n<p>在IOS组件化的实践过程中，</p>\n\n<ul>\n  <li>规划期间需要对组件进行定义、功能划分、接口设计等</li>\n  <li>实践期间需要对组件进行创建，迁移主工程能力等</li>\n</ul>\n\n<p>这过程，就看你需要较为频繁地创建Pod组件库，因此对于了解一下，Pod组件的创建，及其模板的使用与修改，变成较为重要</p>\n\n<h2 id=\"1-通过常规模板创建\">1. 通过常规模板创建</h2>\n\n<p>CocoaPods提供的创建指令：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>pod lib create xx\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>通过输出可以看到：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>Cloning <span class=\"sb\">`</span>https://github.com/CocoaPods/pod-template.git<span class=\"sb\">`</span> into <span class=\"sb\">`</span>xx<span class=\"sb\">`</span><span class=\"nb\">.</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>此命令默认从 <a href=\"https://github.com/CocoaPods/pod-template\">github Pod-template</a>，下载默认模板进行创建，依次回答几个问题之后</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n</pre></td><td class=\"rouge-code\"><pre>What platform <span class=\"k\">do </span>you want to use?? <span class=\"o\">[</span> iOS / macOS <span class=\"o\">]</span>\n <span class=\"o\">&gt;</span> \nios\nWhat language <span class=\"k\">do </span>you want to use?? <span class=\"o\">[</span> Swift / ObjC <span class=\"o\">]</span>\n <span class=\"o\">&gt;</span> \nswift\nWould you like to include a demo application with your library? <span class=\"o\">[</span> Yes / No <span class=\"o\">]</span>\n <span class=\"o\">&gt;</span> \n<span class=\"nb\">yes\n</span>Which testing frameworks will you use? <span class=\"o\">[</span> Quick / None <span class=\"o\">]</span>\n <span class=\"o\">&gt;</span> \nquick\nWould you like to <span class=\"k\">do </span>view based testing? <span class=\"o\">[</span> Yes / No <span class=\"o\">]</span>\n <span class=\"o\">&gt;</span> \n<span class=\"nb\">yes</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>当前路径下就生成了一个Pod仓库，Spec文件如下：</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n</pre></td><td class=\"rouge-code\"><pre><span class=\"no\">Pod</span><span class=\"o\">::</span><span class=\"no\">Spec</span><span class=\"p\">.</span><span class=\"nf\">new</span> <span class=\"k\">do</span> <span class=\"o\">|</span><span class=\"n\">s</span><span class=\"o\">|</span>\n  <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">name</span>             <span class=\"o\">=</span> <span class=\"s1\">'xx'</span>\n  <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">version</span>          <span class=\"o\">=</span> <span class=\"s1\">'0.1.0'</span>\n  <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">summary</span>          <span class=\"o\">=</span> <span class=\"s1\">'A short description of xx.'</span>\n\n<span class=\"c1\"># This description is used to generate tags and improve search results.</span>\n<span class=\"c1\">#   * Think: What does it do? Why did you write it? What is the focus?</span>\n<span class=\"c1\">#   * Try to keep it short, snappy and to the point.</span>\n<span class=\"c1\">#   * Write the description between the DESC delimiters below.</span>\n<span class=\"c1\">#   * Finally, don't worry about the indent, CocoaPods strips it!</span>\n\n  <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">description</span>      <span class=\"o\">=</span> <span class=\"o\">&lt;&lt;-</span><span class=\"no\">DESC</span><span class=\"sh\">\nTODO: Add long description of the pod here.\n</span><span class=\"no\">                       DESC</span>\n\n  <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">homepage</span>         <span class=\"o\">=</span> <span class=\"s1\">'https://github.com/chenyp/xx'</span>\n  <span class=\"c1\"># s.screenshots     = 'www.example.com/screenshots_1', 'www.example.com/screenshots_2'</span>\n  <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">license</span>          <span class=\"o\">=</span> <span class=\"p\">{</span> <span class=\"ss\">:type</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'MIT'</span><span class=\"p\">,</span> <span class=\"ss\">:file</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'LICENSE'</span> <span class=\"p\">}</span>\n  <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">author</span>           <span class=\"o\">=</span> <span class=\"p\">{</span> <span class=\"s1\">'chenyp'</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'165685965@qq.com'</span> <span class=\"p\">}</span>\n  <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">source</span>           <span class=\"o\">=</span> <span class=\"p\">{</span> <span class=\"ss\">:git</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'https://github.com/chenyp/xx.git'</span><span class=\"p\">,</span> <span class=\"ss\">:tag</span> <span class=\"o\">=&gt;</span> <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">version</span><span class=\"p\">.</span><span class=\"nf\">to_s</span> <span class=\"p\">}</span>\n  <span class=\"c1\"># s.social_media_url = 'https://twitter.com/&lt;TWITTER_USERNAME&gt;'</span>\n\n  <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">ios</span><span class=\"p\">.</span><span class=\"nf\">deployment_target</span> <span class=\"o\">=</span> <span class=\"s1\">'10.0'</span>\n\n  <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">source_files</span> <span class=\"o\">=</span> <span class=\"s1\">'xx/Classes/**/*'</span>\n  \n  <span class=\"c1\"># s.resource_bundles = {</span>\n  <span class=\"c1\">#   'xx' =&gt; ['xx/Assets/*.png']</span>\n  <span class=\"c1\"># }</span>\n\n  <span class=\"c1\"># s.public_header_files = 'Pod/Classes/**/*.h'</span>\n  <span class=\"c1\"># s.frameworks = 'UIKit', 'MapKit'</span>\n  <span class=\"c1\"># s.dependency 'AFNetworking', '~&gt; 2.3'</span>\n<span class=\"k\">end</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h2 id=\"2-通过自定义模板创建\">2. 通过自定义模板创建</h2>\n\n<p>一般而言，不建议通过上述方式进行创建，默认以git全局配置的name、email字段，加上github主页进行填充，因为默认模板所创建的诸多字段是必要修改的（不改无法通过私有组件部署）：</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n</pre></td><td class=\"rouge-code\"><pre>  <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">homepage</span>         <span class=\"o\">=</span> <span class=\"s1\">'https://github.com/chenyp/xx'</span>\n  <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">author</span>           <span class=\"o\">=</span> <span class=\"p\">{</span> <span class=\"s1\">'chenyp'</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'165685965@qq.com'</span> <span class=\"p\">}</span>\n  <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">source</span>           <span class=\"o\">=</span> <span class=\"p\">{</span> <span class=\"ss\">:git</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'https://github.com/chenyp/xx.git'</span><span class=\"p\">,</span> <span class=\"ss\">:tag</span> <span class=\"o\">=&gt;</span> <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">version</span><span class=\"p\">.</span><span class=\"nf\">to_s</span> <span class=\"p\">}</span>\n<span class=\"err\">……</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>由于组件化的过程是需要频繁创建多个组件仓库，如果每次都改上述字段，有可能错改漏改，导致效率低下，基于懒惰是程序员的美德这一不成文的追求（其实应该是尽量能把重复工作流程化），着手对上述模板进行修改。</p>\n\n<p>自定义模板创建：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>git clone git@github.com:CocoaPods/pod-template.git\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>通过修改仓库中的“<strong>NAME.podspec</strong>”文件中的相关字段</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n</pre></td><td class=\"rouge-code\"><pre>  <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">homepage</span>         <span class=\"o\">=</span> <span class=\"s1\">'https://内网githost/name/xx'</span>\n  <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">author</span>           <span class=\"o\">=</span> <span class=\"p\">{</span> <span class=\"s1\">'内网git提交commit姓名'</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'内网git提交commit email'</span> <span class=\"p\">}</span>\n  <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">source</span>           <span class=\"o\">=</span> <span class=\"p\">{</span> <span class=\"ss\">:git</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'https://内网githost/name/xx.git'</span><span class=\"p\">,</span> <span class=\"ss\">:tag</span> <span class=\"o\">=&gt;</span> <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">version</span><span class=\"p\">.</span><span class=\"nf\">to_s</span> <span class=\"p\">}</span>\t<span class=\"c1\">#clone 组件库地址</span>\n<span class=\"err\">……</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>修改后将上述模板放到git仓库上，执行：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre> pod lib create xx  <span class=\"nt\">--template-url</span><span class=\"o\">=</span>ssh://内网githost/ios/Pods/Tmplate/XXX_Pod_Tmeplate.git\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h2 id=\"3-通过高度自定义模板创建\">3. 通过高度自定义模板创建</h2>\n\n<p>一般而言，到上述即可完成基础的模板自定义，减少创建私有库后所需的重复修改字段的工作量，但是对于下列选项的一致性，如果能省略冗余及提高统一性，自然更好了：</p>\n\n<ul class=\"task-list\">\n  <li class=\"task-list-item\">\n    <p><input type=\"checkbox\" class=\"task-list-item-checkbox\" disabled=\"disabled\" checked=\"checked\" />平台选择的冗余（iOS）</p>\n  </li>\n  <li class=\"task-list-item\">\n    <p><input type=\"checkbox\" class=\"task-list-item-checkbox\" disabled=\"disabled\" checked=\"checked\" />代码风格的统一（类名前缀）</p>\n  </li>\n  <li class=\"task-list-item\">\n    <p><input type=\"checkbox\" class=\"task-list-item-checkbox\" disabled=\"disabled\" />语言统一（iOS/Swift）</p>\n  </li>\n  <li class=\"task-list-item\">\n    <p><input type=\"checkbox\" class=\"task-list-item-checkbox\" disabled=\"disabled\" checked=\"checked\" />Demo工程</p>\n  </li>\n  <li class=\"task-list-item\">\n    <p><input type=\"checkbox\" class=\"task-list-item-checkbox\" disabled=\"disabled\" checked=\"checked\" />测试依赖</p>\n  </li>\n</ul>\n\n<p>这就需要对pod-template的ruby代码进行修改已达到不需要重复设定模板交互的目的：</p>\n\n<p>模板配置：TemplateConfigurator.rb</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n</pre></td><td class=\"rouge-code\"><pre>    <span class=\"k\">def</span> <span class=\"nf\">run</span>\n      <span class=\"vi\">@message_bank</span><span class=\"p\">.</span><span class=\"nf\">welcome_message</span>\n\n      <span class=\"n\">platform</span> <span class=\"o\">=</span> <span class=\"nb\">self</span><span class=\"p\">.</span><span class=\"nf\">ask_with_answers</span><span class=\"p\">(</span><span class=\"s2\">\"What platform do you want to use?\"</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s2\">\"iOS\"</span><span class=\"p\">,</span> <span class=\"s2\">\"macOS\"</span><span class=\"p\">]).</span><span class=\"nf\">to_sym</span>\n\n      <span class=\"k\">case</span> <span class=\"n\">platform</span>\n        <span class=\"k\">when</span> <span class=\"ss\">:macos</span>\n          <span class=\"no\">ConfigureMacOSSwift</span><span class=\"p\">.</span><span class=\"nf\">perform</span><span class=\"p\">(</span><span class=\"ss\">configurator: </span><span class=\"nb\">self</span><span class=\"p\">)</span>\n        <span class=\"k\">when</span> <span class=\"ss\">:ios</span>\n          <span class=\"n\">framework</span> <span class=\"o\">=</span> <span class=\"nb\">self</span><span class=\"p\">.</span><span class=\"nf\">ask_with_answers</span><span class=\"p\">(</span><span class=\"s2\">\"What language do you want to use?\"</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s2\">\"Swift\"</span><span class=\"p\">,</span> <span class=\"s2\">\"ObjC\"</span><span class=\"p\">]).</span><span class=\"nf\">to_sym</span>\n          <span class=\"k\">case</span> <span class=\"n\">framework</span>\n            <span class=\"k\">when</span> <span class=\"ss\">:swift</span>\n              <span class=\"no\">ConfigureSwift</span><span class=\"p\">.</span><span class=\"nf\">perform</span><span class=\"p\">(</span><span class=\"ss\">configurator: </span><span class=\"nb\">self</span><span class=\"p\">)</span>\n\n            <span class=\"k\">when</span> <span class=\"ss\">:objc</span>\n              <span class=\"no\">ConfigureIOS</span><span class=\"p\">.</span><span class=\"nf\">perform</span><span class=\"p\">(</span><span class=\"ss\">configurator: </span><span class=\"nb\">self</span><span class=\"p\">)</span>\n          <span class=\"k\">end</span>\n      <span class=\"k\">end</span>\n      \n      <span class=\"c1\">#……此处省略后面的代码……#</span>\n    <span class=\"k\">end</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>改为：</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n</pre></td><td class=\"rouge-code\"><pre>    <span class=\"k\">def</span> <span class=\"nf\">run</span>\n      <span class=\"vi\">@message_bank</span><span class=\"p\">.</span><span class=\"nf\">welcome_message</span>\n\n      <span class=\"c1\">#自定义模板优化：这里可以绕过了一些问题（免回答iOS、Objc）,当然如果想要设置成其他的，也可以调用其他方法，或者恢复询问式配置</span>\n      <span class=\"no\">ConfigureIOS</span><span class=\"p\">.</span><span class=\"nf\">perform</span><span class=\"p\">(</span><span class=\"ss\">configurator: </span><span class=\"nb\">self</span><span class=\"p\">)</span>\n      \n<span class=\"c1\">#      platform = self.ask_with_answers(\"What platform do you want to use?\", [\"iOS\", \"macOS\"]).to_sym</span>\n<span class=\"c1\">#</span>\n<span class=\"c1\">#      case platform</span>\n<span class=\"c1\">#        when :macos</span>\n<span class=\"c1\">#          ConfigureMacOSSwift.perform(configurator: self)</span>\n<span class=\"c1\">#        when :ios</span>\n<span class=\"c1\">#          framework = self.ask_with_answers(\"What language do you want to use?\", [\"Swift\", \"ObjC\"]).to_sym</span>\n<span class=\"c1\">#          case framework</span>\n<span class=\"c1\">#            when :swift</span>\n<span class=\"c1\">#              ConfigureSwift.perform(configurator: self)</span>\n<span class=\"c1\">#</span>\n<span class=\"c1\">#            when :objc</span>\n<span class=\"c1\">#              ConfigureIOS.perform(configurator: self)</span>\n<span class=\"c1\">#          end</span>\n<span class=\"c1\">#      end</span>\n\n      <span class=\"c1\">#……此处省略后面的代码……#</span>\n    <span class=\"k\">end</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>选择了相关语言，就在相关语言的 Configure 内配置后续的设置，例如：选择了iOS，就在ConfigureIOS.rb配置:</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n</pre></td><td class=\"rouge-code\"><pre>    <span class=\"k\">def</span> <span class=\"nf\">perform</span>\n\n      <span class=\"n\">keep_demo</span> <span class=\"o\">=</span> <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">ask_with_answers</span><span class=\"p\">(</span><span class=\"s2\">\"Would you like to include a demo application with your library\"</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s2\">\"Yes\"</span><span class=\"p\">,</span> <span class=\"s2\">\"No\"</span><span class=\"p\">]).</span><span class=\"nf\">to_sym</span>\n\n      <span class=\"n\">framework</span> <span class=\"o\">=</span> <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">ask_with_answers</span><span class=\"p\">(</span><span class=\"s2\">\"Which testing frameworks will you use\"</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s2\">\"Specta\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Kiwi\"</span><span class=\"p\">,</span> <span class=\"s2\">\"None\"</span><span class=\"p\">]).</span><span class=\"nf\">to_sym</span>\n      <span class=\"k\">case</span> <span class=\"n\">framework</span>\n        <span class=\"k\">when</span> <span class=\"ss\">:specta</span>\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_pod_to_podfile</span> <span class=\"s2\">\"Specta\"</span>\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_pod_to_podfile</span> <span class=\"s2\">\"Expecta\"</span>\n\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_line_to_pch</span> <span class=\"s2\">\"@import Specta;\"</span>\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_line_to_pch</span> <span class=\"s2\">\"@import Expecta;\"</span>\n\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">set_test_framework</span><span class=\"p\">(</span><span class=\"s2\">\"specta\"</span><span class=\"p\">,</span> <span class=\"s2\">\"m\"</span><span class=\"p\">,</span> <span class=\"s2\">\"ios\"</span><span class=\"p\">)</span>\n\n        <span class=\"k\">when</span> <span class=\"ss\">:kiwi</span>\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_pod_to_podfile</span> <span class=\"s2\">\"Kiwi\"</span>\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_line_to_pch</span> <span class=\"s2\">\"@import Kiwi;\"</span>\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">set_test_framework</span><span class=\"p\">(</span><span class=\"s2\">\"kiwi\"</span><span class=\"p\">,</span> <span class=\"s2\">\"m\"</span><span class=\"p\">,</span> <span class=\"s2\">\"ios\"</span><span class=\"p\">)</span>\n\n        <span class=\"k\">when</span> <span class=\"ss\">:none</span>\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">set_test_framework</span><span class=\"p\">(</span><span class=\"s2\">\"xctest\"</span><span class=\"p\">,</span> <span class=\"s2\">\"m\"</span><span class=\"p\">,</span> <span class=\"s2\">\"ios\"</span><span class=\"p\">)</span>\n      <span class=\"k\">end</span>\n\n      <span class=\"n\">snapshots</span> <span class=\"o\">=</span> <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">ask_with_answers</span><span class=\"p\">(</span><span class=\"s2\">\"Would you like to do view based testing\"</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s2\">\"Yes\"</span><span class=\"p\">,</span> <span class=\"s2\">\"No\"</span><span class=\"p\">]).</span><span class=\"nf\">to_sym</span>\n      <span class=\"k\">case</span> <span class=\"n\">snapshots</span>\n        <span class=\"k\">when</span> <span class=\"ss\">:yes</span>\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_pod_to_podfile</span> <span class=\"s2\">\"FBSnapshotTestCase\"</span>\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_line_to_pch</span> <span class=\"s2\">\"@import FBSnapshotTestCase;\"</span>\n\n          <span class=\"k\">if</span> <span class=\"n\">keep_demo</span> <span class=\"o\">==</span> <span class=\"ss\">:no</span>\n              <span class=\"nb\">puts</span> <span class=\"s2\">\" Putting demo application back in, you cannot do view tests without a host application.\"</span>\n              <span class=\"n\">keep_demo</span> <span class=\"o\">=</span> <span class=\"ss\">:yes</span>\n          <span class=\"k\">end</span>\n\n          <span class=\"k\">if</span> <span class=\"n\">framework</span> <span class=\"o\">==</span> <span class=\"ss\">:specta</span>\n              <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_pod_to_podfile</span> <span class=\"s2\">\"Expecta+Snapshots\"</span>\n              <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_line_to_pch</span> <span class=\"s2\">\"@import Expecta_Snapshots;\"</span>\n          <span class=\"k\">end</span>\n      <span class=\"k\">end</span>\n\n      <span class=\"n\">prefix</span> <span class=\"o\">=</span> <span class=\"kp\">nil</span>\n\n      <span class=\"kp\">loop</span> <span class=\"k\">do</span>\n        <span class=\"n\">prefix</span> <span class=\"o\">=</span> <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">ask</span><span class=\"p\">(</span><span class=\"s2\">\"What is your class prefix\"</span><span class=\"p\">).</span><span class=\"nf\">upcase</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">prefix</span><span class=\"p\">.</span><span class=\"nf\">include?</span><span class=\"p\">(</span><span class=\"s1\">' '</span><span class=\"p\">)</span>\n          <span class=\"nb\">puts</span> <span class=\"s1\">'Your class prefix cannot contain spaces.'</span><span class=\"p\">.</span><span class=\"nf\">red</span>\n        <span class=\"k\">else</span>\n          <span class=\"k\">break</span>\n        <span class=\"k\">end</span>\n      <span class=\"k\">end</span>\n\t      <span class=\"c1\">#……此处省略后面的代码……#</span>\n  <span class=\"k\">end</span>\n\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>找到相关的问答区：</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n</pre></td><td class=\"rouge-code\"><pre>    <span class=\"k\">def</span> <span class=\"nf\">perform</span>\n      <span class=\"c1\">#自定义模板优化: 这里默认需要demo，当然如果想要设置成其他的，也可以调用其他方法，或者恢复询问式配置</span>\n      <span class=\"n\">keep_demo</span> <span class=\"o\">=</span> <span class=\"s2\">\"yes\"</span><span class=\"c1\">#configurator.ask_with_answers(\"Would you like to include a demo application with your library\", [\"Yes\", \"No\"]).to_sym</span>\n      <span class=\"c1\">#自定义模板优化：: 这里默认不需要testing frameworks，当然如果想要设置成其他的，也可以调用其他方法，或者恢复询问式配置</span>\n      <span class=\"n\">framework</span> <span class=\"o\">=</span> <span class=\"s2\">\"none\"</span> <span class=\"c1\">#configurator.ask_with_answers(\"Which testing frameworks will you use\", [\"Specta\", \"Kiwi\", \"None\"]).to_sym</span>\n      <span class=\"k\">case</span> <span class=\"n\">framework</span>\n        <span class=\"k\">when</span> <span class=\"ss\">:specta</span>\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_pod_to_podfile</span> <span class=\"s2\">\"Specta\"</span>\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_pod_to_podfile</span> <span class=\"s2\">\"Expecta\"</span>\n\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_line_to_pch</span> <span class=\"s2\">\"@import Specta;\"</span>\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_line_to_pch</span> <span class=\"s2\">\"@import Expecta;\"</span>\n\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">set_test_framework</span><span class=\"p\">(</span><span class=\"s2\">\"specta\"</span><span class=\"p\">,</span> <span class=\"s2\">\"m\"</span><span class=\"p\">,</span> <span class=\"s2\">\"ios\"</span><span class=\"p\">)</span>\n\n        <span class=\"k\">when</span> <span class=\"ss\">:kiwi</span>\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_pod_to_podfile</span> <span class=\"s2\">\"Kiwi\"</span>\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_line_to_pch</span> <span class=\"s2\">\"@import Kiwi;\"</span>\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">set_test_framework</span><span class=\"p\">(</span><span class=\"s2\">\"kiwi\"</span><span class=\"p\">,</span> <span class=\"s2\">\"m\"</span><span class=\"p\">,</span> <span class=\"s2\">\"ios\"</span><span class=\"p\">)</span>\n\n        <span class=\"k\">when</span> <span class=\"ss\">:none</span>\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">set_test_framework</span><span class=\"p\">(</span><span class=\"s2\">\"xctest\"</span><span class=\"p\">,</span> <span class=\"s2\">\"m\"</span><span class=\"p\">,</span> <span class=\"s2\">\"ios\"</span><span class=\"p\">)</span>\n      <span class=\"k\">end</span>\n\n      <span class=\"c1\">#自定义模板优化：这里默认不需要view based testing，当然如果想要设置成其他的，也可以调用其他方法，或者恢复询问式配置</span>\n      <span class=\"n\">snapshots</span> <span class=\"o\">=</span> <span class=\"s2\">\"no\"</span><span class=\"c1\">#configurator.ask_with_answers(\"Would you like to do view based testing\", [\"Yes\", \"No\"]).to_sym</span>\n      <span class=\"k\">case</span> <span class=\"n\">snapshots</span>\n        <span class=\"k\">when</span> <span class=\"ss\">:yes</span>\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_pod_to_podfile</span> <span class=\"s2\">\"FBSnapshotTestCase\"</span>\n          <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_line_to_pch</span> <span class=\"s2\">\"@import FBSnapshotTestCase;\"</span>\n\n          <span class=\"k\">if</span> <span class=\"n\">keep_demo</span> <span class=\"o\">==</span> <span class=\"ss\">:no</span>\n              <span class=\"nb\">puts</span> <span class=\"s2\">\" Putting demo application back in, you cannot do view tests without a host application.\"</span>\n              <span class=\"n\">keep_demo</span> <span class=\"o\">=</span> <span class=\"ss\">:yes</span>\n          <span class=\"k\">end</span>\n\n          <span class=\"k\">if</span> <span class=\"n\">framework</span> <span class=\"o\">==</span> <span class=\"ss\">:specta</span>\n              <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_pod_to_podfile</span> <span class=\"s2\">\"Expecta+Snapshots\"</span>\n              <span class=\"n\">configurator</span><span class=\"p\">.</span><span class=\"nf\">add_line_to_pch</span> <span class=\"s2\">\"@import Expecta_Snapshots;\"</span>\n          <span class=\"k\">end</span>\n      <span class=\"k\">end</span>\n\n      <span class=\"n\">prefix</span> <span class=\"o\">=</span> <span class=\"kp\">nil</span>\n\n      <span class=\"kp\">loop</span> <span class=\"k\">do</span>\n      <span class=\"c1\">#自定义模板优化：这里默认prefix为PSC，当然如果想要设置成其他的，也可以调用其他方法，或者恢复询问式配置</span>\n        <span class=\"n\">prefix</span> <span class=\"o\">=</span> <span class=\"s2\">\"PSC\"</span><span class=\"c1\">#configurator.ask(\"What is your class prefix\").upcase</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">prefix</span><span class=\"p\">.</span><span class=\"nf\">include?</span><span class=\"p\">(</span><span class=\"s1\">' '</span><span class=\"p\">)</span>\n          <span class=\"nb\">puts</span> <span class=\"s1\">'Your class prefix cannot contain spaces.'</span><span class=\"p\">.</span><span class=\"nf\">red</span>\n        <span class=\"k\">else</span>\n          <span class=\"k\">break</span>\n        <span class=\"k\">end</span>\n      <span class=\"k\">end</span>\n      <span class=\"c1\">#……此处省略后面的代码……#</span>\n  <span class=\"k\">end</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>至此，优化的自定义模板已经完成，再创建另一个（如果你需要保留上面那种简易自定义）git仓库存储，一键创建更符合需求的pod私有库模板：let‘s try</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre> pod lib create xx  <span class=\"nt\">--template-url</span><span class=\"o\">=</span>ssh://内网githost/ios/Pods/Tmplate/PSC_iOS_Objc_Demo_NoneTest.git\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h2 id=\"4-如果你还是使用gem管理pod插件的话\">4. 如果你还是使用Gem管理Pod插件的话</h2>\n\n<p>一般而言，在多人团队中，需要用到Gem来管理Pod插件版本，避免由于Pod版本不一致，导致的集成与编译问题，如果你还有Gemfile需要配置的话，由于模板配置的代码最后的是：</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n</pre></td><td class=\"rouge-code\"><pre>      <span class=\"c1\"># There has to be a single file in the Classes dir</span>\n      <span class=\"c1\"># or a framework won't be created, which is now default</span>\n      <span class=\"sb\">`touch Pod/Classes/ReplaceMe.m`</span>\n\n      <span class=\"sb\">`mv ./templates/ios/* ./`</span>\n\n      <span class=\"c1\"># remove podspec for osx</span>\n      <span class=\"sb\">`rm ./NAME-osx.podspec`</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>在Podfile同级目录下也存放一个自己在用的Gemfile即可:</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c1\"># frozen_string_literal: true</span>\n\n<span class=\"n\">source</span> <span class=\"s2\">\"https://rubygems.org\"</span>\n\n<span class=\"n\">gem</span> <span class=\"s1\">'cocoapods'</span><span class=\"p\">,</span> <span class=\"s1\">'1.11.2'</span>\n\n<span class=\"n\">git_source</span><span class=\"p\">(</span><span class=\"ss\">:github</span><span class=\"p\">)</span> <span class=\"p\">{</span><span class=\"o\">|</span><span class=\"n\">repo_name</span><span class=\"o\">|</span> <span class=\"s2\">\"https://github.com/</span><span class=\"si\">#{</span><span class=\"n\">repo_name</span><span class=\"si\">}</span><span class=\"s2\">\"</span> <span class=\"p\">}</span>\n\n<span class=\"c1\"># gem \"rails\"</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h2 id=\"5-最后的忽略\">5 最后的忽略</h2>\n\n<p>模板创建之后，会执行Pod install，此时与常规工程一样，在Example下会新增Pod文件夹存在Pod依赖库，提交时需忽略，本着能少干重复劳动就不多干的原则，我们再把.gitignore修改一下：</p>\n\n<p>在根目录中找到.gitignore文件，由于是.开头，默认是隐藏了，在下面代码中添加你需要忽略的文件夹</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c\"># macOS</span>\n.DS_Store\n\n<span class=\"c\"># Xcode</span>\nbuild/\n<span class=\"k\">*</span>.pbxuser\n<span class=\"o\">!</span>default.pbxuser\n<span class=\"k\">*</span>.mode1v3\n<span class=\"o\">!</span>default.mode1v3\n<span class=\"k\">*</span>.mode2v3\n<span class=\"o\">!</span>default.mode2v3\n<span class=\"k\">*</span>.perspectivev3\n<span class=\"o\">!</span>default.perspectivev3\nxcuserdata/\n<span class=\"k\">*</span>.xccheckout\n<span class=\"k\">*</span>.moved-aside\nDerivedData\n<span class=\"k\">*</span>.hmap\n<span class=\"k\">*</span>.ipa\n\n<span class=\"c\"># Bundler</span>\n.bundle\n\n<span class=\"c\"># Add this line if you want to avoid checking in source code from Carthage dependencies.</span>\n<span class=\"c\"># Carthage/Checkouts</span>\n\nCarthage/Build\n\n<span class=\"c\"># We recommend against adding the Pods directory to your .gitignore. However</span>\n<span class=\"c\"># you should judge for yourself, the pros and cons are mentioned at:</span>\n<span class=\"c\"># https://guides.cocoapods.org/using/using-cocoapods.html#should-i-ignore-the-pods-directory-in-source-control</span>\n<span class=\"c\"># </span>\n<span class=\"c\"># Note: if you ignore the Pods directory, make sure to uncomment</span>\n<span class=\"c\"># `pod install` in .travis.yml</span>\n<span class=\"c\">#</span>\n<span class=\"c\"># Pods/ #打开此处注释可以忽略 以下Example/Pods/</span>\n\n<span class=\"c\">#以下可以继续添加忽略文件及文件夹</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h2 id=\"6扩展podfile依赖\">6.扩展：Podfile依赖</h2>\n\n<p>一般而言，创建的Pod私有库中的Podfile，会包含简单的模板：</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n</pre></td><td class=\"rouge-code\"><pre><span class=\"n\">use_frameworks!</span>\n\n<span class=\"n\">platform</span> <span class=\"ss\">:ios</span><span class=\"p\">,</span> <span class=\"s1\">'10.0'</span>\n\n<span class=\"n\">target</span> <span class=\"s1\">'${POD_NAME}_Example'</span> <span class=\"k\">do</span>\n  <span class=\"n\">pod</span> <span class=\"s1\">'${POD_NAME}'</span><span class=\"p\">,</span> <span class=\"ss\">:path</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'../'</span>\n\n  <span class=\"n\">target</span> <span class=\"s1\">'${POD_NAME}_Tests'</span> <span class=\"k\">do</span>\n    <span class=\"n\">inherit!</span> <span class=\"ss\">:search_paths</span>\n\n    <span class=\"err\">$</span><span class=\"p\">{</span><span class=\"no\">INCLUDED_PODS</span><span class=\"p\">}</span>\n  <span class=\"k\">end</span>\n<span class=\"k\">end</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>对于单个Pod组件库，也许够用了，但是我们如果是在进行组件化改造的进程中，需要与现有的私有库进行交互与依赖：比如业务库依赖基础库等，</p>\n\n<p>为了方便起见，不至于对每次创建私有库进行Podfile配置（还是懒😭），因此对Podfile进行了改造：</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n</pre></td><td class=\"rouge-code\"><pre><span class=\"n\">source</span> <span class=\"s1\">'ssh://私有库git地址/Specs.git'</span>\n<span class=\"n\">source</span> <span class=\"s1\">'https://github.com/CocoaPods/Specs.git'</span>\n\n<span class=\"n\">use_frameworks!</span>\n\n<span class=\"n\">platform</span> <span class=\"ss\">:ios</span><span class=\"p\">,</span> <span class=\"s1\">'12.0'</span>\t<span class=\"c1\">#写这篇文章时使用的podfile默认是10.0，可以改成你需要的</span>\n<span class=\"n\">post_install</span> <span class=\"k\">do</span> <span class=\"o\">|</span><span class=\"n\">installer</span><span class=\"o\">|</span>\n    <span class=\"n\">installer</span><span class=\"p\">.</span><span class=\"nf\">generated_projects</span><span class=\"p\">.</span><span class=\"nf\">each</span> <span class=\"k\">do</span> <span class=\"o\">|</span><span class=\"n\">project</span><span class=\"o\">|</span>\n          <span class=\"n\">project</span><span class=\"p\">.</span><span class=\"nf\">targets</span><span class=\"p\">.</span><span class=\"nf\">each</span> <span class=\"k\">do</span> <span class=\"o\">|</span><span class=\"n\">target</span><span class=\"o\">|</span>\n              <span class=\"n\">target</span><span class=\"p\">.</span><span class=\"nf\">build_configurations</span><span class=\"p\">.</span><span class=\"nf\">each</span> <span class=\"k\">do</span> <span class=\"o\">|</span><span class=\"n\">config</span><span class=\"o\">|</span>\n                  <span class=\"n\">config</span><span class=\"p\">.</span><span class=\"nf\">build_settings</span><span class=\"p\">[</span><span class=\"s1\">'IPHONEOS_DEPLOYMENT_TARGET'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">'12.0'</span>\n                  <span class=\"n\">config</span><span class=\"p\">.</span><span class=\"nf\">build_settings</span><span class=\"p\">[</span><span class=\"s2\">\"DEVELOPMENT_TEAM\"</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s2\">\"xxxxx\"</span>\t<span class=\"c1\">#这里指定签名，避免编译出错还要手动指定</span>\n               <span class=\"k\">end</span>\n          <span class=\"k\">end</span>\n   <span class=\"k\">end</span>\n<span class=\"k\">end</span>\n\n<span class=\"n\">use_frameworks!</span>\n\n\n<span class=\"n\">target</span> <span class=\"s1\">'${POD_NAME}_Example'</span> <span class=\"k\">do</span>\n\n<span class=\"c1\">#新建pod库创建模板的时候把私有库拉取一下</span>\n<span class=\"k\">def</span> <span class=\"nf\">debug_pod</span><span class=\"p\">(</span><span class=\"n\">pod_name</span><span class=\"p\">)</span>\n  <span class=\"n\">this_pod_name</span> <span class=\"o\">=</span> <span class=\"s2\">\"${POD_NAME}\"</span>\n  <span class=\"nb\">puts</span> <span class=\"s2\">\"debug_pod :pod_name = </span><span class=\"si\">#{</span><span class=\"n\">pod_name</span><span class=\"si\">}</span><span class=\"s2\"> and this_pod_name is </span><span class=\"si\">#{</span><span class=\"n\">this_pod_name</span><span class=\"si\">}</span><span class=\"s2\">\"</span>\n  <span class=\"k\">if</span> <span class=\"n\">this_pod_name</span> <span class=\"o\">==</span> <span class=\"n\">pod_name</span>\n    <span class=\"nb\">puts</span> <span class=\"s2\">\"</span><span class=\"si\">#{</span><span class=\"n\">this_pod_name</span><span class=\"si\">}</span><span class=\"s2\"> is equal args </span><span class=\"si\">#{</span><span class=\"n\">pod_name</span><span class=\"si\">}</span><span class=\"s2\"> do not pod\"</span>\n  <span class=\"k\">elsif</span>\n    <span class=\"c1\">#为了方便管理，这里的所有私有库建议放在同一个目录下</span>\n    <span class=\"n\">pod</span> <span class=\"s2\">\"</span><span class=\"si\">#{</span><span class=\"n\">pod_name</span><span class=\"si\">}</span><span class=\"s2\">\"</span><span class=\"p\">,</span> <span class=\"ss\">:path</span> <span class=\"o\">=&gt;</span> <span class=\"s2\">\"../../</span><span class=\"si\">#{</span><span class=\"n\">pod_name</span><span class=\"si\">}</span><span class=\"s2\">/\"</span>\n  <span class=\"k\">end</span>\n<span class=\"k\">end</span>\n\n  <span class=\"c1\">#为了避免重复定义 这里统一按下面方式进行处理吧，由于下文已经匹配了当前pod，这里不用注释掉</span>\n  <span class=\"n\">pod</span> <span class=\"s1\">'${POD_NAME}'</span><span class=\"p\">,</span> <span class=\"ss\">:path</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'../'</span>\n    \n  <span class=\"c1\">#这里定义需要被引入的所有私有库的库名</span>\n  <span class=\"n\">private_pods</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">\"基础组件1\"</span><span class=\"p\">,</span> <span class=\"s2\">\"基础组件2\"</span><span class=\"p\">,</span> <span class=\"s2\">\"基础组件3\"</span><span class=\"p\">,</span> <span class=\"s2\">\"能力组件1\"</span><span class=\"p\">,</span>  <span class=\"s2\">\"能力组件2\"</span><span class=\"p\">,</span>  <span class=\"s2\">\"能力组件3\"</span><span class=\"p\">,</span>  <span class=\"s2\">\"业务组件1\"</span><span class=\"p\">,</span>  <span class=\"s2\">\"业务组件2\"</span><span class=\"p\">]</span>\n\n  <span class=\"c1\">#这里将所有私有库名与路径匹配起来进行pod</span>\n  <span class=\"n\">private_pods</span><span class=\"p\">.</span><span class=\"nf\">each</span> <span class=\"k\">do</span> <span class=\"o\">|</span><span class=\"n\">private_pod</span><span class=\"o\">|</span>\n    <span class=\"n\">debug_pod</span><span class=\"p\">(</span><span class=\"n\">private_pod</span><span class=\"p\">)</span>\n  <span class=\"k\">end</span>\n\n\n  <span class=\"c1\">#如果上述方法用不来，或者不好用也可以改用下面比较传统的方式进行：</span>\n  <span class=\"c1\">#pod '基础组件1', :path =&gt; '../../基础组件1/'</span>\n  <span class=\"c1\">#pod '基础组件2', :path =&gt; '../../基础组件2/'</span>\n  <span class=\"c1\">#pod '基础组件3', :path =&gt; '../../基础组件3/'</span>\n\n  <span class=\"c1\">#pod '能力组件1', :path =&gt; '../../能力组件1/'</span>\n  <span class=\"c1\">#pod '能力组件2', :path =&gt; '../../能力组件2/'</span>\n  <span class=\"c1\">#pod '能力组件3', :path =&gt; '../../能力组件3/'</span>\n\n  <span class=\"c1\">#pod '业务组件1', :path =&gt; '../../业务组件1/'</span>\n  <span class=\"c1\">#pod '业务组件2', :path =&gt; '../../业务组件2/'</span>\n\n  <span class=\"n\">target</span> <span class=\"s1\">'${POD_NAME}_Tests'</span> <span class=\"k\">do</span>\n    <span class=\"n\">inherit!</span> <span class=\"ss\">:search_paths</span>\n    <span class=\"err\">$</span><span class=\"p\">{</span><span class=\"no\">INCLUDED_PODS</span><span class=\"p\">}</span>\n  <span class=\"k\">end</span>\n<span class=\"k\">end</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>值得一提的是，需要把所有Dev Pod放在同一个目录下，避免路径管理麻烦</p>\n\n<p>至此，生产的Pod组件库模板可以满足组件化进程需求了。</p>\n\n<p>##</p>\n\n\n                <hr style=\"visibility: hidden;\">\n                <ul class=\"pager\">\n                    \n                    <li class=\"previous\">\n                        <a href=\"/2023/07/20/iOS%E7%BB%84%E4%BB%B6%E5%8C%96%E5%AE%9E%E8%B7%B5%E4%BA%8C-%E5%AE%9E%E8%B7%B5%E8%BF%87%E7%A8%8B%E7%A2%B0%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"iOS组件化实践二：实践过程碰到的问题\">\n                        Previous<br>\n                        <span>iOS组件化实践二：实践过程碰到的问题</span>\n                        </a>\n                    </li>\n                    \n                    \n                    <li class=\"next\">\n                        <a href=\"/2023/07/26/5-iOS%E7%BB%84%E4%BB%B6%E5%8C%96-%E8%B5%84%E6%BA%90%E7%BB%84%E4%BB%B6%E5%BA%93/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"iOS组件化实践之：资源组件库\">\n                        Next<br>\n                        <span>iOS组件化实践之：资源组件库</span>\n                        </a>\n                    </li>\n                    \n                </ul>\n                <hr style=\"visibility: hidden;\">\n\n                \n                <!-- disqus 评论框 start -->\n                <div class=\"comment\">\n                    <div id=\"disqus_thread\" class=\"disqus-thread\"></div>\n                </div>\n                <!-- disqus 评论框 end -->\n                \n\n                \n            </div>  \n\n    <!-- Side Catalog Container -->\n        \n            <div class=\"\n                col-lg-2 col-lg-offset-0\n                visible-lg-block\n                sidebar-container\n                catalog-container\">\n                <div class=\"side-catalog\">\n                    <hr class=\"hidden-sm hidden-xs\">\n                    <h5>\n                        <a class=\"catalog-toggle\" href=\"#\">CATALOG</a>\n                    </h5>\n                    <ul class=\"catalog-body\"></ul>\n                </div>\n            </div>\n        \n\n    <!-- Sidebar Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                sidebar-container\">\n\n                <!-- Featured Tags -->\n                \n\n\n<section>\n    \n        <hr class=\"hidden-sm hidden-xs\">\n    \n    <h5><a href=\"/archive/\">FEATURED TAGS</a></h5>\n    <div class=\"tags\">\n        \n        \n        \n        \n        \n    </div>\n</section>\n\n\n                <!-- Friends Blog -->\n                \n            </div>\n        </div>\n    </div>\n</article>\n\n<!-- add support for mathjax by voleking-->\n\n\n\n\n\n\n<!-- disqus 公共JS代码 start (一个网页只需插入一次) -->\n<script type=\"text/javascript\">\n    /* * * CONFIGURATION VARIABLES * * */\n    var disqus_shortname = \"Cyp\";\n    var disqus_identifier = \"/2023/07/26/4-iOS组件化模板\";\n    var disqus_url = \"http://localhost:4000/2023/07/26/4-iOS%E7%BB%84%E4%BB%B6%E5%8C%96%E6%A8%A1%E6%9D%BF/\";\n\n    (function() {\n        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;\n        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';\n        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);\n    })();\n</script>\n<!-- disqus 公共JS代码 end -->\n\n\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n      var d = document, t = 'script',\n          o = d.createElement(t),\n          s = d.getElementsByTagName(t)[0];\n      o.src = u;\n      if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n      s.parentNode.insertBefore(o, s);\n    }\n</script>\n<!-- anchor-js, Doc:http://bryanbraun.github.io/anchorjs/ -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/anchor-js/1.1.1/anchor.min.js\",function(){\n        anchors.options = {\n          visible: 'hover',\n          placement: 'right',\n          // icon: '#'\n        };\n        anchors.add().remove('.intro-header h1').remove('.subheading').remove('.sidebar-container h5');\n    })\n</script>\n<style>\n    /* place left on bigger screen */\n    @media all and (min-width: 800px) {\n        .anchorjs-link{\n            position: absolute;\n            left: -0.75em;\n            font-size: 1.1em;\n            margin-top : -0.1em;\n        }\n    }\n</style>\n\n\n\n    <!-- Footer -->\n<footer>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <!-- SNS Link -->\n                \n\n\n<ul class=\"list-inline text-center\">\n\n\n  \n  \n  \n  \n  \n  \n  \n</ul>\n\n                <p class=\"copyright text-muted\">\n                    Copyright &copy; PaysonChen Blog 2024\n                    <br>\n                    <!-- Powered by <a href=\"http://huangxuan.me\">Hux Blog</a> | -->\n                 <!--    <iframe style=\"margin-left: 2px; margin-bottom:-5px;\" frameborder=\"0\" scrolling=\"0\" width=\"100px\"\n                        height=\"20px\"\n                        src=\"https://ghbtns.com/github-btn.html?user=huxpro&repo=huxpro.github.io&type=star&count=true\">\n                    </iframe> -->\n                </p>\n            </div>\n        </div>\n    </div>\n</footer>\n\n<!-- jQuery -->\n<script src=\"/js/jquery.min.js \"></script>\n\n<!-- Bootstrap Core JavaScript -->\n<!-- Currently, only navbar scroll-down effect at desktop still depends on this -->\n<script src=\"/js/bootstrap.min.js \"></script>\n\n<!-- Custom Theme JavaScript -->\n<script src=\"/js/hux-blog.min.js \"></script>\n\n<!-- Simple Jekyll Search -->\n<script src=\"/js/simple-jekyll-search.min.js\"></script>\n\n<!-- Service Worker -->\n\n<script src=\"/js/snackbar.js \"></script>\n<script src=\"/js/sw-registration.js \"></script>\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n        var d = document, t = 'script',\n            o = d.createElement(t),\n            s = d.getElementsByTagName(t)[0];\n        o.src = u;\n        if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n        s.parentNode.insertBefore(o, s);\n    }\n</script>\n\n<!--\n     Because of the native support for backtick-style fenced code blocks\n     right within the Markdown is landed in Github Pages,\n     From V1.6, There is no need for Highlight.js,\n     so Huxblog drops it officially.\n\n     - https://github.com/blog/2100-github-pages-now-faster-and-simpler-with-jekyll-3-0\n     - https://help.github.com/articles/creating-and-highlighting-code-blocks/\n     - https://github.com/jneen/rouge/wiki/list-of-supported-languages-and-lexers\n-->\n<!--\n    <script>\n        async(\"http://cdn.bootcss.com/highlight.js/8.6/highlight.min.js\", function(){\n            hljs.initHighlightingOnLoad();\n        })\n    </script>\n    <link href=\"http://cdn.bootcss.com/highlight.js/8.6/styles/github.min.css\" rel=\"stylesheet\">\n-->\n\n\n\n\n\n\n\n<!--fastClick.js -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/fastclick/1.0.6/fastclick.min.js\", function () {\n        var $nav = document.querySelector(\"nav\");\n        if ($nav) FastClick.attach($nav);\n    })\n</script>\n\n\n<!-- Google Analytics -->\n\n\n\n<!-- Baidu Tongji -->\n\n\n\n<!-- Side Catalog -->\n\n<script type=\"text/javascript\">\n    function generateCatalog(selector) {\n\n        // interop with multilangual \n        if ('' == 'true') {\n            _containerSelector = 'div.post-container.active'\n        } else {\n            _containerSelector = 'div.post-container'\n        }\n\n        // init\n        var P = $(_containerSelector), a, n, t, l, i, c;\n        a = P.find('h1,h2,h3,h4,h5,h6');\n\n        // clean\n        $(selector).html('')\n\n        // appending\n        a.each(function () {\n            n = $(this).prop('tagName').toLowerCase();\n            i = \"#\" + $(this).prop('id');\n            t = $(this).text();\n            c = $('<a href=\"' + i + '\" rel=\"nofollow\">' + t + '</a>');\n            l = $('<li class=\"' + n + '_nav\"></li>').append(c);\n            $(selector).append(l);\n        });\n        return true;\n    }\n\n    generateCatalog(\".catalog-body\");\n\n    // toggle side catalog\n    $(\".catalog-toggle\").click((function (e) {\n        e.preventDefault();\n        $('.side-catalog').toggleClass(\"fold\")\n    }))\n\n    /*\n     * Doc: https://github.com/davist11/jQuery-One-Page-Nav\n     * Fork by Hux to support padding\n     */\n    async(\"/js/jquery.nav.js\", function () {\n        $('.catalog-body').onePageNav({\n            currentClass: \"active\",\n            changeHash: !1,\n            easing: \"swing\",\n            filter: \"\",\n            scrollSpeed: 700,\n            scrollOffset: 0,\n            scrollThreshold: .2,\n            begin: null,\n            end: null,\n            scrollChange: null,\n            padding: 80\n        });\n    });\n</script>\n\n\n\n<!-- Multi-Lingual -->\n\n\n<!-- Simple Jekyll Search -->\n<script>\n    // https://stackoverflow.com/questions/1912501/unescape-html-entities-in-javascript\n    function htmlDecode(input) {\n        var e = document.createElement('textarea');\n        e.innerHTML = input;\n        // handle case of empty input\n        return e.childNodes.length === 0 ? \"\" : e.childNodes[0].nodeValue;\n    }\n\n    SimpleJekyllSearch({\n        searchInput: document.getElementById('search-input'),\n        resultsContainer: document.getElementById('search-results'),\n        json: '/search.json',\n        searchResultTemplate: '<div class=\"post-preview item\"><a href=\"{url}\"><h2 class=\"post-title\">{title}</h2><h3 class=\"post-subtitle\">{subtitle}</h3><hr></a></div>',\n        noResultsText: 'No results',\n        limit: 50,\n        fuzzy: false,\n        // a hack to get escaped subtitle unescaped. for some reason, \n        // post.subtitle w/o escape filter nuke entire search.\n        templateMiddleware: function (prop, value, template) {\n            if (prop === 'subtitle' || prop === 'title') {\n                if (value.indexOf(\"code\")) {\n                    return htmlDecode(value);\n                } else {\n                    return value;\n                }\n            }\n        }\n    });\n\n    $(document).ready(function () {\n        var $searchPage = $('.search-page');\n        var $searchOpen = $('.search-icon');\n        var $searchClose = $('.search-icon-close');\n        var $searchInput = $('#search-input');\n        var $body = $('body');\n\n        $searchOpen.on('click', function (e) {\n            e.preventDefault();\n            $searchPage.toggleClass('search-active');\n            var prevClasses = $body.attr('class') || '';\n            setTimeout(function () {\n                $body.addClass('no-scroll');\n            }, 400)\n\n            if ($searchPage.hasClass('search-active')) {\n                $searchClose.on('click', function (e) {\n                    e.preventDefault();\n                    $searchPage.removeClass('search-active');\n                    $body.attr('class', prevClasses);  // from closure \n                });\n                $searchInput.focus();\n            }\n        });\n    });\n</script>\n\n\n<!-- Image to hack wechat -->\n<img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\" />\n<!-- Migrate from head to bottom, no longer block render and still work -->\n\n</body>\n\n</html>\n","excerpt":"<h1 id=\"ios组件化实践之新建一个pod组件库\">iOS组件化实践之：新建一个Pod组件库</h1>\n","url":"/2023/07/26/4-iOS%E7%BB%84%E4%BB%B6%E5%8C%96%E6%A8%A1%E6%9D%BF/","next":{"id":"/2023/07/26/5-iOS组件化-资源组件库","tags":[],"relative_path":"_posts/2023-07-26-5-iOS组件化-资源组件库.md","collection":"posts","name":"2023-07-26-5-iOS组件化-资源组件库.md","url":"/2023/07/26/5-iOS%E7%BB%84%E4%BB%B6%E5%8C%96-%E8%B5%84%E6%BA%90%E7%BB%84%E4%BB%B6%E5%BA%93/","title":"iOS组件化实践之：资源组件库","date":"2023-07-26 00:00:00 +0800","categories":[],"path":"_posts/2023-07-26-5-iOS组件化-资源组件库.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/home-bg-geek.jpg","slug":"5-iOS组件化-资源组件库","ext":".md"},"title":"iOS组件化实践之：新建一个Pod组件库","date":"2023-07-26 00:00:00 +0800","categories":[],"path":"_posts/2023-07-26-4-iOS组件化模板.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/home-bg-geek.jpg","slug":"4-iOS组件化模板","ext":".md"},"title":"iOS组件化实践二：实践过程碰到的问题","date":"2023-07-20 00:00:00 +0800","categories":[],"path":"_posts/2023-07-20-iOS组件化实践二-实践过程碰到的问题.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/home-bg-geek.jpg","slug":"iOS组件化实践二-实践过程碰到的问题","ext":".md"},{"id":"/2023/07/14/iOS组件化实践一_序言","tags":[],"relative_path":"_posts/2023-07-14-iOS组件化实践一_序言.md","collection":"posts","content":"<h1 id=\"序言\">序言</h1>\n\n<p>过去十几年，国内移动互联网浪潮崛起，移动应用的构建也如雨后春笋，从一开始大约是在2011年业余开发者做一款播放器放到App Store可以产生最多百万月流水<sup>[1]</sup>， 到现在，满目琳琅到App，珍惜手机空间如金，不肯多装一款普通的App的时代，经历过一波又一波的技术革新，自从CocoaPods于2011年9月1日时编译了第一个公开版本<sup>[2]</sup>，开启了iOS项目拥有应用级别的依赖管理器到时代。</p>\n\n<p>在移动互联网领域从蓝海变成红海的过程中，项目构建的初期也慢慢从不拘小节的架构转向组件化架构的演进。</p>\n\n<h2 id=\"1-不拘小节的架构设计\">1. 不拘小节的架构设计</h2>\n\n<p>可以理解为一种为了</p>\n\n<ol>\n  <li>一些厂商快速试错，快速投入市场验证业务模式的可行性</li>\n  <li>一些厂商为了低成本快速交付一些外包项目</li>\n</ol>\n\n<p>上述实践有一个共同点，就是没有考虑到后续的持续维护的成本与代价。</p>\n\n<p>不拘小节的架构通常以如下方式存在：</p>\n\n<p><strong>1.1、初期的iOS项目以Project工程为主，各种从网上摘取</strong></p>\n\n<ol>\n  <li>代码块</li>\n  <li>各种功能类</li>\n  <li>某些开源或者不开源的能力库（以lib或者framework方式集成）</li>\n</ol>\n\n<p>拼接而成，</p>\n\n<p><strong>1.2、在引入CocoaPods之后</strong></p>\n\n<ol>\n  <li>代码块</li>\n  <li>各种功能类</li>\n  <li>某些开源或者不开源的能力库（以lib或者framework方式集成）</li>\n  <li>以CocoaPods的方式集成公有私有的代码库（轮子）</li>\n</ol>\n\n<p>不拘小节的架构一般用于中小型，短时间内交付的产品，上述方式可以做到快速实现以及交付的可视化效果，而可持续性维护则无人关心。</p>\n\n<p>随着一些厂商快速占领市场，以及试错验证可行之后，由于项目到架构随意，参与人员不稳定等因素，加上破窗效应，以及不断形成风气的降本增效的企业诉求，这些团队将会面临维护成本不断攀升的高昂代价。</p>\n\n<h2 id=\"2-组件化架构设计\">2. 组件化架构设计</h2>\n\n<h3 id=\"21-不拘小节的架构设计的现状\">2.1 不拘小节的架构设计的现状</h3>\n\n<p>不拘小节的架构团队会面临什么现状？大致可概括为：</p>\n\n<ol>\n  <li><strong>历史问题挤压多：</strong>代码冗余，诸多历史问题未能及时发现</li>\n  <li><strong>定位修复问题难：</strong>代码混乱，问题定位代码分散，定位成本大，修复不彻底</li>\n  <li><strong>需求开发周期长：</strong>没有清晰规划，导致需求开发重复造轮子，增加了研发成本</li>\n</ol>\n\n<h3 id=\"22-组件化架构设计解决的问题\">2.2 组件化架构设计解决的问题</h3>\n\n<p>不拘小节的架构设计随着时间推移会遇到哪些问题呢？大致可概括为：</p>\n\n<ol>\n  <li><strong>混乱</strong>：代码统一写在一个工程内部，查找定位问题困难</li>\n  <li><strong>冗余</strong>：相同功能的代码实现多套，修复问题不彻底</li>\n  <li><strong>不可复用</strong>：无可复用的模块，多App之间需要重复实现</li>\n</ol>\n\n<h3 id=\"23-组件化架构设计带来的问题\">2.3 组件化架构设计带来的问题</h3>\n\n<p>而组件化架构则可以弥补不拘小节的架构方式的诸多短板，降低项目的持续维护成本与代价，又能做到哪些改进呢？大概可概括为：</p>\n\n<ol>\n  <li><strong>高效解决问题：</strong>代码划分模块，修复问题及迭代维护形成闭环，提升效率</li>\n  <li><strong>清晰代码架构</strong>：清晰的调用链，解决问题漏改，改不全等逃逸到线上的问题</li>\n  <li><strong>可复用的能力</strong>：跨App共建能力，减少维护成本</li>\n</ol>\n\n<h2 id=\"3-组件化周期\">3. 组件化周期</h2>\n\n<p>​\t根据笔者在不同团队（初创团队～BAT一线团队）的观察，常规耗时根据项目大小和团队成员规模以及过程中的需求数量等情况大致为10～100人月/单端不等。笔者前公司是一线大厂，团队规模大，项目大，总共投入5～10人，前后1年6个月完成对现有项目的初步组件化改造，而对于创立之初的创业团队，这个代价往往只需要10%。考虑到成本问题，组件化宜早不宜迟。</p>\n\n<h2 id=\"4-组件化架构设计的思路\">4. 组件化架构设计的思路</h2>\n\n<ol>\n  <li>功能组件的清晰的定义与划分</li>\n  <li>层次分明的基础模块设计，</li>\n  <li>上层的业务模块解偶</li>\n</ol>\n\n<p><img src=\"/img/1-1.png\" alt=\"/img/1-1.png\" /></p>\n","name":"2023-07-14-iOS组件化实践一_序言.md","previous":{"id":"/2022/09/26/Github多账号配置SSH","tags":[],"relative_path":"_posts/2022-09-26-Github多账号配置SSH.md","collection":"posts","content":"<h2 id=\"0x00-背景\">0x00 背景</h2>\n\n<p>​\t有时候需要多个github的账号，比如Github Page，如果有需要开多个可能就需要同时管理多个github账号</p>\n\n<h2 id=\"0x01-实践\">0x01 实践</h2>\n\n<p>​\t在ssh管理上使用常规的config配置文件:</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n</pre></td><td class=\"rouge-code\"><pre># github2\nHost XXX.github.com\nPort 22\nUser XXX\nHostName github.com\nPreferredAuthentications publickey\nIdentityFile ~/.ssh/id_rsa_github_XXX\n\n# github \nHost YYY.github.com\nPort 22\nUser YYY\nHostName github.com\nPreferredAuthentications publickey\nIdentityFile ~/.ssh/id_rsa_github_YYY\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>一开始还可以用</p>\n\n<h2 id=\"0x02-问题\">0x02 问题</h2>\n\n<p>过了一段时间想继续使用，发现出问题了</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n</pre></td><td class=\"rouge-code\"><pre>git clone git@github.com:nickname/web.git \n\n\nCloning into 'XXX.github.io'...\ngit@github.com: Permission denied (publickey).\nfatal: Could not read from remote repository.\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h2 id=\"0x03-解决\">0x03 解决</h2>\n\n<p>clone时 改为 git@other.github.com:nickname/web.git 即可</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>git@other.github.com:nickname/web.git \n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h2 id=\"0x04-其他问题\">0x04 其他问题</h2>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n</pre></td><td class=\"rouge-code\"><pre>Cloning into 'yyy'...\n/Users/xxxx/.ssh/config line 21: Bad key types 'publickey'.\n/Users/xxxx/.ssh/config: terminating, 1 bad configuration options\nfatal: Could not read from remote repository.\n\nPlease make sure you have the correct access rights\nand the repository exists.\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>此时表示 publickey 不符合这个仓库的加密类型尝试改成</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n</pre></td><td class=\"rouge-code\"><pre>PubkeyAcceptedAlgorithms publickey\n=&gt;\nPubkeyAcceptedAlgorithms +ssh-rsa\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n","name":"2022-09-26-Github多账号配置SSH.md","previous":{"id":"/2022/09/25/App瘦身实践之批量转换webp","tags":[],"relative_path":"_posts/2022-09-25-App瘦身实践之批量转换webp.md","collection":"posts","name":"2022-09-25-App瘦身实践之批量转换webp.md","url":"/2022/09/25/App%E7%98%A6%E8%BA%AB%E5%AE%9E%E8%B7%B5%E4%B9%8B%E6%89%B9%E9%87%8F%E8%BD%AC%E6%8D%A2webp/","title":"App瘦身实践之批量转换webp","date":"2022-09-25 00:00:00 +0800","categories":[],"path":"_posts/2022-09-25-App瘦身实践之批量转换webp.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/home-bg-geek.jpg","slug":"App瘦身实践之批量转换webp","ext":".md"},"output":"<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"google-site-verification\" content=\"xBT4GhYoi5qRD5tr338pgPM5OWHHIDR6mNg1a3euekI\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, viewport-fit=cover\">\n    <meta name=\"description\" content=\"与你一起发现更大的世界。\">\n    <meta name=\"keywords\"  content=\"PaysonChen,iOS,流媒体\">\n    <meta name=\"theme-color\" content=\"#000000\">\n    \n    <!-- Open Graph -->\n    <meta property=\"og:title\" content=\"Github多账号配置SSH - PaysonChen的博客 | PaysonChen Blog\">\n    \n    <meta property=\"og:type\" content=\"article\">\n    <meta property=\"og:description\" content=\"0x00 背景\n\">\n    \n    \n    <meta property=\"article:published_time\" content=\"2022-09-26T00:00:00Z\">\n    \n    \n    <meta property=\"article:author\" content=\"PaysonChen\">\n    \n    \n    \n    <meta property=\"og:image\" content=\"http://localhost:4000\">\n    <meta property=\"og:url\" content=\"http://localhost:4000/2022/09/26/Github%E5%A4%9A%E8%B4%A6%E5%8F%B7%E9%85%8D%E7%BD%AESSH/\">\n    <meta property=\"og:site_name\" content=\"PaysonChen的博客 | PaysonChen Blog\">\n    \n    <title>Github多账号配置SSH - PaysonChen的博客 | PaysonChen Blog</title>\n\n    <!-- Web App Manifest -->\n    <link rel=\"manifest\" href=\"/pwa/manifest.json\">\n\n    <!-- Favicon -->\n    <link rel=\"shortcut icon\" href=\"/img/favicon.ico\">\n    \n    <!-- Canonical URL -->\n    <link rel=\"canonical\" href=\"http://localhost:4000/2022/09/26/Github%E5%A4%9A%E8%B4%A6%E5%8F%B7%E9%85%8D%E7%BD%AESSH/\">\n\n    <!-- Bootstrap Core CSS -->\n    <link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\">\n\n    <!-- Custom CSS -->\n    <link rel=\"stylesheet\" href=\"/css/hux-blog.min.css\">\n\n    <!-- Custom Fonts -->\n    <!-- <link href=\"http://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\"> -->\n    <!-- Hux change font-awesome CDN to qiniu -->\n    <link href=\"//cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\">\n\n\n    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->\n    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->\n    <!--[if lt IE 9]>\n        <script src=\"https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js\"></script>\n        <script src=\"https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js\"></script>\n    <![endif]-->\n\n    <!-- ga & ba script hoook -->\n    <script></script>\n</head>\n\n\n<!-- hack iOS CSS :active style -->\n<body ontouchstart=\"\">\n\n    <!-- Navigation -->\n\n    <nav class=\"navbar navbar-default navbar-custom navbar-fixed-top\">\n        \n        <div class=\"container-fluid\">\n            <!-- Brand and toggle get grouped for better mobile display -->\n            <div class=\"navbar-header page-scroll\">\n                <button type=\"button\" class=\"navbar-toggle\">\n                    <span class=\"sr-only\">Toggle navigation</span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                </button>\n                <a class=\"navbar-brand\" href=\"/\">PaysonChen Blog</a>\n            </div>\n\n            <!-- Collect the nav links, forms, and other content for toggling -->\n            <div id=\"huxblog_navbar\">\n                <div class=\"navbar-collapse\">\n                    <ul class=\"nav navbar-nav navbar-right\">\n                        <li>\n                            <a href=\"/\">Home</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        <li>\n                            <a href=\"/about/\">About</a>\n                        </li>\n                        \n                        \n                        \n                        <li>\n                            <a href=\"/archive/\">Archive</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        <li class=\"search-icon\">\n                            <a href=\"javascript:void(0)\">\n                                <i class=\"fa fa-search\"></i>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n            <!-- /.navbar-collapse -->\n        </div>\n        <!-- /.container -->\n    </nav>\n\n    <script>\n        // Drop Bootstarp low-performance Navbar\n        // Use customize navbar with high-quality material design animation\n        // in high-perf jank-free CSS3 implementation\n        var $body = document.body;\n        var $toggle = document.querySelector('.navbar-toggle');\n        var $navbar = document.querySelector('#huxblog_navbar');\n        var $collapse = document.querySelector('.navbar-collapse');\n\n        var __HuxNav__ = {\n            close: function () {\n                $navbar.className = \" \";\n                // wait until animation end.\n                setTimeout(function () {\n                    // prevent frequently toggle\n                    if ($navbar.className.indexOf('in') < 0) {\n                        $collapse.style.height = \"0px\"\n                    }\n                }, 400)\n            },\n            open: function () {\n                $collapse.style.height = \"auto\"\n                $navbar.className += \" in\";\n            }\n        }\n\n        // Bind Event\n        $toggle.addEventListener('click', function (e) {\n            if ($navbar.className.indexOf('in') > 0) {\n                __HuxNav__.close()\n            } else {\n                __HuxNav__.open()\n            }\n        })\n\n        /**\n         * Since Fastclick is used to delegate 'touchstart' globally\n         * to hack 300ms delay in iOS by performing a fake 'click',\n         * Using 'e.stopPropagation' to stop 'touchstart' event from \n         * $toggle/$collapse will break global delegation.\n         * \n         * Instead, we use a 'e.target' filter to prevent handler\n         * added to document close HuxNav.  \n         *\n         * Also, we use 'click' instead of 'touchstart' as compromise\n         */\n        document.addEventListener('click', function (e) {\n            if (e.target == $toggle) return;\n            if (e.target.className == 'icon-bar') return;\n            __HuxNav__.close();\n        })\n    </script>\n    <!-- Search -->\n<div class=\"search-page\">\n  <div class=\"search-icon-close-container\">\n    <span class=\"search-icon-close\">\n      <i class=\"fa fa-chevron-down\"></i>\n    </span>\n  </div>\n  <div class=\"search-main container\">\n    <div class=\"row\">\n      <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n        <form></form>\n        <input type=\"text\" id=\"search-input\" placeholder=\"$ grep...\">\n        </form>\n        <div id=\"search-results\" class=\"mini-post-list\"></div>\n      </div>\n    </div>\n  </div>\n</div>\n\n    <!-- Image to hack wechat -->\n<!-- <img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\"> -->\n<!-- <img src=\"/img/home-bg-geek.jpg\" width=\"0\" height=\"0\"> -->\n\n<!-- Post Header -->\n\n\n\n<style type=\"text/css\">\n    header.intro-header{\n        position: relative;\n        background-image: url('/img/home-bg-geek.jpg');\n        background: ;\n    }\n\n    \n</style>\n\n<header class=\"intro-header\" >\n\n    <div class=\"header-mask\"></div>\n    \n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <div class=\"post-heading\">\n                    <div class=\"tags\">\n                        \n                    </div>\n                    <h1>Github多账号配置SSH</h1>\n                    \n                    <h2 class=\"subheading\"></h2>\n                    <span class=\"meta\">Posted by PaysonChen on September 26, 2022</span>\n                </div>\n            </div>\n        </div>\n    </div>\n</header>\n\n\n\n\n\n\n<!-- Post Content -->\n<article>\n    <div class=\"container\">\n        <div class=\"row\">\n\n    <!-- Post Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                post-container\">\n\n                <!-- Multi-Lingual -->\n                \n\n\t\t\t\t<h2 id=\"0x00-背景\">0x00 背景</h2>\n\n<p>​\t有时候需要多个github的账号，比如Github Page，如果有需要开多个可能就需要同时管理多个github账号</p>\n\n<h2 id=\"0x01-实践\">0x01 实践</h2>\n\n<p>​\t在ssh管理上使用常规的config配置文件:</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n</pre></td><td class=\"rouge-code\"><pre># github2\nHost XXX.github.com\nPort 22\nUser XXX\nHostName github.com\nPreferredAuthentications publickey\nIdentityFile ~/.ssh/id_rsa_github_XXX\n\n# github \nHost YYY.github.com\nPort 22\nUser YYY\nHostName github.com\nPreferredAuthentications publickey\nIdentityFile ~/.ssh/id_rsa_github_YYY\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>一开始还可以用</p>\n\n<h2 id=\"0x02-问题\">0x02 问题</h2>\n\n<p>过了一段时间想继续使用，发现出问题了</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n</pre></td><td class=\"rouge-code\"><pre>git clone git@github.com:nickname/web.git \n\n\nCloning into 'XXX.github.io'...\ngit@github.com: Permission denied (publickey).\nfatal: Could not read from remote repository.\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h2 id=\"0x03-解决\">0x03 解决</h2>\n\n<p>clone时 改为 git@other.github.com:nickname/web.git 即可</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>git@other.github.com:nickname/web.git \n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h2 id=\"0x04-其他问题\">0x04 其他问题</h2>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n</pre></td><td class=\"rouge-code\"><pre>Cloning into 'yyy'...\n/Users/xxxx/.ssh/config line 21: Bad key types 'publickey'.\n/Users/xxxx/.ssh/config: terminating, 1 bad configuration options\nfatal: Could not read from remote repository.\n\nPlease make sure you have the correct access rights\nand the repository exists.\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>此时表示 publickey 不符合这个仓库的加密类型尝试改成</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n</pre></td><td class=\"rouge-code\"><pre>PubkeyAcceptedAlgorithms publickey\n=&gt;\nPubkeyAcceptedAlgorithms +ssh-rsa\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n\n\n                <hr style=\"visibility: hidden;\">\n                <ul class=\"pager\">\n                    \n                    <li class=\"previous\">\n                        <a href=\"/2022/09/25/App%E7%98%A6%E8%BA%AB%E5%AE%9E%E8%B7%B5%E4%B9%8B%E6%89%B9%E9%87%8F%E8%BD%AC%E6%8D%A2webp/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"App瘦身实践之批量转换webp\">\n                        Previous<br>\n                        <span>App瘦身实践之批量转换webp</span>\n                        </a>\n                    </li>\n                    \n                    \n                    <li class=\"next\">\n                        <a href=\"/2023/07/14/iOS%E7%BB%84%E4%BB%B6%E5%8C%96%E5%AE%9E%E8%B7%B5%E4%B8%80_%E5%BA%8F%E8%A8%80/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"iOS组件化实践一：序言\">\n                        Next<br>\n                        <span>iOS组件化实践一：序言</span>\n                        </a>\n                    </li>\n                    \n                </ul>\n                <hr style=\"visibility: hidden;\">\n\n                \n                <!-- disqus 评论框 start -->\n                <div class=\"comment\">\n                    <div id=\"disqus_thread\" class=\"disqus-thread\"></div>\n                </div>\n                <!-- disqus 评论框 end -->\n                \n\n                \n            </div>  \n\n    <!-- Side Catalog Container -->\n        \n            <div class=\"\n                col-lg-2 col-lg-offset-0\n                visible-lg-block\n                sidebar-container\n                catalog-container\">\n                <div class=\"side-catalog\">\n                    <hr class=\"hidden-sm hidden-xs\">\n                    <h5>\n                        <a class=\"catalog-toggle\" href=\"#\">CATALOG</a>\n                    </h5>\n                    <ul class=\"catalog-body\"></ul>\n                </div>\n            </div>\n        \n\n    <!-- Sidebar Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                sidebar-container\">\n\n                <!-- Featured Tags -->\n                \n\n\n<section>\n    \n        <hr class=\"hidden-sm hidden-xs\">\n    \n    <h5><a href=\"/archive/\">FEATURED TAGS</a></h5>\n    <div class=\"tags\">\n        \n        \n        \n        \n        \n    </div>\n</section>\n\n\n                <!-- Friends Blog -->\n                \n            </div>\n        </div>\n    </div>\n</article>\n\n<!-- add support for mathjax by voleking-->\n\n\n\n\n\n\n<!-- disqus 公共JS代码 start (一个网页只需插入一次) -->\n<script type=\"text/javascript\">\n    /* * * CONFIGURATION VARIABLES * * */\n    var disqus_shortname = \"Cyp\";\n    var disqus_identifier = \"/2022/09/26/Github多账号配置SSH\";\n    var disqus_url = \"http://localhost:4000/2022/09/26/Github%E5%A4%9A%E8%B4%A6%E5%8F%B7%E9%85%8D%E7%BD%AESSH/\";\n\n    (function() {\n        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;\n        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';\n        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);\n    })();\n</script>\n<!-- disqus 公共JS代码 end -->\n\n\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n      var d = document, t = 'script',\n          o = d.createElement(t),\n          s = d.getElementsByTagName(t)[0];\n      o.src = u;\n      if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n      s.parentNode.insertBefore(o, s);\n    }\n</script>\n<!-- anchor-js, Doc:http://bryanbraun.github.io/anchorjs/ -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/anchor-js/1.1.1/anchor.min.js\",function(){\n        anchors.options = {\n          visible: 'hover',\n          placement: 'right',\n          // icon: '#'\n        };\n        anchors.add().remove('.intro-header h1').remove('.subheading').remove('.sidebar-container h5');\n    })\n</script>\n<style>\n    /* place left on bigger screen */\n    @media all and (min-width: 800px) {\n        .anchorjs-link{\n            position: absolute;\n            left: -0.75em;\n            font-size: 1.1em;\n            margin-top : -0.1em;\n        }\n    }\n</style>\n\n\n\n    <!-- Footer -->\n<footer>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <!-- SNS Link -->\n                \n\n\n<ul class=\"list-inline text-center\">\n\n\n  \n  \n  \n  \n  \n  \n  \n</ul>\n\n                <p class=\"copyright text-muted\">\n                    Copyright &copy; PaysonChen Blog 2024\n                    <br>\n                    <!-- Powered by <a href=\"http://huangxuan.me\">Hux Blog</a> | -->\n                 <!--    <iframe style=\"margin-left: 2px; margin-bottom:-5px;\" frameborder=\"0\" scrolling=\"0\" width=\"100px\"\n                        height=\"20px\"\n                        src=\"https://ghbtns.com/github-btn.html?user=huxpro&repo=huxpro.github.io&type=star&count=true\">\n                    </iframe> -->\n                </p>\n            </div>\n        </div>\n    </div>\n</footer>\n\n<!-- jQuery -->\n<script src=\"/js/jquery.min.js \"></script>\n\n<!-- Bootstrap Core JavaScript -->\n<!-- Currently, only navbar scroll-down effect at desktop still depends on this -->\n<script src=\"/js/bootstrap.min.js \"></script>\n\n<!-- Custom Theme JavaScript -->\n<script src=\"/js/hux-blog.min.js \"></script>\n\n<!-- Simple Jekyll Search -->\n<script src=\"/js/simple-jekyll-search.min.js\"></script>\n\n<!-- Service Worker -->\n\n<script src=\"/js/snackbar.js \"></script>\n<script src=\"/js/sw-registration.js \"></script>\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n        var d = document, t = 'script',\n            o = d.createElement(t),\n            s = d.getElementsByTagName(t)[0];\n        o.src = u;\n        if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n        s.parentNode.insertBefore(o, s);\n    }\n</script>\n\n<!--\n     Because of the native support for backtick-style fenced code blocks\n     right within the Markdown is landed in Github Pages,\n     From V1.6, There is no need for Highlight.js,\n     so Huxblog drops it officially.\n\n     - https://github.com/blog/2100-github-pages-now-faster-and-simpler-with-jekyll-3-0\n     - https://help.github.com/articles/creating-and-highlighting-code-blocks/\n     - https://github.com/jneen/rouge/wiki/list-of-supported-languages-and-lexers\n-->\n<!--\n    <script>\n        async(\"http://cdn.bootcss.com/highlight.js/8.6/highlight.min.js\", function(){\n            hljs.initHighlightingOnLoad();\n        })\n    </script>\n    <link href=\"http://cdn.bootcss.com/highlight.js/8.6/styles/github.min.css\" rel=\"stylesheet\">\n-->\n\n\n\n\n\n\n\n<!--fastClick.js -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/fastclick/1.0.6/fastclick.min.js\", function () {\n        var $nav = document.querySelector(\"nav\");\n        if ($nav) FastClick.attach($nav);\n    })\n</script>\n\n\n<!-- Google Analytics -->\n\n\n\n<!-- Baidu Tongji -->\n\n\n\n<!-- Side Catalog -->\n\n<script type=\"text/javascript\">\n    function generateCatalog(selector) {\n\n        // interop with multilangual \n        if ('' == 'true') {\n            _containerSelector = 'div.post-container.active'\n        } else {\n            _containerSelector = 'div.post-container'\n        }\n\n        // init\n        var P = $(_containerSelector), a, n, t, l, i, c;\n        a = P.find('h1,h2,h3,h4,h5,h6');\n\n        // clean\n        $(selector).html('')\n\n        // appending\n        a.each(function () {\n            n = $(this).prop('tagName').toLowerCase();\n            i = \"#\" + $(this).prop('id');\n            t = $(this).text();\n            c = $('<a href=\"' + i + '\" rel=\"nofollow\">' + t + '</a>');\n            l = $('<li class=\"' + n + '_nav\"></li>').append(c);\n            $(selector).append(l);\n        });\n        return true;\n    }\n\n    generateCatalog(\".catalog-body\");\n\n    // toggle side catalog\n    $(\".catalog-toggle\").click((function (e) {\n        e.preventDefault();\n        $('.side-catalog').toggleClass(\"fold\")\n    }))\n\n    /*\n     * Doc: https://github.com/davist11/jQuery-One-Page-Nav\n     * Fork by Hux to support padding\n     */\n    async(\"/js/jquery.nav.js\", function () {\n        $('.catalog-body').onePageNav({\n            currentClass: \"active\",\n            changeHash: !1,\n            easing: \"swing\",\n            filter: \"\",\n            scrollSpeed: 700,\n            scrollOffset: 0,\n            scrollThreshold: .2,\n            begin: null,\n            end: null,\n            scrollChange: null,\n            padding: 80\n        });\n    });\n</script>\n\n\n\n<!-- Multi-Lingual -->\n\n\n<!-- Simple Jekyll Search -->\n<script>\n    // https://stackoverflow.com/questions/1912501/unescape-html-entities-in-javascript\n    function htmlDecode(input) {\n        var e = document.createElement('textarea');\n        e.innerHTML = input;\n        // handle case of empty input\n        return e.childNodes.length === 0 ? \"\" : e.childNodes[0].nodeValue;\n    }\n\n    SimpleJekyllSearch({\n        searchInput: document.getElementById('search-input'),\n        resultsContainer: document.getElementById('search-results'),\n        json: '/search.json',\n        searchResultTemplate: '<div class=\"post-preview item\"><a href=\"{url}\"><h2 class=\"post-title\">{title}</h2><h3 class=\"post-subtitle\">{subtitle}</h3><hr></a></div>',\n        noResultsText: 'No results',\n        limit: 50,\n        fuzzy: false,\n        // a hack to get escaped subtitle unescaped. for some reason, \n        // post.subtitle w/o escape filter nuke entire search.\n        templateMiddleware: function (prop, value, template) {\n            if (prop === 'subtitle' || prop === 'title') {\n                if (value.indexOf(\"code\")) {\n                    return htmlDecode(value);\n                } else {\n                    return value;\n                }\n            }\n        }\n    });\n\n    $(document).ready(function () {\n        var $searchPage = $('.search-page');\n        var $searchOpen = $('.search-icon');\n        var $searchClose = $('.search-icon-close');\n        var $searchInput = $('#search-input');\n        var $body = $('body');\n\n        $searchOpen.on('click', function (e) {\n            e.preventDefault();\n            $searchPage.toggleClass('search-active');\n            var prevClasses = $body.attr('class') || '';\n            setTimeout(function () {\n                $body.addClass('no-scroll');\n            }, 400)\n\n            if ($searchPage.hasClass('search-active')) {\n                $searchClose.on('click', function (e) {\n                    e.preventDefault();\n                    $searchPage.removeClass('search-active');\n                    $body.attr('class', prevClasses);  // from closure \n                });\n                $searchInput.focus();\n            }\n        });\n    });\n</script>\n\n\n<!-- Image to hack wechat -->\n<img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\" />\n<!-- Migrate from head to bottom, no longer block render and still work -->\n\n</body>\n\n</html>\n","excerpt":"<h2 id=\"0x00-背景\">0x00 背景</h2>\n","url":"/2022/09/26/Github%E5%A4%9A%E8%B4%A6%E5%8F%B7%E9%85%8D%E7%BD%AESSH/","next":{"id":"/2023/07/14/iOS组件化实践一_序言","tags":[],"relative_path":"_posts/2023-07-14-iOS组件化实践一_序言.md","collection":"posts","name":"2023-07-14-iOS组件化实践一_序言.md","url":"/2023/07/14/iOS%E7%BB%84%E4%BB%B6%E5%8C%96%E5%AE%9E%E8%B7%B5%E4%B8%80_%E5%BA%8F%E8%A8%80/","title":"iOS组件化实践一：序言","date":"2023-07-14 00:00:00 +0800","categories":[],"path":"_posts/2023-07-14-iOS组件化实践一_序言.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/home-bg-geek.jpg","slug":"iOS组件化实践一_序言","ext":".md"},"title":"Github多账号配置SSH","date":"2022-09-26 00:00:00 +0800","categories":[],"path":"_posts/2022-09-26-Github多账号配置SSH.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/home-bg-geek.jpg","slug":"Github多账号配置SSH","ext":".md"},"output":"<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"google-site-verification\" content=\"xBT4GhYoi5qRD5tr338pgPM5OWHHIDR6mNg1a3euekI\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, viewport-fit=cover\">\n    <meta name=\"description\" content=\"与你一起发现更大的世界。\">\n    <meta name=\"keywords\"  content=\"PaysonChen,iOS,流媒体\">\n    <meta name=\"theme-color\" content=\"#000000\">\n    \n    <!-- Open Graph -->\n    <meta property=\"og:title\" content=\"iOS组件化实践一：序言 - PaysonChen的博客 | PaysonChen Blog\">\n    \n    <meta property=\"og:type\" content=\"article\">\n    <meta property=\"og:description\" content=\"序言\n\">\n    \n    \n    <meta property=\"article:published_time\" content=\"2023-07-14T00:00:00Z\">\n    \n    \n    <meta property=\"article:author\" content=\"PaysonChen\">\n    \n    \n    \n    <meta property=\"og:image\" content=\"http://localhost:4000\">\n    <meta property=\"og:url\" content=\"http://localhost:4000/2023/07/14/iOS%E7%BB%84%E4%BB%B6%E5%8C%96%E5%AE%9E%E8%B7%B5%E4%B8%80_%E5%BA%8F%E8%A8%80/\">\n    <meta property=\"og:site_name\" content=\"PaysonChen的博客 | PaysonChen Blog\">\n    \n    <title>iOS组件化实践一：序言 - PaysonChen的博客 | PaysonChen Blog</title>\n\n    <!-- Web App Manifest -->\n    <link rel=\"manifest\" href=\"/pwa/manifest.json\">\n\n    <!-- Favicon -->\n    <link rel=\"shortcut icon\" href=\"/img/favicon.ico\">\n    \n    <!-- Canonical URL -->\n    <link rel=\"canonical\" href=\"http://localhost:4000/2023/07/14/iOS%E7%BB%84%E4%BB%B6%E5%8C%96%E5%AE%9E%E8%B7%B5%E4%B8%80_%E5%BA%8F%E8%A8%80/\">\n\n    <!-- Bootstrap Core CSS -->\n    <link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\">\n\n    <!-- Custom CSS -->\n    <link rel=\"stylesheet\" href=\"/css/hux-blog.min.css\">\n\n    <!-- Custom Fonts -->\n    <!-- <link href=\"http://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\"> -->\n    <!-- Hux change font-awesome CDN to qiniu -->\n    <link href=\"//cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\">\n\n\n    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->\n    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->\n    <!--[if lt IE 9]>\n        <script src=\"https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js\"></script>\n        <script src=\"https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js\"></script>\n    <![endif]-->\n\n    <!-- ga & ba script hoook -->\n    <script></script>\n</head>\n\n\n<!-- hack iOS CSS :active style -->\n<body ontouchstart=\"\">\n\n    <!-- Navigation -->\n\n    <nav class=\"navbar navbar-default navbar-custom navbar-fixed-top\">\n        \n        <div class=\"container-fluid\">\n            <!-- Brand and toggle get grouped for better mobile display -->\n            <div class=\"navbar-header page-scroll\">\n                <button type=\"button\" class=\"navbar-toggle\">\n                    <span class=\"sr-only\">Toggle navigation</span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                </button>\n                <a class=\"navbar-brand\" href=\"/\">PaysonChen Blog</a>\n            </div>\n\n            <!-- Collect the nav links, forms, and other content for toggling -->\n            <div id=\"huxblog_navbar\">\n                <div class=\"navbar-collapse\">\n                    <ul class=\"nav navbar-nav navbar-right\">\n                        <li>\n                            <a href=\"/\">Home</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        <li>\n                            <a href=\"/about/\">About</a>\n                        </li>\n                        \n                        \n                        \n                        <li>\n                            <a href=\"/archive/\">Archive</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        <li class=\"search-icon\">\n                            <a href=\"javascript:void(0)\">\n                                <i class=\"fa fa-search\"></i>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n            <!-- /.navbar-collapse -->\n        </div>\n        <!-- /.container -->\n    </nav>\n\n    <script>\n        // Drop Bootstarp low-performance Navbar\n        // Use customize navbar with high-quality material design animation\n        // in high-perf jank-free CSS3 implementation\n        var $body = document.body;\n        var $toggle = document.querySelector('.navbar-toggle');\n        var $navbar = document.querySelector('#huxblog_navbar');\n        var $collapse = document.querySelector('.navbar-collapse');\n\n        var __HuxNav__ = {\n            close: function () {\n                $navbar.className = \" \";\n                // wait until animation end.\n                setTimeout(function () {\n                    // prevent frequently toggle\n                    if ($navbar.className.indexOf('in') < 0) {\n                        $collapse.style.height = \"0px\"\n                    }\n                }, 400)\n            },\n            open: function () {\n                $collapse.style.height = \"auto\"\n                $navbar.className += \" in\";\n            }\n        }\n\n        // Bind Event\n        $toggle.addEventListener('click', function (e) {\n            if ($navbar.className.indexOf('in') > 0) {\n                __HuxNav__.close()\n            } else {\n                __HuxNav__.open()\n            }\n        })\n\n        /**\n         * Since Fastclick is used to delegate 'touchstart' globally\n         * to hack 300ms delay in iOS by performing a fake 'click',\n         * Using 'e.stopPropagation' to stop 'touchstart' event from \n         * $toggle/$collapse will break global delegation.\n         * \n         * Instead, we use a 'e.target' filter to prevent handler\n         * added to document close HuxNav.  \n         *\n         * Also, we use 'click' instead of 'touchstart' as compromise\n         */\n        document.addEventListener('click', function (e) {\n            if (e.target == $toggle) return;\n            if (e.target.className == 'icon-bar') return;\n            __HuxNav__.close();\n        })\n    </script>\n    <!-- Search -->\n<div class=\"search-page\">\n  <div class=\"search-icon-close-container\">\n    <span class=\"search-icon-close\">\n      <i class=\"fa fa-chevron-down\"></i>\n    </span>\n  </div>\n  <div class=\"search-main container\">\n    <div class=\"row\">\n      <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n        <form></form>\n        <input type=\"text\" id=\"search-input\" placeholder=\"$ grep...\">\n        </form>\n        <div id=\"search-results\" class=\"mini-post-list\"></div>\n      </div>\n    </div>\n  </div>\n</div>\n\n    <!-- Image to hack wechat -->\n<!-- <img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\"> -->\n<!-- <img src=\"/img/home-bg-geek.jpg\" width=\"0\" height=\"0\"> -->\n\n<!-- Post Header -->\n\n\n\n<style type=\"text/css\">\n    header.intro-header{\n        position: relative;\n        background-image: url('/img/home-bg-geek.jpg');\n        background: ;\n    }\n\n    \n</style>\n\n<header class=\"intro-header\" >\n\n    <div class=\"header-mask\"></div>\n    \n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <div class=\"post-heading\">\n                    <div class=\"tags\">\n                        \n                    </div>\n                    <h1>iOS组件化实践一：序言</h1>\n                    \n                    <h2 class=\"subheading\"></h2>\n                    <span class=\"meta\">Posted by PaysonChen on July 14, 2023</span>\n                </div>\n            </div>\n        </div>\n    </div>\n</header>\n\n\n\n\n\n\n<!-- Post Content -->\n<article>\n    <div class=\"container\">\n        <div class=\"row\">\n\n    <!-- Post Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                post-container\">\n\n                <!-- Multi-Lingual -->\n                \n\n\t\t\t\t<h1 id=\"序言\">序言</h1>\n\n<p>过去十几年，国内移动互联网浪潮崛起，移动应用的构建也如雨后春笋，从一开始大约是在2011年业余开发者做一款播放器放到App Store可以产生最多百万月流水<sup>[1]</sup>， 到现在，满目琳琅到App，珍惜手机空间如金，不肯多装一款普通的App的时代，经历过一波又一波的技术革新，自从CocoaPods于2011年9月1日时编译了第一个公开版本<sup>[2]</sup>，开启了iOS项目拥有应用级别的依赖管理器到时代。</p>\n\n<p>在移动互联网领域从蓝海变成红海的过程中，项目构建的初期也慢慢从不拘小节的架构转向组件化架构的演进。</p>\n\n<h2 id=\"1-不拘小节的架构设计\">1. 不拘小节的架构设计</h2>\n\n<p>可以理解为一种为了</p>\n\n<ol>\n  <li>一些厂商快速试错，快速投入市场验证业务模式的可行性</li>\n  <li>一些厂商为了低成本快速交付一些外包项目</li>\n</ol>\n\n<p>上述实践有一个共同点，就是没有考虑到后续的持续维护的成本与代价。</p>\n\n<p>不拘小节的架构通常以如下方式存在：</p>\n\n<p><strong>1.1、初期的iOS项目以Project工程为主，各种从网上摘取</strong></p>\n\n<ol>\n  <li>代码块</li>\n  <li>各种功能类</li>\n  <li>某些开源或者不开源的能力库（以lib或者framework方式集成）</li>\n</ol>\n\n<p>拼接而成，</p>\n\n<p><strong>1.2、在引入CocoaPods之后</strong></p>\n\n<ol>\n  <li>代码块</li>\n  <li>各种功能类</li>\n  <li>某些开源或者不开源的能力库（以lib或者framework方式集成）</li>\n  <li>以CocoaPods的方式集成公有私有的代码库（轮子）</li>\n</ol>\n\n<p>不拘小节的架构一般用于中小型，短时间内交付的产品，上述方式可以做到快速实现以及交付的可视化效果，而可持续性维护则无人关心。</p>\n\n<p>随着一些厂商快速占领市场，以及试错验证可行之后，由于项目到架构随意，参与人员不稳定等因素，加上破窗效应，以及不断形成风气的降本增效的企业诉求，这些团队将会面临维护成本不断攀升的高昂代价。</p>\n\n<h2 id=\"2-组件化架构设计\">2. 组件化架构设计</h2>\n\n<h3 id=\"21-不拘小节的架构设计的现状\">2.1 不拘小节的架构设计的现状</h3>\n\n<p>不拘小节的架构团队会面临什么现状？大致可概括为：</p>\n\n<ol>\n  <li><strong>历史问题挤压多：</strong>代码冗余，诸多历史问题未能及时发现</li>\n  <li><strong>定位修复问题难：</strong>代码混乱，问题定位代码分散，定位成本大，修复不彻底</li>\n  <li><strong>需求开发周期长：</strong>没有清晰规划，导致需求开发重复造轮子，增加了研发成本</li>\n</ol>\n\n<h3 id=\"22-组件化架构设计解决的问题\">2.2 组件化架构设计解决的问题</h3>\n\n<p>不拘小节的架构设计随着时间推移会遇到哪些问题呢？大致可概括为：</p>\n\n<ol>\n  <li><strong>混乱</strong>：代码统一写在一个工程内部，查找定位问题困难</li>\n  <li><strong>冗余</strong>：相同功能的代码实现多套，修复问题不彻底</li>\n  <li><strong>不可复用</strong>：无可复用的模块，多App之间需要重复实现</li>\n</ol>\n\n<h3 id=\"23-组件化架构设计带来的问题\">2.3 组件化架构设计带来的问题</h3>\n\n<p>而组件化架构则可以弥补不拘小节的架构方式的诸多短板，降低项目的持续维护成本与代价，又能做到哪些改进呢？大概可概括为：</p>\n\n<ol>\n  <li><strong>高效解决问题：</strong>代码划分模块，修复问题及迭代维护形成闭环，提升效率</li>\n  <li><strong>清晰代码架构</strong>：清晰的调用链，解决问题漏改，改不全等逃逸到线上的问题</li>\n  <li><strong>可复用的能力</strong>：跨App共建能力，减少维护成本</li>\n</ol>\n\n<h2 id=\"3-组件化周期\">3. 组件化周期</h2>\n\n<p>​\t根据笔者在不同团队（初创团队～BAT一线团队）的观察，常规耗时根据项目大小和团队成员规模以及过程中的需求数量等情况大致为10～100人月/单端不等。笔者前公司是一线大厂，团队规模大，项目大，总共投入5～10人，前后1年6个月完成对现有项目的初步组件化改造，而对于创立之初的创业团队，这个代价往往只需要10%。考虑到成本问题，组件化宜早不宜迟。</p>\n\n<h2 id=\"4-组件化架构设计的思路\">4. 组件化架构设计的思路</h2>\n\n<ol>\n  <li>功能组件的清晰的定义与划分</li>\n  <li>层次分明的基础模块设计，</li>\n  <li>上层的业务模块解偶</li>\n</ol>\n\n<p><img src=\"/img/1-1.png\" alt=\"/img/1-1.png\" /></p>\n\n\n                <hr style=\"visibility: hidden;\">\n                <ul class=\"pager\">\n                    \n                    <li class=\"previous\">\n                        <a href=\"/2022/09/26/Github%E5%A4%9A%E8%B4%A6%E5%8F%B7%E9%85%8D%E7%BD%AESSH/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Github多账号配置SSH\">\n                        Previous<br>\n                        <span>Github多账号配置SSH</span>\n                        </a>\n                    </li>\n                    \n                    \n                    <li class=\"next\">\n                        <a href=\"/2023/07/20/iOS%E7%BB%84%E4%BB%B6%E5%8C%96%E5%AE%9E%E8%B7%B5%E4%BA%8C-%E5%AE%9E%E8%B7%B5%E8%BF%87%E7%A8%8B%E7%A2%B0%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"iOS组件化实践二：实践过程碰到的问题\">\n                        Next<br>\n                        <span>iOS组件化实践二：实践过程碰到的问题</span>\n                        </a>\n                    </li>\n                    \n                </ul>\n                <hr style=\"visibility: hidden;\">\n\n                \n                <!-- disqus 评论框 start -->\n                <div class=\"comment\">\n                    <div id=\"disqus_thread\" class=\"disqus-thread\"></div>\n                </div>\n                <!-- disqus 评论框 end -->\n                \n\n                \n            </div>  \n\n    <!-- Side Catalog Container -->\n        \n            <div class=\"\n                col-lg-2 col-lg-offset-0\n                visible-lg-block\n                sidebar-container\n                catalog-container\">\n                <div class=\"side-catalog\">\n                    <hr class=\"hidden-sm hidden-xs\">\n                    <h5>\n                        <a class=\"catalog-toggle\" href=\"#\">CATALOG</a>\n                    </h5>\n                    <ul class=\"catalog-body\"></ul>\n                </div>\n            </div>\n        \n\n    <!-- Sidebar Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                sidebar-container\">\n\n                <!-- Featured Tags -->\n                \n\n\n<section>\n    \n        <hr class=\"hidden-sm hidden-xs\">\n    \n    <h5><a href=\"/archive/\">FEATURED TAGS</a></h5>\n    <div class=\"tags\">\n        \n        \n        \n        \n        \n    </div>\n</section>\n\n\n                <!-- Friends Blog -->\n                \n            </div>\n        </div>\n    </div>\n</article>\n\n<!-- add support for mathjax by voleking-->\n\n\n\n\n\n\n<!-- disqus 公共JS代码 start (一个网页只需插入一次) -->\n<script type=\"text/javascript\">\n    /* * * CONFIGURATION VARIABLES * * */\n    var disqus_shortname = \"Cyp\";\n    var disqus_identifier = \"/2023/07/14/iOS组件化实践一_序言\";\n    var disqus_url = \"http://localhost:4000/2023/07/14/iOS%E7%BB%84%E4%BB%B6%E5%8C%96%E5%AE%9E%E8%B7%B5%E4%B8%80_%E5%BA%8F%E8%A8%80/\";\n\n    (function() {\n        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;\n        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';\n        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);\n    })();\n</script>\n<!-- disqus 公共JS代码 end -->\n\n\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n      var d = document, t = 'script',\n          o = d.createElement(t),\n          s = d.getElementsByTagName(t)[0];\n      o.src = u;\n      if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n      s.parentNode.insertBefore(o, s);\n    }\n</script>\n<!-- anchor-js, Doc:http://bryanbraun.github.io/anchorjs/ -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/anchor-js/1.1.1/anchor.min.js\",function(){\n        anchors.options = {\n          visible: 'hover',\n          placement: 'right',\n          // icon: '#'\n        };\n        anchors.add().remove('.intro-header h1').remove('.subheading').remove('.sidebar-container h5');\n    })\n</script>\n<style>\n    /* place left on bigger screen */\n    @media all and (min-width: 800px) {\n        .anchorjs-link{\n            position: absolute;\n            left: -0.75em;\n            font-size: 1.1em;\n            margin-top : -0.1em;\n        }\n    }\n</style>\n\n\n\n    <!-- Footer -->\n<footer>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <!-- SNS Link -->\n                \n\n\n<ul class=\"list-inline text-center\">\n\n\n  \n  \n  \n  \n  \n  \n  \n</ul>\n\n                <p class=\"copyright text-muted\">\n                    Copyright &copy; PaysonChen Blog 2024\n                    <br>\n                    <!-- Powered by <a href=\"http://huangxuan.me\">Hux Blog</a> | -->\n                 <!--    <iframe style=\"margin-left: 2px; margin-bottom:-5px;\" frameborder=\"0\" scrolling=\"0\" width=\"100px\"\n                        height=\"20px\"\n                        src=\"https://ghbtns.com/github-btn.html?user=huxpro&repo=huxpro.github.io&type=star&count=true\">\n                    </iframe> -->\n                </p>\n            </div>\n        </div>\n    </div>\n</footer>\n\n<!-- jQuery -->\n<script src=\"/js/jquery.min.js \"></script>\n\n<!-- Bootstrap Core JavaScript -->\n<!-- Currently, only navbar scroll-down effect at desktop still depends on this -->\n<script src=\"/js/bootstrap.min.js \"></script>\n\n<!-- Custom Theme JavaScript -->\n<script src=\"/js/hux-blog.min.js \"></script>\n\n<!-- Simple Jekyll Search -->\n<script src=\"/js/simple-jekyll-search.min.js\"></script>\n\n<!-- Service Worker -->\n\n<script src=\"/js/snackbar.js \"></script>\n<script src=\"/js/sw-registration.js \"></script>\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n        var d = document, t = 'script',\n            o = d.createElement(t),\n            s = d.getElementsByTagName(t)[0];\n        o.src = u;\n        if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n        s.parentNode.insertBefore(o, s);\n    }\n</script>\n\n<!--\n     Because of the native support for backtick-style fenced code blocks\n     right within the Markdown is landed in Github Pages,\n     From V1.6, There is no need for Highlight.js,\n     so Huxblog drops it officially.\n\n     - https://github.com/blog/2100-github-pages-now-faster-and-simpler-with-jekyll-3-0\n     - https://help.github.com/articles/creating-and-highlighting-code-blocks/\n     - https://github.com/jneen/rouge/wiki/list-of-supported-languages-and-lexers\n-->\n<!--\n    <script>\n        async(\"http://cdn.bootcss.com/highlight.js/8.6/highlight.min.js\", function(){\n            hljs.initHighlightingOnLoad();\n        })\n    </script>\n    <link href=\"http://cdn.bootcss.com/highlight.js/8.6/styles/github.min.css\" rel=\"stylesheet\">\n-->\n\n\n\n\n\n\n\n<!--fastClick.js -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/fastclick/1.0.6/fastclick.min.js\", function () {\n        var $nav = document.querySelector(\"nav\");\n        if ($nav) FastClick.attach($nav);\n    })\n</script>\n\n\n<!-- Google Analytics -->\n\n\n\n<!-- Baidu Tongji -->\n\n\n\n<!-- Side Catalog -->\n\n<script type=\"text/javascript\">\n    function generateCatalog(selector) {\n\n        // interop with multilangual \n        if ('' == 'true') {\n            _containerSelector = 'div.post-container.active'\n        } else {\n            _containerSelector = 'div.post-container'\n        }\n\n        // init\n        var P = $(_containerSelector), a, n, t, l, i, c;\n        a = P.find('h1,h2,h3,h4,h5,h6');\n\n        // clean\n        $(selector).html('')\n\n        // appending\n        a.each(function () {\n            n = $(this).prop('tagName').toLowerCase();\n            i = \"#\" + $(this).prop('id');\n            t = $(this).text();\n            c = $('<a href=\"' + i + '\" rel=\"nofollow\">' + t + '</a>');\n            l = $('<li class=\"' + n + '_nav\"></li>').append(c);\n            $(selector).append(l);\n        });\n        return true;\n    }\n\n    generateCatalog(\".catalog-body\");\n\n    // toggle side catalog\n    $(\".catalog-toggle\").click((function (e) {\n        e.preventDefault();\n        $('.side-catalog').toggleClass(\"fold\")\n    }))\n\n    /*\n     * Doc: https://github.com/davist11/jQuery-One-Page-Nav\n     * Fork by Hux to support padding\n     */\n    async(\"/js/jquery.nav.js\", function () {\n        $('.catalog-body').onePageNav({\n            currentClass: \"active\",\n            changeHash: !1,\n            easing: \"swing\",\n            filter: \"\",\n            scrollSpeed: 700,\n            scrollOffset: 0,\n            scrollThreshold: .2,\n            begin: null,\n            end: null,\n            scrollChange: null,\n            padding: 80\n        });\n    });\n</script>\n\n\n\n<!-- Multi-Lingual -->\n\n\n<!-- Simple Jekyll Search -->\n<script>\n    // https://stackoverflow.com/questions/1912501/unescape-html-entities-in-javascript\n    function htmlDecode(input) {\n        var e = document.createElement('textarea');\n        e.innerHTML = input;\n        // handle case of empty input\n        return e.childNodes.length === 0 ? \"\" : e.childNodes[0].nodeValue;\n    }\n\n    SimpleJekyllSearch({\n        searchInput: document.getElementById('search-input'),\n        resultsContainer: document.getElementById('search-results'),\n        json: '/search.json',\n        searchResultTemplate: '<div class=\"post-preview item\"><a href=\"{url}\"><h2 class=\"post-title\">{title}</h2><h3 class=\"post-subtitle\">{subtitle}</h3><hr></a></div>',\n        noResultsText: 'No results',\n        limit: 50,\n        fuzzy: false,\n        // a hack to get escaped subtitle unescaped. for some reason, \n        // post.subtitle w/o escape filter nuke entire search.\n        templateMiddleware: function (prop, value, template) {\n            if (prop === 'subtitle' || prop === 'title') {\n                if (value.indexOf(\"code\")) {\n                    return htmlDecode(value);\n                } else {\n                    return value;\n                }\n            }\n        }\n    });\n\n    $(document).ready(function () {\n        var $searchPage = $('.search-page');\n        var $searchOpen = $('.search-icon');\n        var $searchClose = $('.search-icon-close');\n        var $searchInput = $('#search-input');\n        var $body = $('body');\n\n        $searchOpen.on('click', function (e) {\n            e.preventDefault();\n            $searchPage.toggleClass('search-active');\n            var prevClasses = $body.attr('class') || '';\n            setTimeout(function () {\n                $body.addClass('no-scroll');\n            }, 400)\n\n            if ($searchPage.hasClass('search-active')) {\n                $searchClose.on('click', function (e) {\n                    e.preventDefault();\n                    $searchPage.removeClass('search-active');\n                    $body.attr('class', prevClasses);  // from closure \n                });\n                $searchInput.focus();\n            }\n        });\n    });\n</script>\n\n\n<!-- Image to hack wechat -->\n<img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\" />\n<!-- Migrate from head to bottom, no longer block render and still work -->\n\n</body>\n\n</html>\n","excerpt":"<h1 id=\"序言\">序言</h1>\n","url":"/2023/07/14/iOS%E7%BB%84%E4%BB%B6%E5%8C%96%E5%AE%9E%E8%B7%B5%E4%B8%80_%E5%BA%8F%E8%A8%80/","next":{"id":"/2023/07/20/iOS组件化实践二-实践过程碰到的问题","tags":[],"relative_path":"_posts/2023-07-20-iOS组件化实践二-实践过程碰到的问题.md","collection":"posts","content":"<h2 id=\"1-需求不断插入\">1 需求不断插入</h2>\n\n<h3 id=\"11问题描述\">1.1问题描述：</h3>\n\n<p>​\t一般而言，面临需要做组件化的团队，大概率是一个持续迭代的需求的过程，这过程不可避免会遇到业务需求的插入，如何保证即完成业务需求，又实现组件化进程，这是一个需要综合考量的课题。</p>\n\n<h3 id=\"12-问题解决\">1.2 问题解决</h3>\n\n<p>​\t由于需求和迭代与组件化是并行的，因此需要对组件化定义里程碑，每个里程碑对应响应的迭代班车，简而言之，例如：每个月迭代一个版本，组件化可以以月为单位，1～x个月为一个里程碑，每个里程碑跟上一个迭代版本，这样保证班车能带上迭代的业务需求，也能带上组件化里程碑的变更，同时记得同步项目其他团队、例如产品团队、Leader（如有必要）、测试团队（一定要）</p>\n\n<h2 id=\"2-多人协作问题\">2 多人协作问题</h2>\n\n<h3 id=\"21-背景\">2.1 背景</h3>\n\n<p>​\t一般而言，面临需要做组件化的团队，大概率不会只有1个开发人员（因为一个只有1个开发人员的项目和团队应该规模也不大，对组件化的需求不高），而会是一个至少中小型，那就可能面临需求与组件化的多人同步进行，需要经历阶段性代码合并，由于组件化是对框架改动较大的工程（需要不止移动类到Pod仓库，还有改名，增删类等），这就存在分支合并的频繁冲突</p>\n\n<h3 id=\"22-解决\">2.2 解决</h3>\n\n<h4 id=\"221分支管理\">2.2.1分支管理</h4>\n\n<h5 id=\"2211-主工程\">2.2.1.1 主工程</h5>\n\n<p>​\t常规需求迭代遵循gitflow分支管理，与之并行一个组件化分支，假设为 feature/modulization，如果feature有触发自动merge操作，为了不频繁解决冲突，可以考虑自行定义一个分支名（personal/xxx/modulization），在每次发布版本，合并完dev与master，并打完Tag之后，从release分支合并代码到modulization</p>\n\n<p>​\t由于组件化分支的主工程会频繁涉及到类的增删、类名修改，会引起project.pbxproj 文件大面积的变动，因此合并代码时，可能存在project.pbxproj 文件大量冲突</p>\n\n<p>​\t这里提供一个解决思路：</p>\n\n<p>​\t<strong>如果距离上次merge主工程框架变动较大时，可以考虑以modulization分支的project.pbxproj的版本来解决冲突，根据编译报错/或者事先记录下新增文件再进行逐一修复</strong></p>\n\n<h5 id=\"2212-组件库\">2.2.1.2 组件库</h5>\n\n<p>​\t由于modulization工程依赖的组件需要频繁的修改，因此频繁的打tag显得也不是特别必要，而且组件库的tag还必须经过严格管理，以保证常规进展的需求不受影响。</p>\n\n<p>​\t这里提供一个解决思路：</p>\n\n<p>​\t针对所有进展中的组件库新建分支：moduleModulization，在Podfile依赖时指定:</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n</pre></td><td class=\"rouge-code\"><pre>  <span class=\"n\">pod</span> <span class=\"s1\">'PSCDebugModule'</span> <span class=\"p\">,</span> <span class=\"ss\">:git</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'ssh://PSC-devops.psc.com:30022/PSC/PSC-ios/Pods/Private/PSCDebugModule.git'</span> <span class=\"p\">,</span> <span class=\"ss\">:configurations</span> <span class=\"o\">=&gt;</span> <span class=\"p\">[</span><span class=\"s1\">'Debug'</span><span class=\"p\">,</span> <span class=\"s1\">'DailyBuild'</span><span class=\"p\">,</span> <span class=\"s1\">'TFInner'</span><span class=\"p\">],</span> <span class=\"ss\">:branch</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'master'</span>\n  <span class=\"n\">pod</span> <span class=\"s1\">'PSCCommonUI'</span>    <span class=\"p\">,</span> <span class=\"ss\">:git</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'ssh://PSC-devops.psc.com:30022/PSC/PSC-ios/Pods/Private/PSCCommonUI.git'</span><span class=\"p\">,</span> <span class=\"ss\">:branch</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'master'</span>\n  <span class=\"n\">pod</span> <span class=\"s1\">'PSCFrameWork'</span> <span class=\"p\">,</span> <span class=\"ss\">:git</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'ssh://PSC-devops.psc.com:30022/PSC/PSC-ios/Pods/Private/PSCFrameWork.git'</span><span class=\"p\">,</span> <span class=\"ss\">:branch</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'master'</span>\n  <span class=\"n\">pod</span> <span class=\"s1\">'PSCLogModule'</span>   <span class=\"p\">,</span> <span class=\"ss\">:git</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'ssh://PSC-devops.psc.com:30022/PSC/PSC-ios/Pods/Private/PSCLogModule.git'</span><span class=\"p\">,</span> <span class=\"ss\">:branch</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'master'</span>\n  <span class=\"n\">pod</span> <span class=\"s1\">'PSCAbility'</span>     <span class=\"p\">,</span> <span class=\"ss\">:git</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'ssh://PSC-devops.psc.com:30022/PSC/PSC-ios/Pods/Private/PSCAbility.git'</span><span class=\"p\">,</span> <span class=\"ss\">:branch</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'master'</span>\n  <span class=\"n\">pod</span> <span class=\"s1\">'PSCResource'</span>     <span class=\"p\">,</span> <span class=\"ss\">:git</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'ssh://PSC-devops.psc.com:30022/PSC/PSC-ios/Pods/Private/PSCResource.git'</span><span class=\"p\">,</span> <span class=\"ss\">:branch</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'master'</span>\n  <span class=\"n\">pod</span> <span class=\"s1\">'PSCLogModule'</span>   <span class=\"p\">,</span> <span class=\"ss\">:git</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'ssh://PSC-devops.psc.com:30022/PSC/PSC-ios/Pods/Private/PSCLogModule.git'</span><span class=\"p\">,</span> <span class=\"ss\">:branch</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'master'</span>\n  <span class=\"n\">pod</span> <span class=\"s1\">'PSCBaseModule'</span>   <span class=\"p\">,</span> <span class=\"ss\">:git</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'ssh://PSC-devops.psc.com:30022/PSC/PSC-ios/Pods/Private/PSCBaseModule.git'</span><span class=\"p\">,</span> <span class=\"ss\">:branch</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'master'</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>同时在Podfile_local（Podfile_local可以参见 <a href=\"https://github.com/MeetYouDevs/cocoapods-imy-bin\">imy-bin</a>）配置</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n</pre></td><td class=\"rouge-code\"><pre><span class=\"n\">plugin</span> <span class=\"s1\">'cocoapods-imy-bin'</span>\n\n<span class=\"n\">target</span> <span class=\"s1\">'PSCEvogoiOS'</span> <span class=\"k\">do</span>\n    <span class=\"n\">pod</span> <span class=\"s1\">'PSCAbility'</span><span class=\"p\">,</span> <span class=\"ss\">:path</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'../../../../../CocoaPods/Private/PSCAbility'</span>\n    <span class=\"n\">pod</span> <span class=\"s1\">'PSCDebugModule'</span><span class=\"p\">,</span> <span class=\"ss\">:path</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'../../../../../CocoaPods/Private/PSCDebugModule'</span>\n    <span class=\"n\">pod</span> <span class=\"s1\">'PSCBaseModule'</span><span class=\"p\">,</span> <span class=\"ss\">:path</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'../../../../../CocoaPods/Private/PSCBaseModule'</span>\n    <span class=\"n\">pod</span> <span class=\"s1\">'PSCCommonUI'</span><span class=\"p\">,</span> <span class=\"ss\">:path</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'../../../../../CocoaPods/Private/PSCCommonUI'</span>\n    <span class=\"n\">pod</span> <span class=\"s1\">'PSCFrameWork'</span><span class=\"p\">,</span> <span class=\"ss\">:path</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'../../../../../CocoaPods/Private/PSCFrameWork'</span>\n    <span class=\"n\">pod</span> <span class=\"s1\">'PSCLogModule'</span><span class=\"p\">,</span> <span class=\"ss\">:path</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'../../../../../CocoaPods/Private/PSCLogModule'</span>\n    <span class=\"n\">pod</span> <span class=\"s1\">'PSCResource'</span><span class=\"p\">,</span> <span class=\"ss\">:path</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'../../../../../CocoaPods/Private/PSCResource'</span>\n    <span class=\"n\">pod</span> <span class=\"s1\">'PSCHybridModule'</span><span class=\"p\">,</span> <span class=\"ss\">:path</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'../../../../../CocoaPods/Private/PSCHybridModule'</span>\n    <span class=\"n\">pod</span> <span class=\"s1\">'PSCThirdPartyModule'</span><span class=\"p\">,</span> <span class=\"ss\">:path</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'../../../../../CocoaPods/Private/PSCThirdPartyModule'</span>\n<span class=\"k\">end</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>在本地构建时，可以使用：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>bdpod bin <span class=\"nb\">install</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>流水线构建时，可恢复分支依赖如下：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>bdpod <span class=\"nb\">install</span> <span class=\"nt\">--repo-update</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h4 id=\"222-分支合并\">2.2.2 分支合并</h4>\n\n<p>​\t分支合并时需要解决的冲突很多，一般存在下面几种情况：</p>\n\n<h5 id=\"2221-代码冲突\">2.2.2.1 代码冲突</h5>\n\n<p>​\t常规的冲突，以常规的方式解决，这边不多赘述。一般可以采用sourcetree，进行可视化操作。</p>\n\n<h5 id=\"2222-projectpbxproj冲突\">2.2.2.2 project.pbxproj冲突</h5>\n\n<p>​\t冲突不多时，也可以采用常规方式解决，如果冲突较多，解决的成本太高，可以参考上述：2.2.1.1 建议的方式进行</p>\n\n<h5 id=\"2223-文件冲突\">2.2.2.3 文件冲突</h5>\n\n<p>​\t文件冲突一般体现在：某个文件从主工程被迁移到组件库中or类名发生了变化，而其他分支上的修改者改动了这个文件，就会出现文件冲突，这个时候就需要对比组件库中或者新命名的类与冲突文件的变化。</p>\n\n<p>​\t这里提供一个解决思路：使用filemerge(Xcode自带)进行比较</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>/Applications/Xcode.app/Contents/Applications/FileMerge.app\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n","name":"2023-07-20-iOS组件化实践二-实践过程碰到的问题.md","previous":{"id":"/2023/07/14/iOS组件化实践一_序言","tags":[],"relative_path":"_posts/2023-07-14-iOS组件化实践一_序言.md","collection":"posts","name":"2023-07-14-iOS组件化实践一_序言.md","url":"/2023/07/14/iOS%E7%BB%84%E4%BB%B6%E5%8C%96%E5%AE%9E%E8%B7%B5%E4%B8%80_%E5%BA%8F%E8%A8%80/","title":"iOS组件化实践一：序言","date":"2023-07-14 00:00:00 +0800","categories":[],"path":"_posts/2023-07-14-iOS组件化实践一_序言.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/home-bg-geek.jpg","slug":"iOS组件化实践一_序言","ext":".md"},"output":"<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"google-site-verification\" content=\"xBT4GhYoi5qRD5tr338pgPM5OWHHIDR6mNg1a3euekI\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, viewport-fit=cover\">\n    <meta name=\"description\" content=\"与你一起发现更大的世界。\">\n    <meta name=\"keywords\"  content=\"PaysonChen,iOS,流媒体\">\n    <meta name=\"theme-color\" content=\"#000000\">\n    \n    <!-- Open Graph -->\n    <meta property=\"og:title\" content=\"iOS组件化实践二：实践过程碰到的问题 - PaysonChen的博客 | PaysonChen Blog\">\n    \n    <meta property=\"og:type\" content=\"article\">\n    <meta property=\"og:description\" content=\"1 需求不断插入\n\">\n    \n    \n    <meta property=\"article:published_time\" content=\"2023-07-20T00:00:00Z\">\n    \n    \n    <meta property=\"article:author\" content=\"PaysonChen\">\n    \n    \n    \n    <meta property=\"og:image\" content=\"http://localhost:4000\">\n    <meta property=\"og:url\" content=\"http://localhost:4000/2023/07/20/iOS%E7%BB%84%E4%BB%B6%E5%8C%96%E5%AE%9E%E8%B7%B5%E4%BA%8C-%E5%AE%9E%E8%B7%B5%E8%BF%87%E7%A8%8B%E7%A2%B0%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/\">\n    <meta property=\"og:site_name\" content=\"PaysonChen的博客 | PaysonChen Blog\">\n    \n    <title>iOS组件化实践二：实践过程碰到的问题 - PaysonChen的博客 | PaysonChen Blog</title>\n\n    <!-- Web App Manifest -->\n    <link rel=\"manifest\" href=\"/pwa/manifest.json\">\n\n    <!-- Favicon -->\n    <link rel=\"shortcut icon\" href=\"/img/favicon.ico\">\n    \n    <!-- Canonical URL -->\n    <link rel=\"canonical\" href=\"http://localhost:4000/2023/07/20/iOS%E7%BB%84%E4%BB%B6%E5%8C%96%E5%AE%9E%E8%B7%B5%E4%BA%8C-%E5%AE%9E%E8%B7%B5%E8%BF%87%E7%A8%8B%E7%A2%B0%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/\">\n\n    <!-- Bootstrap Core CSS -->\n    <link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\">\n\n    <!-- Custom CSS -->\n    <link rel=\"stylesheet\" href=\"/css/hux-blog.min.css\">\n\n    <!-- Custom Fonts -->\n    <!-- <link href=\"http://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\"> -->\n    <!-- Hux change font-awesome CDN to qiniu -->\n    <link href=\"//cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\">\n\n\n    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->\n    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->\n    <!--[if lt IE 9]>\n        <script src=\"https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js\"></script>\n        <script src=\"https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js\"></script>\n    <![endif]-->\n\n    <!-- ga & ba script hoook -->\n    <script></script>\n</head>\n\n\n<!-- hack iOS CSS :active style -->\n<body ontouchstart=\"\">\n\n    <!-- Navigation -->\n\n    <nav class=\"navbar navbar-default navbar-custom navbar-fixed-top\">\n        \n        <div class=\"container-fluid\">\n            <!-- Brand and toggle get grouped for better mobile display -->\n            <div class=\"navbar-header page-scroll\">\n                <button type=\"button\" class=\"navbar-toggle\">\n                    <span class=\"sr-only\">Toggle navigation</span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                </button>\n                <a class=\"navbar-brand\" href=\"/\">PaysonChen Blog</a>\n            </div>\n\n            <!-- Collect the nav links, forms, and other content for toggling -->\n            <div id=\"huxblog_navbar\">\n                <div class=\"navbar-collapse\">\n                    <ul class=\"nav navbar-nav navbar-right\">\n                        <li>\n                            <a href=\"/\">Home</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        <li>\n                            <a href=\"/about/\">About</a>\n                        </li>\n                        \n                        \n                        \n                        <li>\n                            <a href=\"/archive/\">Archive</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        <li class=\"search-icon\">\n                            <a href=\"javascript:void(0)\">\n                                <i class=\"fa fa-search\"></i>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n            <!-- /.navbar-collapse -->\n        </div>\n        <!-- /.container -->\n    </nav>\n\n    <script>\n        // Drop Bootstarp low-performance Navbar\n        // Use customize navbar with high-quality material design animation\n        // in high-perf jank-free CSS3 implementation\n        var $body = document.body;\n        var $toggle = document.querySelector('.navbar-toggle');\n        var $navbar = document.querySelector('#huxblog_navbar');\n        var $collapse = document.querySelector('.navbar-collapse');\n\n        var __HuxNav__ = {\n            close: function () {\n                $navbar.className = \" \";\n                // wait until animation end.\n                setTimeout(function () {\n                    // prevent frequently toggle\n                    if ($navbar.className.indexOf('in') < 0) {\n                        $collapse.style.height = \"0px\"\n                    }\n                }, 400)\n            },\n            open: function () {\n                $collapse.style.height = \"auto\"\n                $navbar.className += \" in\";\n            }\n        }\n\n        // Bind Event\n        $toggle.addEventListener('click', function (e) {\n            if ($navbar.className.indexOf('in') > 0) {\n                __HuxNav__.close()\n            } else {\n                __HuxNav__.open()\n            }\n        })\n\n        /**\n         * Since Fastclick is used to delegate 'touchstart' globally\n         * to hack 300ms delay in iOS by performing a fake 'click',\n         * Using 'e.stopPropagation' to stop 'touchstart' event from \n         * $toggle/$collapse will break global delegation.\n         * \n         * Instead, we use a 'e.target' filter to prevent handler\n         * added to document close HuxNav.  \n         *\n         * Also, we use 'click' instead of 'touchstart' as compromise\n         */\n        document.addEventListener('click', function (e) {\n            if (e.target == $toggle) return;\n            if (e.target.className == 'icon-bar') return;\n            __HuxNav__.close();\n        })\n    </script>\n    <!-- Search -->\n<div class=\"search-page\">\n  <div class=\"search-icon-close-container\">\n    <span class=\"search-icon-close\">\n      <i class=\"fa fa-chevron-down\"></i>\n    </span>\n  </div>\n  <div class=\"search-main container\">\n    <div class=\"row\">\n      <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n        <form></form>\n        <input type=\"text\" id=\"search-input\" placeholder=\"$ grep...\">\n        </form>\n        <div id=\"search-results\" class=\"mini-post-list\"></div>\n      </div>\n    </div>\n  </div>\n</div>\n\n    <!-- Image to hack wechat -->\n<!-- <img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\"> -->\n<!-- <img src=\"/img/home-bg-geek.jpg\" width=\"0\" height=\"0\"> -->\n\n<!-- Post Header -->\n\n\n\n<style type=\"text/css\">\n    header.intro-header{\n        position: relative;\n        background-image: url('/img/home-bg-geek.jpg');\n        background: ;\n    }\n\n    \n</style>\n\n<header class=\"intro-header\" >\n\n    <div class=\"header-mask\"></div>\n    \n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <div class=\"post-heading\">\n                    <div class=\"tags\">\n                        \n                    </div>\n                    <h1>iOS组件化实践二：实践过程碰到的问题</h1>\n                    \n                    <h2 class=\"subheading\"></h2>\n                    <span class=\"meta\">Posted by PaysonChen on July 20, 2023</span>\n                </div>\n            </div>\n        </div>\n    </div>\n</header>\n\n\n\n\n\n\n<!-- Post Content -->\n<article>\n    <div class=\"container\">\n        <div class=\"row\">\n\n    <!-- Post Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                post-container\">\n\n                <!-- Multi-Lingual -->\n                \n\n\t\t\t\t<h2 id=\"1-需求不断插入\">1 需求不断插入</h2>\n\n<h3 id=\"11问题描述\">1.1问题描述：</h3>\n\n<p>​\t一般而言，面临需要做组件化的团队，大概率是一个持续迭代的需求的过程，这过程不可避免会遇到业务需求的插入，如何保证即完成业务需求，又实现组件化进程，这是一个需要综合考量的课题。</p>\n\n<h3 id=\"12-问题解决\">1.2 问题解决</h3>\n\n<p>​\t由于需求和迭代与组件化是并行的，因此需要对组件化定义里程碑，每个里程碑对应响应的迭代班车，简而言之，例如：每个月迭代一个版本，组件化可以以月为单位，1～x个月为一个里程碑，每个里程碑跟上一个迭代版本，这样保证班车能带上迭代的业务需求，也能带上组件化里程碑的变更，同时记得同步项目其他团队、例如产品团队、Leader（如有必要）、测试团队（一定要）</p>\n\n<h2 id=\"2-多人协作问题\">2 多人协作问题</h2>\n\n<h3 id=\"21-背景\">2.1 背景</h3>\n\n<p>​\t一般而言，面临需要做组件化的团队，大概率不会只有1个开发人员（因为一个只有1个开发人员的项目和团队应该规模也不大，对组件化的需求不高），而会是一个至少中小型，那就可能面临需求与组件化的多人同步进行，需要经历阶段性代码合并，由于组件化是对框架改动较大的工程（需要不止移动类到Pod仓库，还有改名，增删类等），这就存在分支合并的频繁冲突</p>\n\n<h3 id=\"22-解决\">2.2 解决</h3>\n\n<h4 id=\"221分支管理\">2.2.1分支管理</h4>\n\n<h5 id=\"2211-主工程\">2.2.1.1 主工程</h5>\n\n<p>​\t常规需求迭代遵循gitflow分支管理，与之并行一个组件化分支，假设为 feature/modulization，如果feature有触发自动merge操作，为了不频繁解决冲突，可以考虑自行定义一个分支名（personal/xxx/modulization），在每次发布版本，合并完dev与master，并打完Tag之后，从release分支合并代码到modulization</p>\n\n<p>​\t由于组件化分支的主工程会频繁涉及到类的增删、类名修改，会引起project.pbxproj 文件大面积的变动，因此合并代码时，可能存在project.pbxproj 文件大量冲突</p>\n\n<p>​\t这里提供一个解决思路：</p>\n\n<p>​\t<strong>如果距离上次merge主工程框架变动较大时，可以考虑以modulization分支的project.pbxproj的版本来解决冲突，根据编译报错/或者事先记录下新增文件再进行逐一修复</strong></p>\n\n<h5 id=\"2212-组件库\">2.2.1.2 组件库</h5>\n\n<p>​\t由于modulization工程依赖的组件需要频繁的修改，因此频繁的打tag显得也不是特别必要，而且组件库的tag还必须经过严格管理，以保证常规进展的需求不受影响。</p>\n\n<p>​\t这里提供一个解决思路：</p>\n\n<p>​\t针对所有进展中的组件库新建分支：moduleModulization，在Podfile依赖时指定:</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n</pre></td><td class=\"rouge-code\"><pre>  <span class=\"n\">pod</span> <span class=\"s1\">'PSCDebugModule'</span> <span class=\"p\">,</span> <span class=\"ss\">:git</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'ssh://PSC-devops.psc.com:30022/PSC/PSC-ios/Pods/Private/PSCDebugModule.git'</span> <span class=\"p\">,</span> <span class=\"ss\">:configurations</span> <span class=\"o\">=&gt;</span> <span class=\"p\">[</span><span class=\"s1\">'Debug'</span><span class=\"p\">,</span> <span class=\"s1\">'DailyBuild'</span><span class=\"p\">,</span> <span class=\"s1\">'TFInner'</span><span class=\"p\">],</span> <span class=\"ss\">:branch</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'master'</span>\n  <span class=\"n\">pod</span> <span class=\"s1\">'PSCCommonUI'</span>    <span class=\"p\">,</span> <span class=\"ss\">:git</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'ssh://PSC-devops.psc.com:30022/PSC/PSC-ios/Pods/Private/PSCCommonUI.git'</span><span class=\"p\">,</span> <span class=\"ss\">:branch</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'master'</span>\n  <span class=\"n\">pod</span> <span class=\"s1\">'PSCFrameWork'</span> <span class=\"p\">,</span> <span class=\"ss\">:git</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'ssh://PSC-devops.psc.com:30022/PSC/PSC-ios/Pods/Private/PSCFrameWork.git'</span><span class=\"p\">,</span> <span class=\"ss\">:branch</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'master'</span>\n  <span class=\"n\">pod</span> <span class=\"s1\">'PSCLogModule'</span>   <span class=\"p\">,</span> <span class=\"ss\">:git</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'ssh://PSC-devops.psc.com:30022/PSC/PSC-ios/Pods/Private/PSCLogModule.git'</span><span class=\"p\">,</span> <span class=\"ss\">:branch</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'master'</span>\n  <span class=\"n\">pod</span> <span class=\"s1\">'PSCAbility'</span>     <span class=\"p\">,</span> <span class=\"ss\">:git</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'ssh://PSC-devops.psc.com:30022/PSC/PSC-ios/Pods/Private/PSCAbility.git'</span><span class=\"p\">,</span> <span class=\"ss\">:branch</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'master'</span>\n  <span class=\"n\">pod</span> <span class=\"s1\">'PSCResource'</span>     <span class=\"p\">,</span> <span class=\"ss\">:git</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'ssh://PSC-devops.psc.com:30022/PSC/PSC-ios/Pods/Private/PSCResource.git'</span><span class=\"p\">,</span> <span class=\"ss\">:branch</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'master'</span>\n  <span class=\"n\">pod</span> <span class=\"s1\">'PSCLogModule'</span>   <span class=\"p\">,</span> <span class=\"ss\">:git</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'ssh://PSC-devops.psc.com:30022/PSC/PSC-ios/Pods/Private/PSCLogModule.git'</span><span class=\"p\">,</span> <span class=\"ss\">:branch</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'master'</span>\n  <span class=\"n\">pod</span> <span class=\"s1\">'PSCBaseModule'</span>   <span class=\"p\">,</span> <span class=\"ss\">:git</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'ssh://PSC-devops.psc.com:30022/PSC/PSC-ios/Pods/Private/PSCBaseModule.git'</span><span class=\"p\">,</span> <span class=\"ss\">:branch</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'master'</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>同时在Podfile_local（Podfile_local可以参见 <a href=\"https://github.com/MeetYouDevs/cocoapods-imy-bin\">imy-bin</a>）配置</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n</pre></td><td class=\"rouge-code\"><pre><span class=\"n\">plugin</span> <span class=\"s1\">'cocoapods-imy-bin'</span>\n\n<span class=\"n\">target</span> <span class=\"s1\">'PSCEvogoiOS'</span> <span class=\"k\">do</span>\n    <span class=\"n\">pod</span> <span class=\"s1\">'PSCAbility'</span><span class=\"p\">,</span> <span class=\"ss\">:path</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'../../../../../CocoaPods/Private/PSCAbility'</span>\n    <span class=\"n\">pod</span> <span class=\"s1\">'PSCDebugModule'</span><span class=\"p\">,</span> <span class=\"ss\">:path</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'../../../../../CocoaPods/Private/PSCDebugModule'</span>\n    <span class=\"n\">pod</span> <span class=\"s1\">'PSCBaseModule'</span><span class=\"p\">,</span> <span class=\"ss\">:path</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'../../../../../CocoaPods/Private/PSCBaseModule'</span>\n    <span class=\"n\">pod</span> <span class=\"s1\">'PSCCommonUI'</span><span class=\"p\">,</span> <span class=\"ss\">:path</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'../../../../../CocoaPods/Private/PSCCommonUI'</span>\n    <span class=\"n\">pod</span> <span class=\"s1\">'PSCFrameWork'</span><span class=\"p\">,</span> <span class=\"ss\">:path</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'../../../../../CocoaPods/Private/PSCFrameWork'</span>\n    <span class=\"n\">pod</span> <span class=\"s1\">'PSCLogModule'</span><span class=\"p\">,</span> <span class=\"ss\">:path</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'../../../../../CocoaPods/Private/PSCLogModule'</span>\n    <span class=\"n\">pod</span> <span class=\"s1\">'PSCResource'</span><span class=\"p\">,</span> <span class=\"ss\">:path</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'../../../../../CocoaPods/Private/PSCResource'</span>\n    <span class=\"n\">pod</span> <span class=\"s1\">'PSCHybridModule'</span><span class=\"p\">,</span> <span class=\"ss\">:path</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'../../../../../CocoaPods/Private/PSCHybridModule'</span>\n    <span class=\"n\">pod</span> <span class=\"s1\">'PSCThirdPartyModule'</span><span class=\"p\">,</span> <span class=\"ss\">:path</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'../../../../../CocoaPods/Private/PSCThirdPartyModule'</span>\n<span class=\"k\">end</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>在本地构建时，可以使用：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>bdpod bin <span class=\"nb\">install</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>流水线构建时，可恢复分支依赖如下：</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>bdpod <span class=\"nb\">install</span> <span class=\"nt\">--repo-update</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h4 id=\"222-分支合并\">2.2.2 分支合并</h4>\n\n<p>​\t分支合并时需要解决的冲突很多，一般存在下面几种情况：</p>\n\n<h5 id=\"2221-代码冲突\">2.2.2.1 代码冲突</h5>\n\n<p>​\t常规的冲突，以常规的方式解决，这边不多赘述。一般可以采用sourcetree，进行可视化操作。</p>\n\n<h5 id=\"2222-projectpbxproj冲突\">2.2.2.2 project.pbxproj冲突</h5>\n\n<p>​\t冲突不多时，也可以采用常规方式解决，如果冲突较多，解决的成本太高，可以参考上述：2.2.1.1 建议的方式进行</p>\n\n<h5 id=\"2223-文件冲突\">2.2.2.3 文件冲突</h5>\n\n<p>​\t文件冲突一般体现在：某个文件从主工程被迁移到组件库中or类名发生了变化，而其他分支上的修改者改动了这个文件，就会出现文件冲突，这个时候就需要对比组件库中或者新命名的类与冲突文件的变化。</p>\n\n<p>​\t这里提供一个解决思路：使用filemerge(Xcode自带)进行比较</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>/Applications/Xcode.app/Contents/Applications/FileMerge.app\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n\n\n                <hr style=\"visibility: hidden;\">\n                <ul class=\"pager\">\n                    \n                    <li class=\"previous\">\n                        <a href=\"/2023/07/14/iOS%E7%BB%84%E4%BB%B6%E5%8C%96%E5%AE%9E%E8%B7%B5%E4%B8%80_%E5%BA%8F%E8%A8%80/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"iOS组件化实践一：序言\">\n                        Previous<br>\n                        <span>iOS组件化实践一：序言</span>\n                        </a>\n                    </li>\n                    \n                    \n                    <li class=\"next\">\n                        <a href=\"/2023/07/26/4-iOS%E7%BB%84%E4%BB%B6%E5%8C%96%E6%A8%A1%E6%9D%BF/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"iOS组件化实践之：新建一个Pod组件库\">\n                        Next<br>\n                        <span>iOS组件化实践之：新建一个Pod组件库</span>\n                        </a>\n                    </li>\n                    \n                </ul>\n                <hr style=\"visibility: hidden;\">\n\n                \n                <!-- disqus 评论框 start -->\n                <div class=\"comment\">\n                    <div id=\"disqus_thread\" class=\"disqus-thread\"></div>\n                </div>\n                <!-- disqus 评论框 end -->\n                \n\n                \n            </div>  \n\n    <!-- Side Catalog Container -->\n        \n            <div class=\"\n                col-lg-2 col-lg-offset-0\n                visible-lg-block\n                sidebar-container\n                catalog-container\">\n                <div class=\"side-catalog\">\n                    <hr class=\"hidden-sm hidden-xs\">\n                    <h5>\n                        <a class=\"catalog-toggle\" href=\"#\">CATALOG</a>\n                    </h5>\n                    <ul class=\"catalog-body\"></ul>\n                </div>\n            </div>\n        \n\n    <!-- Sidebar Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                sidebar-container\">\n\n                <!-- Featured Tags -->\n                \n\n\n<section>\n    \n        <hr class=\"hidden-sm hidden-xs\">\n    \n    <h5><a href=\"/archive/\">FEATURED TAGS</a></h5>\n    <div class=\"tags\">\n        \n        \n        \n        \n        \n    </div>\n</section>\n\n\n                <!-- Friends Blog -->\n                \n            </div>\n        </div>\n    </div>\n</article>\n\n<!-- add support for mathjax by voleking-->\n\n\n\n\n\n\n<!-- disqus 公共JS代码 start (一个网页只需插入一次) -->\n<script type=\"text/javascript\">\n    /* * * CONFIGURATION VARIABLES * * */\n    var disqus_shortname = \"Cyp\";\n    var disqus_identifier = \"/2023/07/20/iOS组件化实践二-实践过程碰到的问题\";\n    var disqus_url = \"http://localhost:4000/2023/07/20/iOS%E7%BB%84%E4%BB%B6%E5%8C%96%E5%AE%9E%E8%B7%B5%E4%BA%8C-%E5%AE%9E%E8%B7%B5%E8%BF%87%E7%A8%8B%E7%A2%B0%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/\";\n\n    (function() {\n        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;\n        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';\n        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);\n    })();\n</script>\n<!-- disqus 公共JS代码 end -->\n\n\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n      var d = document, t = 'script',\n          o = d.createElement(t),\n          s = d.getElementsByTagName(t)[0];\n      o.src = u;\n      if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n      s.parentNode.insertBefore(o, s);\n    }\n</script>\n<!-- anchor-js, Doc:http://bryanbraun.github.io/anchorjs/ -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/anchor-js/1.1.1/anchor.min.js\",function(){\n        anchors.options = {\n          visible: 'hover',\n          placement: 'right',\n          // icon: '#'\n        };\n        anchors.add().remove('.intro-header h1').remove('.subheading').remove('.sidebar-container h5');\n    })\n</script>\n<style>\n    /* place left on bigger screen */\n    @media all and (min-width: 800px) {\n        .anchorjs-link{\n            position: absolute;\n            left: -0.75em;\n            font-size: 1.1em;\n            margin-top : -0.1em;\n        }\n    }\n</style>\n\n\n\n    <!-- Footer -->\n<footer>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <!-- SNS Link -->\n                \n\n\n<ul class=\"list-inline text-center\">\n\n\n  \n  \n  \n  \n  \n  \n  \n</ul>\n\n                <p class=\"copyright text-muted\">\n                    Copyright &copy; PaysonChen Blog 2024\n                    <br>\n                    <!-- Powered by <a href=\"http://huangxuan.me\">Hux Blog</a> | -->\n                 <!--    <iframe style=\"margin-left: 2px; margin-bottom:-5px;\" frameborder=\"0\" scrolling=\"0\" width=\"100px\"\n                        height=\"20px\"\n                        src=\"https://ghbtns.com/github-btn.html?user=huxpro&repo=huxpro.github.io&type=star&count=true\">\n                    </iframe> -->\n                </p>\n            </div>\n        </div>\n    </div>\n</footer>\n\n<!-- jQuery -->\n<script src=\"/js/jquery.min.js \"></script>\n\n<!-- Bootstrap Core JavaScript -->\n<!-- Currently, only navbar scroll-down effect at desktop still depends on this -->\n<script src=\"/js/bootstrap.min.js \"></script>\n\n<!-- Custom Theme JavaScript -->\n<script src=\"/js/hux-blog.min.js \"></script>\n\n<!-- Simple Jekyll Search -->\n<script src=\"/js/simple-jekyll-search.min.js\"></script>\n\n<!-- Service Worker -->\n\n<script src=\"/js/snackbar.js \"></script>\n<script src=\"/js/sw-registration.js \"></script>\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n        var d = document, t = 'script',\n            o = d.createElement(t),\n            s = d.getElementsByTagName(t)[0];\n        o.src = u;\n        if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n        s.parentNode.insertBefore(o, s);\n    }\n</script>\n\n<!--\n     Because of the native support for backtick-style fenced code blocks\n     right within the Markdown is landed in Github Pages,\n     From V1.6, There is no need for Highlight.js,\n     so Huxblog drops it officially.\n\n     - https://github.com/blog/2100-github-pages-now-faster-and-simpler-with-jekyll-3-0\n     - https://help.github.com/articles/creating-and-highlighting-code-blocks/\n     - https://github.com/jneen/rouge/wiki/list-of-supported-languages-and-lexers\n-->\n<!--\n    <script>\n        async(\"http://cdn.bootcss.com/highlight.js/8.6/highlight.min.js\", function(){\n            hljs.initHighlightingOnLoad();\n        })\n    </script>\n    <link href=\"http://cdn.bootcss.com/highlight.js/8.6/styles/github.min.css\" rel=\"stylesheet\">\n-->\n\n\n\n\n\n\n\n<!--fastClick.js -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/fastclick/1.0.6/fastclick.min.js\", function () {\n        var $nav = document.querySelector(\"nav\");\n        if ($nav) FastClick.attach($nav);\n    })\n</script>\n\n\n<!-- Google Analytics -->\n\n\n\n<!-- Baidu Tongji -->\n\n\n\n<!-- Side Catalog -->\n\n<script type=\"text/javascript\">\n    function generateCatalog(selector) {\n\n        // interop with multilangual \n        if ('' == 'true') {\n            _containerSelector = 'div.post-container.active'\n        } else {\n            _containerSelector = 'div.post-container'\n        }\n\n        // init\n        var P = $(_containerSelector), a, n, t, l, i, c;\n        a = P.find('h1,h2,h3,h4,h5,h6');\n\n        // clean\n        $(selector).html('')\n\n        // appending\n        a.each(function () {\n            n = $(this).prop('tagName').toLowerCase();\n            i = \"#\" + $(this).prop('id');\n            t = $(this).text();\n            c = $('<a href=\"' + i + '\" rel=\"nofollow\">' + t + '</a>');\n            l = $('<li class=\"' + n + '_nav\"></li>').append(c);\n            $(selector).append(l);\n        });\n        return true;\n    }\n\n    generateCatalog(\".catalog-body\");\n\n    // toggle side catalog\n    $(\".catalog-toggle\").click((function (e) {\n        e.preventDefault();\n        $('.side-catalog').toggleClass(\"fold\")\n    }))\n\n    /*\n     * Doc: https://github.com/davist11/jQuery-One-Page-Nav\n     * Fork by Hux to support padding\n     */\n    async(\"/js/jquery.nav.js\", function () {\n        $('.catalog-body').onePageNav({\n            currentClass: \"active\",\n            changeHash: !1,\n            easing: \"swing\",\n            filter: \"\",\n            scrollSpeed: 700,\n            scrollOffset: 0,\n            scrollThreshold: .2,\n            begin: null,\n            end: null,\n            scrollChange: null,\n            padding: 80\n        });\n    });\n</script>\n\n\n\n<!-- Multi-Lingual -->\n\n\n<!-- Simple Jekyll Search -->\n<script>\n    // https://stackoverflow.com/questions/1912501/unescape-html-entities-in-javascript\n    function htmlDecode(input) {\n        var e = document.createElement('textarea');\n        e.innerHTML = input;\n        // handle case of empty input\n        return e.childNodes.length === 0 ? \"\" : e.childNodes[0].nodeValue;\n    }\n\n    SimpleJekyllSearch({\n        searchInput: document.getElementById('search-input'),\n        resultsContainer: document.getElementById('search-results'),\n        json: '/search.json',\n        searchResultTemplate: '<div class=\"post-preview item\"><a href=\"{url}\"><h2 class=\"post-title\">{title}</h2><h3 class=\"post-subtitle\">{subtitle}</h3><hr></a></div>',\n        noResultsText: 'No results',\n        limit: 50,\n        fuzzy: false,\n        // a hack to get escaped subtitle unescaped. for some reason, \n        // post.subtitle w/o escape filter nuke entire search.\n        templateMiddleware: function (prop, value, template) {\n            if (prop === 'subtitle' || prop === 'title') {\n                if (value.indexOf(\"code\")) {\n                    return htmlDecode(value);\n                } else {\n                    return value;\n                }\n            }\n        }\n    });\n\n    $(document).ready(function () {\n        var $searchPage = $('.search-page');\n        var $searchOpen = $('.search-icon');\n        var $searchClose = $('.search-icon-close');\n        var $searchInput = $('#search-input');\n        var $body = $('body');\n\n        $searchOpen.on('click', function (e) {\n            e.preventDefault();\n            $searchPage.toggleClass('search-active');\n            var prevClasses = $body.attr('class') || '';\n            setTimeout(function () {\n                $body.addClass('no-scroll');\n            }, 400)\n\n            if ($searchPage.hasClass('search-active')) {\n                $searchClose.on('click', function (e) {\n                    e.preventDefault();\n                    $searchPage.removeClass('search-active');\n                    $body.attr('class', prevClasses);  // from closure \n                });\n                $searchInput.focus();\n            }\n        });\n    });\n</script>\n\n\n<!-- Image to hack wechat -->\n<img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\" />\n<!-- Migrate from head to bottom, no longer block render and still work -->\n\n</body>\n\n</html>\n","excerpt":"<h2 id=\"1-需求不断插入\">1 需求不断插入</h2>\n","url":"/2023/07/20/iOS%E7%BB%84%E4%BB%B6%E5%8C%96%E5%AE%9E%E8%B7%B5%E4%BA%8C-%E5%AE%9E%E8%B7%B5%E8%BF%87%E7%A8%8B%E7%A2%B0%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/","next":{"id":"/2023/07/26/4-iOS组件化模板","tags":[],"relative_path":"_posts/2023-07-26-4-iOS组件化模板.md","collection":"posts","name":"2023-07-26-4-iOS组件化模板.md","url":"/2023/07/26/4-iOS%E7%BB%84%E4%BB%B6%E5%8C%96%E6%A8%A1%E6%9D%BF/","title":"iOS组件化实践之：新建一个Pod组件库","date":"2023-07-26 00:00:00 +0800","categories":[],"path":"_posts/2023-07-26-4-iOS组件化模板.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/home-bg-geek.jpg","slug":"4-iOS组件化模板","ext":".md"},"title":"iOS组件化实践二：实践过程碰到的问题","date":"2023-07-20 00:00:00 +0800","categories":[],"path":"_posts/2023-07-20-iOS组件化实践二-实践过程碰到的问题.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/home-bg-geek.jpg","slug":"iOS组件化实践二-实践过程碰到的问题","ext":".md"},"title":"iOS组件化实践一：序言","date":"2023-07-14 00:00:00 +0800","categories":[],"path":"_posts/2023-07-14-iOS组件化实践一_序言.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/home-bg-geek.jpg","slug":"iOS组件化实践一_序言","ext":".md"},{"id":"/2022/09/26/Github多账号配置SSH","tags":[],"relative_path":"_posts/2022-09-26-Github多账号配置SSH.md","collection":"posts","content":"<h2 id=\"0x00-背景\">0x00 背景</h2>\n\n<p>​\t有时候需要多个github的账号，比如Github Page，如果有需要开多个可能就需要同时管理多个github账号</p>\n\n<h2 id=\"0x01-实践\">0x01 实践</h2>\n\n<p>​\t在ssh管理上使用常规的config配置文件:</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n</pre></td><td class=\"rouge-code\"><pre># github2\nHost XXX.github.com\nPort 22\nUser XXX\nHostName github.com\nPreferredAuthentications publickey\nIdentityFile ~/.ssh/id_rsa_github_XXX\n\n# github \nHost YYY.github.com\nPort 22\nUser YYY\nHostName github.com\nPreferredAuthentications publickey\nIdentityFile ~/.ssh/id_rsa_github_YYY\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>一开始还可以用</p>\n\n<h2 id=\"0x02-问题\">0x02 问题</h2>\n\n<p>过了一段时间想继续使用，发现出问题了</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n</pre></td><td class=\"rouge-code\"><pre>git clone git@github.com:nickname/web.git \n\n\nCloning into 'XXX.github.io'...\ngit@github.com: Permission denied (publickey).\nfatal: Could not read from remote repository.\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h2 id=\"0x03-解决\">0x03 解决</h2>\n\n<p>clone时 改为 git@other.github.com:nickname/web.git 即可</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>git@other.github.com:nickname/web.git \n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h2 id=\"0x04-其他问题\">0x04 其他问题</h2>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n</pre></td><td class=\"rouge-code\"><pre>Cloning into 'yyy'...\n/Users/xxxx/.ssh/config line 21: Bad key types 'publickey'.\n/Users/xxxx/.ssh/config: terminating, 1 bad configuration options\nfatal: Could not read from remote repository.\n\nPlease make sure you have the correct access rights\nand the repository exists.\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>此时表示 publickey 不符合这个仓库的加密类型尝试改成</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n</pre></td><td class=\"rouge-code\"><pre>PubkeyAcceptedAlgorithms publickey\n=&gt;\nPubkeyAcceptedAlgorithms +ssh-rsa\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n","name":"2022-09-26-Github多账号配置SSH.md","previous":{"id":"/2022/09/25/App瘦身实践之批量转换webp","tags":[],"relative_path":"_posts/2022-09-25-App瘦身实践之批量转换webp.md","collection":"posts","content":"<h2 id=\"0x00-背景\">0x00 背景</h2>\n\n<p>​\tWebP 在各大互联网公司已经使用得很多了。WebP 的优势体现在它具有更优的图像数据压缩算法，能带来更小的图片体积，而且拥有肉眼识别无差异的图像质量；同时具备了无损和有损的压缩模式、Alpha 透明以及动画的特性，在 JPEG 和 PNG 上的转化效果都相当优秀、稳定和统一。</p>\n\n<h2 id=\"0x01-优势对比\">0x01 优势对比</h2>\n\n<ul>\n  <li>PNG 转 WebP 的压缩率要高于 PNG 原图压缩率，同样支持有损与无损压缩</li>\n  <li>转换后的 WebP 体积大幅减少，图片质量也得到保障（同时肉眼几乎无法看出差异）</li>\n  <li>转换后的 WebP 支持 Alpha 透明和 24-bit 颜色数，不存在 PNG8 色彩不够丰富和在浏览器中可能会出现毛边的问题</li>\n</ul>\n\n<h2 id=\"0x02-实践\">0x02 实践</h2>\n\n<p>一般设计给资源会有压缩@2x,@3x压缩包，于是可以把这些压缩包批量转换一下：</p>\n\n<p>写一个脚本：transfer2webp.sh</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n</pre></td><td class=\"rouge-code\"><pre><span class=\"k\">for </span>file <span class=\"k\">in</span> ./<span class=\"k\">*</span>\n<span class=\"k\">do\n    </span><span class=\"nv\">suffix</span><span class=\"o\">=</span>zip\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">file</span><span class=\"p\">##*.</span><span class=\"k\">}</span><span class=\"s2\">\"</span> <span class=\"o\">=</span> <span class=\"s2\">\"</span><span class=\"nv\">$suffix</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">echo</span> <span class=\"nv\">$file</span> <span class=\"s1\">'zip'</span>\n        <span class=\"nb\">dir</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">file</span><span class=\"p\">%.*</span><span class=\"k\">}</span>\n        unar <span class=\"nt\">-e</span> GBK <span class=\"nv\">$file</span> <span class=\"c\">#没有unar环境可以安装下https://blog.csdn.net/dawn_after_dark/article/details/83504421</span>\n        <span class=\"k\">for </span>subfile <span class=\"k\">in</span> ./<span class=\"k\">${</span><span class=\"nv\">dir</span><span class=\"k\">}</span>/<span class=\"k\">*</span>\n        <span class=\"k\">do\n            </span>cwebp <span class=\"nt\">-q</span> 90 <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">subfile</span><span class=\"k\">}</span><span class=\"s2\">\"</span> <span class=\"nt\">-o</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">subfile</span><span class=\"p\">%.*</span><span class=\"k\">}</span><span class=\"s2\">.webp\"</span>\n        <span class=\"k\">done\n\n    elif </span><span class=\"nb\">test</span> <span class=\"nt\">-d</span> <span class=\"nv\">$file</span> <span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">echo</span> <span class=\"nv\">$file</span> <span class=\"s1\">'fold'</span>\n    <span class=\"k\">else\n        </span><span class=\"nb\">echo</span> <span class=\"nv\">$file</span> <span class=\"s1\">'other'</span>\n    <span class=\"k\">fi\ndone</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>备注：之所以选unar而非unzip，是因为很多设计资源打包时，很可能带中文，在一开始的方案中使用了unzip会有乱码问题，为了兼容中文压缩包选用unar</p>\n\n","name":"2022-09-25-App瘦身实践之批量转换webp.md","previous":{"id":"/2022/01/19/iOS-OpenType","tags":[],"relative_path":"_posts/2022-01-19-iOS-OpenType.md","collection":"posts","name":"2022-01-19-iOS-OpenType.md","url":"/2022/01/19/iOS-OpenType/","title":"iOS应用接收文件打开类型","date":"2022-01-19 00:00:00 +0800","categories":[],"path":"_posts/2022-01-19-iOS-OpenType.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/home-bg-geek.jpg","slug":"iOS-OpenType","ext":".md"},"output":"<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"google-site-verification\" content=\"xBT4GhYoi5qRD5tr338pgPM5OWHHIDR6mNg1a3euekI\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, viewport-fit=cover\">\n    <meta name=\"description\" content=\"与你一起发现更大的世界。\">\n    <meta name=\"keywords\"  content=\"PaysonChen,iOS,流媒体\">\n    <meta name=\"theme-color\" content=\"#000000\">\n    \n    <!-- Open Graph -->\n    <meta property=\"og:title\" content=\"App瘦身实践之批量转换webp - PaysonChen的博客 | PaysonChen Blog\">\n    \n    <meta property=\"og:type\" content=\"article\">\n    <meta property=\"og:description\" content=\"0x00 背景\n\">\n    \n    \n    <meta property=\"article:published_time\" content=\"2022-09-25T00:00:00Z\">\n    \n    \n    <meta property=\"article:author\" content=\"PaysonChen\">\n    \n    \n    \n    <meta property=\"og:image\" content=\"http://localhost:4000\">\n    <meta property=\"og:url\" content=\"http://localhost:4000/2022/09/25/App%E7%98%A6%E8%BA%AB%E5%AE%9E%E8%B7%B5%E4%B9%8B%E6%89%B9%E9%87%8F%E8%BD%AC%E6%8D%A2webp/\">\n    <meta property=\"og:site_name\" content=\"PaysonChen的博客 | PaysonChen Blog\">\n    \n    <title>App瘦身实践之批量转换webp - PaysonChen的博客 | PaysonChen Blog</title>\n\n    <!-- Web App Manifest -->\n    <link rel=\"manifest\" href=\"/pwa/manifest.json\">\n\n    <!-- Favicon -->\n    <link rel=\"shortcut icon\" href=\"/img/favicon.ico\">\n    \n    <!-- Canonical URL -->\n    <link rel=\"canonical\" href=\"http://localhost:4000/2022/09/25/App%E7%98%A6%E8%BA%AB%E5%AE%9E%E8%B7%B5%E4%B9%8B%E6%89%B9%E9%87%8F%E8%BD%AC%E6%8D%A2webp/\">\n\n    <!-- Bootstrap Core CSS -->\n    <link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\">\n\n    <!-- Custom CSS -->\n    <link rel=\"stylesheet\" href=\"/css/hux-blog.min.css\">\n\n    <!-- Custom Fonts -->\n    <!-- <link href=\"http://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\"> -->\n    <!-- Hux change font-awesome CDN to qiniu -->\n    <link href=\"//cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\">\n\n\n    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->\n    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->\n    <!--[if lt IE 9]>\n        <script src=\"https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js\"></script>\n        <script src=\"https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js\"></script>\n    <![endif]-->\n\n    <!-- ga & ba script hoook -->\n    <script></script>\n</head>\n\n\n<!-- hack iOS CSS :active style -->\n<body ontouchstart=\"\">\n\n    <!-- Navigation -->\n\n    <nav class=\"navbar navbar-default navbar-custom navbar-fixed-top\">\n        \n        <div class=\"container-fluid\">\n            <!-- Brand and toggle get grouped for better mobile display -->\n            <div class=\"navbar-header page-scroll\">\n                <button type=\"button\" class=\"navbar-toggle\">\n                    <span class=\"sr-only\">Toggle navigation</span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                </button>\n                <a class=\"navbar-brand\" href=\"/\">PaysonChen Blog</a>\n            </div>\n\n            <!-- Collect the nav links, forms, and other content for toggling -->\n            <div id=\"huxblog_navbar\">\n                <div class=\"navbar-collapse\">\n                    <ul class=\"nav navbar-nav navbar-right\">\n                        <li>\n                            <a href=\"/\">Home</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        <li>\n                            <a href=\"/about/\">About</a>\n                        </li>\n                        \n                        \n                        \n                        <li>\n                            <a href=\"/archive/\">Archive</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        <li class=\"search-icon\">\n                            <a href=\"javascript:void(0)\">\n                                <i class=\"fa fa-search\"></i>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n            <!-- /.navbar-collapse -->\n        </div>\n        <!-- /.container -->\n    </nav>\n\n    <script>\n        // Drop Bootstarp low-performance Navbar\n        // Use customize navbar with high-quality material design animation\n        // in high-perf jank-free CSS3 implementation\n        var $body = document.body;\n        var $toggle = document.querySelector('.navbar-toggle');\n        var $navbar = document.querySelector('#huxblog_navbar');\n        var $collapse = document.querySelector('.navbar-collapse');\n\n        var __HuxNav__ = {\n            close: function () {\n                $navbar.className = \" \";\n                // wait until animation end.\n                setTimeout(function () {\n                    // prevent frequently toggle\n                    if ($navbar.className.indexOf('in') < 0) {\n                        $collapse.style.height = \"0px\"\n                    }\n                }, 400)\n            },\n            open: function () {\n                $collapse.style.height = \"auto\"\n                $navbar.className += \" in\";\n            }\n        }\n\n        // Bind Event\n        $toggle.addEventListener('click', function (e) {\n            if ($navbar.className.indexOf('in') > 0) {\n                __HuxNav__.close()\n            } else {\n                __HuxNav__.open()\n            }\n        })\n\n        /**\n         * Since Fastclick is used to delegate 'touchstart' globally\n         * to hack 300ms delay in iOS by performing a fake 'click',\n         * Using 'e.stopPropagation' to stop 'touchstart' event from \n         * $toggle/$collapse will break global delegation.\n         * \n         * Instead, we use a 'e.target' filter to prevent handler\n         * added to document close HuxNav.  \n         *\n         * Also, we use 'click' instead of 'touchstart' as compromise\n         */\n        document.addEventListener('click', function (e) {\n            if (e.target == $toggle) return;\n            if (e.target.className == 'icon-bar') return;\n            __HuxNav__.close();\n        })\n    </script>\n    <!-- Search -->\n<div class=\"search-page\">\n  <div class=\"search-icon-close-container\">\n    <span class=\"search-icon-close\">\n      <i class=\"fa fa-chevron-down\"></i>\n    </span>\n  </div>\n  <div class=\"search-main container\">\n    <div class=\"row\">\n      <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n        <form></form>\n        <input type=\"text\" id=\"search-input\" placeholder=\"$ grep...\">\n        </form>\n        <div id=\"search-results\" class=\"mini-post-list\"></div>\n      </div>\n    </div>\n  </div>\n</div>\n\n    <!-- Image to hack wechat -->\n<!-- <img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\"> -->\n<!-- <img src=\"/img/home-bg-geek.jpg\" width=\"0\" height=\"0\"> -->\n\n<!-- Post Header -->\n\n\n\n<style type=\"text/css\">\n    header.intro-header{\n        position: relative;\n        background-image: url('/img/home-bg-geek.jpg');\n        background: ;\n    }\n\n    \n</style>\n\n<header class=\"intro-header\" >\n\n    <div class=\"header-mask\"></div>\n    \n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <div class=\"post-heading\">\n                    <div class=\"tags\">\n                        \n                    </div>\n                    <h1>App瘦身实践之批量转换webp</h1>\n                    \n                    <h2 class=\"subheading\"></h2>\n                    <span class=\"meta\">Posted by PaysonChen on September 25, 2022</span>\n                </div>\n            </div>\n        </div>\n    </div>\n</header>\n\n\n\n\n\n\n<!-- Post Content -->\n<article>\n    <div class=\"container\">\n        <div class=\"row\">\n\n    <!-- Post Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                post-container\">\n\n                <!-- Multi-Lingual -->\n                \n\n\t\t\t\t<h2 id=\"0x00-背景\">0x00 背景</h2>\n\n<p>​\tWebP 在各大互联网公司已经使用得很多了。WebP 的优势体现在它具有更优的图像数据压缩算法，能带来更小的图片体积，而且拥有肉眼识别无差异的图像质量；同时具备了无损和有损的压缩模式、Alpha 透明以及动画的特性，在 JPEG 和 PNG 上的转化效果都相当优秀、稳定和统一。</p>\n\n<h2 id=\"0x01-优势对比\">0x01 优势对比</h2>\n\n<ul>\n  <li>PNG 转 WebP 的压缩率要高于 PNG 原图压缩率，同样支持有损与无损压缩</li>\n  <li>转换后的 WebP 体积大幅减少，图片质量也得到保障（同时肉眼几乎无法看出差异）</li>\n  <li>转换后的 WebP 支持 Alpha 透明和 24-bit 颜色数，不存在 PNG8 色彩不够丰富和在浏览器中可能会出现毛边的问题</li>\n</ul>\n\n<h2 id=\"0x02-实践\">0x02 实践</h2>\n\n<p>一般设计给资源会有压缩@2x,@3x压缩包，于是可以把这些压缩包批量转换一下：</p>\n\n<p>写一个脚本：transfer2webp.sh</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n</pre></td><td class=\"rouge-code\"><pre><span class=\"k\">for </span>file <span class=\"k\">in</span> ./<span class=\"k\">*</span>\n<span class=\"k\">do\n    </span><span class=\"nv\">suffix</span><span class=\"o\">=</span>zip\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">file</span><span class=\"p\">##*.</span><span class=\"k\">}</span><span class=\"s2\">\"</span> <span class=\"o\">=</span> <span class=\"s2\">\"</span><span class=\"nv\">$suffix</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">echo</span> <span class=\"nv\">$file</span> <span class=\"s1\">'zip'</span>\n        <span class=\"nb\">dir</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">file</span><span class=\"p\">%.*</span><span class=\"k\">}</span>\n        unar <span class=\"nt\">-e</span> GBK <span class=\"nv\">$file</span> <span class=\"c\">#没有unar环境可以安装下https://blog.csdn.net/dawn_after_dark/article/details/83504421</span>\n        <span class=\"k\">for </span>subfile <span class=\"k\">in</span> ./<span class=\"k\">${</span><span class=\"nv\">dir</span><span class=\"k\">}</span>/<span class=\"k\">*</span>\n        <span class=\"k\">do\n            </span>cwebp <span class=\"nt\">-q</span> 90 <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">subfile</span><span class=\"k\">}</span><span class=\"s2\">\"</span> <span class=\"nt\">-o</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">subfile</span><span class=\"p\">%.*</span><span class=\"k\">}</span><span class=\"s2\">.webp\"</span>\n        <span class=\"k\">done\n\n    elif </span><span class=\"nb\">test</span> <span class=\"nt\">-d</span> <span class=\"nv\">$file</span> <span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">echo</span> <span class=\"nv\">$file</span> <span class=\"s1\">'fold'</span>\n    <span class=\"k\">else\n        </span><span class=\"nb\">echo</span> <span class=\"nv\">$file</span> <span class=\"s1\">'other'</span>\n    <span class=\"k\">fi\ndone</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>备注：之所以选unar而非unzip，是因为很多设计资源打包时，很可能带中文，在一开始的方案中使用了unzip会有乱码问题，为了兼容中文压缩包选用unar</p>\n\n\n\n                <hr style=\"visibility: hidden;\">\n                <ul class=\"pager\">\n                    \n                    <li class=\"previous\">\n                        <a href=\"/2022/01/19/iOS-OpenType/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"iOS应用接收文件打开类型\">\n                        Previous<br>\n                        <span>iOS应用接收文件打开类型</span>\n                        </a>\n                    </li>\n                    \n                    \n                    <li class=\"next\">\n                        <a href=\"/2022/09/26/Github%E5%A4%9A%E8%B4%A6%E5%8F%B7%E9%85%8D%E7%BD%AESSH/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Github多账号配置SSH\">\n                        Next<br>\n                        <span>Github多账号配置SSH</span>\n                        </a>\n                    </li>\n                    \n                </ul>\n                <hr style=\"visibility: hidden;\">\n\n                \n                <!-- disqus 评论框 start -->\n                <div class=\"comment\">\n                    <div id=\"disqus_thread\" class=\"disqus-thread\"></div>\n                </div>\n                <!-- disqus 评论框 end -->\n                \n\n                \n            </div>  \n\n    <!-- Side Catalog Container -->\n        \n            <div class=\"\n                col-lg-2 col-lg-offset-0\n                visible-lg-block\n                sidebar-container\n                catalog-container\">\n                <div class=\"side-catalog\">\n                    <hr class=\"hidden-sm hidden-xs\">\n                    <h5>\n                        <a class=\"catalog-toggle\" href=\"#\">CATALOG</a>\n                    </h5>\n                    <ul class=\"catalog-body\"></ul>\n                </div>\n            </div>\n        \n\n    <!-- Sidebar Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                sidebar-container\">\n\n                <!-- Featured Tags -->\n                \n\n\n<section>\n    \n        <hr class=\"hidden-sm hidden-xs\">\n    \n    <h5><a href=\"/archive/\">FEATURED TAGS</a></h5>\n    <div class=\"tags\">\n        \n        \n        \n        \n        \n    </div>\n</section>\n\n\n                <!-- Friends Blog -->\n                \n            </div>\n        </div>\n    </div>\n</article>\n\n<!-- add support for mathjax by voleking-->\n\n\n\n\n\n\n<!-- disqus 公共JS代码 start (一个网页只需插入一次) -->\n<script type=\"text/javascript\">\n    /* * * CONFIGURATION VARIABLES * * */\n    var disqus_shortname = \"Cyp\";\n    var disqus_identifier = \"/2022/09/25/App瘦身实践之批量转换webp\";\n    var disqus_url = \"http://localhost:4000/2022/09/25/App%E7%98%A6%E8%BA%AB%E5%AE%9E%E8%B7%B5%E4%B9%8B%E6%89%B9%E9%87%8F%E8%BD%AC%E6%8D%A2webp/\";\n\n    (function() {\n        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;\n        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';\n        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);\n    })();\n</script>\n<!-- disqus 公共JS代码 end -->\n\n\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n      var d = document, t = 'script',\n          o = d.createElement(t),\n          s = d.getElementsByTagName(t)[0];\n      o.src = u;\n      if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n      s.parentNode.insertBefore(o, s);\n    }\n</script>\n<!-- anchor-js, Doc:http://bryanbraun.github.io/anchorjs/ -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/anchor-js/1.1.1/anchor.min.js\",function(){\n        anchors.options = {\n          visible: 'hover',\n          placement: 'right',\n          // icon: '#'\n        };\n        anchors.add().remove('.intro-header h1').remove('.subheading').remove('.sidebar-container h5');\n    })\n</script>\n<style>\n    /* place left on bigger screen */\n    @media all and (min-width: 800px) {\n        .anchorjs-link{\n            position: absolute;\n            left: -0.75em;\n            font-size: 1.1em;\n            margin-top : -0.1em;\n        }\n    }\n</style>\n\n\n\n    <!-- Footer -->\n<footer>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <!-- SNS Link -->\n                \n\n\n<ul class=\"list-inline text-center\">\n\n\n  \n  \n  \n  \n  \n  \n  \n</ul>\n\n                <p class=\"copyright text-muted\">\n                    Copyright &copy; PaysonChen Blog 2024\n                    <br>\n                    <!-- Powered by <a href=\"http://huangxuan.me\">Hux Blog</a> | -->\n                 <!--    <iframe style=\"margin-left: 2px; margin-bottom:-5px;\" frameborder=\"0\" scrolling=\"0\" width=\"100px\"\n                        height=\"20px\"\n                        src=\"https://ghbtns.com/github-btn.html?user=huxpro&repo=huxpro.github.io&type=star&count=true\">\n                    </iframe> -->\n                </p>\n            </div>\n        </div>\n    </div>\n</footer>\n\n<!-- jQuery -->\n<script src=\"/js/jquery.min.js \"></script>\n\n<!-- Bootstrap Core JavaScript -->\n<!-- Currently, only navbar scroll-down effect at desktop still depends on this -->\n<script src=\"/js/bootstrap.min.js \"></script>\n\n<!-- Custom Theme JavaScript -->\n<script src=\"/js/hux-blog.min.js \"></script>\n\n<!-- Simple Jekyll Search -->\n<script src=\"/js/simple-jekyll-search.min.js\"></script>\n\n<!-- Service Worker -->\n\n<script src=\"/js/snackbar.js \"></script>\n<script src=\"/js/sw-registration.js \"></script>\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n        var d = document, t = 'script',\n            o = d.createElement(t),\n            s = d.getElementsByTagName(t)[0];\n        o.src = u;\n        if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n        s.parentNode.insertBefore(o, s);\n    }\n</script>\n\n<!--\n     Because of the native support for backtick-style fenced code blocks\n     right within the Markdown is landed in Github Pages,\n     From V1.6, There is no need for Highlight.js,\n     so Huxblog drops it officially.\n\n     - https://github.com/blog/2100-github-pages-now-faster-and-simpler-with-jekyll-3-0\n     - https://help.github.com/articles/creating-and-highlighting-code-blocks/\n     - https://github.com/jneen/rouge/wiki/list-of-supported-languages-and-lexers\n-->\n<!--\n    <script>\n        async(\"http://cdn.bootcss.com/highlight.js/8.6/highlight.min.js\", function(){\n            hljs.initHighlightingOnLoad();\n        })\n    </script>\n    <link href=\"http://cdn.bootcss.com/highlight.js/8.6/styles/github.min.css\" rel=\"stylesheet\">\n-->\n\n\n\n\n\n\n\n<!--fastClick.js -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/fastclick/1.0.6/fastclick.min.js\", function () {\n        var $nav = document.querySelector(\"nav\");\n        if ($nav) FastClick.attach($nav);\n    })\n</script>\n\n\n<!-- Google Analytics -->\n\n\n\n<!-- Baidu Tongji -->\n\n\n\n<!-- Side Catalog -->\n\n<script type=\"text/javascript\">\n    function generateCatalog(selector) {\n\n        // interop with multilangual \n        if ('' == 'true') {\n            _containerSelector = 'div.post-container.active'\n        } else {\n            _containerSelector = 'div.post-container'\n        }\n\n        // init\n        var P = $(_containerSelector), a, n, t, l, i, c;\n        a = P.find('h1,h2,h3,h4,h5,h6');\n\n        // clean\n        $(selector).html('')\n\n        // appending\n        a.each(function () {\n            n = $(this).prop('tagName').toLowerCase();\n            i = \"#\" + $(this).prop('id');\n            t = $(this).text();\n            c = $('<a href=\"' + i + '\" rel=\"nofollow\">' + t + '</a>');\n            l = $('<li class=\"' + n + '_nav\"></li>').append(c);\n            $(selector).append(l);\n        });\n        return true;\n    }\n\n    generateCatalog(\".catalog-body\");\n\n    // toggle side catalog\n    $(\".catalog-toggle\").click((function (e) {\n        e.preventDefault();\n        $('.side-catalog').toggleClass(\"fold\")\n    }))\n\n    /*\n     * Doc: https://github.com/davist11/jQuery-One-Page-Nav\n     * Fork by Hux to support padding\n     */\n    async(\"/js/jquery.nav.js\", function () {\n        $('.catalog-body').onePageNav({\n            currentClass: \"active\",\n            changeHash: !1,\n            easing: \"swing\",\n            filter: \"\",\n            scrollSpeed: 700,\n            scrollOffset: 0,\n            scrollThreshold: .2,\n            begin: null,\n            end: null,\n            scrollChange: null,\n            padding: 80\n        });\n    });\n</script>\n\n\n\n<!-- Multi-Lingual -->\n\n\n<!-- Simple Jekyll Search -->\n<script>\n    // https://stackoverflow.com/questions/1912501/unescape-html-entities-in-javascript\n    function htmlDecode(input) {\n        var e = document.createElement('textarea');\n        e.innerHTML = input;\n        // handle case of empty input\n        return e.childNodes.length === 0 ? \"\" : e.childNodes[0].nodeValue;\n    }\n\n    SimpleJekyllSearch({\n        searchInput: document.getElementById('search-input'),\n        resultsContainer: document.getElementById('search-results'),\n        json: '/search.json',\n        searchResultTemplate: '<div class=\"post-preview item\"><a href=\"{url}\"><h2 class=\"post-title\">{title}</h2><h3 class=\"post-subtitle\">{subtitle}</h3><hr></a></div>',\n        noResultsText: 'No results',\n        limit: 50,\n        fuzzy: false,\n        // a hack to get escaped subtitle unescaped. for some reason, \n        // post.subtitle w/o escape filter nuke entire search.\n        templateMiddleware: function (prop, value, template) {\n            if (prop === 'subtitle' || prop === 'title') {\n                if (value.indexOf(\"code\")) {\n                    return htmlDecode(value);\n                } else {\n                    return value;\n                }\n            }\n        }\n    });\n\n    $(document).ready(function () {\n        var $searchPage = $('.search-page');\n        var $searchOpen = $('.search-icon');\n        var $searchClose = $('.search-icon-close');\n        var $searchInput = $('#search-input');\n        var $body = $('body');\n\n        $searchOpen.on('click', function (e) {\n            e.preventDefault();\n            $searchPage.toggleClass('search-active');\n            var prevClasses = $body.attr('class') || '';\n            setTimeout(function () {\n                $body.addClass('no-scroll');\n            }, 400)\n\n            if ($searchPage.hasClass('search-active')) {\n                $searchClose.on('click', function (e) {\n                    e.preventDefault();\n                    $searchPage.removeClass('search-active');\n                    $body.attr('class', prevClasses);  // from closure \n                });\n                $searchInput.focus();\n            }\n        });\n    });\n</script>\n\n\n<!-- Image to hack wechat -->\n<img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\" />\n<!-- Migrate from head to bottom, no longer block render and still work -->\n\n</body>\n\n</html>\n","excerpt":"<h2 id=\"0x00-背景\">0x00 背景</h2>\n","url":"/2022/09/25/App%E7%98%A6%E8%BA%AB%E5%AE%9E%E8%B7%B5%E4%B9%8B%E6%89%B9%E9%87%8F%E8%BD%AC%E6%8D%A2webp/","next":{"id":"/2022/09/26/Github多账号配置SSH","tags":[],"relative_path":"_posts/2022-09-26-Github多账号配置SSH.md","collection":"posts","name":"2022-09-26-Github多账号配置SSH.md","url":"/2022/09/26/Github%E5%A4%9A%E8%B4%A6%E5%8F%B7%E9%85%8D%E7%BD%AESSH/","title":"Github多账号配置SSH","date":"2022-09-26 00:00:00 +0800","categories":[],"path":"_posts/2022-09-26-Github多账号配置SSH.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/home-bg-geek.jpg","slug":"Github多账号配置SSH","ext":".md"},"title":"App瘦身实践之批量转换webp","date":"2022-09-25 00:00:00 +0800","categories":[],"path":"_posts/2022-09-25-App瘦身实践之批量转换webp.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/home-bg-geek.jpg","slug":"App瘦身实践之批量转换webp","ext":".md"},"output":"<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"google-site-verification\" content=\"xBT4GhYoi5qRD5tr338pgPM5OWHHIDR6mNg1a3euekI\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, viewport-fit=cover\">\n    <meta name=\"description\" content=\"与你一起发现更大的世界。\">\n    <meta name=\"keywords\"  content=\"PaysonChen,iOS,流媒体\">\n    <meta name=\"theme-color\" content=\"#000000\">\n    \n    <!-- Open Graph -->\n    <meta property=\"og:title\" content=\"Github多账号配置SSH - PaysonChen的博客 | PaysonChen Blog\">\n    \n    <meta property=\"og:type\" content=\"article\">\n    <meta property=\"og:description\" content=\"0x00 背景\n\">\n    \n    \n    <meta property=\"article:published_time\" content=\"2022-09-26T00:00:00Z\">\n    \n    \n    <meta property=\"article:author\" content=\"PaysonChen\">\n    \n    \n    \n    <meta property=\"og:image\" content=\"http://localhost:4000\">\n    <meta property=\"og:url\" content=\"http://localhost:4000/2022/09/26/Github%E5%A4%9A%E8%B4%A6%E5%8F%B7%E9%85%8D%E7%BD%AESSH/\">\n    <meta property=\"og:site_name\" content=\"PaysonChen的博客 | PaysonChen Blog\">\n    \n    <title>Github多账号配置SSH - PaysonChen的博客 | PaysonChen Blog</title>\n\n    <!-- Web App Manifest -->\n    <link rel=\"manifest\" href=\"/pwa/manifest.json\">\n\n    <!-- Favicon -->\n    <link rel=\"shortcut icon\" href=\"/img/favicon.ico\">\n    \n    <!-- Canonical URL -->\n    <link rel=\"canonical\" href=\"http://localhost:4000/2022/09/26/Github%E5%A4%9A%E8%B4%A6%E5%8F%B7%E9%85%8D%E7%BD%AESSH/\">\n\n    <!-- Bootstrap Core CSS -->\n    <link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\">\n\n    <!-- Custom CSS -->\n    <link rel=\"stylesheet\" href=\"/css/hux-blog.min.css\">\n\n    <!-- Custom Fonts -->\n    <!-- <link href=\"http://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\"> -->\n    <!-- Hux change font-awesome CDN to qiniu -->\n    <link href=\"//cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\">\n\n\n    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->\n    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->\n    <!--[if lt IE 9]>\n        <script src=\"https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js\"></script>\n        <script src=\"https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js\"></script>\n    <![endif]-->\n\n    <!-- ga & ba script hoook -->\n    <script></script>\n</head>\n\n\n<!-- hack iOS CSS :active style -->\n<body ontouchstart=\"\">\n\n    <!-- Navigation -->\n\n    <nav class=\"navbar navbar-default navbar-custom navbar-fixed-top\">\n        \n        <div class=\"container-fluid\">\n            <!-- Brand and toggle get grouped for better mobile display -->\n            <div class=\"navbar-header page-scroll\">\n                <button type=\"button\" class=\"navbar-toggle\">\n                    <span class=\"sr-only\">Toggle navigation</span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                </button>\n                <a class=\"navbar-brand\" href=\"/\">PaysonChen Blog</a>\n            </div>\n\n            <!-- Collect the nav links, forms, and other content for toggling -->\n            <div id=\"huxblog_navbar\">\n                <div class=\"navbar-collapse\">\n                    <ul class=\"nav navbar-nav navbar-right\">\n                        <li>\n                            <a href=\"/\">Home</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        <li>\n                            <a href=\"/about/\">About</a>\n                        </li>\n                        \n                        \n                        \n                        <li>\n                            <a href=\"/archive/\">Archive</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        <li class=\"search-icon\">\n                            <a href=\"javascript:void(0)\">\n                                <i class=\"fa fa-search\"></i>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n            <!-- /.navbar-collapse -->\n        </div>\n        <!-- /.container -->\n    </nav>\n\n    <script>\n        // Drop Bootstarp low-performance Navbar\n        // Use customize navbar with high-quality material design animation\n        // in high-perf jank-free CSS3 implementation\n        var $body = document.body;\n        var $toggle = document.querySelector('.navbar-toggle');\n        var $navbar = document.querySelector('#huxblog_navbar');\n        var $collapse = document.querySelector('.navbar-collapse');\n\n        var __HuxNav__ = {\n            close: function () {\n                $navbar.className = \" \";\n                // wait until animation end.\n                setTimeout(function () {\n                    // prevent frequently toggle\n                    if ($navbar.className.indexOf('in') < 0) {\n                        $collapse.style.height = \"0px\"\n                    }\n                }, 400)\n            },\n            open: function () {\n                $collapse.style.height = \"auto\"\n                $navbar.className += \" in\";\n            }\n        }\n\n        // Bind Event\n        $toggle.addEventListener('click', function (e) {\n            if ($navbar.className.indexOf('in') > 0) {\n                __HuxNav__.close()\n            } else {\n                __HuxNav__.open()\n            }\n        })\n\n        /**\n         * Since Fastclick is used to delegate 'touchstart' globally\n         * to hack 300ms delay in iOS by performing a fake 'click',\n         * Using 'e.stopPropagation' to stop 'touchstart' event from \n         * $toggle/$collapse will break global delegation.\n         * \n         * Instead, we use a 'e.target' filter to prevent handler\n         * added to document close HuxNav.  \n         *\n         * Also, we use 'click' instead of 'touchstart' as compromise\n         */\n        document.addEventListener('click', function (e) {\n            if (e.target == $toggle) return;\n            if (e.target.className == 'icon-bar') return;\n            __HuxNav__.close();\n        })\n    </script>\n    <!-- Search -->\n<div class=\"search-page\">\n  <div class=\"search-icon-close-container\">\n    <span class=\"search-icon-close\">\n      <i class=\"fa fa-chevron-down\"></i>\n    </span>\n  </div>\n  <div class=\"search-main container\">\n    <div class=\"row\">\n      <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n        <form></form>\n        <input type=\"text\" id=\"search-input\" placeholder=\"$ grep...\">\n        </form>\n        <div id=\"search-results\" class=\"mini-post-list\"></div>\n      </div>\n    </div>\n  </div>\n</div>\n\n    <!-- Image to hack wechat -->\n<!-- <img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\"> -->\n<!-- <img src=\"/img/home-bg-geek.jpg\" width=\"0\" height=\"0\"> -->\n\n<!-- Post Header -->\n\n\n\n<style type=\"text/css\">\n    header.intro-header{\n        position: relative;\n        background-image: url('/img/home-bg-geek.jpg');\n        background: ;\n    }\n\n    \n</style>\n\n<header class=\"intro-header\" >\n\n    <div class=\"header-mask\"></div>\n    \n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <div class=\"post-heading\">\n                    <div class=\"tags\">\n                        \n                    </div>\n                    <h1>Github多账号配置SSH</h1>\n                    \n                    <h2 class=\"subheading\"></h2>\n                    <span class=\"meta\">Posted by PaysonChen on September 26, 2022</span>\n                </div>\n            </div>\n        </div>\n    </div>\n</header>\n\n\n\n\n\n\n<!-- Post Content -->\n<article>\n    <div class=\"container\">\n        <div class=\"row\">\n\n    <!-- Post Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                post-container\">\n\n                <!-- Multi-Lingual -->\n                \n\n\t\t\t\t<h2 id=\"0x00-背景\">0x00 背景</h2>\n\n<p>​\t有时候需要多个github的账号，比如Github Page，如果有需要开多个可能就需要同时管理多个github账号</p>\n\n<h2 id=\"0x01-实践\">0x01 实践</h2>\n\n<p>​\t在ssh管理上使用常规的config配置文件:</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n</pre></td><td class=\"rouge-code\"><pre># github2\nHost XXX.github.com\nPort 22\nUser XXX\nHostName github.com\nPreferredAuthentications publickey\nIdentityFile ~/.ssh/id_rsa_github_XXX\n\n# github \nHost YYY.github.com\nPort 22\nUser YYY\nHostName github.com\nPreferredAuthentications publickey\nIdentityFile ~/.ssh/id_rsa_github_YYY\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>一开始还可以用</p>\n\n<h2 id=\"0x02-问题\">0x02 问题</h2>\n\n<p>过了一段时间想继续使用，发现出问题了</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n</pre></td><td class=\"rouge-code\"><pre>git clone git@github.com:nickname/web.git \n\n\nCloning into 'XXX.github.io'...\ngit@github.com: Permission denied (publickey).\nfatal: Could not read from remote repository.\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h2 id=\"0x03-解决\">0x03 解决</h2>\n\n<p>clone时 改为 git@other.github.com:nickname/web.git 即可</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>git@other.github.com:nickname/web.git \n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h2 id=\"0x04-其他问题\">0x04 其他问题</h2>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n</pre></td><td class=\"rouge-code\"><pre>Cloning into 'yyy'...\n/Users/xxxx/.ssh/config line 21: Bad key types 'publickey'.\n/Users/xxxx/.ssh/config: terminating, 1 bad configuration options\nfatal: Could not read from remote repository.\n\nPlease make sure you have the correct access rights\nand the repository exists.\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>此时表示 publickey 不符合这个仓库的加密类型尝试改成</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n</pre></td><td class=\"rouge-code\"><pre>PubkeyAcceptedAlgorithms publickey\n=&gt;\nPubkeyAcceptedAlgorithms +ssh-rsa\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n\n\n                <hr style=\"visibility: hidden;\">\n                <ul class=\"pager\">\n                    \n                    <li class=\"previous\">\n                        <a href=\"/2022/09/25/App%E7%98%A6%E8%BA%AB%E5%AE%9E%E8%B7%B5%E4%B9%8B%E6%89%B9%E9%87%8F%E8%BD%AC%E6%8D%A2webp/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"App瘦身实践之批量转换webp\">\n                        Previous<br>\n                        <span>App瘦身实践之批量转换webp</span>\n                        </a>\n                    </li>\n                    \n                    \n                    <li class=\"next\">\n                        <a href=\"/2023/07/14/iOS%E7%BB%84%E4%BB%B6%E5%8C%96%E5%AE%9E%E8%B7%B5%E4%B8%80_%E5%BA%8F%E8%A8%80/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"iOS组件化实践一：序言\">\n                        Next<br>\n                        <span>iOS组件化实践一：序言</span>\n                        </a>\n                    </li>\n                    \n                </ul>\n                <hr style=\"visibility: hidden;\">\n\n                \n                <!-- disqus 评论框 start -->\n                <div class=\"comment\">\n                    <div id=\"disqus_thread\" class=\"disqus-thread\"></div>\n                </div>\n                <!-- disqus 评论框 end -->\n                \n\n                \n            </div>  \n\n    <!-- Side Catalog Container -->\n        \n            <div class=\"\n                col-lg-2 col-lg-offset-0\n                visible-lg-block\n                sidebar-container\n                catalog-container\">\n                <div class=\"side-catalog\">\n                    <hr class=\"hidden-sm hidden-xs\">\n                    <h5>\n                        <a class=\"catalog-toggle\" href=\"#\">CATALOG</a>\n                    </h5>\n                    <ul class=\"catalog-body\"></ul>\n                </div>\n            </div>\n        \n\n    <!-- Sidebar Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                sidebar-container\">\n\n                <!-- Featured Tags -->\n                \n\n\n<section>\n    \n        <hr class=\"hidden-sm hidden-xs\">\n    \n    <h5><a href=\"/archive/\">FEATURED TAGS</a></h5>\n    <div class=\"tags\">\n        \n        \n        \n        \n        \n    </div>\n</section>\n\n\n                <!-- Friends Blog -->\n                \n            </div>\n        </div>\n    </div>\n</article>\n\n<!-- add support for mathjax by voleking-->\n\n\n\n\n\n\n<!-- disqus 公共JS代码 start (一个网页只需插入一次) -->\n<script type=\"text/javascript\">\n    /* * * CONFIGURATION VARIABLES * * */\n    var disqus_shortname = \"Cyp\";\n    var disqus_identifier = \"/2022/09/26/Github多账号配置SSH\";\n    var disqus_url = \"http://localhost:4000/2022/09/26/Github%E5%A4%9A%E8%B4%A6%E5%8F%B7%E9%85%8D%E7%BD%AESSH/\";\n\n    (function() {\n        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;\n        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';\n        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);\n    })();\n</script>\n<!-- disqus 公共JS代码 end -->\n\n\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n      var d = document, t = 'script',\n          o = d.createElement(t),\n          s = d.getElementsByTagName(t)[0];\n      o.src = u;\n      if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n      s.parentNode.insertBefore(o, s);\n    }\n</script>\n<!-- anchor-js, Doc:http://bryanbraun.github.io/anchorjs/ -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/anchor-js/1.1.1/anchor.min.js\",function(){\n        anchors.options = {\n          visible: 'hover',\n          placement: 'right',\n          // icon: '#'\n        };\n        anchors.add().remove('.intro-header h1').remove('.subheading').remove('.sidebar-container h5');\n    })\n</script>\n<style>\n    /* place left on bigger screen */\n    @media all and (min-width: 800px) {\n        .anchorjs-link{\n            position: absolute;\n            left: -0.75em;\n            font-size: 1.1em;\n            margin-top : -0.1em;\n        }\n    }\n</style>\n\n\n\n    <!-- Footer -->\n<footer>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <!-- SNS Link -->\n                \n\n\n<ul class=\"list-inline text-center\">\n\n\n  \n  \n  \n  \n  \n  \n  \n</ul>\n\n                <p class=\"copyright text-muted\">\n                    Copyright &copy; PaysonChen Blog 2024\n                    <br>\n                    <!-- Powered by <a href=\"http://huangxuan.me\">Hux Blog</a> | -->\n                 <!--    <iframe style=\"margin-left: 2px; margin-bottom:-5px;\" frameborder=\"0\" scrolling=\"0\" width=\"100px\"\n                        height=\"20px\"\n                        src=\"https://ghbtns.com/github-btn.html?user=huxpro&repo=huxpro.github.io&type=star&count=true\">\n                    </iframe> -->\n                </p>\n            </div>\n        </div>\n    </div>\n</footer>\n\n<!-- jQuery -->\n<script src=\"/js/jquery.min.js \"></script>\n\n<!-- Bootstrap Core JavaScript -->\n<!-- Currently, only navbar scroll-down effect at desktop still depends on this -->\n<script src=\"/js/bootstrap.min.js \"></script>\n\n<!-- Custom Theme JavaScript -->\n<script src=\"/js/hux-blog.min.js \"></script>\n\n<!-- Simple Jekyll Search -->\n<script src=\"/js/simple-jekyll-search.min.js\"></script>\n\n<!-- Service Worker -->\n\n<script src=\"/js/snackbar.js \"></script>\n<script src=\"/js/sw-registration.js \"></script>\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n        var d = document, t = 'script',\n            o = d.createElement(t),\n            s = d.getElementsByTagName(t)[0];\n        o.src = u;\n        if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n        s.parentNode.insertBefore(o, s);\n    }\n</script>\n\n<!--\n     Because of the native support for backtick-style fenced code blocks\n     right within the Markdown is landed in Github Pages,\n     From V1.6, There is no need for Highlight.js,\n     so Huxblog drops it officially.\n\n     - https://github.com/blog/2100-github-pages-now-faster-and-simpler-with-jekyll-3-0\n     - https://help.github.com/articles/creating-and-highlighting-code-blocks/\n     - https://github.com/jneen/rouge/wiki/list-of-supported-languages-and-lexers\n-->\n<!--\n    <script>\n        async(\"http://cdn.bootcss.com/highlight.js/8.6/highlight.min.js\", function(){\n            hljs.initHighlightingOnLoad();\n        })\n    </script>\n    <link href=\"http://cdn.bootcss.com/highlight.js/8.6/styles/github.min.css\" rel=\"stylesheet\">\n-->\n\n\n\n\n\n\n\n<!--fastClick.js -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/fastclick/1.0.6/fastclick.min.js\", function () {\n        var $nav = document.querySelector(\"nav\");\n        if ($nav) FastClick.attach($nav);\n    })\n</script>\n\n\n<!-- Google Analytics -->\n\n\n\n<!-- Baidu Tongji -->\n\n\n\n<!-- Side Catalog -->\n\n<script type=\"text/javascript\">\n    function generateCatalog(selector) {\n\n        // interop with multilangual \n        if ('' == 'true') {\n            _containerSelector = 'div.post-container.active'\n        } else {\n            _containerSelector = 'div.post-container'\n        }\n\n        // init\n        var P = $(_containerSelector), a, n, t, l, i, c;\n        a = P.find('h1,h2,h3,h4,h5,h6');\n\n        // clean\n        $(selector).html('')\n\n        // appending\n        a.each(function () {\n            n = $(this).prop('tagName').toLowerCase();\n            i = \"#\" + $(this).prop('id');\n            t = $(this).text();\n            c = $('<a href=\"' + i + '\" rel=\"nofollow\">' + t + '</a>');\n            l = $('<li class=\"' + n + '_nav\"></li>').append(c);\n            $(selector).append(l);\n        });\n        return true;\n    }\n\n    generateCatalog(\".catalog-body\");\n\n    // toggle side catalog\n    $(\".catalog-toggle\").click((function (e) {\n        e.preventDefault();\n        $('.side-catalog').toggleClass(\"fold\")\n    }))\n\n    /*\n     * Doc: https://github.com/davist11/jQuery-One-Page-Nav\n     * Fork by Hux to support padding\n     */\n    async(\"/js/jquery.nav.js\", function () {\n        $('.catalog-body').onePageNav({\n            currentClass: \"active\",\n            changeHash: !1,\n            easing: \"swing\",\n            filter: \"\",\n            scrollSpeed: 700,\n            scrollOffset: 0,\n            scrollThreshold: .2,\n            begin: null,\n            end: null,\n            scrollChange: null,\n            padding: 80\n        });\n    });\n</script>\n\n\n\n<!-- Multi-Lingual -->\n\n\n<!-- Simple Jekyll Search -->\n<script>\n    // https://stackoverflow.com/questions/1912501/unescape-html-entities-in-javascript\n    function htmlDecode(input) {\n        var e = document.createElement('textarea');\n        e.innerHTML = input;\n        // handle case of empty input\n        return e.childNodes.length === 0 ? \"\" : e.childNodes[0].nodeValue;\n    }\n\n    SimpleJekyllSearch({\n        searchInput: document.getElementById('search-input'),\n        resultsContainer: document.getElementById('search-results'),\n        json: '/search.json',\n        searchResultTemplate: '<div class=\"post-preview item\"><a href=\"{url}\"><h2 class=\"post-title\">{title}</h2><h3 class=\"post-subtitle\">{subtitle}</h3><hr></a></div>',\n        noResultsText: 'No results',\n        limit: 50,\n        fuzzy: false,\n        // a hack to get escaped subtitle unescaped. for some reason, \n        // post.subtitle w/o escape filter nuke entire search.\n        templateMiddleware: function (prop, value, template) {\n            if (prop === 'subtitle' || prop === 'title') {\n                if (value.indexOf(\"code\")) {\n                    return htmlDecode(value);\n                } else {\n                    return value;\n                }\n            }\n        }\n    });\n\n    $(document).ready(function () {\n        var $searchPage = $('.search-page');\n        var $searchOpen = $('.search-icon');\n        var $searchClose = $('.search-icon-close');\n        var $searchInput = $('#search-input');\n        var $body = $('body');\n\n        $searchOpen.on('click', function (e) {\n            e.preventDefault();\n            $searchPage.toggleClass('search-active');\n            var prevClasses = $body.attr('class') || '';\n            setTimeout(function () {\n                $body.addClass('no-scroll');\n            }, 400)\n\n            if ($searchPage.hasClass('search-active')) {\n                $searchClose.on('click', function (e) {\n                    e.preventDefault();\n                    $searchPage.removeClass('search-active');\n                    $body.attr('class', prevClasses);  // from closure \n                });\n                $searchInput.focus();\n            }\n        });\n    });\n</script>\n\n\n<!-- Image to hack wechat -->\n<img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\" />\n<!-- Migrate from head to bottom, no longer block render and still work -->\n\n</body>\n\n</html>\n","excerpt":"<h2 id=\"0x00-背景\">0x00 背景</h2>\n","url":"/2022/09/26/Github%E5%A4%9A%E8%B4%A6%E5%8F%B7%E9%85%8D%E7%BD%AESSH/","next":{"id":"/2023/07/14/iOS组件化实践一_序言","tags":[],"relative_path":"_posts/2023-07-14-iOS组件化实践一_序言.md","collection":"posts","content":"<h1 id=\"序言\">序言</h1>\n\n<p>过去十几年，国内移动互联网浪潮崛起，移动应用的构建也如雨后春笋，从一开始大约是在2011年业余开发者做一款播放器放到App Store可以产生最多百万月流水<sup>[1]</sup>， 到现在，满目琳琅到App，珍惜手机空间如金，不肯多装一款普通的App的时代，经历过一波又一波的技术革新，自从CocoaPods于2011年9月1日时编译了第一个公开版本<sup>[2]</sup>，开启了iOS项目拥有应用级别的依赖管理器到时代。</p>\n\n<p>在移动互联网领域从蓝海变成红海的过程中，项目构建的初期也慢慢从不拘小节的架构转向组件化架构的演进。</p>\n\n<h2 id=\"1-不拘小节的架构设计\">1. 不拘小节的架构设计</h2>\n\n<p>可以理解为一种为了</p>\n\n<ol>\n  <li>一些厂商快速试错，快速投入市场验证业务模式的可行性</li>\n  <li>一些厂商为了低成本快速交付一些外包项目</li>\n</ol>\n\n<p>上述实践有一个共同点，就是没有考虑到后续的持续维护的成本与代价。</p>\n\n<p>不拘小节的架构通常以如下方式存在：</p>\n\n<p><strong>1.1、初期的iOS项目以Project工程为主，各种从网上摘取</strong></p>\n\n<ol>\n  <li>代码块</li>\n  <li>各种功能类</li>\n  <li>某些开源或者不开源的能力库（以lib或者framework方式集成）</li>\n</ol>\n\n<p>拼接而成，</p>\n\n<p><strong>1.2、在引入CocoaPods之后</strong></p>\n\n<ol>\n  <li>代码块</li>\n  <li>各种功能类</li>\n  <li>某些开源或者不开源的能力库（以lib或者framework方式集成）</li>\n  <li>以CocoaPods的方式集成公有私有的代码库（轮子）</li>\n</ol>\n\n<p>不拘小节的架构一般用于中小型，短时间内交付的产品，上述方式可以做到快速实现以及交付的可视化效果，而可持续性维护则无人关心。</p>\n\n<p>随着一些厂商快速占领市场，以及试错验证可行之后，由于项目到架构随意，参与人员不稳定等因素，加上破窗效应，以及不断形成风气的降本增效的企业诉求，这些团队将会面临维护成本不断攀升的高昂代价。</p>\n\n<h2 id=\"2-组件化架构设计\">2. 组件化架构设计</h2>\n\n<h3 id=\"21-不拘小节的架构设计的现状\">2.1 不拘小节的架构设计的现状</h3>\n\n<p>不拘小节的架构团队会面临什么现状？大致可概括为：</p>\n\n<ol>\n  <li><strong>历史问题挤压多：</strong>代码冗余，诸多历史问题未能及时发现</li>\n  <li><strong>定位修复问题难：</strong>代码混乱，问题定位代码分散，定位成本大，修复不彻底</li>\n  <li><strong>需求开发周期长：</strong>没有清晰规划，导致需求开发重复造轮子，增加了研发成本</li>\n</ol>\n\n<h3 id=\"22-组件化架构设计解决的问题\">2.2 组件化架构设计解决的问题</h3>\n\n<p>不拘小节的架构设计随着时间推移会遇到哪些问题呢？大致可概括为：</p>\n\n<ol>\n  <li><strong>混乱</strong>：代码统一写在一个工程内部，查找定位问题困难</li>\n  <li><strong>冗余</strong>：相同功能的代码实现多套，修复问题不彻底</li>\n  <li><strong>不可复用</strong>：无可复用的模块，多App之间需要重复实现</li>\n</ol>\n\n<h3 id=\"23-组件化架构设计带来的问题\">2.3 组件化架构设计带来的问题</h3>\n\n<p>而组件化架构则可以弥补不拘小节的架构方式的诸多短板，降低项目的持续维护成本与代价，又能做到哪些改进呢？大概可概括为：</p>\n\n<ol>\n  <li><strong>高效解决问题：</strong>代码划分模块，修复问题及迭代维护形成闭环，提升效率</li>\n  <li><strong>清晰代码架构</strong>：清晰的调用链，解决问题漏改，改不全等逃逸到线上的问题</li>\n  <li><strong>可复用的能力</strong>：跨App共建能力，减少维护成本</li>\n</ol>\n\n<h2 id=\"3-组件化周期\">3. 组件化周期</h2>\n\n<p>​\t根据笔者在不同团队（初创团队～BAT一线团队）的观察，常规耗时根据项目大小和团队成员规模以及过程中的需求数量等情况大致为10～100人月/单端不等。笔者前公司是一线大厂，团队规模大，项目大，总共投入5～10人，前后1年6个月完成对现有项目的初步组件化改造，而对于创立之初的创业团队，这个代价往往只需要10%。考虑到成本问题，组件化宜早不宜迟。</p>\n\n<h2 id=\"4-组件化架构设计的思路\">4. 组件化架构设计的思路</h2>\n\n<ol>\n  <li>功能组件的清晰的定义与划分</li>\n  <li>层次分明的基础模块设计，</li>\n  <li>上层的业务模块解偶</li>\n</ol>\n\n<p><img src=\"/img/1-1.png\" alt=\"/img/1-1.png\" /></p>\n","name":"2023-07-14-iOS组件化实践一_序言.md","previous":{"id":"/2022/09/26/Github多账号配置SSH","tags":[],"relative_path":"_posts/2022-09-26-Github多账号配置SSH.md","collection":"posts","name":"2022-09-26-Github多账号配置SSH.md","url":"/2022/09/26/Github%E5%A4%9A%E8%B4%A6%E5%8F%B7%E9%85%8D%E7%BD%AESSH/","title":"Github多账号配置SSH","date":"2022-09-26 00:00:00 +0800","categories":[],"path":"_posts/2022-09-26-Github多账号配置SSH.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/home-bg-geek.jpg","slug":"Github多账号配置SSH","ext":".md"},"output":"<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"google-site-verification\" content=\"xBT4GhYoi5qRD5tr338pgPM5OWHHIDR6mNg1a3euekI\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, viewport-fit=cover\">\n    <meta name=\"description\" content=\"与你一起发现更大的世界。\">\n    <meta name=\"keywords\"  content=\"PaysonChen,iOS,流媒体\">\n    <meta name=\"theme-color\" content=\"#000000\">\n    \n    <!-- Open Graph -->\n    <meta property=\"og:title\" content=\"iOS组件化实践一：序言 - PaysonChen的博客 | PaysonChen Blog\">\n    \n    <meta property=\"og:type\" content=\"article\">\n    <meta property=\"og:description\" content=\"序言\n\">\n    \n    \n    <meta property=\"article:published_time\" content=\"2023-07-14T00:00:00Z\">\n    \n    \n    <meta property=\"article:author\" content=\"PaysonChen\">\n    \n    \n    \n    <meta property=\"og:image\" content=\"http://localhost:4000\">\n    <meta property=\"og:url\" content=\"http://localhost:4000/2023/07/14/iOS%E7%BB%84%E4%BB%B6%E5%8C%96%E5%AE%9E%E8%B7%B5%E4%B8%80_%E5%BA%8F%E8%A8%80/\">\n    <meta property=\"og:site_name\" content=\"PaysonChen的博客 | PaysonChen Blog\">\n    \n    <title>iOS组件化实践一：序言 - PaysonChen的博客 | PaysonChen Blog</title>\n\n    <!-- Web App Manifest -->\n    <link rel=\"manifest\" href=\"/pwa/manifest.json\">\n\n    <!-- Favicon -->\n    <link rel=\"shortcut icon\" href=\"/img/favicon.ico\">\n    \n    <!-- Canonical URL -->\n    <link rel=\"canonical\" href=\"http://localhost:4000/2023/07/14/iOS%E7%BB%84%E4%BB%B6%E5%8C%96%E5%AE%9E%E8%B7%B5%E4%B8%80_%E5%BA%8F%E8%A8%80/\">\n\n    <!-- Bootstrap Core CSS -->\n    <link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\">\n\n    <!-- Custom CSS -->\n    <link rel=\"stylesheet\" href=\"/css/hux-blog.min.css\">\n\n    <!-- Custom Fonts -->\n    <!-- <link href=\"http://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\"> -->\n    <!-- Hux change font-awesome CDN to qiniu -->\n    <link href=\"//cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\">\n\n\n    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->\n    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->\n    <!--[if lt IE 9]>\n        <script src=\"https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js\"></script>\n        <script src=\"https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js\"></script>\n    <![endif]-->\n\n    <!-- ga & ba script hoook -->\n    <script></script>\n</head>\n\n\n<!-- hack iOS CSS :active style -->\n<body ontouchstart=\"\">\n\n    <!-- Navigation -->\n\n    <nav class=\"navbar navbar-default navbar-custom navbar-fixed-top\">\n        \n        <div class=\"container-fluid\">\n            <!-- Brand and toggle get grouped for better mobile display -->\n            <div class=\"navbar-header page-scroll\">\n                <button type=\"button\" class=\"navbar-toggle\">\n                    <span class=\"sr-only\">Toggle navigation</span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                </button>\n                <a class=\"navbar-brand\" href=\"/\">PaysonChen Blog</a>\n            </div>\n\n            <!-- Collect the nav links, forms, and other content for toggling -->\n            <div id=\"huxblog_navbar\">\n                <div class=\"navbar-collapse\">\n                    <ul class=\"nav navbar-nav navbar-right\">\n                        <li>\n                            <a href=\"/\">Home</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        <li>\n                            <a href=\"/about/\">About</a>\n                        </li>\n                        \n                        \n                        \n                        <li>\n                            <a href=\"/archive/\">Archive</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        <li class=\"search-icon\">\n                            <a href=\"javascript:void(0)\">\n                                <i class=\"fa fa-search\"></i>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n            <!-- /.navbar-collapse -->\n        </div>\n        <!-- /.container -->\n    </nav>\n\n    <script>\n        // Drop Bootstarp low-performance Navbar\n        // Use customize navbar with high-quality material design animation\n        // in high-perf jank-free CSS3 implementation\n        var $body = document.body;\n        var $toggle = document.querySelector('.navbar-toggle');\n        var $navbar = document.querySelector('#huxblog_navbar');\n        var $collapse = document.querySelector('.navbar-collapse');\n\n        var __HuxNav__ = {\n            close: function () {\n                $navbar.className = \" \";\n                // wait until animation end.\n                setTimeout(function () {\n                    // prevent frequently toggle\n                    if ($navbar.className.indexOf('in') < 0) {\n                        $collapse.style.height = \"0px\"\n                    }\n                }, 400)\n            },\n            open: function () {\n                $collapse.style.height = \"auto\"\n                $navbar.className += \" in\";\n            }\n        }\n\n        // Bind Event\n        $toggle.addEventListener('click', function (e) {\n            if ($navbar.className.indexOf('in') > 0) {\n                __HuxNav__.close()\n            } else {\n                __HuxNav__.open()\n            }\n        })\n\n        /**\n         * Since Fastclick is used to delegate 'touchstart' globally\n         * to hack 300ms delay in iOS by performing a fake 'click',\n         * Using 'e.stopPropagation' to stop 'touchstart' event from \n         * $toggle/$collapse will break global delegation.\n         * \n         * Instead, we use a 'e.target' filter to prevent handler\n         * added to document close HuxNav.  \n         *\n         * Also, we use 'click' instead of 'touchstart' as compromise\n         */\n        document.addEventListener('click', function (e) {\n            if (e.target == $toggle) return;\n            if (e.target.className == 'icon-bar') return;\n            __HuxNav__.close();\n        })\n    </script>\n    <!-- Search -->\n<div class=\"search-page\">\n  <div class=\"search-icon-close-container\">\n    <span class=\"search-icon-close\">\n      <i class=\"fa fa-chevron-down\"></i>\n    </span>\n  </div>\n  <div class=\"search-main container\">\n    <div class=\"row\">\n      <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n        <form></form>\n        <input type=\"text\" id=\"search-input\" placeholder=\"$ grep...\">\n        </form>\n        <div id=\"search-results\" class=\"mini-post-list\"></div>\n      </div>\n    </div>\n  </div>\n</div>\n\n    <!-- Image to hack wechat -->\n<!-- <img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\"> -->\n<!-- <img src=\"/img/home-bg-geek.jpg\" width=\"0\" height=\"0\"> -->\n\n<!-- Post Header -->\n\n\n\n<style type=\"text/css\">\n    header.intro-header{\n        position: relative;\n        background-image: url('/img/home-bg-geek.jpg');\n        background: ;\n    }\n\n    \n</style>\n\n<header class=\"intro-header\" >\n\n    <div class=\"header-mask\"></div>\n    \n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <div class=\"post-heading\">\n                    <div class=\"tags\">\n                        \n                    </div>\n                    <h1>iOS组件化实践一：序言</h1>\n                    \n                    <h2 class=\"subheading\"></h2>\n                    <span class=\"meta\">Posted by PaysonChen on July 14, 2023</span>\n                </div>\n            </div>\n        </div>\n    </div>\n</header>\n\n\n\n\n\n\n<!-- Post Content -->\n<article>\n    <div class=\"container\">\n        <div class=\"row\">\n\n    <!-- Post Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                post-container\">\n\n                <!-- Multi-Lingual -->\n                \n\n\t\t\t\t<h1 id=\"序言\">序言</h1>\n\n<p>过去十几年，国内移动互联网浪潮崛起，移动应用的构建也如雨后春笋，从一开始大约是在2011年业余开发者做一款播放器放到App Store可以产生最多百万月流水<sup>[1]</sup>， 到现在，满目琳琅到App，珍惜手机空间如金，不肯多装一款普通的App的时代，经历过一波又一波的技术革新，自从CocoaPods于2011年9月1日时编译了第一个公开版本<sup>[2]</sup>，开启了iOS项目拥有应用级别的依赖管理器到时代。</p>\n\n<p>在移动互联网领域从蓝海变成红海的过程中，项目构建的初期也慢慢从不拘小节的架构转向组件化架构的演进。</p>\n\n<h2 id=\"1-不拘小节的架构设计\">1. 不拘小节的架构设计</h2>\n\n<p>可以理解为一种为了</p>\n\n<ol>\n  <li>一些厂商快速试错，快速投入市场验证业务模式的可行性</li>\n  <li>一些厂商为了低成本快速交付一些外包项目</li>\n</ol>\n\n<p>上述实践有一个共同点，就是没有考虑到后续的持续维护的成本与代价。</p>\n\n<p>不拘小节的架构通常以如下方式存在：</p>\n\n<p><strong>1.1、初期的iOS项目以Project工程为主，各种从网上摘取</strong></p>\n\n<ol>\n  <li>代码块</li>\n  <li>各种功能类</li>\n  <li>某些开源或者不开源的能力库（以lib或者framework方式集成）</li>\n</ol>\n\n<p>拼接而成，</p>\n\n<p><strong>1.2、在引入CocoaPods之后</strong></p>\n\n<ol>\n  <li>代码块</li>\n  <li>各种功能类</li>\n  <li>某些开源或者不开源的能力库（以lib或者framework方式集成）</li>\n  <li>以CocoaPods的方式集成公有私有的代码库（轮子）</li>\n</ol>\n\n<p>不拘小节的架构一般用于中小型，短时间内交付的产品，上述方式可以做到快速实现以及交付的可视化效果，而可持续性维护则无人关心。</p>\n\n<p>随着一些厂商快速占领市场，以及试错验证可行之后，由于项目到架构随意，参与人员不稳定等因素，加上破窗效应，以及不断形成风气的降本增效的企业诉求，这些团队将会面临维护成本不断攀升的高昂代价。</p>\n\n<h2 id=\"2-组件化架构设计\">2. 组件化架构设计</h2>\n\n<h3 id=\"21-不拘小节的架构设计的现状\">2.1 不拘小节的架构设计的现状</h3>\n\n<p>不拘小节的架构团队会面临什么现状？大致可概括为：</p>\n\n<ol>\n  <li><strong>历史问题挤压多：</strong>代码冗余，诸多历史问题未能及时发现</li>\n  <li><strong>定位修复问题难：</strong>代码混乱，问题定位代码分散，定位成本大，修复不彻底</li>\n  <li><strong>需求开发周期长：</strong>没有清晰规划，导致需求开发重复造轮子，增加了研发成本</li>\n</ol>\n\n<h3 id=\"22-组件化架构设计解决的问题\">2.2 组件化架构设计解决的问题</h3>\n\n<p>不拘小节的架构设计随着时间推移会遇到哪些问题呢？大致可概括为：</p>\n\n<ol>\n  <li><strong>混乱</strong>：代码统一写在一个工程内部，查找定位问题困难</li>\n  <li><strong>冗余</strong>：相同功能的代码实现多套，修复问题不彻底</li>\n  <li><strong>不可复用</strong>：无可复用的模块，多App之间需要重复实现</li>\n</ol>\n\n<h3 id=\"23-组件化架构设计带来的问题\">2.3 组件化架构设计带来的问题</h3>\n\n<p>而组件化架构则可以弥补不拘小节的架构方式的诸多短板，降低项目的持续维护成本与代价，又能做到哪些改进呢？大概可概括为：</p>\n\n<ol>\n  <li><strong>高效解决问题：</strong>代码划分模块，修复问题及迭代维护形成闭环，提升效率</li>\n  <li><strong>清晰代码架构</strong>：清晰的调用链，解决问题漏改，改不全等逃逸到线上的问题</li>\n  <li><strong>可复用的能力</strong>：跨App共建能力，减少维护成本</li>\n</ol>\n\n<h2 id=\"3-组件化周期\">3. 组件化周期</h2>\n\n<p>​\t根据笔者在不同团队（初创团队～BAT一线团队）的观察，常规耗时根据项目大小和团队成员规模以及过程中的需求数量等情况大致为10～100人月/单端不等。笔者前公司是一线大厂，团队规模大，项目大，总共投入5～10人，前后1年6个月完成对现有项目的初步组件化改造，而对于创立之初的创业团队，这个代价往往只需要10%。考虑到成本问题，组件化宜早不宜迟。</p>\n\n<h2 id=\"4-组件化架构设计的思路\">4. 组件化架构设计的思路</h2>\n\n<ol>\n  <li>功能组件的清晰的定义与划分</li>\n  <li>层次分明的基础模块设计，</li>\n  <li>上层的业务模块解偶</li>\n</ol>\n\n<p><img src=\"/img/1-1.png\" alt=\"/img/1-1.png\" /></p>\n\n\n                <hr style=\"visibility: hidden;\">\n                <ul class=\"pager\">\n                    \n                    <li class=\"previous\">\n                        <a href=\"/2022/09/26/Github%E5%A4%9A%E8%B4%A6%E5%8F%B7%E9%85%8D%E7%BD%AESSH/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Github多账号配置SSH\">\n                        Previous<br>\n                        <span>Github多账号配置SSH</span>\n                        </a>\n                    </li>\n                    \n                    \n                    <li class=\"next\">\n                        <a href=\"/2023/07/20/iOS%E7%BB%84%E4%BB%B6%E5%8C%96%E5%AE%9E%E8%B7%B5%E4%BA%8C-%E5%AE%9E%E8%B7%B5%E8%BF%87%E7%A8%8B%E7%A2%B0%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"iOS组件化实践二：实践过程碰到的问题\">\n                        Next<br>\n                        <span>iOS组件化实践二：实践过程碰到的问题</span>\n                        </a>\n                    </li>\n                    \n                </ul>\n                <hr style=\"visibility: hidden;\">\n\n                \n                <!-- disqus 评论框 start -->\n                <div class=\"comment\">\n                    <div id=\"disqus_thread\" class=\"disqus-thread\"></div>\n                </div>\n                <!-- disqus 评论框 end -->\n                \n\n                \n            </div>  \n\n    <!-- Side Catalog Container -->\n        \n            <div class=\"\n                col-lg-2 col-lg-offset-0\n                visible-lg-block\n                sidebar-container\n                catalog-container\">\n                <div class=\"side-catalog\">\n                    <hr class=\"hidden-sm hidden-xs\">\n                    <h5>\n                        <a class=\"catalog-toggle\" href=\"#\">CATALOG</a>\n                    </h5>\n                    <ul class=\"catalog-body\"></ul>\n                </div>\n            </div>\n        \n\n    <!-- Sidebar Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                sidebar-container\">\n\n                <!-- Featured Tags -->\n                \n\n\n<section>\n    \n        <hr class=\"hidden-sm hidden-xs\">\n    \n    <h5><a href=\"/archive/\">FEATURED TAGS</a></h5>\n    <div class=\"tags\">\n        \n        \n        \n        \n        \n    </div>\n</section>\n\n\n                <!-- Friends Blog -->\n                \n            </div>\n        </div>\n    </div>\n</article>\n\n<!-- add support for mathjax by voleking-->\n\n\n\n\n\n\n<!-- disqus 公共JS代码 start (一个网页只需插入一次) -->\n<script type=\"text/javascript\">\n    /* * * CONFIGURATION VARIABLES * * */\n    var disqus_shortname = \"Cyp\";\n    var disqus_identifier = \"/2023/07/14/iOS组件化实践一_序言\";\n    var disqus_url = \"http://localhost:4000/2023/07/14/iOS%E7%BB%84%E4%BB%B6%E5%8C%96%E5%AE%9E%E8%B7%B5%E4%B8%80_%E5%BA%8F%E8%A8%80/\";\n\n    (function() {\n        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;\n        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';\n        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);\n    })();\n</script>\n<!-- disqus 公共JS代码 end -->\n\n\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n      var d = document, t = 'script',\n          o = d.createElement(t),\n          s = d.getElementsByTagName(t)[0];\n      o.src = u;\n      if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n      s.parentNode.insertBefore(o, s);\n    }\n</script>\n<!-- anchor-js, Doc:http://bryanbraun.github.io/anchorjs/ -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/anchor-js/1.1.1/anchor.min.js\",function(){\n        anchors.options = {\n          visible: 'hover',\n          placement: 'right',\n          // icon: '#'\n        };\n        anchors.add().remove('.intro-header h1').remove('.subheading').remove('.sidebar-container h5');\n    })\n</script>\n<style>\n    /* place left on bigger screen */\n    @media all and (min-width: 800px) {\n        .anchorjs-link{\n            position: absolute;\n            left: -0.75em;\n            font-size: 1.1em;\n            margin-top : -0.1em;\n        }\n    }\n</style>\n\n\n\n    <!-- Footer -->\n<footer>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <!-- SNS Link -->\n                \n\n\n<ul class=\"list-inline text-center\">\n\n\n  \n  \n  \n  \n  \n  \n  \n</ul>\n\n                <p class=\"copyright text-muted\">\n                    Copyright &copy; PaysonChen Blog 2024\n                    <br>\n                    <!-- Powered by <a href=\"http://huangxuan.me\">Hux Blog</a> | -->\n                 <!--    <iframe style=\"margin-left: 2px; margin-bottom:-5px;\" frameborder=\"0\" scrolling=\"0\" width=\"100px\"\n                        height=\"20px\"\n                        src=\"https://ghbtns.com/github-btn.html?user=huxpro&repo=huxpro.github.io&type=star&count=true\">\n                    </iframe> -->\n                </p>\n            </div>\n        </div>\n    </div>\n</footer>\n\n<!-- jQuery -->\n<script src=\"/js/jquery.min.js \"></script>\n\n<!-- Bootstrap Core JavaScript -->\n<!-- Currently, only navbar scroll-down effect at desktop still depends on this -->\n<script src=\"/js/bootstrap.min.js \"></script>\n\n<!-- Custom Theme JavaScript -->\n<script src=\"/js/hux-blog.min.js \"></script>\n\n<!-- Simple Jekyll Search -->\n<script src=\"/js/simple-jekyll-search.min.js\"></script>\n\n<!-- Service Worker -->\n\n<script src=\"/js/snackbar.js \"></script>\n<script src=\"/js/sw-registration.js \"></script>\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n        var d = document, t = 'script',\n            o = d.createElement(t),\n            s = d.getElementsByTagName(t)[0];\n        o.src = u;\n        if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n        s.parentNode.insertBefore(o, s);\n    }\n</script>\n\n<!--\n     Because of the native support for backtick-style fenced code blocks\n     right within the Markdown is landed in Github Pages,\n     From V1.6, There is no need for Highlight.js,\n     so Huxblog drops it officially.\n\n     - https://github.com/blog/2100-github-pages-now-faster-and-simpler-with-jekyll-3-0\n     - https://help.github.com/articles/creating-and-highlighting-code-blocks/\n     - https://github.com/jneen/rouge/wiki/list-of-supported-languages-and-lexers\n-->\n<!--\n    <script>\n        async(\"http://cdn.bootcss.com/highlight.js/8.6/highlight.min.js\", function(){\n            hljs.initHighlightingOnLoad();\n        })\n    </script>\n    <link href=\"http://cdn.bootcss.com/highlight.js/8.6/styles/github.min.css\" rel=\"stylesheet\">\n-->\n\n\n\n\n\n\n\n<!--fastClick.js -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/fastclick/1.0.6/fastclick.min.js\", function () {\n        var $nav = document.querySelector(\"nav\");\n        if ($nav) FastClick.attach($nav);\n    })\n</script>\n\n\n<!-- Google Analytics -->\n\n\n\n<!-- Baidu Tongji -->\n\n\n\n<!-- Side Catalog -->\n\n<script type=\"text/javascript\">\n    function generateCatalog(selector) {\n\n        // interop with multilangual \n        if ('' == 'true') {\n            _containerSelector = 'div.post-container.active'\n        } else {\n            _containerSelector = 'div.post-container'\n        }\n\n        // init\n        var P = $(_containerSelector), a, n, t, l, i, c;\n        a = P.find('h1,h2,h3,h4,h5,h6');\n\n        // clean\n        $(selector).html('')\n\n        // appending\n        a.each(function () {\n            n = $(this).prop('tagName').toLowerCase();\n            i = \"#\" + $(this).prop('id');\n            t = $(this).text();\n            c = $('<a href=\"' + i + '\" rel=\"nofollow\">' + t + '</a>');\n            l = $('<li class=\"' + n + '_nav\"></li>').append(c);\n            $(selector).append(l);\n        });\n        return true;\n    }\n\n    generateCatalog(\".catalog-body\");\n\n    // toggle side catalog\n    $(\".catalog-toggle\").click((function (e) {\n        e.preventDefault();\n        $('.side-catalog').toggleClass(\"fold\")\n    }))\n\n    /*\n     * Doc: https://github.com/davist11/jQuery-One-Page-Nav\n     * Fork by Hux to support padding\n     */\n    async(\"/js/jquery.nav.js\", function () {\n        $('.catalog-body').onePageNav({\n            currentClass: \"active\",\n            changeHash: !1,\n            easing: \"swing\",\n            filter: \"\",\n            scrollSpeed: 700,\n            scrollOffset: 0,\n            scrollThreshold: .2,\n            begin: null,\n            end: null,\n            scrollChange: null,\n            padding: 80\n        });\n    });\n</script>\n\n\n\n<!-- Multi-Lingual -->\n\n\n<!-- Simple Jekyll Search -->\n<script>\n    // https://stackoverflow.com/questions/1912501/unescape-html-entities-in-javascript\n    function htmlDecode(input) {\n        var e = document.createElement('textarea');\n        e.innerHTML = input;\n        // handle case of empty input\n        return e.childNodes.length === 0 ? \"\" : e.childNodes[0].nodeValue;\n    }\n\n    SimpleJekyllSearch({\n        searchInput: document.getElementById('search-input'),\n        resultsContainer: document.getElementById('search-results'),\n        json: '/search.json',\n        searchResultTemplate: '<div class=\"post-preview item\"><a href=\"{url}\"><h2 class=\"post-title\">{title}</h2><h3 class=\"post-subtitle\">{subtitle}</h3><hr></a></div>',\n        noResultsText: 'No results',\n        limit: 50,\n        fuzzy: false,\n        // a hack to get escaped subtitle unescaped. for some reason, \n        // post.subtitle w/o escape filter nuke entire search.\n        templateMiddleware: function (prop, value, template) {\n            if (prop === 'subtitle' || prop === 'title') {\n                if (value.indexOf(\"code\")) {\n                    return htmlDecode(value);\n                } else {\n                    return value;\n                }\n            }\n        }\n    });\n\n    $(document).ready(function () {\n        var $searchPage = $('.search-page');\n        var $searchOpen = $('.search-icon');\n        var $searchClose = $('.search-icon-close');\n        var $searchInput = $('#search-input');\n        var $body = $('body');\n\n        $searchOpen.on('click', function (e) {\n            e.preventDefault();\n            $searchPage.toggleClass('search-active');\n            var prevClasses = $body.attr('class') || '';\n            setTimeout(function () {\n                $body.addClass('no-scroll');\n            }, 400)\n\n            if ($searchPage.hasClass('search-active')) {\n                $searchClose.on('click', function (e) {\n                    e.preventDefault();\n                    $searchPage.removeClass('search-active');\n                    $body.attr('class', prevClasses);  // from closure \n                });\n                $searchInput.focus();\n            }\n        });\n    });\n</script>\n\n\n<!-- Image to hack wechat -->\n<img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\" />\n<!-- Migrate from head to bottom, no longer block render and still work -->\n\n</body>\n\n</html>\n","excerpt":"<h1 id=\"序言\">序言</h1>\n","url":"/2023/07/14/iOS%E7%BB%84%E4%BB%B6%E5%8C%96%E5%AE%9E%E8%B7%B5%E4%B8%80_%E5%BA%8F%E8%A8%80/","next":{"id":"/2023/07/20/iOS组件化实践二-实践过程碰到的问题","tags":[],"relative_path":"_posts/2023-07-20-iOS组件化实践二-实践过程碰到的问题.md","collection":"posts","name":"2023-07-20-iOS组件化实践二-实践过程碰到的问题.md","url":"/2023/07/20/iOS%E7%BB%84%E4%BB%B6%E5%8C%96%E5%AE%9E%E8%B7%B5%E4%BA%8C-%E5%AE%9E%E8%B7%B5%E8%BF%87%E7%A8%8B%E7%A2%B0%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/","title":"iOS组件化实践二：实践过程碰到的问题","date":"2023-07-20 00:00:00 +0800","categories":[],"path":"_posts/2023-07-20-iOS组件化实践二-实践过程碰到的问题.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/home-bg-geek.jpg","slug":"iOS组件化实践二-实践过程碰到的问题","ext":".md"},"title":"iOS组件化实践一：序言","date":"2023-07-14 00:00:00 +0800","categories":[],"path":"_posts/2023-07-14-iOS组件化实践一_序言.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/home-bg-geek.jpg","slug":"iOS组件化实践一_序言","ext":".md"},"title":"Github多账号配置SSH","date":"2022-09-26 00:00:00 +0800","categories":[],"path":"_posts/2022-09-26-Github多账号配置SSH.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/home-bg-geek.jpg","slug":"Github多账号配置SSH","ext":".md"},{"id":"/2022/09/25/App瘦身实践之批量转换webp","tags":[],"relative_path":"_posts/2022-09-25-App瘦身实践之批量转换webp.md","collection":"posts","content":"<h2 id=\"0x00-背景\">0x00 背景</h2>\n\n<p>​\tWebP 在各大互联网公司已经使用得很多了。WebP 的优势体现在它具有更优的图像数据压缩算法，能带来更小的图片体积，而且拥有肉眼识别无差异的图像质量；同时具备了无损和有损的压缩模式、Alpha 透明以及动画的特性，在 JPEG 和 PNG 上的转化效果都相当优秀、稳定和统一。</p>\n\n<h2 id=\"0x01-优势对比\">0x01 优势对比</h2>\n\n<ul>\n  <li>PNG 转 WebP 的压缩率要高于 PNG 原图压缩率，同样支持有损与无损压缩</li>\n  <li>转换后的 WebP 体积大幅减少，图片质量也得到保障（同时肉眼几乎无法看出差异）</li>\n  <li>转换后的 WebP 支持 Alpha 透明和 24-bit 颜色数，不存在 PNG8 色彩不够丰富和在浏览器中可能会出现毛边的问题</li>\n</ul>\n\n<h2 id=\"0x02-实践\">0x02 实践</h2>\n\n<p>一般设计给资源会有压缩@2x,@3x压缩包，于是可以把这些压缩包批量转换一下：</p>\n\n<p>写一个脚本：transfer2webp.sh</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n</pre></td><td class=\"rouge-code\"><pre><span class=\"k\">for </span>file <span class=\"k\">in</span> ./<span class=\"k\">*</span>\n<span class=\"k\">do\n    </span><span class=\"nv\">suffix</span><span class=\"o\">=</span>zip\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">file</span><span class=\"p\">##*.</span><span class=\"k\">}</span><span class=\"s2\">\"</span> <span class=\"o\">=</span> <span class=\"s2\">\"</span><span class=\"nv\">$suffix</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">echo</span> <span class=\"nv\">$file</span> <span class=\"s1\">'zip'</span>\n        <span class=\"nb\">dir</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">file</span><span class=\"p\">%.*</span><span class=\"k\">}</span>\n        unar <span class=\"nt\">-e</span> GBK <span class=\"nv\">$file</span> <span class=\"c\">#没有unar环境可以安装下https://blog.csdn.net/dawn_after_dark/article/details/83504421</span>\n        <span class=\"k\">for </span>subfile <span class=\"k\">in</span> ./<span class=\"k\">${</span><span class=\"nv\">dir</span><span class=\"k\">}</span>/<span class=\"k\">*</span>\n        <span class=\"k\">do\n            </span>cwebp <span class=\"nt\">-q</span> 90 <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">subfile</span><span class=\"k\">}</span><span class=\"s2\">\"</span> <span class=\"nt\">-o</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">subfile</span><span class=\"p\">%.*</span><span class=\"k\">}</span><span class=\"s2\">.webp\"</span>\n        <span class=\"k\">done\n\n    elif </span><span class=\"nb\">test</span> <span class=\"nt\">-d</span> <span class=\"nv\">$file</span> <span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">echo</span> <span class=\"nv\">$file</span> <span class=\"s1\">'fold'</span>\n    <span class=\"k\">else\n        </span><span class=\"nb\">echo</span> <span class=\"nv\">$file</span> <span class=\"s1\">'other'</span>\n    <span class=\"k\">fi\ndone</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>备注：之所以选unar而非unzip，是因为很多设计资源打包时，很可能带中文，在一开始的方案中使用了unzip会有乱码问题，为了兼容中文压缩包选用unar</p>\n\n","name":"2022-09-25-App瘦身实践之批量转换webp.md","previous":{"id":"/2022/01/19/iOS-OpenType","tags":[],"relative_path":"_posts/2022-01-19-iOS-OpenType.md","collection":"posts","content":"<h2 id=\"0x00-背景\">0x00 背景</h2>\n\n<p>​\tK歌音频上传工具1.0需求调研，在探索上传的几种方式当中，涉及到引导用户从QQ微信打开，并提供能力。这就牵涉到从其他应用讲音视频文件导入（打开/传入）到K歌的需要。</p>\n\n<h2 id=\"0x01-技术方案\">0x01 技术方案</h2>\n\n<p>​\t通过设置Xcode Document Types，可以设置项目可接收的文件类型，附带一份：<a href=\"https://developer.apple.com/library/archive/documentation/Miscellaneous/Reference/UTIRef/Articles/System-DeclaredUniformTypeIdentifiers.html#//apple_ref/doc/uid/TP40009259-SW1\">官方提供的文件类型列表</a>。</p>\n\n<p>​\t<img src=\"/img/2022-01-19-iOS-OpenType/doctypes.png\" alt=\"\" /></p>\n\n<h2 id=\"0x02-项目实现\">0x02 项目实现</h2>\n\n<p>当前iOS应用的生命周期管理有以下两种方式</p>\n\n<ul>\n  <li>\n    <h5 id=\"uiapplicationdelegate\">UIApplicationDelegate</h5>\n\n    <p>iOS13之前，Appdelegate的职责全权处理App生命周期和UI生命周期：</p>\n\n    <p><img src=\"/img/2022-01-19-iOS-OpenType/appdelegate.jpg\" alt=\"\" /></p>\n\n    <p>在不需要多Window场景下，在AppDelegate中实现</p>\n\n    <div class=\"language-objc highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n</pre></td><td class=\"rouge-code\"><pre><span class=\"k\">-</span><span class=\"p\">(</span><span class=\"n\">BOOL</span><span class=\"p\">)</span><span class=\"nf\">application</span><span class=\"p\">:(</span><span class=\"n\">UIApplication</span> <span class=\"o\">*</span><span class=\"p\">)</span><span class=\"nv\">app</span> <span class=\"nf\">openURL</span><span class=\"p\">:(</span><span class=\"n\">NSURL</span> <span class=\"o\">*</span><span class=\"p\">)</span><span class=\"nv\">url</span> <span class=\"nf\">options</span><span class=\"p\">:(</span><span class=\"n\">NSDictionary</span><span class=\"o\">&lt;</span><span class=\"n\">UIApplicationOpenURLOptionsKey</span><span class=\"p\">,</span><span class=\"n\">id</span><span class=\"o\">&gt;</span> <span class=\"o\">*</span><span class=\"p\">)</span><span class=\"nv\">options</span> <span class=\"p\">{</span>\n    <span class=\"n\">NSLog</span><span class=\"p\">(</span><span class=\"s\">@\"url=%@---options=%@\"</span><span class=\"p\">,</span> <span class=\"n\">url</span><span class=\"p\">,</span> <span class=\"n\">options</span><span class=\"p\">);</span>\n    <span class=\"k\">return</span> <span class=\"nb\">YES</span>\n<span class=\"p\">}</span>\n</pre></td></tr></tbody></table></code></pre></div>    </div>\n\n    <p>输出：</p>\n\n    <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n</pre></td><td class=\"rouge-code\"><pre>url=file:///private/var/mobile/Containers/Data/Application/32D902CA-E0EB-487B-8C08-8C5A277967E3/Documents/Inbox/RPReplay_Final1641554324-31.MP3---options={\n    UIApplicationOpenURLOptionsOpenInPlaceKey = 0;\n}\n</pre></td></tr></tbody></table></code></pre></div>    </div>\n  </li>\n  <li>\n    <h4 id=\"uiwindowscenedelegate\">UIWindowSceneDelegate</h4>\n  </li>\n</ul>\n\n<p>​\tiOS13之后，<code class=\"language-plaintext highlighter-rouge\">Appdelegate</code>不在负责UI生命周期，所有UI生命周期交给<code class=\"language-plaintext highlighter-rouge\">SceneDelegate</code>处理：</p>\n\n<p><img src=\"/img/2022-01-19-iOS-OpenType/scene_Appdelegate.jpg\" alt=\"\" /></p>\n\n<p><img src=\"/img/2022-01-19-iOS-OpenType/scene_delegate.jpg\" alt=\"\" /></p>\n\n<p>在SceneDelegate场景中实现回调监听：</p>\n\n<pre><code class=\"language-objective-c\">- (void)scene:(UIScene *)scene openURLContexts:(NSSet&lt;UIOpenURLContext *&gt; *)URLContexts {\n    NSLog(@\"scene = %@\", URLContexts);\n}\n</code></pre>\n\n<p>输出：</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n</pre></td><td class=\"rouge-code\"><pre>{(\n    &lt;UIOpenURLContext: 0x2817cc760; URL: file:///private/var/mobile/Containers/Data/Application/F63608F2-7BA5-4374-9ADB-6D6B1135C771/Documents/Inbox/RPReplay_Final1641554324-20.MP3; options: &lt;UISceneOpenURLOptions: 0x2802b09c0; sourceApp: (null); annotation: (null); openInPlace: NO; _eventAttribution: (null)&gt;&gt;\n)}\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h2 id=\"0x03-备注\">0x03 备注</h2>\n\n<h4 id=\"音频文件导入\">音频文件导入：</h4>\n\n<p>QQ分享的音频可以支持其他应用打开，导入到第三方应用</p>\n\n<p>微信分享的音频可以支持其他应用打开，导入到第三方应用</p>\n\n<h4 id=\"视频文件导入\">视频文件导入：</h4>\n\n<p>QQ分享的视频可以支持其他应用打开，导入到第三方应用</p>\n\n<p>微信分享的视频无法导入</p>\n\n<h2 id=\"0x04-补充资料\">0x04 补充资料</h2>\n\n<p>Document Types Data包含关系如下：</p>\n\n<p><img src=\"/img/2022-01-19-iOS-OpenType/public.data.gif\" alt=\"\" /></p>\n\n<p>各类型说明：<a href=\"https://developer.apple.com/library/archive/documentation/Miscellaneous/Reference/UTIRef/Articles/System-DeclaredUniformTypeIdentifiers.html#//apple_ref/doc/uid/TP40009259-SW1\">iOS系统更多应用打开</a></p>\n\n","name":"2022-01-19-iOS-OpenType.md","previous":{"id":"/2021/10/18/git","tags":[],"relative_path":"_posts/2021-10-18-git.md","collection":"posts","name":"2021-10-18-git.md","url":"/2021/10/18/git/","title":"多账号配置GIT","date":"2021-10-18 00:00:00 +0800","categories":[],"path":"_posts/2021-10-18-git.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/post-bg-2015.jpg","slug":"git","ext":".md"},"output":"<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"google-site-verification\" content=\"xBT4GhYoi5qRD5tr338pgPM5OWHHIDR6mNg1a3euekI\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, viewport-fit=cover\">\n    <meta name=\"description\" content=\"与你一起发现更大的世界。\">\n    <meta name=\"keywords\"  content=\"PaysonChen,iOS,流媒体\">\n    <meta name=\"theme-color\" content=\"#000000\">\n    \n    <!-- Open Graph -->\n    <meta property=\"og:title\" content=\"iOS应用接收文件打开类型 - PaysonChen的博客 | PaysonChen Blog\">\n    \n    <meta property=\"og:type\" content=\"article\">\n    <meta property=\"og:description\" content=\"0x00 背景\n\">\n    \n    \n    <meta property=\"article:published_time\" content=\"2022-01-19T00:00:00Z\">\n    \n    \n    <meta property=\"article:author\" content=\"PaysonChen\">\n    \n    \n    \n    <meta property=\"og:image\" content=\"http://localhost:4000\">\n    <meta property=\"og:url\" content=\"http://localhost:4000/2022/01/19/iOS-OpenType/\">\n    <meta property=\"og:site_name\" content=\"PaysonChen的博客 | PaysonChen Blog\">\n    \n    <title>iOS应用接收文件打开类型 - PaysonChen的博客 | PaysonChen Blog</title>\n\n    <!-- Web App Manifest -->\n    <link rel=\"manifest\" href=\"/pwa/manifest.json\">\n\n    <!-- Favicon -->\n    <link rel=\"shortcut icon\" href=\"/img/favicon.ico\">\n    \n    <!-- Canonical URL -->\n    <link rel=\"canonical\" href=\"http://localhost:4000/2022/01/19/iOS-OpenType/\">\n\n    <!-- Bootstrap Core CSS -->\n    <link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\">\n\n    <!-- Custom CSS -->\n    <link rel=\"stylesheet\" href=\"/css/hux-blog.min.css\">\n\n    <!-- Custom Fonts -->\n    <!-- <link href=\"http://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\"> -->\n    <!-- Hux change font-awesome CDN to qiniu -->\n    <link href=\"//cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\">\n\n\n    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->\n    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->\n    <!--[if lt IE 9]>\n        <script src=\"https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js\"></script>\n        <script src=\"https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js\"></script>\n    <![endif]-->\n\n    <!-- ga & ba script hoook -->\n    <script></script>\n</head>\n\n\n<!-- hack iOS CSS :active style -->\n<body ontouchstart=\"\">\n\n    <!-- Navigation -->\n\n    <nav class=\"navbar navbar-default navbar-custom navbar-fixed-top\">\n        \n        <div class=\"container-fluid\">\n            <!-- Brand and toggle get grouped for better mobile display -->\n            <div class=\"navbar-header page-scroll\">\n                <button type=\"button\" class=\"navbar-toggle\">\n                    <span class=\"sr-only\">Toggle navigation</span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                </button>\n                <a class=\"navbar-brand\" href=\"/\">PaysonChen Blog</a>\n            </div>\n\n            <!-- Collect the nav links, forms, and other content for toggling -->\n            <div id=\"huxblog_navbar\">\n                <div class=\"navbar-collapse\">\n                    <ul class=\"nav navbar-nav navbar-right\">\n                        <li>\n                            <a href=\"/\">Home</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        <li>\n                            <a href=\"/about/\">About</a>\n                        </li>\n                        \n                        \n                        \n                        <li>\n                            <a href=\"/archive/\">Archive</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        <li class=\"search-icon\">\n                            <a href=\"javascript:void(0)\">\n                                <i class=\"fa fa-search\"></i>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n            <!-- /.navbar-collapse -->\n        </div>\n        <!-- /.container -->\n    </nav>\n\n    <script>\n        // Drop Bootstarp low-performance Navbar\n        // Use customize navbar with high-quality material design animation\n        // in high-perf jank-free CSS3 implementation\n        var $body = document.body;\n        var $toggle = document.querySelector('.navbar-toggle');\n        var $navbar = document.querySelector('#huxblog_navbar');\n        var $collapse = document.querySelector('.navbar-collapse');\n\n        var __HuxNav__ = {\n            close: function () {\n                $navbar.className = \" \";\n                // wait until animation end.\n                setTimeout(function () {\n                    // prevent frequently toggle\n                    if ($navbar.className.indexOf('in') < 0) {\n                        $collapse.style.height = \"0px\"\n                    }\n                }, 400)\n            },\n            open: function () {\n                $collapse.style.height = \"auto\"\n                $navbar.className += \" in\";\n            }\n        }\n\n        // Bind Event\n        $toggle.addEventListener('click', function (e) {\n            if ($navbar.className.indexOf('in') > 0) {\n                __HuxNav__.close()\n            } else {\n                __HuxNav__.open()\n            }\n        })\n\n        /**\n         * Since Fastclick is used to delegate 'touchstart' globally\n         * to hack 300ms delay in iOS by performing a fake 'click',\n         * Using 'e.stopPropagation' to stop 'touchstart' event from \n         * $toggle/$collapse will break global delegation.\n         * \n         * Instead, we use a 'e.target' filter to prevent handler\n         * added to document close HuxNav.  \n         *\n         * Also, we use 'click' instead of 'touchstart' as compromise\n         */\n        document.addEventListener('click', function (e) {\n            if (e.target == $toggle) return;\n            if (e.target.className == 'icon-bar') return;\n            __HuxNav__.close();\n        })\n    </script>\n    <!-- Search -->\n<div class=\"search-page\">\n  <div class=\"search-icon-close-container\">\n    <span class=\"search-icon-close\">\n      <i class=\"fa fa-chevron-down\"></i>\n    </span>\n  </div>\n  <div class=\"search-main container\">\n    <div class=\"row\">\n      <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n        <form></form>\n        <input type=\"text\" id=\"search-input\" placeholder=\"$ grep...\">\n        </form>\n        <div id=\"search-results\" class=\"mini-post-list\"></div>\n      </div>\n    </div>\n  </div>\n</div>\n\n    <!-- Image to hack wechat -->\n<!-- <img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\"> -->\n<!-- <img src=\"/img/home-bg-geek.jpg\" width=\"0\" height=\"0\"> -->\n\n<!-- Post Header -->\n\n\n\n<style type=\"text/css\">\n    header.intro-header{\n        position: relative;\n        background-image: url('/img/home-bg-geek.jpg');\n        background: ;\n    }\n\n    \n</style>\n\n<header class=\"intro-header\" >\n\n    <div class=\"header-mask\"></div>\n    \n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <div class=\"post-heading\">\n                    <div class=\"tags\">\n                        \n                    </div>\n                    <h1>iOS应用接收文件打开类型</h1>\n                    \n                    <h2 class=\"subheading\"></h2>\n                    <span class=\"meta\">Posted by PaysonChen on January 19, 2022</span>\n                </div>\n            </div>\n        </div>\n    </div>\n</header>\n\n\n\n\n\n\n<!-- Post Content -->\n<article>\n    <div class=\"container\">\n        <div class=\"row\">\n\n    <!-- Post Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                post-container\">\n\n                <!-- Multi-Lingual -->\n                \n\n\t\t\t\t<h2 id=\"0x00-背景\">0x00 背景</h2>\n\n<p>​\tK歌音频上传工具1.0需求调研，在探索上传的几种方式当中，涉及到引导用户从QQ微信打开，并提供能力。这就牵涉到从其他应用讲音视频文件导入（打开/传入）到K歌的需要。</p>\n\n<h2 id=\"0x01-技术方案\">0x01 技术方案</h2>\n\n<p>​\t通过设置Xcode Document Types，可以设置项目可接收的文件类型，附带一份：<a href=\"https://developer.apple.com/library/archive/documentation/Miscellaneous/Reference/UTIRef/Articles/System-DeclaredUniformTypeIdentifiers.html#//apple_ref/doc/uid/TP40009259-SW1\">官方提供的文件类型列表</a>。</p>\n\n<p>​\t<img src=\"/img/2022-01-19-iOS-OpenType/doctypes.png\" alt=\"\" /></p>\n\n<h2 id=\"0x02-项目实现\">0x02 项目实现</h2>\n\n<p>当前iOS应用的生命周期管理有以下两种方式</p>\n\n<ul>\n  <li>\n    <h5 id=\"uiapplicationdelegate\">UIApplicationDelegate</h5>\n\n    <p>iOS13之前，Appdelegate的职责全权处理App生命周期和UI生命周期：</p>\n\n    <p><img src=\"/img/2022-01-19-iOS-OpenType/appdelegate.jpg\" alt=\"\" /></p>\n\n    <p>在不需要多Window场景下，在AppDelegate中实现</p>\n\n    <div class=\"language-objc highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n</pre></td><td class=\"rouge-code\"><pre><span class=\"k\">-</span><span class=\"p\">(</span><span class=\"n\">BOOL</span><span class=\"p\">)</span><span class=\"nf\">application</span><span class=\"p\">:(</span><span class=\"n\">UIApplication</span> <span class=\"o\">*</span><span class=\"p\">)</span><span class=\"nv\">app</span> <span class=\"nf\">openURL</span><span class=\"p\">:(</span><span class=\"n\">NSURL</span> <span class=\"o\">*</span><span class=\"p\">)</span><span class=\"nv\">url</span> <span class=\"nf\">options</span><span class=\"p\">:(</span><span class=\"n\">NSDictionary</span><span class=\"o\">&lt;</span><span class=\"n\">UIApplicationOpenURLOptionsKey</span><span class=\"p\">,</span><span class=\"n\">id</span><span class=\"o\">&gt;</span> <span class=\"o\">*</span><span class=\"p\">)</span><span class=\"nv\">options</span> <span class=\"p\">{</span>\n    <span class=\"n\">NSLog</span><span class=\"p\">(</span><span class=\"s\">@\"url=%@---options=%@\"</span><span class=\"p\">,</span> <span class=\"n\">url</span><span class=\"p\">,</span> <span class=\"n\">options</span><span class=\"p\">);</span>\n    <span class=\"k\">return</span> <span class=\"nb\">YES</span>\n<span class=\"p\">}</span>\n</pre></td></tr></tbody></table></code></pre></div>    </div>\n\n    <p>输出：</p>\n\n    <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n</pre></td><td class=\"rouge-code\"><pre>url=file:///private/var/mobile/Containers/Data/Application/32D902CA-E0EB-487B-8C08-8C5A277967E3/Documents/Inbox/RPReplay_Final1641554324-31.MP3---options={\n    UIApplicationOpenURLOptionsOpenInPlaceKey = 0;\n}\n</pre></td></tr></tbody></table></code></pre></div>    </div>\n  </li>\n  <li>\n    <h4 id=\"uiwindowscenedelegate\">UIWindowSceneDelegate</h4>\n  </li>\n</ul>\n\n<p>​\tiOS13之后，<code class=\"language-plaintext highlighter-rouge\">Appdelegate</code>不在负责UI生命周期，所有UI生命周期交给<code class=\"language-plaintext highlighter-rouge\">SceneDelegate</code>处理：</p>\n\n<p><img src=\"/img/2022-01-19-iOS-OpenType/scene_Appdelegate.jpg\" alt=\"\" /></p>\n\n<p><img src=\"/img/2022-01-19-iOS-OpenType/scene_delegate.jpg\" alt=\"\" /></p>\n\n<p>在SceneDelegate场景中实现回调监听：</p>\n\n<pre><code class=\"language-objective-c\">- (void)scene:(UIScene *)scene openURLContexts:(NSSet&lt;UIOpenURLContext *&gt; *)URLContexts {\n    NSLog(@\"scene = %@\", URLContexts);\n}\n</code></pre>\n\n<p>输出：</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n</pre></td><td class=\"rouge-code\"><pre>{(\n    &lt;UIOpenURLContext: 0x2817cc760; URL: file:///private/var/mobile/Containers/Data/Application/F63608F2-7BA5-4374-9ADB-6D6B1135C771/Documents/Inbox/RPReplay_Final1641554324-20.MP3; options: &lt;UISceneOpenURLOptions: 0x2802b09c0; sourceApp: (null); annotation: (null); openInPlace: NO; _eventAttribution: (null)&gt;&gt;\n)}\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h2 id=\"0x03-备注\">0x03 备注</h2>\n\n<h4 id=\"音频文件导入\">音频文件导入：</h4>\n\n<p>QQ分享的音频可以支持其他应用打开，导入到第三方应用</p>\n\n<p>微信分享的音频可以支持其他应用打开，导入到第三方应用</p>\n\n<h4 id=\"视频文件导入\">视频文件导入：</h4>\n\n<p>QQ分享的视频可以支持其他应用打开，导入到第三方应用</p>\n\n<p>微信分享的视频无法导入</p>\n\n<h2 id=\"0x04-补充资料\">0x04 补充资料</h2>\n\n<p>Document Types Data包含关系如下：</p>\n\n<p><img src=\"/img/2022-01-19-iOS-OpenType/public.data.gif\" alt=\"\" /></p>\n\n<p>各类型说明：<a href=\"https://developer.apple.com/library/archive/documentation/Miscellaneous/Reference/UTIRef/Articles/System-DeclaredUniformTypeIdentifiers.html#//apple_ref/doc/uid/TP40009259-SW1\">iOS系统更多应用打开</a></p>\n\n\n\n                <hr style=\"visibility: hidden;\">\n                <ul class=\"pager\">\n                    \n                    <li class=\"previous\">\n                        <a href=\"/2021/10/18/git/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"多账号配置GIT\">\n                        Previous<br>\n                        <span>多账号配置GIT</span>\n                        </a>\n                    </li>\n                    \n                    \n                    <li class=\"next\">\n                        <a href=\"/2022/09/25/App%E7%98%A6%E8%BA%AB%E5%AE%9E%E8%B7%B5%E4%B9%8B%E6%89%B9%E9%87%8F%E8%BD%AC%E6%8D%A2webp/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"App瘦身实践之批量转换webp\">\n                        Next<br>\n                        <span>App瘦身实践之批量转换webp</span>\n                        </a>\n                    </li>\n                    \n                </ul>\n                <hr style=\"visibility: hidden;\">\n\n                \n                <!-- disqus 评论框 start -->\n                <div class=\"comment\">\n                    <div id=\"disqus_thread\" class=\"disqus-thread\"></div>\n                </div>\n                <!-- disqus 评论框 end -->\n                \n\n                \n            </div>  \n\n    <!-- Side Catalog Container -->\n        \n            <div class=\"\n                col-lg-2 col-lg-offset-0\n                visible-lg-block\n                sidebar-container\n                catalog-container\">\n                <div class=\"side-catalog\">\n                    <hr class=\"hidden-sm hidden-xs\">\n                    <h5>\n                        <a class=\"catalog-toggle\" href=\"#\">CATALOG</a>\n                    </h5>\n                    <ul class=\"catalog-body\"></ul>\n                </div>\n            </div>\n        \n\n    <!-- Sidebar Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                sidebar-container\">\n\n                <!-- Featured Tags -->\n                \n\n\n<section>\n    \n        <hr class=\"hidden-sm hidden-xs\">\n    \n    <h5><a href=\"/archive/\">FEATURED TAGS</a></h5>\n    <div class=\"tags\">\n        \n        \n        \n        \n        \n    </div>\n</section>\n\n\n                <!-- Friends Blog -->\n                \n            </div>\n        </div>\n    </div>\n</article>\n\n<!-- add support for mathjax by voleking-->\n\n\n\n\n\n\n<!-- disqus 公共JS代码 start (一个网页只需插入一次) -->\n<script type=\"text/javascript\">\n    /* * * CONFIGURATION VARIABLES * * */\n    var disqus_shortname = \"Cyp\";\n    var disqus_identifier = \"/2022/01/19/iOS-OpenType\";\n    var disqus_url = \"http://localhost:4000/2022/01/19/iOS-OpenType/\";\n\n    (function() {\n        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;\n        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';\n        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);\n    })();\n</script>\n<!-- disqus 公共JS代码 end -->\n\n\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n      var d = document, t = 'script',\n          o = d.createElement(t),\n          s = d.getElementsByTagName(t)[0];\n      o.src = u;\n      if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n      s.parentNode.insertBefore(o, s);\n    }\n</script>\n<!-- anchor-js, Doc:http://bryanbraun.github.io/anchorjs/ -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/anchor-js/1.1.1/anchor.min.js\",function(){\n        anchors.options = {\n          visible: 'hover',\n          placement: 'right',\n          // icon: '#'\n        };\n        anchors.add().remove('.intro-header h1').remove('.subheading').remove('.sidebar-container h5');\n    })\n</script>\n<style>\n    /* place left on bigger screen */\n    @media all and (min-width: 800px) {\n        .anchorjs-link{\n            position: absolute;\n            left: -0.75em;\n            font-size: 1.1em;\n            margin-top : -0.1em;\n        }\n    }\n</style>\n\n\n\n    <!-- Footer -->\n<footer>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <!-- SNS Link -->\n                \n\n\n<ul class=\"list-inline text-center\">\n\n\n  \n  \n  \n  \n  \n  \n  \n</ul>\n\n                <p class=\"copyright text-muted\">\n                    Copyright &copy; PaysonChen Blog 2024\n                    <br>\n                    <!-- Powered by <a href=\"http://huangxuan.me\">Hux Blog</a> | -->\n                 <!--    <iframe style=\"margin-left: 2px; margin-bottom:-5px;\" frameborder=\"0\" scrolling=\"0\" width=\"100px\"\n                        height=\"20px\"\n                        src=\"https://ghbtns.com/github-btn.html?user=huxpro&repo=huxpro.github.io&type=star&count=true\">\n                    </iframe> -->\n                </p>\n            </div>\n        </div>\n    </div>\n</footer>\n\n<!-- jQuery -->\n<script src=\"/js/jquery.min.js \"></script>\n\n<!-- Bootstrap Core JavaScript -->\n<!-- Currently, only navbar scroll-down effect at desktop still depends on this -->\n<script src=\"/js/bootstrap.min.js \"></script>\n\n<!-- Custom Theme JavaScript -->\n<script src=\"/js/hux-blog.min.js \"></script>\n\n<!-- Simple Jekyll Search -->\n<script src=\"/js/simple-jekyll-search.min.js\"></script>\n\n<!-- Service Worker -->\n\n<script src=\"/js/snackbar.js \"></script>\n<script src=\"/js/sw-registration.js \"></script>\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n        var d = document, t = 'script',\n            o = d.createElement(t),\n            s = d.getElementsByTagName(t)[0];\n        o.src = u;\n        if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n        s.parentNode.insertBefore(o, s);\n    }\n</script>\n\n<!--\n     Because of the native support for backtick-style fenced code blocks\n     right within the Markdown is landed in Github Pages,\n     From V1.6, There is no need for Highlight.js,\n     so Huxblog drops it officially.\n\n     - https://github.com/blog/2100-github-pages-now-faster-and-simpler-with-jekyll-3-0\n     - https://help.github.com/articles/creating-and-highlighting-code-blocks/\n     - https://github.com/jneen/rouge/wiki/list-of-supported-languages-and-lexers\n-->\n<!--\n    <script>\n        async(\"http://cdn.bootcss.com/highlight.js/8.6/highlight.min.js\", function(){\n            hljs.initHighlightingOnLoad();\n        })\n    </script>\n    <link href=\"http://cdn.bootcss.com/highlight.js/8.6/styles/github.min.css\" rel=\"stylesheet\">\n-->\n\n\n\n\n\n\n\n<!--fastClick.js -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/fastclick/1.0.6/fastclick.min.js\", function () {\n        var $nav = document.querySelector(\"nav\");\n        if ($nav) FastClick.attach($nav);\n    })\n</script>\n\n\n<!-- Google Analytics -->\n\n\n\n<!-- Baidu Tongji -->\n\n\n\n<!-- Side Catalog -->\n\n<script type=\"text/javascript\">\n    function generateCatalog(selector) {\n\n        // interop with multilangual \n        if ('' == 'true') {\n            _containerSelector = 'div.post-container.active'\n        } else {\n            _containerSelector = 'div.post-container'\n        }\n\n        // init\n        var P = $(_containerSelector), a, n, t, l, i, c;\n        a = P.find('h1,h2,h3,h4,h5,h6');\n\n        // clean\n        $(selector).html('')\n\n        // appending\n        a.each(function () {\n            n = $(this).prop('tagName').toLowerCase();\n            i = \"#\" + $(this).prop('id');\n            t = $(this).text();\n            c = $('<a href=\"' + i + '\" rel=\"nofollow\">' + t + '</a>');\n            l = $('<li class=\"' + n + '_nav\"></li>').append(c);\n            $(selector).append(l);\n        });\n        return true;\n    }\n\n    generateCatalog(\".catalog-body\");\n\n    // toggle side catalog\n    $(\".catalog-toggle\").click((function (e) {\n        e.preventDefault();\n        $('.side-catalog').toggleClass(\"fold\")\n    }))\n\n    /*\n     * Doc: https://github.com/davist11/jQuery-One-Page-Nav\n     * Fork by Hux to support padding\n     */\n    async(\"/js/jquery.nav.js\", function () {\n        $('.catalog-body').onePageNav({\n            currentClass: \"active\",\n            changeHash: !1,\n            easing: \"swing\",\n            filter: \"\",\n            scrollSpeed: 700,\n            scrollOffset: 0,\n            scrollThreshold: .2,\n            begin: null,\n            end: null,\n            scrollChange: null,\n            padding: 80\n        });\n    });\n</script>\n\n\n\n<!-- Multi-Lingual -->\n\n\n<!-- Simple Jekyll Search -->\n<script>\n    // https://stackoverflow.com/questions/1912501/unescape-html-entities-in-javascript\n    function htmlDecode(input) {\n        var e = document.createElement('textarea');\n        e.innerHTML = input;\n        // handle case of empty input\n        return e.childNodes.length === 0 ? \"\" : e.childNodes[0].nodeValue;\n    }\n\n    SimpleJekyllSearch({\n        searchInput: document.getElementById('search-input'),\n        resultsContainer: document.getElementById('search-results'),\n        json: '/search.json',\n        searchResultTemplate: '<div class=\"post-preview item\"><a href=\"{url}\"><h2 class=\"post-title\">{title}</h2><h3 class=\"post-subtitle\">{subtitle}</h3><hr></a></div>',\n        noResultsText: 'No results',\n        limit: 50,\n        fuzzy: false,\n        // a hack to get escaped subtitle unescaped. for some reason, \n        // post.subtitle w/o escape filter nuke entire search.\n        templateMiddleware: function (prop, value, template) {\n            if (prop === 'subtitle' || prop === 'title') {\n                if (value.indexOf(\"code\")) {\n                    return htmlDecode(value);\n                } else {\n                    return value;\n                }\n            }\n        }\n    });\n\n    $(document).ready(function () {\n        var $searchPage = $('.search-page');\n        var $searchOpen = $('.search-icon');\n        var $searchClose = $('.search-icon-close');\n        var $searchInput = $('#search-input');\n        var $body = $('body');\n\n        $searchOpen.on('click', function (e) {\n            e.preventDefault();\n            $searchPage.toggleClass('search-active');\n            var prevClasses = $body.attr('class') || '';\n            setTimeout(function () {\n                $body.addClass('no-scroll');\n            }, 400)\n\n            if ($searchPage.hasClass('search-active')) {\n                $searchClose.on('click', function (e) {\n                    e.preventDefault();\n                    $searchPage.removeClass('search-active');\n                    $body.attr('class', prevClasses);  // from closure \n                });\n                $searchInput.focus();\n            }\n        });\n    });\n</script>\n\n\n<!-- Image to hack wechat -->\n<img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\" />\n<!-- Migrate from head to bottom, no longer block render and still work -->\n\n</body>\n\n</html>\n","excerpt":"<h2 id=\"0x00-背景\">0x00 背景</h2>\n","url":"/2022/01/19/iOS-OpenType/","next":{"id":"/2022/09/25/App瘦身实践之批量转换webp","tags":[],"relative_path":"_posts/2022-09-25-App瘦身实践之批量转换webp.md","collection":"posts","name":"2022-09-25-App瘦身实践之批量转换webp.md","url":"/2022/09/25/App%E7%98%A6%E8%BA%AB%E5%AE%9E%E8%B7%B5%E4%B9%8B%E6%89%B9%E9%87%8F%E8%BD%AC%E6%8D%A2webp/","title":"App瘦身实践之批量转换webp","date":"2022-09-25 00:00:00 +0800","categories":[],"path":"_posts/2022-09-25-App瘦身实践之批量转换webp.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/home-bg-geek.jpg","slug":"App瘦身实践之批量转换webp","ext":".md"},"title":"iOS应用接收文件打开类型","date":"2022-01-19 00:00:00 +0800","categories":[],"path":"_posts/2022-01-19-iOS-OpenType.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/home-bg-geek.jpg","slug":"iOS-OpenType","ext":".md"},"output":"<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"google-site-verification\" content=\"xBT4GhYoi5qRD5tr338pgPM5OWHHIDR6mNg1a3euekI\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, viewport-fit=cover\">\n    <meta name=\"description\" content=\"与你一起发现更大的世界。\">\n    <meta name=\"keywords\"  content=\"PaysonChen,iOS,流媒体\">\n    <meta name=\"theme-color\" content=\"#000000\">\n    \n    <!-- Open Graph -->\n    <meta property=\"og:title\" content=\"App瘦身实践之批量转换webp - PaysonChen的博客 | PaysonChen Blog\">\n    \n    <meta property=\"og:type\" content=\"article\">\n    <meta property=\"og:description\" content=\"0x00 背景\n\">\n    \n    \n    <meta property=\"article:published_time\" content=\"2022-09-25T00:00:00Z\">\n    \n    \n    <meta property=\"article:author\" content=\"PaysonChen\">\n    \n    \n    \n    <meta property=\"og:image\" content=\"http://localhost:4000\">\n    <meta property=\"og:url\" content=\"http://localhost:4000/2022/09/25/App%E7%98%A6%E8%BA%AB%E5%AE%9E%E8%B7%B5%E4%B9%8B%E6%89%B9%E9%87%8F%E8%BD%AC%E6%8D%A2webp/\">\n    <meta property=\"og:site_name\" content=\"PaysonChen的博客 | PaysonChen Blog\">\n    \n    <title>App瘦身实践之批量转换webp - PaysonChen的博客 | PaysonChen Blog</title>\n\n    <!-- Web App Manifest -->\n    <link rel=\"manifest\" href=\"/pwa/manifest.json\">\n\n    <!-- Favicon -->\n    <link rel=\"shortcut icon\" href=\"/img/favicon.ico\">\n    \n    <!-- Canonical URL -->\n    <link rel=\"canonical\" href=\"http://localhost:4000/2022/09/25/App%E7%98%A6%E8%BA%AB%E5%AE%9E%E8%B7%B5%E4%B9%8B%E6%89%B9%E9%87%8F%E8%BD%AC%E6%8D%A2webp/\">\n\n    <!-- Bootstrap Core CSS -->\n    <link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\">\n\n    <!-- Custom CSS -->\n    <link rel=\"stylesheet\" href=\"/css/hux-blog.min.css\">\n\n    <!-- Custom Fonts -->\n    <!-- <link href=\"http://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\"> -->\n    <!-- Hux change font-awesome CDN to qiniu -->\n    <link href=\"//cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\">\n\n\n    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->\n    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->\n    <!--[if lt IE 9]>\n        <script src=\"https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js\"></script>\n        <script src=\"https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js\"></script>\n    <![endif]-->\n\n    <!-- ga & ba script hoook -->\n    <script></script>\n</head>\n\n\n<!-- hack iOS CSS :active style -->\n<body ontouchstart=\"\">\n\n    <!-- Navigation -->\n\n    <nav class=\"navbar navbar-default navbar-custom navbar-fixed-top\">\n        \n        <div class=\"container-fluid\">\n            <!-- Brand and toggle get grouped for better mobile display -->\n            <div class=\"navbar-header page-scroll\">\n                <button type=\"button\" class=\"navbar-toggle\">\n                    <span class=\"sr-only\">Toggle navigation</span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                </button>\n                <a class=\"navbar-brand\" href=\"/\">PaysonChen Blog</a>\n            </div>\n\n            <!-- Collect the nav links, forms, and other content for toggling -->\n            <div id=\"huxblog_navbar\">\n                <div class=\"navbar-collapse\">\n                    <ul class=\"nav navbar-nav navbar-right\">\n                        <li>\n                            <a href=\"/\">Home</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        <li>\n                            <a href=\"/about/\">About</a>\n                        </li>\n                        \n                        \n                        \n                        <li>\n                            <a href=\"/archive/\">Archive</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        <li class=\"search-icon\">\n                            <a href=\"javascript:void(0)\">\n                                <i class=\"fa fa-search\"></i>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n            <!-- /.navbar-collapse -->\n        </div>\n        <!-- /.container -->\n    </nav>\n\n    <script>\n        // Drop Bootstarp low-performance Navbar\n        // Use customize navbar with high-quality material design animation\n        // in high-perf jank-free CSS3 implementation\n        var $body = document.body;\n        var $toggle = document.querySelector('.navbar-toggle');\n        var $navbar = document.querySelector('#huxblog_navbar');\n        var $collapse = document.querySelector('.navbar-collapse');\n\n        var __HuxNav__ = {\n            close: function () {\n                $navbar.className = \" \";\n                // wait until animation end.\n                setTimeout(function () {\n                    // prevent frequently toggle\n                    if ($navbar.className.indexOf('in') < 0) {\n                        $collapse.style.height = \"0px\"\n                    }\n                }, 400)\n            },\n            open: function () {\n                $collapse.style.height = \"auto\"\n                $navbar.className += \" in\";\n            }\n        }\n\n        // Bind Event\n        $toggle.addEventListener('click', function (e) {\n            if ($navbar.className.indexOf('in') > 0) {\n                __HuxNav__.close()\n            } else {\n                __HuxNav__.open()\n            }\n        })\n\n        /**\n         * Since Fastclick is used to delegate 'touchstart' globally\n         * to hack 300ms delay in iOS by performing a fake 'click',\n         * Using 'e.stopPropagation' to stop 'touchstart' event from \n         * $toggle/$collapse will break global delegation.\n         * \n         * Instead, we use a 'e.target' filter to prevent handler\n         * added to document close HuxNav.  \n         *\n         * Also, we use 'click' instead of 'touchstart' as compromise\n         */\n        document.addEventListener('click', function (e) {\n            if (e.target == $toggle) return;\n            if (e.target.className == 'icon-bar') return;\n            __HuxNav__.close();\n        })\n    </script>\n    <!-- Search -->\n<div class=\"search-page\">\n  <div class=\"search-icon-close-container\">\n    <span class=\"search-icon-close\">\n      <i class=\"fa fa-chevron-down\"></i>\n    </span>\n  </div>\n  <div class=\"search-main container\">\n    <div class=\"row\">\n      <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n        <form></form>\n        <input type=\"text\" id=\"search-input\" placeholder=\"$ grep...\">\n        </form>\n        <div id=\"search-results\" class=\"mini-post-list\"></div>\n      </div>\n    </div>\n  </div>\n</div>\n\n    <!-- Image to hack wechat -->\n<!-- <img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\"> -->\n<!-- <img src=\"/img/home-bg-geek.jpg\" width=\"0\" height=\"0\"> -->\n\n<!-- Post Header -->\n\n\n\n<style type=\"text/css\">\n    header.intro-header{\n        position: relative;\n        background-image: url('/img/home-bg-geek.jpg');\n        background: ;\n    }\n\n    \n</style>\n\n<header class=\"intro-header\" >\n\n    <div class=\"header-mask\"></div>\n    \n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <div class=\"post-heading\">\n                    <div class=\"tags\">\n                        \n                    </div>\n                    <h1>App瘦身实践之批量转换webp</h1>\n                    \n                    <h2 class=\"subheading\"></h2>\n                    <span class=\"meta\">Posted by PaysonChen on September 25, 2022</span>\n                </div>\n            </div>\n        </div>\n    </div>\n</header>\n\n\n\n\n\n\n<!-- Post Content -->\n<article>\n    <div class=\"container\">\n        <div class=\"row\">\n\n    <!-- Post Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                post-container\">\n\n                <!-- Multi-Lingual -->\n                \n\n\t\t\t\t<h2 id=\"0x00-背景\">0x00 背景</h2>\n\n<p>​\tWebP 在各大互联网公司已经使用得很多了。WebP 的优势体现在它具有更优的图像数据压缩算法，能带来更小的图片体积，而且拥有肉眼识别无差异的图像质量；同时具备了无损和有损的压缩模式、Alpha 透明以及动画的特性，在 JPEG 和 PNG 上的转化效果都相当优秀、稳定和统一。</p>\n\n<h2 id=\"0x01-优势对比\">0x01 优势对比</h2>\n\n<ul>\n  <li>PNG 转 WebP 的压缩率要高于 PNG 原图压缩率，同样支持有损与无损压缩</li>\n  <li>转换后的 WebP 体积大幅减少，图片质量也得到保障（同时肉眼几乎无法看出差异）</li>\n  <li>转换后的 WebP 支持 Alpha 透明和 24-bit 颜色数，不存在 PNG8 色彩不够丰富和在浏览器中可能会出现毛边的问题</li>\n</ul>\n\n<h2 id=\"0x02-实践\">0x02 实践</h2>\n\n<p>一般设计给资源会有压缩@2x,@3x压缩包，于是可以把这些压缩包批量转换一下：</p>\n\n<p>写一个脚本：transfer2webp.sh</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n</pre></td><td class=\"rouge-code\"><pre><span class=\"k\">for </span>file <span class=\"k\">in</span> ./<span class=\"k\">*</span>\n<span class=\"k\">do\n    </span><span class=\"nv\">suffix</span><span class=\"o\">=</span>zip\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">file</span><span class=\"p\">##*.</span><span class=\"k\">}</span><span class=\"s2\">\"</span> <span class=\"o\">=</span> <span class=\"s2\">\"</span><span class=\"nv\">$suffix</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">echo</span> <span class=\"nv\">$file</span> <span class=\"s1\">'zip'</span>\n        <span class=\"nb\">dir</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">file</span><span class=\"p\">%.*</span><span class=\"k\">}</span>\n        unar <span class=\"nt\">-e</span> GBK <span class=\"nv\">$file</span> <span class=\"c\">#没有unar环境可以安装下https://blog.csdn.net/dawn_after_dark/article/details/83504421</span>\n        <span class=\"k\">for </span>subfile <span class=\"k\">in</span> ./<span class=\"k\">${</span><span class=\"nv\">dir</span><span class=\"k\">}</span>/<span class=\"k\">*</span>\n        <span class=\"k\">do\n            </span>cwebp <span class=\"nt\">-q</span> 90 <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">subfile</span><span class=\"k\">}</span><span class=\"s2\">\"</span> <span class=\"nt\">-o</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">subfile</span><span class=\"p\">%.*</span><span class=\"k\">}</span><span class=\"s2\">.webp\"</span>\n        <span class=\"k\">done\n\n    elif </span><span class=\"nb\">test</span> <span class=\"nt\">-d</span> <span class=\"nv\">$file</span> <span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">echo</span> <span class=\"nv\">$file</span> <span class=\"s1\">'fold'</span>\n    <span class=\"k\">else\n        </span><span class=\"nb\">echo</span> <span class=\"nv\">$file</span> <span class=\"s1\">'other'</span>\n    <span class=\"k\">fi\ndone</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>备注：之所以选unar而非unzip，是因为很多设计资源打包时，很可能带中文，在一开始的方案中使用了unzip会有乱码问题，为了兼容中文压缩包选用unar</p>\n\n\n\n                <hr style=\"visibility: hidden;\">\n                <ul class=\"pager\">\n                    \n                    <li class=\"previous\">\n                        <a href=\"/2022/01/19/iOS-OpenType/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"iOS应用接收文件打开类型\">\n                        Previous<br>\n                        <span>iOS应用接收文件打开类型</span>\n                        </a>\n                    </li>\n                    \n                    \n                    <li class=\"next\">\n                        <a href=\"/2022/09/26/Github%E5%A4%9A%E8%B4%A6%E5%8F%B7%E9%85%8D%E7%BD%AESSH/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Github多账号配置SSH\">\n                        Next<br>\n                        <span>Github多账号配置SSH</span>\n                        </a>\n                    </li>\n                    \n                </ul>\n                <hr style=\"visibility: hidden;\">\n\n                \n                <!-- disqus 评论框 start -->\n                <div class=\"comment\">\n                    <div id=\"disqus_thread\" class=\"disqus-thread\"></div>\n                </div>\n                <!-- disqus 评论框 end -->\n                \n\n                \n            </div>  \n\n    <!-- Side Catalog Container -->\n        \n            <div class=\"\n                col-lg-2 col-lg-offset-0\n                visible-lg-block\n                sidebar-container\n                catalog-container\">\n                <div class=\"side-catalog\">\n                    <hr class=\"hidden-sm hidden-xs\">\n                    <h5>\n                        <a class=\"catalog-toggle\" href=\"#\">CATALOG</a>\n                    </h5>\n                    <ul class=\"catalog-body\"></ul>\n                </div>\n            </div>\n        \n\n    <!-- Sidebar Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                sidebar-container\">\n\n                <!-- Featured Tags -->\n                \n\n\n<section>\n    \n        <hr class=\"hidden-sm hidden-xs\">\n    \n    <h5><a href=\"/archive/\">FEATURED TAGS</a></h5>\n    <div class=\"tags\">\n        \n        \n        \n        \n        \n    </div>\n</section>\n\n\n                <!-- Friends Blog -->\n                \n            </div>\n        </div>\n    </div>\n</article>\n\n<!-- add support for mathjax by voleking-->\n\n\n\n\n\n\n<!-- disqus 公共JS代码 start (一个网页只需插入一次) -->\n<script type=\"text/javascript\">\n    /* * * CONFIGURATION VARIABLES * * */\n    var disqus_shortname = \"Cyp\";\n    var disqus_identifier = \"/2022/09/25/App瘦身实践之批量转换webp\";\n    var disqus_url = \"http://localhost:4000/2022/09/25/App%E7%98%A6%E8%BA%AB%E5%AE%9E%E8%B7%B5%E4%B9%8B%E6%89%B9%E9%87%8F%E8%BD%AC%E6%8D%A2webp/\";\n\n    (function() {\n        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;\n        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';\n        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);\n    })();\n</script>\n<!-- disqus 公共JS代码 end -->\n\n\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n      var d = document, t = 'script',\n          o = d.createElement(t),\n          s = d.getElementsByTagName(t)[0];\n      o.src = u;\n      if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n      s.parentNode.insertBefore(o, s);\n    }\n</script>\n<!-- anchor-js, Doc:http://bryanbraun.github.io/anchorjs/ -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/anchor-js/1.1.1/anchor.min.js\",function(){\n        anchors.options = {\n          visible: 'hover',\n          placement: 'right',\n          // icon: '#'\n        };\n        anchors.add().remove('.intro-header h1').remove('.subheading').remove('.sidebar-container h5');\n    })\n</script>\n<style>\n    /* place left on bigger screen */\n    @media all and (min-width: 800px) {\n        .anchorjs-link{\n            position: absolute;\n            left: -0.75em;\n            font-size: 1.1em;\n            margin-top : -0.1em;\n        }\n    }\n</style>\n\n\n\n    <!-- Footer -->\n<footer>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <!-- SNS Link -->\n                \n\n\n<ul class=\"list-inline text-center\">\n\n\n  \n  \n  \n  \n  \n  \n  \n</ul>\n\n                <p class=\"copyright text-muted\">\n                    Copyright &copy; PaysonChen Blog 2024\n                    <br>\n                    <!-- Powered by <a href=\"http://huangxuan.me\">Hux Blog</a> | -->\n                 <!--    <iframe style=\"margin-left: 2px; margin-bottom:-5px;\" frameborder=\"0\" scrolling=\"0\" width=\"100px\"\n                        height=\"20px\"\n                        src=\"https://ghbtns.com/github-btn.html?user=huxpro&repo=huxpro.github.io&type=star&count=true\">\n                    </iframe> -->\n                </p>\n            </div>\n        </div>\n    </div>\n</footer>\n\n<!-- jQuery -->\n<script src=\"/js/jquery.min.js \"></script>\n\n<!-- Bootstrap Core JavaScript -->\n<!-- Currently, only navbar scroll-down effect at desktop still depends on this -->\n<script src=\"/js/bootstrap.min.js \"></script>\n\n<!-- Custom Theme JavaScript -->\n<script src=\"/js/hux-blog.min.js \"></script>\n\n<!-- Simple Jekyll Search -->\n<script src=\"/js/simple-jekyll-search.min.js\"></script>\n\n<!-- Service Worker -->\n\n<script src=\"/js/snackbar.js \"></script>\n<script src=\"/js/sw-registration.js \"></script>\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n        var d = document, t = 'script',\n            o = d.createElement(t),\n            s = d.getElementsByTagName(t)[0];\n        o.src = u;\n        if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n        s.parentNode.insertBefore(o, s);\n    }\n</script>\n\n<!--\n     Because of the native support for backtick-style fenced code blocks\n     right within the Markdown is landed in Github Pages,\n     From V1.6, There is no need for Highlight.js,\n     so Huxblog drops it officially.\n\n     - https://github.com/blog/2100-github-pages-now-faster-and-simpler-with-jekyll-3-0\n     - https://help.github.com/articles/creating-and-highlighting-code-blocks/\n     - https://github.com/jneen/rouge/wiki/list-of-supported-languages-and-lexers\n-->\n<!--\n    <script>\n        async(\"http://cdn.bootcss.com/highlight.js/8.6/highlight.min.js\", function(){\n            hljs.initHighlightingOnLoad();\n        })\n    </script>\n    <link href=\"http://cdn.bootcss.com/highlight.js/8.6/styles/github.min.css\" rel=\"stylesheet\">\n-->\n\n\n\n\n\n\n\n<!--fastClick.js -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/fastclick/1.0.6/fastclick.min.js\", function () {\n        var $nav = document.querySelector(\"nav\");\n        if ($nav) FastClick.attach($nav);\n    })\n</script>\n\n\n<!-- Google Analytics -->\n\n\n\n<!-- Baidu Tongji -->\n\n\n\n<!-- Side Catalog -->\n\n<script type=\"text/javascript\">\n    function generateCatalog(selector) {\n\n        // interop with multilangual \n        if ('' == 'true') {\n            _containerSelector = 'div.post-container.active'\n        } else {\n            _containerSelector = 'div.post-container'\n        }\n\n        // init\n        var P = $(_containerSelector), a, n, t, l, i, c;\n        a = P.find('h1,h2,h3,h4,h5,h6');\n\n        // clean\n        $(selector).html('')\n\n        // appending\n        a.each(function () {\n            n = $(this).prop('tagName').toLowerCase();\n            i = \"#\" + $(this).prop('id');\n            t = $(this).text();\n            c = $('<a href=\"' + i + '\" rel=\"nofollow\">' + t + '</a>');\n            l = $('<li class=\"' + n + '_nav\"></li>').append(c);\n            $(selector).append(l);\n        });\n        return true;\n    }\n\n    generateCatalog(\".catalog-body\");\n\n    // toggle side catalog\n    $(\".catalog-toggle\").click((function (e) {\n        e.preventDefault();\n        $('.side-catalog').toggleClass(\"fold\")\n    }))\n\n    /*\n     * Doc: https://github.com/davist11/jQuery-One-Page-Nav\n     * Fork by Hux to support padding\n     */\n    async(\"/js/jquery.nav.js\", function () {\n        $('.catalog-body').onePageNav({\n            currentClass: \"active\",\n            changeHash: !1,\n            easing: \"swing\",\n            filter: \"\",\n            scrollSpeed: 700,\n            scrollOffset: 0,\n            scrollThreshold: .2,\n            begin: null,\n            end: null,\n            scrollChange: null,\n            padding: 80\n        });\n    });\n</script>\n\n\n\n<!-- Multi-Lingual -->\n\n\n<!-- Simple Jekyll Search -->\n<script>\n    // https://stackoverflow.com/questions/1912501/unescape-html-entities-in-javascript\n    function htmlDecode(input) {\n        var e = document.createElement('textarea');\n        e.innerHTML = input;\n        // handle case of empty input\n        return e.childNodes.length === 0 ? \"\" : e.childNodes[0].nodeValue;\n    }\n\n    SimpleJekyllSearch({\n        searchInput: document.getElementById('search-input'),\n        resultsContainer: document.getElementById('search-results'),\n        json: '/search.json',\n        searchResultTemplate: '<div class=\"post-preview item\"><a href=\"{url}\"><h2 class=\"post-title\">{title}</h2><h3 class=\"post-subtitle\">{subtitle}</h3><hr></a></div>',\n        noResultsText: 'No results',\n        limit: 50,\n        fuzzy: false,\n        // a hack to get escaped subtitle unescaped. for some reason, \n        // post.subtitle w/o escape filter nuke entire search.\n        templateMiddleware: function (prop, value, template) {\n            if (prop === 'subtitle' || prop === 'title') {\n                if (value.indexOf(\"code\")) {\n                    return htmlDecode(value);\n                } else {\n                    return value;\n                }\n            }\n        }\n    });\n\n    $(document).ready(function () {\n        var $searchPage = $('.search-page');\n        var $searchOpen = $('.search-icon');\n        var $searchClose = $('.search-icon-close');\n        var $searchInput = $('#search-input');\n        var $body = $('body');\n\n        $searchOpen.on('click', function (e) {\n            e.preventDefault();\n            $searchPage.toggleClass('search-active');\n            var prevClasses = $body.attr('class') || '';\n            setTimeout(function () {\n                $body.addClass('no-scroll');\n            }, 400)\n\n            if ($searchPage.hasClass('search-active')) {\n                $searchClose.on('click', function (e) {\n                    e.preventDefault();\n                    $searchPage.removeClass('search-active');\n                    $body.attr('class', prevClasses);  // from closure \n                });\n                $searchInput.focus();\n            }\n        });\n    });\n</script>\n\n\n<!-- Image to hack wechat -->\n<img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\" />\n<!-- Migrate from head to bottom, no longer block render and still work -->\n\n</body>\n\n</html>\n","excerpt":"<h2 id=\"0x00-背景\">0x00 背景</h2>\n","url":"/2022/09/25/App%E7%98%A6%E8%BA%AB%E5%AE%9E%E8%B7%B5%E4%B9%8B%E6%89%B9%E9%87%8F%E8%BD%AC%E6%8D%A2webp/","next":{"id":"/2022/09/26/Github多账号配置SSH","tags":[],"relative_path":"_posts/2022-09-26-Github多账号配置SSH.md","collection":"posts","content":"<h2 id=\"0x00-背景\">0x00 背景</h2>\n\n<p>​\t有时候需要多个github的账号，比如Github Page，如果有需要开多个可能就需要同时管理多个github账号</p>\n\n<h2 id=\"0x01-实践\">0x01 实践</h2>\n\n<p>​\t在ssh管理上使用常规的config配置文件:</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n</pre></td><td class=\"rouge-code\"><pre># github2\nHost XXX.github.com\nPort 22\nUser XXX\nHostName github.com\nPreferredAuthentications publickey\nIdentityFile ~/.ssh/id_rsa_github_XXX\n\n# github \nHost YYY.github.com\nPort 22\nUser YYY\nHostName github.com\nPreferredAuthentications publickey\nIdentityFile ~/.ssh/id_rsa_github_YYY\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>一开始还可以用</p>\n\n<h2 id=\"0x02-问题\">0x02 问题</h2>\n\n<p>过了一段时间想继续使用，发现出问题了</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n</pre></td><td class=\"rouge-code\"><pre>git clone git@github.com:nickname/web.git \n\n\nCloning into 'XXX.github.io'...\ngit@github.com: Permission denied (publickey).\nfatal: Could not read from remote repository.\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h2 id=\"0x03-解决\">0x03 解决</h2>\n\n<p>clone时 改为 git@other.github.com:nickname/web.git 即可</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>git@other.github.com:nickname/web.git \n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h2 id=\"0x04-其他问题\">0x04 其他问题</h2>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n</pre></td><td class=\"rouge-code\"><pre>Cloning into 'yyy'...\n/Users/xxxx/.ssh/config line 21: Bad key types 'publickey'.\n/Users/xxxx/.ssh/config: terminating, 1 bad configuration options\nfatal: Could not read from remote repository.\n\nPlease make sure you have the correct access rights\nand the repository exists.\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>此时表示 publickey 不符合这个仓库的加密类型尝试改成</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n</pre></td><td class=\"rouge-code\"><pre>PubkeyAcceptedAlgorithms publickey\n=&gt;\nPubkeyAcceptedAlgorithms +ssh-rsa\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n","name":"2022-09-26-Github多账号配置SSH.md","previous":{"id":"/2022/09/25/App瘦身实践之批量转换webp","tags":[],"relative_path":"_posts/2022-09-25-App瘦身实践之批量转换webp.md","collection":"posts","name":"2022-09-25-App瘦身实践之批量转换webp.md","url":"/2022/09/25/App%E7%98%A6%E8%BA%AB%E5%AE%9E%E8%B7%B5%E4%B9%8B%E6%89%B9%E9%87%8F%E8%BD%AC%E6%8D%A2webp/","title":"App瘦身实践之批量转换webp","date":"2022-09-25 00:00:00 +0800","categories":[],"path":"_posts/2022-09-25-App瘦身实践之批量转换webp.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/home-bg-geek.jpg","slug":"App瘦身实践之批量转换webp","ext":".md"},"output":"<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"google-site-verification\" content=\"xBT4GhYoi5qRD5tr338pgPM5OWHHIDR6mNg1a3euekI\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, viewport-fit=cover\">\n    <meta name=\"description\" content=\"与你一起发现更大的世界。\">\n    <meta name=\"keywords\"  content=\"PaysonChen,iOS,流媒体\">\n    <meta name=\"theme-color\" content=\"#000000\">\n    \n    <!-- Open Graph -->\n    <meta property=\"og:title\" content=\"Github多账号配置SSH - PaysonChen的博客 | PaysonChen Blog\">\n    \n    <meta property=\"og:type\" content=\"article\">\n    <meta property=\"og:description\" content=\"0x00 背景\n\">\n    \n    \n    <meta property=\"article:published_time\" content=\"2022-09-26T00:00:00Z\">\n    \n    \n    <meta property=\"article:author\" content=\"PaysonChen\">\n    \n    \n    \n    <meta property=\"og:image\" content=\"http://localhost:4000\">\n    <meta property=\"og:url\" content=\"http://localhost:4000/2022/09/26/Github%E5%A4%9A%E8%B4%A6%E5%8F%B7%E9%85%8D%E7%BD%AESSH/\">\n    <meta property=\"og:site_name\" content=\"PaysonChen的博客 | PaysonChen Blog\">\n    \n    <title>Github多账号配置SSH - PaysonChen的博客 | PaysonChen Blog</title>\n\n    <!-- Web App Manifest -->\n    <link rel=\"manifest\" href=\"/pwa/manifest.json\">\n\n    <!-- Favicon -->\n    <link rel=\"shortcut icon\" href=\"/img/favicon.ico\">\n    \n    <!-- Canonical URL -->\n    <link rel=\"canonical\" href=\"http://localhost:4000/2022/09/26/Github%E5%A4%9A%E8%B4%A6%E5%8F%B7%E9%85%8D%E7%BD%AESSH/\">\n\n    <!-- Bootstrap Core CSS -->\n    <link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\">\n\n    <!-- Custom CSS -->\n    <link rel=\"stylesheet\" href=\"/css/hux-blog.min.css\">\n\n    <!-- Custom Fonts -->\n    <!-- <link href=\"http://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\"> -->\n    <!-- Hux change font-awesome CDN to qiniu -->\n    <link href=\"//cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\">\n\n\n    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->\n    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->\n    <!--[if lt IE 9]>\n        <script src=\"https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js\"></script>\n        <script src=\"https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js\"></script>\n    <![endif]-->\n\n    <!-- ga & ba script hoook -->\n    <script></script>\n</head>\n\n\n<!-- hack iOS CSS :active style -->\n<body ontouchstart=\"\">\n\n    <!-- Navigation -->\n\n    <nav class=\"navbar navbar-default navbar-custom navbar-fixed-top\">\n        \n        <div class=\"container-fluid\">\n            <!-- Brand and toggle get grouped for better mobile display -->\n            <div class=\"navbar-header page-scroll\">\n                <button type=\"button\" class=\"navbar-toggle\">\n                    <span class=\"sr-only\">Toggle navigation</span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                </button>\n                <a class=\"navbar-brand\" href=\"/\">PaysonChen Blog</a>\n            </div>\n\n            <!-- Collect the nav links, forms, and other content for toggling -->\n            <div id=\"huxblog_navbar\">\n                <div class=\"navbar-collapse\">\n                    <ul class=\"nav navbar-nav navbar-right\">\n                        <li>\n                            <a href=\"/\">Home</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        <li>\n                            <a href=\"/about/\">About</a>\n                        </li>\n                        \n                        \n                        \n                        <li>\n                            <a href=\"/archive/\">Archive</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        <li class=\"search-icon\">\n                            <a href=\"javascript:void(0)\">\n                                <i class=\"fa fa-search\"></i>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n            <!-- /.navbar-collapse -->\n        </div>\n        <!-- /.container -->\n    </nav>\n\n    <script>\n        // Drop Bootstarp low-performance Navbar\n        // Use customize navbar with high-quality material design animation\n        // in high-perf jank-free CSS3 implementation\n        var $body = document.body;\n        var $toggle = document.querySelector('.navbar-toggle');\n        var $navbar = document.querySelector('#huxblog_navbar');\n        var $collapse = document.querySelector('.navbar-collapse');\n\n        var __HuxNav__ = {\n            close: function () {\n                $navbar.className = \" \";\n                // wait until animation end.\n                setTimeout(function () {\n                    // prevent frequently toggle\n                    if ($navbar.className.indexOf('in') < 0) {\n                        $collapse.style.height = \"0px\"\n                    }\n                }, 400)\n            },\n            open: function () {\n                $collapse.style.height = \"auto\"\n                $navbar.className += \" in\";\n            }\n        }\n\n        // Bind Event\n        $toggle.addEventListener('click', function (e) {\n            if ($navbar.className.indexOf('in') > 0) {\n                __HuxNav__.close()\n            } else {\n                __HuxNav__.open()\n            }\n        })\n\n        /**\n         * Since Fastclick is used to delegate 'touchstart' globally\n         * to hack 300ms delay in iOS by performing a fake 'click',\n         * Using 'e.stopPropagation' to stop 'touchstart' event from \n         * $toggle/$collapse will break global delegation.\n         * \n         * Instead, we use a 'e.target' filter to prevent handler\n         * added to document close HuxNav.  \n         *\n         * Also, we use 'click' instead of 'touchstart' as compromise\n         */\n        document.addEventListener('click', function (e) {\n            if (e.target == $toggle) return;\n            if (e.target.className == 'icon-bar') return;\n            __HuxNav__.close();\n        })\n    </script>\n    <!-- Search -->\n<div class=\"search-page\">\n  <div class=\"search-icon-close-container\">\n    <span class=\"search-icon-close\">\n      <i class=\"fa fa-chevron-down\"></i>\n    </span>\n  </div>\n  <div class=\"search-main container\">\n    <div class=\"row\">\n      <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n        <form></form>\n        <input type=\"text\" id=\"search-input\" placeholder=\"$ grep...\">\n        </form>\n        <div id=\"search-results\" class=\"mini-post-list\"></div>\n      </div>\n    </div>\n  </div>\n</div>\n\n    <!-- Image to hack wechat -->\n<!-- <img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\"> -->\n<!-- <img src=\"/img/home-bg-geek.jpg\" width=\"0\" height=\"0\"> -->\n\n<!-- Post Header -->\n\n\n\n<style type=\"text/css\">\n    header.intro-header{\n        position: relative;\n        background-image: url('/img/home-bg-geek.jpg');\n        background: ;\n    }\n\n    \n</style>\n\n<header class=\"intro-header\" >\n\n    <div class=\"header-mask\"></div>\n    \n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <div class=\"post-heading\">\n                    <div class=\"tags\">\n                        \n                    </div>\n                    <h1>Github多账号配置SSH</h1>\n                    \n                    <h2 class=\"subheading\"></h2>\n                    <span class=\"meta\">Posted by PaysonChen on September 26, 2022</span>\n                </div>\n            </div>\n        </div>\n    </div>\n</header>\n\n\n\n\n\n\n<!-- Post Content -->\n<article>\n    <div class=\"container\">\n        <div class=\"row\">\n\n    <!-- Post Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                post-container\">\n\n                <!-- Multi-Lingual -->\n                \n\n\t\t\t\t<h2 id=\"0x00-背景\">0x00 背景</h2>\n\n<p>​\t有时候需要多个github的账号，比如Github Page，如果有需要开多个可能就需要同时管理多个github账号</p>\n\n<h2 id=\"0x01-实践\">0x01 实践</h2>\n\n<p>​\t在ssh管理上使用常规的config配置文件:</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n</pre></td><td class=\"rouge-code\"><pre># github2\nHost XXX.github.com\nPort 22\nUser XXX\nHostName github.com\nPreferredAuthentications publickey\nIdentityFile ~/.ssh/id_rsa_github_XXX\n\n# github \nHost YYY.github.com\nPort 22\nUser YYY\nHostName github.com\nPreferredAuthentications publickey\nIdentityFile ~/.ssh/id_rsa_github_YYY\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>一开始还可以用</p>\n\n<h2 id=\"0x02-问题\">0x02 问题</h2>\n\n<p>过了一段时间想继续使用，发现出问题了</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n</pre></td><td class=\"rouge-code\"><pre>git clone git@github.com:nickname/web.git \n\n\nCloning into 'XXX.github.io'...\ngit@github.com: Permission denied (publickey).\nfatal: Could not read from remote repository.\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h2 id=\"0x03-解决\">0x03 解决</h2>\n\n<p>clone时 改为 git@other.github.com:nickname/web.git 即可</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>git@other.github.com:nickname/web.git \n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h2 id=\"0x04-其他问题\">0x04 其他问题</h2>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n</pre></td><td class=\"rouge-code\"><pre>Cloning into 'yyy'...\n/Users/xxxx/.ssh/config line 21: Bad key types 'publickey'.\n/Users/xxxx/.ssh/config: terminating, 1 bad configuration options\nfatal: Could not read from remote repository.\n\nPlease make sure you have the correct access rights\nand the repository exists.\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>此时表示 publickey 不符合这个仓库的加密类型尝试改成</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n</pre></td><td class=\"rouge-code\"><pre>PubkeyAcceptedAlgorithms publickey\n=&gt;\nPubkeyAcceptedAlgorithms +ssh-rsa\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n\n\n                <hr style=\"visibility: hidden;\">\n                <ul class=\"pager\">\n                    \n                    <li class=\"previous\">\n                        <a href=\"/2022/09/25/App%E7%98%A6%E8%BA%AB%E5%AE%9E%E8%B7%B5%E4%B9%8B%E6%89%B9%E9%87%8F%E8%BD%AC%E6%8D%A2webp/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"App瘦身实践之批量转换webp\">\n                        Previous<br>\n                        <span>App瘦身实践之批量转换webp</span>\n                        </a>\n                    </li>\n                    \n                    \n                    <li class=\"next\">\n                        <a href=\"/2023/07/14/iOS%E7%BB%84%E4%BB%B6%E5%8C%96%E5%AE%9E%E8%B7%B5%E4%B8%80_%E5%BA%8F%E8%A8%80/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"iOS组件化实践一：序言\">\n                        Next<br>\n                        <span>iOS组件化实践一：序言</span>\n                        </a>\n                    </li>\n                    \n                </ul>\n                <hr style=\"visibility: hidden;\">\n\n                \n                <!-- disqus 评论框 start -->\n                <div class=\"comment\">\n                    <div id=\"disqus_thread\" class=\"disqus-thread\"></div>\n                </div>\n                <!-- disqus 评论框 end -->\n                \n\n                \n            </div>  \n\n    <!-- Side Catalog Container -->\n        \n            <div class=\"\n                col-lg-2 col-lg-offset-0\n                visible-lg-block\n                sidebar-container\n                catalog-container\">\n                <div class=\"side-catalog\">\n                    <hr class=\"hidden-sm hidden-xs\">\n                    <h5>\n                        <a class=\"catalog-toggle\" href=\"#\">CATALOG</a>\n                    </h5>\n                    <ul class=\"catalog-body\"></ul>\n                </div>\n            </div>\n        \n\n    <!-- Sidebar Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                sidebar-container\">\n\n                <!-- Featured Tags -->\n                \n\n\n<section>\n    \n        <hr class=\"hidden-sm hidden-xs\">\n    \n    <h5><a href=\"/archive/\">FEATURED TAGS</a></h5>\n    <div class=\"tags\">\n        \n        \n        \n        \n        \n    </div>\n</section>\n\n\n                <!-- Friends Blog -->\n                \n            </div>\n        </div>\n    </div>\n</article>\n\n<!-- add support for mathjax by voleking-->\n\n\n\n\n\n\n<!-- disqus 公共JS代码 start (一个网页只需插入一次) -->\n<script type=\"text/javascript\">\n    /* * * CONFIGURATION VARIABLES * * */\n    var disqus_shortname = \"Cyp\";\n    var disqus_identifier = \"/2022/09/26/Github多账号配置SSH\";\n    var disqus_url = \"http://localhost:4000/2022/09/26/Github%E5%A4%9A%E8%B4%A6%E5%8F%B7%E9%85%8D%E7%BD%AESSH/\";\n\n    (function() {\n        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;\n        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';\n        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);\n    })();\n</script>\n<!-- disqus 公共JS代码 end -->\n\n\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n      var d = document, t = 'script',\n          o = d.createElement(t),\n          s = d.getElementsByTagName(t)[0];\n      o.src = u;\n      if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n      s.parentNode.insertBefore(o, s);\n    }\n</script>\n<!-- anchor-js, Doc:http://bryanbraun.github.io/anchorjs/ -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/anchor-js/1.1.1/anchor.min.js\",function(){\n        anchors.options = {\n          visible: 'hover',\n          placement: 'right',\n          // icon: '#'\n        };\n        anchors.add().remove('.intro-header h1').remove('.subheading').remove('.sidebar-container h5');\n    })\n</script>\n<style>\n    /* place left on bigger screen */\n    @media all and (min-width: 800px) {\n        .anchorjs-link{\n            position: absolute;\n            left: -0.75em;\n            font-size: 1.1em;\n            margin-top : -0.1em;\n        }\n    }\n</style>\n\n\n\n    <!-- Footer -->\n<footer>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <!-- SNS Link -->\n                \n\n\n<ul class=\"list-inline text-center\">\n\n\n  \n  \n  \n  \n  \n  \n  \n</ul>\n\n                <p class=\"copyright text-muted\">\n                    Copyright &copy; PaysonChen Blog 2024\n                    <br>\n                    <!-- Powered by <a href=\"http://huangxuan.me\">Hux Blog</a> | -->\n                 <!--    <iframe style=\"margin-left: 2px; margin-bottom:-5px;\" frameborder=\"0\" scrolling=\"0\" width=\"100px\"\n                        height=\"20px\"\n                        src=\"https://ghbtns.com/github-btn.html?user=huxpro&repo=huxpro.github.io&type=star&count=true\">\n                    </iframe> -->\n                </p>\n            </div>\n        </div>\n    </div>\n</footer>\n\n<!-- jQuery -->\n<script src=\"/js/jquery.min.js \"></script>\n\n<!-- Bootstrap Core JavaScript -->\n<!-- Currently, only navbar scroll-down effect at desktop still depends on this -->\n<script src=\"/js/bootstrap.min.js \"></script>\n\n<!-- Custom Theme JavaScript -->\n<script src=\"/js/hux-blog.min.js \"></script>\n\n<!-- Simple Jekyll Search -->\n<script src=\"/js/simple-jekyll-search.min.js\"></script>\n\n<!-- Service Worker -->\n\n<script src=\"/js/snackbar.js \"></script>\n<script src=\"/js/sw-registration.js \"></script>\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n        var d = document, t = 'script',\n            o = d.createElement(t),\n            s = d.getElementsByTagName(t)[0];\n        o.src = u;\n        if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n        s.parentNode.insertBefore(o, s);\n    }\n</script>\n\n<!--\n     Because of the native support for backtick-style fenced code blocks\n     right within the Markdown is landed in Github Pages,\n     From V1.6, There is no need for Highlight.js,\n     so Huxblog drops it officially.\n\n     - https://github.com/blog/2100-github-pages-now-faster-and-simpler-with-jekyll-3-0\n     - https://help.github.com/articles/creating-and-highlighting-code-blocks/\n     - https://github.com/jneen/rouge/wiki/list-of-supported-languages-and-lexers\n-->\n<!--\n    <script>\n        async(\"http://cdn.bootcss.com/highlight.js/8.6/highlight.min.js\", function(){\n            hljs.initHighlightingOnLoad();\n        })\n    </script>\n    <link href=\"http://cdn.bootcss.com/highlight.js/8.6/styles/github.min.css\" rel=\"stylesheet\">\n-->\n\n\n\n\n\n\n\n<!--fastClick.js -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/fastclick/1.0.6/fastclick.min.js\", function () {\n        var $nav = document.querySelector(\"nav\");\n        if ($nav) FastClick.attach($nav);\n    })\n</script>\n\n\n<!-- Google Analytics -->\n\n\n\n<!-- Baidu Tongji -->\n\n\n\n<!-- Side Catalog -->\n\n<script type=\"text/javascript\">\n    function generateCatalog(selector) {\n\n        // interop with multilangual \n        if ('' == 'true') {\n            _containerSelector = 'div.post-container.active'\n        } else {\n            _containerSelector = 'div.post-container'\n        }\n\n        // init\n        var P = $(_containerSelector), a, n, t, l, i, c;\n        a = P.find('h1,h2,h3,h4,h5,h6');\n\n        // clean\n        $(selector).html('')\n\n        // appending\n        a.each(function () {\n            n = $(this).prop('tagName').toLowerCase();\n            i = \"#\" + $(this).prop('id');\n            t = $(this).text();\n            c = $('<a href=\"' + i + '\" rel=\"nofollow\">' + t + '</a>');\n            l = $('<li class=\"' + n + '_nav\"></li>').append(c);\n            $(selector).append(l);\n        });\n        return true;\n    }\n\n    generateCatalog(\".catalog-body\");\n\n    // toggle side catalog\n    $(\".catalog-toggle\").click((function (e) {\n        e.preventDefault();\n        $('.side-catalog').toggleClass(\"fold\")\n    }))\n\n    /*\n     * Doc: https://github.com/davist11/jQuery-One-Page-Nav\n     * Fork by Hux to support padding\n     */\n    async(\"/js/jquery.nav.js\", function () {\n        $('.catalog-body').onePageNav({\n            currentClass: \"active\",\n            changeHash: !1,\n            easing: \"swing\",\n            filter: \"\",\n            scrollSpeed: 700,\n            scrollOffset: 0,\n            scrollThreshold: .2,\n            begin: null,\n            end: null,\n            scrollChange: null,\n            padding: 80\n        });\n    });\n</script>\n\n\n\n<!-- Multi-Lingual -->\n\n\n<!-- Simple Jekyll Search -->\n<script>\n    // https://stackoverflow.com/questions/1912501/unescape-html-entities-in-javascript\n    function htmlDecode(input) {\n        var e = document.createElement('textarea');\n        e.innerHTML = input;\n        // handle case of empty input\n        return e.childNodes.length === 0 ? \"\" : e.childNodes[0].nodeValue;\n    }\n\n    SimpleJekyllSearch({\n        searchInput: document.getElementById('search-input'),\n        resultsContainer: document.getElementById('search-results'),\n        json: '/search.json',\n        searchResultTemplate: '<div class=\"post-preview item\"><a href=\"{url}\"><h2 class=\"post-title\">{title}</h2><h3 class=\"post-subtitle\">{subtitle}</h3><hr></a></div>',\n        noResultsText: 'No results',\n        limit: 50,\n        fuzzy: false,\n        // a hack to get escaped subtitle unescaped. for some reason, \n        // post.subtitle w/o escape filter nuke entire search.\n        templateMiddleware: function (prop, value, template) {\n            if (prop === 'subtitle' || prop === 'title') {\n                if (value.indexOf(\"code\")) {\n                    return htmlDecode(value);\n                } else {\n                    return value;\n                }\n            }\n        }\n    });\n\n    $(document).ready(function () {\n        var $searchPage = $('.search-page');\n        var $searchOpen = $('.search-icon');\n        var $searchClose = $('.search-icon-close');\n        var $searchInput = $('#search-input');\n        var $body = $('body');\n\n        $searchOpen.on('click', function (e) {\n            e.preventDefault();\n            $searchPage.toggleClass('search-active');\n            var prevClasses = $body.attr('class') || '';\n            setTimeout(function () {\n                $body.addClass('no-scroll');\n            }, 400)\n\n            if ($searchPage.hasClass('search-active')) {\n                $searchClose.on('click', function (e) {\n                    e.preventDefault();\n                    $searchPage.removeClass('search-active');\n                    $body.attr('class', prevClasses);  // from closure \n                });\n                $searchInput.focus();\n            }\n        });\n    });\n</script>\n\n\n<!-- Image to hack wechat -->\n<img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\" />\n<!-- Migrate from head to bottom, no longer block render and still work -->\n\n</body>\n\n</html>\n","excerpt":"<h2 id=\"0x00-背景\">0x00 背景</h2>\n","url":"/2022/09/26/Github%E5%A4%9A%E8%B4%A6%E5%8F%B7%E9%85%8D%E7%BD%AESSH/","next":{"id":"/2023/07/14/iOS组件化实践一_序言","tags":[],"relative_path":"_posts/2023-07-14-iOS组件化实践一_序言.md","collection":"posts","name":"2023-07-14-iOS组件化实践一_序言.md","url":"/2023/07/14/iOS%E7%BB%84%E4%BB%B6%E5%8C%96%E5%AE%9E%E8%B7%B5%E4%B8%80_%E5%BA%8F%E8%A8%80/","title":"iOS组件化实践一：序言","date":"2023-07-14 00:00:00 +0800","categories":[],"path":"_posts/2023-07-14-iOS组件化实践一_序言.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/home-bg-geek.jpg","slug":"iOS组件化实践一_序言","ext":".md"},"title":"Github多账号配置SSH","date":"2022-09-26 00:00:00 +0800","categories":[],"path":"_posts/2022-09-26-Github多账号配置SSH.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/home-bg-geek.jpg","slug":"Github多账号配置SSH","ext":".md"},"title":"App瘦身实践之批量转换webp","date":"2022-09-25 00:00:00 +0800","categories":[],"path":"_posts/2022-09-25-App瘦身实践之批量转换webp.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/home-bg-geek.jpg","slug":"App瘦身实践之批量转换webp","ext":".md"},{"id":"/2022/01/19/iOS-OpenType","tags":[],"relative_path":"_posts/2022-01-19-iOS-OpenType.md","collection":"posts","content":"<h2 id=\"0x00-背景\">0x00 背景</h2>\n\n<p>​\tK歌音频上传工具1.0需求调研，在探索上传的几种方式当中，涉及到引导用户从QQ微信打开，并提供能力。这就牵涉到从其他应用讲音视频文件导入（打开/传入）到K歌的需要。</p>\n\n<h2 id=\"0x01-技术方案\">0x01 技术方案</h2>\n\n<p>​\t通过设置Xcode Document Types，可以设置项目可接收的文件类型，附带一份：<a href=\"https://developer.apple.com/library/archive/documentation/Miscellaneous/Reference/UTIRef/Articles/System-DeclaredUniformTypeIdentifiers.html#//apple_ref/doc/uid/TP40009259-SW1\">官方提供的文件类型列表</a>。</p>\n\n<p>​\t<img src=\"/img/2022-01-19-iOS-OpenType/doctypes.png\" alt=\"\" /></p>\n\n<h2 id=\"0x02-项目实现\">0x02 项目实现</h2>\n\n<p>当前iOS应用的生命周期管理有以下两种方式</p>\n\n<ul>\n  <li>\n    <h5 id=\"uiapplicationdelegate\">UIApplicationDelegate</h5>\n\n    <p>iOS13之前，Appdelegate的职责全权处理App生命周期和UI生命周期：</p>\n\n    <p><img src=\"/img/2022-01-19-iOS-OpenType/appdelegate.jpg\" alt=\"\" /></p>\n\n    <p>在不需要多Window场景下，在AppDelegate中实现</p>\n\n    <div class=\"language-objc highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n</pre></td><td class=\"rouge-code\"><pre><span class=\"k\">-</span><span class=\"p\">(</span><span class=\"n\">BOOL</span><span class=\"p\">)</span><span class=\"nf\">application</span><span class=\"p\">:(</span><span class=\"n\">UIApplication</span> <span class=\"o\">*</span><span class=\"p\">)</span><span class=\"nv\">app</span> <span class=\"nf\">openURL</span><span class=\"p\">:(</span><span class=\"n\">NSURL</span> <span class=\"o\">*</span><span class=\"p\">)</span><span class=\"nv\">url</span> <span class=\"nf\">options</span><span class=\"p\">:(</span><span class=\"n\">NSDictionary</span><span class=\"o\">&lt;</span><span class=\"n\">UIApplicationOpenURLOptionsKey</span><span class=\"p\">,</span><span class=\"n\">id</span><span class=\"o\">&gt;</span> <span class=\"o\">*</span><span class=\"p\">)</span><span class=\"nv\">options</span> <span class=\"p\">{</span>\n    <span class=\"n\">NSLog</span><span class=\"p\">(</span><span class=\"s\">@\"url=%@---options=%@\"</span><span class=\"p\">,</span> <span class=\"n\">url</span><span class=\"p\">,</span> <span class=\"n\">options</span><span class=\"p\">);</span>\n    <span class=\"k\">return</span> <span class=\"nb\">YES</span>\n<span class=\"p\">}</span>\n</pre></td></tr></tbody></table></code></pre></div>    </div>\n\n    <p>输出：</p>\n\n    <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n</pre></td><td class=\"rouge-code\"><pre>url=file:///private/var/mobile/Containers/Data/Application/32D902CA-E0EB-487B-8C08-8C5A277967E3/Documents/Inbox/RPReplay_Final1641554324-31.MP3---options={\n    UIApplicationOpenURLOptionsOpenInPlaceKey = 0;\n}\n</pre></td></tr></tbody></table></code></pre></div>    </div>\n  </li>\n  <li>\n    <h4 id=\"uiwindowscenedelegate\">UIWindowSceneDelegate</h4>\n  </li>\n</ul>\n\n<p>​\tiOS13之后，<code class=\"language-plaintext highlighter-rouge\">Appdelegate</code>不在负责UI生命周期，所有UI生命周期交给<code class=\"language-plaintext highlighter-rouge\">SceneDelegate</code>处理：</p>\n\n<p><img src=\"/img/2022-01-19-iOS-OpenType/scene_Appdelegate.jpg\" alt=\"\" /></p>\n\n<p><img src=\"/img/2022-01-19-iOS-OpenType/scene_delegate.jpg\" alt=\"\" /></p>\n\n<p>在SceneDelegate场景中实现回调监听：</p>\n\n<pre><code class=\"language-objective-c\">- (void)scene:(UIScene *)scene openURLContexts:(NSSet&lt;UIOpenURLContext *&gt; *)URLContexts {\n    NSLog(@\"scene = %@\", URLContexts);\n}\n</code></pre>\n\n<p>输出：</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n</pre></td><td class=\"rouge-code\"><pre>{(\n    &lt;UIOpenURLContext: 0x2817cc760; URL: file:///private/var/mobile/Containers/Data/Application/F63608F2-7BA5-4374-9ADB-6D6B1135C771/Documents/Inbox/RPReplay_Final1641554324-20.MP3; options: &lt;UISceneOpenURLOptions: 0x2802b09c0; sourceApp: (null); annotation: (null); openInPlace: NO; _eventAttribution: (null)&gt;&gt;\n)}\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h2 id=\"0x03-备注\">0x03 备注</h2>\n\n<h4 id=\"音频文件导入\">音频文件导入：</h4>\n\n<p>QQ分享的音频可以支持其他应用打开，导入到第三方应用</p>\n\n<p>微信分享的音频可以支持其他应用打开，导入到第三方应用</p>\n\n<h4 id=\"视频文件导入\">视频文件导入：</h4>\n\n<p>QQ分享的视频可以支持其他应用打开，导入到第三方应用</p>\n\n<p>微信分享的视频无法导入</p>\n\n<h2 id=\"0x04-补充资料\">0x04 补充资料</h2>\n\n<p>Document Types Data包含关系如下：</p>\n\n<p><img src=\"/img/2022-01-19-iOS-OpenType/public.data.gif\" alt=\"\" /></p>\n\n<p>各类型说明：<a href=\"https://developer.apple.com/library/archive/documentation/Miscellaneous/Reference/UTIRef/Articles/System-DeclaredUniformTypeIdentifiers.html#//apple_ref/doc/uid/TP40009259-SW1\">iOS系统更多应用打开</a></p>\n\n","name":"2022-01-19-iOS-OpenType.md","previous":{"id":"/2021/10/18/git","tags":[],"relative_path":"_posts/2021-10-18-git.md","collection":"posts","content":"<h2 id=\"1常规多账号\">1、常规多账号</h2>\n\n<p>不同host的代码仓库之间的多账号SSH配置，网上的资料很多，这里简单找一个 <a href=\"https://www.jianshu.com/p/92d207964061\">配置多个SSH</a>。</p>\n\n<h2 id=\"2多个github账号\">2、多个Github账号</h2>\n\n<p>由于申请了多个域名，配置同一个github账号下的gitpage出现了异常，我想大概也是因为CNAME或者其他原因。尝试重新申请一个github账号分开管理也行。</p>\n\n<p>之前账号github是用ssh配置的，新账号也尝试用ssh配置，</p>\n\n<p>重新生成新的ssk-key，也配置了config文件</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n</pre></td><td class=\"rouge-code\"><pre># github2\nHost a.github.com\nPort 22\nUser a\nHostName github.com\nPreferredAuthentications publickey\nIdentityFile ~/.ssh/id_rsa_github_a\n\n# github \nHost b.github.com\nPort 22\nUser b\nHostName github.com\nPreferredAuthentications publickea\nIdentityFile ~/.ssh/id_rsa_github_b\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>clone b仓库的代码，提交代码时提示</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n</pre></td><td class=\"rouge-code\"><pre>ERROR: Permission to B/payson.github.io.git denied to A.\nfatal: Could not read from remote repository.\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>就是提交时默认账号是A</p>\n\n<p>如果改成B呢，公钥私钥没问题，config也配了，</p>\n\n<p>最后查找资料发现，需要改Host</p>\n\n<p>将仓库B的远程Host，加上config配置的 b.github.com</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>origin:git@b.github.com:b/payson.github.io.git\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>使Host与config的Host对应</p>\n\n","name":"2021-10-18-git.md","previous":{"id":"/2021/09/13/crash","tags":[],"relative_path":"_posts/2021-09-13-crash.md","collection":"posts","name":"2021-09-13-crash.md","url":"/2021/09/13/crash/","title":"iOS 10.x 内存Crash 排查 纪要","date":"2021-09-13 00:00:00 +0800","categories":[],"path":"_posts/2021-09-13-crash.md","draft":false,"layout":"post","subtitle":"This is a subtitle","author":"PaysonChen","header-img":"img/post-bg-ios9-web.jpg","slug":"crash","ext":".md"},"output":"<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"google-site-verification\" content=\"xBT4GhYoi5qRD5tr338pgPM5OWHHIDR6mNg1a3euekI\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, viewport-fit=cover\">\n    <meta name=\"description\" content=\"与你一起发现更大的世界。\">\n    <meta name=\"keywords\"  content=\"PaysonChen,iOS,流媒体\">\n    <meta name=\"theme-color\" content=\"#000000\">\n    \n    <!-- Open Graph -->\n    <meta property=\"og:title\" content=\"多账号配置GIT - PaysonChen的博客 | PaysonChen Blog\">\n    \n    <meta property=\"og:type\" content=\"article\">\n    <meta property=\"og:description\" content=\"1、常规多账号\n\">\n    \n    \n    <meta property=\"article:published_time\" content=\"2021-10-18T00:00:00Z\">\n    \n    \n    <meta property=\"article:author\" content=\"PaysonChen\">\n    \n    \n    \n    <meta property=\"og:image\" content=\"http://localhost:4000\">\n    <meta property=\"og:url\" content=\"http://localhost:4000/2021/10/18/git/\">\n    <meta property=\"og:site_name\" content=\"PaysonChen的博客 | PaysonChen Blog\">\n    \n    <title>多账号配置GIT - PaysonChen的博客 | PaysonChen Blog</title>\n\n    <!-- Web App Manifest -->\n    <link rel=\"manifest\" href=\"/pwa/manifest.json\">\n\n    <!-- Favicon -->\n    <link rel=\"shortcut icon\" href=\"/img/favicon.ico\">\n    \n    <!-- Canonical URL -->\n    <link rel=\"canonical\" href=\"http://localhost:4000/2021/10/18/git/\">\n\n    <!-- Bootstrap Core CSS -->\n    <link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\">\n\n    <!-- Custom CSS -->\n    <link rel=\"stylesheet\" href=\"/css/hux-blog.min.css\">\n\n    <!-- Custom Fonts -->\n    <!-- <link href=\"http://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\"> -->\n    <!-- Hux change font-awesome CDN to qiniu -->\n    <link href=\"//cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\">\n\n\n    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->\n    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->\n    <!--[if lt IE 9]>\n        <script src=\"https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js\"></script>\n        <script src=\"https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js\"></script>\n    <![endif]-->\n\n    <!-- ga & ba script hoook -->\n    <script></script>\n</head>\n\n\n<!-- hack iOS CSS :active style -->\n<body ontouchstart=\"\">\n\n    <!-- Navigation -->\n\n    <nav class=\"navbar navbar-default navbar-custom navbar-fixed-top\">\n        \n        <div class=\"container-fluid\">\n            <!-- Brand and toggle get grouped for better mobile display -->\n            <div class=\"navbar-header page-scroll\">\n                <button type=\"button\" class=\"navbar-toggle\">\n                    <span class=\"sr-only\">Toggle navigation</span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                </button>\n                <a class=\"navbar-brand\" href=\"/\">PaysonChen Blog</a>\n            </div>\n\n            <!-- Collect the nav links, forms, and other content for toggling -->\n            <div id=\"huxblog_navbar\">\n                <div class=\"navbar-collapse\">\n                    <ul class=\"nav navbar-nav navbar-right\">\n                        <li>\n                            <a href=\"/\">Home</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        <li>\n                            <a href=\"/about/\">About</a>\n                        </li>\n                        \n                        \n                        \n                        <li>\n                            <a href=\"/archive/\">Archive</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        <li class=\"search-icon\">\n                            <a href=\"javascript:void(0)\">\n                                <i class=\"fa fa-search\"></i>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n            <!-- /.navbar-collapse -->\n        </div>\n        <!-- /.container -->\n    </nav>\n\n    <script>\n        // Drop Bootstarp low-performance Navbar\n        // Use customize navbar with high-quality material design animation\n        // in high-perf jank-free CSS3 implementation\n        var $body = document.body;\n        var $toggle = document.querySelector('.navbar-toggle');\n        var $navbar = document.querySelector('#huxblog_navbar');\n        var $collapse = document.querySelector('.navbar-collapse');\n\n        var __HuxNav__ = {\n            close: function () {\n                $navbar.className = \" \";\n                // wait until animation end.\n                setTimeout(function () {\n                    // prevent frequently toggle\n                    if ($navbar.className.indexOf('in') < 0) {\n                        $collapse.style.height = \"0px\"\n                    }\n                }, 400)\n            },\n            open: function () {\n                $collapse.style.height = \"auto\"\n                $navbar.className += \" in\";\n            }\n        }\n\n        // Bind Event\n        $toggle.addEventListener('click', function (e) {\n            if ($navbar.className.indexOf('in') > 0) {\n                __HuxNav__.close()\n            } else {\n                __HuxNav__.open()\n            }\n        })\n\n        /**\n         * Since Fastclick is used to delegate 'touchstart' globally\n         * to hack 300ms delay in iOS by performing a fake 'click',\n         * Using 'e.stopPropagation' to stop 'touchstart' event from \n         * $toggle/$collapse will break global delegation.\n         * \n         * Instead, we use a 'e.target' filter to prevent handler\n         * added to document close HuxNav.  \n         *\n         * Also, we use 'click' instead of 'touchstart' as compromise\n         */\n        document.addEventListener('click', function (e) {\n            if (e.target == $toggle) return;\n            if (e.target.className == 'icon-bar') return;\n            __HuxNav__.close();\n        })\n    </script>\n    <!-- Search -->\n<div class=\"search-page\">\n  <div class=\"search-icon-close-container\">\n    <span class=\"search-icon-close\">\n      <i class=\"fa fa-chevron-down\"></i>\n    </span>\n  </div>\n  <div class=\"search-main container\">\n    <div class=\"row\">\n      <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n        <form></form>\n        <input type=\"text\" id=\"search-input\" placeholder=\"$ grep...\">\n        </form>\n        <div id=\"search-results\" class=\"mini-post-list\"></div>\n      </div>\n    </div>\n  </div>\n</div>\n\n    <!-- Image to hack wechat -->\n<!-- <img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\"> -->\n<!-- <img src=\"/img/post-bg-2015.jpg\" width=\"0\" height=\"0\"> -->\n\n<!-- Post Header -->\n\n\n\n<style type=\"text/css\">\n    header.intro-header{\n        position: relative;\n        background-image: url('/img/post-bg-2015.jpg');\n        background: ;\n    }\n\n    \n</style>\n\n<header class=\"intro-header\" >\n\n    <div class=\"header-mask\"></div>\n    \n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <div class=\"post-heading\">\n                    <div class=\"tags\">\n                        \n                    </div>\n                    <h1>多账号配置GIT</h1>\n                    \n                    <h2 class=\"subheading\"></h2>\n                    <span class=\"meta\">Posted by PaysonChen on October 18, 2021</span>\n                </div>\n            </div>\n        </div>\n    </div>\n</header>\n\n\n\n\n\n\n<!-- Post Content -->\n<article>\n    <div class=\"container\">\n        <div class=\"row\">\n\n    <!-- Post Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                post-container\">\n\n                <!-- Multi-Lingual -->\n                \n\n\t\t\t\t<h2 id=\"1常规多账号\">1、常规多账号</h2>\n\n<p>不同host的代码仓库之间的多账号SSH配置，网上的资料很多，这里简单找一个 <a href=\"https://www.jianshu.com/p/92d207964061\">配置多个SSH</a>。</p>\n\n<h2 id=\"2多个github账号\">2、多个Github账号</h2>\n\n<p>由于申请了多个域名，配置同一个github账号下的gitpage出现了异常，我想大概也是因为CNAME或者其他原因。尝试重新申请一个github账号分开管理也行。</p>\n\n<p>之前账号github是用ssh配置的，新账号也尝试用ssh配置，</p>\n\n<p>重新生成新的ssk-key，也配置了config文件</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n</pre></td><td class=\"rouge-code\"><pre># github2\nHost a.github.com\nPort 22\nUser a\nHostName github.com\nPreferredAuthentications publickey\nIdentityFile ~/.ssh/id_rsa_github_a\n\n# github \nHost b.github.com\nPort 22\nUser b\nHostName github.com\nPreferredAuthentications publickea\nIdentityFile ~/.ssh/id_rsa_github_b\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>clone b仓库的代码，提交代码时提示</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n</pre></td><td class=\"rouge-code\"><pre>ERROR: Permission to B/payson.github.io.git denied to A.\nfatal: Could not read from remote repository.\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>就是提交时默认账号是A</p>\n\n<p>如果改成B呢，公钥私钥没问题，config也配了，</p>\n\n<p>最后查找资料发现，需要改Host</p>\n\n<p>将仓库B的远程Host，加上config配置的 b.github.com</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>origin:git@b.github.com:b/payson.github.io.git\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>使Host与config的Host对应</p>\n\n\n\n                <hr style=\"visibility: hidden;\">\n                <ul class=\"pager\">\n                    \n                    <li class=\"previous\">\n                        <a href=\"/2021/09/13/crash/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"iOS 10.x 内存Crash 排查 纪要\">\n                        Previous<br>\n                        <span>iOS 10.x 内存Crash 排查 纪要</span>\n                        </a>\n                    </li>\n                    \n                    \n                    <li class=\"next\">\n                        <a href=\"/2022/01/19/iOS-OpenType/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"iOS应用接收文件打开类型\">\n                        Next<br>\n                        <span>iOS应用接收文件打开类型</span>\n                        </a>\n                    </li>\n                    \n                </ul>\n                <hr style=\"visibility: hidden;\">\n\n                \n                <!-- disqus 评论框 start -->\n                <div class=\"comment\">\n                    <div id=\"disqus_thread\" class=\"disqus-thread\"></div>\n                </div>\n                <!-- disqus 评论框 end -->\n                \n\n                \n            </div>  \n\n    <!-- Side Catalog Container -->\n        \n            <div class=\"\n                col-lg-2 col-lg-offset-0\n                visible-lg-block\n                sidebar-container\n                catalog-container\">\n                <div class=\"side-catalog\">\n                    <hr class=\"hidden-sm hidden-xs\">\n                    <h5>\n                        <a class=\"catalog-toggle\" href=\"#\">CATALOG</a>\n                    </h5>\n                    <ul class=\"catalog-body\"></ul>\n                </div>\n            </div>\n        \n\n    <!-- Sidebar Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                sidebar-container\">\n\n                <!-- Featured Tags -->\n                \n\n\n<section>\n    \n        <hr class=\"hidden-sm hidden-xs\">\n    \n    <h5><a href=\"/archive/\">FEATURED TAGS</a></h5>\n    <div class=\"tags\">\n        \n        \n        \n        \n        \n    </div>\n</section>\n\n\n                <!-- Friends Blog -->\n                \n            </div>\n        </div>\n    </div>\n</article>\n\n<!-- add support for mathjax by voleking-->\n\n\n\n\n\n\n<!-- disqus 公共JS代码 start (一个网页只需插入一次) -->\n<script type=\"text/javascript\">\n    /* * * CONFIGURATION VARIABLES * * */\n    var disqus_shortname = \"Cyp\";\n    var disqus_identifier = \"/2021/10/18/git\";\n    var disqus_url = \"http://localhost:4000/2021/10/18/git/\";\n\n    (function() {\n        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;\n        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';\n        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);\n    })();\n</script>\n<!-- disqus 公共JS代码 end -->\n\n\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n      var d = document, t = 'script',\n          o = d.createElement(t),\n          s = d.getElementsByTagName(t)[0];\n      o.src = u;\n      if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n      s.parentNode.insertBefore(o, s);\n    }\n</script>\n<!-- anchor-js, Doc:http://bryanbraun.github.io/anchorjs/ -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/anchor-js/1.1.1/anchor.min.js\",function(){\n        anchors.options = {\n          visible: 'hover',\n          placement: 'right',\n          // icon: '#'\n        };\n        anchors.add().remove('.intro-header h1').remove('.subheading').remove('.sidebar-container h5');\n    })\n</script>\n<style>\n    /* place left on bigger screen */\n    @media all and (min-width: 800px) {\n        .anchorjs-link{\n            position: absolute;\n            left: -0.75em;\n            font-size: 1.1em;\n            margin-top : -0.1em;\n        }\n    }\n</style>\n\n\n\n    <!-- Footer -->\n<footer>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <!-- SNS Link -->\n                \n\n\n<ul class=\"list-inline text-center\">\n\n\n  \n  \n  \n  \n  \n  \n  \n</ul>\n\n                <p class=\"copyright text-muted\">\n                    Copyright &copy; PaysonChen Blog 2024\n                    <br>\n                    <!-- Powered by <a href=\"http://huangxuan.me\">Hux Blog</a> | -->\n                 <!--    <iframe style=\"margin-left: 2px; margin-bottom:-5px;\" frameborder=\"0\" scrolling=\"0\" width=\"100px\"\n                        height=\"20px\"\n                        src=\"https://ghbtns.com/github-btn.html?user=huxpro&repo=huxpro.github.io&type=star&count=true\">\n                    </iframe> -->\n                </p>\n            </div>\n        </div>\n    </div>\n</footer>\n\n<!-- jQuery -->\n<script src=\"/js/jquery.min.js \"></script>\n\n<!-- Bootstrap Core JavaScript -->\n<!-- Currently, only navbar scroll-down effect at desktop still depends on this -->\n<script src=\"/js/bootstrap.min.js \"></script>\n\n<!-- Custom Theme JavaScript -->\n<script src=\"/js/hux-blog.min.js \"></script>\n\n<!-- Simple Jekyll Search -->\n<script src=\"/js/simple-jekyll-search.min.js\"></script>\n\n<!-- Service Worker -->\n\n<script src=\"/js/snackbar.js \"></script>\n<script src=\"/js/sw-registration.js \"></script>\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n        var d = document, t = 'script',\n            o = d.createElement(t),\n            s = d.getElementsByTagName(t)[0];\n        o.src = u;\n        if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n        s.parentNode.insertBefore(o, s);\n    }\n</script>\n\n<!--\n     Because of the native support for backtick-style fenced code blocks\n     right within the Markdown is landed in Github Pages,\n     From V1.6, There is no need for Highlight.js,\n     so Huxblog drops it officially.\n\n     - https://github.com/blog/2100-github-pages-now-faster-and-simpler-with-jekyll-3-0\n     - https://help.github.com/articles/creating-and-highlighting-code-blocks/\n     - https://github.com/jneen/rouge/wiki/list-of-supported-languages-and-lexers\n-->\n<!--\n    <script>\n        async(\"http://cdn.bootcss.com/highlight.js/8.6/highlight.min.js\", function(){\n            hljs.initHighlightingOnLoad();\n        })\n    </script>\n    <link href=\"http://cdn.bootcss.com/highlight.js/8.6/styles/github.min.css\" rel=\"stylesheet\">\n-->\n\n\n\n\n\n\n\n<!--fastClick.js -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/fastclick/1.0.6/fastclick.min.js\", function () {\n        var $nav = document.querySelector(\"nav\");\n        if ($nav) FastClick.attach($nav);\n    })\n</script>\n\n\n<!-- Google Analytics -->\n\n\n\n<!-- Baidu Tongji -->\n\n\n\n<!-- Side Catalog -->\n\n<script type=\"text/javascript\">\n    function generateCatalog(selector) {\n\n        // interop with multilangual \n        if ('' == 'true') {\n            _containerSelector = 'div.post-container.active'\n        } else {\n            _containerSelector = 'div.post-container'\n        }\n\n        // init\n        var P = $(_containerSelector), a, n, t, l, i, c;\n        a = P.find('h1,h2,h3,h4,h5,h6');\n\n        // clean\n        $(selector).html('')\n\n        // appending\n        a.each(function () {\n            n = $(this).prop('tagName').toLowerCase();\n            i = \"#\" + $(this).prop('id');\n            t = $(this).text();\n            c = $('<a href=\"' + i + '\" rel=\"nofollow\">' + t + '</a>');\n            l = $('<li class=\"' + n + '_nav\"></li>').append(c);\n            $(selector).append(l);\n        });\n        return true;\n    }\n\n    generateCatalog(\".catalog-body\");\n\n    // toggle side catalog\n    $(\".catalog-toggle\").click((function (e) {\n        e.preventDefault();\n        $('.side-catalog').toggleClass(\"fold\")\n    }))\n\n    /*\n     * Doc: https://github.com/davist11/jQuery-One-Page-Nav\n     * Fork by Hux to support padding\n     */\n    async(\"/js/jquery.nav.js\", function () {\n        $('.catalog-body').onePageNav({\n            currentClass: \"active\",\n            changeHash: !1,\n            easing: \"swing\",\n            filter: \"\",\n            scrollSpeed: 700,\n            scrollOffset: 0,\n            scrollThreshold: .2,\n            begin: null,\n            end: null,\n            scrollChange: null,\n            padding: 80\n        });\n    });\n</script>\n\n\n\n<!-- Multi-Lingual -->\n\n\n<!-- Simple Jekyll Search -->\n<script>\n    // https://stackoverflow.com/questions/1912501/unescape-html-entities-in-javascript\n    function htmlDecode(input) {\n        var e = document.createElement('textarea');\n        e.innerHTML = input;\n        // handle case of empty input\n        return e.childNodes.length === 0 ? \"\" : e.childNodes[0].nodeValue;\n    }\n\n    SimpleJekyllSearch({\n        searchInput: document.getElementById('search-input'),\n        resultsContainer: document.getElementById('search-results'),\n        json: '/search.json',\n        searchResultTemplate: '<div class=\"post-preview item\"><a href=\"{url}\"><h2 class=\"post-title\">{title}</h2><h3 class=\"post-subtitle\">{subtitle}</h3><hr></a></div>',\n        noResultsText: 'No results',\n        limit: 50,\n        fuzzy: false,\n        // a hack to get escaped subtitle unescaped. for some reason, \n        // post.subtitle w/o escape filter nuke entire search.\n        templateMiddleware: function (prop, value, template) {\n            if (prop === 'subtitle' || prop === 'title') {\n                if (value.indexOf(\"code\")) {\n                    return htmlDecode(value);\n                } else {\n                    return value;\n                }\n            }\n        }\n    });\n\n    $(document).ready(function () {\n        var $searchPage = $('.search-page');\n        var $searchOpen = $('.search-icon');\n        var $searchClose = $('.search-icon-close');\n        var $searchInput = $('#search-input');\n        var $body = $('body');\n\n        $searchOpen.on('click', function (e) {\n            e.preventDefault();\n            $searchPage.toggleClass('search-active');\n            var prevClasses = $body.attr('class') || '';\n            setTimeout(function () {\n                $body.addClass('no-scroll');\n            }, 400)\n\n            if ($searchPage.hasClass('search-active')) {\n                $searchClose.on('click', function (e) {\n                    e.preventDefault();\n                    $searchPage.removeClass('search-active');\n                    $body.attr('class', prevClasses);  // from closure \n                });\n                $searchInput.focus();\n            }\n        });\n    });\n</script>\n\n\n<!-- Image to hack wechat -->\n<img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\" />\n<!-- Migrate from head to bottom, no longer block render and still work -->\n\n</body>\n\n</html>\n","excerpt":"<h2 id=\"1常规多账号\">1、常规多账号</h2>\n","url":"/2021/10/18/git/","next":{"id":"/2022/01/19/iOS-OpenType","tags":[],"relative_path":"_posts/2022-01-19-iOS-OpenType.md","collection":"posts","name":"2022-01-19-iOS-OpenType.md","url":"/2022/01/19/iOS-OpenType/","title":"iOS应用接收文件打开类型","date":"2022-01-19 00:00:00 +0800","categories":[],"path":"_posts/2022-01-19-iOS-OpenType.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/home-bg-geek.jpg","slug":"iOS-OpenType","ext":".md"},"title":"多账号配置GIT","date":"2021-10-18 00:00:00 +0800","categories":[],"path":"_posts/2021-10-18-git.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/post-bg-2015.jpg","slug":"git","ext":".md"},"output":"<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"google-site-verification\" content=\"xBT4GhYoi5qRD5tr338pgPM5OWHHIDR6mNg1a3euekI\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, viewport-fit=cover\">\n    <meta name=\"description\" content=\"与你一起发现更大的世界。\">\n    <meta name=\"keywords\"  content=\"PaysonChen,iOS,流媒体\">\n    <meta name=\"theme-color\" content=\"#000000\">\n    \n    <!-- Open Graph -->\n    <meta property=\"og:title\" content=\"iOS应用接收文件打开类型 - PaysonChen的博客 | PaysonChen Blog\">\n    \n    <meta property=\"og:type\" content=\"article\">\n    <meta property=\"og:description\" content=\"0x00 背景\n\">\n    \n    \n    <meta property=\"article:published_time\" content=\"2022-01-19T00:00:00Z\">\n    \n    \n    <meta property=\"article:author\" content=\"PaysonChen\">\n    \n    \n    \n    <meta property=\"og:image\" content=\"http://localhost:4000\">\n    <meta property=\"og:url\" content=\"http://localhost:4000/2022/01/19/iOS-OpenType/\">\n    <meta property=\"og:site_name\" content=\"PaysonChen的博客 | PaysonChen Blog\">\n    \n    <title>iOS应用接收文件打开类型 - PaysonChen的博客 | PaysonChen Blog</title>\n\n    <!-- Web App Manifest -->\n    <link rel=\"manifest\" href=\"/pwa/manifest.json\">\n\n    <!-- Favicon -->\n    <link rel=\"shortcut icon\" href=\"/img/favicon.ico\">\n    \n    <!-- Canonical URL -->\n    <link rel=\"canonical\" href=\"http://localhost:4000/2022/01/19/iOS-OpenType/\">\n\n    <!-- Bootstrap Core CSS -->\n    <link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\">\n\n    <!-- Custom CSS -->\n    <link rel=\"stylesheet\" href=\"/css/hux-blog.min.css\">\n\n    <!-- Custom Fonts -->\n    <!-- <link href=\"http://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\"> -->\n    <!-- Hux change font-awesome CDN to qiniu -->\n    <link href=\"//cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\">\n\n\n    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->\n    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->\n    <!--[if lt IE 9]>\n        <script src=\"https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js\"></script>\n        <script src=\"https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js\"></script>\n    <![endif]-->\n\n    <!-- ga & ba script hoook -->\n    <script></script>\n</head>\n\n\n<!-- hack iOS CSS :active style -->\n<body ontouchstart=\"\">\n\n    <!-- Navigation -->\n\n    <nav class=\"navbar navbar-default navbar-custom navbar-fixed-top\">\n        \n        <div class=\"container-fluid\">\n            <!-- Brand and toggle get grouped for better mobile display -->\n            <div class=\"navbar-header page-scroll\">\n                <button type=\"button\" class=\"navbar-toggle\">\n                    <span class=\"sr-only\">Toggle navigation</span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                </button>\n                <a class=\"navbar-brand\" href=\"/\">PaysonChen Blog</a>\n            </div>\n\n            <!-- Collect the nav links, forms, and other content for toggling -->\n            <div id=\"huxblog_navbar\">\n                <div class=\"navbar-collapse\">\n                    <ul class=\"nav navbar-nav navbar-right\">\n                        <li>\n                            <a href=\"/\">Home</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        <li>\n                            <a href=\"/about/\">About</a>\n                        </li>\n                        \n                        \n                        \n                        <li>\n                            <a href=\"/archive/\">Archive</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        <li class=\"search-icon\">\n                            <a href=\"javascript:void(0)\">\n                                <i class=\"fa fa-search\"></i>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n            <!-- /.navbar-collapse -->\n        </div>\n        <!-- /.container -->\n    </nav>\n\n    <script>\n        // Drop Bootstarp low-performance Navbar\n        // Use customize navbar with high-quality material design animation\n        // in high-perf jank-free CSS3 implementation\n        var $body = document.body;\n        var $toggle = document.querySelector('.navbar-toggle');\n        var $navbar = document.querySelector('#huxblog_navbar');\n        var $collapse = document.querySelector('.navbar-collapse');\n\n        var __HuxNav__ = {\n            close: function () {\n                $navbar.className = \" \";\n                // wait until animation end.\n                setTimeout(function () {\n                    // prevent frequently toggle\n                    if ($navbar.className.indexOf('in') < 0) {\n                        $collapse.style.height = \"0px\"\n                    }\n                }, 400)\n            },\n            open: function () {\n                $collapse.style.height = \"auto\"\n                $navbar.className += \" in\";\n            }\n        }\n\n        // Bind Event\n        $toggle.addEventListener('click', function (e) {\n            if ($navbar.className.indexOf('in') > 0) {\n                __HuxNav__.close()\n            } else {\n                __HuxNav__.open()\n            }\n        })\n\n        /**\n         * Since Fastclick is used to delegate 'touchstart' globally\n         * to hack 300ms delay in iOS by performing a fake 'click',\n         * Using 'e.stopPropagation' to stop 'touchstart' event from \n         * $toggle/$collapse will break global delegation.\n         * \n         * Instead, we use a 'e.target' filter to prevent handler\n         * added to document close HuxNav.  \n         *\n         * Also, we use 'click' instead of 'touchstart' as compromise\n         */\n        document.addEventListener('click', function (e) {\n            if (e.target == $toggle) return;\n            if (e.target.className == 'icon-bar') return;\n            __HuxNav__.close();\n        })\n    </script>\n    <!-- Search -->\n<div class=\"search-page\">\n  <div class=\"search-icon-close-container\">\n    <span class=\"search-icon-close\">\n      <i class=\"fa fa-chevron-down\"></i>\n    </span>\n  </div>\n  <div class=\"search-main container\">\n    <div class=\"row\">\n      <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n        <form></form>\n        <input type=\"text\" id=\"search-input\" placeholder=\"$ grep...\">\n        </form>\n        <div id=\"search-results\" class=\"mini-post-list\"></div>\n      </div>\n    </div>\n  </div>\n</div>\n\n    <!-- Image to hack wechat -->\n<!-- <img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\"> -->\n<!-- <img src=\"/img/home-bg-geek.jpg\" width=\"0\" height=\"0\"> -->\n\n<!-- Post Header -->\n\n\n\n<style type=\"text/css\">\n    header.intro-header{\n        position: relative;\n        background-image: url('/img/home-bg-geek.jpg');\n        background: ;\n    }\n\n    \n</style>\n\n<header class=\"intro-header\" >\n\n    <div class=\"header-mask\"></div>\n    \n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <div class=\"post-heading\">\n                    <div class=\"tags\">\n                        \n                    </div>\n                    <h1>iOS应用接收文件打开类型</h1>\n                    \n                    <h2 class=\"subheading\"></h2>\n                    <span class=\"meta\">Posted by PaysonChen on January 19, 2022</span>\n                </div>\n            </div>\n        </div>\n    </div>\n</header>\n\n\n\n\n\n\n<!-- Post Content -->\n<article>\n    <div class=\"container\">\n        <div class=\"row\">\n\n    <!-- Post Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                post-container\">\n\n                <!-- Multi-Lingual -->\n                \n\n\t\t\t\t<h2 id=\"0x00-背景\">0x00 背景</h2>\n\n<p>​\tK歌音频上传工具1.0需求调研，在探索上传的几种方式当中，涉及到引导用户从QQ微信打开，并提供能力。这就牵涉到从其他应用讲音视频文件导入（打开/传入）到K歌的需要。</p>\n\n<h2 id=\"0x01-技术方案\">0x01 技术方案</h2>\n\n<p>​\t通过设置Xcode Document Types，可以设置项目可接收的文件类型，附带一份：<a href=\"https://developer.apple.com/library/archive/documentation/Miscellaneous/Reference/UTIRef/Articles/System-DeclaredUniformTypeIdentifiers.html#//apple_ref/doc/uid/TP40009259-SW1\">官方提供的文件类型列表</a>。</p>\n\n<p>​\t<img src=\"/img/2022-01-19-iOS-OpenType/doctypes.png\" alt=\"\" /></p>\n\n<h2 id=\"0x02-项目实现\">0x02 项目实现</h2>\n\n<p>当前iOS应用的生命周期管理有以下两种方式</p>\n\n<ul>\n  <li>\n    <h5 id=\"uiapplicationdelegate\">UIApplicationDelegate</h5>\n\n    <p>iOS13之前，Appdelegate的职责全权处理App生命周期和UI生命周期：</p>\n\n    <p><img src=\"/img/2022-01-19-iOS-OpenType/appdelegate.jpg\" alt=\"\" /></p>\n\n    <p>在不需要多Window场景下，在AppDelegate中实现</p>\n\n    <div class=\"language-objc highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n</pre></td><td class=\"rouge-code\"><pre><span class=\"k\">-</span><span class=\"p\">(</span><span class=\"n\">BOOL</span><span class=\"p\">)</span><span class=\"nf\">application</span><span class=\"p\">:(</span><span class=\"n\">UIApplication</span> <span class=\"o\">*</span><span class=\"p\">)</span><span class=\"nv\">app</span> <span class=\"nf\">openURL</span><span class=\"p\">:(</span><span class=\"n\">NSURL</span> <span class=\"o\">*</span><span class=\"p\">)</span><span class=\"nv\">url</span> <span class=\"nf\">options</span><span class=\"p\">:(</span><span class=\"n\">NSDictionary</span><span class=\"o\">&lt;</span><span class=\"n\">UIApplicationOpenURLOptionsKey</span><span class=\"p\">,</span><span class=\"n\">id</span><span class=\"o\">&gt;</span> <span class=\"o\">*</span><span class=\"p\">)</span><span class=\"nv\">options</span> <span class=\"p\">{</span>\n    <span class=\"n\">NSLog</span><span class=\"p\">(</span><span class=\"s\">@\"url=%@---options=%@\"</span><span class=\"p\">,</span> <span class=\"n\">url</span><span class=\"p\">,</span> <span class=\"n\">options</span><span class=\"p\">);</span>\n    <span class=\"k\">return</span> <span class=\"nb\">YES</span>\n<span class=\"p\">}</span>\n</pre></td></tr></tbody></table></code></pre></div>    </div>\n\n    <p>输出：</p>\n\n    <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n</pre></td><td class=\"rouge-code\"><pre>url=file:///private/var/mobile/Containers/Data/Application/32D902CA-E0EB-487B-8C08-8C5A277967E3/Documents/Inbox/RPReplay_Final1641554324-31.MP3---options={\n    UIApplicationOpenURLOptionsOpenInPlaceKey = 0;\n}\n</pre></td></tr></tbody></table></code></pre></div>    </div>\n  </li>\n  <li>\n    <h4 id=\"uiwindowscenedelegate\">UIWindowSceneDelegate</h4>\n  </li>\n</ul>\n\n<p>​\tiOS13之后，<code class=\"language-plaintext highlighter-rouge\">Appdelegate</code>不在负责UI生命周期，所有UI生命周期交给<code class=\"language-plaintext highlighter-rouge\">SceneDelegate</code>处理：</p>\n\n<p><img src=\"/img/2022-01-19-iOS-OpenType/scene_Appdelegate.jpg\" alt=\"\" /></p>\n\n<p><img src=\"/img/2022-01-19-iOS-OpenType/scene_delegate.jpg\" alt=\"\" /></p>\n\n<p>在SceneDelegate场景中实现回调监听：</p>\n\n<pre><code class=\"language-objective-c\">- (void)scene:(UIScene *)scene openURLContexts:(NSSet&lt;UIOpenURLContext *&gt; *)URLContexts {\n    NSLog(@\"scene = %@\", URLContexts);\n}\n</code></pre>\n\n<p>输出：</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n</pre></td><td class=\"rouge-code\"><pre>{(\n    &lt;UIOpenURLContext: 0x2817cc760; URL: file:///private/var/mobile/Containers/Data/Application/F63608F2-7BA5-4374-9ADB-6D6B1135C771/Documents/Inbox/RPReplay_Final1641554324-20.MP3; options: &lt;UISceneOpenURLOptions: 0x2802b09c0; sourceApp: (null); annotation: (null); openInPlace: NO; _eventAttribution: (null)&gt;&gt;\n)}\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h2 id=\"0x03-备注\">0x03 备注</h2>\n\n<h4 id=\"音频文件导入\">音频文件导入：</h4>\n\n<p>QQ分享的音频可以支持其他应用打开，导入到第三方应用</p>\n\n<p>微信分享的音频可以支持其他应用打开，导入到第三方应用</p>\n\n<h4 id=\"视频文件导入\">视频文件导入：</h4>\n\n<p>QQ分享的视频可以支持其他应用打开，导入到第三方应用</p>\n\n<p>微信分享的视频无法导入</p>\n\n<h2 id=\"0x04-补充资料\">0x04 补充资料</h2>\n\n<p>Document Types Data包含关系如下：</p>\n\n<p><img src=\"/img/2022-01-19-iOS-OpenType/public.data.gif\" alt=\"\" /></p>\n\n<p>各类型说明：<a href=\"https://developer.apple.com/library/archive/documentation/Miscellaneous/Reference/UTIRef/Articles/System-DeclaredUniformTypeIdentifiers.html#//apple_ref/doc/uid/TP40009259-SW1\">iOS系统更多应用打开</a></p>\n\n\n\n                <hr style=\"visibility: hidden;\">\n                <ul class=\"pager\">\n                    \n                    <li class=\"previous\">\n                        <a href=\"/2021/10/18/git/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"多账号配置GIT\">\n                        Previous<br>\n                        <span>多账号配置GIT</span>\n                        </a>\n                    </li>\n                    \n                    \n                    <li class=\"next\">\n                        <a href=\"/2022/09/25/App%E7%98%A6%E8%BA%AB%E5%AE%9E%E8%B7%B5%E4%B9%8B%E6%89%B9%E9%87%8F%E8%BD%AC%E6%8D%A2webp/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"App瘦身实践之批量转换webp\">\n                        Next<br>\n                        <span>App瘦身实践之批量转换webp</span>\n                        </a>\n                    </li>\n                    \n                </ul>\n                <hr style=\"visibility: hidden;\">\n\n                \n                <!-- disqus 评论框 start -->\n                <div class=\"comment\">\n                    <div id=\"disqus_thread\" class=\"disqus-thread\"></div>\n                </div>\n                <!-- disqus 评论框 end -->\n                \n\n                \n            </div>  \n\n    <!-- Side Catalog Container -->\n        \n            <div class=\"\n                col-lg-2 col-lg-offset-0\n                visible-lg-block\n                sidebar-container\n                catalog-container\">\n                <div class=\"side-catalog\">\n                    <hr class=\"hidden-sm hidden-xs\">\n                    <h5>\n                        <a class=\"catalog-toggle\" href=\"#\">CATALOG</a>\n                    </h5>\n                    <ul class=\"catalog-body\"></ul>\n                </div>\n            </div>\n        \n\n    <!-- Sidebar Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                sidebar-container\">\n\n                <!-- Featured Tags -->\n                \n\n\n<section>\n    \n        <hr class=\"hidden-sm hidden-xs\">\n    \n    <h5><a href=\"/archive/\">FEATURED TAGS</a></h5>\n    <div class=\"tags\">\n        \n        \n        \n        \n        \n    </div>\n</section>\n\n\n                <!-- Friends Blog -->\n                \n            </div>\n        </div>\n    </div>\n</article>\n\n<!-- add support for mathjax by voleking-->\n\n\n\n\n\n\n<!-- disqus 公共JS代码 start (一个网页只需插入一次) -->\n<script type=\"text/javascript\">\n    /* * * CONFIGURATION VARIABLES * * */\n    var disqus_shortname = \"Cyp\";\n    var disqus_identifier = \"/2022/01/19/iOS-OpenType\";\n    var disqus_url = \"http://localhost:4000/2022/01/19/iOS-OpenType/\";\n\n    (function() {\n        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;\n        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';\n        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);\n    })();\n</script>\n<!-- disqus 公共JS代码 end -->\n\n\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n      var d = document, t = 'script',\n          o = d.createElement(t),\n          s = d.getElementsByTagName(t)[0];\n      o.src = u;\n      if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n      s.parentNode.insertBefore(o, s);\n    }\n</script>\n<!-- anchor-js, Doc:http://bryanbraun.github.io/anchorjs/ -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/anchor-js/1.1.1/anchor.min.js\",function(){\n        anchors.options = {\n          visible: 'hover',\n          placement: 'right',\n          // icon: '#'\n        };\n        anchors.add().remove('.intro-header h1').remove('.subheading').remove('.sidebar-container h5');\n    })\n</script>\n<style>\n    /* place left on bigger screen */\n    @media all and (min-width: 800px) {\n        .anchorjs-link{\n            position: absolute;\n            left: -0.75em;\n            font-size: 1.1em;\n            margin-top : -0.1em;\n        }\n    }\n</style>\n\n\n\n    <!-- Footer -->\n<footer>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <!-- SNS Link -->\n                \n\n\n<ul class=\"list-inline text-center\">\n\n\n  \n  \n  \n  \n  \n  \n  \n</ul>\n\n                <p class=\"copyright text-muted\">\n                    Copyright &copy; PaysonChen Blog 2024\n                    <br>\n                    <!-- Powered by <a href=\"http://huangxuan.me\">Hux Blog</a> | -->\n                 <!--    <iframe style=\"margin-left: 2px; margin-bottom:-5px;\" frameborder=\"0\" scrolling=\"0\" width=\"100px\"\n                        height=\"20px\"\n                        src=\"https://ghbtns.com/github-btn.html?user=huxpro&repo=huxpro.github.io&type=star&count=true\">\n                    </iframe> -->\n                </p>\n            </div>\n        </div>\n    </div>\n</footer>\n\n<!-- jQuery -->\n<script src=\"/js/jquery.min.js \"></script>\n\n<!-- Bootstrap Core JavaScript -->\n<!-- Currently, only navbar scroll-down effect at desktop still depends on this -->\n<script src=\"/js/bootstrap.min.js \"></script>\n\n<!-- Custom Theme JavaScript -->\n<script src=\"/js/hux-blog.min.js \"></script>\n\n<!-- Simple Jekyll Search -->\n<script src=\"/js/simple-jekyll-search.min.js\"></script>\n\n<!-- Service Worker -->\n\n<script src=\"/js/snackbar.js \"></script>\n<script src=\"/js/sw-registration.js \"></script>\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n        var d = document, t = 'script',\n            o = d.createElement(t),\n            s = d.getElementsByTagName(t)[0];\n        o.src = u;\n        if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n        s.parentNode.insertBefore(o, s);\n    }\n</script>\n\n<!--\n     Because of the native support for backtick-style fenced code blocks\n     right within the Markdown is landed in Github Pages,\n     From V1.6, There is no need for Highlight.js,\n     so Huxblog drops it officially.\n\n     - https://github.com/blog/2100-github-pages-now-faster-and-simpler-with-jekyll-3-0\n     - https://help.github.com/articles/creating-and-highlighting-code-blocks/\n     - https://github.com/jneen/rouge/wiki/list-of-supported-languages-and-lexers\n-->\n<!--\n    <script>\n        async(\"http://cdn.bootcss.com/highlight.js/8.6/highlight.min.js\", function(){\n            hljs.initHighlightingOnLoad();\n        })\n    </script>\n    <link href=\"http://cdn.bootcss.com/highlight.js/8.6/styles/github.min.css\" rel=\"stylesheet\">\n-->\n\n\n\n\n\n\n\n<!--fastClick.js -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/fastclick/1.0.6/fastclick.min.js\", function () {\n        var $nav = document.querySelector(\"nav\");\n        if ($nav) FastClick.attach($nav);\n    })\n</script>\n\n\n<!-- Google Analytics -->\n\n\n\n<!-- Baidu Tongji -->\n\n\n\n<!-- Side Catalog -->\n\n<script type=\"text/javascript\">\n    function generateCatalog(selector) {\n\n        // interop with multilangual \n        if ('' == 'true') {\n            _containerSelector = 'div.post-container.active'\n        } else {\n            _containerSelector = 'div.post-container'\n        }\n\n        // init\n        var P = $(_containerSelector), a, n, t, l, i, c;\n        a = P.find('h1,h2,h3,h4,h5,h6');\n\n        // clean\n        $(selector).html('')\n\n        // appending\n        a.each(function () {\n            n = $(this).prop('tagName').toLowerCase();\n            i = \"#\" + $(this).prop('id');\n            t = $(this).text();\n            c = $('<a href=\"' + i + '\" rel=\"nofollow\">' + t + '</a>');\n            l = $('<li class=\"' + n + '_nav\"></li>').append(c);\n            $(selector).append(l);\n        });\n        return true;\n    }\n\n    generateCatalog(\".catalog-body\");\n\n    // toggle side catalog\n    $(\".catalog-toggle\").click((function (e) {\n        e.preventDefault();\n        $('.side-catalog').toggleClass(\"fold\")\n    }))\n\n    /*\n     * Doc: https://github.com/davist11/jQuery-One-Page-Nav\n     * Fork by Hux to support padding\n     */\n    async(\"/js/jquery.nav.js\", function () {\n        $('.catalog-body').onePageNav({\n            currentClass: \"active\",\n            changeHash: !1,\n            easing: \"swing\",\n            filter: \"\",\n            scrollSpeed: 700,\n            scrollOffset: 0,\n            scrollThreshold: .2,\n            begin: null,\n            end: null,\n            scrollChange: null,\n            padding: 80\n        });\n    });\n</script>\n\n\n\n<!-- Multi-Lingual -->\n\n\n<!-- Simple Jekyll Search -->\n<script>\n    // https://stackoverflow.com/questions/1912501/unescape-html-entities-in-javascript\n    function htmlDecode(input) {\n        var e = document.createElement('textarea');\n        e.innerHTML = input;\n        // handle case of empty input\n        return e.childNodes.length === 0 ? \"\" : e.childNodes[0].nodeValue;\n    }\n\n    SimpleJekyllSearch({\n        searchInput: document.getElementById('search-input'),\n        resultsContainer: document.getElementById('search-results'),\n        json: '/search.json',\n        searchResultTemplate: '<div class=\"post-preview item\"><a href=\"{url}\"><h2 class=\"post-title\">{title}</h2><h3 class=\"post-subtitle\">{subtitle}</h3><hr></a></div>',\n        noResultsText: 'No results',\n        limit: 50,\n        fuzzy: false,\n        // a hack to get escaped subtitle unescaped. for some reason, \n        // post.subtitle w/o escape filter nuke entire search.\n        templateMiddleware: function (prop, value, template) {\n            if (prop === 'subtitle' || prop === 'title') {\n                if (value.indexOf(\"code\")) {\n                    return htmlDecode(value);\n                } else {\n                    return value;\n                }\n            }\n        }\n    });\n\n    $(document).ready(function () {\n        var $searchPage = $('.search-page');\n        var $searchOpen = $('.search-icon');\n        var $searchClose = $('.search-icon-close');\n        var $searchInput = $('#search-input');\n        var $body = $('body');\n\n        $searchOpen.on('click', function (e) {\n            e.preventDefault();\n            $searchPage.toggleClass('search-active');\n            var prevClasses = $body.attr('class') || '';\n            setTimeout(function () {\n                $body.addClass('no-scroll');\n            }, 400)\n\n            if ($searchPage.hasClass('search-active')) {\n                $searchClose.on('click', function (e) {\n                    e.preventDefault();\n                    $searchPage.removeClass('search-active');\n                    $body.attr('class', prevClasses);  // from closure \n                });\n                $searchInput.focus();\n            }\n        });\n    });\n</script>\n\n\n<!-- Image to hack wechat -->\n<img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\" />\n<!-- Migrate from head to bottom, no longer block render and still work -->\n\n</body>\n\n</html>\n","excerpt":"<h2 id=\"0x00-背景\">0x00 背景</h2>\n","url":"/2022/01/19/iOS-OpenType/","next":{"id":"/2022/09/25/App瘦身实践之批量转换webp","tags":[],"relative_path":"_posts/2022-09-25-App瘦身实践之批量转换webp.md","collection":"posts","content":"<h2 id=\"0x00-背景\">0x00 背景</h2>\n\n<p>​\tWebP 在各大互联网公司已经使用得很多了。WebP 的优势体现在它具有更优的图像数据压缩算法，能带来更小的图片体积，而且拥有肉眼识别无差异的图像质量；同时具备了无损和有损的压缩模式、Alpha 透明以及动画的特性，在 JPEG 和 PNG 上的转化效果都相当优秀、稳定和统一。</p>\n\n<h2 id=\"0x01-优势对比\">0x01 优势对比</h2>\n\n<ul>\n  <li>PNG 转 WebP 的压缩率要高于 PNG 原图压缩率，同样支持有损与无损压缩</li>\n  <li>转换后的 WebP 体积大幅减少，图片质量也得到保障（同时肉眼几乎无法看出差异）</li>\n  <li>转换后的 WebP 支持 Alpha 透明和 24-bit 颜色数，不存在 PNG8 色彩不够丰富和在浏览器中可能会出现毛边的问题</li>\n</ul>\n\n<h2 id=\"0x02-实践\">0x02 实践</h2>\n\n<p>一般设计给资源会有压缩@2x,@3x压缩包，于是可以把这些压缩包批量转换一下：</p>\n\n<p>写一个脚本：transfer2webp.sh</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n</pre></td><td class=\"rouge-code\"><pre><span class=\"k\">for </span>file <span class=\"k\">in</span> ./<span class=\"k\">*</span>\n<span class=\"k\">do\n    </span><span class=\"nv\">suffix</span><span class=\"o\">=</span>zip\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">file</span><span class=\"p\">##*.</span><span class=\"k\">}</span><span class=\"s2\">\"</span> <span class=\"o\">=</span> <span class=\"s2\">\"</span><span class=\"nv\">$suffix</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">echo</span> <span class=\"nv\">$file</span> <span class=\"s1\">'zip'</span>\n        <span class=\"nb\">dir</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">file</span><span class=\"p\">%.*</span><span class=\"k\">}</span>\n        unar <span class=\"nt\">-e</span> GBK <span class=\"nv\">$file</span> <span class=\"c\">#没有unar环境可以安装下https://blog.csdn.net/dawn_after_dark/article/details/83504421</span>\n        <span class=\"k\">for </span>subfile <span class=\"k\">in</span> ./<span class=\"k\">${</span><span class=\"nv\">dir</span><span class=\"k\">}</span>/<span class=\"k\">*</span>\n        <span class=\"k\">do\n            </span>cwebp <span class=\"nt\">-q</span> 90 <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">subfile</span><span class=\"k\">}</span><span class=\"s2\">\"</span> <span class=\"nt\">-o</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">subfile</span><span class=\"p\">%.*</span><span class=\"k\">}</span><span class=\"s2\">.webp\"</span>\n        <span class=\"k\">done\n\n    elif </span><span class=\"nb\">test</span> <span class=\"nt\">-d</span> <span class=\"nv\">$file</span> <span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">echo</span> <span class=\"nv\">$file</span> <span class=\"s1\">'fold'</span>\n    <span class=\"k\">else\n        </span><span class=\"nb\">echo</span> <span class=\"nv\">$file</span> <span class=\"s1\">'other'</span>\n    <span class=\"k\">fi\ndone</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>备注：之所以选unar而非unzip，是因为很多设计资源打包时，很可能带中文，在一开始的方案中使用了unzip会有乱码问题，为了兼容中文压缩包选用unar</p>\n\n","name":"2022-09-25-App瘦身实践之批量转换webp.md","previous":{"id":"/2022/01/19/iOS-OpenType","tags":[],"relative_path":"_posts/2022-01-19-iOS-OpenType.md","collection":"posts","name":"2022-01-19-iOS-OpenType.md","url":"/2022/01/19/iOS-OpenType/","title":"iOS应用接收文件打开类型","date":"2022-01-19 00:00:00 +0800","categories":[],"path":"_posts/2022-01-19-iOS-OpenType.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/home-bg-geek.jpg","slug":"iOS-OpenType","ext":".md"},"output":"<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"google-site-verification\" content=\"xBT4GhYoi5qRD5tr338pgPM5OWHHIDR6mNg1a3euekI\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, viewport-fit=cover\">\n    <meta name=\"description\" content=\"与你一起发现更大的世界。\">\n    <meta name=\"keywords\"  content=\"PaysonChen,iOS,流媒体\">\n    <meta name=\"theme-color\" content=\"#000000\">\n    \n    <!-- Open Graph -->\n    <meta property=\"og:title\" content=\"App瘦身实践之批量转换webp - PaysonChen的博客 | PaysonChen Blog\">\n    \n    <meta property=\"og:type\" content=\"article\">\n    <meta property=\"og:description\" content=\"0x00 背景\n\">\n    \n    \n    <meta property=\"article:published_time\" content=\"2022-09-25T00:00:00Z\">\n    \n    \n    <meta property=\"article:author\" content=\"PaysonChen\">\n    \n    \n    \n    <meta property=\"og:image\" content=\"http://localhost:4000\">\n    <meta property=\"og:url\" content=\"http://localhost:4000/2022/09/25/App%E7%98%A6%E8%BA%AB%E5%AE%9E%E8%B7%B5%E4%B9%8B%E6%89%B9%E9%87%8F%E8%BD%AC%E6%8D%A2webp/\">\n    <meta property=\"og:site_name\" content=\"PaysonChen的博客 | PaysonChen Blog\">\n    \n    <title>App瘦身实践之批量转换webp - PaysonChen的博客 | PaysonChen Blog</title>\n\n    <!-- Web App Manifest -->\n    <link rel=\"manifest\" href=\"/pwa/manifest.json\">\n\n    <!-- Favicon -->\n    <link rel=\"shortcut icon\" href=\"/img/favicon.ico\">\n    \n    <!-- Canonical URL -->\n    <link rel=\"canonical\" href=\"http://localhost:4000/2022/09/25/App%E7%98%A6%E8%BA%AB%E5%AE%9E%E8%B7%B5%E4%B9%8B%E6%89%B9%E9%87%8F%E8%BD%AC%E6%8D%A2webp/\">\n\n    <!-- Bootstrap Core CSS -->\n    <link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\">\n\n    <!-- Custom CSS -->\n    <link rel=\"stylesheet\" href=\"/css/hux-blog.min.css\">\n\n    <!-- Custom Fonts -->\n    <!-- <link href=\"http://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\"> -->\n    <!-- Hux change font-awesome CDN to qiniu -->\n    <link href=\"//cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\">\n\n\n    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->\n    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->\n    <!--[if lt IE 9]>\n        <script src=\"https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js\"></script>\n        <script src=\"https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js\"></script>\n    <![endif]-->\n\n    <!-- ga & ba script hoook -->\n    <script></script>\n</head>\n\n\n<!-- hack iOS CSS :active style -->\n<body ontouchstart=\"\">\n\n    <!-- Navigation -->\n\n    <nav class=\"navbar navbar-default navbar-custom navbar-fixed-top\">\n        \n        <div class=\"container-fluid\">\n            <!-- Brand and toggle get grouped for better mobile display -->\n            <div class=\"navbar-header page-scroll\">\n                <button type=\"button\" class=\"navbar-toggle\">\n                    <span class=\"sr-only\">Toggle navigation</span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                </button>\n                <a class=\"navbar-brand\" href=\"/\">PaysonChen Blog</a>\n            </div>\n\n            <!-- Collect the nav links, forms, and other content for toggling -->\n            <div id=\"huxblog_navbar\">\n                <div class=\"navbar-collapse\">\n                    <ul class=\"nav navbar-nav navbar-right\">\n                        <li>\n                            <a href=\"/\">Home</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        <li>\n                            <a href=\"/about/\">About</a>\n                        </li>\n                        \n                        \n                        \n                        <li>\n                            <a href=\"/archive/\">Archive</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        <li class=\"search-icon\">\n                            <a href=\"javascript:void(0)\">\n                                <i class=\"fa fa-search\"></i>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n            <!-- /.navbar-collapse -->\n        </div>\n        <!-- /.container -->\n    </nav>\n\n    <script>\n        // Drop Bootstarp low-performance Navbar\n        // Use customize navbar with high-quality material design animation\n        // in high-perf jank-free CSS3 implementation\n        var $body = document.body;\n        var $toggle = document.querySelector('.navbar-toggle');\n        var $navbar = document.querySelector('#huxblog_navbar');\n        var $collapse = document.querySelector('.navbar-collapse');\n\n        var __HuxNav__ = {\n            close: function () {\n                $navbar.className = \" \";\n                // wait until animation end.\n                setTimeout(function () {\n                    // prevent frequently toggle\n                    if ($navbar.className.indexOf('in') < 0) {\n                        $collapse.style.height = \"0px\"\n                    }\n                }, 400)\n            },\n            open: function () {\n                $collapse.style.height = \"auto\"\n                $navbar.className += \" in\";\n            }\n        }\n\n        // Bind Event\n        $toggle.addEventListener('click', function (e) {\n            if ($navbar.className.indexOf('in') > 0) {\n                __HuxNav__.close()\n            } else {\n                __HuxNav__.open()\n            }\n        })\n\n        /**\n         * Since Fastclick is used to delegate 'touchstart' globally\n         * to hack 300ms delay in iOS by performing a fake 'click',\n         * Using 'e.stopPropagation' to stop 'touchstart' event from \n         * $toggle/$collapse will break global delegation.\n         * \n         * Instead, we use a 'e.target' filter to prevent handler\n         * added to document close HuxNav.  \n         *\n         * Also, we use 'click' instead of 'touchstart' as compromise\n         */\n        document.addEventListener('click', function (e) {\n            if (e.target == $toggle) return;\n            if (e.target.className == 'icon-bar') return;\n            __HuxNav__.close();\n        })\n    </script>\n    <!-- Search -->\n<div class=\"search-page\">\n  <div class=\"search-icon-close-container\">\n    <span class=\"search-icon-close\">\n      <i class=\"fa fa-chevron-down\"></i>\n    </span>\n  </div>\n  <div class=\"search-main container\">\n    <div class=\"row\">\n      <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n        <form></form>\n        <input type=\"text\" id=\"search-input\" placeholder=\"$ grep...\">\n        </form>\n        <div id=\"search-results\" class=\"mini-post-list\"></div>\n      </div>\n    </div>\n  </div>\n</div>\n\n    <!-- Image to hack wechat -->\n<!-- <img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\"> -->\n<!-- <img src=\"/img/home-bg-geek.jpg\" width=\"0\" height=\"0\"> -->\n\n<!-- Post Header -->\n\n\n\n<style type=\"text/css\">\n    header.intro-header{\n        position: relative;\n        background-image: url('/img/home-bg-geek.jpg');\n        background: ;\n    }\n\n    \n</style>\n\n<header class=\"intro-header\" >\n\n    <div class=\"header-mask\"></div>\n    \n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <div class=\"post-heading\">\n                    <div class=\"tags\">\n                        \n                    </div>\n                    <h1>App瘦身实践之批量转换webp</h1>\n                    \n                    <h2 class=\"subheading\"></h2>\n                    <span class=\"meta\">Posted by PaysonChen on September 25, 2022</span>\n                </div>\n            </div>\n        </div>\n    </div>\n</header>\n\n\n\n\n\n\n<!-- Post Content -->\n<article>\n    <div class=\"container\">\n        <div class=\"row\">\n\n    <!-- Post Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                post-container\">\n\n                <!-- Multi-Lingual -->\n                \n\n\t\t\t\t<h2 id=\"0x00-背景\">0x00 背景</h2>\n\n<p>​\tWebP 在各大互联网公司已经使用得很多了。WebP 的优势体现在它具有更优的图像数据压缩算法，能带来更小的图片体积，而且拥有肉眼识别无差异的图像质量；同时具备了无损和有损的压缩模式、Alpha 透明以及动画的特性，在 JPEG 和 PNG 上的转化效果都相当优秀、稳定和统一。</p>\n\n<h2 id=\"0x01-优势对比\">0x01 优势对比</h2>\n\n<ul>\n  <li>PNG 转 WebP 的压缩率要高于 PNG 原图压缩率，同样支持有损与无损压缩</li>\n  <li>转换后的 WebP 体积大幅减少，图片质量也得到保障（同时肉眼几乎无法看出差异）</li>\n  <li>转换后的 WebP 支持 Alpha 透明和 24-bit 颜色数，不存在 PNG8 色彩不够丰富和在浏览器中可能会出现毛边的问题</li>\n</ul>\n\n<h2 id=\"0x02-实践\">0x02 实践</h2>\n\n<p>一般设计给资源会有压缩@2x,@3x压缩包，于是可以把这些压缩包批量转换一下：</p>\n\n<p>写一个脚本：transfer2webp.sh</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n</pre></td><td class=\"rouge-code\"><pre><span class=\"k\">for </span>file <span class=\"k\">in</span> ./<span class=\"k\">*</span>\n<span class=\"k\">do\n    </span><span class=\"nv\">suffix</span><span class=\"o\">=</span>zip\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">file</span><span class=\"p\">##*.</span><span class=\"k\">}</span><span class=\"s2\">\"</span> <span class=\"o\">=</span> <span class=\"s2\">\"</span><span class=\"nv\">$suffix</span><span class=\"s2\">\"</span> <span class=\"o\">]</span><span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">echo</span> <span class=\"nv\">$file</span> <span class=\"s1\">'zip'</span>\n        <span class=\"nb\">dir</span><span class=\"o\">=</span><span class=\"k\">${</span><span class=\"nv\">file</span><span class=\"p\">%.*</span><span class=\"k\">}</span>\n        unar <span class=\"nt\">-e</span> GBK <span class=\"nv\">$file</span> <span class=\"c\">#没有unar环境可以安装下https://blog.csdn.net/dawn_after_dark/article/details/83504421</span>\n        <span class=\"k\">for </span>subfile <span class=\"k\">in</span> ./<span class=\"k\">${</span><span class=\"nv\">dir</span><span class=\"k\">}</span>/<span class=\"k\">*</span>\n        <span class=\"k\">do\n            </span>cwebp <span class=\"nt\">-q</span> 90 <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">subfile</span><span class=\"k\">}</span><span class=\"s2\">\"</span> <span class=\"nt\">-o</span> <span class=\"s2\">\"</span><span class=\"k\">${</span><span class=\"nv\">subfile</span><span class=\"p\">%.*</span><span class=\"k\">}</span><span class=\"s2\">.webp\"</span>\n        <span class=\"k\">done\n\n    elif </span><span class=\"nb\">test</span> <span class=\"nt\">-d</span> <span class=\"nv\">$file</span> <span class=\"p\">;</span> <span class=\"k\">then\n        </span><span class=\"nb\">echo</span> <span class=\"nv\">$file</span> <span class=\"s1\">'fold'</span>\n    <span class=\"k\">else\n        </span><span class=\"nb\">echo</span> <span class=\"nv\">$file</span> <span class=\"s1\">'other'</span>\n    <span class=\"k\">fi\ndone</span>\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>备注：之所以选unar而非unzip，是因为很多设计资源打包时，很可能带中文，在一开始的方案中使用了unzip会有乱码问题，为了兼容中文压缩包选用unar</p>\n\n\n\n                <hr style=\"visibility: hidden;\">\n                <ul class=\"pager\">\n                    \n                    <li class=\"previous\">\n                        <a href=\"/2022/01/19/iOS-OpenType/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"iOS应用接收文件打开类型\">\n                        Previous<br>\n                        <span>iOS应用接收文件打开类型</span>\n                        </a>\n                    </li>\n                    \n                    \n                    <li class=\"next\">\n                        <a href=\"/2022/09/26/Github%E5%A4%9A%E8%B4%A6%E5%8F%B7%E9%85%8D%E7%BD%AESSH/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Github多账号配置SSH\">\n                        Next<br>\n                        <span>Github多账号配置SSH</span>\n                        </a>\n                    </li>\n                    \n                </ul>\n                <hr style=\"visibility: hidden;\">\n\n                \n                <!-- disqus 评论框 start -->\n                <div class=\"comment\">\n                    <div id=\"disqus_thread\" class=\"disqus-thread\"></div>\n                </div>\n                <!-- disqus 评论框 end -->\n                \n\n                \n            </div>  \n\n    <!-- Side Catalog Container -->\n        \n            <div class=\"\n                col-lg-2 col-lg-offset-0\n                visible-lg-block\n                sidebar-container\n                catalog-container\">\n                <div class=\"side-catalog\">\n                    <hr class=\"hidden-sm hidden-xs\">\n                    <h5>\n                        <a class=\"catalog-toggle\" href=\"#\">CATALOG</a>\n                    </h5>\n                    <ul class=\"catalog-body\"></ul>\n                </div>\n            </div>\n        \n\n    <!-- Sidebar Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                sidebar-container\">\n\n                <!-- Featured Tags -->\n                \n\n\n<section>\n    \n        <hr class=\"hidden-sm hidden-xs\">\n    \n    <h5><a href=\"/archive/\">FEATURED TAGS</a></h5>\n    <div class=\"tags\">\n        \n        \n        \n        \n        \n    </div>\n</section>\n\n\n                <!-- Friends Blog -->\n                \n            </div>\n        </div>\n    </div>\n</article>\n\n<!-- add support for mathjax by voleking-->\n\n\n\n\n\n\n<!-- disqus 公共JS代码 start (一个网页只需插入一次) -->\n<script type=\"text/javascript\">\n    /* * * CONFIGURATION VARIABLES * * */\n    var disqus_shortname = \"Cyp\";\n    var disqus_identifier = \"/2022/09/25/App瘦身实践之批量转换webp\";\n    var disqus_url = \"http://localhost:4000/2022/09/25/App%E7%98%A6%E8%BA%AB%E5%AE%9E%E8%B7%B5%E4%B9%8B%E6%89%B9%E9%87%8F%E8%BD%AC%E6%8D%A2webp/\";\n\n    (function() {\n        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;\n        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';\n        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);\n    })();\n</script>\n<!-- disqus 公共JS代码 end -->\n\n\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n      var d = document, t = 'script',\n          o = d.createElement(t),\n          s = d.getElementsByTagName(t)[0];\n      o.src = u;\n      if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n      s.parentNode.insertBefore(o, s);\n    }\n</script>\n<!-- anchor-js, Doc:http://bryanbraun.github.io/anchorjs/ -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/anchor-js/1.1.1/anchor.min.js\",function(){\n        anchors.options = {\n          visible: 'hover',\n          placement: 'right',\n          // icon: '#'\n        };\n        anchors.add().remove('.intro-header h1').remove('.subheading').remove('.sidebar-container h5');\n    })\n</script>\n<style>\n    /* place left on bigger screen */\n    @media all and (min-width: 800px) {\n        .anchorjs-link{\n            position: absolute;\n            left: -0.75em;\n            font-size: 1.1em;\n            margin-top : -0.1em;\n        }\n    }\n</style>\n\n\n\n    <!-- Footer -->\n<footer>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <!-- SNS Link -->\n                \n\n\n<ul class=\"list-inline text-center\">\n\n\n  \n  \n  \n  \n  \n  \n  \n</ul>\n\n                <p class=\"copyright text-muted\">\n                    Copyright &copy; PaysonChen Blog 2024\n                    <br>\n                    <!-- Powered by <a href=\"http://huangxuan.me\">Hux Blog</a> | -->\n                 <!--    <iframe style=\"margin-left: 2px; margin-bottom:-5px;\" frameborder=\"0\" scrolling=\"0\" width=\"100px\"\n                        height=\"20px\"\n                        src=\"https://ghbtns.com/github-btn.html?user=huxpro&repo=huxpro.github.io&type=star&count=true\">\n                    </iframe> -->\n                </p>\n            </div>\n        </div>\n    </div>\n</footer>\n\n<!-- jQuery -->\n<script src=\"/js/jquery.min.js \"></script>\n\n<!-- Bootstrap Core JavaScript -->\n<!-- Currently, only navbar scroll-down effect at desktop still depends on this -->\n<script src=\"/js/bootstrap.min.js \"></script>\n\n<!-- Custom Theme JavaScript -->\n<script src=\"/js/hux-blog.min.js \"></script>\n\n<!-- Simple Jekyll Search -->\n<script src=\"/js/simple-jekyll-search.min.js\"></script>\n\n<!-- Service Worker -->\n\n<script src=\"/js/snackbar.js \"></script>\n<script src=\"/js/sw-registration.js \"></script>\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n        var d = document, t = 'script',\n            o = d.createElement(t),\n            s = d.getElementsByTagName(t)[0];\n        o.src = u;\n        if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n        s.parentNode.insertBefore(o, s);\n    }\n</script>\n\n<!--\n     Because of the native support for backtick-style fenced code blocks\n     right within the Markdown is landed in Github Pages,\n     From V1.6, There is no need for Highlight.js,\n     so Huxblog drops it officially.\n\n     - https://github.com/blog/2100-github-pages-now-faster-and-simpler-with-jekyll-3-0\n     - https://help.github.com/articles/creating-and-highlighting-code-blocks/\n     - https://github.com/jneen/rouge/wiki/list-of-supported-languages-and-lexers\n-->\n<!--\n    <script>\n        async(\"http://cdn.bootcss.com/highlight.js/8.6/highlight.min.js\", function(){\n            hljs.initHighlightingOnLoad();\n        })\n    </script>\n    <link href=\"http://cdn.bootcss.com/highlight.js/8.6/styles/github.min.css\" rel=\"stylesheet\">\n-->\n\n\n\n\n\n\n\n<!--fastClick.js -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/fastclick/1.0.6/fastclick.min.js\", function () {\n        var $nav = document.querySelector(\"nav\");\n        if ($nav) FastClick.attach($nav);\n    })\n</script>\n\n\n<!-- Google Analytics -->\n\n\n\n<!-- Baidu Tongji -->\n\n\n\n<!-- Side Catalog -->\n\n<script type=\"text/javascript\">\n    function generateCatalog(selector) {\n\n        // interop with multilangual \n        if ('' == 'true') {\n            _containerSelector = 'div.post-container.active'\n        } else {\n            _containerSelector = 'div.post-container'\n        }\n\n        // init\n        var P = $(_containerSelector), a, n, t, l, i, c;\n        a = P.find('h1,h2,h3,h4,h5,h6');\n\n        // clean\n        $(selector).html('')\n\n        // appending\n        a.each(function () {\n            n = $(this).prop('tagName').toLowerCase();\n            i = \"#\" + $(this).prop('id');\n            t = $(this).text();\n            c = $('<a href=\"' + i + '\" rel=\"nofollow\">' + t + '</a>');\n            l = $('<li class=\"' + n + '_nav\"></li>').append(c);\n            $(selector).append(l);\n        });\n        return true;\n    }\n\n    generateCatalog(\".catalog-body\");\n\n    // toggle side catalog\n    $(\".catalog-toggle\").click((function (e) {\n        e.preventDefault();\n        $('.side-catalog').toggleClass(\"fold\")\n    }))\n\n    /*\n     * Doc: https://github.com/davist11/jQuery-One-Page-Nav\n     * Fork by Hux to support padding\n     */\n    async(\"/js/jquery.nav.js\", function () {\n        $('.catalog-body').onePageNav({\n            currentClass: \"active\",\n            changeHash: !1,\n            easing: \"swing\",\n            filter: \"\",\n            scrollSpeed: 700,\n            scrollOffset: 0,\n            scrollThreshold: .2,\n            begin: null,\n            end: null,\n            scrollChange: null,\n            padding: 80\n        });\n    });\n</script>\n\n\n\n<!-- Multi-Lingual -->\n\n\n<!-- Simple Jekyll Search -->\n<script>\n    // https://stackoverflow.com/questions/1912501/unescape-html-entities-in-javascript\n    function htmlDecode(input) {\n        var e = document.createElement('textarea');\n        e.innerHTML = input;\n        // handle case of empty input\n        return e.childNodes.length === 0 ? \"\" : e.childNodes[0].nodeValue;\n    }\n\n    SimpleJekyllSearch({\n        searchInput: document.getElementById('search-input'),\n        resultsContainer: document.getElementById('search-results'),\n        json: '/search.json',\n        searchResultTemplate: '<div class=\"post-preview item\"><a href=\"{url}\"><h2 class=\"post-title\">{title}</h2><h3 class=\"post-subtitle\">{subtitle}</h3><hr></a></div>',\n        noResultsText: 'No results',\n        limit: 50,\n        fuzzy: false,\n        // a hack to get escaped subtitle unescaped. for some reason, \n        // post.subtitle w/o escape filter nuke entire search.\n        templateMiddleware: function (prop, value, template) {\n            if (prop === 'subtitle' || prop === 'title') {\n                if (value.indexOf(\"code\")) {\n                    return htmlDecode(value);\n                } else {\n                    return value;\n                }\n            }\n        }\n    });\n\n    $(document).ready(function () {\n        var $searchPage = $('.search-page');\n        var $searchOpen = $('.search-icon');\n        var $searchClose = $('.search-icon-close');\n        var $searchInput = $('#search-input');\n        var $body = $('body');\n\n        $searchOpen.on('click', function (e) {\n            e.preventDefault();\n            $searchPage.toggleClass('search-active');\n            var prevClasses = $body.attr('class') || '';\n            setTimeout(function () {\n                $body.addClass('no-scroll');\n            }, 400)\n\n            if ($searchPage.hasClass('search-active')) {\n                $searchClose.on('click', function (e) {\n                    e.preventDefault();\n                    $searchPage.removeClass('search-active');\n                    $body.attr('class', prevClasses);  // from closure \n                });\n                $searchInput.focus();\n            }\n        });\n    });\n</script>\n\n\n<!-- Image to hack wechat -->\n<img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\" />\n<!-- Migrate from head to bottom, no longer block render and still work -->\n\n</body>\n\n</html>\n","excerpt":"<h2 id=\"0x00-背景\">0x00 背景</h2>\n","url":"/2022/09/25/App%E7%98%A6%E8%BA%AB%E5%AE%9E%E8%B7%B5%E4%B9%8B%E6%89%B9%E9%87%8F%E8%BD%AC%E6%8D%A2webp/","next":{"id":"/2022/09/26/Github多账号配置SSH","tags":[],"relative_path":"_posts/2022-09-26-Github多账号配置SSH.md","collection":"posts","name":"2022-09-26-Github多账号配置SSH.md","url":"/2022/09/26/Github%E5%A4%9A%E8%B4%A6%E5%8F%B7%E9%85%8D%E7%BD%AESSH/","title":"Github多账号配置SSH","date":"2022-09-26 00:00:00 +0800","categories":[],"path":"_posts/2022-09-26-Github多账号配置SSH.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/home-bg-geek.jpg","slug":"Github多账号配置SSH","ext":".md"},"title":"App瘦身实践之批量转换webp","date":"2022-09-25 00:00:00 +0800","categories":[],"path":"_posts/2022-09-25-App瘦身实践之批量转换webp.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/home-bg-geek.jpg","slug":"App瘦身实践之批量转换webp","ext":".md"},"title":"iOS应用接收文件打开类型","date":"2022-01-19 00:00:00 +0800","categories":[],"path":"_posts/2022-01-19-iOS-OpenType.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/home-bg-geek.jpg","slug":"iOS-OpenType","ext":".md"},{"id":"/2021/10/18/git","tags":[],"relative_path":"_posts/2021-10-18-git.md","collection":"posts","content":"<h2 id=\"1常规多账号\">1、常规多账号</h2>\n\n<p>不同host的代码仓库之间的多账号SSH配置，网上的资料很多，这里简单找一个 <a href=\"https://www.jianshu.com/p/92d207964061\">配置多个SSH</a>。</p>\n\n<h2 id=\"2多个github账号\">2、多个Github账号</h2>\n\n<p>由于申请了多个域名，配置同一个github账号下的gitpage出现了异常，我想大概也是因为CNAME或者其他原因。尝试重新申请一个github账号分开管理也行。</p>\n\n<p>之前账号github是用ssh配置的，新账号也尝试用ssh配置，</p>\n\n<p>重新生成新的ssk-key，也配置了config文件</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n</pre></td><td class=\"rouge-code\"><pre># github2\nHost a.github.com\nPort 22\nUser a\nHostName github.com\nPreferredAuthentications publickey\nIdentityFile ~/.ssh/id_rsa_github_a\n\n# github \nHost b.github.com\nPort 22\nUser b\nHostName github.com\nPreferredAuthentications publickea\nIdentityFile ~/.ssh/id_rsa_github_b\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>clone b仓库的代码，提交代码时提示</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n</pre></td><td class=\"rouge-code\"><pre>ERROR: Permission to B/payson.github.io.git denied to A.\nfatal: Could not read from remote repository.\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>就是提交时默认账号是A</p>\n\n<p>如果改成B呢，公钥私钥没问题，config也配了，</p>\n\n<p>最后查找资料发现，需要改Host</p>\n\n<p>将仓库B的远程Host，加上config配置的 b.github.com</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>origin:git@b.github.com:b/payson.github.io.git\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>使Host与config的Host对应</p>\n\n","name":"2021-10-18-git.md","previous":{"id":"/2021/09/13/crash","tags":[],"relative_path":"_posts/2021-09-13-crash.md","collection":"posts","content":"<p>更新日期：2021-09-07</p>\n\n<p>[TOC]</p>\n\n<h2 id=\"1基本情况\">1、基本情况</h2>\n\n<p>​\t最终堆栈位置：</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n</pre></td><td class=\"rouge-code\"><pre>XXX -[KSKitBaseModel encodeWithCoder:] (KSKitBaseModel.m:)\nXXX -[KSBaseModel encodeWithCoder:] (KSBaseModel.m:)\nXXX -[KSBaseModel encodeWithCoder:] (KSBaseModel.m:)\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h2 id=\"2分析\">2、分析</h2>\n\n<h3 id=\"21-堆栈分析\">2.1 堆栈分析</h3>\n\n<p>跟踪多条Crash堆栈</p>\n\n<p>XXX堆栈 1：</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n</pre></td><td class=\"rouge-code\"><pre>9 XXX 0x0000000103bf4718 -[KSKitBaseModel encodeWithCoder:] (KSKitBaseModel.m:42)\n11 XXX 0x0000000100721688 -[KSBaseModel encodeWithCoder:] (KSBaseModel.m:50)\n11 XXX 0x0000000100721688 -[KSBaseModel encodeWithCoder:] (KSBaseModel.m:50)\n21 XXX 0x00000001004434cc -[KSKVStorage writeObjectToFile:forKey:atomic:completion:] (KSKVStorage.m:0)\n22 XXX 0x000000010326f550 -[KSLocalConfigManager internalRemoveLocalConfig:isGolbal:] (KSLocalConfigManager.m:273)\n23 XXX 0x0000000103270330 +[KSLocalConfigManager removeLocalConfig:isGolbal:] (KSLocalConfigManager.m:0)\n24 XXX 0x000000010326fa64 +[KSLocalConfigManager dailyCommonValueConfig:isGolbal:] (KSLocalConfigManager.m:0)\n25 XXX 0x0000000100b55a30 -[KSKTVRoomViewController(InteractionGuide) checkIfShowGameOngoingView:] (KSKTVRoomViewController+InteractionGuide.m:0)\n26 XXX 0x0000000100b54d38 -[KSKTVRoomViewController(InteractionGuide) showGameOngoingViewWhenEnterKTV:] (KSKTVRoomViewController+InteractionGuide.m:192)\n37 XXX 0x00000001014ec7d4 main (main.m:37)\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>XXX堆栈2：</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n</pre></td><td class=\"rouge-code\"><pre>9 XXX 0x0000000103b94718 -[KSKitBaseModel encodeWithCoder:] (KSKitBaseModel.m:42)\n11 XXX 0x00000001006c1688 -[KSBaseModel encodeWithCoder:] (KSBaseModel.m:50)\n11 XXX 0x00000001006c1688 -[KSBaseModel encodeWithCoder:] (KSBaseModel.m:50)\n21 XXX 0x00000001003e34cc -[KSKVStorage writeObjectToFile:forKey:atomic:completion:] (KSKVStorage.m:0)\n22 XXX 0x000000010320ee7c -[KSLocalConfigManager internalSaveLocalConfig:value:isGolbal:] (KSLocalConfigManager.m:220)\n23 XXX 0x000000010320fb10 +[KSLocalConfigManager saveLocalConfig:commonValue:isGolbal:] (KSLocalConfigManager.m:0)\n24 XXX 0x0000000102152b94 -[KSSendGiftContainerView tabView:didChangeSelectIndex:] (KSSendGiftContainerView.m:1952)\n25 XXX 0x000000010056235c -[KSTabView setSelectIndex:] (KSTabView.m:723)\n28 XXX 0x00000001009ccbc4 -[KSBaseButton sendAction:to:forEvent:] (KSBaseButton.m:0)\n46 XXX 0x000000010148c7d4 main (main.m:37)\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h3 id=\"22-代码分析\">2.2 代码分析</h3>\n\n<p>所有类型的堆栈最终都指向KSKVStorage writeObjectToFile,</p>\n\n<p>这是一个存储控制类，writeObjectToFile是将对象归档后写到磁盘</p>\n\n<p>最终堆栈指向</p>\n\n<pre><code class=\"language-objective-c\">0 libsystem_kernel.dylib 0x000000018aa97014 ___pthread_kill + 8\n1 libsystem_c.dylib 0x000000018aa0b400 _abort + 140\n2 libsystem_malloc.dylib 0x000000018aadba5c _nano_free_definite_size + 92\n3 libsystem_malloc.dylib 0x000000018aadd028 _nano_realloc + 648\n4 libsystem_malloc.dylib 0x000000018aacf240 _malloc_zone_realloc + 180\n5 Foundation 0x000000018c5aa3e4 -[NSOperation isAsynchronous] + 180\n6 Foundation 0x000000018c53c2a0 __decodeInt64 + 452\n</code></pre>\n\n<p>可以认为是NSKeyedUnarchiver 与 NSKeyedArchiver 触发的对象  KSKitBaseModel 及 KSBaseModel 的 encodeWithCoder 方法，</p>\n\n<p>触发encodeWithCoder:方法为自动序列化的标准做法如下：</p>\n\n<pre><code class=\"language-objective-c\">- (void)encodeWithCoder:(NSCoder *)encoder {\n\tClass cls = [self class];\n\twhile (cls != [NSObject class]) {\n\t\tunsigned int numberOfIvars = 0;\n\t\tIvar* ivars = class_copyIvarList(cls, &amp;numberOfIvars);\n\t\tfor(const Ivar* p = ivars; p &lt; ivars+numberOfIvars; p++)\n\t\t{\n\t\t\tIvar const ivar = *p;\n\t\t\tconst char *type = ivar_getTypeEncoding(ivar);\n\t\t\tNSString *key = [NSString stringWithUTF8String:ivar_getName(ivar)];\n            if (key == nil){\n                continue;\n            }\n            if ([key length] == 0){\n                continue;\n            }\n            \n\t\t\tid value = [self valueForKey:key];\n\t\t\tif (value) {\n\t\t\t\tswitch (type[0]) {\n\t\t\t\t\tcase _C_STRUCT_B: {\n\t\t\t\t\t\tNSUInteger ivarSize = 0;\n\t\t\t\t\t\tNSUInteger ivarAlignment = 0;\n\t\t\t\t\t\tNSGetSizeAndAlignment(type, &amp;ivarSize, &amp;ivarAlignment);\n\t\t\t\t\t\tNSData *data = [NSData dataWithBytes:(const char *)((__bridge void *)self) + ivar_getOffset(ivar)\n\t\t\t\t\t\t\t\t\t\t\t\t\t  length:ivarSize];\n\t\t\t\t\t\t[encoder encodeObject:data forKey:key];\n\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\t[encoder encodeObject:value\n\t\t\t\t\t\t\t\t\t   forKey:key];\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (ivars) {\n\t\t\tfree(ivars);\n\t\t}\n\t\t\n\t\tcls = class_getSuperclass(cls);\n\t}\n}\n\n</code></pre>\n\n<p>上述方法通过 runtime机制 遍历当前类及其父类的属性，可以推断，在某个类或者某个继承关系中存在如下调用顺序时，触发了crash</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n</pre></td><td class=\"rouge-code\"><pre>[KSKitBaseModel encodeWithCoder:] (KSKitBaseModel.m:42)\n[KSBaseModel encodeWithCoder:] (KSBaseModel.m:50)\n[KSBaseModel encodeWithCoder:] (KSBaseModel.m:50)\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>代码行数可能不准。</p>\n\n<p>根据断点调试，可能发生在 某个对象的 的归档中：</p>\n\n<h3 id=\"23-问题定位\">2.3 问题定位</h3>\n\n<h4 id=\"231-堆栈定位\">2.3.1 堆栈定位</h4>\n\n<p>​\t再看堆栈，实现了自动序列化的KSBaseModel 及 KSKitBaseModel 作为全民K歌项目持久层对象的基类在自动序列化过程中发生crash：</p>\n\n<pre><code class=\"language-objective-c\">0 libsystem_kernel.dylib 0x000000018aa97014 ___pthread_kill + 8\n1 libsystem_c.dylib 0x000000018aa0b400 _abort + 140\n2 libsystem_malloc.dylib 0x000000018aadba5c _nano_free_definite_size + 92\n3 libsystem_malloc.dylib 0x000000018aadd028 _nano_realloc + 648\n4 libsystem_malloc.dylib 0x000000018aacf240 _malloc_zone_realloc + 180\n5 Foundation 0x000000018c5aa3e4 -[NSOperation isAsynchronous] + 180\n6 Foundation 0x000000018c53c2a0 __decodeInt64 + 452\n7 XXX 0x0000000103cab808 -[KSKitBaseModel encodeWithCoder:] (KSKitBaseModel.m:42)\n8 Foundation 0x000000018c53c49c __decodeIntXXX+ 416\n9 XXX 0x00000001037a0b94 -[KSBaseModel encodeWithCoder:] (KSBaseModel.m:52)\n……\n</code></pre>\n\n<p>​\t在分析了自动序列化代码未找到问题的情况下，看引发crash更直接的libsystem_malloc.dylib 通过对_nano_free_definite_size产生crash的调研发现bugly及微信团队在之前遇到过类似的情况：<a href=\"https://zhuanlan.zhihu.com/p/24342979\">【腾讯Bugly干货分享】聊聊苹果的Bug - iOS 10 nano_free Crash</a></p>\n\n<h4 id=\"232-问题定位\">2.3.2 问题定位</h4>\n\n<p>​\t通过分析，发生crash机型都是iOS10的设备， 问题可以初步断定存在于iOS10的设备上i<strong>一类堆栈为nano_free字样的Crash</strong>，</p>\n\n<h3 id=\"24-复现\">2.4 复现</h3>\n\n<h4 id=\"241-构建复现条件\">2.4.1 构建复现条件</h4>\n\n<p>​\t将全民K歌持久层代码简化后在新建工程中搭建复现环境。 模拟高频，高数据量持久化核心代码如下：</p>\n\n<pre><code class=\"language-objective-c\">- (void)addOperation{\n    int count = 0;\n    while (count &lt; 10000) {\n        [self.lock lock];\n        //通过两台设备（iOS10 iPhone7P | iOS14 iPhone12）控制变量法模拟测试结论如下：\n        //iOS10设备的问题：\n        //通过修改 count % particle 中的 particle的值可以控制需要序列化的数组对象modelData的数据量，\n        //实践证明，当 particle 值越大， modelData的数据量 越大，越容易发生crash\n        //解决方案，控制每次序列化 数据量可以规避此crash\n        //非iOS10设备未出现此问题\n        NSString *key = [NSString stringWithFormat:@\"%d\",count];\n        int particle = 5;\n        if (count % particle == 1) {\n            if (self.modelDataDict.allKeys.count &gt; 0) {\n                [self.modelDataDict removeObjectForKey:[self.modelDataDict.allKeys objectAtIndex:0]];\n            }\n            \n        } else {\n            KSModel *model = [[KSModel alloc] init];\n            [self.modelDataDict setObject:model forKey:key];\n\n        }\n        [self.lock unlock];\n        count ++;\n\n        [self addopera:[self golbalSaveConfigKey] from:0 data:[self.modelDataDict mutableCopy]];\n\n        NSLog(@\"done index:%d datalen = %lu\", count, (unsigned long)self.modelDataDict.allKeys.count);\n    }\n    \n}\n\n- (void)addopera:(NSString *) key from:(int) type data:(id&lt;NSCoding, NSObject&gt;)obj{\n    \n    __block NSData *value = nil;\n    [_diskOperationQueue addOperationWithBlock:^{\n        NSMutableString *str = [NSMutableString new];\n        @try {\n            value = [NSKeyedArchiver archivedDataWithRootObject:obj];\n        }\n        @catch (NSException *exception) {\n            NSLog(@\"exception = %@ ||  from = %d \" ,exception ,type);\n        }\n        \n        NSString *filePath = [ViewController migrateFileNameForKey:[NSString stringWithFormat:@\"%@_%@_a\", str, key]];\n        NSError *error = nil;\n        [value writeToFile:filePath options:NSDataWritingAtomic error:&amp;error];\n    }];\n}\n\n\n</code></pre>\n\n<h4 id=\"242-控制设备变量对比\">2.4.2 控制设备变量对比</h4>\n\n<p>​\t通过控制设备以不同iOS版本号的设备进行测试，在iOS10 iPhone7P上跑上述代码 发生了Crash，Crash堆栈位置吻合：</p>\n\n<p><img src=\"img/2021-09-13crash/Crash.png\" alt=\"\" /></p>\n\n<p>在iOS14 iPhone12 未出现此crash</p>\n\n<h4 id=\"243-控制数据量对比\">2.4.3 控制数据量对比</h4>\n\n<p>​\t通过改变上述 particle 的值为 2 时，iOS10的设备不会发生crash,可以证明在所需序列化数据量较小时（至少说明在长度小于等于2的情况）不会发生crash，运行日志表明循环10000次序列化的情况：</p>\n\n<pre><code class=\"language-objective-c\">2021-09-07 21:22:25.626353 PT-2[1187:35082] done index:9995 datalen = 2\n2021-09-07 21:22:25.626385 PT-2[1187:35082] done index:9996 datalen = 1\n2021-09-07 21:22:25.626456 PT-2[1187:35082] done index:9997 datalen = 2\n2021-09-07 21:22:25.626520 PT-2[1187:35082] done index:9998 datalen = 1\n2021-09-07 21:22:25.626584 PT-2[1187:35082] done index:9999 datalen = 2\n2021-09-07 21:22:25.626610 PT-2[1187:35082] done index:10000 datalen = 1\n</code></pre>\n\n<p>​\t而当particle超过一定数值及循环次数达到一定次数（也就是所需序列化的数组长度足够长时）就会发生crash，通过日志查看，当前复现条件数组长度达到5000左右时发生crash，与在全民K歌项目中的环境不同，可能这个长度会有差异：</p>\n\n<pre><code class=\"language-objective-c\">2021-09-07 21:14:15.166295 PT-2[1087:32256] done index:8773 datalen = 5264\nPT-2(1087,0x16dfe3000) malloc: *** error for object 0x173050000: Freeing unallocated pointer\n*** set a breakpoint in malloc_error_break to debug\n*** error for object 0x173050000: Freeing unallocated pointer\n</code></pre>\n\n<p>上述日志发生crash的条件：</p>\n\n<p>循环次数为：8773</p>\n\n<p>所需序列化数组数据长度为：5264</p>\n\n<h3 id=\"25-解决方案\">2.5 解决方案</h3>\n\n<p>​\t通过上述调研与实践，问题发生在特定设备及特定条件下：</p>\n\n<p>特定设备：iOS10.x</p>\n\n<p>​\t特定设备无法避免。</p>\n\n<p>特定条件：序列化数据量大</p>\n\n<p>​\t通过全民K歌持久层代码走读，发现发生增删时，都要重新序列化全量的数据。由于上述复现条件的【控制数据量对比】</p>\n\n<p>通过优化增量数据的序列化方案可以使得序列化数据量较小，从而规避此crash。</p>\n\n<p>方案一：CoreData替代NSKeyedArchiver持久化方案</p>\n\n<p>方案二：优化NSKeyedArchiver的数据量，每次只持久化增量数据，持久化不再通过NSMutableDictionary setObject之后再持久化，而是直接将需要持久化的对象加Key进行持久化:</p>\n\n<pre><code class=\"language-objective-c\">- (void)addOperation{\n    int count = 0;\n    while (count &lt; 10000) {\n        [self.lock lock];\n        NSString *key = [NSString stringWithFormat:@\"%d\",count];\n\t\t\t\tKSModel *model = [[KSModel alloc] init];\n        [self addopera:[self golbalSaveConfigKeyWithKey:key] from:0 data:model];\n        [self.lock unlock];\n        count ++;\n        NSLog(@\"done index:%d datalen = %lu\", count, (unsigned long)self.modelDataDict.allKeys.count);\n    }\n}\n\n\n</code></pre>\n\n<p>上述方案每次序列化只有一个元素，经验证在iOS10.X 10000次循环不会发生crash，但此方法牺牲了遍历的方便性，需要在反序列化时通过Key值从不同的存储文件中获取后再进行：</p>\n\n<pre><code class=\"language-objective-c\">        id obj = [NSKeyedUnarchiver unarchiveObjectWithData:data];\n</code></pre>\n\n<p>补充：也需确保序列化对象属性数据量不宜过大</p>\n\n<h2 id=\"3其他\">3、其他</h2>\n\n<h3 id=\"31-风险\">3.1 风险</h3>\n\n<p>此外，CRASH方法中存在API废弃风险</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>value = [NSKeyedArchiver archivedDataWithRootObject:obj];'archivedDataWithRootObject:' is deprecated: first deprecated in iOS 12.0 - Use +archivedDataWithRootObject:requiringSecureCoding:error: instead\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p> </p>\n\n","name":"2021-09-13-crash.md","previous":{"id":"/2021/06/20/new-post","tags":[],"relative_path":"_posts/2021-06-20-new-post.md","collection":"posts","name":"2021-06-20-new-post.md","url":"/2021/06/20/new-post/","title":"Jenkins迁移","date":"2021-06-20 00:00:00 +0800","categories":[],"path":"_posts/2021-06-20-new-post.md","draft":false,"layout":"post","subtitle":"This is a subtitle","author":"PaysonChen","header-img":"img/post-bg-2015.jpg","slug":"new-post","ext":".md"},"output":"<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"google-site-verification\" content=\"xBT4GhYoi5qRD5tr338pgPM5OWHHIDR6mNg1a3euekI\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, viewport-fit=cover\">\n    <meta name=\"description\" content=\"与你一起发现更大的世界。\">\n    <meta name=\"keywords\"  content=\"PaysonChen,iOS,流媒体\">\n    <meta name=\"theme-color\" content=\"#000000\">\n    \n    <!-- Open Graph -->\n    <meta property=\"og:title\" content=\"iOS 10.x 内存Crash 排查 纪要 - PaysonChen的博客 | PaysonChen Blog\">\n    \n    <meta property=\"og:type\" content=\"article\">\n    <meta property=\"og:description\" content=\"更新日期：2021-09-07\n\">\n    \n    \n    <meta property=\"article:published_time\" content=\"2021-09-13T00:00:00Z\">\n    \n    \n    <meta property=\"article:author\" content=\"PaysonChen\">\n    \n    \n    \n    <meta property=\"og:image\" content=\"http://localhost:4000\">\n    <meta property=\"og:url\" content=\"http://localhost:4000/2021/09/13/crash/\">\n    <meta property=\"og:site_name\" content=\"PaysonChen的博客 | PaysonChen Blog\">\n    \n    <title>iOS 10.x 内存Crash 排查 纪要 - PaysonChen的博客 | PaysonChen Blog</title>\n\n    <!-- Web App Manifest -->\n    <link rel=\"manifest\" href=\"/pwa/manifest.json\">\n\n    <!-- Favicon -->\n    <link rel=\"shortcut icon\" href=\"/img/favicon.ico\">\n    \n    <!-- Canonical URL -->\n    <link rel=\"canonical\" href=\"http://localhost:4000/2021/09/13/crash/\">\n\n    <!-- Bootstrap Core CSS -->\n    <link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\">\n\n    <!-- Custom CSS -->\n    <link rel=\"stylesheet\" href=\"/css/hux-blog.min.css\">\n\n    <!-- Custom Fonts -->\n    <!-- <link href=\"http://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\"> -->\n    <!-- Hux change font-awesome CDN to qiniu -->\n    <link href=\"//cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\">\n\n\n    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->\n    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->\n    <!--[if lt IE 9]>\n        <script src=\"https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js\"></script>\n        <script src=\"https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js\"></script>\n    <![endif]-->\n\n    <!-- ga & ba script hoook -->\n    <script></script>\n</head>\n\n\n<!-- hack iOS CSS :active style -->\n<body ontouchstart=\"\">\n\n    <!-- Navigation -->\n\n    <nav class=\"navbar navbar-default navbar-custom navbar-fixed-top\">\n        \n        <div class=\"container-fluid\">\n            <!-- Brand and toggle get grouped for better mobile display -->\n            <div class=\"navbar-header page-scroll\">\n                <button type=\"button\" class=\"navbar-toggle\">\n                    <span class=\"sr-only\">Toggle navigation</span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                </button>\n                <a class=\"navbar-brand\" href=\"/\">PaysonChen Blog</a>\n            </div>\n\n            <!-- Collect the nav links, forms, and other content for toggling -->\n            <div id=\"huxblog_navbar\">\n                <div class=\"navbar-collapse\">\n                    <ul class=\"nav navbar-nav navbar-right\">\n                        <li>\n                            <a href=\"/\">Home</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        <li>\n                            <a href=\"/about/\">About</a>\n                        </li>\n                        \n                        \n                        \n                        <li>\n                            <a href=\"/archive/\">Archive</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        <li class=\"search-icon\">\n                            <a href=\"javascript:void(0)\">\n                                <i class=\"fa fa-search\"></i>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n            <!-- /.navbar-collapse -->\n        </div>\n        <!-- /.container -->\n    </nav>\n\n    <script>\n        // Drop Bootstarp low-performance Navbar\n        // Use customize navbar with high-quality material design animation\n        // in high-perf jank-free CSS3 implementation\n        var $body = document.body;\n        var $toggle = document.querySelector('.navbar-toggle');\n        var $navbar = document.querySelector('#huxblog_navbar');\n        var $collapse = document.querySelector('.navbar-collapse');\n\n        var __HuxNav__ = {\n            close: function () {\n                $navbar.className = \" \";\n                // wait until animation end.\n                setTimeout(function () {\n                    // prevent frequently toggle\n                    if ($navbar.className.indexOf('in') < 0) {\n                        $collapse.style.height = \"0px\"\n                    }\n                }, 400)\n            },\n            open: function () {\n                $collapse.style.height = \"auto\"\n                $navbar.className += \" in\";\n            }\n        }\n\n        // Bind Event\n        $toggle.addEventListener('click', function (e) {\n            if ($navbar.className.indexOf('in') > 0) {\n                __HuxNav__.close()\n            } else {\n                __HuxNav__.open()\n            }\n        })\n\n        /**\n         * Since Fastclick is used to delegate 'touchstart' globally\n         * to hack 300ms delay in iOS by performing a fake 'click',\n         * Using 'e.stopPropagation' to stop 'touchstart' event from \n         * $toggle/$collapse will break global delegation.\n         * \n         * Instead, we use a 'e.target' filter to prevent handler\n         * added to document close HuxNav.  \n         *\n         * Also, we use 'click' instead of 'touchstart' as compromise\n         */\n        document.addEventListener('click', function (e) {\n            if (e.target == $toggle) return;\n            if (e.target.className == 'icon-bar') return;\n            __HuxNav__.close();\n        })\n    </script>\n    <!-- Search -->\n<div class=\"search-page\">\n  <div class=\"search-icon-close-container\">\n    <span class=\"search-icon-close\">\n      <i class=\"fa fa-chevron-down\"></i>\n    </span>\n  </div>\n  <div class=\"search-main container\">\n    <div class=\"row\">\n      <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n        <form></form>\n        <input type=\"text\" id=\"search-input\" placeholder=\"$ grep...\">\n        </form>\n        <div id=\"search-results\" class=\"mini-post-list\"></div>\n      </div>\n    </div>\n  </div>\n</div>\n\n    <!-- Image to hack wechat -->\n<!-- <img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\"> -->\n<!-- <img src=\"/img/post-bg-ios9-web.jpg\" width=\"0\" height=\"0\"> -->\n\n<!-- Post Header -->\n\n\n\n<style type=\"text/css\">\n    header.intro-header{\n        position: relative;\n        background-image: url('/img/post-bg-ios9-web.jpg');\n        background: ;\n    }\n\n    \n</style>\n\n<header class=\"intro-header\" >\n\n    <div class=\"header-mask\"></div>\n    \n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <div class=\"post-heading\">\n                    <div class=\"tags\">\n                        \n                    </div>\n                    <h1>iOS 10.x 内存Crash 排查 纪要</h1>\n                    \n                    <h2 class=\"subheading\">This is a subtitle</h2>\n                    <span class=\"meta\">Posted by PaysonChen on September 13, 2021</span>\n                </div>\n            </div>\n        </div>\n    </div>\n</header>\n\n\n\n\n\n\n<!-- Post Content -->\n<article>\n    <div class=\"container\">\n        <div class=\"row\">\n\n    <!-- Post Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                post-container\">\n\n                <!-- Multi-Lingual -->\n                \n\n\t\t\t\t<p>更新日期：2021-09-07</p>\n\n<p>[TOC]</p>\n\n<h2 id=\"1基本情况\">1、基本情况</h2>\n\n<p>​\t最终堆栈位置：</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n</pre></td><td class=\"rouge-code\"><pre>XXX -[KSKitBaseModel encodeWithCoder:] (KSKitBaseModel.m:)\nXXX -[KSBaseModel encodeWithCoder:] (KSBaseModel.m:)\nXXX -[KSBaseModel encodeWithCoder:] (KSBaseModel.m:)\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h2 id=\"2分析\">2、分析</h2>\n\n<h3 id=\"21-堆栈分析\">2.1 堆栈分析</h3>\n\n<p>跟踪多条Crash堆栈</p>\n\n<p>XXX堆栈 1：</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n</pre></td><td class=\"rouge-code\"><pre>9 XXX 0x0000000103bf4718 -[KSKitBaseModel encodeWithCoder:] (KSKitBaseModel.m:42)\n11 XXX 0x0000000100721688 -[KSBaseModel encodeWithCoder:] (KSBaseModel.m:50)\n11 XXX 0x0000000100721688 -[KSBaseModel encodeWithCoder:] (KSBaseModel.m:50)\n21 XXX 0x00000001004434cc -[KSKVStorage writeObjectToFile:forKey:atomic:completion:] (KSKVStorage.m:0)\n22 XXX 0x000000010326f550 -[KSLocalConfigManager internalRemoveLocalConfig:isGolbal:] (KSLocalConfigManager.m:273)\n23 XXX 0x0000000103270330 +[KSLocalConfigManager removeLocalConfig:isGolbal:] (KSLocalConfigManager.m:0)\n24 XXX 0x000000010326fa64 +[KSLocalConfigManager dailyCommonValueConfig:isGolbal:] (KSLocalConfigManager.m:0)\n25 XXX 0x0000000100b55a30 -[KSKTVRoomViewController(InteractionGuide) checkIfShowGameOngoingView:] (KSKTVRoomViewController+InteractionGuide.m:0)\n26 XXX 0x0000000100b54d38 -[KSKTVRoomViewController(InteractionGuide) showGameOngoingViewWhenEnterKTV:] (KSKTVRoomViewController+InteractionGuide.m:192)\n37 XXX 0x00000001014ec7d4 main (main.m:37)\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>XXX堆栈2：</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n</pre></td><td class=\"rouge-code\"><pre>9 XXX 0x0000000103b94718 -[KSKitBaseModel encodeWithCoder:] (KSKitBaseModel.m:42)\n11 XXX 0x00000001006c1688 -[KSBaseModel encodeWithCoder:] (KSBaseModel.m:50)\n11 XXX 0x00000001006c1688 -[KSBaseModel encodeWithCoder:] (KSBaseModel.m:50)\n21 XXX 0x00000001003e34cc -[KSKVStorage writeObjectToFile:forKey:atomic:completion:] (KSKVStorage.m:0)\n22 XXX 0x000000010320ee7c -[KSLocalConfigManager internalSaveLocalConfig:value:isGolbal:] (KSLocalConfigManager.m:220)\n23 XXX 0x000000010320fb10 +[KSLocalConfigManager saveLocalConfig:commonValue:isGolbal:] (KSLocalConfigManager.m:0)\n24 XXX 0x0000000102152b94 -[KSSendGiftContainerView tabView:didChangeSelectIndex:] (KSSendGiftContainerView.m:1952)\n25 XXX 0x000000010056235c -[KSTabView setSelectIndex:] (KSTabView.m:723)\n28 XXX 0x00000001009ccbc4 -[KSBaseButton sendAction:to:forEvent:] (KSBaseButton.m:0)\n46 XXX 0x000000010148c7d4 main (main.m:37)\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h3 id=\"22-代码分析\">2.2 代码分析</h3>\n\n<p>所有类型的堆栈最终都指向KSKVStorage writeObjectToFile,</p>\n\n<p>这是一个存储控制类，writeObjectToFile是将对象归档后写到磁盘</p>\n\n<p>最终堆栈指向</p>\n\n<pre><code class=\"language-objective-c\">0 libsystem_kernel.dylib 0x000000018aa97014 ___pthread_kill + 8\n1 libsystem_c.dylib 0x000000018aa0b400 _abort + 140\n2 libsystem_malloc.dylib 0x000000018aadba5c _nano_free_definite_size + 92\n3 libsystem_malloc.dylib 0x000000018aadd028 _nano_realloc + 648\n4 libsystem_malloc.dylib 0x000000018aacf240 _malloc_zone_realloc + 180\n5 Foundation 0x000000018c5aa3e4 -[NSOperation isAsynchronous] + 180\n6 Foundation 0x000000018c53c2a0 __decodeInt64 + 452\n</code></pre>\n\n<p>可以认为是NSKeyedUnarchiver 与 NSKeyedArchiver 触发的对象  KSKitBaseModel 及 KSBaseModel 的 encodeWithCoder 方法，</p>\n\n<p>触发encodeWithCoder:方法为自动序列化的标准做法如下：</p>\n\n<pre><code class=\"language-objective-c\">- (void)encodeWithCoder:(NSCoder *)encoder {\n\tClass cls = [self class];\n\twhile (cls != [NSObject class]) {\n\t\tunsigned int numberOfIvars = 0;\n\t\tIvar* ivars = class_copyIvarList(cls, &amp;numberOfIvars);\n\t\tfor(const Ivar* p = ivars; p &lt; ivars+numberOfIvars; p++)\n\t\t{\n\t\t\tIvar const ivar = *p;\n\t\t\tconst char *type = ivar_getTypeEncoding(ivar);\n\t\t\tNSString *key = [NSString stringWithUTF8String:ivar_getName(ivar)];\n            if (key == nil){\n                continue;\n            }\n            if ([key length] == 0){\n                continue;\n            }\n            \n\t\t\tid value = [self valueForKey:key];\n\t\t\tif (value) {\n\t\t\t\tswitch (type[0]) {\n\t\t\t\t\tcase _C_STRUCT_B: {\n\t\t\t\t\t\tNSUInteger ivarSize = 0;\n\t\t\t\t\t\tNSUInteger ivarAlignment = 0;\n\t\t\t\t\t\tNSGetSizeAndAlignment(type, &amp;ivarSize, &amp;ivarAlignment);\n\t\t\t\t\t\tNSData *data = [NSData dataWithBytes:(const char *)((__bridge void *)self) + ivar_getOffset(ivar)\n\t\t\t\t\t\t\t\t\t\t\t\t\t  length:ivarSize];\n\t\t\t\t\t\t[encoder encodeObject:data forKey:key];\n\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\t[encoder encodeObject:value\n\t\t\t\t\t\t\t\t\t   forKey:key];\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (ivars) {\n\t\t\tfree(ivars);\n\t\t}\n\t\t\n\t\tcls = class_getSuperclass(cls);\n\t}\n}\n\n</code></pre>\n\n<p>上述方法通过 runtime机制 遍历当前类及其父类的属性，可以推断，在某个类或者某个继承关系中存在如下调用顺序时，触发了crash</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n</pre></td><td class=\"rouge-code\"><pre>[KSKitBaseModel encodeWithCoder:] (KSKitBaseModel.m:42)\n[KSBaseModel encodeWithCoder:] (KSBaseModel.m:50)\n[KSBaseModel encodeWithCoder:] (KSBaseModel.m:50)\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>代码行数可能不准。</p>\n\n<p>根据断点调试，可能发生在 某个对象的 的归档中：</p>\n\n<h3 id=\"23-问题定位\">2.3 问题定位</h3>\n\n<h4 id=\"231-堆栈定位\">2.3.1 堆栈定位</h4>\n\n<p>​\t再看堆栈，实现了自动序列化的KSBaseModel 及 KSKitBaseModel 作为全民K歌项目持久层对象的基类在自动序列化过程中发生crash：</p>\n\n<pre><code class=\"language-objective-c\">0 libsystem_kernel.dylib 0x000000018aa97014 ___pthread_kill + 8\n1 libsystem_c.dylib 0x000000018aa0b400 _abort + 140\n2 libsystem_malloc.dylib 0x000000018aadba5c _nano_free_definite_size + 92\n3 libsystem_malloc.dylib 0x000000018aadd028 _nano_realloc + 648\n4 libsystem_malloc.dylib 0x000000018aacf240 _malloc_zone_realloc + 180\n5 Foundation 0x000000018c5aa3e4 -[NSOperation isAsynchronous] + 180\n6 Foundation 0x000000018c53c2a0 __decodeInt64 + 452\n7 XXX 0x0000000103cab808 -[KSKitBaseModel encodeWithCoder:] (KSKitBaseModel.m:42)\n8 Foundation 0x000000018c53c49c __decodeIntXXX+ 416\n9 XXX 0x00000001037a0b94 -[KSBaseModel encodeWithCoder:] (KSBaseModel.m:52)\n……\n</code></pre>\n\n<p>​\t在分析了自动序列化代码未找到问题的情况下，看引发crash更直接的libsystem_malloc.dylib 通过对_nano_free_definite_size产生crash的调研发现bugly及微信团队在之前遇到过类似的情况：<a href=\"https://zhuanlan.zhihu.com/p/24342979\">【腾讯Bugly干货分享】聊聊苹果的Bug - iOS 10 nano_free Crash</a></p>\n\n<h4 id=\"232-问题定位\">2.3.2 问题定位</h4>\n\n<p>​\t通过分析，发生crash机型都是iOS10的设备， 问题可以初步断定存在于iOS10的设备上i<strong>一类堆栈为nano_free字样的Crash</strong>，</p>\n\n<h3 id=\"24-复现\">2.4 复现</h3>\n\n<h4 id=\"241-构建复现条件\">2.4.1 构建复现条件</h4>\n\n<p>​\t将全民K歌持久层代码简化后在新建工程中搭建复现环境。 模拟高频，高数据量持久化核心代码如下：</p>\n\n<pre><code class=\"language-objective-c\">- (void)addOperation{\n    int count = 0;\n    while (count &lt; 10000) {\n        [self.lock lock];\n        //通过两台设备（iOS10 iPhone7P | iOS14 iPhone12）控制变量法模拟测试结论如下：\n        //iOS10设备的问题：\n        //通过修改 count % particle 中的 particle的值可以控制需要序列化的数组对象modelData的数据量，\n        //实践证明，当 particle 值越大， modelData的数据量 越大，越容易发生crash\n        //解决方案，控制每次序列化 数据量可以规避此crash\n        //非iOS10设备未出现此问题\n        NSString *key = [NSString stringWithFormat:@\"%d\",count];\n        int particle = 5;\n        if (count % particle == 1) {\n            if (self.modelDataDict.allKeys.count &gt; 0) {\n                [self.modelDataDict removeObjectForKey:[self.modelDataDict.allKeys objectAtIndex:0]];\n            }\n            \n        } else {\n            KSModel *model = [[KSModel alloc] init];\n            [self.modelDataDict setObject:model forKey:key];\n\n        }\n        [self.lock unlock];\n        count ++;\n\n        [self addopera:[self golbalSaveConfigKey] from:0 data:[self.modelDataDict mutableCopy]];\n\n        NSLog(@\"done index:%d datalen = %lu\", count, (unsigned long)self.modelDataDict.allKeys.count);\n    }\n    \n}\n\n- (void)addopera:(NSString *) key from:(int) type data:(id&lt;NSCoding, NSObject&gt;)obj{\n    \n    __block NSData *value = nil;\n    [_diskOperationQueue addOperationWithBlock:^{\n        NSMutableString *str = [NSMutableString new];\n        @try {\n            value = [NSKeyedArchiver archivedDataWithRootObject:obj];\n        }\n        @catch (NSException *exception) {\n            NSLog(@\"exception = %@ ||  from = %d \" ,exception ,type);\n        }\n        \n        NSString *filePath = [ViewController migrateFileNameForKey:[NSString stringWithFormat:@\"%@_%@_a\", str, key]];\n        NSError *error = nil;\n        [value writeToFile:filePath options:NSDataWritingAtomic error:&amp;error];\n    }];\n}\n\n\n</code></pre>\n\n<h4 id=\"242-控制设备变量对比\">2.4.2 控制设备变量对比</h4>\n\n<p>​\t通过控制设备以不同iOS版本号的设备进行测试，在iOS10 iPhone7P上跑上述代码 发生了Crash，Crash堆栈位置吻合：</p>\n\n<p><img src=\"img/2021-09-13crash/Crash.png\" alt=\"\" /></p>\n\n<p>在iOS14 iPhone12 未出现此crash</p>\n\n<h4 id=\"243-控制数据量对比\">2.4.3 控制数据量对比</h4>\n\n<p>​\t通过改变上述 particle 的值为 2 时，iOS10的设备不会发生crash,可以证明在所需序列化数据量较小时（至少说明在长度小于等于2的情况）不会发生crash，运行日志表明循环10000次序列化的情况：</p>\n\n<pre><code class=\"language-objective-c\">2021-09-07 21:22:25.626353 PT-2[1187:35082] done index:9995 datalen = 2\n2021-09-07 21:22:25.626385 PT-2[1187:35082] done index:9996 datalen = 1\n2021-09-07 21:22:25.626456 PT-2[1187:35082] done index:9997 datalen = 2\n2021-09-07 21:22:25.626520 PT-2[1187:35082] done index:9998 datalen = 1\n2021-09-07 21:22:25.626584 PT-2[1187:35082] done index:9999 datalen = 2\n2021-09-07 21:22:25.626610 PT-2[1187:35082] done index:10000 datalen = 1\n</code></pre>\n\n<p>​\t而当particle超过一定数值及循环次数达到一定次数（也就是所需序列化的数组长度足够长时）就会发生crash，通过日志查看，当前复现条件数组长度达到5000左右时发生crash，与在全民K歌项目中的环境不同，可能这个长度会有差异：</p>\n\n<pre><code class=\"language-objective-c\">2021-09-07 21:14:15.166295 PT-2[1087:32256] done index:8773 datalen = 5264\nPT-2(1087,0x16dfe3000) malloc: *** error for object 0x173050000: Freeing unallocated pointer\n*** set a breakpoint in malloc_error_break to debug\n*** error for object 0x173050000: Freeing unallocated pointer\n</code></pre>\n\n<p>上述日志发生crash的条件：</p>\n\n<p>循环次数为：8773</p>\n\n<p>所需序列化数组数据长度为：5264</p>\n\n<h3 id=\"25-解决方案\">2.5 解决方案</h3>\n\n<p>​\t通过上述调研与实践，问题发生在特定设备及特定条件下：</p>\n\n<p>特定设备：iOS10.x</p>\n\n<p>​\t特定设备无法避免。</p>\n\n<p>特定条件：序列化数据量大</p>\n\n<p>​\t通过全民K歌持久层代码走读，发现发生增删时，都要重新序列化全量的数据。由于上述复现条件的【控制数据量对比】</p>\n\n<p>通过优化增量数据的序列化方案可以使得序列化数据量较小，从而规避此crash。</p>\n\n<p>方案一：CoreData替代NSKeyedArchiver持久化方案</p>\n\n<p>方案二：优化NSKeyedArchiver的数据量，每次只持久化增量数据，持久化不再通过NSMutableDictionary setObject之后再持久化，而是直接将需要持久化的对象加Key进行持久化:</p>\n\n<pre><code class=\"language-objective-c\">- (void)addOperation{\n    int count = 0;\n    while (count &lt; 10000) {\n        [self.lock lock];\n        NSString *key = [NSString stringWithFormat:@\"%d\",count];\n\t\t\t\tKSModel *model = [[KSModel alloc] init];\n        [self addopera:[self golbalSaveConfigKeyWithKey:key] from:0 data:model];\n        [self.lock unlock];\n        count ++;\n        NSLog(@\"done index:%d datalen = %lu\", count, (unsigned long)self.modelDataDict.allKeys.count);\n    }\n}\n\n\n</code></pre>\n\n<p>上述方案每次序列化只有一个元素，经验证在iOS10.X 10000次循环不会发生crash，但此方法牺牲了遍历的方便性，需要在反序列化时通过Key值从不同的存储文件中获取后再进行：</p>\n\n<pre><code class=\"language-objective-c\">        id obj = [NSKeyedUnarchiver unarchiveObjectWithData:data];\n</code></pre>\n\n<p>补充：也需确保序列化对象属性数据量不宜过大</p>\n\n<h2 id=\"3其他\">3、其他</h2>\n\n<h3 id=\"31-风险\">3.1 风险</h3>\n\n<p>此外，CRASH方法中存在API废弃风险</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>value = [NSKeyedArchiver archivedDataWithRootObject:obj];'archivedDataWithRootObject:' is deprecated: first deprecated in iOS 12.0 - Use +archivedDataWithRootObject:requiringSecureCoding:error: instead\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p> </p>\n\n\n\n                <hr style=\"visibility: hidden;\">\n                <ul class=\"pager\">\n                    \n                    <li class=\"previous\">\n                        <a href=\"/2021/06/20/new-post/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Jenkins迁移\">\n                        Previous<br>\n                        <span>Jenkins迁移</span>\n                        </a>\n                    </li>\n                    \n                    \n                    <li class=\"next\">\n                        <a href=\"/2021/10/18/git/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"多账号配置GIT\">\n                        Next<br>\n                        <span>多账号配置GIT</span>\n                        </a>\n                    </li>\n                    \n                </ul>\n                <hr style=\"visibility: hidden;\">\n\n                \n                <!-- disqus 评论框 start -->\n                <div class=\"comment\">\n                    <div id=\"disqus_thread\" class=\"disqus-thread\"></div>\n                </div>\n                <!-- disqus 评论框 end -->\n                \n\n                \n            </div>  \n\n    <!-- Side Catalog Container -->\n        \n            <div class=\"\n                col-lg-2 col-lg-offset-0\n                visible-lg-block\n                sidebar-container\n                catalog-container\">\n                <div class=\"side-catalog\">\n                    <hr class=\"hidden-sm hidden-xs\">\n                    <h5>\n                        <a class=\"catalog-toggle\" href=\"#\">CATALOG</a>\n                    </h5>\n                    <ul class=\"catalog-body\"></ul>\n                </div>\n            </div>\n        \n\n    <!-- Sidebar Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                sidebar-container\">\n\n                <!-- Featured Tags -->\n                \n\n\n<section>\n    \n        <hr class=\"hidden-sm hidden-xs\">\n    \n    <h5><a href=\"/archive/\">FEATURED TAGS</a></h5>\n    <div class=\"tags\">\n        \n        \n        \n        \n        \n    </div>\n</section>\n\n\n                <!-- Friends Blog -->\n                \n            </div>\n        </div>\n    </div>\n</article>\n\n<!-- add support for mathjax by voleking-->\n\n\n\n\n\n\n<!-- disqus 公共JS代码 start (一个网页只需插入一次) -->\n<script type=\"text/javascript\">\n    /* * * CONFIGURATION VARIABLES * * */\n    var disqus_shortname = \"Cyp\";\n    var disqus_identifier = \"/2021/09/13/crash\";\n    var disqus_url = \"http://localhost:4000/2021/09/13/crash/\";\n\n    (function() {\n        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;\n        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';\n        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);\n    })();\n</script>\n<!-- disqus 公共JS代码 end -->\n\n\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n      var d = document, t = 'script',\n          o = d.createElement(t),\n          s = d.getElementsByTagName(t)[0];\n      o.src = u;\n      if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n      s.parentNode.insertBefore(o, s);\n    }\n</script>\n<!-- anchor-js, Doc:http://bryanbraun.github.io/anchorjs/ -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/anchor-js/1.1.1/anchor.min.js\",function(){\n        anchors.options = {\n          visible: 'hover',\n          placement: 'right',\n          // icon: '#'\n        };\n        anchors.add().remove('.intro-header h1').remove('.subheading').remove('.sidebar-container h5');\n    })\n</script>\n<style>\n    /* place left on bigger screen */\n    @media all and (min-width: 800px) {\n        .anchorjs-link{\n            position: absolute;\n            left: -0.75em;\n            font-size: 1.1em;\n            margin-top : -0.1em;\n        }\n    }\n</style>\n\n\n\n    <!-- Footer -->\n<footer>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <!-- SNS Link -->\n                \n\n\n<ul class=\"list-inline text-center\">\n\n\n  \n  \n  \n  \n  \n  \n  \n</ul>\n\n                <p class=\"copyright text-muted\">\n                    Copyright &copy; PaysonChen Blog 2024\n                    <br>\n                    <!-- Powered by <a href=\"http://huangxuan.me\">Hux Blog</a> | -->\n                 <!--    <iframe style=\"margin-left: 2px; margin-bottom:-5px;\" frameborder=\"0\" scrolling=\"0\" width=\"100px\"\n                        height=\"20px\"\n                        src=\"https://ghbtns.com/github-btn.html?user=huxpro&repo=huxpro.github.io&type=star&count=true\">\n                    </iframe> -->\n                </p>\n            </div>\n        </div>\n    </div>\n</footer>\n\n<!-- jQuery -->\n<script src=\"/js/jquery.min.js \"></script>\n\n<!-- Bootstrap Core JavaScript -->\n<!-- Currently, only navbar scroll-down effect at desktop still depends on this -->\n<script src=\"/js/bootstrap.min.js \"></script>\n\n<!-- Custom Theme JavaScript -->\n<script src=\"/js/hux-blog.min.js \"></script>\n\n<!-- Simple Jekyll Search -->\n<script src=\"/js/simple-jekyll-search.min.js\"></script>\n\n<!-- Service Worker -->\n\n<script src=\"/js/snackbar.js \"></script>\n<script src=\"/js/sw-registration.js \"></script>\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n        var d = document, t = 'script',\n            o = d.createElement(t),\n            s = d.getElementsByTagName(t)[0];\n        o.src = u;\n        if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n        s.parentNode.insertBefore(o, s);\n    }\n</script>\n\n<!--\n     Because of the native support for backtick-style fenced code blocks\n     right within the Markdown is landed in Github Pages,\n     From V1.6, There is no need for Highlight.js,\n     so Huxblog drops it officially.\n\n     - https://github.com/blog/2100-github-pages-now-faster-and-simpler-with-jekyll-3-0\n     - https://help.github.com/articles/creating-and-highlighting-code-blocks/\n     - https://github.com/jneen/rouge/wiki/list-of-supported-languages-and-lexers\n-->\n<!--\n    <script>\n        async(\"http://cdn.bootcss.com/highlight.js/8.6/highlight.min.js\", function(){\n            hljs.initHighlightingOnLoad();\n        })\n    </script>\n    <link href=\"http://cdn.bootcss.com/highlight.js/8.6/styles/github.min.css\" rel=\"stylesheet\">\n-->\n\n\n\n\n\n\n\n<!--fastClick.js -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/fastclick/1.0.6/fastclick.min.js\", function () {\n        var $nav = document.querySelector(\"nav\");\n        if ($nav) FastClick.attach($nav);\n    })\n</script>\n\n\n<!-- Google Analytics -->\n\n\n\n<!-- Baidu Tongji -->\n\n\n\n<!-- Side Catalog -->\n\n<script type=\"text/javascript\">\n    function generateCatalog(selector) {\n\n        // interop with multilangual \n        if ('' == 'true') {\n            _containerSelector = 'div.post-container.active'\n        } else {\n            _containerSelector = 'div.post-container'\n        }\n\n        // init\n        var P = $(_containerSelector), a, n, t, l, i, c;\n        a = P.find('h1,h2,h3,h4,h5,h6');\n\n        // clean\n        $(selector).html('')\n\n        // appending\n        a.each(function () {\n            n = $(this).prop('tagName').toLowerCase();\n            i = \"#\" + $(this).prop('id');\n            t = $(this).text();\n            c = $('<a href=\"' + i + '\" rel=\"nofollow\">' + t + '</a>');\n            l = $('<li class=\"' + n + '_nav\"></li>').append(c);\n            $(selector).append(l);\n        });\n        return true;\n    }\n\n    generateCatalog(\".catalog-body\");\n\n    // toggle side catalog\n    $(\".catalog-toggle\").click((function (e) {\n        e.preventDefault();\n        $('.side-catalog').toggleClass(\"fold\")\n    }))\n\n    /*\n     * Doc: https://github.com/davist11/jQuery-One-Page-Nav\n     * Fork by Hux to support padding\n     */\n    async(\"/js/jquery.nav.js\", function () {\n        $('.catalog-body').onePageNav({\n            currentClass: \"active\",\n            changeHash: !1,\n            easing: \"swing\",\n            filter: \"\",\n            scrollSpeed: 700,\n            scrollOffset: 0,\n            scrollThreshold: .2,\n            begin: null,\n            end: null,\n            scrollChange: null,\n            padding: 80\n        });\n    });\n</script>\n\n\n\n<!-- Multi-Lingual -->\n\n\n<!-- Simple Jekyll Search -->\n<script>\n    // https://stackoverflow.com/questions/1912501/unescape-html-entities-in-javascript\n    function htmlDecode(input) {\n        var e = document.createElement('textarea');\n        e.innerHTML = input;\n        // handle case of empty input\n        return e.childNodes.length === 0 ? \"\" : e.childNodes[0].nodeValue;\n    }\n\n    SimpleJekyllSearch({\n        searchInput: document.getElementById('search-input'),\n        resultsContainer: document.getElementById('search-results'),\n        json: '/search.json',\n        searchResultTemplate: '<div class=\"post-preview item\"><a href=\"{url}\"><h2 class=\"post-title\">{title}</h2><h3 class=\"post-subtitle\">{subtitle}</h3><hr></a></div>',\n        noResultsText: 'No results',\n        limit: 50,\n        fuzzy: false,\n        // a hack to get escaped subtitle unescaped. for some reason, \n        // post.subtitle w/o escape filter nuke entire search.\n        templateMiddleware: function (prop, value, template) {\n            if (prop === 'subtitle' || prop === 'title') {\n                if (value.indexOf(\"code\")) {\n                    return htmlDecode(value);\n                } else {\n                    return value;\n                }\n            }\n        }\n    });\n\n    $(document).ready(function () {\n        var $searchPage = $('.search-page');\n        var $searchOpen = $('.search-icon');\n        var $searchClose = $('.search-icon-close');\n        var $searchInput = $('#search-input');\n        var $body = $('body');\n\n        $searchOpen.on('click', function (e) {\n            e.preventDefault();\n            $searchPage.toggleClass('search-active');\n            var prevClasses = $body.attr('class') || '';\n            setTimeout(function () {\n                $body.addClass('no-scroll');\n            }, 400)\n\n            if ($searchPage.hasClass('search-active')) {\n                $searchClose.on('click', function (e) {\n                    e.preventDefault();\n                    $searchPage.removeClass('search-active');\n                    $body.attr('class', prevClasses);  // from closure \n                });\n                $searchInput.focus();\n            }\n        });\n    });\n</script>\n\n\n<!-- Image to hack wechat -->\n<img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\" />\n<!-- Migrate from head to bottom, no longer block render and still work -->\n\n</body>\n\n</html>\n","excerpt":"<p>更新日期：2021-09-07</p>\n","url":"/2021/09/13/crash/","next":{"id":"/2021/10/18/git","tags":[],"relative_path":"_posts/2021-10-18-git.md","collection":"posts","name":"2021-10-18-git.md","url":"/2021/10/18/git/","title":"多账号配置GIT","date":"2021-10-18 00:00:00 +0800","categories":[],"path":"_posts/2021-10-18-git.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/post-bg-2015.jpg","slug":"git","ext":".md"},"title":"iOS 10.x 内存Crash 排查 纪要","date":"2021-09-13 00:00:00 +0800","categories":[],"path":"_posts/2021-09-13-crash.md","draft":false,"layout":"post","subtitle":"This is a subtitle","author":"PaysonChen","header-img":"img/post-bg-ios9-web.jpg","slug":"crash","ext":".md"},"output":"<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"google-site-verification\" content=\"xBT4GhYoi5qRD5tr338pgPM5OWHHIDR6mNg1a3euekI\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, viewport-fit=cover\">\n    <meta name=\"description\" content=\"与你一起发现更大的世界。\">\n    <meta name=\"keywords\"  content=\"PaysonChen,iOS,流媒体\">\n    <meta name=\"theme-color\" content=\"#000000\">\n    \n    <!-- Open Graph -->\n    <meta property=\"og:title\" content=\"多账号配置GIT - PaysonChen的博客 | PaysonChen Blog\">\n    \n    <meta property=\"og:type\" content=\"article\">\n    <meta property=\"og:description\" content=\"1、常规多账号\n\">\n    \n    \n    <meta property=\"article:published_time\" content=\"2021-10-18T00:00:00Z\">\n    \n    \n    <meta property=\"article:author\" content=\"PaysonChen\">\n    \n    \n    \n    <meta property=\"og:image\" content=\"http://localhost:4000\">\n    <meta property=\"og:url\" content=\"http://localhost:4000/2021/10/18/git/\">\n    <meta property=\"og:site_name\" content=\"PaysonChen的博客 | PaysonChen Blog\">\n    \n    <title>多账号配置GIT - PaysonChen的博客 | PaysonChen Blog</title>\n\n    <!-- Web App Manifest -->\n    <link rel=\"manifest\" href=\"/pwa/manifest.json\">\n\n    <!-- Favicon -->\n    <link rel=\"shortcut icon\" href=\"/img/favicon.ico\">\n    \n    <!-- Canonical URL -->\n    <link rel=\"canonical\" href=\"http://localhost:4000/2021/10/18/git/\">\n\n    <!-- Bootstrap Core CSS -->\n    <link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\">\n\n    <!-- Custom CSS -->\n    <link rel=\"stylesheet\" href=\"/css/hux-blog.min.css\">\n\n    <!-- Custom Fonts -->\n    <!-- <link href=\"http://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\"> -->\n    <!-- Hux change font-awesome CDN to qiniu -->\n    <link href=\"//cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\">\n\n\n    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->\n    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->\n    <!--[if lt IE 9]>\n        <script src=\"https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js\"></script>\n        <script src=\"https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js\"></script>\n    <![endif]-->\n\n    <!-- ga & ba script hoook -->\n    <script></script>\n</head>\n\n\n<!-- hack iOS CSS :active style -->\n<body ontouchstart=\"\">\n\n    <!-- Navigation -->\n\n    <nav class=\"navbar navbar-default navbar-custom navbar-fixed-top\">\n        \n        <div class=\"container-fluid\">\n            <!-- Brand and toggle get grouped for better mobile display -->\n            <div class=\"navbar-header page-scroll\">\n                <button type=\"button\" class=\"navbar-toggle\">\n                    <span class=\"sr-only\">Toggle navigation</span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                </button>\n                <a class=\"navbar-brand\" href=\"/\">PaysonChen Blog</a>\n            </div>\n\n            <!-- Collect the nav links, forms, and other content for toggling -->\n            <div id=\"huxblog_navbar\">\n                <div class=\"navbar-collapse\">\n                    <ul class=\"nav navbar-nav navbar-right\">\n                        <li>\n                            <a href=\"/\">Home</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        <li>\n                            <a href=\"/about/\">About</a>\n                        </li>\n                        \n                        \n                        \n                        <li>\n                            <a href=\"/archive/\">Archive</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        <li class=\"search-icon\">\n                            <a href=\"javascript:void(0)\">\n                                <i class=\"fa fa-search\"></i>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n            <!-- /.navbar-collapse -->\n        </div>\n        <!-- /.container -->\n    </nav>\n\n    <script>\n        // Drop Bootstarp low-performance Navbar\n        // Use customize navbar with high-quality material design animation\n        // in high-perf jank-free CSS3 implementation\n        var $body = document.body;\n        var $toggle = document.querySelector('.navbar-toggle');\n        var $navbar = document.querySelector('#huxblog_navbar');\n        var $collapse = document.querySelector('.navbar-collapse');\n\n        var __HuxNav__ = {\n            close: function () {\n                $navbar.className = \" \";\n                // wait until animation end.\n                setTimeout(function () {\n                    // prevent frequently toggle\n                    if ($navbar.className.indexOf('in') < 0) {\n                        $collapse.style.height = \"0px\"\n                    }\n                }, 400)\n            },\n            open: function () {\n                $collapse.style.height = \"auto\"\n                $navbar.className += \" in\";\n            }\n        }\n\n        // Bind Event\n        $toggle.addEventListener('click', function (e) {\n            if ($navbar.className.indexOf('in') > 0) {\n                __HuxNav__.close()\n            } else {\n                __HuxNav__.open()\n            }\n        })\n\n        /**\n         * Since Fastclick is used to delegate 'touchstart' globally\n         * to hack 300ms delay in iOS by performing a fake 'click',\n         * Using 'e.stopPropagation' to stop 'touchstart' event from \n         * $toggle/$collapse will break global delegation.\n         * \n         * Instead, we use a 'e.target' filter to prevent handler\n         * added to document close HuxNav.  \n         *\n         * Also, we use 'click' instead of 'touchstart' as compromise\n         */\n        document.addEventListener('click', function (e) {\n            if (e.target == $toggle) return;\n            if (e.target.className == 'icon-bar') return;\n            __HuxNav__.close();\n        })\n    </script>\n    <!-- Search -->\n<div class=\"search-page\">\n  <div class=\"search-icon-close-container\">\n    <span class=\"search-icon-close\">\n      <i class=\"fa fa-chevron-down\"></i>\n    </span>\n  </div>\n  <div class=\"search-main container\">\n    <div class=\"row\">\n      <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n        <form></form>\n        <input type=\"text\" id=\"search-input\" placeholder=\"$ grep...\">\n        </form>\n        <div id=\"search-results\" class=\"mini-post-list\"></div>\n      </div>\n    </div>\n  </div>\n</div>\n\n    <!-- Image to hack wechat -->\n<!-- <img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\"> -->\n<!-- <img src=\"/img/post-bg-2015.jpg\" width=\"0\" height=\"0\"> -->\n\n<!-- Post Header -->\n\n\n\n<style type=\"text/css\">\n    header.intro-header{\n        position: relative;\n        background-image: url('/img/post-bg-2015.jpg');\n        background: ;\n    }\n\n    \n</style>\n\n<header class=\"intro-header\" >\n\n    <div class=\"header-mask\"></div>\n    \n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <div class=\"post-heading\">\n                    <div class=\"tags\">\n                        \n                    </div>\n                    <h1>多账号配置GIT</h1>\n                    \n                    <h2 class=\"subheading\"></h2>\n                    <span class=\"meta\">Posted by PaysonChen on October 18, 2021</span>\n                </div>\n            </div>\n        </div>\n    </div>\n</header>\n\n\n\n\n\n\n<!-- Post Content -->\n<article>\n    <div class=\"container\">\n        <div class=\"row\">\n\n    <!-- Post Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                post-container\">\n\n                <!-- Multi-Lingual -->\n                \n\n\t\t\t\t<h2 id=\"1常规多账号\">1、常规多账号</h2>\n\n<p>不同host的代码仓库之间的多账号SSH配置，网上的资料很多，这里简单找一个 <a href=\"https://www.jianshu.com/p/92d207964061\">配置多个SSH</a>。</p>\n\n<h2 id=\"2多个github账号\">2、多个Github账号</h2>\n\n<p>由于申请了多个域名，配置同一个github账号下的gitpage出现了异常，我想大概也是因为CNAME或者其他原因。尝试重新申请一个github账号分开管理也行。</p>\n\n<p>之前账号github是用ssh配置的，新账号也尝试用ssh配置，</p>\n\n<p>重新生成新的ssk-key，也配置了config文件</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n</pre></td><td class=\"rouge-code\"><pre># github2\nHost a.github.com\nPort 22\nUser a\nHostName github.com\nPreferredAuthentications publickey\nIdentityFile ~/.ssh/id_rsa_github_a\n\n# github \nHost b.github.com\nPort 22\nUser b\nHostName github.com\nPreferredAuthentications publickea\nIdentityFile ~/.ssh/id_rsa_github_b\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>clone b仓库的代码，提交代码时提示</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n</pre></td><td class=\"rouge-code\"><pre>ERROR: Permission to B/payson.github.io.git denied to A.\nfatal: Could not read from remote repository.\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>就是提交时默认账号是A</p>\n\n<p>如果改成B呢，公钥私钥没问题，config也配了，</p>\n\n<p>最后查找资料发现，需要改Host</p>\n\n<p>将仓库B的远程Host，加上config配置的 b.github.com</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>origin:git@b.github.com:b/payson.github.io.git\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>使Host与config的Host对应</p>\n\n\n\n                <hr style=\"visibility: hidden;\">\n                <ul class=\"pager\">\n                    \n                    <li class=\"previous\">\n                        <a href=\"/2021/09/13/crash/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"iOS 10.x 内存Crash 排查 纪要\">\n                        Previous<br>\n                        <span>iOS 10.x 内存Crash 排查 纪要</span>\n                        </a>\n                    </li>\n                    \n                    \n                    <li class=\"next\">\n                        <a href=\"/2022/01/19/iOS-OpenType/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"iOS应用接收文件打开类型\">\n                        Next<br>\n                        <span>iOS应用接收文件打开类型</span>\n                        </a>\n                    </li>\n                    \n                </ul>\n                <hr style=\"visibility: hidden;\">\n\n                \n                <!-- disqus 评论框 start -->\n                <div class=\"comment\">\n                    <div id=\"disqus_thread\" class=\"disqus-thread\"></div>\n                </div>\n                <!-- disqus 评论框 end -->\n                \n\n                \n            </div>  \n\n    <!-- Side Catalog Container -->\n        \n            <div class=\"\n                col-lg-2 col-lg-offset-0\n                visible-lg-block\n                sidebar-container\n                catalog-container\">\n                <div class=\"side-catalog\">\n                    <hr class=\"hidden-sm hidden-xs\">\n                    <h5>\n                        <a class=\"catalog-toggle\" href=\"#\">CATALOG</a>\n                    </h5>\n                    <ul class=\"catalog-body\"></ul>\n                </div>\n            </div>\n        \n\n    <!-- Sidebar Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                sidebar-container\">\n\n                <!-- Featured Tags -->\n                \n\n\n<section>\n    \n        <hr class=\"hidden-sm hidden-xs\">\n    \n    <h5><a href=\"/archive/\">FEATURED TAGS</a></h5>\n    <div class=\"tags\">\n        \n        \n        \n        \n        \n    </div>\n</section>\n\n\n                <!-- Friends Blog -->\n                \n            </div>\n        </div>\n    </div>\n</article>\n\n<!-- add support for mathjax by voleking-->\n\n\n\n\n\n\n<!-- disqus 公共JS代码 start (一个网页只需插入一次) -->\n<script type=\"text/javascript\">\n    /* * * CONFIGURATION VARIABLES * * */\n    var disqus_shortname = \"Cyp\";\n    var disqus_identifier = \"/2021/10/18/git\";\n    var disqus_url = \"http://localhost:4000/2021/10/18/git/\";\n\n    (function() {\n        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;\n        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';\n        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);\n    })();\n</script>\n<!-- disqus 公共JS代码 end -->\n\n\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n      var d = document, t = 'script',\n          o = d.createElement(t),\n          s = d.getElementsByTagName(t)[0];\n      o.src = u;\n      if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n      s.parentNode.insertBefore(o, s);\n    }\n</script>\n<!-- anchor-js, Doc:http://bryanbraun.github.io/anchorjs/ -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/anchor-js/1.1.1/anchor.min.js\",function(){\n        anchors.options = {\n          visible: 'hover',\n          placement: 'right',\n          // icon: '#'\n        };\n        anchors.add().remove('.intro-header h1').remove('.subheading').remove('.sidebar-container h5');\n    })\n</script>\n<style>\n    /* place left on bigger screen */\n    @media all and (min-width: 800px) {\n        .anchorjs-link{\n            position: absolute;\n            left: -0.75em;\n            font-size: 1.1em;\n            margin-top : -0.1em;\n        }\n    }\n</style>\n\n\n\n    <!-- Footer -->\n<footer>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <!-- SNS Link -->\n                \n\n\n<ul class=\"list-inline text-center\">\n\n\n  \n  \n  \n  \n  \n  \n  \n</ul>\n\n                <p class=\"copyright text-muted\">\n                    Copyright &copy; PaysonChen Blog 2024\n                    <br>\n                    <!-- Powered by <a href=\"http://huangxuan.me\">Hux Blog</a> | -->\n                 <!--    <iframe style=\"margin-left: 2px; margin-bottom:-5px;\" frameborder=\"0\" scrolling=\"0\" width=\"100px\"\n                        height=\"20px\"\n                        src=\"https://ghbtns.com/github-btn.html?user=huxpro&repo=huxpro.github.io&type=star&count=true\">\n                    </iframe> -->\n                </p>\n            </div>\n        </div>\n    </div>\n</footer>\n\n<!-- jQuery -->\n<script src=\"/js/jquery.min.js \"></script>\n\n<!-- Bootstrap Core JavaScript -->\n<!-- Currently, only navbar scroll-down effect at desktop still depends on this -->\n<script src=\"/js/bootstrap.min.js \"></script>\n\n<!-- Custom Theme JavaScript -->\n<script src=\"/js/hux-blog.min.js \"></script>\n\n<!-- Simple Jekyll Search -->\n<script src=\"/js/simple-jekyll-search.min.js\"></script>\n\n<!-- Service Worker -->\n\n<script src=\"/js/snackbar.js \"></script>\n<script src=\"/js/sw-registration.js \"></script>\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n        var d = document, t = 'script',\n            o = d.createElement(t),\n            s = d.getElementsByTagName(t)[0];\n        o.src = u;\n        if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n        s.parentNode.insertBefore(o, s);\n    }\n</script>\n\n<!--\n     Because of the native support for backtick-style fenced code blocks\n     right within the Markdown is landed in Github Pages,\n     From V1.6, There is no need for Highlight.js,\n     so Huxblog drops it officially.\n\n     - https://github.com/blog/2100-github-pages-now-faster-and-simpler-with-jekyll-3-0\n     - https://help.github.com/articles/creating-and-highlighting-code-blocks/\n     - https://github.com/jneen/rouge/wiki/list-of-supported-languages-and-lexers\n-->\n<!--\n    <script>\n        async(\"http://cdn.bootcss.com/highlight.js/8.6/highlight.min.js\", function(){\n            hljs.initHighlightingOnLoad();\n        })\n    </script>\n    <link href=\"http://cdn.bootcss.com/highlight.js/8.6/styles/github.min.css\" rel=\"stylesheet\">\n-->\n\n\n\n\n\n\n\n<!--fastClick.js -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/fastclick/1.0.6/fastclick.min.js\", function () {\n        var $nav = document.querySelector(\"nav\");\n        if ($nav) FastClick.attach($nav);\n    })\n</script>\n\n\n<!-- Google Analytics -->\n\n\n\n<!-- Baidu Tongji -->\n\n\n\n<!-- Side Catalog -->\n\n<script type=\"text/javascript\">\n    function generateCatalog(selector) {\n\n        // interop with multilangual \n        if ('' == 'true') {\n            _containerSelector = 'div.post-container.active'\n        } else {\n            _containerSelector = 'div.post-container'\n        }\n\n        // init\n        var P = $(_containerSelector), a, n, t, l, i, c;\n        a = P.find('h1,h2,h3,h4,h5,h6');\n\n        // clean\n        $(selector).html('')\n\n        // appending\n        a.each(function () {\n            n = $(this).prop('tagName').toLowerCase();\n            i = \"#\" + $(this).prop('id');\n            t = $(this).text();\n            c = $('<a href=\"' + i + '\" rel=\"nofollow\">' + t + '</a>');\n            l = $('<li class=\"' + n + '_nav\"></li>').append(c);\n            $(selector).append(l);\n        });\n        return true;\n    }\n\n    generateCatalog(\".catalog-body\");\n\n    // toggle side catalog\n    $(\".catalog-toggle\").click((function (e) {\n        e.preventDefault();\n        $('.side-catalog').toggleClass(\"fold\")\n    }))\n\n    /*\n     * Doc: https://github.com/davist11/jQuery-One-Page-Nav\n     * Fork by Hux to support padding\n     */\n    async(\"/js/jquery.nav.js\", function () {\n        $('.catalog-body').onePageNav({\n            currentClass: \"active\",\n            changeHash: !1,\n            easing: \"swing\",\n            filter: \"\",\n            scrollSpeed: 700,\n            scrollOffset: 0,\n            scrollThreshold: .2,\n            begin: null,\n            end: null,\n            scrollChange: null,\n            padding: 80\n        });\n    });\n</script>\n\n\n\n<!-- Multi-Lingual -->\n\n\n<!-- Simple Jekyll Search -->\n<script>\n    // https://stackoverflow.com/questions/1912501/unescape-html-entities-in-javascript\n    function htmlDecode(input) {\n        var e = document.createElement('textarea');\n        e.innerHTML = input;\n        // handle case of empty input\n        return e.childNodes.length === 0 ? \"\" : e.childNodes[0].nodeValue;\n    }\n\n    SimpleJekyllSearch({\n        searchInput: document.getElementById('search-input'),\n        resultsContainer: document.getElementById('search-results'),\n        json: '/search.json',\n        searchResultTemplate: '<div class=\"post-preview item\"><a href=\"{url}\"><h2 class=\"post-title\">{title}</h2><h3 class=\"post-subtitle\">{subtitle}</h3><hr></a></div>',\n        noResultsText: 'No results',\n        limit: 50,\n        fuzzy: false,\n        // a hack to get escaped subtitle unescaped. for some reason, \n        // post.subtitle w/o escape filter nuke entire search.\n        templateMiddleware: function (prop, value, template) {\n            if (prop === 'subtitle' || prop === 'title') {\n                if (value.indexOf(\"code\")) {\n                    return htmlDecode(value);\n                } else {\n                    return value;\n                }\n            }\n        }\n    });\n\n    $(document).ready(function () {\n        var $searchPage = $('.search-page');\n        var $searchOpen = $('.search-icon');\n        var $searchClose = $('.search-icon-close');\n        var $searchInput = $('#search-input');\n        var $body = $('body');\n\n        $searchOpen.on('click', function (e) {\n            e.preventDefault();\n            $searchPage.toggleClass('search-active');\n            var prevClasses = $body.attr('class') || '';\n            setTimeout(function () {\n                $body.addClass('no-scroll');\n            }, 400)\n\n            if ($searchPage.hasClass('search-active')) {\n                $searchClose.on('click', function (e) {\n                    e.preventDefault();\n                    $searchPage.removeClass('search-active');\n                    $body.attr('class', prevClasses);  // from closure \n                });\n                $searchInput.focus();\n            }\n        });\n    });\n</script>\n\n\n<!-- Image to hack wechat -->\n<img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\" />\n<!-- Migrate from head to bottom, no longer block render and still work -->\n\n</body>\n\n</html>\n","excerpt":"<h2 id=\"1常规多账号\">1、常规多账号</h2>\n","url":"/2021/10/18/git/","next":{"id":"/2022/01/19/iOS-OpenType","tags":[],"relative_path":"_posts/2022-01-19-iOS-OpenType.md","collection":"posts","content":"<h2 id=\"0x00-背景\">0x00 背景</h2>\n\n<p>​\tK歌音频上传工具1.0需求调研，在探索上传的几种方式当中，涉及到引导用户从QQ微信打开，并提供能力。这就牵涉到从其他应用讲音视频文件导入（打开/传入）到K歌的需要。</p>\n\n<h2 id=\"0x01-技术方案\">0x01 技术方案</h2>\n\n<p>​\t通过设置Xcode Document Types，可以设置项目可接收的文件类型，附带一份：<a href=\"https://developer.apple.com/library/archive/documentation/Miscellaneous/Reference/UTIRef/Articles/System-DeclaredUniformTypeIdentifiers.html#//apple_ref/doc/uid/TP40009259-SW1\">官方提供的文件类型列表</a>。</p>\n\n<p>​\t<img src=\"/img/2022-01-19-iOS-OpenType/doctypes.png\" alt=\"\" /></p>\n\n<h2 id=\"0x02-项目实现\">0x02 项目实现</h2>\n\n<p>当前iOS应用的生命周期管理有以下两种方式</p>\n\n<ul>\n  <li>\n    <h5 id=\"uiapplicationdelegate\">UIApplicationDelegate</h5>\n\n    <p>iOS13之前，Appdelegate的职责全权处理App生命周期和UI生命周期：</p>\n\n    <p><img src=\"/img/2022-01-19-iOS-OpenType/appdelegate.jpg\" alt=\"\" /></p>\n\n    <p>在不需要多Window场景下，在AppDelegate中实现</p>\n\n    <div class=\"language-objc highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n</pre></td><td class=\"rouge-code\"><pre><span class=\"k\">-</span><span class=\"p\">(</span><span class=\"n\">BOOL</span><span class=\"p\">)</span><span class=\"nf\">application</span><span class=\"p\">:(</span><span class=\"n\">UIApplication</span> <span class=\"o\">*</span><span class=\"p\">)</span><span class=\"nv\">app</span> <span class=\"nf\">openURL</span><span class=\"p\">:(</span><span class=\"n\">NSURL</span> <span class=\"o\">*</span><span class=\"p\">)</span><span class=\"nv\">url</span> <span class=\"nf\">options</span><span class=\"p\">:(</span><span class=\"n\">NSDictionary</span><span class=\"o\">&lt;</span><span class=\"n\">UIApplicationOpenURLOptionsKey</span><span class=\"p\">,</span><span class=\"n\">id</span><span class=\"o\">&gt;</span> <span class=\"o\">*</span><span class=\"p\">)</span><span class=\"nv\">options</span> <span class=\"p\">{</span>\n    <span class=\"n\">NSLog</span><span class=\"p\">(</span><span class=\"s\">@\"url=%@---options=%@\"</span><span class=\"p\">,</span> <span class=\"n\">url</span><span class=\"p\">,</span> <span class=\"n\">options</span><span class=\"p\">);</span>\n    <span class=\"k\">return</span> <span class=\"nb\">YES</span>\n<span class=\"p\">}</span>\n</pre></td></tr></tbody></table></code></pre></div>    </div>\n\n    <p>输出：</p>\n\n    <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n</pre></td><td class=\"rouge-code\"><pre>url=file:///private/var/mobile/Containers/Data/Application/32D902CA-E0EB-487B-8C08-8C5A277967E3/Documents/Inbox/RPReplay_Final1641554324-31.MP3---options={\n    UIApplicationOpenURLOptionsOpenInPlaceKey = 0;\n}\n</pre></td></tr></tbody></table></code></pre></div>    </div>\n  </li>\n  <li>\n    <h4 id=\"uiwindowscenedelegate\">UIWindowSceneDelegate</h4>\n  </li>\n</ul>\n\n<p>​\tiOS13之后，<code class=\"language-plaintext highlighter-rouge\">Appdelegate</code>不在负责UI生命周期，所有UI生命周期交给<code class=\"language-plaintext highlighter-rouge\">SceneDelegate</code>处理：</p>\n\n<p><img src=\"/img/2022-01-19-iOS-OpenType/scene_Appdelegate.jpg\" alt=\"\" /></p>\n\n<p><img src=\"/img/2022-01-19-iOS-OpenType/scene_delegate.jpg\" alt=\"\" /></p>\n\n<p>在SceneDelegate场景中实现回调监听：</p>\n\n<pre><code class=\"language-objective-c\">- (void)scene:(UIScene *)scene openURLContexts:(NSSet&lt;UIOpenURLContext *&gt; *)URLContexts {\n    NSLog(@\"scene = %@\", URLContexts);\n}\n</code></pre>\n\n<p>输出：</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n</pre></td><td class=\"rouge-code\"><pre>{(\n    &lt;UIOpenURLContext: 0x2817cc760; URL: file:///private/var/mobile/Containers/Data/Application/F63608F2-7BA5-4374-9ADB-6D6B1135C771/Documents/Inbox/RPReplay_Final1641554324-20.MP3; options: &lt;UISceneOpenURLOptions: 0x2802b09c0; sourceApp: (null); annotation: (null); openInPlace: NO; _eventAttribution: (null)&gt;&gt;\n)}\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h2 id=\"0x03-备注\">0x03 备注</h2>\n\n<h4 id=\"音频文件导入\">音频文件导入：</h4>\n\n<p>QQ分享的音频可以支持其他应用打开，导入到第三方应用</p>\n\n<p>微信分享的音频可以支持其他应用打开，导入到第三方应用</p>\n\n<h4 id=\"视频文件导入\">视频文件导入：</h4>\n\n<p>QQ分享的视频可以支持其他应用打开，导入到第三方应用</p>\n\n<p>微信分享的视频无法导入</p>\n\n<h2 id=\"0x04-补充资料\">0x04 补充资料</h2>\n\n<p>Document Types Data包含关系如下：</p>\n\n<p><img src=\"/img/2022-01-19-iOS-OpenType/public.data.gif\" alt=\"\" /></p>\n\n<p>各类型说明：<a href=\"https://developer.apple.com/library/archive/documentation/Miscellaneous/Reference/UTIRef/Articles/System-DeclaredUniformTypeIdentifiers.html#//apple_ref/doc/uid/TP40009259-SW1\">iOS系统更多应用打开</a></p>\n\n","name":"2022-01-19-iOS-OpenType.md","previous":{"id":"/2021/10/18/git","tags":[],"relative_path":"_posts/2021-10-18-git.md","collection":"posts","name":"2021-10-18-git.md","url":"/2021/10/18/git/","title":"多账号配置GIT","date":"2021-10-18 00:00:00 +0800","categories":[],"path":"_posts/2021-10-18-git.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/post-bg-2015.jpg","slug":"git","ext":".md"},"output":"<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"google-site-verification\" content=\"xBT4GhYoi5qRD5tr338pgPM5OWHHIDR6mNg1a3euekI\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, viewport-fit=cover\">\n    <meta name=\"description\" content=\"与你一起发现更大的世界。\">\n    <meta name=\"keywords\"  content=\"PaysonChen,iOS,流媒体\">\n    <meta name=\"theme-color\" content=\"#000000\">\n    \n    <!-- Open Graph -->\n    <meta property=\"og:title\" content=\"iOS应用接收文件打开类型 - PaysonChen的博客 | PaysonChen Blog\">\n    \n    <meta property=\"og:type\" content=\"article\">\n    <meta property=\"og:description\" content=\"0x00 背景\n\">\n    \n    \n    <meta property=\"article:published_time\" content=\"2022-01-19T00:00:00Z\">\n    \n    \n    <meta property=\"article:author\" content=\"PaysonChen\">\n    \n    \n    \n    <meta property=\"og:image\" content=\"http://localhost:4000\">\n    <meta property=\"og:url\" content=\"http://localhost:4000/2022/01/19/iOS-OpenType/\">\n    <meta property=\"og:site_name\" content=\"PaysonChen的博客 | PaysonChen Blog\">\n    \n    <title>iOS应用接收文件打开类型 - PaysonChen的博客 | PaysonChen Blog</title>\n\n    <!-- Web App Manifest -->\n    <link rel=\"manifest\" href=\"/pwa/manifest.json\">\n\n    <!-- Favicon -->\n    <link rel=\"shortcut icon\" href=\"/img/favicon.ico\">\n    \n    <!-- Canonical URL -->\n    <link rel=\"canonical\" href=\"http://localhost:4000/2022/01/19/iOS-OpenType/\">\n\n    <!-- Bootstrap Core CSS -->\n    <link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\">\n\n    <!-- Custom CSS -->\n    <link rel=\"stylesheet\" href=\"/css/hux-blog.min.css\">\n\n    <!-- Custom Fonts -->\n    <!-- <link href=\"http://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\"> -->\n    <!-- Hux change font-awesome CDN to qiniu -->\n    <link href=\"//cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\">\n\n\n    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->\n    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->\n    <!--[if lt IE 9]>\n        <script src=\"https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js\"></script>\n        <script src=\"https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js\"></script>\n    <![endif]-->\n\n    <!-- ga & ba script hoook -->\n    <script></script>\n</head>\n\n\n<!-- hack iOS CSS :active style -->\n<body ontouchstart=\"\">\n\n    <!-- Navigation -->\n\n    <nav class=\"navbar navbar-default navbar-custom navbar-fixed-top\">\n        \n        <div class=\"container-fluid\">\n            <!-- Brand and toggle get grouped for better mobile display -->\n            <div class=\"navbar-header page-scroll\">\n                <button type=\"button\" class=\"navbar-toggle\">\n                    <span class=\"sr-only\">Toggle navigation</span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                </button>\n                <a class=\"navbar-brand\" href=\"/\">PaysonChen Blog</a>\n            </div>\n\n            <!-- Collect the nav links, forms, and other content for toggling -->\n            <div id=\"huxblog_navbar\">\n                <div class=\"navbar-collapse\">\n                    <ul class=\"nav navbar-nav navbar-right\">\n                        <li>\n                            <a href=\"/\">Home</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        <li>\n                            <a href=\"/about/\">About</a>\n                        </li>\n                        \n                        \n                        \n                        <li>\n                            <a href=\"/archive/\">Archive</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        <li class=\"search-icon\">\n                            <a href=\"javascript:void(0)\">\n                                <i class=\"fa fa-search\"></i>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n            <!-- /.navbar-collapse -->\n        </div>\n        <!-- /.container -->\n    </nav>\n\n    <script>\n        // Drop Bootstarp low-performance Navbar\n        // Use customize navbar with high-quality material design animation\n        // in high-perf jank-free CSS3 implementation\n        var $body = document.body;\n        var $toggle = document.querySelector('.navbar-toggle');\n        var $navbar = document.querySelector('#huxblog_navbar');\n        var $collapse = document.querySelector('.navbar-collapse');\n\n        var __HuxNav__ = {\n            close: function () {\n                $navbar.className = \" \";\n                // wait until animation end.\n                setTimeout(function () {\n                    // prevent frequently toggle\n                    if ($navbar.className.indexOf('in') < 0) {\n                        $collapse.style.height = \"0px\"\n                    }\n                }, 400)\n            },\n            open: function () {\n                $collapse.style.height = \"auto\"\n                $navbar.className += \" in\";\n            }\n        }\n\n        // Bind Event\n        $toggle.addEventListener('click', function (e) {\n            if ($navbar.className.indexOf('in') > 0) {\n                __HuxNav__.close()\n            } else {\n                __HuxNav__.open()\n            }\n        })\n\n        /**\n         * Since Fastclick is used to delegate 'touchstart' globally\n         * to hack 300ms delay in iOS by performing a fake 'click',\n         * Using 'e.stopPropagation' to stop 'touchstart' event from \n         * $toggle/$collapse will break global delegation.\n         * \n         * Instead, we use a 'e.target' filter to prevent handler\n         * added to document close HuxNav.  \n         *\n         * Also, we use 'click' instead of 'touchstart' as compromise\n         */\n        document.addEventListener('click', function (e) {\n            if (e.target == $toggle) return;\n            if (e.target.className == 'icon-bar') return;\n            __HuxNav__.close();\n        })\n    </script>\n    <!-- Search -->\n<div class=\"search-page\">\n  <div class=\"search-icon-close-container\">\n    <span class=\"search-icon-close\">\n      <i class=\"fa fa-chevron-down\"></i>\n    </span>\n  </div>\n  <div class=\"search-main container\">\n    <div class=\"row\">\n      <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n        <form></form>\n        <input type=\"text\" id=\"search-input\" placeholder=\"$ grep...\">\n        </form>\n        <div id=\"search-results\" class=\"mini-post-list\"></div>\n      </div>\n    </div>\n  </div>\n</div>\n\n    <!-- Image to hack wechat -->\n<!-- <img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\"> -->\n<!-- <img src=\"/img/home-bg-geek.jpg\" width=\"0\" height=\"0\"> -->\n\n<!-- Post Header -->\n\n\n\n<style type=\"text/css\">\n    header.intro-header{\n        position: relative;\n        background-image: url('/img/home-bg-geek.jpg');\n        background: ;\n    }\n\n    \n</style>\n\n<header class=\"intro-header\" >\n\n    <div class=\"header-mask\"></div>\n    \n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <div class=\"post-heading\">\n                    <div class=\"tags\">\n                        \n                    </div>\n                    <h1>iOS应用接收文件打开类型</h1>\n                    \n                    <h2 class=\"subheading\"></h2>\n                    <span class=\"meta\">Posted by PaysonChen on January 19, 2022</span>\n                </div>\n            </div>\n        </div>\n    </div>\n</header>\n\n\n\n\n\n\n<!-- Post Content -->\n<article>\n    <div class=\"container\">\n        <div class=\"row\">\n\n    <!-- Post Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                post-container\">\n\n                <!-- Multi-Lingual -->\n                \n\n\t\t\t\t<h2 id=\"0x00-背景\">0x00 背景</h2>\n\n<p>​\tK歌音频上传工具1.0需求调研，在探索上传的几种方式当中，涉及到引导用户从QQ微信打开，并提供能力。这就牵涉到从其他应用讲音视频文件导入（打开/传入）到K歌的需要。</p>\n\n<h2 id=\"0x01-技术方案\">0x01 技术方案</h2>\n\n<p>​\t通过设置Xcode Document Types，可以设置项目可接收的文件类型，附带一份：<a href=\"https://developer.apple.com/library/archive/documentation/Miscellaneous/Reference/UTIRef/Articles/System-DeclaredUniformTypeIdentifiers.html#//apple_ref/doc/uid/TP40009259-SW1\">官方提供的文件类型列表</a>。</p>\n\n<p>​\t<img src=\"/img/2022-01-19-iOS-OpenType/doctypes.png\" alt=\"\" /></p>\n\n<h2 id=\"0x02-项目实现\">0x02 项目实现</h2>\n\n<p>当前iOS应用的生命周期管理有以下两种方式</p>\n\n<ul>\n  <li>\n    <h5 id=\"uiapplicationdelegate\">UIApplicationDelegate</h5>\n\n    <p>iOS13之前，Appdelegate的职责全权处理App生命周期和UI生命周期：</p>\n\n    <p><img src=\"/img/2022-01-19-iOS-OpenType/appdelegate.jpg\" alt=\"\" /></p>\n\n    <p>在不需要多Window场景下，在AppDelegate中实现</p>\n\n    <div class=\"language-objc highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n</pre></td><td class=\"rouge-code\"><pre><span class=\"k\">-</span><span class=\"p\">(</span><span class=\"n\">BOOL</span><span class=\"p\">)</span><span class=\"nf\">application</span><span class=\"p\">:(</span><span class=\"n\">UIApplication</span> <span class=\"o\">*</span><span class=\"p\">)</span><span class=\"nv\">app</span> <span class=\"nf\">openURL</span><span class=\"p\">:(</span><span class=\"n\">NSURL</span> <span class=\"o\">*</span><span class=\"p\">)</span><span class=\"nv\">url</span> <span class=\"nf\">options</span><span class=\"p\">:(</span><span class=\"n\">NSDictionary</span><span class=\"o\">&lt;</span><span class=\"n\">UIApplicationOpenURLOptionsKey</span><span class=\"p\">,</span><span class=\"n\">id</span><span class=\"o\">&gt;</span> <span class=\"o\">*</span><span class=\"p\">)</span><span class=\"nv\">options</span> <span class=\"p\">{</span>\n    <span class=\"n\">NSLog</span><span class=\"p\">(</span><span class=\"s\">@\"url=%@---options=%@\"</span><span class=\"p\">,</span> <span class=\"n\">url</span><span class=\"p\">,</span> <span class=\"n\">options</span><span class=\"p\">);</span>\n    <span class=\"k\">return</span> <span class=\"nb\">YES</span>\n<span class=\"p\">}</span>\n</pre></td></tr></tbody></table></code></pre></div>    </div>\n\n    <p>输出：</p>\n\n    <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n</pre></td><td class=\"rouge-code\"><pre>url=file:///private/var/mobile/Containers/Data/Application/32D902CA-E0EB-487B-8C08-8C5A277967E3/Documents/Inbox/RPReplay_Final1641554324-31.MP3---options={\n    UIApplicationOpenURLOptionsOpenInPlaceKey = 0;\n}\n</pre></td></tr></tbody></table></code></pre></div>    </div>\n  </li>\n  <li>\n    <h4 id=\"uiwindowscenedelegate\">UIWindowSceneDelegate</h4>\n  </li>\n</ul>\n\n<p>​\tiOS13之后，<code class=\"language-plaintext highlighter-rouge\">Appdelegate</code>不在负责UI生命周期，所有UI生命周期交给<code class=\"language-plaintext highlighter-rouge\">SceneDelegate</code>处理：</p>\n\n<p><img src=\"/img/2022-01-19-iOS-OpenType/scene_Appdelegate.jpg\" alt=\"\" /></p>\n\n<p><img src=\"/img/2022-01-19-iOS-OpenType/scene_delegate.jpg\" alt=\"\" /></p>\n\n<p>在SceneDelegate场景中实现回调监听：</p>\n\n<pre><code class=\"language-objective-c\">- (void)scene:(UIScene *)scene openURLContexts:(NSSet&lt;UIOpenURLContext *&gt; *)URLContexts {\n    NSLog(@\"scene = %@\", URLContexts);\n}\n</code></pre>\n\n<p>输出：</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n</pre></td><td class=\"rouge-code\"><pre>{(\n    &lt;UIOpenURLContext: 0x2817cc760; URL: file:///private/var/mobile/Containers/Data/Application/F63608F2-7BA5-4374-9ADB-6D6B1135C771/Documents/Inbox/RPReplay_Final1641554324-20.MP3; options: &lt;UISceneOpenURLOptions: 0x2802b09c0; sourceApp: (null); annotation: (null); openInPlace: NO; _eventAttribution: (null)&gt;&gt;\n)}\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h2 id=\"0x03-备注\">0x03 备注</h2>\n\n<h4 id=\"音频文件导入\">音频文件导入：</h4>\n\n<p>QQ分享的音频可以支持其他应用打开，导入到第三方应用</p>\n\n<p>微信分享的音频可以支持其他应用打开，导入到第三方应用</p>\n\n<h4 id=\"视频文件导入\">视频文件导入：</h4>\n\n<p>QQ分享的视频可以支持其他应用打开，导入到第三方应用</p>\n\n<p>微信分享的视频无法导入</p>\n\n<h2 id=\"0x04-补充资料\">0x04 补充资料</h2>\n\n<p>Document Types Data包含关系如下：</p>\n\n<p><img src=\"/img/2022-01-19-iOS-OpenType/public.data.gif\" alt=\"\" /></p>\n\n<p>各类型说明：<a href=\"https://developer.apple.com/library/archive/documentation/Miscellaneous/Reference/UTIRef/Articles/System-DeclaredUniformTypeIdentifiers.html#//apple_ref/doc/uid/TP40009259-SW1\">iOS系统更多应用打开</a></p>\n\n\n\n                <hr style=\"visibility: hidden;\">\n                <ul class=\"pager\">\n                    \n                    <li class=\"previous\">\n                        <a href=\"/2021/10/18/git/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"多账号配置GIT\">\n                        Previous<br>\n                        <span>多账号配置GIT</span>\n                        </a>\n                    </li>\n                    \n                    \n                    <li class=\"next\">\n                        <a href=\"/2022/09/25/App%E7%98%A6%E8%BA%AB%E5%AE%9E%E8%B7%B5%E4%B9%8B%E6%89%B9%E9%87%8F%E8%BD%AC%E6%8D%A2webp/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"App瘦身实践之批量转换webp\">\n                        Next<br>\n                        <span>App瘦身实践之批量转换webp</span>\n                        </a>\n                    </li>\n                    \n                </ul>\n                <hr style=\"visibility: hidden;\">\n\n                \n                <!-- disqus 评论框 start -->\n                <div class=\"comment\">\n                    <div id=\"disqus_thread\" class=\"disqus-thread\"></div>\n                </div>\n                <!-- disqus 评论框 end -->\n                \n\n                \n            </div>  \n\n    <!-- Side Catalog Container -->\n        \n            <div class=\"\n                col-lg-2 col-lg-offset-0\n                visible-lg-block\n                sidebar-container\n                catalog-container\">\n                <div class=\"side-catalog\">\n                    <hr class=\"hidden-sm hidden-xs\">\n                    <h5>\n                        <a class=\"catalog-toggle\" href=\"#\">CATALOG</a>\n                    </h5>\n                    <ul class=\"catalog-body\"></ul>\n                </div>\n            </div>\n        \n\n    <!-- Sidebar Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                sidebar-container\">\n\n                <!-- Featured Tags -->\n                \n\n\n<section>\n    \n        <hr class=\"hidden-sm hidden-xs\">\n    \n    <h5><a href=\"/archive/\">FEATURED TAGS</a></h5>\n    <div class=\"tags\">\n        \n        \n        \n        \n        \n    </div>\n</section>\n\n\n                <!-- Friends Blog -->\n                \n            </div>\n        </div>\n    </div>\n</article>\n\n<!-- add support for mathjax by voleking-->\n\n\n\n\n\n\n<!-- disqus 公共JS代码 start (一个网页只需插入一次) -->\n<script type=\"text/javascript\">\n    /* * * CONFIGURATION VARIABLES * * */\n    var disqus_shortname = \"Cyp\";\n    var disqus_identifier = \"/2022/01/19/iOS-OpenType\";\n    var disqus_url = \"http://localhost:4000/2022/01/19/iOS-OpenType/\";\n\n    (function() {\n        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;\n        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';\n        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);\n    })();\n</script>\n<!-- disqus 公共JS代码 end -->\n\n\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n      var d = document, t = 'script',\n          o = d.createElement(t),\n          s = d.getElementsByTagName(t)[0];\n      o.src = u;\n      if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n      s.parentNode.insertBefore(o, s);\n    }\n</script>\n<!-- anchor-js, Doc:http://bryanbraun.github.io/anchorjs/ -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/anchor-js/1.1.1/anchor.min.js\",function(){\n        anchors.options = {\n          visible: 'hover',\n          placement: 'right',\n          // icon: '#'\n        };\n        anchors.add().remove('.intro-header h1').remove('.subheading').remove('.sidebar-container h5');\n    })\n</script>\n<style>\n    /* place left on bigger screen */\n    @media all and (min-width: 800px) {\n        .anchorjs-link{\n            position: absolute;\n            left: -0.75em;\n            font-size: 1.1em;\n            margin-top : -0.1em;\n        }\n    }\n</style>\n\n\n\n    <!-- Footer -->\n<footer>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <!-- SNS Link -->\n                \n\n\n<ul class=\"list-inline text-center\">\n\n\n  \n  \n  \n  \n  \n  \n  \n</ul>\n\n                <p class=\"copyright text-muted\">\n                    Copyright &copy; PaysonChen Blog 2024\n                    <br>\n                    <!-- Powered by <a href=\"http://huangxuan.me\">Hux Blog</a> | -->\n                 <!--    <iframe style=\"margin-left: 2px; margin-bottom:-5px;\" frameborder=\"0\" scrolling=\"0\" width=\"100px\"\n                        height=\"20px\"\n                        src=\"https://ghbtns.com/github-btn.html?user=huxpro&repo=huxpro.github.io&type=star&count=true\">\n                    </iframe> -->\n                </p>\n            </div>\n        </div>\n    </div>\n</footer>\n\n<!-- jQuery -->\n<script src=\"/js/jquery.min.js \"></script>\n\n<!-- Bootstrap Core JavaScript -->\n<!-- Currently, only navbar scroll-down effect at desktop still depends on this -->\n<script src=\"/js/bootstrap.min.js \"></script>\n\n<!-- Custom Theme JavaScript -->\n<script src=\"/js/hux-blog.min.js \"></script>\n\n<!-- Simple Jekyll Search -->\n<script src=\"/js/simple-jekyll-search.min.js\"></script>\n\n<!-- Service Worker -->\n\n<script src=\"/js/snackbar.js \"></script>\n<script src=\"/js/sw-registration.js \"></script>\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n        var d = document, t = 'script',\n            o = d.createElement(t),\n            s = d.getElementsByTagName(t)[0];\n        o.src = u;\n        if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n        s.parentNode.insertBefore(o, s);\n    }\n</script>\n\n<!--\n     Because of the native support for backtick-style fenced code blocks\n     right within the Markdown is landed in Github Pages,\n     From V1.6, There is no need for Highlight.js,\n     so Huxblog drops it officially.\n\n     - https://github.com/blog/2100-github-pages-now-faster-and-simpler-with-jekyll-3-0\n     - https://help.github.com/articles/creating-and-highlighting-code-blocks/\n     - https://github.com/jneen/rouge/wiki/list-of-supported-languages-and-lexers\n-->\n<!--\n    <script>\n        async(\"http://cdn.bootcss.com/highlight.js/8.6/highlight.min.js\", function(){\n            hljs.initHighlightingOnLoad();\n        })\n    </script>\n    <link href=\"http://cdn.bootcss.com/highlight.js/8.6/styles/github.min.css\" rel=\"stylesheet\">\n-->\n\n\n\n\n\n\n\n<!--fastClick.js -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/fastclick/1.0.6/fastclick.min.js\", function () {\n        var $nav = document.querySelector(\"nav\");\n        if ($nav) FastClick.attach($nav);\n    })\n</script>\n\n\n<!-- Google Analytics -->\n\n\n\n<!-- Baidu Tongji -->\n\n\n\n<!-- Side Catalog -->\n\n<script type=\"text/javascript\">\n    function generateCatalog(selector) {\n\n        // interop with multilangual \n        if ('' == 'true') {\n            _containerSelector = 'div.post-container.active'\n        } else {\n            _containerSelector = 'div.post-container'\n        }\n\n        // init\n        var P = $(_containerSelector), a, n, t, l, i, c;\n        a = P.find('h1,h2,h3,h4,h5,h6');\n\n        // clean\n        $(selector).html('')\n\n        // appending\n        a.each(function () {\n            n = $(this).prop('tagName').toLowerCase();\n            i = \"#\" + $(this).prop('id');\n            t = $(this).text();\n            c = $('<a href=\"' + i + '\" rel=\"nofollow\">' + t + '</a>');\n            l = $('<li class=\"' + n + '_nav\"></li>').append(c);\n            $(selector).append(l);\n        });\n        return true;\n    }\n\n    generateCatalog(\".catalog-body\");\n\n    // toggle side catalog\n    $(\".catalog-toggle\").click((function (e) {\n        e.preventDefault();\n        $('.side-catalog').toggleClass(\"fold\")\n    }))\n\n    /*\n     * Doc: https://github.com/davist11/jQuery-One-Page-Nav\n     * Fork by Hux to support padding\n     */\n    async(\"/js/jquery.nav.js\", function () {\n        $('.catalog-body').onePageNav({\n            currentClass: \"active\",\n            changeHash: !1,\n            easing: \"swing\",\n            filter: \"\",\n            scrollSpeed: 700,\n            scrollOffset: 0,\n            scrollThreshold: .2,\n            begin: null,\n            end: null,\n            scrollChange: null,\n            padding: 80\n        });\n    });\n</script>\n\n\n\n<!-- Multi-Lingual -->\n\n\n<!-- Simple Jekyll Search -->\n<script>\n    // https://stackoverflow.com/questions/1912501/unescape-html-entities-in-javascript\n    function htmlDecode(input) {\n        var e = document.createElement('textarea');\n        e.innerHTML = input;\n        // handle case of empty input\n        return e.childNodes.length === 0 ? \"\" : e.childNodes[0].nodeValue;\n    }\n\n    SimpleJekyllSearch({\n        searchInput: document.getElementById('search-input'),\n        resultsContainer: document.getElementById('search-results'),\n        json: '/search.json',\n        searchResultTemplate: '<div class=\"post-preview item\"><a href=\"{url}\"><h2 class=\"post-title\">{title}</h2><h3 class=\"post-subtitle\">{subtitle}</h3><hr></a></div>',\n        noResultsText: 'No results',\n        limit: 50,\n        fuzzy: false,\n        // a hack to get escaped subtitle unescaped. for some reason, \n        // post.subtitle w/o escape filter nuke entire search.\n        templateMiddleware: function (prop, value, template) {\n            if (prop === 'subtitle' || prop === 'title') {\n                if (value.indexOf(\"code\")) {\n                    return htmlDecode(value);\n                } else {\n                    return value;\n                }\n            }\n        }\n    });\n\n    $(document).ready(function () {\n        var $searchPage = $('.search-page');\n        var $searchOpen = $('.search-icon');\n        var $searchClose = $('.search-icon-close');\n        var $searchInput = $('#search-input');\n        var $body = $('body');\n\n        $searchOpen.on('click', function (e) {\n            e.preventDefault();\n            $searchPage.toggleClass('search-active');\n            var prevClasses = $body.attr('class') || '';\n            setTimeout(function () {\n                $body.addClass('no-scroll');\n            }, 400)\n\n            if ($searchPage.hasClass('search-active')) {\n                $searchClose.on('click', function (e) {\n                    e.preventDefault();\n                    $searchPage.removeClass('search-active');\n                    $body.attr('class', prevClasses);  // from closure \n                });\n                $searchInput.focus();\n            }\n        });\n    });\n</script>\n\n\n<!-- Image to hack wechat -->\n<img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\" />\n<!-- Migrate from head to bottom, no longer block render and still work -->\n\n</body>\n\n</html>\n","excerpt":"<h2 id=\"0x00-背景\">0x00 背景</h2>\n","url":"/2022/01/19/iOS-OpenType/","next":{"id":"/2022/09/25/App瘦身实践之批量转换webp","tags":[],"relative_path":"_posts/2022-09-25-App瘦身实践之批量转换webp.md","collection":"posts","name":"2022-09-25-App瘦身实践之批量转换webp.md","url":"/2022/09/25/App%E7%98%A6%E8%BA%AB%E5%AE%9E%E8%B7%B5%E4%B9%8B%E6%89%B9%E9%87%8F%E8%BD%AC%E6%8D%A2webp/","title":"App瘦身实践之批量转换webp","date":"2022-09-25 00:00:00 +0800","categories":[],"path":"_posts/2022-09-25-App瘦身实践之批量转换webp.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/home-bg-geek.jpg","slug":"App瘦身实践之批量转换webp","ext":".md"},"title":"iOS应用接收文件打开类型","date":"2022-01-19 00:00:00 +0800","categories":[],"path":"_posts/2022-01-19-iOS-OpenType.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/home-bg-geek.jpg","slug":"iOS-OpenType","ext":".md"},"title":"多账号配置GIT","date":"2021-10-18 00:00:00 +0800","categories":[],"path":"_posts/2021-10-18-git.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/post-bg-2015.jpg","slug":"git","ext":".md"},{"id":"/2021/09/13/crash","tags":[],"relative_path":"_posts/2021-09-13-crash.md","collection":"posts","content":"<p>更新日期：2021-09-07</p>\n\n<p>[TOC]</p>\n\n<h2 id=\"1基本情况\">1、基本情况</h2>\n\n<p>​\t最终堆栈位置：</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n</pre></td><td class=\"rouge-code\"><pre>XXX -[KSKitBaseModel encodeWithCoder:] (KSKitBaseModel.m:)\nXXX -[KSBaseModel encodeWithCoder:] (KSBaseModel.m:)\nXXX -[KSBaseModel encodeWithCoder:] (KSBaseModel.m:)\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h2 id=\"2分析\">2、分析</h2>\n\n<h3 id=\"21-堆栈分析\">2.1 堆栈分析</h3>\n\n<p>跟踪多条Crash堆栈</p>\n\n<p>XXX堆栈 1：</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n</pre></td><td class=\"rouge-code\"><pre>9 XXX 0x0000000103bf4718 -[KSKitBaseModel encodeWithCoder:] (KSKitBaseModel.m:42)\n11 XXX 0x0000000100721688 -[KSBaseModel encodeWithCoder:] (KSBaseModel.m:50)\n11 XXX 0x0000000100721688 -[KSBaseModel encodeWithCoder:] (KSBaseModel.m:50)\n21 XXX 0x00000001004434cc -[KSKVStorage writeObjectToFile:forKey:atomic:completion:] (KSKVStorage.m:0)\n22 XXX 0x000000010326f550 -[KSLocalConfigManager internalRemoveLocalConfig:isGolbal:] (KSLocalConfigManager.m:273)\n23 XXX 0x0000000103270330 +[KSLocalConfigManager removeLocalConfig:isGolbal:] (KSLocalConfigManager.m:0)\n24 XXX 0x000000010326fa64 +[KSLocalConfigManager dailyCommonValueConfig:isGolbal:] (KSLocalConfigManager.m:0)\n25 XXX 0x0000000100b55a30 -[KSKTVRoomViewController(InteractionGuide) checkIfShowGameOngoingView:] (KSKTVRoomViewController+InteractionGuide.m:0)\n26 XXX 0x0000000100b54d38 -[KSKTVRoomViewController(InteractionGuide) showGameOngoingViewWhenEnterKTV:] (KSKTVRoomViewController+InteractionGuide.m:192)\n37 XXX 0x00000001014ec7d4 main (main.m:37)\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>XXX堆栈2：</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n</pre></td><td class=\"rouge-code\"><pre>9 XXX 0x0000000103b94718 -[KSKitBaseModel encodeWithCoder:] (KSKitBaseModel.m:42)\n11 XXX 0x00000001006c1688 -[KSBaseModel encodeWithCoder:] (KSBaseModel.m:50)\n11 XXX 0x00000001006c1688 -[KSBaseModel encodeWithCoder:] (KSBaseModel.m:50)\n21 XXX 0x00000001003e34cc -[KSKVStorage writeObjectToFile:forKey:atomic:completion:] (KSKVStorage.m:0)\n22 XXX 0x000000010320ee7c -[KSLocalConfigManager internalSaveLocalConfig:value:isGolbal:] (KSLocalConfigManager.m:220)\n23 XXX 0x000000010320fb10 +[KSLocalConfigManager saveLocalConfig:commonValue:isGolbal:] (KSLocalConfigManager.m:0)\n24 XXX 0x0000000102152b94 -[KSSendGiftContainerView tabView:didChangeSelectIndex:] (KSSendGiftContainerView.m:1952)\n25 XXX 0x000000010056235c -[KSTabView setSelectIndex:] (KSTabView.m:723)\n28 XXX 0x00000001009ccbc4 -[KSBaseButton sendAction:to:forEvent:] (KSBaseButton.m:0)\n46 XXX 0x000000010148c7d4 main (main.m:37)\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h3 id=\"22-代码分析\">2.2 代码分析</h3>\n\n<p>所有类型的堆栈最终都指向KSKVStorage writeObjectToFile,</p>\n\n<p>这是一个存储控制类，writeObjectToFile是将对象归档后写到磁盘</p>\n\n<p>最终堆栈指向</p>\n\n<pre><code class=\"language-objective-c\">0 libsystem_kernel.dylib 0x000000018aa97014 ___pthread_kill + 8\n1 libsystem_c.dylib 0x000000018aa0b400 _abort + 140\n2 libsystem_malloc.dylib 0x000000018aadba5c _nano_free_definite_size + 92\n3 libsystem_malloc.dylib 0x000000018aadd028 _nano_realloc + 648\n4 libsystem_malloc.dylib 0x000000018aacf240 _malloc_zone_realloc + 180\n5 Foundation 0x000000018c5aa3e4 -[NSOperation isAsynchronous] + 180\n6 Foundation 0x000000018c53c2a0 __decodeInt64 + 452\n</code></pre>\n\n<p>可以认为是NSKeyedUnarchiver 与 NSKeyedArchiver 触发的对象  KSKitBaseModel 及 KSBaseModel 的 encodeWithCoder 方法，</p>\n\n<p>触发encodeWithCoder:方法为自动序列化的标准做法如下：</p>\n\n<pre><code class=\"language-objective-c\">- (void)encodeWithCoder:(NSCoder *)encoder {\n\tClass cls = [self class];\n\twhile (cls != [NSObject class]) {\n\t\tunsigned int numberOfIvars = 0;\n\t\tIvar* ivars = class_copyIvarList(cls, &amp;numberOfIvars);\n\t\tfor(const Ivar* p = ivars; p &lt; ivars+numberOfIvars; p++)\n\t\t{\n\t\t\tIvar const ivar = *p;\n\t\t\tconst char *type = ivar_getTypeEncoding(ivar);\n\t\t\tNSString *key = [NSString stringWithUTF8String:ivar_getName(ivar)];\n            if (key == nil){\n                continue;\n            }\n            if ([key length] == 0){\n                continue;\n            }\n            \n\t\t\tid value = [self valueForKey:key];\n\t\t\tif (value) {\n\t\t\t\tswitch (type[0]) {\n\t\t\t\t\tcase _C_STRUCT_B: {\n\t\t\t\t\t\tNSUInteger ivarSize = 0;\n\t\t\t\t\t\tNSUInteger ivarAlignment = 0;\n\t\t\t\t\t\tNSGetSizeAndAlignment(type, &amp;ivarSize, &amp;ivarAlignment);\n\t\t\t\t\t\tNSData *data = [NSData dataWithBytes:(const char *)((__bridge void *)self) + ivar_getOffset(ivar)\n\t\t\t\t\t\t\t\t\t\t\t\t\t  length:ivarSize];\n\t\t\t\t\t\t[encoder encodeObject:data forKey:key];\n\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\t[encoder encodeObject:value\n\t\t\t\t\t\t\t\t\t   forKey:key];\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (ivars) {\n\t\t\tfree(ivars);\n\t\t}\n\t\t\n\t\tcls = class_getSuperclass(cls);\n\t}\n}\n\n</code></pre>\n\n<p>上述方法通过 runtime机制 遍历当前类及其父类的属性，可以推断，在某个类或者某个继承关系中存在如下调用顺序时，触发了crash</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n</pre></td><td class=\"rouge-code\"><pre>[KSKitBaseModel encodeWithCoder:] (KSKitBaseModel.m:42)\n[KSBaseModel encodeWithCoder:] (KSBaseModel.m:50)\n[KSBaseModel encodeWithCoder:] (KSBaseModel.m:50)\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>代码行数可能不准。</p>\n\n<p>根据断点调试，可能发生在 某个对象的 的归档中：</p>\n\n<h3 id=\"23-问题定位\">2.3 问题定位</h3>\n\n<h4 id=\"231-堆栈定位\">2.3.1 堆栈定位</h4>\n\n<p>​\t再看堆栈，实现了自动序列化的KSBaseModel 及 KSKitBaseModel 作为全民K歌项目持久层对象的基类在自动序列化过程中发生crash：</p>\n\n<pre><code class=\"language-objective-c\">0 libsystem_kernel.dylib 0x000000018aa97014 ___pthread_kill + 8\n1 libsystem_c.dylib 0x000000018aa0b400 _abort + 140\n2 libsystem_malloc.dylib 0x000000018aadba5c _nano_free_definite_size + 92\n3 libsystem_malloc.dylib 0x000000018aadd028 _nano_realloc + 648\n4 libsystem_malloc.dylib 0x000000018aacf240 _malloc_zone_realloc + 180\n5 Foundation 0x000000018c5aa3e4 -[NSOperation isAsynchronous] + 180\n6 Foundation 0x000000018c53c2a0 __decodeInt64 + 452\n7 XXX 0x0000000103cab808 -[KSKitBaseModel encodeWithCoder:] (KSKitBaseModel.m:42)\n8 Foundation 0x000000018c53c49c __decodeIntXXX+ 416\n9 XXX 0x00000001037a0b94 -[KSBaseModel encodeWithCoder:] (KSBaseModel.m:52)\n……\n</code></pre>\n\n<p>​\t在分析了自动序列化代码未找到问题的情况下，看引发crash更直接的libsystem_malloc.dylib 通过对_nano_free_definite_size产生crash的调研发现bugly及微信团队在之前遇到过类似的情况：<a href=\"https://zhuanlan.zhihu.com/p/24342979\">【腾讯Bugly干货分享】聊聊苹果的Bug - iOS 10 nano_free Crash</a></p>\n\n<h4 id=\"232-问题定位\">2.3.2 问题定位</h4>\n\n<p>​\t通过分析，发生crash机型都是iOS10的设备， 问题可以初步断定存在于iOS10的设备上i<strong>一类堆栈为nano_free字样的Crash</strong>，</p>\n\n<h3 id=\"24-复现\">2.4 复现</h3>\n\n<h4 id=\"241-构建复现条件\">2.4.1 构建复现条件</h4>\n\n<p>​\t将全民K歌持久层代码简化后在新建工程中搭建复现环境。 模拟高频，高数据量持久化核心代码如下：</p>\n\n<pre><code class=\"language-objective-c\">- (void)addOperation{\n    int count = 0;\n    while (count &lt; 10000) {\n        [self.lock lock];\n        //通过两台设备（iOS10 iPhone7P | iOS14 iPhone12）控制变量法模拟测试结论如下：\n        //iOS10设备的问题：\n        //通过修改 count % particle 中的 particle的值可以控制需要序列化的数组对象modelData的数据量，\n        //实践证明，当 particle 值越大， modelData的数据量 越大，越容易发生crash\n        //解决方案，控制每次序列化 数据量可以规避此crash\n        //非iOS10设备未出现此问题\n        NSString *key = [NSString stringWithFormat:@\"%d\",count];\n        int particle = 5;\n        if (count % particle == 1) {\n            if (self.modelDataDict.allKeys.count &gt; 0) {\n                [self.modelDataDict removeObjectForKey:[self.modelDataDict.allKeys objectAtIndex:0]];\n            }\n            \n        } else {\n            KSModel *model = [[KSModel alloc] init];\n            [self.modelDataDict setObject:model forKey:key];\n\n        }\n        [self.lock unlock];\n        count ++;\n\n        [self addopera:[self golbalSaveConfigKey] from:0 data:[self.modelDataDict mutableCopy]];\n\n        NSLog(@\"done index:%d datalen = %lu\", count, (unsigned long)self.modelDataDict.allKeys.count);\n    }\n    \n}\n\n- (void)addopera:(NSString *) key from:(int) type data:(id&lt;NSCoding, NSObject&gt;)obj{\n    \n    __block NSData *value = nil;\n    [_diskOperationQueue addOperationWithBlock:^{\n        NSMutableString *str = [NSMutableString new];\n        @try {\n            value = [NSKeyedArchiver archivedDataWithRootObject:obj];\n        }\n        @catch (NSException *exception) {\n            NSLog(@\"exception = %@ ||  from = %d \" ,exception ,type);\n        }\n        \n        NSString *filePath = [ViewController migrateFileNameForKey:[NSString stringWithFormat:@\"%@_%@_a\", str, key]];\n        NSError *error = nil;\n        [value writeToFile:filePath options:NSDataWritingAtomic error:&amp;error];\n    }];\n}\n\n\n</code></pre>\n\n<h4 id=\"242-控制设备变量对比\">2.4.2 控制设备变量对比</h4>\n\n<p>​\t通过控制设备以不同iOS版本号的设备进行测试，在iOS10 iPhone7P上跑上述代码 发生了Crash，Crash堆栈位置吻合：</p>\n\n<p><img src=\"img/2021-09-13crash/Crash.png\" alt=\"\" /></p>\n\n<p>在iOS14 iPhone12 未出现此crash</p>\n\n<h4 id=\"243-控制数据量对比\">2.4.3 控制数据量对比</h4>\n\n<p>​\t通过改变上述 particle 的值为 2 时，iOS10的设备不会发生crash,可以证明在所需序列化数据量较小时（至少说明在长度小于等于2的情况）不会发生crash，运行日志表明循环10000次序列化的情况：</p>\n\n<pre><code class=\"language-objective-c\">2021-09-07 21:22:25.626353 PT-2[1187:35082] done index:9995 datalen = 2\n2021-09-07 21:22:25.626385 PT-2[1187:35082] done index:9996 datalen = 1\n2021-09-07 21:22:25.626456 PT-2[1187:35082] done index:9997 datalen = 2\n2021-09-07 21:22:25.626520 PT-2[1187:35082] done index:9998 datalen = 1\n2021-09-07 21:22:25.626584 PT-2[1187:35082] done index:9999 datalen = 2\n2021-09-07 21:22:25.626610 PT-2[1187:35082] done index:10000 datalen = 1\n</code></pre>\n\n<p>​\t而当particle超过一定数值及循环次数达到一定次数（也就是所需序列化的数组长度足够长时）就会发生crash，通过日志查看，当前复现条件数组长度达到5000左右时发生crash，与在全民K歌项目中的环境不同，可能这个长度会有差异：</p>\n\n<pre><code class=\"language-objective-c\">2021-09-07 21:14:15.166295 PT-2[1087:32256] done index:8773 datalen = 5264\nPT-2(1087,0x16dfe3000) malloc: *** error for object 0x173050000: Freeing unallocated pointer\n*** set a breakpoint in malloc_error_break to debug\n*** error for object 0x173050000: Freeing unallocated pointer\n</code></pre>\n\n<p>上述日志发生crash的条件：</p>\n\n<p>循环次数为：8773</p>\n\n<p>所需序列化数组数据长度为：5264</p>\n\n<h3 id=\"25-解决方案\">2.5 解决方案</h3>\n\n<p>​\t通过上述调研与实践，问题发生在特定设备及特定条件下：</p>\n\n<p>特定设备：iOS10.x</p>\n\n<p>​\t特定设备无法避免。</p>\n\n<p>特定条件：序列化数据量大</p>\n\n<p>​\t通过全民K歌持久层代码走读，发现发生增删时，都要重新序列化全量的数据。由于上述复现条件的【控制数据量对比】</p>\n\n<p>通过优化增量数据的序列化方案可以使得序列化数据量较小，从而规避此crash。</p>\n\n<p>方案一：CoreData替代NSKeyedArchiver持久化方案</p>\n\n<p>方案二：优化NSKeyedArchiver的数据量，每次只持久化增量数据，持久化不再通过NSMutableDictionary setObject之后再持久化，而是直接将需要持久化的对象加Key进行持久化:</p>\n\n<pre><code class=\"language-objective-c\">- (void)addOperation{\n    int count = 0;\n    while (count &lt; 10000) {\n        [self.lock lock];\n        NSString *key = [NSString stringWithFormat:@\"%d\",count];\n\t\t\t\tKSModel *model = [[KSModel alloc] init];\n        [self addopera:[self golbalSaveConfigKeyWithKey:key] from:0 data:model];\n        [self.lock unlock];\n        count ++;\n        NSLog(@\"done index:%d datalen = %lu\", count, (unsigned long)self.modelDataDict.allKeys.count);\n    }\n}\n\n\n</code></pre>\n\n<p>上述方案每次序列化只有一个元素，经验证在iOS10.X 10000次循环不会发生crash，但此方法牺牲了遍历的方便性，需要在反序列化时通过Key值从不同的存储文件中获取后再进行：</p>\n\n<pre><code class=\"language-objective-c\">        id obj = [NSKeyedUnarchiver unarchiveObjectWithData:data];\n</code></pre>\n\n<p>补充：也需确保序列化对象属性数据量不宜过大</p>\n\n<h2 id=\"3其他\">3、其他</h2>\n\n<h3 id=\"31-风险\">3.1 风险</h3>\n\n<p>此外，CRASH方法中存在API废弃风险</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>value = [NSKeyedArchiver archivedDataWithRootObject:obj];'archivedDataWithRootObject:' is deprecated: first deprecated in iOS 12.0 - Use +archivedDataWithRootObject:requiringSecureCoding:error: instead\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p> </p>\n\n","name":"2021-09-13-crash.md","previous":{"id":"/2021/06/20/new-post","tags":[],"relative_path":"_posts/2021-06-20-new-post.md","collection":"posts","content":"<h2 id=\"1jenkins迁移目录\">1、Jenkins迁移目录</h2>\n\n<h3 id=\"11-jenkins安装后的目录\">1.1 Jenkins安装后的目录</h3>\n\n<p>Jenkins的安装不再赘述可以参考https://www.jenkins.io/zh/doc/book/installing/，</p>\n\n<p>安装完之后Jenkins的目录是隐藏目录，可以通过命令行显示</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n</pre></td><td class=\"rouge-code\"><pre>defaults write com.apple.finder AppleShowAllFiles <span class=\"nt\">-boolean</span> <span class=\"nb\">true \n</span>killall Finder\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h3 id=\"12-jobs\">1.2 jobs</h3>\n\n<p>jobs目录为Jenkins存储【项目配置】及【构建历史】的文件夹，</p>\n\n<p><img src=\"/img/jenkins_qy/jenkins_catalog.png\" alt=\"img\" /></p>\n\n<p>config.xml为项目配置</p>\n\n<p>builds为构建历史包含</p>\n\n<ul>\n  <li>\n    <p>build.xml</p>\n\n    <p>构建信息包括：actions、queueId、timestamp、startTime、result、duration、charset、keepLog、builtOn、workspace、hudsonVersion、scm、culprits</p>\n  </li>\n  <li>\n    <p>​\tchangelog.xml</p>\n\n    <p>代码提交记录</p>\n\n    <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n</pre></td><td class=\"rouge-code\"><pre>commit 571f1f4e25f8d35234f31a4e5270ab4eea5f7623\ntree 11663eebbb089bc414048ffbf7c91de331d021cc\nparent 0a3d1d8057ba3e33055d8bfafcb25d00f3a5f93b\nauthor xxx &lt;xxx@xxx.com&gt; 2021-06-30 14:27:29 +0800\ncommitter xxx &lt;xxx@xxx.com&gt; 2021-06-30 14:27:29 +0800\n  \n    修复双卡运营商切换不更新\n  \n</pre></td></tr></tbody></table></code></pre></div>    </div>\n  </li>\n  <li>\n    <p>​\tlog</p>\n\n    <p>构建日志，Jenkins构建历史中的控制台输出</p>\n  </li>\n</ul>\n\n<h2 id=\"2迁移项目配置\">2、迁移项目配置</h2>\n\n<h3 id=\"21-手工迁移\">2.1 手工迁移</h3>\n\n<p>手工迁移能完成Jenkins迁移的工作，但是操作反锁且无法保障完整性，在迁移初期果断放弃。</p>\n\n<h3 id=\"22-备份jobs迁移\">2.2 备份Jobs迁移</h3>\n\n<p>步骤1：目标机开启SSH服务</p>\n\n<p>步骤2：源机使用scp命令，将源机需要迁移的项目在Jobs目录下的文件夹远程复制到目标机.jenkins/Jobs目标下</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>scp <span class=\"nt\">-r</span> /Users/chen/.jenkins/jobs/SPM_iOS xxx@xx.xx.xxx.xxx:/Users/xx/.jenkins/jobs/SPM_iOS\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>步骤3：目标机Jenkins 如果配置的Git账号不一样，需要修改Git Credentials</p>\n\n<p>步骤4：目标机需要刷新配置</p>\n\n<p>​\t<img src=\"/img/jenkins_qy/jenkins_mng.png\" alt=\"image-20210811104136231\" /></p>\n\n<p>​\t<img src=\"/img/jenkins_qy/jenkins_reload.png\" alt=\"image-20210811104136231\" /></p>\n\n<p>步骤5：如果有外部脚本调用（sh、Python），需要将相应的脚本也通过scp命令拷贝到目标机相对路径下</p>\n\n<p>步骤6：尝试构建。如果成功忽略下面步骤，如果失败，构建中可能有些环境不一致,比如uglifyjs没有安装</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n</pre></td><td class=\"rouge-code\"><pre>uglifyjs: command not found\nBuild step 'Execute shell' marked build as failure\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>*步骤7：安装缺失的环境(这里缺失uglify，缺失其他的可以自行安装)</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>npm <span class=\"nb\">install </span>uglify-js <span class=\"nt\">-g</span>   \n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>*步骤8：安装完如果还遇到步骤5的失败，在Jenkins配置的shell中添加,刷新当前环境</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>source ~/.bash_profile\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p><img src=\"/img/jenkins_qy/jenkins_shell.png\" alt=\"image-20210811104136231\" /></p>\n\n<h2 id=\"3其他\">3、其他</h2>\n\n<p>最后如无其他后续需求，建议关闭目标机SSH服务</p>\n\n","name":"2021-06-20-new-post.md","previous":{"id":"/2021/03/21/rn___","tags":[],"relative_path":"_posts/2021-03-21-rn___.md","collection":"posts","name":"2021-03-21-rn___.md","url":"/2021/03/21/rn___/","title":"RN 采坑","date":"2021-03-21 00:00:00 +0800","categories":[],"path":"_posts/2021-03-21-rn___.md","draft":false,"layout":"post","slug":"rn___","ext":".md"},"output":"<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"google-site-verification\" content=\"xBT4GhYoi5qRD5tr338pgPM5OWHHIDR6mNg1a3euekI\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, viewport-fit=cover\">\n    <meta name=\"description\" content=\"与你一起发现更大的世界。\">\n    <meta name=\"keywords\"  content=\"PaysonChen,iOS,流媒体\">\n    <meta name=\"theme-color\" content=\"#000000\">\n    \n    <!-- Open Graph -->\n    <meta property=\"og:title\" content=\"Jenkins迁移 - PaysonChen的博客 | PaysonChen Blog\">\n    \n    <meta property=\"og:type\" content=\"article\">\n    <meta property=\"og:description\" content=\"1、Jenkins迁移目录\n\">\n    \n    \n    <meta property=\"article:published_time\" content=\"2021-06-20T00:00:00Z\">\n    \n    \n    <meta property=\"article:author\" content=\"PaysonChen\">\n    \n    \n    \n    <meta property=\"og:image\" content=\"http://localhost:4000\">\n    <meta property=\"og:url\" content=\"http://localhost:4000/2021/06/20/new-post/\">\n    <meta property=\"og:site_name\" content=\"PaysonChen的博客 | PaysonChen Blog\">\n    \n    <title>Jenkins迁移 - PaysonChen的博客 | PaysonChen Blog</title>\n\n    <!-- Web App Manifest -->\n    <link rel=\"manifest\" href=\"/pwa/manifest.json\">\n\n    <!-- Favicon -->\n    <link rel=\"shortcut icon\" href=\"/img/favicon.ico\">\n    \n    <!-- Canonical URL -->\n    <link rel=\"canonical\" href=\"http://localhost:4000/2021/06/20/new-post/\">\n\n    <!-- Bootstrap Core CSS -->\n    <link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\">\n\n    <!-- Custom CSS -->\n    <link rel=\"stylesheet\" href=\"/css/hux-blog.min.css\">\n\n    <!-- Custom Fonts -->\n    <!-- <link href=\"http://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\"> -->\n    <!-- Hux change font-awesome CDN to qiniu -->\n    <link href=\"//cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\">\n\n\n    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->\n    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->\n    <!--[if lt IE 9]>\n        <script src=\"https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js\"></script>\n        <script src=\"https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js\"></script>\n    <![endif]-->\n\n    <!-- ga & ba script hoook -->\n    <script></script>\n</head>\n\n\n<!-- hack iOS CSS :active style -->\n<body ontouchstart=\"\">\n\n    <!-- Navigation -->\n\n    <nav class=\"navbar navbar-default navbar-custom navbar-fixed-top\">\n        \n        <div class=\"container-fluid\">\n            <!-- Brand and toggle get grouped for better mobile display -->\n            <div class=\"navbar-header page-scroll\">\n                <button type=\"button\" class=\"navbar-toggle\">\n                    <span class=\"sr-only\">Toggle navigation</span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                </button>\n                <a class=\"navbar-brand\" href=\"/\">PaysonChen Blog</a>\n            </div>\n\n            <!-- Collect the nav links, forms, and other content for toggling -->\n            <div id=\"huxblog_navbar\">\n                <div class=\"navbar-collapse\">\n                    <ul class=\"nav navbar-nav navbar-right\">\n                        <li>\n                            <a href=\"/\">Home</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        <li>\n                            <a href=\"/about/\">About</a>\n                        </li>\n                        \n                        \n                        \n                        <li>\n                            <a href=\"/archive/\">Archive</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        <li class=\"search-icon\">\n                            <a href=\"javascript:void(0)\">\n                                <i class=\"fa fa-search\"></i>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n            <!-- /.navbar-collapse -->\n        </div>\n        <!-- /.container -->\n    </nav>\n\n    <script>\n        // Drop Bootstarp low-performance Navbar\n        // Use customize navbar with high-quality material design animation\n        // in high-perf jank-free CSS3 implementation\n        var $body = document.body;\n        var $toggle = document.querySelector('.navbar-toggle');\n        var $navbar = document.querySelector('#huxblog_navbar');\n        var $collapse = document.querySelector('.navbar-collapse');\n\n        var __HuxNav__ = {\n            close: function () {\n                $navbar.className = \" \";\n                // wait until animation end.\n                setTimeout(function () {\n                    // prevent frequently toggle\n                    if ($navbar.className.indexOf('in') < 0) {\n                        $collapse.style.height = \"0px\"\n                    }\n                }, 400)\n            },\n            open: function () {\n                $collapse.style.height = \"auto\"\n                $navbar.className += \" in\";\n            }\n        }\n\n        // Bind Event\n        $toggle.addEventListener('click', function (e) {\n            if ($navbar.className.indexOf('in') > 0) {\n                __HuxNav__.close()\n            } else {\n                __HuxNav__.open()\n            }\n        })\n\n        /**\n         * Since Fastclick is used to delegate 'touchstart' globally\n         * to hack 300ms delay in iOS by performing a fake 'click',\n         * Using 'e.stopPropagation' to stop 'touchstart' event from \n         * $toggle/$collapse will break global delegation.\n         * \n         * Instead, we use a 'e.target' filter to prevent handler\n         * added to document close HuxNav.  \n         *\n         * Also, we use 'click' instead of 'touchstart' as compromise\n         */\n        document.addEventListener('click', function (e) {\n            if (e.target == $toggle) return;\n            if (e.target.className == 'icon-bar') return;\n            __HuxNav__.close();\n        })\n    </script>\n    <!-- Search -->\n<div class=\"search-page\">\n  <div class=\"search-icon-close-container\">\n    <span class=\"search-icon-close\">\n      <i class=\"fa fa-chevron-down\"></i>\n    </span>\n  </div>\n  <div class=\"search-main container\">\n    <div class=\"row\">\n      <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n        <form></form>\n        <input type=\"text\" id=\"search-input\" placeholder=\"$ grep...\">\n        </form>\n        <div id=\"search-results\" class=\"mini-post-list\"></div>\n      </div>\n    </div>\n  </div>\n</div>\n\n    <!-- Image to hack wechat -->\n<!-- <img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\"> -->\n<!-- <img src=\"/img/post-bg-2015.jpg\" width=\"0\" height=\"0\"> -->\n\n<!-- Post Header -->\n\n\n\n<style type=\"text/css\">\n    header.intro-header{\n        position: relative;\n        background-image: url('/img/post-bg-2015.jpg');\n        background: ;\n    }\n\n    \n</style>\n\n<header class=\"intro-header\" >\n\n    <div class=\"header-mask\"></div>\n    \n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <div class=\"post-heading\">\n                    <div class=\"tags\">\n                        \n                    </div>\n                    <h1>Jenkins迁移</h1>\n                    \n                    <h2 class=\"subheading\">This is a subtitle</h2>\n                    <span class=\"meta\">Posted by PaysonChen on June 20, 2021</span>\n                </div>\n            </div>\n        </div>\n    </div>\n</header>\n\n\n\n\n\n\n<!-- Post Content -->\n<article>\n    <div class=\"container\">\n        <div class=\"row\">\n\n    <!-- Post Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                post-container\">\n\n                <!-- Multi-Lingual -->\n                \n\n\t\t\t\t<h2 id=\"1jenkins迁移目录\">1、Jenkins迁移目录</h2>\n\n<h3 id=\"11-jenkins安装后的目录\">1.1 Jenkins安装后的目录</h3>\n\n<p>Jenkins的安装不再赘述可以参考https://www.jenkins.io/zh/doc/book/installing/，</p>\n\n<p>安装完之后Jenkins的目录是隐藏目录，可以通过命令行显示</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n</pre></td><td class=\"rouge-code\"><pre>defaults write com.apple.finder AppleShowAllFiles <span class=\"nt\">-boolean</span> <span class=\"nb\">true \n</span>killall Finder\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h3 id=\"12-jobs\">1.2 jobs</h3>\n\n<p>jobs目录为Jenkins存储【项目配置】及【构建历史】的文件夹，</p>\n\n<p><img src=\"/img/jenkins_qy/jenkins_catalog.png\" alt=\"img\" /></p>\n\n<p>config.xml为项目配置</p>\n\n<p>builds为构建历史包含</p>\n\n<ul>\n  <li>\n    <p>build.xml</p>\n\n    <p>构建信息包括：actions、queueId、timestamp、startTime、result、duration、charset、keepLog、builtOn、workspace、hudsonVersion、scm、culprits</p>\n  </li>\n  <li>\n    <p>​\tchangelog.xml</p>\n\n    <p>代码提交记录</p>\n\n    <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n</pre></td><td class=\"rouge-code\"><pre>commit 571f1f4e25f8d35234f31a4e5270ab4eea5f7623\ntree 11663eebbb089bc414048ffbf7c91de331d021cc\nparent 0a3d1d8057ba3e33055d8bfafcb25d00f3a5f93b\nauthor xxx &lt;xxx@xxx.com&gt; 2021-06-30 14:27:29 +0800\ncommitter xxx &lt;xxx@xxx.com&gt; 2021-06-30 14:27:29 +0800\n  \n    修复双卡运营商切换不更新\n  \n</pre></td></tr></tbody></table></code></pre></div>    </div>\n  </li>\n  <li>\n    <p>​\tlog</p>\n\n    <p>构建日志，Jenkins构建历史中的控制台输出</p>\n  </li>\n</ul>\n\n<h2 id=\"2迁移项目配置\">2、迁移项目配置</h2>\n\n<h3 id=\"21-手工迁移\">2.1 手工迁移</h3>\n\n<p>手工迁移能完成Jenkins迁移的工作，但是操作反锁且无法保障完整性，在迁移初期果断放弃。</p>\n\n<h3 id=\"22-备份jobs迁移\">2.2 备份Jobs迁移</h3>\n\n<p>步骤1：目标机开启SSH服务</p>\n\n<p>步骤2：源机使用scp命令，将源机需要迁移的项目在Jobs目录下的文件夹远程复制到目标机.jenkins/Jobs目标下</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>scp <span class=\"nt\">-r</span> /Users/chen/.jenkins/jobs/SPM_iOS xxx@xx.xx.xxx.xxx:/Users/xx/.jenkins/jobs/SPM_iOS\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>步骤3：目标机Jenkins 如果配置的Git账号不一样，需要修改Git Credentials</p>\n\n<p>步骤4：目标机需要刷新配置</p>\n\n<p>​\t<img src=\"/img/jenkins_qy/jenkins_mng.png\" alt=\"image-20210811104136231\" /></p>\n\n<p>​\t<img src=\"/img/jenkins_qy/jenkins_reload.png\" alt=\"image-20210811104136231\" /></p>\n\n<p>步骤5：如果有外部脚本调用（sh、Python），需要将相应的脚本也通过scp命令拷贝到目标机相对路径下</p>\n\n<p>步骤6：尝试构建。如果成功忽略下面步骤，如果失败，构建中可能有些环境不一致,比如uglifyjs没有安装</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n</pre></td><td class=\"rouge-code\"><pre>uglifyjs: command not found\nBuild step 'Execute shell' marked build as failure\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>*步骤7：安装缺失的环境(这里缺失uglify，缺失其他的可以自行安装)</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>npm <span class=\"nb\">install </span>uglify-js <span class=\"nt\">-g</span>   \n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>*步骤8：安装完如果还遇到步骤5的失败，在Jenkins配置的shell中添加,刷新当前环境</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>source ~/.bash_profile\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p><img src=\"/img/jenkins_qy/jenkins_shell.png\" alt=\"image-20210811104136231\" /></p>\n\n<h2 id=\"3其他\">3、其他</h2>\n\n<p>最后如无其他后续需求，建议关闭目标机SSH服务</p>\n\n\n\n                <hr style=\"visibility: hidden;\">\n                <ul class=\"pager\">\n                    \n                    <li class=\"previous\">\n                        <a href=\"/2021/03/21/rn___/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"RN 采坑\">\n                        Previous<br>\n                        <span>RN 采坑</span>\n                        </a>\n                    </li>\n                    \n                    \n                    <li class=\"next\">\n                        <a href=\"/2021/09/13/crash/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"iOS 10.x 内存Crash 排查 纪要\">\n                        Next<br>\n                        <span>iOS 10.x 内存Crash 排查 纪要</span>\n                        </a>\n                    </li>\n                    \n                </ul>\n                <hr style=\"visibility: hidden;\">\n\n                \n                <!-- disqus 评论框 start -->\n                <div class=\"comment\">\n                    <div id=\"disqus_thread\" class=\"disqus-thread\"></div>\n                </div>\n                <!-- disqus 评论框 end -->\n                \n\n                \n            </div>  \n\n    <!-- Side Catalog Container -->\n        \n            <div class=\"\n                col-lg-2 col-lg-offset-0\n                visible-lg-block\n                sidebar-container\n                catalog-container\">\n                <div class=\"side-catalog\">\n                    <hr class=\"hidden-sm hidden-xs\">\n                    <h5>\n                        <a class=\"catalog-toggle\" href=\"#\">CATALOG</a>\n                    </h5>\n                    <ul class=\"catalog-body\"></ul>\n                </div>\n            </div>\n        \n\n    <!-- Sidebar Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                sidebar-container\">\n\n                <!-- Featured Tags -->\n                \n\n\n<section>\n    \n        <hr class=\"hidden-sm hidden-xs\">\n    \n    <h5><a href=\"/archive/\">FEATURED TAGS</a></h5>\n    <div class=\"tags\">\n        \n        \n        \n        \n        \n    </div>\n</section>\n\n\n                <!-- Friends Blog -->\n                \n            </div>\n        </div>\n    </div>\n</article>\n\n<!-- add support for mathjax by voleking-->\n\n\n\n\n\n\n<!-- disqus 公共JS代码 start (一个网页只需插入一次) -->\n<script type=\"text/javascript\">\n    /* * * CONFIGURATION VARIABLES * * */\n    var disqus_shortname = \"Cyp\";\n    var disqus_identifier = \"/2021/06/20/new-post\";\n    var disqus_url = \"http://localhost:4000/2021/06/20/new-post/\";\n\n    (function() {\n        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;\n        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';\n        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);\n    })();\n</script>\n<!-- disqus 公共JS代码 end -->\n\n\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n      var d = document, t = 'script',\n          o = d.createElement(t),\n          s = d.getElementsByTagName(t)[0];\n      o.src = u;\n      if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n      s.parentNode.insertBefore(o, s);\n    }\n</script>\n<!-- anchor-js, Doc:http://bryanbraun.github.io/anchorjs/ -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/anchor-js/1.1.1/anchor.min.js\",function(){\n        anchors.options = {\n          visible: 'hover',\n          placement: 'right',\n          // icon: '#'\n        };\n        anchors.add().remove('.intro-header h1').remove('.subheading').remove('.sidebar-container h5');\n    })\n</script>\n<style>\n    /* place left on bigger screen */\n    @media all and (min-width: 800px) {\n        .anchorjs-link{\n            position: absolute;\n            left: -0.75em;\n            font-size: 1.1em;\n            margin-top : -0.1em;\n        }\n    }\n</style>\n\n\n\n    <!-- Footer -->\n<footer>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <!-- SNS Link -->\n                \n\n\n<ul class=\"list-inline text-center\">\n\n\n  \n  \n  \n  \n  \n  \n  \n</ul>\n\n                <p class=\"copyright text-muted\">\n                    Copyright &copy; PaysonChen Blog 2024\n                    <br>\n                    <!-- Powered by <a href=\"http://huangxuan.me\">Hux Blog</a> | -->\n                 <!--    <iframe style=\"margin-left: 2px; margin-bottom:-5px;\" frameborder=\"0\" scrolling=\"0\" width=\"100px\"\n                        height=\"20px\"\n                        src=\"https://ghbtns.com/github-btn.html?user=huxpro&repo=huxpro.github.io&type=star&count=true\">\n                    </iframe> -->\n                </p>\n            </div>\n        </div>\n    </div>\n</footer>\n\n<!-- jQuery -->\n<script src=\"/js/jquery.min.js \"></script>\n\n<!-- Bootstrap Core JavaScript -->\n<!-- Currently, only navbar scroll-down effect at desktop still depends on this -->\n<script src=\"/js/bootstrap.min.js \"></script>\n\n<!-- Custom Theme JavaScript -->\n<script src=\"/js/hux-blog.min.js \"></script>\n\n<!-- Simple Jekyll Search -->\n<script src=\"/js/simple-jekyll-search.min.js\"></script>\n\n<!-- Service Worker -->\n\n<script src=\"/js/snackbar.js \"></script>\n<script src=\"/js/sw-registration.js \"></script>\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n        var d = document, t = 'script',\n            o = d.createElement(t),\n            s = d.getElementsByTagName(t)[0];\n        o.src = u;\n        if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n        s.parentNode.insertBefore(o, s);\n    }\n</script>\n\n<!--\n     Because of the native support for backtick-style fenced code blocks\n     right within the Markdown is landed in Github Pages,\n     From V1.6, There is no need for Highlight.js,\n     so Huxblog drops it officially.\n\n     - https://github.com/blog/2100-github-pages-now-faster-and-simpler-with-jekyll-3-0\n     - https://help.github.com/articles/creating-and-highlighting-code-blocks/\n     - https://github.com/jneen/rouge/wiki/list-of-supported-languages-and-lexers\n-->\n<!--\n    <script>\n        async(\"http://cdn.bootcss.com/highlight.js/8.6/highlight.min.js\", function(){\n            hljs.initHighlightingOnLoad();\n        })\n    </script>\n    <link href=\"http://cdn.bootcss.com/highlight.js/8.6/styles/github.min.css\" rel=\"stylesheet\">\n-->\n\n\n\n\n\n\n\n<!--fastClick.js -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/fastclick/1.0.6/fastclick.min.js\", function () {\n        var $nav = document.querySelector(\"nav\");\n        if ($nav) FastClick.attach($nav);\n    })\n</script>\n\n\n<!-- Google Analytics -->\n\n\n\n<!-- Baidu Tongji -->\n\n\n\n<!-- Side Catalog -->\n\n<script type=\"text/javascript\">\n    function generateCatalog(selector) {\n\n        // interop with multilangual \n        if ('' == 'true') {\n            _containerSelector = 'div.post-container.active'\n        } else {\n            _containerSelector = 'div.post-container'\n        }\n\n        // init\n        var P = $(_containerSelector), a, n, t, l, i, c;\n        a = P.find('h1,h2,h3,h4,h5,h6');\n\n        // clean\n        $(selector).html('')\n\n        // appending\n        a.each(function () {\n            n = $(this).prop('tagName').toLowerCase();\n            i = \"#\" + $(this).prop('id');\n            t = $(this).text();\n            c = $('<a href=\"' + i + '\" rel=\"nofollow\">' + t + '</a>');\n            l = $('<li class=\"' + n + '_nav\"></li>').append(c);\n            $(selector).append(l);\n        });\n        return true;\n    }\n\n    generateCatalog(\".catalog-body\");\n\n    // toggle side catalog\n    $(\".catalog-toggle\").click((function (e) {\n        e.preventDefault();\n        $('.side-catalog').toggleClass(\"fold\")\n    }))\n\n    /*\n     * Doc: https://github.com/davist11/jQuery-One-Page-Nav\n     * Fork by Hux to support padding\n     */\n    async(\"/js/jquery.nav.js\", function () {\n        $('.catalog-body').onePageNav({\n            currentClass: \"active\",\n            changeHash: !1,\n            easing: \"swing\",\n            filter: \"\",\n            scrollSpeed: 700,\n            scrollOffset: 0,\n            scrollThreshold: .2,\n            begin: null,\n            end: null,\n            scrollChange: null,\n            padding: 80\n        });\n    });\n</script>\n\n\n\n<!-- Multi-Lingual -->\n\n\n<!-- Simple Jekyll Search -->\n<script>\n    // https://stackoverflow.com/questions/1912501/unescape-html-entities-in-javascript\n    function htmlDecode(input) {\n        var e = document.createElement('textarea');\n        e.innerHTML = input;\n        // handle case of empty input\n        return e.childNodes.length === 0 ? \"\" : e.childNodes[0].nodeValue;\n    }\n\n    SimpleJekyllSearch({\n        searchInput: document.getElementById('search-input'),\n        resultsContainer: document.getElementById('search-results'),\n        json: '/search.json',\n        searchResultTemplate: '<div class=\"post-preview item\"><a href=\"{url}\"><h2 class=\"post-title\">{title}</h2><h3 class=\"post-subtitle\">{subtitle}</h3><hr></a></div>',\n        noResultsText: 'No results',\n        limit: 50,\n        fuzzy: false,\n        // a hack to get escaped subtitle unescaped. for some reason, \n        // post.subtitle w/o escape filter nuke entire search.\n        templateMiddleware: function (prop, value, template) {\n            if (prop === 'subtitle' || prop === 'title') {\n                if (value.indexOf(\"code\")) {\n                    return htmlDecode(value);\n                } else {\n                    return value;\n                }\n            }\n        }\n    });\n\n    $(document).ready(function () {\n        var $searchPage = $('.search-page');\n        var $searchOpen = $('.search-icon');\n        var $searchClose = $('.search-icon-close');\n        var $searchInput = $('#search-input');\n        var $body = $('body');\n\n        $searchOpen.on('click', function (e) {\n            e.preventDefault();\n            $searchPage.toggleClass('search-active');\n            var prevClasses = $body.attr('class') || '';\n            setTimeout(function () {\n                $body.addClass('no-scroll');\n            }, 400)\n\n            if ($searchPage.hasClass('search-active')) {\n                $searchClose.on('click', function (e) {\n                    e.preventDefault();\n                    $searchPage.removeClass('search-active');\n                    $body.attr('class', prevClasses);  // from closure \n                });\n                $searchInput.focus();\n            }\n        });\n    });\n</script>\n\n\n<!-- Image to hack wechat -->\n<img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\" />\n<!-- Migrate from head to bottom, no longer block render and still work -->\n\n</body>\n\n</html>\n","excerpt":"<h2 id=\"1jenkins迁移目录\">1、Jenkins迁移目录</h2>\n","url":"/2021/06/20/new-post/","next":{"id":"/2021/09/13/crash","tags":[],"relative_path":"_posts/2021-09-13-crash.md","collection":"posts","name":"2021-09-13-crash.md","url":"/2021/09/13/crash/","title":"iOS 10.x 内存Crash 排查 纪要","date":"2021-09-13 00:00:00 +0800","categories":[],"path":"_posts/2021-09-13-crash.md","draft":false,"layout":"post","subtitle":"This is a subtitle","author":"PaysonChen","header-img":"img/post-bg-ios9-web.jpg","slug":"crash","ext":".md"},"title":"Jenkins迁移","date":"2021-06-20 00:00:00 +0800","categories":[],"path":"_posts/2021-06-20-new-post.md","draft":false,"layout":"post","subtitle":"This is a subtitle","author":"PaysonChen","header-img":"img/post-bg-2015.jpg","slug":"new-post","ext":".md"},"output":"<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"google-site-verification\" content=\"xBT4GhYoi5qRD5tr338pgPM5OWHHIDR6mNg1a3euekI\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, viewport-fit=cover\">\n    <meta name=\"description\" content=\"与你一起发现更大的世界。\">\n    <meta name=\"keywords\"  content=\"PaysonChen,iOS,流媒体\">\n    <meta name=\"theme-color\" content=\"#000000\">\n    \n    <!-- Open Graph -->\n    <meta property=\"og:title\" content=\"iOS 10.x 内存Crash 排查 纪要 - PaysonChen的博客 | PaysonChen Blog\">\n    \n    <meta property=\"og:type\" content=\"article\">\n    <meta property=\"og:description\" content=\"更新日期：2021-09-07\n\">\n    \n    \n    <meta property=\"article:published_time\" content=\"2021-09-13T00:00:00Z\">\n    \n    \n    <meta property=\"article:author\" content=\"PaysonChen\">\n    \n    \n    \n    <meta property=\"og:image\" content=\"http://localhost:4000\">\n    <meta property=\"og:url\" content=\"http://localhost:4000/2021/09/13/crash/\">\n    <meta property=\"og:site_name\" content=\"PaysonChen的博客 | PaysonChen Blog\">\n    \n    <title>iOS 10.x 内存Crash 排查 纪要 - PaysonChen的博客 | PaysonChen Blog</title>\n\n    <!-- Web App Manifest -->\n    <link rel=\"manifest\" href=\"/pwa/manifest.json\">\n\n    <!-- Favicon -->\n    <link rel=\"shortcut icon\" href=\"/img/favicon.ico\">\n    \n    <!-- Canonical URL -->\n    <link rel=\"canonical\" href=\"http://localhost:4000/2021/09/13/crash/\">\n\n    <!-- Bootstrap Core CSS -->\n    <link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\">\n\n    <!-- Custom CSS -->\n    <link rel=\"stylesheet\" href=\"/css/hux-blog.min.css\">\n\n    <!-- Custom Fonts -->\n    <!-- <link href=\"http://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\"> -->\n    <!-- Hux change font-awesome CDN to qiniu -->\n    <link href=\"//cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\">\n\n\n    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->\n    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->\n    <!--[if lt IE 9]>\n        <script src=\"https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js\"></script>\n        <script src=\"https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js\"></script>\n    <![endif]-->\n\n    <!-- ga & ba script hoook -->\n    <script></script>\n</head>\n\n\n<!-- hack iOS CSS :active style -->\n<body ontouchstart=\"\">\n\n    <!-- Navigation -->\n\n    <nav class=\"navbar navbar-default navbar-custom navbar-fixed-top\">\n        \n        <div class=\"container-fluid\">\n            <!-- Brand and toggle get grouped for better mobile display -->\n            <div class=\"navbar-header page-scroll\">\n                <button type=\"button\" class=\"navbar-toggle\">\n                    <span class=\"sr-only\">Toggle navigation</span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                </button>\n                <a class=\"navbar-brand\" href=\"/\">PaysonChen Blog</a>\n            </div>\n\n            <!-- Collect the nav links, forms, and other content for toggling -->\n            <div id=\"huxblog_navbar\">\n                <div class=\"navbar-collapse\">\n                    <ul class=\"nav navbar-nav navbar-right\">\n                        <li>\n                            <a href=\"/\">Home</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        <li>\n                            <a href=\"/about/\">About</a>\n                        </li>\n                        \n                        \n                        \n                        <li>\n                            <a href=\"/archive/\">Archive</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        <li class=\"search-icon\">\n                            <a href=\"javascript:void(0)\">\n                                <i class=\"fa fa-search\"></i>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n            <!-- /.navbar-collapse -->\n        </div>\n        <!-- /.container -->\n    </nav>\n\n    <script>\n        // Drop Bootstarp low-performance Navbar\n        // Use customize navbar with high-quality material design animation\n        // in high-perf jank-free CSS3 implementation\n        var $body = document.body;\n        var $toggle = document.querySelector('.navbar-toggle');\n        var $navbar = document.querySelector('#huxblog_navbar');\n        var $collapse = document.querySelector('.navbar-collapse');\n\n        var __HuxNav__ = {\n            close: function () {\n                $navbar.className = \" \";\n                // wait until animation end.\n                setTimeout(function () {\n                    // prevent frequently toggle\n                    if ($navbar.className.indexOf('in') < 0) {\n                        $collapse.style.height = \"0px\"\n                    }\n                }, 400)\n            },\n            open: function () {\n                $collapse.style.height = \"auto\"\n                $navbar.className += \" in\";\n            }\n        }\n\n        // Bind Event\n        $toggle.addEventListener('click', function (e) {\n            if ($navbar.className.indexOf('in') > 0) {\n                __HuxNav__.close()\n            } else {\n                __HuxNav__.open()\n            }\n        })\n\n        /**\n         * Since Fastclick is used to delegate 'touchstart' globally\n         * to hack 300ms delay in iOS by performing a fake 'click',\n         * Using 'e.stopPropagation' to stop 'touchstart' event from \n         * $toggle/$collapse will break global delegation.\n         * \n         * Instead, we use a 'e.target' filter to prevent handler\n         * added to document close HuxNav.  \n         *\n         * Also, we use 'click' instead of 'touchstart' as compromise\n         */\n        document.addEventListener('click', function (e) {\n            if (e.target == $toggle) return;\n            if (e.target.className == 'icon-bar') return;\n            __HuxNav__.close();\n        })\n    </script>\n    <!-- Search -->\n<div class=\"search-page\">\n  <div class=\"search-icon-close-container\">\n    <span class=\"search-icon-close\">\n      <i class=\"fa fa-chevron-down\"></i>\n    </span>\n  </div>\n  <div class=\"search-main container\">\n    <div class=\"row\">\n      <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n        <form></form>\n        <input type=\"text\" id=\"search-input\" placeholder=\"$ grep...\">\n        </form>\n        <div id=\"search-results\" class=\"mini-post-list\"></div>\n      </div>\n    </div>\n  </div>\n</div>\n\n    <!-- Image to hack wechat -->\n<!-- <img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\"> -->\n<!-- <img src=\"/img/post-bg-ios9-web.jpg\" width=\"0\" height=\"0\"> -->\n\n<!-- Post Header -->\n\n\n\n<style type=\"text/css\">\n    header.intro-header{\n        position: relative;\n        background-image: url('/img/post-bg-ios9-web.jpg');\n        background: ;\n    }\n\n    \n</style>\n\n<header class=\"intro-header\" >\n\n    <div class=\"header-mask\"></div>\n    \n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <div class=\"post-heading\">\n                    <div class=\"tags\">\n                        \n                    </div>\n                    <h1>iOS 10.x 内存Crash 排查 纪要</h1>\n                    \n                    <h2 class=\"subheading\">This is a subtitle</h2>\n                    <span class=\"meta\">Posted by PaysonChen on September 13, 2021</span>\n                </div>\n            </div>\n        </div>\n    </div>\n</header>\n\n\n\n\n\n\n<!-- Post Content -->\n<article>\n    <div class=\"container\">\n        <div class=\"row\">\n\n    <!-- Post Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                post-container\">\n\n                <!-- Multi-Lingual -->\n                \n\n\t\t\t\t<p>更新日期：2021-09-07</p>\n\n<p>[TOC]</p>\n\n<h2 id=\"1基本情况\">1、基本情况</h2>\n\n<p>​\t最终堆栈位置：</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n</pre></td><td class=\"rouge-code\"><pre>XXX -[KSKitBaseModel encodeWithCoder:] (KSKitBaseModel.m:)\nXXX -[KSBaseModel encodeWithCoder:] (KSBaseModel.m:)\nXXX -[KSBaseModel encodeWithCoder:] (KSBaseModel.m:)\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h2 id=\"2分析\">2、分析</h2>\n\n<h3 id=\"21-堆栈分析\">2.1 堆栈分析</h3>\n\n<p>跟踪多条Crash堆栈</p>\n\n<p>XXX堆栈 1：</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n</pre></td><td class=\"rouge-code\"><pre>9 XXX 0x0000000103bf4718 -[KSKitBaseModel encodeWithCoder:] (KSKitBaseModel.m:42)\n11 XXX 0x0000000100721688 -[KSBaseModel encodeWithCoder:] (KSBaseModel.m:50)\n11 XXX 0x0000000100721688 -[KSBaseModel encodeWithCoder:] (KSBaseModel.m:50)\n21 XXX 0x00000001004434cc -[KSKVStorage writeObjectToFile:forKey:atomic:completion:] (KSKVStorage.m:0)\n22 XXX 0x000000010326f550 -[KSLocalConfigManager internalRemoveLocalConfig:isGolbal:] (KSLocalConfigManager.m:273)\n23 XXX 0x0000000103270330 +[KSLocalConfigManager removeLocalConfig:isGolbal:] (KSLocalConfigManager.m:0)\n24 XXX 0x000000010326fa64 +[KSLocalConfigManager dailyCommonValueConfig:isGolbal:] (KSLocalConfigManager.m:0)\n25 XXX 0x0000000100b55a30 -[KSKTVRoomViewController(InteractionGuide) checkIfShowGameOngoingView:] (KSKTVRoomViewController+InteractionGuide.m:0)\n26 XXX 0x0000000100b54d38 -[KSKTVRoomViewController(InteractionGuide) showGameOngoingViewWhenEnterKTV:] (KSKTVRoomViewController+InteractionGuide.m:192)\n37 XXX 0x00000001014ec7d4 main (main.m:37)\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>XXX堆栈2：</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n</pre></td><td class=\"rouge-code\"><pre>9 XXX 0x0000000103b94718 -[KSKitBaseModel encodeWithCoder:] (KSKitBaseModel.m:42)\n11 XXX 0x00000001006c1688 -[KSBaseModel encodeWithCoder:] (KSBaseModel.m:50)\n11 XXX 0x00000001006c1688 -[KSBaseModel encodeWithCoder:] (KSBaseModel.m:50)\n21 XXX 0x00000001003e34cc -[KSKVStorage writeObjectToFile:forKey:atomic:completion:] (KSKVStorage.m:0)\n22 XXX 0x000000010320ee7c -[KSLocalConfigManager internalSaveLocalConfig:value:isGolbal:] (KSLocalConfigManager.m:220)\n23 XXX 0x000000010320fb10 +[KSLocalConfigManager saveLocalConfig:commonValue:isGolbal:] (KSLocalConfigManager.m:0)\n24 XXX 0x0000000102152b94 -[KSSendGiftContainerView tabView:didChangeSelectIndex:] (KSSendGiftContainerView.m:1952)\n25 XXX 0x000000010056235c -[KSTabView setSelectIndex:] (KSTabView.m:723)\n28 XXX 0x00000001009ccbc4 -[KSBaseButton sendAction:to:forEvent:] (KSBaseButton.m:0)\n46 XXX 0x000000010148c7d4 main (main.m:37)\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h3 id=\"22-代码分析\">2.2 代码分析</h3>\n\n<p>所有类型的堆栈最终都指向KSKVStorage writeObjectToFile,</p>\n\n<p>这是一个存储控制类，writeObjectToFile是将对象归档后写到磁盘</p>\n\n<p>最终堆栈指向</p>\n\n<pre><code class=\"language-objective-c\">0 libsystem_kernel.dylib 0x000000018aa97014 ___pthread_kill + 8\n1 libsystem_c.dylib 0x000000018aa0b400 _abort + 140\n2 libsystem_malloc.dylib 0x000000018aadba5c _nano_free_definite_size + 92\n3 libsystem_malloc.dylib 0x000000018aadd028 _nano_realloc + 648\n4 libsystem_malloc.dylib 0x000000018aacf240 _malloc_zone_realloc + 180\n5 Foundation 0x000000018c5aa3e4 -[NSOperation isAsynchronous] + 180\n6 Foundation 0x000000018c53c2a0 __decodeInt64 + 452\n</code></pre>\n\n<p>可以认为是NSKeyedUnarchiver 与 NSKeyedArchiver 触发的对象  KSKitBaseModel 及 KSBaseModel 的 encodeWithCoder 方法，</p>\n\n<p>触发encodeWithCoder:方法为自动序列化的标准做法如下：</p>\n\n<pre><code class=\"language-objective-c\">- (void)encodeWithCoder:(NSCoder *)encoder {\n\tClass cls = [self class];\n\twhile (cls != [NSObject class]) {\n\t\tunsigned int numberOfIvars = 0;\n\t\tIvar* ivars = class_copyIvarList(cls, &amp;numberOfIvars);\n\t\tfor(const Ivar* p = ivars; p &lt; ivars+numberOfIvars; p++)\n\t\t{\n\t\t\tIvar const ivar = *p;\n\t\t\tconst char *type = ivar_getTypeEncoding(ivar);\n\t\t\tNSString *key = [NSString stringWithUTF8String:ivar_getName(ivar)];\n            if (key == nil){\n                continue;\n            }\n            if ([key length] == 0){\n                continue;\n            }\n            \n\t\t\tid value = [self valueForKey:key];\n\t\t\tif (value) {\n\t\t\t\tswitch (type[0]) {\n\t\t\t\t\tcase _C_STRUCT_B: {\n\t\t\t\t\t\tNSUInteger ivarSize = 0;\n\t\t\t\t\t\tNSUInteger ivarAlignment = 0;\n\t\t\t\t\t\tNSGetSizeAndAlignment(type, &amp;ivarSize, &amp;ivarAlignment);\n\t\t\t\t\t\tNSData *data = [NSData dataWithBytes:(const char *)((__bridge void *)self) + ivar_getOffset(ivar)\n\t\t\t\t\t\t\t\t\t\t\t\t\t  length:ivarSize];\n\t\t\t\t\t\t[encoder encodeObject:data forKey:key];\n\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\t[encoder encodeObject:value\n\t\t\t\t\t\t\t\t\t   forKey:key];\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (ivars) {\n\t\t\tfree(ivars);\n\t\t}\n\t\t\n\t\tcls = class_getSuperclass(cls);\n\t}\n}\n\n</code></pre>\n\n<p>上述方法通过 runtime机制 遍历当前类及其父类的属性，可以推断，在某个类或者某个继承关系中存在如下调用顺序时，触发了crash</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n</pre></td><td class=\"rouge-code\"><pre>[KSKitBaseModel encodeWithCoder:] (KSKitBaseModel.m:42)\n[KSBaseModel encodeWithCoder:] (KSBaseModel.m:50)\n[KSBaseModel encodeWithCoder:] (KSBaseModel.m:50)\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>代码行数可能不准。</p>\n\n<p>根据断点调试，可能发生在 某个对象的 的归档中：</p>\n\n<h3 id=\"23-问题定位\">2.3 问题定位</h3>\n\n<h4 id=\"231-堆栈定位\">2.3.1 堆栈定位</h4>\n\n<p>​\t再看堆栈，实现了自动序列化的KSBaseModel 及 KSKitBaseModel 作为全民K歌项目持久层对象的基类在自动序列化过程中发生crash：</p>\n\n<pre><code class=\"language-objective-c\">0 libsystem_kernel.dylib 0x000000018aa97014 ___pthread_kill + 8\n1 libsystem_c.dylib 0x000000018aa0b400 _abort + 140\n2 libsystem_malloc.dylib 0x000000018aadba5c _nano_free_definite_size + 92\n3 libsystem_malloc.dylib 0x000000018aadd028 _nano_realloc + 648\n4 libsystem_malloc.dylib 0x000000018aacf240 _malloc_zone_realloc + 180\n5 Foundation 0x000000018c5aa3e4 -[NSOperation isAsynchronous] + 180\n6 Foundation 0x000000018c53c2a0 __decodeInt64 + 452\n7 XXX 0x0000000103cab808 -[KSKitBaseModel encodeWithCoder:] (KSKitBaseModel.m:42)\n8 Foundation 0x000000018c53c49c __decodeIntXXX+ 416\n9 XXX 0x00000001037a0b94 -[KSBaseModel encodeWithCoder:] (KSBaseModel.m:52)\n……\n</code></pre>\n\n<p>​\t在分析了自动序列化代码未找到问题的情况下，看引发crash更直接的libsystem_malloc.dylib 通过对_nano_free_definite_size产生crash的调研发现bugly及微信团队在之前遇到过类似的情况：<a href=\"https://zhuanlan.zhihu.com/p/24342979\">【腾讯Bugly干货分享】聊聊苹果的Bug - iOS 10 nano_free Crash</a></p>\n\n<h4 id=\"232-问题定位\">2.3.2 问题定位</h4>\n\n<p>​\t通过分析，发生crash机型都是iOS10的设备， 问题可以初步断定存在于iOS10的设备上i<strong>一类堆栈为nano_free字样的Crash</strong>，</p>\n\n<h3 id=\"24-复现\">2.4 复现</h3>\n\n<h4 id=\"241-构建复现条件\">2.4.1 构建复现条件</h4>\n\n<p>​\t将全民K歌持久层代码简化后在新建工程中搭建复现环境。 模拟高频，高数据量持久化核心代码如下：</p>\n\n<pre><code class=\"language-objective-c\">- (void)addOperation{\n    int count = 0;\n    while (count &lt; 10000) {\n        [self.lock lock];\n        //通过两台设备（iOS10 iPhone7P | iOS14 iPhone12）控制变量法模拟测试结论如下：\n        //iOS10设备的问题：\n        //通过修改 count % particle 中的 particle的值可以控制需要序列化的数组对象modelData的数据量，\n        //实践证明，当 particle 值越大， modelData的数据量 越大，越容易发生crash\n        //解决方案，控制每次序列化 数据量可以规避此crash\n        //非iOS10设备未出现此问题\n        NSString *key = [NSString stringWithFormat:@\"%d\",count];\n        int particle = 5;\n        if (count % particle == 1) {\n            if (self.modelDataDict.allKeys.count &gt; 0) {\n                [self.modelDataDict removeObjectForKey:[self.modelDataDict.allKeys objectAtIndex:0]];\n            }\n            \n        } else {\n            KSModel *model = [[KSModel alloc] init];\n            [self.modelDataDict setObject:model forKey:key];\n\n        }\n        [self.lock unlock];\n        count ++;\n\n        [self addopera:[self golbalSaveConfigKey] from:0 data:[self.modelDataDict mutableCopy]];\n\n        NSLog(@\"done index:%d datalen = %lu\", count, (unsigned long)self.modelDataDict.allKeys.count);\n    }\n    \n}\n\n- (void)addopera:(NSString *) key from:(int) type data:(id&lt;NSCoding, NSObject&gt;)obj{\n    \n    __block NSData *value = nil;\n    [_diskOperationQueue addOperationWithBlock:^{\n        NSMutableString *str = [NSMutableString new];\n        @try {\n            value = [NSKeyedArchiver archivedDataWithRootObject:obj];\n        }\n        @catch (NSException *exception) {\n            NSLog(@\"exception = %@ ||  from = %d \" ,exception ,type);\n        }\n        \n        NSString *filePath = [ViewController migrateFileNameForKey:[NSString stringWithFormat:@\"%@_%@_a\", str, key]];\n        NSError *error = nil;\n        [value writeToFile:filePath options:NSDataWritingAtomic error:&amp;error];\n    }];\n}\n\n\n</code></pre>\n\n<h4 id=\"242-控制设备变量对比\">2.4.2 控制设备变量对比</h4>\n\n<p>​\t通过控制设备以不同iOS版本号的设备进行测试，在iOS10 iPhone7P上跑上述代码 发生了Crash，Crash堆栈位置吻合：</p>\n\n<p><img src=\"img/2021-09-13crash/Crash.png\" alt=\"\" /></p>\n\n<p>在iOS14 iPhone12 未出现此crash</p>\n\n<h4 id=\"243-控制数据量对比\">2.4.3 控制数据量对比</h4>\n\n<p>​\t通过改变上述 particle 的值为 2 时，iOS10的设备不会发生crash,可以证明在所需序列化数据量较小时（至少说明在长度小于等于2的情况）不会发生crash，运行日志表明循环10000次序列化的情况：</p>\n\n<pre><code class=\"language-objective-c\">2021-09-07 21:22:25.626353 PT-2[1187:35082] done index:9995 datalen = 2\n2021-09-07 21:22:25.626385 PT-2[1187:35082] done index:9996 datalen = 1\n2021-09-07 21:22:25.626456 PT-2[1187:35082] done index:9997 datalen = 2\n2021-09-07 21:22:25.626520 PT-2[1187:35082] done index:9998 datalen = 1\n2021-09-07 21:22:25.626584 PT-2[1187:35082] done index:9999 datalen = 2\n2021-09-07 21:22:25.626610 PT-2[1187:35082] done index:10000 datalen = 1\n</code></pre>\n\n<p>​\t而当particle超过一定数值及循环次数达到一定次数（也就是所需序列化的数组长度足够长时）就会发生crash，通过日志查看，当前复现条件数组长度达到5000左右时发生crash，与在全民K歌项目中的环境不同，可能这个长度会有差异：</p>\n\n<pre><code class=\"language-objective-c\">2021-09-07 21:14:15.166295 PT-2[1087:32256] done index:8773 datalen = 5264\nPT-2(1087,0x16dfe3000) malloc: *** error for object 0x173050000: Freeing unallocated pointer\n*** set a breakpoint in malloc_error_break to debug\n*** error for object 0x173050000: Freeing unallocated pointer\n</code></pre>\n\n<p>上述日志发生crash的条件：</p>\n\n<p>循环次数为：8773</p>\n\n<p>所需序列化数组数据长度为：5264</p>\n\n<h3 id=\"25-解决方案\">2.5 解决方案</h3>\n\n<p>​\t通过上述调研与实践，问题发生在特定设备及特定条件下：</p>\n\n<p>特定设备：iOS10.x</p>\n\n<p>​\t特定设备无法避免。</p>\n\n<p>特定条件：序列化数据量大</p>\n\n<p>​\t通过全民K歌持久层代码走读，发现发生增删时，都要重新序列化全量的数据。由于上述复现条件的【控制数据量对比】</p>\n\n<p>通过优化增量数据的序列化方案可以使得序列化数据量较小，从而规避此crash。</p>\n\n<p>方案一：CoreData替代NSKeyedArchiver持久化方案</p>\n\n<p>方案二：优化NSKeyedArchiver的数据量，每次只持久化增量数据，持久化不再通过NSMutableDictionary setObject之后再持久化，而是直接将需要持久化的对象加Key进行持久化:</p>\n\n<pre><code class=\"language-objective-c\">- (void)addOperation{\n    int count = 0;\n    while (count &lt; 10000) {\n        [self.lock lock];\n        NSString *key = [NSString stringWithFormat:@\"%d\",count];\n\t\t\t\tKSModel *model = [[KSModel alloc] init];\n        [self addopera:[self golbalSaveConfigKeyWithKey:key] from:0 data:model];\n        [self.lock unlock];\n        count ++;\n        NSLog(@\"done index:%d datalen = %lu\", count, (unsigned long)self.modelDataDict.allKeys.count);\n    }\n}\n\n\n</code></pre>\n\n<p>上述方案每次序列化只有一个元素，经验证在iOS10.X 10000次循环不会发生crash，但此方法牺牲了遍历的方便性，需要在反序列化时通过Key值从不同的存储文件中获取后再进行：</p>\n\n<pre><code class=\"language-objective-c\">        id obj = [NSKeyedUnarchiver unarchiveObjectWithData:data];\n</code></pre>\n\n<p>补充：也需确保序列化对象属性数据量不宜过大</p>\n\n<h2 id=\"3其他\">3、其他</h2>\n\n<h3 id=\"31-风险\">3.1 风险</h3>\n\n<p>此外，CRASH方法中存在API废弃风险</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>value = [NSKeyedArchiver archivedDataWithRootObject:obj];'archivedDataWithRootObject:' is deprecated: first deprecated in iOS 12.0 - Use +archivedDataWithRootObject:requiringSecureCoding:error: instead\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p> </p>\n\n\n\n                <hr style=\"visibility: hidden;\">\n                <ul class=\"pager\">\n                    \n                    <li class=\"previous\">\n                        <a href=\"/2021/06/20/new-post/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Jenkins迁移\">\n                        Previous<br>\n                        <span>Jenkins迁移</span>\n                        </a>\n                    </li>\n                    \n                    \n                    <li class=\"next\">\n                        <a href=\"/2021/10/18/git/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"多账号配置GIT\">\n                        Next<br>\n                        <span>多账号配置GIT</span>\n                        </a>\n                    </li>\n                    \n                </ul>\n                <hr style=\"visibility: hidden;\">\n\n                \n                <!-- disqus 评论框 start -->\n                <div class=\"comment\">\n                    <div id=\"disqus_thread\" class=\"disqus-thread\"></div>\n                </div>\n                <!-- disqus 评论框 end -->\n                \n\n                \n            </div>  \n\n    <!-- Side Catalog Container -->\n        \n            <div class=\"\n                col-lg-2 col-lg-offset-0\n                visible-lg-block\n                sidebar-container\n                catalog-container\">\n                <div class=\"side-catalog\">\n                    <hr class=\"hidden-sm hidden-xs\">\n                    <h5>\n                        <a class=\"catalog-toggle\" href=\"#\">CATALOG</a>\n                    </h5>\n                    <ul class=\"catalog-body\"></ul>\n                </div>\n            </div>\n        \n\n    <!-- Sidebar Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                sidebar-container\">\n\n                <!-- Featured Tags -->\n                \n\n\n<section>\n    \n        <hr class=\"hidden-sm hidden-xs\">\n    \n    <h5><a href=\"/archive/\">FEATURED TAGS</a></h5>\n    <div class=\"tags\">\n        \n        \n        \n        \n        \n    </div>\n</section>\n\n\n                <!-- Friends Blog -->\n                \n            </div>\n        </div>\n    </div>\n</article>\n\n<!-- add support for mathjax by voleking-->\n\n\n\n\n\n\n<!-- disqus 公共JS代码 start (一个网页只需插入一次) -->\n<script type=\"text/javascript\">\n    /* * * CONFIGURATION VARIABLES * * */\n    var disqus_shortname = \"Cyp\";\n    var disqus_identifier = \"/2021/09/13/crash\";\n    var disqus_url = \"http://localhost:4000/2021/09/13/crash/\";\n\n    (function() {\n        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;\n        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';\n        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);\n    })();\n</script>\n<!-- disqus 公共JS代码 end -->\n\n\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n      var d = document, t = 'script',\n          o = d.createElement(t),\n          s = d.getElementsByTagName(t)[0];\n      o.src = u;\n      if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n      s.parentNode.insertBefore(o, s);\n    }\n</script>\n<!-- anchor-js, Doc:http://bryanbraun.github.io/anchorjs/ -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/anchor-js/1.1.1/anchor.min.js\",function(){\n        anchors.options = {\n          visible: 'hover',\n          placement: 'right',\n          // icon: '#'\n        };\n        anchors.add().remove('.intro-header h1').remove('.subheading').remove('.sidebar-container h5');\n    })\n</script>\n<style>\n    /* place left on bigger screen */\n    @media all and (min-width: 800px) {\n        .anchorjs-link{\n            position: absolute;\n            left: -0.75em;\n            font-size: 1.1em;\n            margin-top : -0.1em;\n        }\n    }\n</style>\n\n\n\n    <!-- Footer -->\n<footer>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <!-- SNS Link -->\n                \n\n\n<ul class=\"list-inline text-center\">\n\n\n  \n  \n  \n  \n  \n  \n  \n</ul>\n\n                <p class=\"copyright text-muted\">\n                    Copyright &copy; PaysonChen Blog 2024\n                    <br>\n                    <!-- Powered by <a href=\"http://huangxuan.me\">Hux Blog</a> | -->\n                 <!--    <iframe style=\"margin-left: 2px; margin-bottom:-5px;\" frameborder=\"0\" scrolling=\"0\" width=\"100px\"\n                        height=\"20px\"\n                        src=\"https://ghbtns.com/github-btn.html?user=huxpro&repo=huxpro.github.io&type=star&count=true\">\n                    </iframe> -->\n                </p>\n            </div>\n        </div>\n    </div>\n</footer>\n\n<!-- jQuery -->\n<script src=\"/js/jquery.min.js \"></script>\n\n<!-- Bootstrap Core JavaScript -->\n<!-- Currently, only navbar scroll-down effect at desktop still depends on this -->\n<script src=\"/js/bootstrap.min.js \"></script>\n\n<!-- Custom Theme JavaScript -->\n<script src=\"/js/hux-blog.min.js \"></script>\n\n<!-- Simple Jekyll Search -->\n<script src=\"/js/simple-jekyll-search.min.js\"></script>\n\n<!-- Service Worker -->\n\n<script src=\"/js/snackbar.js \"></script>\n<script src=\"/js/sw-registration.js \"></script>\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n        var d = document, t = 'script',\n            o = d.createElement(t),\n            s = d.getElementsByTagName(t)[0];\n        o.src = u;\n        if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n        s.parentNode.insertBefore(o, s);\n    }\n</script>\n\n<!--\n     Because of the native support for backtick-style fenced code blocks\n     right within the Markdown is landed in Github Pages,\n     From V1.6, There is no need for Highlight.js,\n     so Huxblog drops it officially.\n\n     - https://github.com/blog/2100-github-pages-now-faster-and-simpler-with-jekyll-3-0\n     - https://help.github.com/articles/creating-and-highlighting-code-blocks/\n     - https://github.com/jneen/rouge/wiki/list-of-supported-languages-and-lexers\n-->\n<!--\n    <script>\n        async(\"http://cdn.bootcss.com/highlight.js/8.6/highlight.min.js\", function(){\n            hljs.initHighlightingOnLoad();\n        })\n    </script>\n    <link href=\"http://cdn.bootcss.com/highlight.js/8.6/styles/github.min.css\" rel=\"stylesheet\">\n-->\n\n\n\n\n\n\n\n<!--fastClick.js -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/fastclick/1.0.6/fastclick.min.js\", function () {\n        var $nav = document.querySelector(\"nav\");\n        if ($nav) FastClick.attach($nav);\n    })\n</script>\n\n\n<!-- Google Analytics -->\n\n\n\n<!-- Baidu Tongji -->\n\n\n\n<!-- Side Catalog -->\n\n<script type=\"text/javascript\">\n    function generateCatalog(selector) {\n\n        // interop with multilangual \n        if ('' == 'true') {\n            _containerSelector = 'div.post-container.active'\n        } else {\n            _containerSelector = 'div.post-container'\n        }\n\n        // init\n        var P = $(_containerSelector), a, n, t, l, i, c;\n        a = P.find('h1,h2,h3,h4,h5,h6');\n\n        // clean\n        $(selector).html('')\n\n        // appending\n        a.each(function () {\n            n = $(this).prop('tagName').toLowerCase();\n            i = \"#\" + $(this).prop('id');\n            t = $(this).text();\n            c = $('<a href=\"' + i + '\" rel=\"nofollow\">' + t + '</a>');\n            l = $('<li class=\"' + n + '_nav\"></li>').append(c);\n            $(selector).append(l);\n        });\n        return true;\n    }\n\n    generateCatalog(\".catalog-body\");\n\n    // toggle side catalog\n    $(\".catalog-toggle\").click((function (e) {\n        e.preventDefault();\n        $('.side-catalog').toggleClass(\"fold\")\n    }))\n\n    /*\n     * Doc: https://github.com/davist11/jQuery-One-Page-Nav\n     * Fork by Hux to support padding\n     */\n    async(\"/js/jquery.nav.js\", function () {\n        $('.catalog-body').onePageNav({\n            currentClass: \"active\",\n            changeHash: !1,\n            easing: \"swing\",\n            filter: \"\",\n            scrollSpeed: 700,\n            scrollOffset: 0,\n            scrollThreshold: .2,\n            begin: null,\n            end: null,\n            scrollChange: null,\n            padding: 80\n        });\n    });\n</script>\n\n\n\n<!-- Multi-Lingual -->\n\n\n<!-- Simple Jekyll Search -->\n<script>\n    // https://stackoverflow.com/questions/1912501/unescape-html-entities-in-javascript\n    function htmlDecode(input) {\n        var e = document.createElement('textarea');\n        e.innerHTML = input;\n        // handle case of empty input\n        return e.childNodes.length === 0 ? \"\" : e.childNodes[0].nodeValue;\n    }\n\n    SimpleJekyllSearch({\n        searchInput: document.getElementById('search-input'),\n        resultsContainer: document.getElementById('search-results'),\n        json: '/search.json',\n        searchResultTemplate: '<div class=\"post-preview item\"><a href=\"{url}\"><h2 class=\"post-title\">{title}</h2><h3 class=\"post-subtitle\">{subtitle}</h3><hr></a></div>',\n        noResultsText: 'No results',\n        limit: 50,\n        fuzzy: false,\n        // a hack to get escaped subtitle unescaped. for some reason, \n        // post.subtitle w/o escape filter nuke entire search.\n        templateMiddleware: function (prop, value, template) {\n            if (prop === 'subtitle' || prop === 'title') {\n                if (value.indexOf(\"code\")) {\n                    return htmlDecode(value);\n                } else {\n                    return value;\n                }\n            }\n        }\n    });\n\n    $(document).ready(function () {\n        var $searchPage = $('.search-page');\n        var $searchOpen = $('.search-icon');\n        var $searchClose = $('.search-icon-close');\n        var $searchInput = $('#search-input');\n        var $body = $('body');\n\n        $searchOpen.on('click', function (e) {\n            e.preventDefault();\n            $searchPage.toggleClass('search-active');\n            var prevClasses = $body.attr('class') || '';\n            setTimeout(function () {\n                $body.addClass('no-scroll');\n            }, 400)\n\n            if ($searchPage.hasClass('search-active')) {\n                $searchClose.on('click', function (e) {\n                    e.preventDefault();\n                    $searchPage.removeClass('search-active');\n                    $body.attr('class', prevClasses);  // from closure \n                });\n                $searchInput.focus();\n            }\n        });\n    });\n</script>\n\n\n<!-- Image to hack wechat -->\n<img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\" />\n<!-- Migrate from head to bottom, no longer block render and still work -->\n\n</body>\n\n</html>\n","excerpt":"<p>更新日期：2021-09-07</p>\n","url":"/2021/09/13/crash/","next":{"id":"/2021/10/18/git","tags":[],"relative_path":"_posts/2021-10-18-git.md","collection":"posts","content":"<h2 id=\"1常规多账号\">1、常规多账号</h2>\n\n<p>不同host的代码仓库之间的多账号SSH配置，网上的资料很多，这里简单找一个 <a href=\"https://www.jianshu.com/p/92d207964061\">配置多个SSH</a>。</p>\n\n<h2 id=\"2多个github账号\">2、多个Github账号</h2>\n\n<p>由于申请了多个域名，配置同一个github账号下的gitpage出现了异常，我想大概也是因为CNAME或者其他原因。尝试重新申请一个github账号分开管理也行。</p>\n\n<p>之前账号github是用ssh配置的，新账号也尝试用ssh配置，</p>\n\n<p>重新生成新的ssk-key，也配置了config文件</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n</pre></td><td class=\"rouge-code\"><pre># github2\nHost a.github.com\nPort 22\nUser a\nHostName github.com\nPreferredAuthentications publickey\nIdentityFile ~/.ssh/id_rsa_github_a\n\n# github \nHost b.github.com\nPort 22\nUser b\nHostName github.com\nPreferredAuthentications publickea\nIdentityFile ~/.ssh/id_rsa_github_b\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>clone b仓库的代码，提交代码时提示</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n</pre></td><td class=\"rouge-code\"><pre>ERROR: Permission to B/payson.github.io.git denied to A.\nfatal: Could not read from remote repository.\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>就是提交时默认账号是A</p>\n\n<p>如果改成B呢，公钥私钥没问题，config也配了，</p>\n\n<p>最后查找资料发现，需要改Host</p>\n\n<p>将仓库B的远程Host，加上config配置的 b.github.com</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>origin:git@b.github.com:b/payson.github.io.git\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>使Host与config的Host对应</p>\n\n","name":"2021-10-18-git.md","previous":{"id":"/2021/09/13/crash","tags":[],"relative_path":"_posts/2021-09-13-crash.md","collection":"posts","name":"2021-09-13-crash.md","url":"/2021/09/13/crash/","title":"iOS 10.x 内存Crash 排查 纪要","date":"2021-09-13 00:00:00 +0800","categories":[],"path":"_posts/2021-09-13-crash.md","draft":false,"layout":"post","subtitle":"This is a subtitle","author":"PaysonChen","header-img":"img/post-bg-ios9-web.jpg","slug":"crash","ext":".md"},"output":"<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"google-site-verification\" content=\"xBT4GhYoi5qRD5tr338pgPM5OWHHIDR6mNg1a3euekI\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, viewport-fit=cover\">\n    <meta name=\"description\" content=\"与你一起发现更大的世界。\">\n    <meta name=\"keywords\"  content=\"PaysonChen,iOS,流媒体\">\n    <meta name=\"theme-color\" content=\"#000000\">\n    \n    <!-- Open Graph -->\n    <meta property=\"og:title\" content=\"多账号配置GIT - PaysonChen的博客 | PaysonChen Blog\">\n    \n    <meta property=\"og:type\" content=\"article\">\n    <meta property=\"og:description\" content=\"1、常规多账号\n\">\n    \n    \n    <meta property=\"article:published_time\" content=\"2021-10-18T00:00:00Z\">\n    \n    \n    <meta property=\"article:author\" content=\"PaysonChen\">\n    \n    \n    \n    <meta property=\"og:image\" content=\"http://localhost:4000\">\n    <meta property=\"og:url\" content=\"http://localhost:4000/2021/10/18/git/\">\n    <meta property=\"og:site_name\" content=\"PaysonChen的博客 | PaysonChen Blog\">\n    \n    <title>多账号配置GIT - PaysonChen的博客 | PaysonChen Blog</title>\n\n    <!-- Web App Manifest -->\n    <link rel=\"manifest\" href=\"/pwa/manifest.json\">\n\n    <!-- Favicon -->\n    <link rel=\"shortcut icon\" href=\"/img/favicon.ico\">\n    \n    <!-- Canonical URL -->\n    <link rel=\"canonical\" href=\"http://localhost:4000/2021/10/18/git/\">\n\n    <!-- Bootstrap Core CSS -->\n    <link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\">\n\n    <!-- Custom CSS -->\n    <link rel=\"stylesheet\" href=\"/css/hux-blog.min.css\">\n\n    <!-- Custom Fonts -->\n    <!-- <link href=\"http://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\"> -->\n    <!-- Hux change font-awesome CDN to qiniu -->\n    <link href=\"//cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\">\n\n\n    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->\n    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->\n    <!--[if lt IE 9]>\n        <script src=\"https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js\"></script>\n        <script src=\"https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js\"></script>\n    <![endif]-->\n\n    <!-- ga & ba script hoook -->\n    <script></script>\n</head>\n\n\n<!-- hack iOS CSS :active style -->\n<body ontouchstart=\"\">\n\n    <!-- Navigation -->\n\n    <nav class=\"navbar navbar-default navbar-custom navbar-fixed-top\">\n        \n        <div class=\"container-fluid\">\n            <!-- Brand and toggle get grouped for better mobile display -->\n            <div class=\"navbar-header page-scroll\">\n                <button type=\"button\" class=\"navbar-toggle\">\n                    <span class=\"sr-only\">Toggle navigation</span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                </button>\n                <a class=\"navbar-brand\" href=\"/\">PaysonChen Blog</a>\n            </div>\n\n            <!-- Collect the nav links, forms, and other content for toggling -->\n            <div id=\"huxblog_navbar\">\n                <div class=\"navbar-collapse\">\n                    <ul class=\"nav navbar-nav navbar-right\">\n                        <li>\n                            <a href=\"/\">Home</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        <li>\n                            <a href=\"/about/\">About</a>\n                        </li>\n                        \n                        \n                        \n                        <li>\n                            <a href=\"/archive/\">Archive</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        <li class=\"search-icon\">\n                            <a href=\"javascript:void(0)\">\n                                <i class=\"fa fa-search\"></i>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n            <!-- /.navbar-collapse -->\n        </div>\n        <!-- /.container -->\n    </nav>\n\n    <script>\n        // Drop Bootstarp low-performance Navbar\n        // Use customize navbar with high-quality material design animation\n        // in high-perf jank-free CSS3 implementation\n        var $body = document.body;\n        var $toggle = document.querySelector('.navbar-toggle');\n        var $navbar = document.querySelector('#huxblog_navbar');\n        var $collapse = document.querySelector('.navbar-collapse');\n\n        var __HuxNav__ = {\n            close: function () {\n                $navbar.className = \" \";\n                // wait until animation end.\n                setTimeout(function () {\n                    // prevent frequently toggle\n                    if ($navbar.className.indexOf('in') < 0) {\n                        $collapse.style.height = \"0px\"\n                    }\n                }, 400)\n            },\n            open: function () {\n                $collapse.style.height = \"auto\"\n                $navbar.className += \" in\";\n            }\n        }\n\n        // Bind Event\n        $toggle.addEventListener('click', function (e) {\n            if ($navbar.className.indexOf('in') > 0) {\n                __HuxNav__.close()\n            } else {\n                __HuxNav__.open()\n            }\n        })\n\n        /**\n         * Since Fastclick is used to delegate 'touchstart' globally\n         * to hack 300ms delay in iOS by performing a fake 'click',\n         * Using 'e.stopPropagation' to stop 'touchstart' event from \n         * $toggle/$collapse will break global delegation.\n         * \n         * Instead, we use a 'e.target' filter to prevent handler\n         * added to document close HuxNav.  \n         *\n         * Also, we use 'click' instead of 'touchstart' as compromise\n         */\n        document.addEventListener('click', function (e) {\n            if (e.target == $toggle) return;\n            if (e.target.className == 'icon-bar') return;\n            __HuxNav__.close();\n        })\n    </script>\n    <!-- Search -->\n<div class=\"search-page\">\n  <div class=\"search-icon-close-container\">\n    <span class=\"search-icon-close\">\n      <i class=\"fa fa-chevron-down\"></i>\n    </span>\n  </div>\n  <div class=\"search-main container\">\n    <div class=\"row\">\n      <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n        <form></form>\n        <input type=\"text\" id=\"search-input\" placeholder=\"$ grep...\">\n        </form>\n        <div id=\"search-results\" class=\"mini-post-list\"></div>\n      </div>\n    </div>\n  </div>\n</div>\n\n    <!-- Image to hack wechat -->\n<!-- <img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\"> -->\n<!-- <img src=\"/img/post-bg-2015.jpg\" width=\"0\" height=\"0\"> -->\n\n<!-- Post Header -->\n\n\n\n<style type=\"text/css\">\n    header.intro-header{\n        position: relative;\n        background-image: url('/img/post-bg-2015.jpg');\n        background: ;\n    }\n\n    \n</style>\n\n<header class=\"intro-header\" >\n\n    <div class=\"header-mask\"></div>\n    \n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <div class=\"post-heading\">\n                    <div class=\"tags\">\n                        \n                    </div>\n                    <h1>多账号配置GIT</h1>\n                    \n                    <h2 class=\"subheading\"></h2>\n                    <span class=\"meta\">Posted by PaysonChen on October 18, 2021</span>\n                </div>\n            </div>\n        </div>\n    </div>\n</header>\n\n\n\n\n\n\n<!-- Post Content -->\n<article>\n    <div class=\"container\">\n        <div class=\"row\">\n\n    <!-- Post Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                post-container\">\n\n                <!-- Multi-Lingual -->\n                \n\n\t\t\t\t<h2 id=\"1常规多账号\">1、常规多账号</h2>\n\n<p>不同host的代码仓库之间的多账号SSH配置，网上的资料很多，这里简单找一个 <a href=\"https://www.jianshu.com/p/92d207964061\">配置多个SSH</a>。</p>\n\n<h2 id=\"2多个github账号\">2、多个Github账号</h2>\n\n<p>由于申请了多个域名，配置同一个github账号下的gitpage出现了异常，我想大概也是因为CNAME或者其他原因。尝试重新申请一个github账号分开管理也行。</p>\n\n<p>之前账号github是用ssh配置的，新账号也尝试用ssh配置，</p>\n\n<p>重新生成新的ssk-key，也配置了config文件</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n</pre></td><td class=\"rouge-code\"><pre># github2\nHost a.github.com\nPort 22\nUser a\nHostName github.com\nPreferredAuthentications publickey\nIdentityFile ~/.ssh/id_rsa_github_a\n\n# github \nHost b.github.com\nPort 22\nUser b\nHostName github.com\nPreferredAuthentications publickea\nIdentityFile ~/.ssh/id_rsa_github_b\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>clone b仓库的代码，提交代码时提示</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n</pre></td><td class=\"rouge-code\"><pre>ERROR: Permission to B/payson.github.io.git denied to A.\nfatal: Could not read from remote repository.\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>就是提交时默认账号是A</p>\n\n<p>如果改成B呢，公钥私钥没问题，config也配了，</p>\n\n<p>最后查找资料发现，需要改Host</p>\n\n<p>将仓库B的远程Host，加上config配置的 b.github.com</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>origin:git@b.github.com:b/payson.github.io.git\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>使Host与config的Host对应</p>\n\n\n\n                <hr style=\"visibility: hidden;\">\n                <ul class=\"pager\">\n                    \n                    <li class=\"previous\">\n                        <a href=\"/2021/09/13/crash/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"iOS 10.x 内存Crash 排查 纪要\">\n                        Previous<br>\n                        <span>iOS 10.x 内存Crash 排查 纪要</span>\n                        </a>\n                    </li>\n                    \n                    \n                    <li class=\"next\">\n                        <a href=\"/2022/01/19/iOS-OpenType/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"iOS应用接收文件打开类型\">\n                        Next<br>\n                        <span>iOS应用接收文件打开类型</span>\n                        </a>\n                    </li>\n                    \n                </ul>\n                <hr style=\"visibility: hidden;\">\n\n                \n                <!-- disqus 评论框 start -->\n                <div class=\"comment\">\n                    <div id=\"disqus_thread\" class=\"disqus-thread\"></div>\n                </div>\n                <!-- disqus 评论框 end -->\n                \n\n                \n            </div>  \n\n    <!-- Side Catalog Container -->\n        \n            <div class=\"\n                col-lg-2 col-lg-offset-0\n                visible-lg-block\n                sidebar-container\n                catalog-container\">\n                <div class=\"side-catalog\">\n                    <hr class=\"hidden-sm hidden-xs\">\n                    <h5>\n                        <a class=\"catalog-toggle\" href=\"#\">CATALOG</a>\n                    </h5>\n                    <ul class=\"catalog-body\"></ul>\n                </div>\n            </div>\n        \n\n    <!-- Sidebar Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                sidebar-container\">\n\n                <!-- Featured Tags -->\n                \n\n\n<section>\n    \n        <hr class=\"hidden-sm hidden-xs\">\n    \n    <h5><a href=\"/archive/\">FEATURED TAGS</a></h5>\n    <div class=\"tags\">\n        \n        \n        \n        \n        \n    </div>\n</section>\n\n\n                <!-- Friends Blog -->\n                \n            </div>\n        </div>\n    </div>\n</article>\n\n<!-- add support for mathjax by voleking-->\n\n\n\n\n\n\n<!-- disqus 公共JS代码 start (一个网页只需插入一次) -->\n<script type=\"text/javascript\">\n    /* * * CONFIGURATION VARIABLES * * */\n    var disqus_shortname = \"Cyp\";\n    var disqus_identifier = \"/2021/10/18/git\";\n    var disqus_url = \"http://localhost:4000/2021/10/18/git/\";\n\n    (function() {\n        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;\n        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';\n        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);\n    })();\n</script>\n<!-- disqus 公共JS代码 end -->\n\n\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n      var d = document, t = 'script',\n          o = d.createElement(t),\n          s = d.getElementsByTagName(t)[0];\n      o.src = u;\n      if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n      s.parentNode.insertBefore(o, s);\n    }\n</script>\n<!-- anchor-js, Doc:http://bryanbraun.github.io/anchorjs/ -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/anchor-js/1.1.1/anchor.min.js\",function(){\n        anchors.options = {\n          visible: 'hover',\n          placement: 'right',\n          // icon: '#'\n        };\n        anchors.add().remove('.intro-header h1').remove('.subheading').remove('.sidebar-container h5');\n    })\n</script>\n<style>\n    /* place left on bigger screen */\n    @media all and (min-width: 800px) {\n        .anchorjs-link{\n            position: absolute;\n            left: -0.75em;\n            font-size: 1.1em;\n            margin-top : -0.1em;\n        }\n    }\n</style>\n\n\n\n    <!-- Footer -->\n<footer>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <!-- SNS Link -->\n                \n\n\n<ul class=\"list-inline text-center\">\n\n\n  \n  \n  \n  \n  \n  \n  \n</ul>\n\n                <p class=\"copyright text-muted\">\n                    Copyright &copy; PaysonChen Blog 2024\n                    <br>\n                    <!-- Powered by <a href=\"http://huangxuan.me\">Hux Blog</a> | -->\n                 <!--    <iframe style=\"margin-left: 2px; margin-bottom:-5px;\" frameborder=\"0\" scrolling=\"0\" width=\"100px\"\n                        height=\"20px\"\n                        src=\"https://ghbtns.com/github-btn.html?user=huxpro&repo=huxpro.github.io&type=star&count=true\">\n                    </iframe> -->\n                </p>\n            </div>\n        </div>\n    </div>\n</footer>\n\n<!-- jQuery -->\n<script src=\"/js/jquery.min.js \"></script>\n\n<!-- Bootstrap Core JavaScript -->\n<!-- Currently, only navbar scroll-down effect at desktop still depends on this -->\n<script src=\"/js/bootstrap.min.js \"></script>\n\n<!-- Custom Theme JavaScript -->\n<script src=\"/js/hux-blog.min.js \"></script>\n\n<!-- Simple Jekyll Search -->\n<script src=\"/js/simple-jekyll-search.min.js\"></script>\n\n<!-- Service Worker -->\n\n<script src=\"/js/snackbar.js \"></script>\n<script src=\"/js/sw-registration.js \"></script>\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n        var d = document, t = 'script',\n            o = d.createElement(t),\n            s = d.getElementsByTagName(t)[0];\n        o.src = u;\n        if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n        s.parentNode.insertBefore(o, s);\n    }\n</script>\n\n<!--\n     Because of the native support for backtick-style fenced code blocks\n     right within the Markdown is landed in Github Pages,\n     From V1.6, There is no need for Highlight.js,\n     so Huxblog drops it officially.\n\n     - https://github.com/blog/2100-github-pages-now-faster-and-simpler-with-jekyll-3-0\n     - https://help.github.com/articles/creating-and-highlighting-code-blocks/\n     - https://github.com/jneen/rouge/wiki/list-of-supported-languages-and-lexers\n-->\n<!--\n    <script>\n        async(\"http://cdn.bootcss.com/highlight.js/8.6/highlight.min.js\", function(){\n            hljs.initHighlightingOnLoad();\n        })\n    </script>\n    <link href=\"http://cdn.bootcss.com/highlight.js/8.6/styles/github.min.css\" rel=\"stylesheet\">\n-->\n\n\n\n\n\n\n\n<!--fastClick.js -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/fastclick/1.0.6/fastclick.min.js\", function () {\n        var $nav = document.querySelector(\"nav\");\n        if ($nav) FastClick.attach($nav);\n    })\n</script>\n\n\n<!-- Google Analytics -->\n\n\n\n<!-- Baidu Tongji -->\n\n\n\n<!-- Side Catalog -->\n\n<script type=\"text/javascript\">\n    function generateCatalog(selector) {\n\n        // interop with multilangual \n        if ('' == 'true') {\n            _containerSelector = 'div.post-container.active'\n        } else {\n            _containerSelector = 'div.post-container'\n        }\n\n        // init\n        var P = $(_containerSelector), a, n, t, l, i, c;\n        a = P.find('h1,h2,h3,h4,h5,h6');\n\n        // clean\n        $(selector).html('')\n\n        // appending\n        a.each(function () {\n            n = $(this).prop('tagName').toLowerCase();\n            i = \"#\" + $(this).prop('id');\n            t = $(this).text();\n            c = $('<a href=\"' + i + '\" rel=\"nofollow\">' + t + '</a>');\n            l = $('<li class=\"' + n + '_nav\"></li>').append(c);\n            $(selector).append(l);\n        });\n        return true;\n    }\n\n    generateCatalog(\".catalog-body\");\n\n    // toggle side catalog\n    $(\".catalog-toggle\").click((function (e) {\n        e.preventDefault();\n        $('.side-catalog').toggleClass(\"fold\")\n    }))\n\n    /*\n     * Doc: https://github.com/davist11/jQuery-One-Page-Nav\n     * Fork by Hux to support padding\n     */\n    async(\"/js/jquery.nav.js\", function () {\n        $('.catalog-body').onePageNav({\n            currentClass: \"active\",\n            changeHash: !1,\n            easing: \"swing\",\n            filter: \"\",\n            scrollSpeed: 700,\n            scrollOffset: 0,\n            scrollThreshold: .2,\n            begin: null,\n            end: null,\n            scrollChange: null,\n            padding: 80\n        });\n    });\n</script>\n\n\n\n<!-- Multi-Lingual -->\n\n\n<!-- Simple Jekyll Search -->\n<script>\n    // https://stackoverflow.com/questions/1912501/unescape-html-entities-in-javascript\n    function htmlDecode(input) {\n        var e = document.createElement('textarea');\n        e.innerHTML = input;\n        // handle case of empty input\n        return e.childNodes.length === 0 ? \"\" : e.childNodes[0].nodeValue;\n    }\n\n    SimpleJekyllSearch({\n        searchInput: document.getElementById('search-input'),\n        resultsContainer: document.getElementById('search-results'),\n        json: '/search.json',\n        searchResultTemplate: '<div class=\"post-preview item\"><a href=\"{url}\"><h2 class=\"post-title\">{title}</h2><h3 class=\"post-subtitle\">{subtitle}</h3><hr></a></div>',\n        noResultsText: 'No results',\n        limit: 50,\n        fuzzy: false,\n        // a hack to get escaped subtitle unescaped. for some reason, \n        // post.subtitle w/o escape filter nuke entire search.\n        templateMiddleware: function (prop, value, template) {\n            if (prop === 'subtitle' || prop === 'title') {\n                if (value.indexOf(\"code\")) {\n                    return htmlDecode(value);\n                } else {\n                    return value;\n                }\n            }\n        }\n    });\n\n    $(document).ready(function () {\n        var $searchPage = $('.search-page');\n        var $searchOpen = $('.search-icon');\n        var $searchClose = $('.search-icon-close');\n        var $searchInput = $('#search-input');\n        var $body = $('body');\n\n        $searchOpen.on('click', function (e) {\n            e.preventDefault();\n            $searchPage.toggleClass('search-active');\n            var prevClasses = $body.attr('class') || '';\n            setTimeout(function () {\n                $body.addClass('no-scroll');\n            }, 400)\n\n            if ($searchPage.hasClass('search-active')) {\n                $searchClose.on('click', function (e) {\n                    e.preventDefault();\n                    $searchPage.removeClass('search-active');\n                    $body.attr('class', prevClasses);  // from closure \n                });\n                $searchInput.focus();\n            }\n        });\n    });\n</script>\n\n\n<!-- Image to hack wechat -->\n<img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\" />\n<!-- Migrate from head to bottom, no longer block render and still work -->\n\n</body>\n\n</html>\n","excerpt":"<h2 id=\"1常规多账号\">1、常规多账号</h2>\n","url":"/2021/10/18/git/","next":{"id":"/2022/01/19/iOS-OpenType","tags":[],"relative_path":"_posts/2022-01-19-iOS-OpenType.md","collection":"posts","name":"2022-01-19-iOS-OpenType.md","url":"/2022/01/19/iOS-OpenType/","title":"iOS应用接收文件打开类型","date":"2022-01-19 00:00:00 +0800","categories":[],"path":"_posts/2022-01-19-iOS-OpenType.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/home-bg-geek.jpg","slug":"iOS-OpenType","ext":".md"},"title":"多账号配置GIT","date":"2021-10-18 00:00:00 +0800","categories":[],"path":"_posts/2021-10-18-git.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/post-bg-2015.jpg","slug":"git","ext":".md"},"title":"iOS 10.x 内存Crash 排查 纪要","date":"2021-09-13 00:00:00 +0800","categories":[],"path":"_posts/2021-09-13-crash.md","draft":false,"layout":"post","subtitle":"This is a subtitle","author":"PaysonChen","header-img":"img/post-bg-ios9-web.jpg","slug":"crash","ext":".md"},{"id":"/2021/06/20/new-post","tags":[],"relative_path":"_posts/2021-06-20-new-post.md","collection":"posts","content":"<h2 id=\"1jenkins迁移目录\">1、Jenkins迁移目录</h2>\n\n<h3 id=\"11-jenkins安装后的目录\">1.1 Jenkins安装后的目录</h3>\n\n<p>Jenkins的安装不再赘述可以参考https://www.jenkins.io/zh/doc/book/installing/，</p>\n\n<p>安装完之后Jenkins的目录是隐藏目录，可以通过命令行显示</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n</pre></td><td class=\"rouge-code\"><pre>defaults write com.apple.finder AppleShowAllFiles <span class=\"nt\">-boolean</span> <span class=\"nb\">true \n</span>killall Finder\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h3 id=\"12-jobs\">1.2 jobs</h3>\n\n<p>jobs目录为Jenkins存储【项目配置】及【构建历史】的文件夹，</p>\n\n<p><img src=\"/img/jenkins_qy/jenkins_catalog.png\" alt=\"img\" /></p>\n\n<p>config.xml为项目配置</p>\n\n<p>builds为构建历史包含</p>\n\n<ul>\n  <li>\n    <p>build.xml</p>\n\n    <p>构建信息包括：actions、queueId、timestamp、startTime、result、duration、charset、keepLog、builtOn、workspace、hudsonVersion、scm、culprits</p>\n  </li>\n  <li>\n    <p>​\tchangelog.xml</p>\n\n    <p>代码提交记录</p>\n\n    <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n</pre></td><td class=\"rouge-code\"><pre>commit 571f1f4e25f8d35234f31a4e5270ab4eea5f7623\ntree 11663eebbb089bc414048ffbf7c91de331d021cc\nparent 0a3d1d8057ba3e33055d8bfafcb25d00f3a5f93b\nauthor xxx &lt;xxx@xxx.com&gt; 2021-06-30 14:27:29 +0800\ncommitter xxx &lt;xxx@xxx.com&gt; 2021-06-30 14:27:29 +0800\n  \n    修复双卡运营商切换不更新\n  \n</pre></td></tr></tbody></table></code></pre></div>    </div>\n  </li>\n  <li>\n    <p>​\tlog</p>\n\n    <p>构建日志，Jenkins构建历史中的控制台输出</p>\n  </li>\n</ul>\n\n<h2 id=\"2迁移项目配置\">2、迁移项目配置</h2>\n\n<h3 id=\"21-手工迁移\">2.1 手工迁移</h3>\n\n<p>手工迁移能完成Jenkins迁移的工作，但是操作反锁且无法保障完整性，在迁移初期果断放弃。</p>\n\n<h3 id=\"22-备份jobs迁移\">2.2 备份Jobs迁移</h3>\n\n<p>步骤1：目标机开启SSH服务</p>\n\n<p>步骤2：源机使用scp命令，将源机需要迁移的项目在Jobs目录下的文件夹远程复制到目标机.jenkins/Jobs目标下</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>scp <span class=\"nt\">-r</span> /Users/chen/.jenkins/jobs/SPM_iOS xxx@xx.xx.xxx.xxx:/Users/xx/.jenkins/jobs/SPM_iOS\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>步骤3：目标机Jenkins 如果配置的Git账号不一样，需要修改Git Credentials</p>\n\n<p>步骤4：目标机需要刷新配置</p>\n\n<p>​\t<img src=\"/img/jenkins_qy/jenkins_mng.png\" alt=\"image-20210811104136231\" /></p>\n\n<p>​\t<img src=\"/img/jenkins_qy/jenkins_reload.png\" alt=\"image-20210811104136231\" /></p>\n\n<p>步骤5：如果有外部脚本调用（sh、Python），需要将相应的脚本也通过scp命令拷贝到目标机相对路径下</p>\n\n<p>步骤6：尝试构建。如果成功忽略下面步骤，如果失败，构建中可能有些环境不一致,比如uglifyjs没有安装</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n</pre></td><td class=\"rouge-code\"><pre>uglifyjs: command not found\nBuild step 'Execute shell' marked build as failure\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>*步骤7：安装缺失的环境(这里缺失uglify，缺失其他的可以自行安装)</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>npm <span class=\"nb\">install </span>uglify-js <span class=\"nt\">-g</span>   \n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>*步骤8：安装完如果还遇到步骤5的失败，在Jenkins配置的shell中添加,刷新当前环境</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>source ~/.bash_profile\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p><img src=\"/img/jenkins_qy/jenkins_shell.png\" alt=\"image-20210811104136231\" /></p>\n\n<h2 id=\"3其他\">3、其他</h2>\n\n<p>最后如无其他后续需求，建议关闭目标机SSH服务</p>\n\n","name":"2021-06-20-new-post.md","previous":{"id":"/2021/03/21/rn___","tags":[],"relative_path":"_posts/2021-03-21-rn___.md","collection":"posts","content":"<p>RN 报如下错误时</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n</pre></td><td class=\"rouge-code\"><pre>\n resolve try the following:\n\n  1. Clear watchman watches: `watchman watch-del-all`.\n\n  2. Delete the `node_modules` folder: `rm -rf node_modules &amp;&amp; npm install`. \n\n 3. Reset Metro Bundler cache: `rm -rf $TMPDIR/react-*` or `npm start -- --reset-cache`. \n\n  4. Remove haste cache: `rm -rf $TMPDIR/haste-map-react-native-packager-*`.\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>有可能因为 RN与react版本不匹配</p>\n\n<p>在执行</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n</pre></td><td class=\"rouge-code\"><pre>\nyarn add react-native\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>查看warning</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n</pre></td><td class=\"rouge-code\"><pre>\nwarning \"react-native &gt; use-subscription@1.5.0\" has unmet peer dependency \"react@^17.0.0\".\n\nwarning \" &gt; react-native@0.63.3\" has unmet peer dependency \"react@16.13.1\".\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>需要添加react依赖版本</p>\n","name":"2021-03-21-rn___.md","previous":null,"output":"<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"google-site-verification\" content=\"xBT4GhYoi5qRD5tr338pgPM5OWHHIDR6mNg1a3euekI\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, viewport-fit=cover\">\n    <meta name=\"description\" content=\"与你一起发现更大的世界。\">\n    <meta name=\"keywords\"  content=\"PaysonChen,iOS,流媒体\">\n    <meta name=\"theme-color\" content=\"#000000\">\n    \n    <!-- Open Graph -->\n    <meta property=\"og:title\" content=\"RN 采坑 - PaysonChen的博客 | PaysonChen Blog\">\n    \n    <meta property=\"og:type\" content=\"article\">\n    <meta property=\"og:description\" content=\"RN 报如下错误时\n\">\n    \n    \n    <meta property=\"article:published_time\" content=\"2021-03-21T00:00:00Z\">\n    \n    \n    \n    \n    <meta property=\"og:image\" content=\"http://localhost:4000\">\n    <meta property=\"og:url\" content=\"http://localhost:4000/2021/03/21/rn___/\">\n    <meta property=\"og:site_name\" content=\"PaysonChen的博客 | PaysonChen Blog\">\n    \n    <title>RN 采坑 - PaysonChen的博客 | PaysonChen Blog</title>\n\n    <!-- Web App Manifest -->\n    <link rel=\"manifest\" href=\"/pwa/manifest.json\">\n\n    <!-- Favicon -->\n    <link rel=\"shortcut icon\" href=\"/img/favicon.ico\">\n    \n    <!-- Canonical URL -->\n    <link rel=\"canonical\" href=\"http://localhost:4000/2021/03/21/rn___/\">\n\n    <!-- Bootstrap Core CSS -->\n    <link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\">\n\n    <!-- Custom CSS -->\n    <link rel=\"stylesheet\" href=\"/css/hux-blog.min.css\">\n\n    <!-- Custom Fonts -->\n    <!-- <link href=\"http://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\"> -->\n    <!-- Hux change font-awesome CDN to qiniu -->\n    <link href=\"//cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\">\n\n\n    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->\n    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->\n    <!--[if lt IE 9]>\n        <script src=\"https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js\"></script>\n        <script src=\"https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js\"></script>\n    <![endif]-->\n\n    <!-- ga & ba script hoook -->\n    <script></script>\n</head>\n\n\n<!-- hack iOS CSS :active style -->\n<body ontouchstart=\"\">\n\n    <!-- Navigation -->\n\n    <nav class=\"navbar navbar-default navbar-custom navbar-fixed-top\">\n        \n        <div class=\"container-fluid\">\n            <!-- Brand and toggle get grouped for better mobile display -->\n            <div class=\"navbar-header page-scroll\">\n                <button type=\"button\" class=\"navbar-toggle\">\n                    <span class=\"sr-only\">Toggle navigation</span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                </button>\n                <a class=\"navbar-brand\" href=\"/\">PaysonChen Blog</a>\n            </div>\n\n            <!-- Collect the nav links, forms, and other content for toggling -->\n            <div id=\"huxblog_navbar\">\n                <div class=\"navbar-collapse\">\n                    <ul class=\"nav navbar-nav navbar-right\">\n                        <li>\n                            <a href=\"/\">Home</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        <li>\n                            <a href=\"/about/\">About</a>\n                        </li>\n                        \n                        \n                        \n                        <li>\n                            <a href=\"/archive/\">Archive</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        <li class=\"search-icon\">\n                            <a href=\"javascript:void(0)\">\n                                <i class=\"fa fa-search\"></i>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n            <!-- /.navbar-collapse -->\n        </div>\n        <!-- /.container -->\n    </nav>\n\n    <script>\n        // Drop Bootstarp low-performance Navbar\n        // Use customize navbar with high-quality material design animation\n        // in high-perf jank-free CSS3 implementation\n        var $body = document.body;\n        var $toggle = document.querySelector('.navbar-toggle');\n        var $navbar = document.querySelector('#huxblog_navbar');\n        var $collapse = document.querySelector('.navbar-collapse');\n\n        var __HuxNav__ = {\n            close: function () {\n                $navbar.className = \" \";\n                // wait until animation end.\n                setTimeout(function () {\n                    // prevent frequently toggle\n                    if ($navbar.className.indexOf('in') < 0) {\n                        $collapse.style.height = \"0px\"\n                    }\n                }, 400)\n            },\n            open: function () {\n                $collapse.style.height = \"auto\"\n                $navbar.className += \" in\";\n            }\n        }\n\n        // Bind Event\n        $toggle.addEventListener('click', function (e) {\n            if ($navbar.className.indexOf('in') > 0) {\n                __HuxNav__.close()\n            } else {\n                __HuxNav__.open()\n            }\n        })\n\n        /**\n         * Since Fastclick is used to delegate 'touchstart' globally\n         * to hack 300ms delay in iOS by performing a fake 'click',\n         * Using 'e.stopPropagation' to stop 'touchstart' event from \n         * $toggle/$collapse will break global delegation.\n         * \n         * Instead, we use a 'e.target' filter to prevent handler\n         * added to document close HuxNav.  \n         *\n         * Also, we use 'click' instead of 'touchstart' as compromise\n         */\n        document.addEventListener('click', function (e) {\n            if (e.target == $toggle) return;\n            if (e.target.className == 'icon-bar') return;\n            __HuxNav__.close();\n        })\n    </script>\n    <!-- Search -->\n<div class=\"search-page\">\n  <div class=\"search-icon-close-container\">\n    <span class=\"search-icon-close\">\n      <i class=\"fa fa-chevron-down\"></i>\n    </span>\n  </div>\n  <div class=\"search-main container\">\n    <div class=\"row\">\n      <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n        <form></form>\n        <input type=\"text\" id=\"search-input\" placeholder=\"$ grep...\">\n        </form>\n        <div id=\"search-results\" class=\"mini-post-list\"></div>\n      </div>\n    </div>\n  </div>\n</div>\n\n    <!-- Image to hack wechat -->\n<!-- <img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\"> -->\n<!-- <img src=\"/img/home-bg.jpg\" width=\"0\" height=\"0\"> -->\n\n<!-- Post Header -->\n\n\n\n<style type=\"text/css\">\n    header.intro-header{\n        position: relative;\n        background-image: url('/img/home-bg.jpg');\n        background: ;\n    }\n\n    \n</style>\n\n<header class=\"intro-header\" >\n\n    <div class=\"header-mask\"></div>\n    \n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <div class=\"post-heading\">\n                    <div class=\"tags\">\n                        \n                    </div>\n                    <h1>RN 采坑</h1>\n                    \n                    <h2 class=\"subheading\"></h2>\n                    <span class=\"meta\">Posted by PaysonChen Blog on March 21, 2021</span>\n                </div>\n            </div>\n        </div>\n    </div>\n</header>\n\n\n\n\n\n\n<!-- Post Content -->\n<article>\n    <div class=\"container\">\n        <div class=\"row\">\n\n    <!-- Post Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                post-container\">\n\n                <!-- Multi-Lingual -->\n                \n\n\t\t\t\t<p>RN 报如下错误时</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n</pre></td><td class=\"rouge-code\"><pre>\n resolve try the following:\n\n  1. Clear watchman watches: `watchman watch-del-all`.\n\n  2. Delete the `node_modules` folder: `rm -rf node_modules &amp;&amp; npm install`. \n\n 3. Reset Metro Bundler cache: `rm -rf $TMPDIR/react-*` or `npm start -- --reset-cache`. \n\n  4. Remove haste cache: `rm -rf $TMPDIR/haste-map-react-native-packager-*`.\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>有可能因为 RN与react版本不匹配</p>\n\n<p>在执行</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n</pre></td><td class=\"rouge-code\"><pre>\nyarn add react-native\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>查看warning</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n</pre></td><td class=\"rouge-code\"><pre>\nwarning \"react-native &gt; use-subscription@1.5.0\" has unmet peer dependency \"react@^17.0.0\".\n\nwarning \" &gt; react-native@0.63.3\" has unmet peer dependency \"react@16.13.1\".\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>需要添加react依赖版本</p>\n\n\n                <hr style=\"visibility: hidden;\">\n                <ul class=\"pager\">\n                    \n                    \n                    <li class=\"next\">\n                        <a href=\"/2021/06/20/new-post/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Jenkins迁移\">\n                        Next<br>\n                        <span>Jenkins迁移</span>\n                        </a>\n                    </li>\n                    \n                </ul>\n                <hr style=\"visibility: hidden;\">\n\n                \n                <!-- disqus 评论框 start -->\n                <div class=\"comment\">\n                    <div id=\"disqus_thread\" class=\"disqus-thread\"></div>\n                </div>\n                <!-- disqus 评论框 end -->\n                \n\n                \n            </div>  \n\n    <!-- Side Catalog Container -->\n        \n            <div class=\"\n                col-lg-2 col-lg-offset-0\n                visible-lg-block\n                sidebar-container\n                catalog-container\">\n                <div class=\"side-catalog\">\n                    <hr class=\"hidden-sm hidden-xs\">\n                    <h5>\n                        <a class=\"catalog-toggle\" href=\"#\">CATALOG</a>\n                    </h5>\n                    <ul class=\"catalog-body\"></ul>\n                </div>\n            </div>\n        \n\n    <!-- Sidebar Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                sidebar-container\">\n\n                <!-- Featured Tags -->\n                \n\n\n<section>\n    \n        <hr class=\"hidden-sm hidden-xs\">\n    \n    <h5><a href=\"/archive/\">FEATURED TAGS</a></h5>\n    <div class=\"tags\">\n        \n        \n        \n        \n        \n    </div>\n</section>\n\n\n                <!-- Friends Blog -->\n                \n            </div>\n        </div>\n    </div>\n</article>\n\n<!-- add support for mathjax by voleking-->\n\n\n\n\n\n\n<!-- disqus 公共JS代码 start (一个网页只需插入一次) -->\n<script type=\"text/javascript\">\n    /* * * CONFIGURATION VARIABLES * * */\n    var disqus_shortname = \"Cyp\";\n    var disqus_identifier = \"/2021/03/21/rn___\";\n    var disqus_url = \"http://localhost:4000/2021/03/21/rn___/\";\n\n    (function() {\n        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;\n        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';\n        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);\n    })();\n</script>\n<!-- disqus 公共JS代码 end -->\n\n\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n      var d = document, t = 'script',\n          o = d.createElement(t),\n          s = d.getElementsByTagName(t)[0];\n      o.src = u;\n      if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n      s.parentNode.insertBefore(o, s);\n    }\n</script>\n<!-- anchor-js, Doc:http://bryanbraun.github.io/anchorjs/ -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/anchor-js/1.1.1/anchor.min.js\",function(){\n        anchors.options = {\n          visible: 'hover',\n          placement: 'right',\n          // icon: '#'\n        };\n        anchors.add().remove('.intro-header h1').remove('.subheading').remove('.sidebar-container h5');\n    })\n</script>\n<style>\n    /* place left on bigger screen */\n    @media all and (min-width: 800px) {\n        .anchorjs-link{\n            position: absolute;\n            left: -0.75em;\n            font-size: 1.1em;\n            margin-top : -0.1em;\n        }\n    }\n</style>\n\n\n\n    <!-- Footer -->\n<footer>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <!-- SNS Link -->\n                \n\n\n<ul class=\"list-inline text-center\">\n\n\n  \n  \n  \n  \n  \n  \n  \n</ul>\n\n                <p class=\"copyright text-muted\">\n                    Copyright &copy; PaysonChen Blog 2024\n                    <br>\n                    <!-- Powered by <a href=\"http://huangxuan.me\">Hux Blog</a> | -->\n                 <!--    <iframe style=\"margin-left: 2px; margin-bottom:-5px;\" frameborder=\"0\" scrolling=\"0\" width=\"100px\"\n                        height=\"20px\"\n                        src=\"https://ghbtns.com/github-btn.html?user=huxpro&repo=huxpro.github.io&type=star&count=true\">\n                    </iframe> -->\n                </p>\n            </div>\n        </div>\n    </div>\n</footer>\n\n<!-- jQuery -->\n<script src=\"/js/jquery.min.js \"></script>\n\n<!-- Bootstrap Core JavaScript -->\n<!-- Currently, only navbar scroll-down effect at desktop still depends on this -->\n<script src=\"/js/bootstrap.min.js \"></script>\n\n<!-- Custom Theme JavaScript -->\n<script src=\"/js/hux-blog.min.js \"></script>\n\n<!-- Simple Jekyll Search -->\n<script src=\"/js/simple-jekyll-search.min.js\"></script>\n\n<!-- Service Worker -->\n\n<script src=\"/js/snackbar.js \"></script>\n<script src=\"/js/sw-registration.js \"></script>\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n        var d = document, t = 'script',\n            o = d.createElement(t),\n            s = d.getElementsByTagName(t)[0];\n        o.src = u;\n        if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n        s.parentNode.insertBefore(o, s);\n    }\n</script>\n\n<!--\n     Because of the native support for backtick-style fenced code blocks\n     right within the Markdown is landed in Github Pages,\n     From V1.6, There is no need for Highlight.js,\n     so Huxblog drops it officially.\n\n     - https://github.com/blog/2100-github-pages-now-faster-and-simpler-with-jekyll-3-0\n     - https://help.github.com/articles/creating-and-highlighting-code-blocks/\n     - https://github.com/jneen/rouge/wiki/list-of-supported-languages-and-lexers\n-->\n<!--\n    <script>\n        async(\"http://cdn.bootcss.com/highlight.js/8.6/highlight.min.js\", function(){\n            hljs.initHighlightingOnLoad();\n        })\n    </script>\n    <link href=\"http://cdn.bootcss.com/highlight.js/8.6/styles/github.min.css\" rel=\"stylesheet\">\n-->\n\n\n\n\n\n\n\n<!--fastClick.js -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/fastclick/1.0.6/fastclick.min.js\", function () {\n        var $nav = document.querySelector(\"nav\");\n        if ($nav) FastClick.attach($nav);\n    })\n</script>\n\n\n<!-- Google Analytics -->\n\n\n\n<!-- Baidu Tongji -->\n\n\n\n<!-- Side Catalog -->\n\n<script type=\"text/javascript\">\n    function generateCatalog(selector) {\n\n        // interop with multilangual \n        if ('' == 'true') {\n            _containerSelector = 'div.post-container.active'\n        } else {\n            _containerSelector = 'div.post-container'\n        }\n\n        // init\n        var P = $(_containerSelector), a, n, t, l, i, c;\n        a = P.find('h1,h2,h3,h4,h5,h6');\n\n        // clean\n        $(selector).html('')\n\n        // appending\n        a.each(function () {\n            n = $(this).prop('tagName').toLowerCase();\n            i = \"#\" + $(this).prop('id');\n            t = $(this).text();\n            c = $('<a href=\"' + i + '\" rel=\"nofollow\">' + t + '</a>');\n            l = $('<li class=\"' + n + '_nav\"></li>').append(c);\n            $(selector).append(l);\n        });\n        return true;\n    }\n\n    generateCatalog(\".catalog-body\");\n\n    // toggle side catalog\n    $(\".catalog-toggle\").click((function (e) {\n        e.preventDefault();\n        $('.side-catalog').toggleClass(\"fold\")\n    }))\n\n    /*\n     * Doc: https://github.com/davist11/jQuery-One-Page-Nav\n     * Fork by Hux to support padding\n     */\n    async(\"/js/jquery.nav.js\", function () {\n        $('.catalog-body').onePageNav({\n            currentClass: \"active\",\n            changeHash: !1,\n            easing: \"swing\",\n            filter: \"\",\n            scrollSpeed: 700,\n            scrollOffset: 0,\n            scrollThreshold: .2,\n            begin: null,\n            end: null,\n            scrollChange: null,\n            padding: 80\n        });\n    });\n</script>\n\n\n\n<!-- Multi-Lingual -->\n\n\n<!-- Simple Jekyll Search -->\n<script>\n    // https://stackoverflow.com/questions/1912501/unescape-html-entities-in-javascript\n    function htmlDecode(input) {\n        var e = document.createElement('textarea');\n        e.innerHTML = input;\n        // handle case of empty input\n        return e.childNodes.length === 0 ? \"\" : e.childNodes[0].nodeValue;\n    }\n\n    SimpleJekyllSearch({\n        searchInput: document.getElementById('search-input'),\n        resultsContainer: document.getElementById('search-results'),\n        json: '/search.json',\n        searchResultTemplate: '<div class=\"post-preview item\"><a href=\"{url}\"><h2 class=\"post-title\">{title}</h2><h3 class=\"post-subtitle\">{subtitle}</h3><hr></a></div>',\n        noResultsText: 'No results',\n        limit: 50,\n        fuzzy: false,\n        // a hack to get escaped subtitle unescaped. for some reason, \n        // post.subtitle w/o escape filter nuke entire search.\n        templateMiddleware: function (prop, value, template) {\n            if (prop === 'subtitle' || prop === 'title') {\n                if (value.indexOf(\"code\")) {\n                    return htmlDecode(value);\n                } else {\n                    return value;\n                }\n            }\n        }\n    });\n\n    $(document).ready(function () {\n        var $searchPage = $('.search-page');\n        var $searchOpen = $('.search-icon');\n        var $searchClose = $('.search-icon-close');\n        var $searchInput = $('#search-input');\n        var $body = $('body');\n\n        $searchOpen.on('click', function (e) {\n            e.preventDefault();\n            $searchPage.toggleClass('search-active');\n            var prevClasses = $body.attr('class') || '';\n            setTimeout(function () {\n                $body.addClass('no-scroll');\n            }, 400)\n\n            if ($searchPage.hasClass('search-active')) {\n                $searchClose.on('click', function (e) {\n                    e.preventDefault();\n                    $searchPage.removeClass('search-active');\n                    $body.attr('class', prevClasses);  // from closure \n                });\n                $searchInput.focus();\n            }\n        });\n    });\n</script>\n\n\n<!-- Image to hack wechat -->\n<img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\" />\n<!-- Migrate from head to bottom, no longer block render and still work -->\n\n</body>\n\n</html>\n","excerpt":"<p>RN 报如下错误时</p>\n","url":"/2021/03/21/rn___/","next":{"id":"/2021/06/20/new-post","tags":[],"relative_path":"_posts/2021-06-20-new-post.md","collection":"posts","name":"2021-06-20-new-post.md","url":"/2021/06/20/new-post/","title":"Jenkins迁移","date":"2021-06-20 00:00:00 +0800","categories":[],"path":"_posts/2021-06-20-new-post.md","draft":false,"layout":"post","subtitle":"This is a subtitle","author":"PaysonChen","header-img":"img/post-bg-2015.jpg","slug":"new-post","ext":".md"},"title":"RN 采坑","date":"2021-03-21 00:00:00 +0800","categories":[],"path":"_posts/2021-03-21-rn___.md","draft":false,"layout":"post","slug":"rn___","ext":".md"},"output":"<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"google-site-verification\" content=\"xBT4GhYoi5qRD5tr338pgPM5OWHHIDR6mNg1a3euekI\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, viewport-fit=cover\">\n    <meta name=\"description\" content=\"与你一起发现更大的世界。\">\n    <meta name=\"keywords\"  content=\"PaysonChen,iOS,流媒体\">\n    <meta name=\"theme-color\" content=\"#000000\">\n    \n    <!-- Open Graph -->\n    <meta property=\"og:title\" content=\"Jenkins迁移 - PaysonChen的博客 | PaysonChen Blog\">\n    \n    <meta property=\"og:type\" content=\"article\">\n    <meta property=\"og:description\" content=\"1、Jenkins迁移目录\n\">\n    \n    \n    <meta property=\"article:published_time\" content=\"2021-06-20T00:00:00Z\">\n    \n    \n    <meta property=\"article:author\" content=\"PaysonChen\">\n    \n    \n    \n    <meta property=\"og:image\" content=\"http://localhost:4000\">\n    <meta property=\"og:url\" content=\"http://localhost:4000/2021/06/20/new-post/\">\n    <meta property=\"og:site_name\" content=\"PaysonChen的博客 | PaysonChen Blog\">\n    \n    <title>Jenkins迁移 - PaysonChen的博客 | PaysonChen Blog</title>\n\n    <!-- Web App Manifest -->\n    <link rel=\"manifest\" href=\"/pwa/manifest.json\">\n\n    <!-- Favicon -->\n    <link rel=\"shortcut icon\" href=\"/img/favicon.ico\">\n    \n    <!-- Canonical URL -->\n    <link rel=\"canonical\" href=\"http://localhost:4000/2021/06/20/new-post/\">\n\n    <!-- Bootstrap Core CSS -->\n    <link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\">\n\n    <!-- Custom CSS -->\n    <link rel=\"stylesheet\" href=\"/css/hux-blog.min.css\">\n\n    <!-- Custom Fonts -->\n    <!-- <link href=\"http://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\"> -->\n    <!-- Hux change font-awesome CDN to qiniu -->\n    <link href=\"//cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\">\n\n\n    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->\n    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->\n    <!--[if lt IE 9]>\n        <script src=\"https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js\"></script>\n        <script src=\"https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js\"></script>\n    <![endif]-->\n\n    <!-- ga & ba script hoook -->\n    <script></script>\n</head>\n\n\n<!-- hack iOS CSS :active style -->\n<body ontouchstart=\"\">\n\n    <!-- Navigation -->\n\n    <nav class=\"navbar navbar-default navbar-custom navbar-fixed-top\">\n        \n        <div class=\"container-fluid\">\n            <!-- Brand and toggle get grouped for better mobile display -->\n            <div class=\"navbar-header page-scroll\">\n                <button type=\"button\" class=\"navbar-toggle\">\n                    <span class=\"sr-only\">Toggle navigation</span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                </button>\n                <a class=\"navbar-brand\" href=\"/\">PaysonChen Blog</a>\n            </div>\n\n            <!-- Collect the nav links, forms, and other content for toggling -->\n            <div id=\"huxblog_navbar\">\n                <div class=\"navbar-collapse\">\n                    <ul class=\"nav navbar-nav navbar-right\">\n                        <li>\n                            <a href=\"/\">Home</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        <li>\n                            <a href=\"/about/\">About</a>\n                        </li>\n                        \n                        \n                        \n                        <li>\n                            <a href=\"/archive/\">Archive</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        <li class=\"search-icon\">\n                            <a href=\"javascript:void(0)\">\n                                <i class=\"fa fa-search\"></i>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n            <!-- /.navbar-collapse -->\n        </div>\n        <!-- /.container -->\n    </nav>\n\n    <script>\n        // Drop Bootstarp low-performance Navbar\n        // Use customize navbar with high-quality material design animation\n        // in high-perf jank-free CSS3 implementation\n        var $body = document.body;\n        var $toggle = document.querySelector('.navbar-toggle');\n        var $navbar = document.querySelector('#huxblog_navbar');\n        var $collapse = document.querySelector('.navbar-collapse');\n\n        var __HuxNav__ = {\n            close: function () {\n                $navbar.className = \" \";\n                // wait until animation end.\n                setTimeout(function () {\n                    // prevent frequently toggle\n                    if ($navbar.className.indexOf('in') < 0) {\n                        $collapse.style.height = \"0px\"\n                    }\n                }, 400)\n            },\n            open: function () {\n                $collapse.style.height = \"auto\"\n                $navbar.className += \" in\";\n            }\n        }\n\n        // Bind Event\n        $toggle.addEventListener('click', function (e) {\n            if ($navbar.className.indexOf('in') > 0) {\n                __HuxNav__.close()\n            } else {\n                __HuxNav__.open()\n            }\n        })\n\n        /**\n         * Since Fastclick is used to delegate 'touchstart' globally\n         * to hack 300ms delay in iOS by performing a fake 'click',\n         * Using 'e.stopPropagation' to stop 'touchstart' event from \n         * $toggle/$collapse will break global delegation.\n         * \n         * Instead, we use a 'e.target' filter to prevent handler\n         * added to document close HuxNav.  \n         *\n         * Also, we use 'click' instead of 'touchstart' as compromise\n         */\n        document.addEventListener('click', function (e) {\n            if (e.target == $toggle) return;\n            if (e.target.className == 'icon-bar') return;\n            __HuxNav__.close();\n        })\n    </script>\n    <!-- Search -->\n<div class=\"search-page\">\n  <div class=\"search-icon-close-container\">\n    <span class=\"search-icon-close\">\n      <i class=\"fa fa-chevron-down\"></i>\n    </span>\n  </div>\n  <div class=\"search-main container\">\n    <div class=\"row\">\n      <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n        <form></form>\n        <input type=\"text\" id=\"search-input\" placeholder=\"$ grep...\">\n        </form>\n        <div id=\"search-results\" class=\"mini-post-list\"></div>\n      </div>\n    </div>\n  </div>\n</div>\n\n    <!-- Image to hack wechat -->\n<!-- <img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\"> -->\n<!-- <img src=\"/img/post-bg-2015.jpg\" width=\"0\" height=\"0\"> -->\n\n<!-- Post Header -->\n\n\n\n<style type=\"text/css\">\n    header.intro-header{\n        position: relative;\n        background-image: url('/img/post-bg-2015.jpg');\n        background: ;\n    }\n\n    \n</style>\n\n<header class=\"intro-header\" >\n\n    <div class=\"header-mask\"></div>\n    \n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <div class=\"post-heading\">\n                    <div class=\"tags\">\n                        \n                    </div>\n                    <h1>Jenkins迁移</h1>\n                    \n                    <h2 class=\"subheading\">This is a subtitle</h2>\n                    <span class=\"meta\">Posted by PaysonChen on June 20, 2021</span>\n                </div>\n            </div>\n        </div>\n    </div>\n</header>\n\n\n\n\n\n\n<!-- Post Content -->\n<article>\n    <div class=\"container\">\n        <div class=\"row\">\n\n    <!-- Post Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                post-container\">\n\n                <!-- Multi-Lingual -->\n                \n\n\t\t\t\t<h2 id=\"1jenkins迁移目录\">1、Jenkins迁移目录</h2>\n\n<h3 id=\"11-jenkins安装后的目录\">1.1 Jenkins安装后的目录</h3>\n\n<p>Jenkins的安装不再赘述可以参考https://www.jenkins.io/zh/doc/book/installing/，</p>\n\n<p>安装完之后Jenkins的目录是隐藏目录，可以通过命令行显示</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n</pre></td><td class=\"rouge-code\"><pre>defaults write com.apple.finder AppleShowAllFiles <span class=\"nt\">-boolean</span> <span class=\"nb\">true \n</span>killall Finder\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h3 id=\"12-jobs\">1.2 jobs</h3>\n\n<p>jobs目录为Jenkins存储【项目配置】及【构建历史】的文件夹，</p>\n\n<p><img src=\"/img/jenkins_qy/jenkins_catalog.png\" alt=\"img\" /></p>\n\n<p>config.xml为项目配置</p>\n\n<p>builds为构建历史包含</p>\n\n<ul>\n  <li>\n    <p>build.xml</p>\n\n    <p>构建信息包括：actions、queueId、timestamp、startTime、result、duration、charset、keepLog、builtOn、workspace、hudsonVersion、scm、culprits</p>\n  </li>\n  <li>\n    <p>​\tchangelog.xml</p>\n\n    <p>代码提交记录</p>\n\n    <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n</pre></td><td class=\"rouge-code\"><pre>commit 571f1f4e25f8d35234f31a4e5270ab4eea5f7623\ntree 11663eebbb089bc414048ffbf7c91de331d021cc\nparent 0a3d1d8057ba3e33055d8bfafcb25d00f3a5f93b\nauthor xxx &lt;xxx@xxx.com&gt; 2021-06-30 14:27:29 +0800\ncommitter xxx &lt;xxx@xxx.com&gt; 2021-06-30 14:27:29 +0800\n  \n    修复双卡运营商切换不更新\n  \n</pre></td></tr></tbody></table></code></pre></div>    </div>\n  </li>\n  <li>\n    <p>​\tlog</p>\n\n    <p>构建日志，Jenkins构建历史中的控制台输出</p>\n  </li>\n</ul>\n\n<h2 id=\"2迁移项目配置\">2、迁移项目配置</h2>\n\n<h3 id=\"21-手工迁移\">2.1 手工迁移</h3>\n\n<p>手工迁移能完成Jenkins迁移的工作，但是操作反锁且无法保障完整性，在迁移初期果断放弃。</p>\n\n<h3 id=\"22-备份jobs迁移\">2.2 备份Jobs迁移</h3>\n\n<p>步骤1：目标机开启SSH服务</p>\n\n<p>步骤2：源机使用scp命令，将源机需要迁移的项目在Jobs目录下的文件夹远程复制到目标机.jenkins/Jobs目标下</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>scp <span class=\"nt\">-r</span> /Users/chen/.jenkins/jobs/SPM_iOS xxx@xx.xx.xxx.xxx:/Users/xx/.jenkins/jobs/SPM_iOS\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>步骤3：目标机Jenkins 如果配置的Git账号不一样，需要修改Git Credentials</p>\n\n<p>步骤4：目标机需要刷新配置</p>\n\n<p>​\t<img src=\"/img/jenkins_qy/jenkins_mng.png\" alt=\"image-20210811104136231\" /></p>\n\n<p>​\t<img src=\"/img/jenkins_qy/jenkins_reload.png\" alt=\"image-20210811104136231\" /></p>\n\n<p>步骤5：如果有外部脚本调用（sh、Python），需要将相应的脚本也通过scp命令拷贝到目标机相对路径下</p>\n\n<p>步骤6：尝试构建。如果成功忽略下面步骤，如果失败，构建中可能有些环境不一致,比如uglifyjs没有安装</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n</pre></td><td class=\"rouge-code\"><pre>uglifyjs: command not found\nBuild step 'Execute shell' marked build as failure\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>*步骤7：安装缺失的环境(这里缺失uglify，缺失其他的可以自行安装)</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>npm <span class=\"nb\">install </span>uglify-js <span class=\"nt\">-g</span>   \n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>*步骤8：安装完如果还遇到步骤5的失败，在Jenkins配置的shell中添加,刷新当前环境</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>source ~/.bash_profile\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p><img src=\"/img/jenkins_qy/jenkins_shell.png\" alt=\"image-20210811104136231\" /></p>\n\n<h2 id=\"3其他\">3、其他</h2>\n\n<p>最后如无其他后续需求，建议关闭目标机SSH服务</p>\n\n\n\n                <hr style=\"visibility: hidden;\">\n                <ul class=\"pager\">\n                    \n                    <li class=\"previous\">\n                        <a href=\"/2021/03/21/rn___/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"RN 采坑\">\n                        Previous<br>\n                        <span>RN 采坑</span>\n                        </a>\n                    </li>\n                    \n                    \n                    <li class=\"next\">\n                        <a href=\"/2021/09/13/crash/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"iOS 10.x 内存Crash 排查 纪要\">\n                        Next<br>\n                        <span>iOS 10.x 内存Crash 排查 纪要</span>\n                        </a>\n                    </li>\n                    \n                </ul>\n                <hr style=\"visibility: hidden;\">\n\n                \n                <!-- disqus 评论框 start -->\n                <div class=\"comment\">\n                    <div id=\"disqus_thread\" class=\"disqus-thread\"></div>\n                </div>\n                <!-- disqus 评论框 end -->\n                \n\n                \n            </div>  \n\n    <!-- Side Catalog Container -->\n        \n            <div class=\"\n                col-lg-2 col-lg-offset-0\n                visible-lg-block\n                sidebar-container\n                catalog-container\">\n                <div class=\"side-catalog\">\n                    <hr class=\"hidden-sm hidden-xs\">\n                    <h5>\n                        <a class=\"catalog-toggle\" href=\"#\">CATALOG</a>\n                    </h5>\n                    <ul class=\"catalog-body\"></ul>\n                </div>\n            </div>\n        \n\n    <!-- Sidebar Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                sidebar-container\">\n\n                <!-- Featured Tags -->\n                \n\n\n<section>\n    \n        <hr class=\"hidden-sm hidden-xs\">\n    \n    <h5><a href=\"/archive/\">FEATURED TAGS</a></h5>\n    <div class=\"tags\">\n        \n        \n        \n        \n        \n    </div>\n</section>\n\n\n                <!-- Friends Blog -->\n                \n            </div>\n        </div>\n    </div>\n</article>\n\n<!-- add support for mathjax by voleking-->\n\n\n\n\n\n\n<!-- disqus 公共JS代码 start (一个网页只需插入一次) -->\n<script type=\"text/javascript\">\n    /* * * CONFIGURATION VARIABLES * * */\n    var disqus_shortname = \"Cyp\";\n    var disqus_identifier = \"/2021/06/20/new-post\";\n    var disqus_url = \"http://localhost:4000/2021/06/20/new-post/\";\n\n    (function() {\n        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;\n        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';\n        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);\n    })();\n</script>\n<!-- disqus 公共JS代码 end -->\n\n\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n      var d = document, t = 'script',\n          o = d.createElement(t),\n          s = d.getElementsByTagName(t)[0];\n      o.src = u;\n      if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n      s.parentNode.insertBefore(o, s);\n    }\n</script>\n<!-- anchor-js, Doc:http://bryanbraun.github.io/anchorjs/ -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/anchor-js/1.1.1/anchor.min.js\",function(){\n        anchors.options = {\n          visible: 'hover',\n          placement: 'right',\n          // icon: '#'\n        };\n        anchors.add().remove('.intro-header h1').remove('.subheading').remove('.sidebar-container h5');\n    })\n</script>\n<style>\n    /* place left on bigger screen */\n    @media all and (min-width: 800px) {\n        .anchorjs-link{\n            position: absolute;\n            left: -0.75em;\n            font-size: 1.1em;\n            margin-top : -0.1em;\n        }\n    }\n</style>\n\n\n\n    <!-- Footer -->\n<footer>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <!-- SNS Link -->\n                \n\n\n<ul class=\"list-inline text-center\">\n\n\n  \n  \n  \n  \n  \n  \n  \n</ul>\n\n                <p class=\"copyright text-muted\">\n                    Copyright &copy; PaysonChen Blog 2024\n                    <br>\n                    <!-- Powered by <a href=\"http://huangxuan.me\">Hux Blog</a> | -->\n                 <!--    <iframe style=\"margin-left: 2px; margin-bottom:-5px;\" frameborder=\"0\" scrolling=\"0\" width=\"100px\"\n                        height=\"20px\"\n                        src=\"https://ghbtns.com/github-btn.html?user=huxpro&repo=huxpro.github.io&type=star&count=true\">\n                    </iframe> -->\n                </p>\n            </div>\n        </div>\n    </div>\n</footer>\n\n<!-- jQuery -->\n<script src=\"/js/jquery.min.js \"></script>\n\n<!-- Bootstrap Core JavaScript -->\n<!-- Currently, only navbar scroll-down effect at desktop still depends on this -->\n<script src=\"/js/bootstrap.min.js \"></script>\n\n<!-- Custom Theme JavaScript -->\n<script src=\"/js/hux-blog.min.js \"></script>\n\n<!-- Simple Jekyll Search -->\n<script src=\"/js/simple-jekyll-search.min.js\"></script>\n\n<!-- Service Worker -->\n\n<script src=\"/js/snackbar.js \"></script>\n<script src=\"/js/sw-registration.js \"></script>\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n        var d = document, t = 'script',\n            o = d.createElement(t),\n            s = d.getElementsByTagName(t)[0];\n        o.src = u;\n        if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n        s.parentNode.insertBefore(o, s);\n    }\n</script>\n\n<!--\n     Because of the native support for backtick-style fenced code blocks\n     right within the Markdown is landed in Github Pages,\n     From V1.6, There is no need for Highlight.js,\n     so Huxblog drops it officially.\n\n     - https://github.com/blog/2100-github-pages-now-faster-and-simpler-with-jekyll-3-0\n     - https://help.github.com/articles/creating-and-highlighting-code-blocks/\n     - https://github.com/jneen/rouge/wiki/list-of-supported-languages-and-lexers\n-->\n<!--\n    <script>\n        async(\"http://cdn.bootcss.com/highlight.js/8.6/highlight.min.js\", function(){\n            hljs.initHighlightingOnLoad();\n        })\n    </script>\n    <link href=\"http://cdn.bootcss.com/highlight.js/8.6/styles/github.min.css\" rel=\"stylesheet\">\n-->\n\n\n\n\n\n\n\n<!--fastClick.js -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/fastclick/1.0.6/fastclick.min.js\", function () {\n        var $nav = document.querySelector(\"nav\");\n        if ($nav) FastClick.attach($nav);\n    })\n</script>\n\n\n<!-- Google Analytics -->\n\n\n\n<!-- Baidu Tongji -->\n\n\n\n<!-- Side Catalog -->\n\n<script type=\"text/javascript\">\n    function generateCatalog(selector) {\n\n        // interop with multilangual \n        if ('' == 'true') {\n            _containerSelector = 'div.post-container.active'\n        } else {\n            _containerSelector = 'div.post-container'\n        }\n\n        // init\n        var P = $(_containerSelector), a, n, t, l, i, c;\n        a = P.find('h1,h2,h3,h4,h5,h6');\n\n        // clean\n        $(selector).html('')\n\n        // appending\n        a.each(function () {\n            n = $(this).prop('tagName').toLowerCase();\n            i = \"#\" + $(this).prop('id');\n            t = $(this).text();\n            c = $('<a href=\"' + i + '\" rel=\"nofollow\">' + t + '</a>');\n            l = $('<li class=\"' + n + '_nav\"></li>').append(c);\n            $(selector).append(l);\n        });\n        return true;\n    }\n\n    generateCatalog(\".catalog-body\");\n\n    // toggle side catalog\n    $(\".catalog-toggle\").click((function (e) {\n        e.preventDefault();\n        $('.side-catalog').toggleClass(\"fold\")\n    }))\n\n    /*\n     * Doc: https://github.com/davist11/jQuery-One-Page-Nav\n     * Fork by Hux to support padding\n     */\n    async(\"/js/jquery.nav.js\", function () {\n        $('.catalog-body').onePageNav({\n            currentClass: \"active\",\n            changeHash: !1,\n            easing: \"swing\",\n            filter: \"\",\n            scrollSpeed: 700,\n            scrollOffset: 0,\n            scrollThreshold: .2,\n            begin: null,\n            end: null,\n            scrollChange: null,\n            padding: 80\n        });\n    });\n</script>\n\n\n\n<!-- Multi-Lingual -->\n\n\n<!-- Simple Jekyll Search -->\n<script>\n    // https://stackoverflow.com/questions/1912501/unescape-html-entities-in-javascript\n    function htmlDecode(input) {\n        var e = document.createElement('textarea');\n        e.innerHTML = input;\n        // handle case of empty input\n        return e.childNodes.length === 0 ? \"\" : e.childNodes[0].nodeValue;\n    }\n\n    SimpleJekyllSearch({\n        searchInput: document.getElementById('search-input'),\n        resultsContainer: document.getElementById('search-results'),\n        json: '/search.json',\n        searchResultTemplate: '<div class=\"post-preview item\"><a href=\"{url}\"><h2 class=\"post-title\">{title}</h2><h3 class=\"post-subtitle\">{subtitle}</h3><hr></a></div>',\n        noResultsText: 'No results',\n        limit: 50,\n        fuzzy: false,\n        // a hack to get escaped subtitle unescaped. for some reason, \n        // post.subtitle w/o escape filter nuke entire search.\n        templateMiddleware: function (prop, value, template) {\n            if (prop === 'subtitle' || prop === 'title') {\n                if (value.indexOf(\"code\")) {\n                    return htmlDecode(value);\n                } else {\n                    return value;\n                }\n            }\n        }\n    });\n\n    $(document).ready(function () {\n        var $searchPage = $('.search-page');\n        var $searchOpen = $('.search-icon');\n        var $searchClose = $('.search-icon-close');\n        var $searchInput = $('#search-input');\n        var $body = $('body');\n\n        $searchOpen.on('click', function (e) {\n            e.preventDefault();\n            $searchPage.toggleClass('search-active');\n            var prevClasses = $body.attr('class') || '';\n            setTimeout(function () {\n                $body.addClass('no-scroll');\n            }, 400)\n\n            if ($searchPage.hasClass('search-active')) {\n                $searchClose.on('click', function (e) {\n                    e.preventDefault();\n                    $searchPage.removeClass('search-active');\n                    $body.attr('class', prevClasses);  // from closure \n                });\n                $searchInput.focus();\n            }\n        });\n    });\n</script>\n\n\n<!-- Image to hack wechat -->\n<img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\" />\n<!-- Migrate from head to bottom, no longer block render and still work -->\n\n</body>\n\n</html>\n","excerpt":"<h2 id=\"1jenkins迁移目录\">1、Jenkins迁移目录</h2>\n","url":"/2021/06/20/new-post/","next":{"id":"/2021/09/13/crash","tags":[],"relative_path":"_posts/2021-09-13-crash.md","collection":"posts","content":"<p>更新日期：2021-09-07</p>\n\n<p>[TOC]</p>\n\n<h2 id=\"1基本情况\">1、基本情况</h2>\n\n<p>​\t最终堆栈位置：</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n</pre></td><td class=\"rouge-code\"><pre>XXX -[KSKitBaseModel encodeWithCoder:] (KSKitBaseModel.m:)\nXXX -[KSBaseModel encodeWithCoder:] (KSBaseModel.m:)\nXXX -[KSBaseModel encodeWithCoder:] (KSBaseModel.m:)\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h2 id=\"2分析\">2、分析</h2>\n\n<h3 id=\"21-堆栈分析\">2.1 堆栈分析</h3>\n\n<p>跟踪多条Crash堆栈</p>\n\n<p>XXX堆栈 1：</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n</pre></td><td class=\"rouge-code\"><pre>9 XXX 0x0000000103bf4718 -[KSKitBaseModel encodeWithCoder:] (KSKitBaseModel.m:42)\n11 XXX 0x0000000100721688 -[KSBaseModel encodeWithCoder:] (KSBaseModel.m:50)\n11 XXX 0x0000000100721688 -[KSBaseModel encodeWithCoder:] (KSBaseModel.m:50)\n21 XXX 0x00000001004434cc -[KSKVStorage writeObjectToFile:forKey:atomic:completion:] (KSKVStorage.m:0)\n22 XXX 0x000000010326f550 -[KSLocalConfigManager internalRemoveLocalConfig:isGolbal:] (KSLocalConfigManager.m:273)\n23 XXX 0x0000000103270330 +[KSLocalConfigManager removeLocalConfig:isGolbal:] (KSLocalConfigManager.m:0)\n24 XXX 0x000000010326fa64 +[KSLocalConfigManager dailyCommonValueConfig:isGolbal:] (KSLocalConfigManager.m:0)\n25 XXX 0x0000000100b55a30 -[KSKTVRoomViewController(InteractionGuide) checkIfShowGameOngoingView:] (KSKTVRoomViewController+InteractionGuide.m:0)\n26 XXX 0x0000000100b54d38 -[KSKTVRoomViewController(InteractionGuide) showGameOngoingViewWhenEnterKTV:] (KSKTVRoomViewController+InteractionGuide.m:192)\n37 XXX 0x00000001014ec7d4 main (main.m:37)\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>XXX堆栈2：</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n</pre></td><td class=\"rouge-code\"><pre>9 XXX 0x0000000103b94718 -[KSKitBaseModel encodeWithCoder:] (KSKitBaseModel.m:42)\n11 XXX 0x00000001006c1688 -[KSBaseModel encodeWithCoder:] (KSBaseModel.m:50)\n11 XXX 0x00000001006c1688 -[KSBaseModel encodeWithCoder:] (KSBaseModel.m:50)\n21 XXX 0x00000001003e34cc -[KSKVStorage writeObjectToFile:forKey:atomic:completion:] (KSKVStorage.m:0)\n22 XXX 0x000000010320ee7c -[KSLocalConfigManager internalSaveLocalConfig:value:isGolbal:] (KSLocalConfigManager.m:220)\n23 XXX 0x000000010320fb10 +[KSLocalConfigManager saveLocalConfig:commonValue:isGolbal:] (KSLocalConfigManager.m:0)\n24 XXX 0x0000000102152b94 -[KSSendGiftContainerView tabView:didChangeSelectIndex:] (KSSendGiftContainerView.m:1952)\n25 XXX 0x000000010056235c -[KSTabView setSelectIndex:] (KSTabView.m:723)\n28 XXX 0x00000001009ccbc4 -[KSBaseButton sendAction:to:forEvent:] (KSBaseButton.m:0)\n46 XXX 0x000000010148c7d4 main (main.m:37)\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h3 id=\"22-代码分析\">2.2 代码分析</h3>\n\n<p>所有类型的堆栈最终都指向KSKVStorage writeObjectToFile,</p>\n\n<p>这是一个存储控制类，writeObjectToFile是将对象归档后写到磁盘</p>\n\n<p>最终堆栈指向</p>\n\n<pre><code class=\"language-objective-c\">0 libsystem_kernel.dylib 0x000000018aa97014 ___pthread_kill + 8\n1 libsystem_c.dylib 0x000000018aa0b400 _abort + 140\n2 libsystem_malloc.dylib 0x000000018aadba5c _nano_free_definite_size + 92\n3 libsystem_malloc.dylib 0x000000018aadd028 _nano_realloc + 648\n4 libsystem_malloc.dylib 0x000000018aacf240 _malloc_zone_realloc + 180\n5 Foundation 0x000000018c5aa3e4 -[NSOperation isAsynchronous] + 180\n6 Foundation 0x000000018c53c2a0 __decodeInt64 + 452\n</code></pre>\n\n<p>可以认为是NSKeyedUnarchiver 与 NSKeyedArchiver 触发的对象  KSKitBaseModel 及 KSBaseModel 的 encodeWithCoder 方法，</p>\n\n<p>触发encodeWithCoder:方法为自动序列化的标准做法如下：</p>\n\n<pre><code class=\"language-objective-c\">- (void)encodeWithCoder:(NSCoder *)encoder {\n\tClass cls = [self class];\n\twhile (cls != [NSObject class]) {\n\t\tunsigned int numberOfIvars = 0;\n\t\tIvar* ivars = class_copyIvarList(cls, &amp;numberOfIvars);\n\t\tfor(const Ivar* p = ivars; p &lt; ivars+numberOfIvars; p++)\n\t\t{\n\t\t\tIvar const ivar = *p;\n\t\t\tconst char *type = ivar_getTypeEncoding(ivar);\n\t\t\tNSString *key = [NSString stringWithUTF8String:ivar_getName(ivar)];\n            if (key == nil){\n                continue;\n            }\n            if ([key length] == 0){\n                continue;\n            }\n            \n\t\t\tid value = [self valueForKey:key];\n\t\t\tif (value) {\n\t\t\t\tswitch (type[0]) {\n\t\t\t\t\tcase _C_STRUCT_B: {\n\t\t\t\t\t\tNSUInteger ivarSize = 0;\n\t\t\t\t\t\tNSUInteger ivarAlignment = 0;\n\t\t\t\t\t\tNSGetSizeAndAlignment(type, &amp;ivarSize, &amp;ivarAlignment);\n\t\t\t\t\t\tNSData *data = [NSData dataWithBytes:(const char *)((__bridge void *)self) + ivar_getOffset(ivar)\n\t\t\t\t\t\t\t\t\t\t\t\t\t  length:ivarSize];\n\t\t\t\t\t\t[encoder encodeObject:data forKey:key];\n\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\t[encoder encodeObject:value\n\t\t\t\t\t\t\t\t\t   forKey:key];\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (ivars) {\n\t\t\tfree(ivars);\n\t\t}\n\t\t\n\t\tcls = class_getSuperclass(cls);\n\t}\n}\n\n</code></pre>\n\n<p>上述方法通过 runtime机制 遍历当前类及其父类的属性，可以推断，在某个类或者某个继承关系中存在如下调用顺序时，触发了crash</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n</pre></td><td class=\"rouge-code\"><pre>[KSKitBaseModel encodeWithCoder:] (KSKitBaseModel.m:42)\n[KSBaseModel encodeWithCoder:] (KSBaseModel.m:50)\n[KSBaseModel encodeWithCoder:] (KSBaseModel.m:50)\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>代码行数可能不准。</p>\n\n<p>根据断点调试，可能发生在 某个对象的 的归档中：</p>\n\n<h3 id=\"23-问题定位\">2.3 问题定位</h3>\n\n<h4 id=\"231-堆栈定位\">2.3.1 堆栈定位</h4>\n\n<p>​\t再看堆栈，实现了自动序列化的KSBaseModel 及 KSKitBaseModel 作为全民K歌项目持久层对象的基类在自动序列化过程中发生crash：</p>\n\n<pre><code class=\"language-objective-c\">0 libsystem_kernel.dylib 0x000000018aa97014 ___pthread_kill + 8\n1 libsystem_c.dylib 0x000000018aa0b400 _abort + 140\n2 libsystem_malloc.dylib 0x000000018aadba5c _nano_free_definite_size + 92\n3 libsystem_malloc.dylib 0x000000018aadd028 _nano_realloc + 648\n4 libsystem_malloc.dylib 0x000000018aacf240 _malloc_zone_realloc + 180\n5 Foundation 0x000000018c5aa3e4 -[NSOperation isAsynchronous] + 180\n6 Foundation 0x000000018c53c2a0 __decodeInt64 + 452\n7 XXX 0x0000000103cab808 -[KSKitBaseModel encodeWithCoder:] (KSKitBaseModel.m:42)\n8 Foundation 0x000000018c53c49c __decodeIntXXX+ 416\n9 XXX 0x00000001037a0b94 -[KSBaseModel encodeWithCoder:] (KSBaseModel.m:52)\n……\n</code></pre>\n\n<p>​\t在分析了自动序列化代码未找到问题的情况下，看引发crash更直接的libsystem_malloc.dylib 通过对_nano_free_definite_size产生crash的调研发现bugly及微信团队在之前遇到过类似的情况：<a href=\"https://zhuanlan.zhihu.com/p/24342979\">【腾讯Bugly干货分享】聊聊苹果的Bug - iOS 10 nano_free Crash</a></p>\n\n<h4 id=\"232-问题定位\">2.3.2 问题定位</h4>\n\n<p>​\t通过分析，发生crash机型都是iOS10的设备， 问题可以初步断定存在于iOS10的设备上i<strong>一类堆栈为nano_free字样的Crash</strong>，</p>\n\n<h3 id=\"24-复现\">2.4 复现</h3>\n\n<h4 id=\"241-构建复现条件\">2.4.1 构建复现条件</h4>\n\n<p>​\t将全民K歌持久层代码简化后在新建工程中搭建复现环境。 模拟高频，高数据量持久化核心代码如下：</p>\n\n<pre><code class=\"language-objective-c\">- (void)addOperation{\n    int count = 0;\n    while (count &lt; 10000) {\n        [self.lock lock];\n        //通过两台设备（iOS10 iPhone7P | iOS14 iPhone12）控制变量法模拟测试结论如下：\n        //iOS10设备的问题：\n        //通过修改 count % particle 中的 particle的值可以控制需要序列化的数组对象modelData的数据量，\n        //实践证明，当 particle 值越大， modelData的数据量 越大，越容易发生crash\n        //解决方案，控制每次序列化 数据量可以规避此crash\n        //非iOS10设备未出现此问题\n        NSString *key = [NSString stringWithFormat:@\"%d\",count];\n        int particle = 5;\n        if (count % particle == 1) {\n            if (self.modelDataDict.allKeys.count &gt; 0) {\n                [self.modelDataDict removeObjectForKey:[self.modelDataDict.allKeys objectAtIndex:0]];\n            }\n            \n        } else {\n            KSModel *model = [[KSModel alloc] init];\n            [self.modelDataDict setObject:model forKey:key];\n\n        }\n        [self.lock unlock];\n        count ++;\n\n        [self addopera:[self golbalSaveConfigKey] from:0 data:[self.modelDataDict mutableCopy]];\n\n        NSLog(@\"done index:%d datalen = %lu\", count, (unsigned long)self.modelDataDict.allKeys.count);\n    }\n    \n}\n\n- (void)addopera:(NSString *) key from:(int) type data:(id&lt;NSCoding, NSObject&gt;)obj{\n    \n    __block NSData *value = nil;\n    [_diskOperationQueue addOperationWithBlock:^{\n        NSMutableString *str = [NSMutableString new];\n        @try {\n            value = [NSKeyedArchiver archivedDataWithRootObject:obj];\n        }\n        @catch (NSException *exception) {\n            NSLog(@\"exception = %@ ||  from = %d \" ,exception ,type);\n        }\n        \n        NSString *filePath = [ViewController migrateFileNameForKey:[NSString stringWithFormat:@\"%@_%@_a\", str, key]];\n        NSError *error = nil;\n        [value writeToFile:filePath options:NSDataWritingAtomic error:&amp;error];\n    }];\n}\n\n\n</code></pre>\n\n<h4 id=\"242-控制设备变量对比\">2.4.2 控制设备变量对比</h4>\n\n<p>​\t通过控制设备以不同iOS版本号的设备进行测试，在iOS10 iPhone7P上跑上述代码 发生了Crash，Crash堆栈位置吻合：</p>\n\n<p><img src=\"img/2021-09-13crash/Crash.png\" alt=\"\" /></p>\n\n<p>在iOS14 iPhone12 未出现此crash</p>\n\n<h4 id=\"243-控制数据量对比\">2.4.3 控制数据量对比</h4>\n\n<p>​\t通过改变上述 particle 的值为 2 时，iOS10的设备不会发生crash,可以证明在所需序列化数据量较小时（至少说明在长度小于等于2的情况）不会发生crash，运行日志表明循环10000次序列化的情况：</p>\n\n<pre><code class=\"language-objective-c\">2021-09-07 21:22:25.626353 PT-2[1187:35082] done index:9995 datalen = 2\n2021-09-07 21:22:25.626385 PT-2[1187:35082] done index:9996 datalen = 1\n2021-09-07 21:22:25.626456 PT-2[1187:35082] done index:9997 datalen = 2\n2021-09-07 21:22:25.626520 PT-2[1187:35082] done index:9998 datalen = 1\n2021-09-07 21:22:25.626584 PT-2[1187:35082] done index:9999 datalen = 2\n2021-09-07 21:22:25.626610 PT-2[1187:35082] done index:10000 datalen = 1\n</code></pre>\n\n<p>​\t而当particle超过一定数值及循环次数达到一定次数（也就是所需序列化的数组长度足够长时）就会发生crash，通过日志查看，当前复现条件数组长度达到5000左右时发生crash，与在全民K歌项目中的环境不同，可能这个长度会有差异：</p>\n\n<pre><code class=\"language-objective-c\">2021-09-07 21:14:15.166295 PT-2[1087:32256] done index:8773 datalen = 5264\nPT-2(1087,0x16dfe3000) malloc: *** error for object 0x173050000: Freeing unallocated pointer\n*** set a breakpoint in malloc_error_break to debug\n*** error for object 0x173050000: Freeing unallocated pointer\n</code></pre>\n\n<p>上述日志发生crash的条件：</p>\n\n<p>循环次数为：8773</p>\n\n<p>所需序列化数组数据长度为：5264</p>\n\n<h3 id=\"25-解决方案\">2.5 解决方案</h3>\n\n<p>​\t通过上述调研与实践，问题发生在特定设备及特定条件下：</p>\n\n<p>特定设备：iOS10.x</p>\n\n<p>​\t特定设备无法避免。</p>\n\n<p>特定条件：序列化数据量大</p>\n\n<p>​\t通过全民K歌持久层代码走读，发现发生增删时，都要重新序列化全量的数据。由于上述复现条件的【控制数据量对比】</p>\n\n<p>通过优化增量数据的序列化方案可以使得序列化数据量较小，从而规避此crash。</p>\n\n<p>方案一：CoreData替代NSKeyedArchiver持久化方案</p>\n\n<p>方案二：优化NSKeyedArchiver的数据量，每次只持久化增量数据，持久化不再通过NSMutableDictionary setObject之后再持久化，而是直接将需要持久化的对象加Key进行持久化:</p>\n\n<pre><code class=\"language-objective-c\">- (void)addOperation{\n    int count = 0;\n    while (count &lt; 10000) {\n        [self.lock lock];\n        NSString *key = [NSString stringWithFormat:@\"%d\",count];\n\t\t\t\tKSModel *model = [[KSModel alloc] init];\n        [self addopera:[self golbalSaveConfigKeyWithKey:key] from:0 data:model];\n        [self.lock unlock];\n        count ++;\n        NSLog(@\"done index:%d datalen = %lu\", count, (unsigned long)self.modelDataDict.allKeys.count);\n    }\n}\n\n\n</code></pre>\n\n<p>上述方案每次序列化只有一个元素，经验证在iOS10.X 10000次循环不会发生crash，但此方法牺牲了遍历的方便性，需要在反序列化时通过Key值从不同的存储文件中获取后再进行：</p>\n\n<pre><code class=\"language-objective-c\">        id obj = [NSKeyedUnarchiver unarchiveObjectWithData:data];\n</code></pre>\n\n<p>补充：也需确保序列化对象属性数据量不宜过大</p>\n\n<h2 id=\"3其他\">3、其他</h2>\n\n<h3 id=\"31-风险\">3.1 风险</h3>\n\n<p>此外，CRASH方法中存在API废弃风险</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>value = [NSKeyedArchiver archivedDataWithRootObject:obj];'archivedDataWithRootObject:' is deprecated: first deprecated in iOS 12.0 - Use +archivedDataWithRootObject:requiringSecureCoding:error: instead\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p> </p>\n\n","name":"2021-09-13-crash.md","previous":{"id":"/2021/06/20/new-post","tags":[],"relative_path":"_posts/2021-06-20-new-post.md","collection":"posts","name":"2021-06-20-new-post.md","url":"/2021/06/20/new-post/","title":"Jenkins迁移","date":"2021-06-20 00:00:00 +0800","categories":[],"path":"_posts/2021-06-20-new-post.md","draft":false,"layout":"post","subtitle":"This is a subtitle","author":"PaysonChen","header-img":"img/post-bg-2015.jpg","slug":"new-post","ext":".md"},"output":"<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"google-site-verification\" content=\"xBT4GhYoi5qRD5tr338pgPM5OWHHIDR6mNg1a3euekI\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, viewport-fit=cover\">\n    <meta name=\"description\" content=\"与你一起发现更大的世界。\">\n    <meta name=\"keywords\"  content=\"PaysonChen,iOS,流媒体\">\n    <meta name=\"theme-color\" content=\"#000000\">\n    \n    <!-- Open Graph -->\n    <meta property=\"og:title\" content=\"iOS 10.x 内存Crash 排查 纪要 - PaysonChen的博客 | PaysonChen Blog\">\n    \n    <meta property=\"og:type\" content=\"article\">\n    <meta property=\"og:description\" content=\"更新日期：2021-09-07\n\">\n    \n    \n    <meta property=\"article:published_time\" content=\"2021-09-13T00:00:00Z\">\n    \n    \n    <meta property=\"article:author\" content=\"PaysonChen\">\n    \n    \n    \n    <meta property=\"og:image\" content=\"http://localhost:4000\">\n    <meta property=\"og:url\" content=\"http://localhost:4000/2021/09/13/crash/\">\n    <meta property=\"og:site_name\" content=\"PaysonChen的博客 | PaysonChen Blog\">\n    \n    <title>iOS 10.x 内存Crash 排查 纪要 - PaysonChen的博客 | PaysonChen Blog</title>\n\n    <!-- Web App Manifest -->\n    <link rel=\"manifest\" href=\"/pwa/manifest.json\">\n\n    <!-- Favicon -->\n    <link rel=\"shortcut icon\" href=\"/img/favicon.ico\">\n    \n    <!-- Canonical URL -->\n    <link rel=\"canonical\" href=\"http://localhost:4000/2021/09/13/crash/\">\n\n    <!-- Bootstrap Core CSS -->\n    <link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\">\n\n    <!-- Custom CSS -->\n    <link rel=\"stylesheet\" href=\"/css/hux-blog.min.css\">\n\n    <!-- Custom Fonts -->\n    <!-- <link href=\"http://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\"> -->\n    <!-- Hux change font-awesome CDN to qiniu -->\n    <link href=\"//cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\">\n\n\n    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->\n    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->\n    <!--[if lt IE 9]>\n        <script src=\"https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js\"></script>\n        <script src=\"https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js\"></script>\n    <![endif]-->\n\n    <!-- ga & ba script hoook -->\n    <script></script>\n</head>\n\n\n<!-- hack iOS CSS :active style -->\n<body ontouchstart=\"\">\n\n    <!-- Navigation -->\n\n    <nav class=\"navbar navbar-default navbar-custom navbar-fixed-top\">\n        \n        <div class=\"container-fluid\">\n            <!-- Brand and toggle get grouped for better mobile display -->\n            <div class=\"navbar-header page-scroll\">\n                <button type=\"button\" class=\"navbar-toggle\">\n                    <span class=\"sr-only\">Toggle navigation</span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                </button>\n                <a class=\"navbar-brand\" href=\"/\">PaysonChen Blog</a>\n            </div>\n\n            <!-- Collect the nav links, forms, and other content for toggling -->\n            <div id=\"huxblog_navbar\">\n                <div class=\"navbar-collapse\">\n                    <ul class=\"nav navbar-nav navbar-right\">\n                        <li>\n                            <a href=\"/\">Home</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        <li>\n                            <a href=\"/about/\">About</a>\n                        </li>\n                        \n                        \n                        \n                        <li>\n                            <a href=\"/archive/\">Archive</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        <li class=\"search-icon\">\n                            <a href=\"javascript:void(0)\">\n                                <i class=\"fa fa-search\"></i>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n            <!-- /.navbar-collapse -->\n        </div>\n        <!-- /.container -->\n    </nav>\n\n    <script>\n        // Drop Bootstarp low-performance Navbar\n        // Use customize navbar with high-quality material design animation\n        // in high-perf jank-free CSS3 implementation\n        var $body = document.body;\n        var $toggle = document.querySelector('.navbar-toggle');\n        var $navbar = document.querySelector('#huxblog_navbar');\n        var $collapse = document.querySelector('.navbar-collapse');\n\n        var __HuxNav__ = {\n            close: function () {\n                $navbar.className = \" \";\n                // wait until animation end.\n                setTimeout(function () {\n                    // prevent frequently toggle\n                    if ($navbar.className.indexOf('in') < 0) {\n                        $collapse.style.height = \"0px\"\n                    }\n                }, 400)\n            },\n            open: function () {\n                $collapse.style.height = \"auto\"\n                $navbar.className += \" in\";\n            }\n        }\n\n        // Bind Event\n        $toggle.addEventListener('click', function (e) {\n            if ($navbar.className.indexOf('in') > 0) {\n                __HuxNav__.close()\n            } else {\n                __HuxNav__.open()\n            }\n        })\n\n        /**\n         * Since Fastclick is used to delegate 'touchstart' globally\n         * to hack 300ms delay in iOS by performing a fake 'click',\n         * Using 'e.stopPropagation' to stop 'touchstart' event from \n         * $toggle/$collapse will break global delegation.\n         * \n         * Instead, we use a 'e.target' filter to prevent handler\n         * added to document close HuxNav.  \n         *\n         * Also, we use 'click' instead of 'touchstart' as compromise\n         */\n        document.addEventListener('click', function (e) {\n            if (e.target == $toggle) return;\n            if (e.target.className == 'icon-bar') return;\n            __HuxNav__.close();\n        })\n    </script>\n    <!-- Search -->\n<div class=\"search-page\">\n  <div class=\"search-icon-close-container\">\n    <span class=\"search-icon-close\">\n      <i class=\"fa fa-chevron-down\"></i>\n    </span>\n  </div>\n  <div class=\"search-main container\">\n    <div class=\"row\">\n      <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n        <form></form>\n        <input type=\"text\" id=\"search-input\" placeholder=\"$ grep...\">\n        </form>\n        <div id=\"search-results\" class=\"mini-post-list\"></div>\n      </div>\n    </div>\n  </div>\n</div>\n\n    <!-- Image to hack wechat -->\n<!-- <img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\"> -->\n<!-- <img src=\"/img/post-bg-ios9-web.jpg\" width=\"0\" height=\"0\"> -->\n\n<!-- Post Header -->\n\n\n\n<style type=\"text/css\">\n    header.intro-header{\n        position: relative;\n        background-image: url('/img/post-bg-ios9-web.jpg');\n        background: ;\n    }\n\n    \n</style>\n\n<header class=\"intro-header\" >\n\n    <div class=\"header-mask\"></div>\n    \n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <div class=\"post-heading\">\n                    <div class=\"tags\">\n                        \n                    </div>\n                    <h1>iOS 10.x 内存Crash 排查 纪要</h1>\n                    \n                    <h2 class=\"subheading\">This is a subtitle</h2>\n                    <span class=\"meta\">Posted by PaysonChen on September 13, 2021</span>\n                </div>\n            </div>\n        </div>\n    </div>\n</header>\n\n\n\n\n\n\n<!-- Post Content -->\n<article>\n    <div class=\"container\">\n        <div class=\"row\">\n\n    <!-- Post Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                post-container\">\n\n                <!-- Multi-Lingual -->\n                \n\n\t\t\t\t<p>更新日期：2021-09-07</p>\n\n<p>[TOC]</p>\n\n<h2 id=\"1基本情况\">1、基本情况</h2>\n\n<p>​\t最终堆栈位置：</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n</pre></td><td class=\"rouge-code\"><pre>XXX -[KSKitBaseModel encodeWithCoder:] (KSKitBaseModel.m:)\nXXX -[KSBaseModel encodeWithCoder:] (KSBaseModel.m:)\nXXX -[KSBaseModel encodeWithCoder:] (KSBaseModel.m:)\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h2 id=\"2分析\">2、分析</h2>\n\n<h3 id=\"21-堆栈分析\">2.1 堆栈分析</h3>\n\n<p>跟踪多条Crash堆栈</p>\n\n<p>XXX堆栈 1：</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n</pre></td><td class=\"rouge-code\"><pre>9 XXX 0x0000000103bf4718 -[KSKitBaseModel encodeWithCoder:] (KSKitBaseModel.m:42)\n11 XXX 0x0000000100721688 -[KSBaseModel encodeWithCoder:] (KSBaseModel.m:50)\n11 XXX 0x0000000100721688 -[KSBaseModel encodeWithCoder:] (KSBaseModel.m:50)\n21 XXX 0x00000001004434cc -[KSKVStorage writeObjectToFile:forKey:atomic:completion:] (KSKVStorage.m:0)\n22 XXX 0x000000010326f550 -[KSLocalConfigManager internalRemoveLocalConfig:isGolbal:] (KSLocalConfigManager.m:273)\n23 XXX 0x0000000103270330 +[KSLocalConfigManager removeLocalConfig:isGolbal:] (KSLocalConfigManager.m:0)\n24 XXX 0x000000010326fa64 +[KSLocalConfigManager dailyCommonValueConfig:isGolbal:] (KSLocalConfigManager.m:0)\n25 XXX 0x0000000100b55a30 -[KSKTVRoomViewController(InteractionGuide) checkIfShowGameOngoingView:] (KSKTVRoomViewController+InteractionGuide.m:0)\n26 XXX 0x0000000100b54d38 -[KSKTVRoomViewController(InteractionGuide) showGameOngoingViewWhenEnterKTV:] (KSKTVRoomViewController+InteractionGuide.m:192)\n37 XXX 0x00000001014ec7d4 main (main.m:37)\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>XXX堆栈2：</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n</pre></td><td class=\"rouge-code\"><pre>9 XXX 0x0000000103b94718 -[KSKitBaseModel encodeWithCoder:] (KSKitBaseModel.m:42)\n11 XXX 0x00000001006c1688 -[KSBaseModel encodeWithCoder:] (KSBaseModel.m:50)\n11 XXX 0x00000001006c1688 -[KSBaseModel encodeWithCoder:] (KSBaseModel.m:50)\n21 XXX 0x00000001003e34cc -[KSKVStorage writeObjectToFile:forKey:atomic:completion:] (KSKVStorage.m:0)\n22 XXX 0x000000010320ee7c -[KSLocalConfigManager internalSaveLocalConfig:value:isGolbal:] (KSLocalConfigManager.m:220)\n23 XXX 0x000000010320fb10 +[KSLocalConfigManager saveLocalConfig:commonValue:isGolbal:] (KSLocalConfigManager.m:0)\n24 XXX 0x0000000102152b94 -[KSSendGiftContainerView tabView:didChangeSelectIndex:] (KSSendGiftContainerView.m:1952)\n25 XXX 0x000000010056235c -[KSTabView setSelectIndex:] (KSTabView.m:723)\n28 XXX 0x00000001009ccbc4 -[KSBaseButton sendAction:to:forEvent:] (KSBaseButton.m:0)\n46 XXX 0x000000010148c7d4 main (main.m:37)\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h3 id=\"22-代码分析\">2.2 代码分析</h3>\n\n<p>所有类型的堆栈最终都指向KSKVStorage writeObjectToFile,</p>\n\n<p>这是一个存储控制类，writeObjectToFile是将对象归档后写到磁盘</p>\n\n<p>最终堆栈指向</p>\n\n<pre><code class=\"language-objective-c\">0 libsystem_kernel.dylib 0x000000018aa97014 ___pthread_kill + 8\n1 libsystem_c.dylib 0x000000018aa0b400 _abort + 140\n2 libsystem_malloc.dylib 0x000000018aadba5c _nano_free_definite_size + 92\n3 libsystem_malloc.dylib 0x000000018aadd028 _nano_realloc + 648\n4 libsystem_malloc.dylib 0x000000018aacf240 _malloc_zone_realloc + 180\n5 Foundation 0x000000018c5aa3e4 -[NSOperation isAsynchronous] + 180\n6 Foundation 0x000000018c53c2a0 __decodeInt64 + 452\n</code></pre>\n\n<p>可以认为是NSKeyedUnarchiver 与 NSKeyedArchiver 触发的对象  KSKitBaseModel 及 KSBaseModel 的 encodeWithCoder 方法，</p>\n\n<p>触发encodeWithCoder:方法为自动序列化的标准做法如下：</p>\n\n<pre><code class=\"language-objective-c\">- (void)encodeWithCoder:(NSCoder *)encoder {\n\tClass cls = [self class];\n\twhile (cls != [NSObject class]) {\n\t\tunsigned int numberOfIvars = 0;\n\t\tIvar* ivars = class_copyIvarList(cls, &amp;numberOfIvars);\n\t\tfor(const Ivar* p = ivars; p &lt; ivars+numberOfIvars; p++)\n\t\t{\n\t\t\tIvar const ivar = *p;\n\t\t\tconst char *type = ivar_getTypeEncoding(ivar);\n\t\t\tNSString *key = [NSString stringWithUTF8String:ivar_getName(ivar)];\n            if (key == nil){\n                continue;\n            }\n            if ([key length] == 0){\n                continue;\n            }\n            \n\t\t\tid value = [self valueForKey:key];\n\t\t\tif (value) {\n\t\t\t\tswitch (type[0]) {\n\t\t\t\t\tcase _C_STRUCT_B: {\n\t\t\t\t\t\tNSUInteger ivarSize = 0;\n\t\t\t\t\t\tNSUInteger ivarAlignment = 0;\n\t\t\t\t\t\tNSGetSizeAndAlignment(type, &amp;ivarSize, &amp;ivarAlignment);\n\t\t\t\t\t\tNSData *data = [NSData dataWithBytes:(const char *)((__bridge void *)self) + ivar_getOffset(ivar)\n\t\t\t\t\t\t\t\t\t\t\t\t\t  length:ivarSize];\n\t\t\t\t\t\t[encoder encodeObject:data forKey:key];\n\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\t[encoder encodeObject:value\n\t\t\t\t\t\t\t\t\t   forKey:key];\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (ivars) {\n\t\t\tfree(ivars);\n\t\t}\n\t\t\n\t\tcls = class_getSuperclass(cls);\n\t}\n}\n\n</code></pre>\n\n<p>上述方法通过 runtime机制 遍历当前类及其父类的属性，可以推断，在某个类或者某个继承关系中存在如下调用顺序时，触发了crash</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n</pre></td><td class=\"rouge-code\"><pre>[KSKitBaseModel encodeWithCoder:] (KSKitBaseModel.m:42)\n[KSBaseModel encodeWithCoder:] (KSBaseModel.m:50)\n[KSBaseModel encodeWithCoder:] (KSBaseModel.m:50)\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>代码行数可能不准。</p>\n\n<p>根据断点调试，可能发生在 某个对象的 的归档中：</p>\n\n<h3 id=\"23-问题定位\">2.3 问题定位</h3>\n\n<h4 id=\"231-堆栈定位\">2.3.1 堆栈定位</h4>\n\n<p>​\t再看堆栈，实现了自动序列化的KSBaseModel 及 KSKitBaseModel 作为全民K歌项目持久层对象的基类在自动序列化过程中发生crash：</p>\n\n<pre><code class=\"language-objective-c\">0 libsystem_kernel.dylib 0x000000018aa97014 ___pthread_kill + 8\n1 libsystem_c.dylib 0x000000018aa0b400 _abort + 140\n2 libsystem_malloc.dylib 0x000000018aadba5c _nano_free_definite_size + 92\n3 libsystem_malloc.dylib 0x000000018aadd028 _nano_realloc + 648\n4 libsystem_malloc.dylib 0x000000018aacf240 _malloc_zone_realloc + 180\n5 Foundation 0x000000018c5aa3e4 -[NSOperation isAsynchronous] + 180\n6 Foundation 0x000000018c53c2a0 __decodeInt64 + 452\n7 XXX 0x0000000103cab808 -[KSKitBaseModel encodeWithCoder:] (KSKitBaseModel.m:42)\n8 Foundation 0x000000018c53c49c __decodeIntXXX+ 416\n9 XXX 0x00000001037a0b94 -[KSBaseModel encodeWithCoder:] (KSBaseModel.m:52)\n……\n</code></pre>\n\n<p>​\t在分析了自动序列化代码未找到问题的情况下，看引发crash更直接的libsystem_malloc.dylib 通过对_nano_free_definite_size产生crash的调研发现bugly及微信团队在之前遇到过类似的情况：<a href=\"https://zhuanlan.zhihu.com/p/24342979\">【腾讯Bugly干货分享】聊聊苹果的Bug - iOS 10 nano_free Crash</a></p>\n\n<h4 id=\"232-问题定位\">2.3.2 问题定位</h4>\n\n<p>​\t通过分析，发生crash机型都是iOS10的设备， 问题可以初步断定存在于iOS10的设备上i<strong>一类堆栈为nano_free字样的Crash</strong>，</p>\n\n<h3 id=\"24-复现\">2.4 复现</h3>\n\n<h4 id=\"241-构建复现条件\">2.4.1 构建复现条件</h4>\n\n<p>​\t将全民K歌持久层代码简化后在新建工程中搭建复现环境。 模拟高频，高数据量持久化核心代码如下：</p>\n\n<pre><code class=\"language-objective-c\">- (void)addOperation{\n    int count = 0;\n    while (count &lt; 10000) {\n        [self.lock lock];\n        //通过两台设备（iOS10 iPhone7P | iOS14 iPhone12）控制变量法模拟测试结论如下：\n        //iOS10设备的问题：\n        //通过修改 count % particle 中的 particle的值可以控制需要序列化的数组对象modelData的数据量，\n        //实践证明，当 particle 值越大， modelData的数据量 越大，越容易发生crash\n        //解决方案，控制每次序列化 数据量可以规避此crash\n        //非iOS10设备未出现此问题\n        NSString *key = [NSString stringWithFormat:@\"%d\",count];\n        int particle = 5;\n        if (count % particle == 1) {\n            if (self.modelDataDict.allKeys.count &gt; 0) {\n                [self.modelDataDict removeObjectForKey:[self.modelDataDict.allKeys objectAtIndex:0]];\n            }\n            \n        } else {\n            KSModel *model = [[KSModel alloc] init];\n            [self.modelDataDict setObject:model forKey:key];\n\n        }\n        [self.lock unlock];\n        count ++;\n\n        [self addopera:[self golbalSaveConfigKey] from:0 data:[self.modelDataDict mutableCopy]];\n\n        NSLog(@\"done index:%d datalen = %lu\", count, (unsigned long)self.modelDataDict.allKeys.count);\n    }\n    \n}\n\n- (void)addopera:(NSString *) key from:(int) type data:(id&lt;NSCoding, NSObject&gt;)obj{\n    \n    __block NSData *value = nil;\n    [_diskOperationQueue addOperationWithBlock:^{\n        NSMutableString *str = [NSMutableString new];\n        @try {\n            value = [NSKeyedArchiver archivedDataWithRootObject:obj];\n        }\n        @catch (NSException *exception) {\n            NSLog(@\"exception = %@ ||  from = %d \" ,exception ,type);\n        }\n        \n        NSString *filePath = [ViewController migrateFileNameForKey:[NSString stringWithFormat:@\"%@_%@_a\", str, key]];\n        NSError *error = nil;\n        [value writeToFile:filePath options:NSDataWritingAtomic error:&amp;error];\n    }];\n}\n\n\n</code></pre>\n\n<h4 id=\"242-控制设备变量对比\">2.4.2 控制设备变量对比</h4>\n\n<p>​\t通过控制设备以不同iOS版本号的设备进行测试，在iOS10 iPhone7P上跑上述代码 发生了Crash，Crash堆栈位置吻合：</p>\n\n<p><img src=\"img/2021-09-13crash/Crash.png\" alt=\"\" /></p>\n\n<p>在iOS14 iPhone12 未出现此crash</p>\n\n<h4 id=\"243-控制数据量对比\">2.4.3 控制数据量对比</h4>\n\n<p>​\t通过改变上述 particle 的值为 2 时，iOS10的设备不会发生crash,可以证明在所需序列化数据量较小时（至少说明在长度小于等于2的情况）不会发生crash，运行日志表明循环10000次序列化的情况：</p>\n\n<pre><code class=\"language-objective-c\">2021-09-07 21:22:25.626353 PT-2[1187:35082] done index:9995 datalen = 2\n2021-09-07 21:22:25.626385 PT-2[1187:35082] done index:9996 datalen = 1\n2021-09-07 21:22:25.626456 PT-2[1187:35082] done index:9997 datalen = 2\n2021-09-07 21:22:25.626520 PT-2[1187:35082] done index:9998 datalen = 1\n2021-09-07 21:22:25.626584 PT-2[1187:35082] done index:9999 datalen = 2\n2021-09-07 21:22:25.626610 PT-2[1187:35082] done index:10000 datalen = 1\n</code></pre>\n\n<p>​\t而当particle超过一定数值及循环次数达到一定次数（也就是所需序列化的数组长度足够长时）就会发生crash，通过日志查看，当前复现条件数组长度达到5000左右时发生crash，与在全民K歌项目中的环境不同，可能这个长度会有差异：</p>\n\n<pre><code class=\"language-objective-c\">2021-09-07 21:14:15.166295 PT-2[1087:32256] done index:8773 datalen = 5264\nPT-2(1087,0x16dfe3000) malloc: *** error for object 0x173050000: Freeing unallocated pointer\n*** set a breakpoint in malloc_error_break to debug\n*** error for object 0x173050000: Freeing unallocated pointer\n</code></pre>\n\n<p>上述日志发生crash的条件：</p>\n\n<p>循环次数为：8773</p>\n\n<p>所需序列化数组数据长度为：5264</p>\n\n<h3 id=\"25-解决方案\">2.5 解决方案</h3>\n\n<p>​\t通过上述调研与实践，问题发生在特定设备及特定条件下：</p>\n\n<p>特定设备：iOS10.x</p>\n\n<p>​\t特定设备无法避免。</p>\n\n<p>特定条件：序列化数据量大</p>\n\n<p>​\t通过全民K歌持久层代码走读，发现发生增删时，都要重新序列化全量的数据。由于上述复现条件的【控制数据量对比】</p>\n\n<p>通过优化增量数据的序列化方案可以使得序列化数据量较小，从而规避此crash。</p>\n\n<p>方案一：CoreData替代NSKeyedArchiver持久化方案</p>\n\n<p>方案二：优化NSKeyedArchiver的数据量，每次只持久化增量数据，持久化不再通过NSMutableDictionary setObject之后再持久化，而是直接将需要持久化的对象加Key进行持久化:</p>\n\n<pre><code class=\"language-objective-c\">- (void)addOperation{\n    int count = 0;\n    while (count &lt; 10000) {\n        [self.lock lock];\n        NSString *key = [NSString stringWithFormat:@\"%d\",count];\n\t\t\t\tKSModel *model = [[KSModel alloc] init];\n        [self addopera:[self golbalSaveConfigKeyWithKey:key] from:0 data:model];\n        [self.lock unlock];\n        count ++;\n        NSLog(@\"done index:%d datalen = %lu\", count, (unsigned long)self.modelDataDict.allKeys.count);\n    }\n}\n\n\n</code></pre>\n\n<p>上述方案每次序列化只有一个元素，经验证在iOS10.X 10000次循环不会发生crash，但此方法牺牲了遍历的方便性，需要在反序列化时通过Key值从不同的存储文件中获取后再进行：</p>\n\n<pre><code class=\"language-objective-c\">        id obj = [NSKeyedUnarchiver unarchiveObjectWithData:data];\n</code></pre>\n\n<p>补充：也需确保序列化对象属性数据量不宜过大</p>\n\n<h2 id=\"3其他\">3、其他</h2>\n\n<h3 id=\"31-风险\">3.1 风险</h3>\n\n<p>此外，CRASH方法中存在API废弃风险</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>value = [NSKeyedArchiver archivedDataWithRootObject:obj];'archivedDataWithRootObject:' is deprecated: first deprecated in iOS 12.0 - Use +archivedDataWithRootObject:requiringSecureCoding:error: instead\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p> </p>\n\n\n\n                <hr style=\"visibility: hidden;\">\n                <ul class=\"pager\">\n                    \n                    <li class=\"previous\">\n                        <a href=\"/2021/06/20/new-post/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Jenkins迁移\">\n                        Previous<br>\n                        <span>Jenkins迁移</span>\n                        </a>\n                    </li>\n                    \n                    \n                    <li class=\"next\">\n                        <a href=\"/2021/10/18/git/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"多账号配置GIT\">\n                        Next<br>\n                        <span>多账号配置GIT</span>\n                        </a>\n                    </li>\n                    \n                </ul>\n                <hr style=\"visibility: hidden;\">\n\n                \n                <!-- disqus 评论框 start -->\n                <div class=\"comment\">\n                    <div id=\"disqus_thread\" class=\"disqus-thread\"></div>\n                </div>\n                <!-- disqus 评论框 end -->\n                \n\n                \n            </div>  \n\n    <!-- Side Catalog Container -->\n        \n            <div class=\"\n                col-lg-2 col-lg-offset-0\n                visible-lg-block\n                sidebar-container\n                catalog-container\">\n                <div class=\"side-catalog\">\n                    <hr class=\"hidden-sm hidden-xs\">\n                    <h5>\n                        <a class=\"catalog-toggle\" href=\"#\">CATALOG</a>\n                    </h5>\n                    <ul class=\"catalog-body\"></ul>\n                </div>\n            </div>\n        \n\n    <!-- Sidebar Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                sidebar-container\">\n\n                <!-- Featured Tags -->\n                \n\n\n<section>\n    \n        <hr class=\"hidden-sm hidden-xs\">\n    \n    <h5><a href=\"/archive/\">FEATURED TAGS</a></h5>\n    <div class=\"tags\">\n        \n        \n        \n        \n        \n    </div>\n</section>\n\n\n                <!-- Friends Blog -->\n                \n            </div>\n        </div>\n    </div>\n</article>\n\n<!-- add support for mathjax by voleking-->\n\n\n\n\n\n\n<!-- disqus 公共JS代码 start (一个网页只需插入一次) -->\n<script type=\"text/javascript\">\n    /* * * CONFIGURATION VARIABLES * * */\n    var disqus_shortname = \"Cyp\";\n    var disqus_identifier = \"/2021/09/13/crash\";\n    var disqus_url = \"http://localhost:4000/2021/09/13/crash/\";\n\n    (function() {\n        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;\n        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';\n        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);\n    })();\n</script>\n<!-- disqus 公共JS代码 end -->\n\n\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n      var d = document, t = 'script',\n          o = d.createElement(t),\n          s = d.getElementsByTagName(t)[0];\n      o.src = u;\n      if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n      s.parentNode.insertBefore(o, s);\n    }\n</script>\n<!-- anchor-js, Doc:http://bryanbraun.github.io/anchorjs/ -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/anchor-js/1.1.1/anchor.min.js\",function(){\n        anchors.options = {\n          visible: 'hover',\n          placement: 'right',\n          // icon: '#'\n        };\n        anchors.add().remove('.intro-header h1').remove('.subheading').remove('.sidebar-container h5');\n    })\n</script>\n<style>\n    /* place left on bigger screen */\n    @media all and (min-width: 800px) {\n        .anchorjs-link{\n            position: absolute;\n            left: -0.75em;\n            font-size: 1.1em;\n            margin-top : -0.1em;\n        }\n    }\n</style>\n\n\n\n    <!-- Footer -->\n<footer>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <!-- SNS Link -->\n                \n\n\n<ul class=\"list-inline text-center\">\n\n\n  \n  \n  \n  \n  \n  \n  \n</ul>\n\n                <p class=\"copyright text-muted\">\n                    Copyright &copy; PaysonChen Blog 2024\n                    <br>\n                    <!-- Powered by <a href=\"http://huangxuan.me\">Hux Blog</a> | -->\n                 <!--    <iframe style=\"margin-left: 2px; margin-bottom:-5px;\" frameborder=\"0\" scrolling=\"0\" width=\"100px\"\n                        height=\"20px\"\n                        src=\"https://ghbtns.com/github-btn.html?user=huxpro&repo=huxpro.github.io&type=star&count=true\">\n                    </iframe> -->\n                </p>\n            </div>\n        </div>\n    </div>\n</footer>\n\n<!-- jQuery -->\n<script src=\"/js/jquery.min.js \"></script>\n\n<!-- Bootstrap Core JavaScript -->\n<!-- Currently, only navbar scroll-down effect at desktop still depends on this -->\n<script src=\"/js/bootstrap.min.js \"></script>\n\n<!-- Custom Theme JavaScript -->\n<script src=\"/js/hux-blog.min.js \"></script>\n\n<!-- Simple Jekyll Search -->\n<script src=\"/js/simple-jekyll-search.min.js\"></script>\n\n<!-- Service Worker -->\n\n<script src=\"/js/snackbar.js \"></script>\n<script src=\"/js/sw-registration.js \"></script>\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n        var d = document, t = 'script',\n            o = d.createElement(t),\n            s = d.getElementsByTagName(t)[0];\n        o.src = u;\n        if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n        s.parentNode.insertBefore(o, s);\n    }\n</script>\n\n<!--\n     Because of the native support for backtick-style fenced code blocks\n     right within the Markdown is landed in Github Pages,\n     From V1.6, There is no need for Highlight.js,\n     so Huxblog drops it officially.\n\n     - https://github.com/blog/2100-github-pages-now-faster-and-simpler-with-jekyll-3-0\n     - https://help.github.com/articles/creating-and-highlighting-code-blocks/\n     - https://github.com/jneen/rouge/wiki/list-of-supported-languages-and-lexers\n-->\n<!--\n    <script>\n        async(\"http://cdn.bootcss.com/highlight.js/8.6/highlight.min.js\", function(){\n            hljs.initHighlightingOnLoad();\n        })\n    </script>\n    <link href=\"http://cdn.bootcss.com/highlight.js/8.6/styles/github.min.css\" rel=\"stylesheet\">\n-->\n\n\n\n\n\n\n\n<!--fastClick.js -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/fastclick/1.0.6/fastclick.min.js\", function () {\n        var $nav = document.querySelector(\"nav\");\n        if ($nav) FastClick.attach($nav);\n    })\n</script>\n\n\n<!-- Google Analytics -->\n\n\n\n<!-- Baidu Tongji -->\n\n\n\n<!-- Side Catalog -->\n\n<script type=\"text/javascript\">\n    function generateCatalog(selector) {\n\n        // interop with multilangual \n        if ('' == 'true') {\n            _containerSelector = 'div.post-container.active'\n        } else {\n            _containerSelector = 'div.post-container'\n        }\n\n        // init\n        var P = $(_containerSelector), a, n, t, l, i, c;\n        a = P.find('h1,h2,h3,h4,h5,h6');\n\n        // clean\n        $(selector).html('')\n\n        // appending\n        a.each(function () {\n            n = $(this).prop('tagName').toLowerCase();\n            i = \"#\" + $(this).prop('id');\n            t = $(this).text();\n            c = $('<a href=\"' + i + '\" rel=\"nofollow\">' + t + '</a>');\n            l = $('<li class=\"' + n + '_nav\"></li>').append(c);\n            $(selector).append(l);\n        });\n        return true;\n    }\n\n    generateCatalog(\".catalog-body\");\n\n    // toggle side catalog\n    $(\".catalog-toggle\").click((function (e) {\n        e.preventDefault();\n        $('.side-catalog').toggleClass(\"fold\")\n    }))\n\n    /*\n     * Doc: https://github.com/davist11/jQuery-One-Page-Nav\n     * Fork by Hux to support padding\n     */\n    async(\"/js/jquery.nav.js\", function () {\n        $('.catalog-body').onePageNav({\n            currentClass: \"active\",\n            changeHash: !1,\n            easing: \"swing\",\n            filter: \"\",\n            scrollSpeed: 700,\n            scrollOffset: 0,\n            scrollThreshold: .2,\n            begin: null,\n            end: null,\n            scrollChange: null,\n            padding: 80\n        });\n    });\n</script>\n\n\n\n<!-- Multi-Lingual -->\n\n\n<!-- Simple Jekyll Search -->\n<script>\n    // https://stackoverflow.com/questions/1912501/unescape-html-entities-in-javascript\n    function htmlDecode(input) {\n        var e = document.createElement('textarea');\n        e.innerHTML = input;\n        // handle case of empty input\n        return e.childNodes.length === 0 ? \"\" : e.childNodes[0].nodeValue;\n    }\n\n    SimpleJekyllSearch({\n        searchInput: document.getElementById('search-input'),\n        resultsContainer: document.getElementById('search-results'),\n        json: '/search.json',\n        searchResultTemplate: '<div class=\"post-preview item\"><a href=\"{url}\"><h2 class=\"post-title\">{title}</h2><h3 class=\"post-subtitle\">{subtitle}</h3><hr></a></div>',\n        noResultsText: 'No results',\n        limit: 50,\n        fuzzy: false,\n        // a hack to get escaped subtitle unescaped. for some reason, \n        // post.subtitle w/o escape filter nuke entire search.\n        templateMiddleware: function (prop, value, template) {\n            if (prop === 'subtitle' || prop === 'title') {\n                if (value.indexOf(\"code\")) {\n                    return htmlDecode(value);\n                } else {\n                    return value;\n                }\n            }\n        }\n    });\n\n    $(document).ready(function () {\n        var $searchPage = $('.search-page');\n        var $searchOpen = $('.search-icon');\n        var $searchClose = $('.search-icon-close');\n        var $searchInput = $('#search-input');\n        var $body = $('body');\n\n        $searchOpen.on('click', function (e) {\n            e.preventDefault();\n            $searchPage.toggleClass('search-active');\n            var prevClasses = $body.attr('class') || '';\n            setTimeout(function () {\n                $body.addClass('no-scroll');\n            }, 400)\n\n            if ($searchPage.hasClass('search-active')) {\n                $searchClose.on('click', function (e) {\n                    e.preventDefault();\n                    $searchPage.removeClass('search-active');\n                    $body.attr('class', prevClasses);  // from closure \n                });\n                $searchInput.focus();\n            }\n        });\n    });\n</script>\n\n\n<!-- Image to hack wechat -->\n<img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\" />\n<!-- Migrate from head to bottom, no longer block render and still work -->\n\n</body>\n\n</html>\n","excerpt":"<p>更新日期：2021-09-07</p>\n","url":"/2021/09/13/crash/","next":{"id":"/2021/10/18/git","tags":[],"relative_path":"_posts/2021-10-18-git.md","collection":"posts","name":"2021-10-18-git.md","url":"/2021/10/18/git/","title":"多账号配置GIT","date":"2021-10-18 00:00:00 +0800","categories":[],"path":"_posts/2021-10-18-git.md","draft":false,"layout":"post","subtitle":"","author":"PaysonChen","header-img":"img/post-bg-2015.jpg","slug":"git","ext":".md"},"title":"iOS 10.x 内存Crash 排查 纪要","date":"2021-09-13 00:00:00 +0800","categories":[],"path":"_posts/2021-09-13-crash.md","draft":false,"layout":"post","subtitle":"This is a subtitle","author":"PaysonChen","header-img":"img/post-bg-ios9-web.jpg","slug":"crash","ext":".md"},"title":"Jenkins迁移","date":"2021-06-20 00:00:00 +0800","categories":[],"path":"_posts/2021-06-20-new-post.md","draft":false,"layout":"post","subtitle":"This is a subtitle","author":"PaysonChen","header-img":"img/post-bg-2015.jpg","slug":"new-post","ext":".md"},{"id":"/2021/03/21/rn___","tags":[],"relative_path":"_posts/2021-03-21-rn___.md","collection":"posts","content":"<p>RN 报如下错误时</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n</pre></td><td class=\"rouge-code\"><pre>\n resolve try the following:\n\n  1. Clear watchman watches: `watchman watch-del-all`.\n\n  2. Delete the `node_modules` folder: `rm -rf node_modules &amp;&amp; npm install`. \n\n 3. Reset Metro Bundler cache: `rm -rf $TMPDIR/react-*` or `npm start -- --reset-cache`. \n\n  4. Remove haste cache: `rm -rf $TMPDIR/haste-map-react-native-packager-*`.\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>有可能因为 RN与react版本不匹配</p>\n\n<p>在执行</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n</pre></td><td class=\"rouge-code\"><pre>\nyarn add react-native\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>查看warning</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n</pre></td><td class=\"rouge-code\"><pre>\nwarning \"react-native &gt; use-subscription@1.5.0\" has unmet peer dependency \"react@^17.0.0\".\n\nwarning \" &gt; react-native@0.63.3\" has unmet peer dependency \"react@16.13.1\".\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>需要添加react依赖版本</p>\n","name":"2021-03-21-rn___.md","previous":null,"output":"<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"google-site-verification\" content=\"xBT4GhYoi5qRD5tr338pgPM5OWHHIDR6mNg1a3euekI\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, viewport-fit=cover\">\n    <meta name=\"description\" content=\"与你一起发现更大的世界。\">\n    <meta name=\"keywords\"  content=\"PaysonChen,iOS,流媒体\">\n    <meta name=\"theme-color\" content=\"#000000\">\n    \n    <!-- Open Graph -->\n    <meta property=\"og:title\" content=\"RN 采坑 - PaysonChen的博客 | PaysonChen Blog\">\n    \n    <meta property=\"og:type\" content=\"article\">\n    <meta property=\"og:description\" content=\"RN 报如下错误时\n\">\n    \n    \n    <meta property=\"article:published_time\" content=\"2021-03-21T00:00:00Z\">\n    \n    \n    \n    \n    <meta property=\"og:image\" content=\"http://localhost:4000\">\n    <meta property=\"og:url\" content=\"http://localhost:4000/2021/03/21/rn___/\">\n    <meta property=\"og:site_name\" content=\"PaysonChen的博客 | PaysonChen Blog\">\n    \n    <title>RN 采坑 - PaysonChen的博客 | PaysonChen Blog</title>\n\n    <!-- Web App Manifest -->\n    <link rel=\"manifest\" href=\"/pwa/manifest.json\">\n\n    <!-- Favicon -->\n    <link rel=\"shortcut icon\" href=\"/img/favicon.ico\">\n    \n    <!-- Canonical URL -->\n    <link rel=\"canonical\" href=\"http://localhost:4000/2021/03/21/rn___/\">\n\n    <!-- Bootstrap Core CSS -->\n    <link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\">\n\n    <!-- Custom CSS -->\n    <link rel=\"stylesheet\" href=\"/css/hux-blog.min.css\">\n\n    <!-- Custom Fonts -->\n    <!-- <link href=\"http://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\"> -->\n    <!-- Hux change font-awesome CDN to qiniu -->\n    <link href=\"//cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\">\n\n\n    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->\n    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->\n    <!--[if lt IE 9]>\n        <script src=\"https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js\"></script>\n        <script src=\"https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js\"></script>\n    <![endif]-->\n\n    <!-- ga & ba script hoook -->\n    <script></script>\n</head>\n\n\n<!-- hack iOS CSS :active style -->\n<body ontouchstart=\"\">\n\n    <!-- Navigation -->\n\n    <nav class=\"navbar navbar-default navbar-custom navbar-fixed-top\">\n        \n        <div class=\"container-fluid\">\n            <!-- Brand and toggle get grouped for better mobile display -->\n            <div class=\"navbar-header page-scroll\">\n                <button type=\"button\" class=\"navbar-toggle\">\n                    <span class=\"sr-only\">Toggle navigation</span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                </button>\n                <a class=\"navbar-brand\" href=\"/\">PaysonChen Blog</a>\n            </div>\n\n            <!-- Collect the nav links, forms, and other content for toggling -->\n            <div id=\"huxblog_navbar\">\n                <div class=\"navbar-collapse\">\n                    <ul class=\"nav navbar-nav navbar-right\">\n                        <li>\n                            <a href=\"/\">Home</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        <li>\n                            <a href=\"/about/\">About</a>\n                        </li>\n                        \n                        \n                        \n                        <li>\n                            <a href=\"/archive/\">Archive</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        <li class=\"search-icon\">\n                            <a href=\"javascript:void(0)\">\n                                <i class=\"fa fa-search\"></i>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n            <!-- /.navbar-collapse -->\n        </div>\n        <!-- /.container -->\n    </nav>\n\n    <script>\n        // Drop Bootstarp low-performance Navbar\n        // Use customize navbar with high-quality material design animation\n        // in high-perf jank-free CSS3 implementation\n        var $body = document.body;\n        var $toggle = document.querySelector('.navbar-toggle');\n        var $navbar = document.querySelector('#huxblog_navbar');\n        var $collapse = document.querySelector('.navbar-collapse');\n\n        var __HuxNav__ = {\n            close: function () {\n                $navbar.className = \" \";\n                // wait until animation end.\n                setTimeout(function () {\n                    // prevent frequently toggle\n                    if ($navbar.className.indexOf('in') < 0) {\n                        $collapse.style.height = \"0px\"\n                    }\n                }, 400)\n            },\n            open: function () {\n                $collapse.style.height = \"auto\"\n                $navbar.className += \" in\";\n            }\n        }\n\n        // Bind Event\n        $toggle.addEventListener('click', function (e) {\n            if ($navbar.className.indexOf('in') > 0) {\n                __HuxNav__.close()\n            } else {\n                __HuxNav__.open()\n            }\n        })\n\n        /**\n         * Since Fastclick is used to delegate 'touchstart' globally\n         * to hack 300ms delay in iOS by performing a fake 'click',\n         * Using 'e.stopPropagation' to stop 'touchstart' event from \n         * $toggle/$collapse will break global delegation.\n         * \n         * Instead, we use a 'e.target' filter to prevent handler\n         * added to document close HuxNav.  \n         *\n         * Also, we use 'click' instead of 'touchstart' as compromise\n         */\n        document.addEventListener('click', function (e) {\n            if (e.target == $toggle) return;\n            if (e.target.className == 'icon-bar') return;\n            __HuxNav__.close();\n        })\n    </script>\n    <!-- Search -->\n<div class=\"search-page\">\n  <div class=\"search-icon-close-container\">\n    <span class=\"search-icon-close\">\n      <i class=\"fa fa-chevron-down\"></i>\n    </span>\n  </div>\n  <div class=\"search-main container\">\n    <div class=\"row\">\n      <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n        <form></form>\n        <input type=\"text\" id=\"search-input\" placeholder=\"$ grep...\">\n        </form>\n        <div id=\"search-results\" class=\"mini-post-list\"></div>\n      </div>\n    </div>\n  </div>\n</div>\n\n    <!-- Image to hack wechat -->\n<!-- <img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\"> -->\n<!-- <img src=\"/img/home-bg.jpg\" width=\"0\" height=\"0\"> -->\n\n<!-- Post Header -->\n\n\n\n<style type=\"text/css\">\n    header.intro-header{\n        position: relative;\n        background-image: url('/img/home-bg.jpg');\n        background: ;\n    }\n\n    \n</style>\n\n<header class=\"intro-header\" >\n\n    <div class=\"header-mask\"></div>\n    \n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <div class=\"post-heading\">\n                    <div class=\"tags\">\n                        \n                    </div>\n                    <h1>RN 采坑</h1>\n                    \n                    <h2 class=\"subheading\"></h2>\n                    <span class=\"meta\">Posted by PaysonChen Blog on March 21, 2021</span>\n                </div>\n            </div>\n        </div>\n    </div>\n</header>\n\n\n\n\n\n\n<!-- Post Content -->\n<article>\n    <div class=\"container\">\n        <div class=\"row\">\n\n    <!-- Post Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                post-container\">\n\n                <!-- Multi-Lingual -->\n                \n\n\t\t\t\t<p>RN 报如下错误时</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n</pre></td><td class=\"rouge-code\"><pre>\n resolve try the following:\n\n  1. Clear watchman watches: `watchman watch-del-all`.\n\n  2. Delete the `node_modules` folder: `rm -rf node_modules &amp;&amp; npm install`. \n\n 3. Reset Metro Bundler cache: `rm -rf $TMPDIR/react-*` or `npm start -- --reset-cache`. \n\n  4. Remove haste cache: `rm -rf $TMPDIR/haste-map-react-native-packager-*`.\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>有可能因为 RN与react版本不匹配</p>\n\n<p>在执行</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n</pre></td><td class=\"rouge-code\"><pre>\nyarn add react-native\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>查看warning</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n</pre></td><td class=\"rouge-code\"><pre>\nwarning \"react-native &gt; use-subscription@1.5.0\" has unmet peer dependency \"react@^17.0.0\".\n\nwarning \" &gt; react-native@0.63.3\" has unmet peer dependency \"react@16.13.1\".\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>需要添加react依赖版本</p>\n\n\n                <hr style=\"visibility: hidden;\">\n                <ul class=\"pager\">\n                    \n                    \n                    <li class=\"next\">\n                        <a href=\"/2021/06/20/new-post/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Jenkins迁移\">\n                        Next<br>\n                        <span>Jenkins迁移</span>\n                        </a>\n                    </li>\n                    \n                </ul>\n                <hr style=\"visibility: hidden;\">\n\n                \n                <!-- disqus 评论框 start -->\n                <div class=\"comment\">\n                    <div id=\"disqus_thread\" class=\"disqus-thread\"></div>\n                </div>\n                <!-- disqus 评论框 end -->\n                \n\n                \n            </div>  \n\n    <!-- Side Catalog Container -->\n        \n            <div class=\"\n                col-lg-2 col-lg-offset-0\n                visible-lg-block\n                sidebar-container\n                catalog-container\">\n                <div class=\"side-catalog\">\n                    <hr class=\"hidden-sm hidden-xs\">\n                    <h5>\n                        <a class=\"catalog-toggle\" href=\"#\">CATALOG</a>\n                    </h5>\n                    <ul class=\"catalog-body\"></ul>\n                </div>\n            </div>\n        \n\n    <!-- Sidebar Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                sidebar-container\">\n\n                <!-- Featured Tags -->\n                \n\n\n<section>\n    \n        <hr class=\"hidden-sm hidden-xs\">\n    \n    <h5><a href=\"/archive/\">FEATURED TAGS</a></h5>\n    <div class=\"tags\">\n        \n        \n        \n        \n        \n    </div>\n</section>\n\n\n                <!-- Friends Blog -->\n                \n            </div>\n        </div>\n    </div>\n</article>\n\n<!-- add support for mathjax by voleking-->\n\n\n\n\n\n\n<!-- disqus 公共JS代码 start (一个网页只需插入一次) -->\n<script type=\"text/javascript\">\n    /* * * CONFIGURATION VARIABLES * * */\n    var disqus_shortname = \"Cyp\";\n    var disqus_identifier = \"/2021/03/21/rn___\";\n    var disqus_url = \"http://localhost:4000/2021/03/21/rn___/\";\n\n    (function() {\n        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;\n        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';\n        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);\n    })();\n</script>\n<!-- disqus 公共JS代码 end -->\n\n\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n      var d = document, t = 'script',\n          o = d.createElement(t),\n          s = d.getElementsByTagName(t)[0];\n      o.src = u;\n      if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n      s.parentNode.insertBefore(o, s);\n    }\n</script>\n<!-- anchor-js, Doc:http://bryanbraun.github.io/anchorjs/ -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/anchor-js/1.1.1/anchor.min.js\",function(){\n        anchors.options = {\n          visible: 'hover',\n          placement: 'right',\n          // icon: '#'\n        };\n        anchors.add().remove('.intro-header h1').remove('.subheading').remove('.sidebar-container h5');\n    })\n</script>\n<style>\n    /* place left on bigger screen */\n    @media all and (min-width: 800px) {\n        .anchorjs-link{\n            position: absolute;\n            left: -0.75em;\n            font-size: 1.1em;\n            margin-top : -0.1em;\n        }\n    }\n</style>\n\n\n\n    <!-- Footer -->\n<footer>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <!-- SNS Link -->\n                \n\n\n<ul class=\"list-inline text-center\">\n\n\n  \n  \n  \n  \n  \n  \n  \n</ul>\n\n                <p class=\"copyright text-muted\">\n                    Copyright &copy; PaysonChen Blog 2024\n                    <br>\n                    <!-- Powered by <a href=\"http://huangxuan.me\">Hux Blog</a> | -->\n                 <!--    <iframe style=\"margin-left: 2px; margin-bottom:-5px;\" frameborder=\"0\" scrolling=\"0\" width=\"100px\"\n                        height=\"20px\"\n                        src=\"https://ghbtns.com/github-btn.html?user=huxpro&repo=huxpro.github.io&type=star&count=true\">\n                    </iframe> -->\n                </p>\n            </div>\n        </div>\n    </div>\n</footer>\n\n<!-- jQuery -->\n<script src=\"/js/jquery.min.js \"></script>\n\n<!-- Bootstrap Core JavaScript -->\n<!-- Currently, only navbar scroll-down effect at desktop still depends on this -->\n<script src=\"/js/bootstrap.min.js \"></script>\n\n<!-- Custom Theme JavaScript -->\n<script src=\"/js/hux-blog.min.js \"></script>\n\n<!-- Simple Jekyll Search -->\n<script src=\"/js/simple-jekyll-search.min.js\"></script>\n\n<!-- Service Worker -->\n\n<script src=\"/js/snackbar.js \"></script>\n<script src=\"/js/sw-registration.js \"></script>\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n        var d = document, t = 'script',\n            o = d.createElement(t),\n            s = d.getElementsByTagName(t)[0];\n        o.src = u;\n        if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n        s.parentNode.insertBefore(o, s);\n    }\n</script>\n\n<!--\n     Because of the native support for backtick-style fenced code blocks\n     right within the Markdown is landed in Github Pages,\n     From V1.6, There is no need for Highlight.js,\n     so Huxblog drops it officially.\n\n     - https://github.com/blog/2100-github-pages-now-faster-and-simpler-with-jekyll-3-0\n     - https://help.github.com/articles/creating-and-highlighting-code-blocks/\n     - https://github.com/jneen/rouge/wiki/list-of-supported-languages-and-lexers\n-->\n<!--\n    <script>\n        async(\"http://cdn.bootcss.com/highlight.js/8.6/highlight.min.js\", function(){\n            hljs.initHighlightingOnLoad();\n        })\n    </script>\n    <link href=\"http://cdn.bootcss.com/highlight.js/8.6/styles/github.min.css\" rel=\"stylesheet\">\n-->\n\n\n\n\n\n\n\n<!--fastClick.js -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/fastclick/1.0.6/fastclick.min.js\", function () {\n        var $nav = document.querySelector(\"nav\");\n        if ($nav) FastClick.attach($nav);\n    })\n</script>\n\n\n<!-- Google Analytics -->\n\n\n\n<!-- Baidu Tongji -->\n\n\n\n<!-- Side Catalog -->\n\n<script type=\"text/javascript\">\n    function generateCatalog(selector) {\n\n        // interop with multilangual \n        if ('' == 'true') {\n            _containerSelector = 'div.post-container.active'\n        } else {\n            _containerSelector = 'div.post-container'\n        }\n\n        // init\n        var P = $(_containerSelector), a, n, t, l, i, c;\n        a = P.find('h1,h2,h3,h4,h5,h6');\n\n        // clean\n        $(selector).html('')\n\n        // appending\n        a.each(function () {\n            n = $(this).prop('tagName').toLowerCase();\n            i = \"#\" + $(this).prop('id');\n            t = $(this).text();\n            c = $('<a href=\"' + i + '\" rel=\"nofollow\">' + t + '</a>');\n            l = $('<li class=\"' + n + '_nav\"></li>').append(c);\n            $(selector).append(l);\n        });\n        return true;\n    }\n\n    generateCatalog(\".catalog-body\");\n\n    // toggle side catalog\n    $(\".catalog-toggle\").click((function (e) {\n        e.preventDefault();\n        $('.side-catalog').toggleClass(\"fold\")\n    }))\n\n    /*\n     * Doc: https://github.com/davist11/jQuery-One-Page-Nav\n     * Fork by Hux to support padding\n     */\n    async(\"/js/jquery.nav.js\", function () {\n        $('.catalog-body').onePageNav({\n            currentClass: \"active\",\n            changeHash: !1,\n            easing: \"swing\",\n            filter: \"\",\n            scrollSpeed: 700,\n            scrollOffset: 0,\n            scrollThreshold: .2,\n            begin: null,\n            end: null,\n            scrollChange: null,\n            padding: 80\n        });\n    });\n</script>\n\n\n\n<!-- Multi-Lingual -->\n\n\n<!-- Simple Jekyll Search -->\n<script>\n    // https://stackoverflow.com/questions/1912501/unescape-html-entities-in-javascript\n    function htmlDecode(input) {\n        var e = document.createElement('textarea');\n        e.innerHTML = input;\n        // handle case of empty input\n        return e.childNodes.length === 0 ? \"\" : e.childNodes[0].nodeValue;\n    }\n\n    SimpleJekyllSearch({\n        searchInput: document.getElementById('search-input'),\n        resultsContainer: document.getElementById('search-results'),\n        json: '/search.json',\n        searchResultTemplate: '<div class=\"post-preview item\"><a href=\"{url}\"><h2 class=\"post-title\">{title}</h2><h3 class=\"post-subtitle\">{subtitle}</h3><hr></a></div>',\n        noResultsText: 'No results',\n        limit: 50,\n        fuzzy: false,\n        // a hack to get escaped subtitle unescaped. for some reason, \n        // post.subtitle w/o escape filter nuke entire search.\n        templateMiddleware: function (prop, value, template) {\n            if (prop === 'subtitle' || prop === 'title') {\n                if (value.indexOf(\"code\")) {\n                    return htmlDecode(value);\n                } else {\n                    return value;\n                }\n            }\n        }\n    });\n\n    $(document).ready(function () {\n        var $searchPage = $('.search-page');\n        var $searchOpen = $('.search-icon');\n        var $searchClose = $('.search-icon-close');\n        var $searchInput = $('#search-input');\n        var $body = $('body');\n\n        $searchOpen.on('click', function (e) {\n            e.preventDefault();\n            $searchPage.toggleClass('search-active');\n            var prevClasses = $body.attr('class') || '';\n            setTimeout(function () {\n                $body.addClass('no-scroll');\n            }, 400)\n\n            if ($searchPage.hasClass('search-active')) {\n                $searchClose.on('click', function (e) {\n                    e.preventDefault();\n                    $searchPage.removeClass('search-active');\n                    $body.attr('class', prevClasses);  // from closure \n                });\n                $searchInput.focus();\n            }\n        });\n    });\n</script>\n\n\n<!-- Image to hack wechat -->\n<img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\" />\n<!-- Migrate from head to bottom, no longer block render and still work -->\n\n</body>\n\n</html>\n","excerpt":"<p>RN 报如下错误时</p>\n","url":"/2021/03/21/rn___/","next":{"id":"/2021/06/20/new-post","tags":[],"relative_path":"_posts/2021-06-20-new-post.md","collection":"posts","content":"<h2 id=\"1jenkins迁移目录\">1、Jenkins迁移目录</h2>\n\n<h3 id=\"11-jenkins安装后的目录\">1.1 Jenkins安装后的目录</h3>\n\n<p>Jenkins的安装不再赘述可以参考https://www.jenkins.io/zh/doc/book/installing/，</p>\n\n<p>安装完之后Jenkins的目录是隐藏目录，可以通过命令行显示</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n</pre></td><td class=\"rouge-code\"><pre>defaults write com.apple.finder AppleShowAllFiles <span class=\"nt\">-boolean</span> <span class=\"nb\">true \n</span>killall Finder\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h3 id=\"12-jobs\">1.2 jobs</h3>\n\n<p>jobs目录为Jenkins存储【项目配置】及【构建历史】的文件夹，</p>\n\n<p><img src=\"/img/jenkins_qy/jenkins_catalog.png\" alt=\"img\" /></p>\n\n<p>config.xml为项目配置</p>\n\n<p>builds为构建历史包含</p>\n\n<ul>\n  <li>\n    <p>build.xml</p>\n\n    <p>构建信息包括：actions、queueId、timestamp、startTime、result、duration、charset、keepLog、builtOn、workspace、hudsonVersion、scm、culprits</p>\n  </li>\n  <li>\n    <p>​\tchangelog.xml</p>\n\n    <p>代码提交记录</p>\n\n    <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n</pre></td><td class=\"rouge-code\"><pre>commit 571f1f4e25f8d35234f31a4e5270ab4eea5f7623\ntree 11663eebbb089bc414048ffbf7c91de331d021cc\nparent 0a3d1d8057ba3e33055d8bfafcb25d00f3a5f93b\nauthor xxx &lt;xxx@xxx.com&gt; 2021-06-30 14:27:29 +0800\ncommitter xxx &lt;xxx@xxx.com&gt; 2021-06-30 14:27:29 +0800\n  \n    修复双卡运营商切换不更新\n  \n</pre></td></tr></tbody></table></code></pre></div>    </div>\n  </li>\n  <li>\n    <p>​\tlog</p>\n\n    <p>构建日志，Jenkins构建历史中的控制台输出</p>\n  </li>\n</ul>\n\n<h2 id=\"2迁移项目配置\">2、迁移项目配置</h2>\n\n<h3 id=\"21-手工迁移\">2.1 手工迁移</h3>\n\n<p>手工迁移能完成Jenkins迁移的工作，但是操作反锁且无法保障完整性，在迁移初期果断放弃。</p>\n\n<h3 id=\"22-备份jobs迁移\">2.2 备份Jobs迁移</h3>\n\n<p>步骤1：目标机开启SSH服务</p>\n\n<p>步骤2：源机使用scp命令，将源机需要迁移的项目在Jobs目录下的文件夹远程复制到目标机.jenkins/Jobs目标下</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>scp <span class=\"nt\">-r</span> /Users/chen/.jenkins/jobs/SPM_iOS xxx@xx.xx.xxx.xxx:/Users/xx/.jenkins/jobs/SPM_iOS\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>步骤3：目标机Jenkins 如果配置的Git账号不一样，需要修改Git Credentials</p>\n\n<p>步骤4：目标机需要刷新配置</p>\n\n<p>​\t<img src=\"/img/jenkins_qy/jenkins_mng.png\" alt=\"image-20210811104136231\" /></p>\n\n<p>​\t<img src=\"/img/jenkins_qy/jenkins_reload.png\" alt=\"image-20210811104136231\" /></p>\n\n<p>步骤5：如果有外部脚本调用（sh、Python），需要将相应的脚本也通过scp命令拷贝到目标机相对路径下</p>\n\n<p>步骤6：尝试构建。如果成功忽略下面步骤，如果失败，构建中可能有些环境不一致,比如uglifyjs没有安装</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n</pre></td><td class=\"rouge-code\"><pre>uglifyjs: command not found\nBuild step 'Execute shell' marked build as failure\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>*步骤7：安装缺失的环境(这里缺失uglify，缺失其他的可以自行安装)</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>npm <span class=\"nb\">install </span>uglify-js <span class=\"nt\">-g</span>   \n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>*步骤8：安装完如果还遇到步骤5的失败，在Jenkins配置的shell中添加,刷新当前环境</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>source ~/.bash_profile\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p><img src=\"/img/jenkins_qy/jenkins_shell.png\" alt=\"image-20210811104136231\" /></p>\n\n<h2 id=\"3其他\">3、其他</h2>\n\n<p>最后如无其他后续需求，建议关闭目标机SSH服务</p>\n\n","name":"2021-06-20-new-post.md","previous":{"id":"/2021/03/21/rn___","tags":[],"relative_path":"_posts/2021-03-21-rn___.md","collection":"posts","name":"2021-03-21-rn___.md","url":"/2021/03/21/rn___/","title":"RN 采坑","date":"2021-03-21 00:00:00 +0800","categories":[],"path":"_posts/2021-03-21-rn___.md","draft":false,"layout":"post","slug":"rn___","ext":".md"},"output":"<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"google-site-verification\" content=\"xBT4GhYoi5qRD5tr338pgPM5OWHHIDR6mNg1a3euekI\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, viewport-fit=cover\">\n    <meta name=\"description\" content=\"与你一起发现更大的世界。\">\n    <meta name=\"keywords\"  content=\"PaysonChen,iOS,流媒体\">\n    <meta name=\"theme-color\" content=\"#000000\">\n    \n    <!-- Open Graph -->\n    <meta property=\"og:title\" content=\"Jenkins迁移 - PaysonChen的博客 | PaysonChen Blog\">\n    \n    <meta property=\"og:type\" content=\"article\">\n    <meta property=\"og:description\" content=\"1、Jenkins迁移目录\n\">\n    \n    \n    <meta property=\"article:published_time\" content=\"2021-06-20T00:00:00Z\">\n    \n    \n    <meta property=\"article:author\" content=\"PaysonChen\">\n    \n    \n    \n    <meta property=\"og:image\" content=\"http://localhost:4000\">\n    <meta property=\"og:url\" content=\"http://localhost:4000/2021/06/20/new-post/\">\n    <meta property=\"og:site_name\" content=\"PaysonChen的博客 | PaysonChen Blog\">\n    \n    <title>Jenkins迁移 - PaysonChen的博客 | PaysonChen Blog</title>\n\n    <!-- Web App Manifest -->\n    <link rel=\"manifest\" href=\"/pwa/manifest.json\">\n\n    <!-- Favicon -->\n    <link rel=\"shortcut icon\" href=\"/img/favicon.ico\">\n    \n    <!-- Canonical URL -->\n    <link rel=\"canonical\" href=\"http://localhost:4000/2021/06/20/new-post/\">\n\n    <!-- Bootstrap Core CSS -->\n    <link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\">\n\n    <!-- Custom CSS -->\n    <link rel=\"stylesheet\" href=\"/css/hux-blog.min.css\">\n\n    <!-- Custom Fonts -->\n    <!-- <link href=\"http://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\"> -->\n    <!-- Hux change font-awesome CDN to qiniu -->\n    <link href=\"//cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css\" rel=\"stylesheet\" type=\"text/css\">\n\n\n    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->\n    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->\n    <!--[if lt IE 9]>\n        <script src=\"https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js\"></script>\n        <script src=\"https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js\"></script>\n    <![endif]-->\n\n    <!-- ga & ba script hoook -->\n    <script></script>\n</head>\n\n\n<!-- hack iOS CSS :active style -->\n<body ontouchstart=\"\">\n\n    <!-- Navigation -->\n\n    <nav class=\"navbar navbar-default navbar-custom navbar-fixed-top\">\n        \n        <div class=\"container-fluid\">\n            <!-- Brand and toggle get grouped for better mobile display -->\n            <div class=\"navbar-header page-scroll\">\n                <button type=\"button\" class=\"navbar-toggle\">\n                    <span class=\"sr-only\">Toggle navigation</span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                    <span class=\"icon-bar\"></span>\n                </button>\n                <a class=\"navbar-brand\" href=\"/\">PaysonChen Blog</a>\n            </div>\n\n            <!-- Collect the nav links, forms, and other content for toggling -->\n            <div id=\"huxblog_navbar\">\n                <div class=\"navbar-collapse\">\n                    <ul class=\"nav navbar-nav navbar-right\">\n                        <li>\n                            <a href=\"/\">Home</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        <li>\n                            <a href=\"/about/\">About</a>\n                        </li>\n                        \n                        \n                        \n                        <li>\n                            <a href=\"/archive/\">Archive</a>\n                        </li>\n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        <li class=\"search-icon\">\n                            <a href=\"javascript:void(0)\">\n                                <i class=\"fa fa-search\"></i>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n            <!-- /.navbar-collapse -->\n        </div>\n        <!-- /.container -->\n    </nav>\n\n    <script>\n        // Drop Bootstarp low-performance Navbar\n        // Use customize navbar with high-quality material design animation\n        // in high-perf jank-free CSS3 implementation\n        var $body = document.body;\n        var $toggle = document.querySelector('.navbar-toggle');\n        var $navbar = document.querySelector('#huxblog_navbar');\n        var $collapse = document.querySelector('.navbar-collapse');\n\n        var __HuxNav__ = {\n            close: function () {\n                $navbar.className = \" \";\n                // wait until animation end.\n                setTimeout(function () {\n                    // prevent frequently toggle\n                    if ($navbar.className.indexOf('in') < 0) {\n                        $collapse.style.height = \"0px\"\n                    }\n                }, 400)\n            },\n            open: function () {\n                $collapse.style.height = \"auto\"\n                $navbar.className += \" in\";\n            }\n        }\n\n        // Bind Event\n        $toggle.addEventListener('click', function (e) {\n            if ($navbar.className.indexOf('in') > 0) {\n                __HuxNav__.close()\n            } else {\n                __HuxNav__.open()\n            }\n        })\n\n        /**\n         * Since Fastclick is used to delegate 'touchstart' globally\n         * to hack 300ms delay in iOS by performing a fake 'click',\n         * Using 'e.stopPropagation' to stop 'touchstart' event from \n         * $toggle/$collapse will break global delegation.\n         * \n         * Instead, we use a 'e.target' filter to prevent handler\n         * added to document close HuxNav.  \n         *\n         * Also, we use 'click' instead of 'touchstart' as compromise\n         */\n        document.addEventListener('click', function (e) {\n            if (e.target == $toggle) return;\n            if (e.target.className == 'icon-bar') return;\n            __HuxNav__.close();\n        })\n    </script>\n    <!-- Search -->\n<div class=\"search-page\">\n  <div class=\"search-icon-close-container\">\n    <span class=\"search-icon-close\">\n      <i class=\"fa fa-chevron-down\"></i>\n    </span>\n  </div>\n  <div class=\"search-main container\">\n    <div class=\"row\">\n      <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n        <form></form>\n        <input type=\"text\" id=\"search-input\" placeholder=\"$ grep...\">\n        </form>\n        <div id=\"search-results\" class=\"mini-post-list\"></div>\n      </div>\n    </div>\n  </div>\n</div>\n\n    <!-- Image to hack wechat -->\n<!-- <img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\"> -->\n<!-- <img src=\"/img/post-bg-2015.jpg\" width=\"0\" height=\"0\"> -->\n\n<!-- Post Header -->\n\n\n\n<style type=\"text/css\">\n    header.intro-header{\n        position: relative;\n        background-image: url('/img/post-bg-2015.jpg');\n        background: ;\n    }\n\n    \n</style>\n\n<header class=\"intro-header\" >\n\n    <div class=\"header-mask\"></div>\n    \n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <div class=\"post-heading\">\n                    <div class=\"tags\">\n                        \n                    </div>\n                    <h1>Jenkins迁移</h1>\n                    \n                    <h2 class=\"subheading\">This is a subtitle</h2>\n                    <span class=\"meta\">Posted by PaysonChen on June 20, 2021</span>\n                </div>\n            </div>\n        </div>\n    </div>\n</header>\n\n\n\n\n\n\n<!-- Post Content -->\n<article>\n    <div class=\"container\">\n        <div class=\"row\">\n\n    <!-- Post Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                post-container\">\n\n                <!-- Multi-Lingual -->\n                \n\n\t\t\t\t<h2 id=\"1jenkins迁移目录\">1、Jenkins迁移目录</h2>\n\n<h3 id=\"11-jenkins安装后的目录\">1.1 Jenkins安装后的目录</h3>\n\n<p>Jenkins的安装不再赘述可以参考https://www.jenkins.io/zh/doc/book/installing/，</p>\n\n<p>安装完之后Jenkins的目录是隐藏目录，可以通过命令行显示</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n</pre></td><td class=\"rouge-code\"><pre>defaults write com.apple.finder AppleShowAllFiles <span class=\"nt\">-boolean</span> <span class=\"nb\">true \n</span>killall Finder\n\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<h3 id=\"12-jobs\">1.2 jobs</h3>\n\n<p>jobs目录为Jenkins存储【项目配置】及【构建历史】的文件夹，</p>\n\n<p><img src=\"/img/jenkins_qy/jenkins_catalog.png\" alt=\"img\" /></p>\n\n<p>config.xml为项目配置</p>\n\n<p>builds为构建历史包含</p>\n\n<ul>\n  <li>\n    <p>build.xml</p>\n\n    <p>构建信息包括：actions、queueId、timestamp、startTime、result、duration、charset、keepLog、builtOn、workspace、hudsonVersion、scm、culprits</p>\n  </li>\n  <li>\n    <p>​\tchangelog.xml</p>\n\n    <p>代码提交记录</p>\n\n    <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n</pre></td><td class=\"rouge-code\"><pre>commit 571f1f4e25f8d35234f31a4e5270ab4eea5f7623\ntree 11663eebbb089bc414048ffbf7c91de331d021cc\nparent 0a3d1d8057ba3e33055d8bfafcb25d00f3a5f93b\nauthor xxx &lt;xxx@xxx.com&gt; 2021-06-30 14:27:29 +0800\ncommitter xxx &lt;xxx@xxx.com&gt; 2021-06-30 14:27:29 +0800\n  \n    修复双卡运营商切换不更新\n  \n</pre></td></tr></tbody></table></code></pre></div>    </div>\n  </li>\n  <li>\n    <p>​\tlog</p>\n\n    <p>构建日志，Jenkins构建历史中的控制台输出</p>\n  </li>\n</ul>\n\n<h2 id=\"2迁移项目配置\">2、迁移项目配置</h2>\n\n<h3 id=\"21-手工迁移\">2.1 手工迁移</h3>\n\n<p>手工迁移能完成Jenkins迁移的工作，但是操作反锁且无法保障完整性，在迁移初期果断放弃。</p>\n\n<h3 id=\"22-备份jobs迁移\">2.2 备份Jobs迁移</h3>\n\n<p>步骤1：目标机开启SSH服务</p>\n\n<p>步骤2：源机使用scp命令，将源机需要迁移的项目在Jobs目录下的文件夹远程复制到目标机.jenkins/Jobs目标下</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>scp <span class=\"nt\">-r</span> /Users/chen/.jenkins/jobs/SPM_iOS xxx@xx.xx.xxx.xxx:/Users/xx/.jenkins/jobs/SPM_iOS\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>步骤3：目标机Jenkins 如果配置的Git账号不一样，需要修改Git Credentials</p>\n\n<p>步骤4：目标机需要刷新配置</p>\n\n<p>​\t<img src=\"/img/jenkins_qy/jenkins_mng.png\" alt=\"image-20210811104136231\" /></p>\n\n<p>​\t<img src=\"/img/jenkins_qy/jenkins_reload.png\" alt=\"image-20210811104136231\" /></p>\n\n<p>步骤5：如果有外部脚本调用（sh、Python），需要将相应的脚本也通过scp命令拷贝到目标机相对路径下</p>\n\n<p>步骤6：尝试构建。如果成功忽略下面步骤，如果失败，构建中可能有些环境不一致,比如uglifyjs没有安装</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n</pre></td><td class=\"rouge-code\"><pre>uglifyjs: command not found\nBuild step 'Execute shell' marked build as failure\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>*步骤7：安装缺失的环境(这里缺失uglify，缺失其他的可以自行安装)</p>\n\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>npm <span class=\"nb\">install </span>uglify-js <span class=\"nt\">-g</span>   \n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p>*步骤8：安装完如果还遇到步骤5的失败，在Jenkins配置的shell中添加,刷新当前环境</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n</pre></td><td class=\"rouge-code\"><pre>source ~/.bash_profile\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<p><img src=\"/img/jenkins_qy/jenkins_shell.png\" alt=\"image-20210811104136231\" /></p>\n\n<h2 id=\"3其他\">3、其他</h2>\n\n<p>最后如无其他后续需求，建议关闭目标机SSH服务</p>\n\n\n\n                <hr style=\"visibility: hidden;\">\n                <ul class=\"pager\">\n                    \n                    <li class=\"previous\">\n                        <a href=\"/2021/03/21/rn___/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"RN 采坑\">\n                        Previous<br>\n                        <span>RN 采坑</span>\n                        </a>\n                    </li>\n                    \n                    \n                    <li class=\"next\">\n                        <a href=\"/2021/09/13/crash/\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"iOS 10.x 内存Crash 排查 纪要\">\n                        Next<br>\n                        <span>iOS 10.x 内存Crash 排查 纪要</span>\n                        </a>\n                    </li>\n                    \n                </ul>\n                <hr style=\"visibility: hidden;\">\n\n                \n                <!-- disqus 评论框 start -->\n                <div class=\"comment\">\n                    <div id=\"disqus_thread\" class=\"disqus-thread\"></div>\n                </div>\n                <!-- disqus 评论框 end -->\n                \n\n                \n            </div>  \n\n    <!-- Side Catalog Container -->\n        \n            <div class=\"\n                col-lg-2 col-lg-offset-0\n                visible-lg-block\n                sidebar-container\n                catalog-container\">\n                <div class=\"side-catalog\">\n                    <hr class=\"hidden-sm hidden-xs\">\n                    <h5>\n                        <a class=\"catalog-toggle\" href=\"#\">CATALOG</a>\n                    </h5>\n                    <ul class=\"catalog-body\"></ul>\n                </div>\n            </div>\n        \n\n    <!-- Sidebar Container -->\n            <div class=\"\n                col-lg-8 col-lg-offset-2\n                col-md-10 col-md-offset-1\n                sidebar-container\">\n\n                <!-- Featured Tags -->\n                \n\n\n<section>\n    \n        <hr class=\"hidden-sm hidden-xs\">\n    \n    <h5><a href=\"/archive/\">FEATURED TAGS</a></h5>\n    <div class=\"tags\">\n        \n        \n        \n        \n        \n    </div>\n</section>\n\n\n                <!-- Friends Blog -->\n                \n            </div>\n        </div>\n    </div>\n</article>\n\n<!-- add support for mathjax by voleking-->\n\n\n\n\n\n\n<!-- disqus 公共JS代码 start (一个网页只需插入一次) -->\n<script type=\"text/javascript\">\n    /* * * CONFIGURATION VARIABLES * * */\n    var disqus_shortname = \"Cyp\";\n    var disqus_identifier = \"/2021/06/20/new-post\";\n    var disqus_url = \"http://localhost:4000/2021/06/20/new-post/\";\n\n    (function() {\n        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;\n        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';\n        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);\n    })();\n</script>\n<!-- disqus 公共JS代码 end -->\n\n\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n      var d = document, t = 'script',\n          o = d.createElement(t),\n          s = d.getElementsByTagName(t)[0];\n      o.src = u;\n      if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n      s.parentNode.insertBefore(o, s);\n    }\n</script>\n<!-- anchor-js, Doc:http://bryanbraun.github.io/anchorjs/ -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/anchor-js/1.1.1/anchor.min.js\",function(){\n        anchors.options = {\n          visible: 'hover',\n          placement: 'right',\n          // icon: '#'\n        };\n        anchors.add().remove('.intro-header h1').remove('.subheading').remove('.sidebar-container h5');\n    })\n</script>\n<style>\n    /* place left on bigger screen */\n    @media all and (min-width: 800px) {\n        .anchorjs-link{\n            position: absolute;\n            left: -0.75em;\n            font-size: 1.1em;\n            margin-top : -0.1em;\n        }\n    }\n</style>\n\n\n\n    <!-- Footer -->\n<footer>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n                <!-- SNS Link -->\n                \n\n\n<ul class=\"list-inline text-center\">\n\n\n  \n  \n  \n  \n  \n  \n  \n</ul>\n\n                <p class=\"copyright text-muted\">\n                    Copyright &copy; PaysonChen Blog 2024\n                    <br>\n                    <!-- Powered by <a href=\"http://huangxuan.me\">Hux Blog</a> | -->\n                 <!--    <iframe style=\"margin-left: 2px; margin-bottom:-5px;\" frameborder=\"0\" scrolling=\"0\" width=\"100px\"\n                        height=\"20px\"\n                        src=\"https://ghbtns.com/github-btn.html?user=huxpro&repo=huxpro.github.io&type=star&count=true\">\n                    </iframe> -->\n                </p>\n            </div>\n        </div>\n    </div>\n</footer>\n\n<!-- jQuery -->\n<script src=\"/js/jquery.min.js \"></script>\n\n<!-- Bootstrap Core JavaScript -->\n<!-- Currently, only navbar scroll-down effect at desktop still depends on this -->\n<script src=\"/js/bootstrap.min.js \"></script>\n\n<!-- Custom Theme JavaScript -->\n<script src=\"/js/hux-blog.min.js \"></script>\n\n<!-- Simple Jekyll Search -->\n<script src=\"/js/simple-jekyll-search.min.js\"></script>\n\n<!-- Service Worker -->\n\n<script src=\"/js/snackbar.js \"></script>\n<script src=\"/js/sw-registration.js \"></script>\n\n\n<!-- async load function -->\n<script>\n    function async(u, c) {\n        var d = document, t = 'script',\n            o = d.createElement(t),\n            s = d.getElementsByTagName(t)[0];\n        o.src = u;\n        if (c) { o.addEventListener('load', function (e) { c(null, e); }, false); }\n        s.parentNode.insertBefore(o, s);\n    }\n</script>\n\n<!--\n     Because of the native support for backtick-style fenced code blocks\n     right within the Markdown is landed in Github Pages,\n     From V1.6, There is no need for Highlight.js,\n     so Huxblog drops it officially.\n\n     - https://github.com/blog/2100-github-pages-now-faster-and-simpler-with-jekyll-3-0\n     - https://help.github.com/articles/creating-and-highlighting-code-blocks/\n     - https://github.com/jneen/rouge/wiki/list-of-supported-languages-and-lexers\n-->\n<!--\n    <script>\n        async(\"http://cdn.bootcss.com/highlight.js/8.6/highlight.min.js\", function(){\n            hljs.initHighlightingOnLoad();\n        })\n    </script>\n    <link href=\"http://cdn.bootcss.com/highlight.js/8.6/styles/github.min.css\" rel=\"stylesheet\">\n-->\n\n\n\n\n\n\n\n<!--fastClick.js -->\n<script>\n    async(\"//cdnjs.cloudflare.com/ajax/libs/fastclick/1.0.6/fastclick.min.js\", function () {\n        var $nav = document.querySelector(\"nav\");\n        if ($nav) FastClick.attach($nav);\n    })\n</script>\n\n\n<!-- Google Analytics -->\n\n\n\n<!-- Baidu Tongji -->\n\n\n\n<!-- Side Catalog -->\n\n<script type=\"text/javascript\">\n    function generateCatalog(selector) {\n\n        // interop with multilangual \n        if ('' == 'true') {\n            _containerSelector = 'div.post-container.active'\n        } else {\n            _containerSelector = 'div.post-container'\n        }\n\n        // init\n        var P = $(_containerSelector), a, n, t, l, i, c;\n        a = P.find('h1,h2,h3,h4,h5,h6');\n\n        // clean\n        $(selector).html('')\n\n        // appending\n        a.each(function () {\n            n = $(this).prop('tagName').toLowerCase();\n            i = \"#\" + $(this).prop('id');\n            t = $(this).text();\n            c = $('<a href=\"' + i + '\" rel=\"nofollow\">' + t + '</a>');\n            l = $('<li class=\"' + n + '_nav\"></li>').append(c);\n            $(selector).append(l);\n        });\n        return true;\n    }\n\n    generateCatalog(\".catalog-body\");\n\n    // toggle side catalog\n    $(\".catalog-toggle\").click((function (e) {\n        e.preventDefault();\n        $('.side-catalog').toggleClass(\"fold\")\n    }))\n\n    /*\n     * Doc: https://github.com/davist11/jQuery-One-Page-Nav\n     * Fork by Hux to support padding\n     */\n    async(\"/js/jquery.nav.js\", function () {\n        $('.catalog-body').onePageNav({\n            currentClass: \"active\",\n            changeHash: !1,\n            easing: \"swing\",\n            filter: \"\",\n            scrollSpeed: 700,\n            scrollOffset: 0,\n            scrollThreshold: .2,\n            begin: null,\n            end: null,\n            scrollChange: null,\n            padding: 80\n        });\n    });\n</script>\n\n\n\n<!-- Multi-Lingual -->\n\n\n<!-- Simple Jekyll Search -->\n<script>\n    // https://stackoverflow.com/questions/1912501/unescape-html-entities-in-javascript\n    function htmlDecode(input) {\n        var e = document.createElement('textarea');\n        e.innerHTML = input;\n        // handle case of empty input\n        return e.childNodes.length === 0 ? \"\" : e.childNodes[0].nodeValue;\n    }\n\n    SimpleJekyllSearch({\n        searchInput: document.getElementById('search-input'),\n        resultsContainer: document.getElementById('search-results'),\n        json: '/search.json',\n        searchResultTemplate: '<div class=\"post-preview item\"><a href=\"{url}\"><h2 class=\"post-title\">{title}</h2><h3 class=\"post-subtitle\">{subtitle}</h3><hr></a></div>',\n        noResultsText: 'No results',\n        limit: 50,\n        fuzzy: false,\n        // a hack to get escaped subtitle unescaped. for some reason, \n        // post.subtitle w/o escape filter nuke entire search.\n        templateMiddleware: function (prop, value, template) {\n            if (prop === 'subtitle' || prop === 'title') {\n                if (value.indexOf(\"code\")) {\n                    return htmlDecode(value);\n                } else {\n                    return value;\n                }\n            }\n        }\n    });\n\n    $(document).ready(function () {\n        var $searchPage = $('.search-page');\n        var $searchOpen = $('.search-icon');\n        var $searchClose = $('.search-icon-close');\n        var $searchInput = $('#search-input');\n        var $body = $('body');\n\n        $searchOpen.on('click', function (e) {\n            e.preventDefault();\n            $searchPage.toggleClass('search-active');\n            var prevClasses = $body.attr('class') || '';\n            setTimeout(function () {\n                $body.addClass('no-scroll');\n            }, 400)\n\n            if ($searchPage.hasClass('search-active')) {\n                $searchClose.on('click', function (e) {\n                    e.preventDefault();\n                    $searchPage.removeClass('search-active');\n                    $body.attr('class', prevClasses);  // from closure \n                });\n                $searchInput.focus();\n            }\n        });\n    });\n</script>\n\n\n<!-- Image to hack wechat -->\n<img src=\"/img/icon_wechat.png\" width=\"0\" height=\"0\" />\n<!-- Migrate from head to bottom, no longer block render and still work -->\n\n</body>\n\n</html>\n","excerpt":"<h2 id=\"1jenkins迁移目录\">1、Jenkins迁移目录</h2>\n","url":"/2021/06/20/new-post/","next":{"id":"/2021/09/13/crash","tags":[],"relative_path":"_posts/2021-09-13-crash.md","collection":"posts","name":"2021-09-13-crash.md","url":"/2021/09/13/crash/","title":"iOS 10.x 内存Crash 排查 纪要","date":"2021-09-13 00:00:00 +0800","categories":[],"path":"_posts/2021-09-13-crash.md","draft":false,"layout":"post","subtitle":"This is a subtitle","author":"PaysonChen","header-img":"img/post-bg-ios9-web.jpg","slug":"crash","ext":".md"},"title":"Jenkins迁移","date":"2021-06-20 00:00:00 +0800","categories":[],"path":"_posts/2021-06-20-new-post.md","draft":false,"layout":"post","subtitle":"This is a subtitle","author":"PaysonChen","header-img":"img/post-bg-2015.jpg","slug":"new-post","ext":".md"},"title":"RN 采坑","date":"2021-03-21 00:00:00 +0800","categories":[],"path":"_posts/2021-03-21-rn___.md","draft":false,"layout":"post","slug":"rn___","ext":".md"}]
      
    
  },
  "pages": [
    
      
      {
        "id": "/404.html",
        
          "layout": "default"
          ,
        
          "title": 404
          ,
        
          "hide-in-nav": true
          ,
        
          "description": "你来到了没有知识的荒原 :("
          ,
        
          "header-img": "img/404-bg.jpg"
          ,
        
          "permalink": "/404.html"
          ,
        
          "content": "<!-- Page Header -->\n\n\n\n\n\n\n\n<header class=\"intro-header\" style=\"background-image: url('/img/404-bg.jpg')\">\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n        \n        <div class=\"site-heading\" id=\"tag-heading\">\n        \n          <h1>404</h1>\n          <span class=\"subheading\">你来到了没有知识的荒原 :(</span>\n        </div>\n      </div>\n    </div>\n  </div>\n</header>\n\n\n<script>\n\tdocument.body.classList.add('page-fullscreen');\n</script>\n"
          ,
        
          "dir": "/"
          ,
        
          "excerpt": null
          ,
        
          "name": "404.html"
          ,
        
          "path": "404.html"
          ,
        
          "url": "/404.html"
          
        
      }
      ,
      
    
      
      {
        "id": "/about/",
        
          "layout": "page"
          ,
        
          "title": "About"
          ,
        
          "description": "《你是我的梦想》"
          ,
        
          "header-img": "img/about-bg.jpg"
          ,
        
          "multilingual": true
          ,
        
          "content": "                <!-- Language Selector -->\n                <select class=\"sel-lang\" onchange= \"onLanChange(this.options[this.options.selectedIndex].value)\">\n                    <option value=\"0\" selected> 中文 | Chinese </option>\n                    <option value=\"1\"> 英文 | English </option>\n                </select>\n\n\n\n<!-- Chinese Version -->\n<div class=\"zh post-container\">\n    \n    <p>Hi，我是陈燕鹏，腾讯音乐娱乐iOS工程师，往返于改革开放两个特区：深圳&lt;—&gt;厦门两地，一位迷失于代码之中的人生探索者。</p>\n\n</div>\n\n<!-- English Version -->\n<div class=\"en post-container\">\n    \n    <p>Hi, I am chenyanpeng</p>\n\n</div>\n\n\n\n<!-- disqus 评论框 start -->\n<div class=\"comment\">\n    <div id=\"disqus_thread\" class=\"disqus-thread\">\n\n    </div>\n</div>\n<!-- disqus 评论框 end -->\n\n<!-- disqus 公共JS代码 start (一个网页只需插入一次) -->\n<script type=\"text/javascript\">\n    /* * * CONFIGURATION VARIABLES * * */\n    var disqus_shortname = \"Cyp\";\n    var disqus_identifier = \"Cyp//about/\";\n    var disqus_url = \"http://localhost:4000/about/\";\n\n    (function() {\n        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;\n        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';\n        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);\n    })();\n</script>\n<!-- disqus 公共JS代码 end -->\n\n"
          ,
        
          "dir": "/about/"
          ,
        
          "excerpt": null
          ,
        
          "name": "about.html"
          ,
        
          "path": "about.html"
          ,
        
          "url": "/about/"
          
        
      }
      ,
      
    
      
      {
        "id": "/archive/",
        
          "title": "Archive"
          ,
        
          "layout": "default"
          ,
        
          "description": "「我干了什么 究竟拿了时间换了什么」"
          ,
        
          "header-img": "img/tag-bg.jpg"
          ,
        
          "content": "<!-- \nCredits: this page shamelessly borrowed a lot from:\nhttps://github.com/kitian616/jekyll-TeXt-theme\n-->\n<!-- Page Header -->\n\n\n\n\n\n\n\n<header class=\"intro-header\" style=\"background-image: url('/img/tag-bg.jpg')\">\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n        \n        <div class=\"site-heading\" id=\"tag-heading\">\n        \n          <h1>Archive</h1>\n          <span class=\"subheading\">「我干了什么 究竟拿了时间换了什么」</span>\n        </div>\n      </div>\n    </div>\n  </div>\n</header>\n\n\n<!-- Main Content -->\n<div class=\"container\">\n\t<div class=\"row\">\n\t\t<div class=\"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1\">\n\t\t\t<!-- Tags (as filter) -->\n\t\t\t<div id='tag_cloud' class=\"tags tags-sup js-tags\">\n\t\t\t\t<a class=\"tag-button--all\" data-encode=\"\">\n\t\t\t\t\tShow All\n\t\t\t\t\t<sup>22</sup>\n\t\t\t\t</a>\n\n\t\t\t\t\n        \n\t\t\t\t\n\t\t\t\t\n\t\t\t</div>\n\n            <!-- Article List -->\n\t\t\t<div class=\"mini-post-list js-result d-none\"><section>\n\t\t\t\t<span class=\"fa listing-seperator\">\n\t\t\t\t\t<span class=\"tag-text\">2024</span>\n\t\t\t\t</span><div class=\"post-preview item\" data-tags=\"\">\n\t\t\t\t    <a href=\"/2024/01/08/ios/\">\n\t\t\t\t        <h2 class=\"post-title\">\n                            iOS组件化实现之：实用工具沉淀及介绍\n\t\t\t\t        </h2>\n\t\t\t\t        \n\t\t\t\t        <h3 class=\"post-subtitle\">\n\t\t\t\t            组件化过程中，有一些重复/高频的问题需要解决，倘若手动解决会带来重复劳动的时间损失，以及没有沉淀的效率损失，为了避免上述损失，沉淀一些工具分享\n\t\t\t\t        </h3>\n\t\t\t\t        \n\t\t\t\t    </a>\n\t\t\t\t\t<hr>\n\t\t\t\t</div></section><section>\n\t\t\t\t<span class=\"fa listing-seperator\">\n\t\t\t\t\t<span class=\"tag-text\">2023</span>\n\t\t\t\t</span><div class=\"post-preview item\" data-tags=\"\">\n\t\t\t\t    <a href=\"/2023/11/08/%E6%9E%84%E5%BB%BA%E6%B5%81%E6%B0%B4%E7%BA%BF%E5%AE%9E%E8%B7%B5/\">\n\t\t\t\t        <h2 class=\"post-title\">\n                            构建流水线实践\n\t\t\t\t        </h2>\n\t\t\t\t        \n\t\t\t\t        <h3 class=\"post-subtitle\">\n\t\t\t\t            \n\t\t\t\t        </h3>\n\t\t\t\t        \n\t\t\t\t    </a>\n\t\t\t\t\t<hr>\n\t\t\t\t</div><div class=\"post-preview item\" data-tags=\"\">\n\t\t\t\t    <a href=\"/2023/10/07/%E6%8A%93%E5%8C%85%E5%AE%9E%E8%B7%B5/\">\n\t\t\t\t        <h2 class=\"post-title\">\n                            Charles HTTPS实践\n\t\t\t\t        </h2>\n\t\t\t\t        \n\t\t\t\t        <h3 class=\"post-subtitle\">\n\t\t\t\t            \n\t\t\t\t        </h3>\n\t\t\t\t        \n\t\t\t\t    </a>\n\t\t\t\t\t<hr>\n\t\t\t\t</div><div class=\"post-preview item\" data-tags=\"\">\n\t\t\t\t    <a href=\"/2023/10/07/%E7%BB%84%E4%BB%B6%E5%8C%96%E4%B9%8B%E5%88%86%E6%94%AF%E5%90%88%E5%B9%B6/\">\n\t\t\t\t        <h2 class=\"post-title\">\n                            组件化实践之：主工程抽离代码分支合并用\n\t\t\t\t        </h2>\n\t\t\t\t        \n\t\t\t\t        <h3 class=\"post-subtitle\">\n\t\t\t\t            \n\t\t\t\t        </h3>\n\t\t\t\t        \n\t\t\t\t    </a>\n\t\t\t\t\t<hr>\n\t\t\t\t</div><div class=\"post-preview item\" data-tags=\"\">\n\t\t\t\t    <a href=\"/2023/09/12/iOS-OC-Swift%E6%B7%B7%E7%BC%96/\">\n\t\t\t\t        <h2 class=\"post-title\">\n                            Pod仓库内OC与Swift调用\n\t\t\t\t        </h2>\n\t\t\t\t        \n\t\t\t\t        <h3 class=\"post-subtitle\">\n\t\t\t\t            \n\t\t\t\t        </h3>\n\t\t\t\t        \n\t\t\t\t    </a>\n\t\t\t\t\t<hr>\n\t\t\t\t</div><div class=\"post-preview item\" data-tags=\"\">\n\t\t\t\t    <a href=\"/2023/08/17/iOS%E7%BB%84%E4%BB%B6%E5%8C%96-%E4%B8%9A%E5%8A%A1%E7%BB%84%E4%BB%B6%E5%87%86%E5%A4%87%E7%AF%87/\">\n\t\t\t\t        <h2 class=\"post-title\">\n                            iOS组件化之：业务组件准备篇\n\t\t\t\t        </h2>\n\t\t\t\t        \n\t\t\t\t        <h3 class=\"post-subtitle\">\n\t\t\t\t            \n\t\t\t\t        </h3>\n\t\t\t\t        \n\t\t\t\t    </a>\n\t\t\t\t\t<hr>\n\t\t\t\t</div><div class=\"post-preview item\" data-tags=\"\">\n\t\t\t\t    <a href=\"/2023/08/11/Apple%E4%BC%81%E4%B8%9A%E8%B4%A6%E5%8F%B7%E6%B3%A8%E5%86%8C%E6%B5%81%E7%A8%8B/\">\n\t\t\t\t        <h2 class=\"post-title\">\n                            Apple 企业账号注册流程\n\t\t\t\t        </h2>\n\t\t\t\t        \n\t\t\t\t        <h3 class=\"post-subtitle\">\n\t\t\t\t            \n\t\t\t\t        </h3>\n\t\t\t\t        \n\t\t\t\t    </a>\n\t\t\t\t\t<hr>\n\t\t\t\t</div><div class=\"post-preview item\" data-tags=\"\">\n\t\t\t\t    <a href=\"/2023/08/08/iOS-%E8%AF%9D%E5%A4%96%E7%AF%87-%E6%9E%84%E5%BB%BA%E8%AF%A6%E8%A7%A3/\">\n\t\t\t\t        <h2 class=\"post-title\">\n                            iOS话外篇：构建详解\n\t\t\t\t        </h2>\n\t\t\t\t        \n\t\t\t\t        <h3 class=\"post-subtitle\">\n\t\t\t\t            \n\t\t\t\t        </h3>\n\t\t\t\t        \n\t\t\t\t    </a>\n\t\t\t\t\t<hr>\n\t\t\t\t</div><div class=\"post-preview item\" data-tags=\"\">\n\t\t\t\t    <a href=\"/2023/08/03/iOS-%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%9C%A8%E5%86%85%E7%BD%91%E8%81%94%E8%B0%83%E6%97%B6%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/\">\n\t\t\t\t        <h2 class=\"post-title\">\n                            iOS客户端在内网联调时的解决方案\n\t\t\t\t        </h2>\n\t\t\t\t        \n\t\t\t\t        <h3 class=\"post-subtitle\">\n\t\t\t\t            \n\t\t\t\t        </h3>\n\t\t\t\t        \n\t\t\t\t    </a>\n\t\t\t\t\t<hr>\n\t\t\t\t</div><div class=\"post-preview item\" data-tags=\"\">\n\t\t\t\t    <a href=\"/2023/08/02/iOS-%E7%BB%84%E4%BB%B6%E5%8C%96%E5%AE%9E%E8%B7%B5%E4%B9%8B-%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98%E5%8F%8A%E8%A7%A3%E5%86%B3%E8%BF%87%E7%A8%8B%E7%BA%AA%E8%A6%81-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0%E4%B8%AD/\">\n\t\t\t\t        <h2 class=\"post-title\">\n                            iOS组件化实践之：遇到的问题及解决过程纪要(持续更新中)\n\t\t\t\t        </h2>\n\t\t\t\t        \n\t\t\t\t        <h3 class=\"post-subtitle\">\n\t\t\t\t            \n\t\t\t\t        </h3>\n\t\t\t\t        \n\t\t\t\t    </a>\n\t\t\t\t\t<hr>\n\t\t\t\t</div><div class=\"post-preview item\" data-tags=\"\">\n\t\t\t\t    <a href=\"/2023/07/31/6-iOS-%E7%BB%84%E4%BB%B6%E5%8C%96-%E5%91%BD%E5%90%8D%E6%B3%A8%E9%87%8A%E7%AF%87/\">\n\t\t\t\t        <h2 class=\"post-title\">\n                            iOS组件化实践之：类命名注释篇\n\t\t\t\t        </h2>\n\t\t\t\t        \n\t\t\t\t        <h3 class=\"post-subtitle\">\n\t\t\t\t            \n\t\t\t\t        </h3>\n\t\t\t\t        \n\t\t\t\t    </a>\n\t\t\t\t\t<hr>\n\t\t\t\t</div><div class=\"post-preview item\" data-tags=\"\">\n\t\t\t\t    <a href=\"/2023/07/26/4-iOS%E7%BB%84%E4%BB%B6%E5%8C%96%E6%A8%A1%E6%9D%BF/\">\n\t\t\t\t        <h2 class=\"post-title\">\n                            iOS组件化实践之：新建一个Pod组件库\n\t\t\t\t        </h2>\n\t\t\t\t        \n\t\t\t\t        <h3 class=\"post-subtitle\">\n\t\t\t\t            \n\t\t\t\t        </h3>\n\t\t\t\t        \n\t\t\t\t    </a>\n\t\t\t\t\t<hr>\n\t\t\t\t</div><div class=\"post-preview item\" data-tags=\"\">\n\t\t\t\t    <a href=\"/2023/07/26/5-iOS%E7%BB%84%E4%BB%B6%E5%8C%96-%E8%B5%84%E6%BA%90%E7%BB%84%E4%BB%B6%E5%BA%93/\">\n\t\t\t\t        <h2 class=\"post-title\">\n                            iOS组件化实践之：资源组件库\n\t\t\t\t        </h2>\n\t\t\t\t        \n\t\t\t\t        <h3 class=\"post-subtitle\">\n\t\t\t\t            \n\t\t\t\t        </h3>\n\t\t\t\t        \n\t\t\t\t    </a>\n\t\t\t\t\t<hr>\n\t\t\t\t</div><div class=\"post-preview item\" data-tags=\"\">\n\t\t\t\t    <a href=\"/2023/07/20/iOS%E7%BB%84%E4%BB%B6%E5%8C%96%E5%AE%9E%E8%B7%B5%E4%BA%8C-%E5%AE%9E%E8%B7%B5%E8%BF%87%E7%A8%8B%E7%A2%B0%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/\">\n\t\t\t\t        <h2 class=\"post-title\">\n                            iOS组件化实践二：实践过程碰到的问题\n\t\t\t\t        </h2>\n\t\t\t\t        \n\t\t\t\t        <h3 class=\"post-subtitle\">\n\t\t\t\t            \n\t\t\t\t        </h3>\n\t\t\t\t        \n\t\t\t\t    </a>\n\t\t\t\t\t<hr>\n\t\t\t\t</div><div class=\"post-preview item\" data-tags=\"\">\n\t\t\t\t    <a href=\"/2023/07/14/iOS%E7%BB%84%E4%BB%B6%E5%8C%96%E5%AE%9E%E8%B7%B5%E4%B8%80_%E5%BA%8F%E8%A8%80/\">\n\t\t\t\t        <h2 class=\"post-title\">\n                            iOS组件化实践一：序言\n\t\t\t\t        </h2>\n\t\t\t\t        \n\t\t\t\t        <h3 class=\"post-subtitle\">\n\t\t\t\t            \n\t\t\t\t        </h3>\n\t\t\t\t        \n\t\t\t\t    </a>\n\t\t\t\t\t<hr>\n\t\t\t\t</div></section><section>\n\t\t\t\t<span class=\"fa listing-seperator\">\n\t\t\t\t\t<span class=\"tag-text\">2022</span>\n\t\t\t\t</span><div class=\"post-preview item\" data-tags=\"\">\n\t\t\t\t    <a href=\"/2022/09/26/Github%E5%A4%9A%E8%B4%A6%E5%8F%B7%E9%85%8D%E7%BD%AESSH/\">\n\t\t\t\t        <h2 class=\"post-title\">\n                            Github多账号配置SSH\n\t\t\t\t        </h2>\n\t\t\t\t        \n\t\t\t\t        <h3 class=\"post-subtitle\">\n\t\t\t\t            \n\t\t\t\t        </h3>\n\t\t\t\t        \n\t\t\t\t    </a>\n\t\t\t\t\t<hr>\n\t\t\t\t</div><div class=\"post-preview item\" data-tags=\"\">\n\t\t\t\t    <a href=\"/2022/09/25/App%E7%98%A6%E8%BA%AB%E5%AE%9E%E8%B7%B5%E4%B9%8B%E6%89%B9%E9%87%8F%E8%BD%AC%E6%8D%A2webp/\">\n\t\t\t\t        <h2 class=\"post-title\">\n                            App瘦身实践之批量转换webp\n\t\t\t\t        </h2>\n\t\t\t\t        \n\t\t\t\t        <h3 class=\"post-subtitle\">\n\t\t\t\t            \n\t\t\t\t        </h3>\n\t\t\t\t        \n\t\t\t\t    </a>\n\t\t\t\t\t<hr>\n\t\t\t\t</div><div class=\"post-preview item\" data-tags=\"\">\n\t\t\t\t    <a href=\"/2022/01/19/iOS-OpenType/\">\n\t\t\t\t        <h2 class=\"post-title\">\n                            iOS应用接收文件打开类型\n\t\t\t\t        </h2>\n\t\t\t\t        \n\t\t\t\t        <h3 class=\"post-subtitle\">\n\t\t\t\t            \n\t\t\t\t        </h3>\n\t\t\t\t        \n\t\t\t\t    </a>\n\t\t\t\t\t<hr>\n\t\t\t\t</div></section><section>\n\t\t\t\t<span class=\"fa listing-seperator\">\n\t\t\t\t\t<span class=\"tag-text\">2021</span>\n\t\t\t\t</span><div class=\"post-preview item\" data-tags=\"\">\n\t\t\t\t    <a href=\"/2021/10/18/git/\">\n\t\t\t\t        <h2 class=\"post-title\">\n                            多账号配置GIT\n\t\t\t\t        </h2>\n\t\t\t\t        \n\t\t\t\t        <h3 class=\"post-subtitle\">\n\t\t\t\t            \n\t\t\t\t        </h3>\n\t\t\t\t        \n\t\t\t\t    </a>\n\t\t\t\t\t<hr>\n\t\t\t\t</div><div class=\"post-preview item\" data-tags=\"\">\n\t\t\t\t    <a href=\"/2021/09/13/crash/\">\n\t\t\t\t        <h2 class=\"post-title\">\n                            iOS 10.x 内存Crash 排查 纪要\n\t\t\t\t        </h2>\n\t\t\t\t        \n\t\t\t\t        <h3 class=\"post-subtitle\">\n\t\t\t\t            This is a subtitle\n\t\t\t\t        </h3>\n\t\t\t\t        \n\t\t\t\t    </a>\n\t\t\t\t\t<hr>\n\t\t\t\t</div><div class=\"post-preview item\" data-tags=\"\">\n\t\t\t\t    <a href=\"/2021/06/20/new-post/\">\n\t\t\t\t        <h2 class=\"post-title\">\n                            Jenkins迁移\n\t\t\t\t        </h2>\n\t\t\t\t        \n\t\t\t\t        <h3 class=\"post-subtitle\">\n\t\t\t\t            This is a subtitle\n\t\t\t\t        </h3>\n\t\t\t\t        \n\t\t\t\t    </a>\n\t\t\t\t\t<hr>\n\t\t\t\t</div><div class=\"post-preview item\" data-tags=\"\">\n\t\t\t\t    <a href=\"/2021/03/21/rn___/\">\n\t\t\t\t        <h2 class=\"post-title\">\n                            RN 采坑\n\t\t\t\t        </h2>\n\t\t\t\t        \n\t\t\t\t    </a>\n\t\t\t\t\t<hr>\n\t\t\t\t</div></section>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</div>\n"
          ,
        
          "dir": "/archive/"
          ,
        
          "excerpt": null
          ,
        
          "name": "archive.html"
          ,
        
          "path": "archive.html"
          ,
        
          "url": "/archive/"
          
        
      }
      ,
      
    
      
    
      
      {
        "id": "/feed.xml",
        
          "layout": null
          ,
        
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rss version=\"2.0\" xmlns:atom=\"http://www.w3.org/2005/Atom\">\n  <channel>\n    <title>{{ site.title | xml_escape }}</title>\n    <description>{{ site.description | xml_escape }}</description>\n    <link>{{ site.url }}{{ site.baseurl }}/</link>\n    <atom:link href=\"{{ \"/feed.xml\" | prepend: site.baseurl | prepend: site.url }}\" rel=\"self\" type=\"application/rss+xml\" />\n    <pubDate>{{ site.time | date_to_rfc822 }}</pubDate>\n    <lastBuildDate>{{ site.time | date_to_rfc822 }}</lastBuildDate>\n    <generator>Jekyll v{{ jekyll.version }}</generator>\n    {% for post in site.posts limit:10 %}\n      <item>\n        <title>{{ post.title | xml_escape }}</title>\n        <description>{{ post.content | xml_escape }}</description>\n        <pubDate>{{ post.date | date_to_rfc822 }}</pubDate>\n        <link>{{ post.url | prepend: site.baseurl | prepend: site.url }}</link>\n        <guid isPermaLink=\"true\">{{ post.url | prepend: site.baseurl | prepend: site.url }}</guid>\n        {% for tag in post.tags %}\n        <category>{{ tag | xml_escape }}</category>\n        {% endfor %}\n        {% for cat in post.categories %}\n        <category>{{ cat | xml_escape }}</category>\n        {% endfor %}\n      </item>\n    {% endfor %}\n  </channel>\n</rss>\n"
          ,
        
          "dir": "/"
          ,
        
          "excerpt": null
          ,
        
          "name": "feed.xml"
          ,
        
          "path": "feed.xml"
          ,
        
          "url": "/feed.xml"
          
        
      }
      ,
      
    
      
      {
        "id": "/",
        
          "layout": "page"
          ,
        
          "description": "「认识自己，接纳自己；改变自己；超越自己」"
          ,
        
          "content": "{% for post in paginator.posts %}\n<div class=\"post-preview\">\n    <a href=\"{{ post.url | prepend: site.baseurl }}\">\n        <h2 class=\"post-title\">\n            {{ post.title }}\n        </h2>\n        {% if post.subtitle %}\n        <h3 class=\"post-subtitle\">\n            {{ post.subtitle }}\n        </h3>\n        {% endif %}\n        <div class=\"post-content-preview\">\n            {% if post.lang == 'en' %}\n                {{ post.content | strip_html | truncate:300 }}\n            {% else %}\n                {{ post.content | strip_html | truncate:200 }}\n            {% endif %}\n        </div>\n    </a>\n    <p class=\"post-meta\">\n        Posted by {% if post.author %}{{ post.author }}{% else %}{{ site.title }}{% endif %} on {{ post.date | date: \"%B %-d, %Y\" }}\n    </p>\n</div>\n<hr>\n{% endfor %}\n\n<!-- Pager -->\n{% if paginator.total_pages > 1 %}\n<ul class=\"pager\">\n    {% if paginator.previous_page %}\n    <li class=\"previous\">\n        <a href=\"{{ paginator.previous_page_path | prepend: site.baseurl | replace: '//', '/' }}\">&larr; Newer Posts</a>\n    </li>\n    {% endif %}\n    {% if paginator.next_page %}\n    <li class=\"next\">\n        <a href=\"{{ paginator.next_page_path | prepend: site.baseurl | replace: '//', '/' }}\">Older Posts &rarr;</a>\n    </li>\n    {% endif %}\n</ul>\n{% endif %}\n"
          ,
        
          "dir": "/"
          ,
        
          "excerpt": null
          ,
        
          "name": "index.html"
          ,
        
          "path": "index.html"
          ,
        
          "url": "/"
          
        
      }
      ,
      
    
      
      {
        "id": "/offline.html",
        
          "layout": "default"
          ,
        
          "title": "Offline"
          ,
        
          "hide-in-nav": true
          ,
        
          "description": "阅读过的页面可以在离线时访问哦 ;)"
          ,
        
          "header-img": "img/404-bg.jpg"
          ,
        
          "permalink": "/offline.html"
          ,
        
          "content": "<!-- Page Header -->\n{% include intro-header.html type=\"page\" %}\n\n<script>\n\tdocument.body.classList.add('page-fullscreen');\n</script>\n"
          ,
        
          "dir": "/"
          ,
        
          "excerpt": null
          ,
        
          "name": "offline.html"
          ,
        
          "path": "offline.html"
          ,
        
          "url": "/offline.html"
          
        
      }
      ,
      
    
      
      {
        "id": "/search.json",
        
          "layout": null
          ,
        
          "content": "[\n  {% for post in site.posts %}\n    {\n      \"title\"    : \"{{ post.title | escape }}\",\n      \"subtitle\" : \"{{ post.subtitle | escape }}\",\n      \"tags\"     : \"{{ post.tags | join: ', ' }}\",\n      \"url\"      : \"{{ site.baseurl }}{{ post.url }}\",\n      \"date\"     : \"{{ post.date }}\"\n    } {% unless forloop.last %},{% endunless %}\n  {% endfor %}\n]"
          ,
        
          "dir": "/"
          ,
        
          "excerpt": null
          ,
        
          "name": "search.json"
          ,
        
          "path": "search.json"
          ,
        
          "url": "/search.json"
          
        
      }
      ,
      
    
      
      {
        "id": "/page2/",
        
          "layout": "page"
          ,
        
          "description": "「认识自己，接纳自己；改变自己；超越自己」"
          ,
        
          "content": "{% for post in paginator.posts %}\n<div class=\"post-preview\">\n    <a href=\"{{ post.url | prepend: site.baseurl }}\">\n        <h2 class=\"post-title\">\n            {{ post.title }}\n        </h2>\n        {% if post.subtitle %}\n        <h3 class=\"post-subtitle\">\n            {{ post.subtitle }}\n        </h3>\n        {% endif %}\n        <div class=\"post-content-preview\">\n            {% if post.lang == 'en' %}\n                {{ post.content | strip_html | truncate:300 }}\n            {% else %}\n                {{ post.content | strip_html | truncate:200 }}\n            {% endif %}\n        </div>\n    </a>\n    <p class=\"post-meta\">\n        Posted by {% if post.author %}{{ post.author }}{% else %}{{ site.title }}{% endif %} on {{ post.date | date: \"%B %-d, %Y\" }}\n    </p>\n</div>\n<hr>\n{% endfor %}\n\n<!-- Pager -->\n{% if paginator.total_pages > 1 %}\n<ul class=\"pager\">\n    {% if paginator.previous_page %}\n    <li class=\"previous\">\n        <a href=\"{{ paginator.previous_page_path | prepend: site.baseurl | replace: '//', '/' }}\">&larr; Newer Posts</a>\n    </li>\n    {% endif %}\n    {% if paginator.next_page %}\n    <li class=\"next\">\n        <a href=\"{{ paginator.next_page_path | prepend: site.baseurl | replace: '//', '/' }}\">Older Posts &rarr;</a>\n    </li>\n    {% endif %}\n</ul>\n{% endif %}\n"
          ,
        
          "dir": "/page2/"
          ,
        
          "excerpt": null
          ,
        
          "name": "index.html"
          ,
        
          "path": "index.html"
          ,
        
          "url": "/page2/"
          
        
      }
      ,
      
    
      
      {
        "id": "/page3/",
        
          "layout": "page"
          ,
        
          "description": "「认识自己，接纳自己；改变自己；超越自己」"
          ,
        
          "content": "{% for post in paginator.posts %}\n<div class=\"post-preview\">\n    <a href=\"{{ post.url | prepend: site.baseurl }}\">\n        <h2 class=\"post-title\">\n            {{ post.title }}\n        </h2>\n        {% if post.subtitle %}\n        <h3 class=\"post-subtitle\">\n            {{ post.subtitle }}\n        </h3>\n        {% endif %}\n        <div class=\"post-content-preview\">\n            {% if post.lang == 'en' %}\n                {{ post.content | strip_html | truncate:300 }}\n            {% else %}\n                {{ post.content | strip_html | truncate:200 }}\n            {% endif %}\n        </div>\n    </a>\n    <p class=\"post-meta\">\n        Posted by {% if post.author %}{{ post.author }}{% else %}{{ site.title }}{% endif %} on {{ post.date | date: \"%B %-d, %Y\" }}\n    </p>\n</div>\n<hr>\n{% endfor %}\n\n<!-- Pager -->\n{% if paginator.total_pages > 1 %}\n<ul class=\"pager\">\n    {% if paginator.previous_page %}\n    <li class=\"previous\">\n        <a href=\"{{ paginator.previous_page_path | prepend: site.baseurl | replace: '//', '/' }}\">&larr; Newer Posts</a>\n    </li>\n    {% endif %}\n    {% if paginator.next_page %}\n    <li class=\"next\">\n        <a href=\"{{ paginator.next_page_path | prepend: site.baseurl | replace: '//', '/' }}\">Older Posts &rarr;</a>\n    </li>\n    {% endif %}\n</ul>\n{% endif %}\n"
          ,
        
          "dir": "/page3/"
          ,
        
          "excerpt": null
          ,
        
          "name": "index.html"
          ,
        
          "path": "index.html"
          ,
        
          "url": "/page3/"
          
        
      }
      
      
    
  ],
  "data": {}
}
